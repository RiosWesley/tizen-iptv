{"version":3,"file":"static/js/main.46293eed.js","mappings":";sCAcA,IAAIA,EAAYC,EAAQ,KACtBC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,KACrB,SAASG,EAAuBC,GAC9B,IAAIC,EAAM,4BAA8BD,EACxC,GAAI,EAAIE,UAAUC,OAAQ,CACxBF,GAAO,WAAaG,mBAAmBF,UAAU,IACjD,IAAK,IAAIG,EAAI,EAAGA,EAAIH,UAAUC,OAAQE,IACpCJ,GAAO,WAAaG,mBAAmBF,UAAUG,GACrD,CACA,MACE,yBACAL,EACA,WACAC,EACA,gHAEJ,CACA,SAASK,EAAiBC,GACxB,SACGA,GACA,IAAMA,EAAKC,UAAY,IAAMD,EAAKC,UAAY,KAAOD,EAAKC,SAE/D,CACA,SAASC,EAAuBC,GAC9B,IAAIH,EAAOG,EACTC,EAAiBD,EACnB,GAAIA,EAAME,UAAW,KAAOL,EAAKM,QAAUN,EAAOA,EAAKM,WAClD,CACHH,EAAQH,EACR,GAEI,KAAoB,MADrBA,EAAOG,GACMI,SAAkBH,EAAiBJ,EAAKM,QACnDH,EAAQH,EAAKM,aACXH,EACT,CACA,OAAO,IAAMH,EAAKQ,IAAMJ,EAAiB,IAC3C,CACA,SAASK,EAA6BN,GACpC,GAAI,KAAOA,EAAMK,IAAK,CACpB,IAAIE,EAAgBP,EAAMQ,cAI1B,GAHA,OAASD,IAEP,QADEP,EAAQA,EAAME,aACGK,EAAgBP,EAAMQ,gBACvC,OAASD,EAAe,OAAOA,EAAcE,UACnD,CACA,OAAO,IACT,CACA,SAASC,EAAgBV,GACvB,GAAID,EAAuBC,KAAWA,EACpC,MAAMW,MAAMtB,EAAuB,KACvC,CAqEA,SAASuB,EAAyBf,GAChC,IAAIQ,EAAMR,EAAKQ,IACf,GAAI,IAAMA,GAAO,KAAOA,GAAO,KAAOA,GAAO,IAAMA,EAAK,OAAOR,EAC/D,IAAKA,EAAOA,EAAKgB,MAAO,OAAShB,GAAQ,CAEvC,GAAI,QADJQ,EAAMO,EAAyBf,IACb,OAAOQ,EACzBR,EAAOA,EAAKiB,OACd,CACA,OAAO,IACT,CACA,IAAIC,EAASC,OAAOD,OAClBE,EAA4BC,OAAOC,IAAI,iBACvCC,EAAqBF,OAAOC,IAAI,8BAChCE,EAAoBH,OAAOC,IAAI,gBAC/BG,EAAsBJ,OAAOC,IAAI,kBACjCI,EAAyBL,OAAOC,IAAI,qBACpCK,EAAsBN,OAAOC,IAAI,kBACjCM,EAAsBP,OAAOC,IAAI,kBACjCO,EAAsBR,OAAOC,IAAI,kBACjCQ,EAAqBT,OAAOC,IAAI,iBAChCS,EAAyBV,OAAOC,IAAI,qBACpCU,EAAsBX,OAAOC,IAAI,kBACjCW,EAA2BZ,OAAOC,IAAI,uBACtCY,EAAkBb,OAAOC,IAAI,cAC7Ba,EAAkBd,OAAOC,IAAI,cAC/BD,OAAOC,IAAI,eACX,IAAIc,EAAsBf,OAAOC,IAAI,kBACrCD,OAAOC,IAAI,uBACXD,OAAOC,IAAI,wBACX,IAAIe,EAA4BhB,OAAOC,IAAI,6BAC3CD,OAAOC,IAAI,yBACX,IAAIgB,EAAwBjB,OAAOkB,SACnC,SAASC,EAAcC,GACrB,OAAI,OAASA,GAAiB,kBAAoBA,EAAsB,KAIjE,oBAHPA,EACGH,GAAyBG,EAAcH,IACxCG,EAAc,eAC6BA,EAAgB,IAC/D,CACA,IAAIC,EAAyBrB,OAAOC,IAAI,0BACxC,SAASqB,EAAyBC,GAChC,GAAI,MAAQA,EAAM,OAAO,KACzB,GAAI,oBAAsBA,EACxB,OAAOA,EAAKC,WAAaH,EACrB,KACAE,EAAKE,aAAeF,EAAKG,MAAQ,KACvC,GAAI,kBAAoBH,EAAM,OAAOA,EACrC,OAAQA,GACN,KAAKnB,EACH,MAAO,WACT,KAAKE,EACH,MAAO,WACT,KAAKD,EACH,MAAO,aACT,KAAKM,EACH,MAAO,WACT,KAAKC,EACH,MAAO,eACT,KAAKG,EACH,MAAO,WAEX,GAAI,kBAAoBQ,EACtB,OAAQA,EAAKC,UACX,KAAKrB,EACH,MAAO,SACT,KAAKM,EACH,OAAQc,EAAKE,aAAe,WAAa,YAC3C,KAAKjB,EACH,OAAQe,EAAKI,SAASF,aAAe,WAAa,YACpD,KAAKf,EACH,IAAIkB,EAAYL,EAAKM,OAKrB,OAJAN,EAAOA,EAAKE,eAGTF,EAAO,MADNA,EAAOK,EAAUH,aAAeG,EAAUF,MAAQ,IAC9B,cAAgBH,EAAO,IAAM,cAC9CA,EACT,KAAKV,EACH,OAEE,QADCe,EAAYL,EAAKE,aAAe,MAE7BG,EACAN,EAAyBC,EAAKA,OAAS,OAE/C,KAAKT,EACHc,EAAYL,EAAKO,SACjBP,EAAOA,EAAKQ,MACZ,IACE,OAAOT,EAAyBC,EAAKK,GACvC,CAAE,MAAOI,GAAI,EAEnB,OAAO,IACT,CACA,IAAIC,EAAcC,MAAMC,QACtBC,EACEnE,EAAMoE,gEACRC,EACEpE,EAASqE,6DACXC,EAAyB,CACvBC,SAAS,EACTC,KAAM,KACNC,OAAQ,KACRC,OAAQ,MAEVC,EAAa,GACbC,GAAS,EACX,SAASC,EAAaC,GACpB,MAAO,CAAEC,QAASD,EACpB,CACA,SAASE,EAAIC,GACX,EAAIL,IACAK,EAAOF,QAAUJ,EAAWC,GAAUD,EAAWC,GAAS,KAAOA,IACvE,CACA,SAASM,EAAKD,EAAQE,GACpBP,IACAD,EAAWC,GAASK,EAAOF,QAC3BE,EAAOF,QAAUI,CACnB,CACA,IAAIC,EAAqBP,EAAa,MACpCQ,EAA0BR,EAAa,MACvCS,EAA0BT,EAAa,MACvCU,EAA+BV,EAAa,MAC9C,SAASW,EAAkB5E,EAAO6E,GAIhC,OAHAP,EAAKI,EAAyBG,GAC9BP,EAAKG,EAAyBzE,GAC9BsE,EAAKE,EAAoB,MACjBK,EAAiB/E,UACvB,KAAK,EACL,KAAK,GACHE,GAASA,EAAQ6E,EAAiBC,mBAC7B9E,EAAQA,EAAM+E,cACbC,GAAkBhF,GAEpB,EACJ,MACF,QACE,GACIA,EAAQ6E,EAAiBI,QAC1BJ,EAAmBA,EAAiBE,aAGlC/E,EAAQkF,GADVL,EAAmBG,GAAkBH,GACe7E,QAErD,OAAQA,GACN,IAAK,MACHA,EAAQ,EACR,MACF,IAAK,OACHA,EAAQ,EACR,MACF,QACEA,EAAQ,GAGlBoE,EAAII,GACJF,EAAKE,EAAoBxE,EAC3B,CACA,SAASmF,IACPf,EAAII,GACJJ,EAAIK,GACJL,EAAIM,EACN,CACA,SAASU,EAAgBpF,GACvB,OAASA,EAAMQ,eAAiB8D,EAAKK,EAA8B3E,GACnE,IAAIqF,EAAUb,EAAmBL,QAC7BmB,EAA2BJ,GAAwBG,EAASrF,EAAMyC,MACtE4C,IAAYC,IACThB,EAAKG,EAAyBzE,GAC/BsE,EAAKE,EAAoBc,GAC7B,CACA,SAASC,EAAevF,GACtByE,EAAwBN,UAAYnE,IACjCoE,EAAII,GAAqBJ,EAAIK,IAChCE,EAA6BR,UAAYnE,IACtCoE,EAAIO,GACJa,GAAsBC,cAAgB/B,EAC3C,CACA,IAAIgC,EAAiB1E,OAAO2E,UAAUD,eACpCE,EAAqB3G,EAAU4G,0BAC/BC,EAAmB7G,EAAU8G,wBAC7BC,EAAc/G,EAAUgH,qBACxBC,GAAejH,EAAUkH,sBACzBC,GAAMnH,EAAUoH,aAChBC,GAA0BrH,EAAUsH,iCACpCC,GAAoBvH,EAAUwH,2BAC9BC,GAAuBzH,EAAU0H,8BACjCC,GAAmB3H,EAAU4H,wBAC7BC,GAAc7H,EAAU8H,qBACxBC,GAAe/H,EAAUgI,sBACzBC,GAAQjI,EAAUkI,IAClBC,GAAgCnI,EAAUmI,8BAC1CC,GAAa,KACbC,GAAe,KACjB,SAASC,GAA2BC,GAElC,GADA,oBAAsBN,IAASE,GAA8BI,GACzDF,IAAgB,oBAAsBA,GAAaG,cACrD,IACEH,GAAaG,cAAcJ,GAAYG,EACzC,CAAE,MAAOE,GAAM,CACnB,CACA,IAAIC,GAAQC,KAAKD,MAAQC,KAAKD,MAG9B,SAAuBzE,GAErB,OAAO,KADPA,KAAO,GACU,GAAM,IAAOiE,GAAIjE,GAAK2E,GAAO,GAAM,CACtD,EALEV,GAAMS,KAAKT,IACXU,GAAMD,KAAKC,IAKb,IAAIC,GAAqB,IACvBC,GAAgB,QAClB,SAASC,GAAwBC,GAC/B,IAAIC,EAA2B,GAARD,EACvB,GAAI,IAAMC,EAAkB,OAAOA,EACnC,OAAQD,GAASA,GACf,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,GACH,OAAO,GACT,KAAK,GACH,OAAO,GACT,KAAK,GACH,OAAO,GACT,KAAK,IACH,OAAO,IACT,KAAK,IACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,QACH,OAAe,QAARA,EACT,KAAK,QACL,KAAK,QACL,KAAK,SACL,KAAK,SACH,OAAe,SAARA,EACT,KAAK,SACH,OAAO,SACT,KAAK,UACH,OAAO,UACT,KAAK,UACH,OAAO,UACT,KAAK,UACH,OAAO,UACT,KAAK,WACH,OAAO,EACT,QACE,OAAOA,EAEb,CACA,SAASE,GAAaC,EAAMC,EAAUC,GACpC,IAAIC,EAAeH,EAAKG,aACxB,GAAI,IAAMA,EAAc,OAAO,EAC/B,IAAIC,EAAY,EACdC,EAAiBL,EAAKK,eACtBC,EAAcN,EAAKM,YACrBN,EAAOA,EAAKO,UACZ,IAAIC,EAAqC,UAAfL,EAqB1B,OApBA,IAAMK,EAEF,KADEL,EAAeK,GAAuBH,GAEnCD,EAAYR,GAAwBO,GAErC,KADEG,GAAeE,GAEZJ,EAAYR,GAAwBU,GACrCJ,GAEA,KADEA,EAAuBM,GAAuBR,KAE7CI,EAAYR,GAAwBM,IAE/C,KADEM,EAAsBL,GAAgBE,GAEnCD,EAAYR,GAAwBY,GACrC,IAAMF,EACHF,EAAYR,GAAwBU,GACrCJ,GAEA,KADEA,EAAuBC,GAAgBH,KAEtCI,EAAYR,GAAwBM,IAC1C,IAAME,EACT,EACA,IAAMH,GACJA,IAAaG,GACb,KAAOH,EAAWI,MAChBA,EAAiBD,GAAaA,KAC/BF,EAAuBD,GAAYA,IAEjC,KAAOI,GAAkB,KAA8B,QAAvBH,IACnCD,EACAG,CACR,CACA,SAASK,GAA0BT,EAAMU,GACvC,OACE,KACCV,EAAKG,eACFH,EAAKK,gBAAkBL,EAAKM,aAC9BI,EAEN,CACA,SAASC,GAAsBC,EAAMC,GACnC,OAAQD,GACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GACH,OAAOC,EAAc,IACvB,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,QACH,OAAOA,EAAc,IAYvB,QACE,OAAQ,EAEd,CACA,SAASC,KACP,IAAIF,EAAOlB,GAGX,OADA,KAA4B,SAD5BA,KAAuB,MACkBA,GAAqB,KACvDkB,CACT,CACA,SAASG,KACP,IAAIH,EAAOjB,GAGX,OADA,KAAuB,UADvBA,KAAkB,MACmBA,GAAgB,SAC9CiB,CACT,CACA,SAASI,GAAcC,GACrB,IAAK,IAAIC,EAAU,GAAI3J,EAAI,EAAG,GAAKA,EAAGA,IAAK2J,EAAQhF,KAAK+E,GACxD,OAAOC,CACT,CACA,SAASC,GAAkBnB,EAAMoB,GAC/BpB,EAAKG,cAAgBiB,EACrB,YAAcA,IACVpB,EAAKK,eAAiB,EAAKL,EAAKM,YAAc,EAAKN,EAAKO,UAAY,EAC1E,CAiDA,SAASc,GAAwBrB,EAAMsB,EAAaC,GAClDvB,EAAKG,cAAgBmB,EACrBtB,EAAKK,iBAAmBiB,EACxB,IAAIE,EAAmB,GAAKjC,GAAM+B,GAClCtB,EAAKuB,gBAAkBD,EACvBtB,EAAKyB,cAAcD,GAEjB,WADAxB,EAAKyB,cAAcD,GAED,QAAjBD,CACL,CACA,SAASG,GAAkB1B,EAAMuB,GAC/B,IAAII,EAAsB3B,EAAKuB,gBAAkBA,EACjD,IAAKvB,EAAOA,EAAKyB,cAAeE,GAAsB,CACpD,IAAIC,EAAU,GAAKrC,GAAMoC,GACvBf,EAAO,GAAKgB,EACbhB,EAAOW,EAAmBvB,EAAK4B,GAAWL,IACxCvB,EAAK4B,IAAYL,GACpBI,IAAuBf,CACzB,CACF,CACA,SAASiB,GAAgCjB,GACvC,OAAQA,GACN,KAAK,EACHA,EAAO,EACP,MACF,KAAK,EACHA,EAAO,EACP,MACF,KAAK,GACHA,EAAO,GACP,MACF,KAAK,IACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,SACL,KAAK,SACHA,EAAO,IACP,MACF,KAAK,UACHA,EAAO,UACP,MACF,QACEA,EAAO,EAEX,OAAOA,CACT,CACA,SAASkB,GAAqBjC,GAE5B,OAAO,GADPA,IAAUA,GAEN,EAAIA,EACF,KAAe,UAARA,GACL,GACA,UACF,EACF,CACN,CACA,SAASkC,KACP,IAAIC,EAAiB5G,EAAwB6G,EAC7C,OAAI,IAAMD,EAAuBA,OAE1B,KADPA,EAAiBE,OAAOC,OACW,GAAKC,GAAiBJ,EAAe3H,KAC1E,CASA,IAAIgI,GAAY7C,KAAK8C,SAASC,SAAS,IAAIC,MAAM,GAC/CC,GAAsB,gBAAkBJ,GACxCK,GAAmB,gBAAkBL,GACrCM,GAA+B,oBAAsBN,GACrDO,GAA2B,iBAAmBP,GAC9CQ,GAAmC,oBAAsBR,GACzDS,GAA6B,kBAAoBT,GACjDU,GAA+B,oBAAsBV,GACrDW,GAA0B,iBAAmBX,GAC/C,SAASY,GAAsBxL,UACtBA,EAAKgL,WACLhL,EAAKiL,WACLjL,EAAKmL,WACLnL,EAAKoL,WACLpL,EAAKqL,GACd,CACA,SAASI,GAA2BC,GAClC,IAAIC,EAAaD,EAAWV,IAC5B,GAAIW,EAAY,OAAOA,EACvB,IAAK,IAAIC,EAAaF,EAAWE,WAAYA,GAAc,CACzD,GACGD,EACCC,EAAWV,KACXU,EAAWZ,IACb,CAEA,GADAY,EAAaD,EAAWtL,UAEtB,OAASsL,EAAW3K,OACnB,OAAS4K,GAAc,OAASA,EAAW5K,MAE5C,IACE0K,EAAaG,GAA0BH,GACvC,OAASA,GAET,CACA,GAAKE,EAAaF,EAAWV,IAAuB,OAAOY,EAC3DF,EAAaG,GAA0BH,EACzC,CACF,OAAOC,CACT,CAEAC,GADAF,EAAaE,GACWA,UAC1B,CACA,OAAO,IACT,CACA,SAASE,GAAoB9L,GAC3B,GACGA,EAAOA,EAAKgL,KAAwBhL,EAAKkL,IAC1C,CACA,IAAI1K,EAAMR,EAAKQ,IACf,GACE,IAAMA,GACN,IAAMA,GACN,KAAOA,GACP,KAAOA,GACP,KAAOA,GACP,IAAMA,EAEN,OAAOR,CACX,CACA,OAAO,IACT,CACA,SAAS+L,GAAoBC,GAC3B,IAAIxL,EAAMwL,EAAKxL,IACf,GAAI,IAAMA,GAAO,KAAOA,GAAO,KAAOA,GAAO,IAAMA,EAAK,OAAOwL,EAAKC,UACpE,MAAMnL,MAAMtB,EAAuB,IACrC,CACA,SAAS0M,GAAqB3D,GAC5B,IAAI4D,EAAY5D,EAAK+C,IAIrB,OAHAa,IACGA,EAAY5D,EAAK+C,IAChB,CAAEc,gBAAiB,IAAIC,IAAOC,iBAAkB,IAAID,MACjDF,CACT,CACA,SAASI,GAAoBvM,GAC3BA,EAAKuL,KAA2B,CAClC,CACA,IAAIiB,GAAkB,IAAIC,IACxBC,GAA+B,CAAC,EAClC,SAASC,GAAsBC,EAAkBC,GAC/CC,GAAoBF,EAAkBC,GACtCC,GAAoBF,EAAmB,UAAWC,EACpD,CACA,SAASC,GAAoBF,EAAkBC,GAE7C,IADAH,GAA6BE,GAAoBC,EAE/CD,EAAmB,EACnBA,EAAmBC,EAAajN,OAChCgN,IAEAJ,GAAgBO,IAAIF,EAAaD,GACrC,CACA,IA8DII,GAAQC,GA9DRC,GAA6BC,OAC7B,iZAEFC,GAA4B,CAAC,EAC7BC,GAA8B,CAAC,EAUjC,SAASC,GAAqBtN,EAAM+C,EAAM2B,GACxC,GAV2B6I,EAUHxK,EATpB8C,EAAe2H,KAAKH,GAA6BE,KAEjD1H,EAAe2H,KAAKJ,GAA2BG,KAC/CL,GAA2BO,KAAKF,GAC1BF,GAA4BE,IAAiB,GACvDH,GAA0BG,IAAiB,EACpC,IAIL,GAAI,OAAS7I,EAAO1E,EAAK0N,gBAAgB3K,OACpC,CACH,cAAe2B,GACb,IAAK,YACL,IAAK,WACL,IAAK,SAEH,YADA1E,EAAK0N,gBAAgB3K,GAEvB,IAAK,UACH,IAAI4K,EAAW5K,EAAK6K,cAAc7C,MAAM,EAAG,GAC3C,GAAI,UAAY4C,GAAY,UAAYA,EAEtC,YADA3N,EAAK0N,gBAAgB3K,GAI3B/C,EAAK6N,aAAa9K,EAAM,GAAK2B,EAC/B,CA3BJ,IAA6B6I,CA4B7B,CACA,SAASO,GAA0B9N,EAAM+C,EAAM2B,GAC7C,GAAI,OAASA,EAAO1E,EAAK0N,gBAAgB3K,OACpC,CACH,cAAe2B,GACb,IAAK,YACL,IAAK,WACL,IAAK,SACL,IAAK,UAEH,YADA1E,EAAK0N,gBAAgB3K,GAGzB/C,EAAK6N,aAAa9K,EAAM,GAAK2B,EAC/B,CACF,CACA,SAASqJ,GAA+B/N,EAAMgO,EAAWjL,EAAM2B,GAC7D,GAAI,OAASA,EAAO1E,EAAK0N,gBAAgB3K,OACpC,CACH,cAAe2B,GACb,IAAK,YACL,IAAK,WACL,IAAK,SACL,IAAK,UAEH,YADA1E,EAAK0N,gBAAgB3K,GAGzB/C,EAAKiO,eAAeD,EAAWjL,EAAM,GAAK2B,EAC5C,CACF,CAEA,SAASwJ,GAA8BnL,GACrC,QAAI,IAAWiK,GACb,IACE,MAAMlM,OACR,CAAE,MAAOuC,GACP,IAAI8K,EAAQ9K,EAAE+K,MAAMC,OAAOF,MAAM,gBACjCnB,GAAUmB,GAASA,EAAM,IAAO,GAChClB,IACG,EAAI5J,EAAE+K,MAAME,QAAQ,YACjB,kBACC,EAAIjL,EAAE+K,MAAME,QAAQ,KACnB,eACA,EACV,CACF,MAAO,KAAOtB,GAASjK,EAAOkK,EAChC,CACA,IAAIsB,IAAU,EACd,SAASC,GAA6BC,EAAIC,GACxC,IAAKD,GAAMF,GAAS,MAAO,GAC3BA,IAAU,EACV,IAAII,EAA4B7N,MAAM8N,kBACtC9N,MAAM8N,uBAAoB,EAC1B,IACE,IAAIC,EAAiB,CACnBC,4BAA6B,WAC3B,IACE,GAAIJ,EAAW,CACb,IAAIK,EAAO,WACT,MAAMjO,OACR,EAMA,GALAK,OAAO6N,eAAeD,EAAKjJ,UAAW,QAAS,CAC7CmJ,IAAK,WACH,MAAMnO,OACR,IAEE,kBAAoBoO,SAAWA,QAAQR,UAAW,CACpD,IACEQ,QAAQR,UAAUK,EAAM,GAC1B,CAAE,MAAO1L,GACP,IAAI8L,EAAU9L,CAChB,CACA6L,QAAQR,UAAUD,EAAI,GAAIM,EAC5B,KAAO,CACL,IACEA,EAAKvB,MACP,CAAE,MAAO4B,GACPD,EAAUC,CACZ,CACAX,EAAGjB,KAAKuB,EAAKjJ,UACf,CACF,KAAO,CACL,IACE,MAAMhF,OACR,CAAE,MAAOuO,GACPF,EAAUE,CACZ,EACCN,EAAON,MACN,oBAAsBM,EAAKO,OAC3BP,EAAKO,OAAM,WAAa,GAC5B,CACF,CAAE,MAAOC,GACP,GAAIA,GAAUJ,GAAW,kBAAoBI,EAAOnB,MAClD,MAAO,CAACmB,EAAOnB,MAAOe,EAAQf,MAClC,CACA,MAAO,CAAC,KAAM,KAChB,GAEFS,EAAeC,4BAA4BhM,YACzC,8BACF,IAAI0M,EAAqBrO,OAAOsO,yBAC9BZ,EAAeC,4BACf,QAEFU,GACEA,EAAmBE,cACnBvO,OAAO6N,eACLH,EAAeC,4BACf,OACA,CAAEpK,MAAO,gCAEb,IAAIiL,EAAwBd,EAAeC,8BACzCc,EAAcD,EAAsB,GACpCE,EAAeF,EAAsB,GACvC,GAAIC,GAAeC,EAAc,CAC/B,IAAIC,EAAcF,EAAYG,MAAM,MAClCC,EAAeH,EAAaE,MAAM,MACpC,IACEP,EAAqBX,EAAiB,EACtCA,EAAiBiB,EAAYlQ,SAC5BkQ,EAAYjB,GAAgBoB,SAAS,gCAGtCpB,IACF,KAEEW,EAAqBQ,EAAapQ,SACjCoQ,EAAaR,GAAoBS,SAChC,gCAIFT,IACF,GACEX,IAAmBiB,EAAYlQ,QAC/B4P,IAAuBQ,EAAapQ,OAEpC,IACEiP,EAAiBiB,EAAYlQ,OAAS,EACpC4P,EAAqBQ,EAAapQ,OAAS,EAC7C,GAAKiP,GACL,GAAKW,GACLM,EAAYjB,KAAoBmB,EAAaR,IAG7CA,IACJ,KAEE,GAAKX,GAAkB,GAAKW,EAC5BX,IAAkBW,IAElB,GAAIM,EAAYjB,KAAoBmB,EAAaR,GAAqB,CACpE,GAAI,IAAMX,GAAkB,IAAMW,EAChC,MAEKX,IAED,IADAW,GAEEM,EAAYjB,KACVmB,EAAaR,GACjB,CACA,IAAIU,EACF,KACAJ,EAAYjB,GAAgBsB,QAAQ,WAAY,QAIlD,OAHA1B,EAAG3L,aACDoN,EAAMD,SAAS,iBACdC,EAAQA,EAAMC,QAAQ,cAAe1B,EAAG3L,cACpCoN,CACT,QACK,GAAKrB,GAAkB,GAAKW,GAErC,KACF,CACJ,CACF,CAAE,QACCjB,IAAU,EAAMzN,MAAM8N,kBAAoBD,CAC7C,CACA,OAAQA,EAA4BF,EAAKA,EAAG3L,aAAe2L,EAAG1L,KAAO,IACjEmL,GAA8BS,GAC9B,EACN,CACA,SAASyB,GAAcjQ,GACrB,OAAQA,EAAMK,KACZ,KAAK,GACL,KAAK,GACL,KAAK,EACH,OAAO0N,GAA8B/N,EAAMyC,MAC7C,KAAK,GACH,OAAOsL,GAA8B,QACvC,KAAK,GACH,OAAOA,GAA8B,YACvC,KAAK,GACH,OAAOA,GAA8B,gBACvC,KAAK,EACL,KAAK,GACH,OAAOM,GAA6BrO,EAAMyC,MAAM,GAClD,KAAK,GACH,OAAO4L,GAA6BrO,EAAMyC,KAAKM,QAAQ,GACzD,KAAK,EACH,OAAOsL,GAA6BrO,EAAMyC,MAAM,GAClD,KAAK,GACH,OAAOsL,GAA8B,YACvC,QACE,MAAO,GAEb,CACA,SAASmC,GAA4BC,GACnC,IACE,IAAIC,EAAO,GACX,GACGA,GAAQH,GAAcE,GACpBA,EAAiBA,EAAehQ,aAC9BgQ,GACP,OAAOC,CACT,CAAE,MAAOlN,GACP,MAAO,6BAA+BA,EAAEmN,QAAU,KAAOnN,EAAE+K,KAC7D,CACF,CACA,SAASqC,GAAiB/L,GACxB,cAAeA,GACb,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,YAEL,IAAK,SACH,OAAOA,EACT,QACE,MAAO,GAEb,CACA,SAASgM,GAAYC,GACnB,IAAI/N,EAAO+N,EAAK/N,KAChB,OACG+N,EAAOA,EAAKC,WACb,UAAYD,EAAK/C,gBAChB,aAAehL,GAAQ,UAAYA,EAExC,CA2CA,SAASiO,GAAM7Q,GACbA,EAAK8Q,gBAAkB9Q,EAAK8Q,cA3C9B,SAA0B9Q,GACxB,IAAI+Q,EAAaL,GAAY1Q,GAAQ,UAAY,QAC/CgR,EAAa7P,OAAOsO,yBAClBzP,EAAKiR,YAAYnL,UACjBiL,GAEFG,EAAe,GAAKlR,EAAK+Q,GAC3B,IACG/Q,EAAK6F,eAAekL,IACrB,qBAAuBC,GACvB,oBAAsBA,EAAWG,KACjC,oBAAsBH,EAAW/B,IACjC,CACA,IAAIkC,EAAMH,EAAWG,IACnBlC,EAAM+B,EAAW/B,IAcnB,OAbA9N,OAAO6N,eAAehP,EAAM+Q,EAAY,CACtCrB,cAAc,EACdyB,IAAK,WACH,OAAOA,EAAI3D,KAAK4D,KAClB,EACAnC,IAAK,SAAUvK,GACbwM,EAAe,GAAKxM,EACpBuK,EAAIzB,KAAK4D,KAAM1M,EACjB,IAEFvD,OAAO6N,eAAehP,EAAM+Q,EAAY,CACtCM,WAAYL,EAAWK,aAElB,CACLC,SAAU,WACR,OAAOJ,CACT,EACAK,SAAU,SAAU7M,GAClBwM,EAAe,GAAKxM,CACtB,EACA8M,aAAc,WACZxR,EAAK8Q,cAAgB,YACd9Q,EAAK+Q,EACd,EAEJ,CACF,CAE8CU,CAAiBzR,GAC/D,CACA,SAAS0R,GAAqB1R,GAC5B,IAAKA,EAAM,OAAO,EAClB,IAAI2R,EAAU3R,EAAK8Q,cACnB,IAAKa,EAAS,OAAO,EACrB,IAAIC,EAAYD,EAAQL,WACpB5M,EAAQ,GAQZ,OAPA1E,IACG0E,EAAQgM,GAAY1Q,GACjBA,EAAK6R,QACH,OACA,QACF7R,EAAK0E,QACX1E,EAAO0E,KACSkN,IAAaD,EAAQJ,SAASvR,IAAO,EACvD,CACA,SAAS8R,GAAiBC,GAExB,GAAI,qBADJA,EAAMA,IAAQ,qBAAuBC,SAAWA,cAAW,IAC3B,OAAO,KACvC,IACE,OAAOD,EAAIE,eAAiBF,EAAIG,IAClC,CAAE,MAAOC,GACP,OAAOJ,EAAIG,IACb,CACF,CACA,IAAIE,GAAsD,WAC1D,SAASC,GAA+C3N,GACtD,OAAOA,EAAMyL,QACXiC,IACA,SAAUE,GACR,MAAO,KAAOA,EAAGC,WAAW,GAAGzH,SAAS,IAAM,GAChD,GAEJ,CACA,SAAS0H,GACPC,EACA/N,EACAL,EACAqO,EACAb,EACAc,EACA/P,EACAG,GAEA0P,EAAQ1P,KAAO,GACf,MAAQH,GACR,oBAAsBA,GACtB,kBAAoBA,GACpB,mBAAqBA,EAChB6P,EAAQ7P,KAAOA,EAChB6P,EAAQ/E,gBAAgB,QACxB,MAAQhJ,EACN,WAAa9B,GACV,IAAM8B,GAAS,KAAO+N,EAAQ/N,OAAU+N,EAAQ/N,OAASA,KAC5D+N,EAAQ/N,MAAQ,GAAK+L,GAAiB/L,IAExC+N,EAAQ/N,QAAU,GAAK+L,GAAiB/L,KACrC+N,EAAQ/N,MAAQ,GAAK+L,GAAiB/L,IAE1C,WAAa9B,GAAQ,UAAYA,GAAS6P,EAAQ/E,gBAAgB,SACrE,MAAQhJ,EACJkO,GAAgBH,EAAS7P,EAAM6N,GAAiB/L,IAChD,MAAQL,EACNuO,GAAgBH,EAAS7P,EAAM6N,GAAiBpM,IAChD,MAAQqO,GAAoBD,EAAQ/E,gBAAgB,SAC1D,MAAQmE,GACN,MAAQc,IACPF,EAAQE,iBAAmBA,GAC9B,MAAQd,IACLY,EAAQZ,QACPA,GAAW,oBAAsBA,GAAW,kBAAoBA,GACpE,MAAQ9O,GACR,oBAAsBA,GACtB,kBAAoBA,GACpB,mBAAqBA,EAChB0P,EAAQ1P,KAAO,GAAK0N,GAAiB1N,GACtC0P,EAAQ/E,gBAAgB,OAC9B,CACA,SAASmF,GACPJ,EACA/N,EACAL,EACAwN,EACAc,EACA/P,EACAG,EACA+P,GAOA,GALA,MAAQlQ,GACN,oBAAsBA,GACtB,kBAAoBA,GACpB,mBAAqBA,IACpB6P,EAAQ7P,KAAOA,GACd,MAAQ8B,GAAS,MAAQL,EAAc,CACzC,KAEK,WAAazB,GAAQ,UAAYA,QACjC,IAAW8B,GAAS,OAASA,GAGhC,OACFL,EACE,MAAQA,EAAe,GAAKoM,GAAiBpM,GAAgB,GAC/DK,EAAQ,MAAQA,EAAQ,GAAK+L,GAAiB/L,GAASL,EACvDyO,GAAepO,IAAU+N,EAAQ/N,QAAU+N,EAAQ/N,MAAQA,GAC3D+N,EAAQpO,aAAeK,CACzB,CAEAmN,EACE,oBAFFA,EAAU,MAAQA,EAAUA,EAAUc,IAEH,kBAAoBd,KAAaA,EACpEY,EAAQZ,QAAUiB,EAAcL,EAAQZ,UAAYA,EACpDY,EAAQE,iBAAmBd,EAC3B,MAAQ9O,GACN,oBAAsBA,GACtB,kBAAoBA,GACpB,mBAAqBA,IACpB0P,EAAQ1P,KAAOA,EACpB,CACA,SAAS6P,GAAgB5S,EAAM4C,EAAM8B,GAClC,WAAa9B,GAAQkP,GAAiB9R,EAAK+S,iBAAmB/S,GAC7DA,EAAKqE,eAAiB,GAAKK,IAC1B1E,EAAKqE,aAAe,GAAKK,EAC9B,CACA,SAASsO,GAAchT,EAAMiT,EAAUC,EAAWC,GAEhD,GADAnT,EAAOA,EAAKoT,QACRH,EAAU,CACZA,EAAW,CAAC,EACZ,IAAK,IAAInT,EAAI,EAAGA,EAAIoT,EAAUtT,OAAQE,IACpCmT,EAAS,IAAMC,EAAUpT,KAAM,EACjC,IAAKoT,EAAY,EAAGA,EAAYlT,EAAKJ,OAAQsT,IAC1CpT,EAAImT,EAASpN,eAAe,IAAM7F,EAAKkT,GAAWxO,OACjD1E,EAAKkT,GAAWG,WAAavT,IAAME,EAAKkT,GAAWG,SAAWvT,GAC9DA,GAAKqT,IAAuBnT,EAAKkT,GAAWI,iBAAkB,EACpE,KAAO,CAGL,IAFAJ,EAAY,GAAKzC,GAAiByC,GAClCD,EAAW,KACNnT,EAAI,EAAGA,EAAIE,EAAKJ,OAAQE,IAAK,CAChC,GAAIE,EAAKF,GAAG4E,QAAUwO,EAGpB,OAFAlT,EAAKF,GAAGuT,UAAW,OACnBF,IAAuBnT,EAAKF,GAAGwT,iBAAkB,IAGnD,OAASL,GAAYjT,EAAKF,GAAGyT,WAAaN,EAAWjT,EAAKF,GAC5D,CACA,OAASmT,IAAaA,EAASI,UAAW,EAC5C,CACF,CACA,SAASG,GAAef,EAAS/N,EAAOL,GAEpC,MAAQK,KACNA,EAAQ,GAAK+L,GAAiB/L,MACtB+N,EAAQ/N,QAAU+N,EAAQ/N,MAAQA,GAC5C,MAAQL,GAKVoO,EAAQpO,aACN,MAAQA,EAAe,GAAKoM,GAAiBpM,GAAgB,GAJ7DoO,EAAQpO,eAAiBK,IAAU+N,EAAQpO,aAAeK,EAK9D,CACA,SAAS+O,GAAahB,EAAS/N,EAAOL,EAAcqP,GAClD,GAAI,MAAQhP,EAAO,CACjB,GAAI,MAAQgP,EAAU,CACpB,GAAI,MAAQrP,EAAc,MAAMvD,MAAMtB,EAAuB,KAC7D,GAAI8D,EAAYoQ,GAAW,CACzB,GAAI,EAAIA,EAAS9T,OAAQ,MAAMkB,MAAMtB,EAAuB,KAC5DkU,EAAWA,EAAS,EACtB,CACArP,EAAeqP,CACjB,CACA,MAAQrP,IAAiBA,EAAe,IACxCK,EAAQL,CACV,CACAA,EAAeoM,GAAiB/L,GAChC+N,EAAQpO,aAAeA,GACvBqP,EAAWjB,EAAQkB,eACNtP,GACX,KAAOqP,GACP,OAASA,IACRjB,EAAQ/N,MAAQgP,EACrB,CACA,SAASE,GAAe5T,EAAM6T,GAC5B,GAAIA,EAAM,CACR,IAAIC,EAAa9T,EAAK8T,WACtB,GACEA,GACAA,IAAe9T,EAAK+T,WACpB,IAAMD,EAAW7T,SAGjB,YADA6T,EAAWE,UAAYH,EAG3B,CACA7T,EAAK2T,YAAcE,CACrB,CACA,IAAII,GAAkB,IAAIxH,IACxB,26BAA26BsD,MACz6B,MAGJ,SAASmE,GAAiBC,EAAOC,EAAW1P,GAC1C,IAAI2P,EAAmB,IAAMD,EAAU9F,QAAQ,MAC/C,MAAQ5J,GAAS,mBAAqBA,GAAS,KAAOA,EAClD2P,EACEF,EAAMG,YAAYF,EAAW,IAC7B,UAAYA,EACTD,EAAMI,SAAW,GACjBJ,EAAMC,GAAa,GACxBC,EACEF,EAAMG,YAAYF,EAAW1P,GAC7B,kBAAoBA,GAClB,IAAMA,GACNuP,GAAgBO,IAAIJ,GACpB,UAAYA,EACTD,EAAMI,SAAW7P,EACjByP,EAAMC,IAAc,GAAK1P,GAAO2J,OAClC8F,EAAMC,GAAa1P,EAAQ,IACtC,CACA,SAAS+P,GAAkBzU,EAAM0U,EAAQC,GACvC,GAAI,MAAQD,GAAU,kBAAoBA,EACxC,MAAM5T,MAAMtB,EAAuB,KAErC,GADAQ,EAAOA,EAAKmU,MACR,MAAQQ,EAAY,CACtB,IAAK,IAAIP,KAAaO,GACnBA,EAAW9O,eAAeuO,IACxB,MAAQM,GAAUA,EAAO7O,eAAeuO,KACxC,IAAMA,EAAU9F,QAAQ,MACrBtO,EAAKsU,YAAYF,EAAW,IAC5B,UAAYA,EACTpU,EAAKuU,SAAW,GAChBvU,EAAKoU,GAAa,IAC7B,IAAK,IAAIQ,KAAgBF,EACtBN,EAAYM,EAAOE,GAClBF,EAAO7O,eAAe+O,IACpBD,EAAWC,KAAkBR,GAC7BF,GAAiBlU,EAAM4U,EAAcR,EAC7C,MACE,IAAK,IAAIS,KAAgBH,EACvBA,EAAO7O,eAAegP,IACpBX,GAAiBlU,EAAM6U,EAAcH,EAAOG,GACpD,CACA,SAASC,GAAgB1P,GACvB,IAAK,IAAMA,EAAQkJ,QAAQ,KAAM,OAAO,EACxC,OAAQlJ,GACN,IAAK,iBACL,IAAK,gBACL,IAAK,YACL,IAAK,gBACL,IAAK,gBACL,IAAK,mBACL,IAAK,iBACL,IAAK,gBACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,IAAI2P,GAAU,IAAI1I,IAAI,CAClB,CAAC,gBAAiB,kBAClB,CAAC,UAAW,OACZ,CAAC,YAAa,cACd,CAAC,cAAe,eAChB,CAAC,eAAgB,iBACjB,CAAC,oBAAqB,sBACtB,CAAC,aAAc,eACf,CAAC,gBAAiB,kBAClB,CAAC,YAAa,cACd,CAAC,WAAY,aACb,CAAC,WAAY,aACb,CAAC,qBAAsB,uBACvB,CAAC,4BAA6B,+BAC9B,CAAC,eAAgB,iBACjB,CAAC,iBAAkB,mBACnB,CAAC,mBAAoB,qBACrB,CAAC,mBAAoB,qBACrB,CAAC,cAAe,gBAChB,CAAC,WAAY,aACb,CAAC,aAAc,eACf,CAAC,eAAgB,iBACjB,CAAC,aAAc,eACf,CAAC,WAAY,aACb,CAAC,iBAAkB,oBACnB,CAAC,cAAe,gBAChB,CAAC,YAAa,cACd,CAAC,cAAe,gBAChB,CAAC,aAAc,eACf,CAAC,YAAa,cACd,CAAC,6BAA8B,gCAC/B,CAAC,2BAA4B,8BAC7B,CAAC,YAAa,eACd,CAAC,eAAgB,kBACjB,CAAC,iBAAkB,mBACnB,CAAC,gBAAiB,kBAClB,CAAC,gBAAiB,kBAClB,CAAC,YAAa,cACd,CAAC,YAAa,cACd,CAAC,cAAe,gBAChB,CAAC,mBAAoB,qBACrB,CAAC,oBAAqB,sBACtB,CAAC,aAAc,eACf,CAAC,WAAY,YACb,CAAC,gBAAiB,kBAClB,CAAC,kBAAmB,oBACpB,CAAC,iBAAkB,mBACnB,CAAC,YAAa,cACd,CAAC,cAAe,gBAChB,CAAC,wBAAyB,0BAC1B,CAAC,yBAA0B,2BAC3B,CAAC,kBAAmB,oBACpB,CAAC,mBAAoB,qBACrB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,mBACnB,CAAC,mBAAoB,qBACrB,CAAC,gBAAiB,kBAClB,CAAC,cAAe,gBAChB,CAAC,aAAc,eACf,CAAC,iBAAkB,mBACnB,CAAC,gBAAiB,kBAClB,CAAC,kBAAmB,oBACpB,CAAC,oBAAqB,sBACtB,CAAC,qBAAsB,uBACvB,CAAC,cAAe,gBAChB,CAAC,eAAgB,iBACjB,CAAC,aAAc,gBACf,CAAC,cAAe,gBAChB,CAAC,WAAY,aACb,CAAC,eAAgB,iBACjB,CAAC,gBAAiB,kBAClB,CAAC,eAAgB,iBACjB,CAAC,WAAY,cACb,CAAC,cAAe,iBAChB,CAAC,cAAe,iBAChB,CAAC,cAAe,gBAChB,CAAC,cAAe,gBAChB,CAAC,aAAc,eACf,CAAC,UAAW,cAEd2I,GACE,2HACJ,SAASC,GAAYvV,GACnB,OAAOsV,GAAqBvH,KAAK,GAAK/N,GAClC,8FACAA,CACN,CACA,IAAIwV,GAAwB,KAC5B,SAASC,GAAeC,GAItB,OAHAA,EAAcA,EAAYC,QAAUD,EAAYE,YAAc7K,QAClD8K,0BACTH,EAAcA,EAAYG,yBACtB,IAAMH,EAAYnV,SAAWmV,EAAYxJ,WAAawJ,CAC/D,CACA,IAAII,GAAgB,KAClBC,GAAe,KACjB,SAASC,GAAqBL,GAC5B,IAAIM,EAAmB7J,GAAoBuJ,GAC3C,GAAIM,IAAqBN,EAASM,EAAiB1J,WAAY,CAC7D,IAAI2J,EAAQP,EAAOpK,KAAqB,KACxC4K,EAAG,OAAUR,EAASM,EAAiB1J,UAAY0J,EAAiB/S,MAClE,IAAK,QAYH,GAXA4P,GACE6C,EACAO,EAAMlR,MACNkR,EAAMvR,aACNuR,EAAMvR,aACNuR,EAAM/D,QACN+D,EAAMjD,eACNiD,EAAMhT,KACNgT,EAAM7S,MAER4S,EAAmBC,EAAM7S,KACrB,UAAY6S,EAAMhT,MAAQ,MAAQ+S,EAAkB,CACtD,IAAKC,EAAQP,EAAQO,EAAMhK,YAAcgK,EAAQA,EAAMhK,WAQvD,IAPAgK,EAAQA,EAAME,iBACZ,eACEzD,GACE,GAAKsD,GAEP,oBAGFA,EAAmB,EACnBA,EAAmBC,EAAMhW,OACzB+V,IACA,CACA,IAAII,EAAYH,EAAMD,GACtB,GAAII,IAAcV,GAAUU,EAAUC,OAASX,EAAOW,KAAM,CAC1D,IAAIC,EAAaF,EAAU9K,KAAqB,KAChD,IAAKgL,EAAY,MAAMnV,MAAMtB,EAAuB,KACpDgT,GACEuD,EACAE,EAAWvR,MACXuR,EAAW5R,aACX4R,EAAW5R,aACX4R,EAAWpE,QACXoE,EAAWtD,eACXsD,EAAWrT,KACXqT,EAAWlT,KAEf,CACF,CACA,IACE4S,EAAmB,EACnBA,EAAmBC,EAAMhW,OACzB+V,KAECI,EAAYH,EAAMD,IACPK,OAASX,EAAOW,MAAQtE,GAAqBqE,EAC7D,CACA,MAAMF,EACR,IAAK,WACHrC,GAAe6B,EAAQO,EAAMlR,MAAOkR,EAAMvR,cAC1C,MAAMwR,EACR,IAAK,SAED,OADDF,EAAmBC,EAAMlR,QAEtBsO,GAAcqC,IAAUO,EAAM3C,SAAU0C,GAAkB,GAEpE,CACF,CACA,IAAIO,IAAuB,EAC3B,SAASC,GAAiB1H,EAAIoH,EAAGO,GAC/B,GAAIF,GAAsB,OAAOzH,EAAGoH,EAAGO,GACvCF,IAAuB,EACvB,IAEE,OAD+BzH,EAAGoH,EAEpC,CAAE,QACA,GACIK,IAAuB,GACzB,OAASV,IAAiB,OAASC,MAGhCY,KACDb,KACIK,EAAIL,GACL/G,EAAKgH,GACLA,GAAeD,GAAgB,KAChCE,GAAqBG,GACrBpH,IAEF,IAAKoH,EAAI,EAAGA,EAAIpH,EAAG7O,OAAQiW,IAAKH,GAAqBjH,EAAGoH,GAC9D,CACF,CACA,SAASS,GAAYtK,EAAMY,GACzB,IAAIX,EAAYD,EAAKC,UACrB,GAAI,OAASA,EAAW,OAAO,KAC/B,IAAI2J,EAAQ3J,EAAUhB,KAAqB,KAC3C,GAAI,OAAS2K,EAAO,OAAO,KAC3B3J,EAAY2J,EAAMhJ,GAClBiJ,EAAG,OAAQjJ,GACT,IAAK,UACL,IAAK,iBACL,IAAK,gBACL,IAAK,uBACL,IAAK,cACL,IAAK,qBACL,IAAK,cACL,IAAK,qBACL,IAAK,YACL,IAAK,mBACL,IAAK,gBACFgJ,GAASA,EAAMrC,YAEbqC,IACC,YAFA5J,EAAOA,EAAKpJ,OAGZ,UAAYoJ,GACZ,WAAaA,GACb,aAAeA,IAEnBA,GAAQ4J,EACR,MAAMC,EACR,QACE7J,GAAO,EAEX,GAAIA,EAAM,OAAO,KACjB,GAAIC,GAAa,oBAAsBA,EACrC,MAAMnL,MACJtB,EAAuB,IAAKoN,SAAyBX,IAEzD,OAAOA,CACT,CACA,IAAIsK,KACA,qBAAuB9L,QACvB,qBAAuBA,OAAOuH,UAC9B,qBAAuBvH,OAAOuH,SAASwE,eAEzCC,IAAgC,EAClC,GAAIF,GACF,IACE,IAAInD,GAAU,CAAC,EACfjS,OAAO6N,eAAeoE,GAAS,UAAW,CACxCjC,IAAK,WACHsF,IAAgC,CAClC,IAEFhM,OAAOiM,iBAAiB,OAAQtD,GAASA,IACzC3I,OAAOkM,oBAAoB,OAAQvD,GAASA,GAC9C,CAAE,MAAOjB,IACPsE,IAAgC,CAClC,CACF,IAAIlO,GAAO,KACTqO,GAAY,KACZC,GAAe,KACjB,SAASC,KACP,GAAID,GAAc,OAAOA,GACzB,IAAIE,EAGFC,EAFAC,EAAaL,GACbM,EAAcD,EAAWrX,OAEzBuX,EAAW,UAAW5O,GAAOA,GAAK7D,MAAQ6D,GAAKoL,YAC/CyD,EAAYD,EAASvX,OACvB,IACEmX,EAAQ,EACRA,EAAQG,GAAeD,EAAWF,KAAWI,EAASJ,GACtDA,KAEF,IAAIM,EAASH,EAAcH,EAC3B,IACEC,EAAM,EACNA,GAAOK,GACPJ,EAAWC,EAAcF,KAASG,EAASC,EAAYJ,GACvDA,KAEF,OAAQH,GAAeM,EAASpM,MAAMgM,EAAO,EAAIC,EAAM,EAAIA,OAAM,EACnE,CACA,SAASM,GAAiBlC,GACxB,IAAImC,EAAUnC,EAAYmC,QAM1B,MALA,aAAcnC,EAEV,KADEA,EAAcA,EAAYoC,WACP,KAAOD,IAAYnC,EAAc,IACrDA,EAAcmC,EACnB,KAAOnC,IAAgBA,EAAc,IAC9B,IAAMA,GAAe,KAAOA,EAAcA,EAAc,CACjE,CACA,SAASqC,KACP,OAAO,CACT,CACA,SAASC,KACP,OAAO,CACT,CACA,SAASC,GAAqBC,GAC5B,SAASC,EACPC,EACAC,EACApM,EACAyJ,EACA4C,GAQA,IAAK,IAAIC,KANT7G,KAAK8G,WAAaJ,EAClB1G,KAAK+G,YAAcxM,EACnByF,KAAKxO,KAAOmV,EACZ3G,KAAKgE,YAAcA,EACnBhE,KAAKiE,OAAS2C,EACd5G,KAAKgH,cAAgB,KACAR,EACnBA,EAAU/R,eAAeoS,KACrBH,EAAYF,EAAUK,GACvB7G,KAAK6G,GAAYH,EACdA,EAAU1C,GACVA,EAAY6C,IASpB,OARA7G,KAAKiH,oBACH,MAAQjD,EAAYkD,iBAChBlD,EAAYkD,kBACZ,IAAOlD,EAAYmD,aAErBd,GACAC,GACJtG,KAAKoH,qBAAuBd,GACrBtG,IACT,CAuBA,OAtBAlQ,EAAO2W,EAAmB/R,UAAW,CACnC2S,eAAgB,WACdrH,KAAKkH,kBAAmB,EACxB,IAAI5N,EAAQ0G,KAAKgE,YACjB1K,IACGA,EAAM+N,eACH/N,EAAM+N,iBACN,mBAAqB/N,EAAM6N,cAAgB7N,EAAM6N,aAAc,GAClEnH,KAAKiH,mBAAqBZ,GAC/B,EACAiB,gBAAiB,WACf,IAAIhO,EAAQ0G,KAAKgE,YACjB1K,IACGA,EAAMgO,gBACHhO,EAAMgO,kBACN,mBAAqBhO,EAAMiO,eAC1BjO,EAAMiO,cAAe,GACzBvH,KAAKoH,qBAAuBf,GACjC,EACAmB,QAAS,WAAa,EACtBC,aAAcpB,KAETI,CACT,CACA,IAaEiB,GACAC,GACAC,GAfEC,GAAiB,CACjBC,WAAY,EACZC,QAAS,EACTC,WAAY,EACZC,UAAW,SAAU3O,GACnB,OAAOA,EAAM2O,WAAaC,KAAK/S,KACjC,EACA+R,iBAAkB,EAClBiB,UAAW,GAEbC,GAAiB7B,GAAqBsB,IACtCQ,GAAmBvY,EAAO,CAAC,EAAG+X,GAAgB,CAAES,KAAM,EAAGC,OAAQ,IACjEC,GAAmBjC,GAAqB8B,IAIxCI,GAAsB3Y,EAAO,CAAC,EAAGuY,GAAkB,CACjDK,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,MAAO,EACPC,MAAO,EACPC,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,QAAS,EACTC,iBAAkBC,GAClBC,OAAQ,EACRC,QAAS,EACTC,cAAe,SAAUlQ,GACvB,YAAO,IAAWA,EAAMkQ,cACpBlQ,EAAMmQ,cAAgBnQ,EAAM4K,WAC1B5K,EAAMoQ,UACNpQ,EAAMmQ,YACRnQ,EAAMkQ,aACZ,EACAG,UAAW,SAAUrQ,GACnB,MAAI,cAAeA,EAAcA,EAAMqQ,WACvCrQ,IAAUsO,KACPA,IAAkB,cAAgBtO,EAAM9H,MACnCkW,GAAgBpO,EAAMoP,QAAUd,GAAec,QAChDf,GAAgBrO,EAAMqP,QAAUf,GAAee,SAC/ChB,GAAgBD,GAAgB,EACpCE,GAAiBtO,GACboO,GACT,EACAkC,UAAW,SAAUtQ,GACnB,MAAO,cAAeA,EAAQA,EAAMsQ,UAAYjC,EAClD,IAEFkC,GAAsBtD,GAAqBkC,IAE3CqB,GAAqBvD,GADAzW,EAAO,CAAC,EAAG2Y,GAAqB,CAAEsB,aAAc,KAGrEC,GAAsBzD,GADAzW,EAAO,CAAC,EAAGuY,GAAkB,CAAEmB,cAAe,KAOpES,GAA0B1D,GALAzW,EAAO,CAAC,EAAG+X,GAAgB,CACnDqC,cAAe,EACfC,YAAa,EACbC,cAAe,KAUjBC,GAA0B9D,GAPAzW,EAAO,CAAC,EAAG+X,GAAgB,CACnDyC,cAAe,SAAUhR,GACvB,MAAO,kBAAmBA,EACtBA,EAAMgR,cACNjR,OAAOiR,aACb,KAIFC,GAA4BhE,GADAzW,EAAO,CAAC,EAAG+X,GAAgB,CAAElV,KAAM,KAE/D6X,GAAe,CACbC,IAAK,SACLC,SAAU,IACVC,KAAM,YACNC,GAAI,UACJC,MAAO,aACPC,KAAM,YACNC,IAAK,SACLC,IAAK,KACLC,KAAM,cACNC,KAAM,cACNC,OAAQ,aACRC,gBAAiB,gBAEnBC,GAAiB,CACf,EAAG,YACH,EAAG,MACH,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,UACJ,GAAI,MACJ,GAAI,QACJ,GAAI,WACJ,GAAI,SACJ,GAAI,IACJ,GAAI,SACJ,GAAI,WACJ,GAAI,MACJ,GAAI,OACJ,GAAI,YACJ,GAAI,UACJ,GAAI,aACJ,GAAI,YACJ,GAAI,SACJ,GAAI,SACJ,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,aACL,IAAK,QAEPC,GAAoB,CAClBC,IAAK,SACLC,QAAS,UACTC,KAAM,UACNC,MAAO,YAEX,SAASC,GAAoBC,GAC3B,IAAI5H,EAAchE,KAAKgE,YACvB,OAAOA,EAAYoF,iBACfpF,EAAYoF,iBAAiBwC,MAC5BA,EAASN,GAAkBM,OACxB5H,EAAY4H,EAEtB,CACA,SAASvC,KACP,OAAOsC,EACT,CACA,IAsCEE,GAAyBtF,GAtCEzW,EAAO,CAAC,EAAGuY,GAAkB,CACtDyD,IAAK,SAAU9H,GACb,GAAIA,EAAY8H,IAAK,CACnB,IAAIA,EAAMtB,GAAaxG,EAAY8H,MAAQ9H,EAAY8H,IACvD,GAAI,iBAAmBA,EAAK,OAAOA,CACrC,CACA,MAAO,aAAe9H,EAAYxS,KAE9B,MADEwS,EAAckC,GAAiBlC,IACZ,QAAU+H,OAAOC,aAAahI,GACnD,YAAcA,EAAYxS,MAAQ,UAAYwS,EAAYxS,KACxD6Z,GAAerH,EAAYmC,UAAY,eACvC,EACR,EACA9X,KAAM,EACN4d,SAAU,EACVjD,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,QAAS,EACT+C,OAAQ,EACRC,OAAQ,EACR/C,iBAAkBC,GAClBjD,SAAU,SAAU9M,GAClB,MAAO,aAAeA,EAAM9H,KAAO0U,GAAiB5M,GAAS,CAC/D,EACA6M,QAAS,SAAU7M,GACjB,MAAO,YAAcA,EAAM9H,MAAQ,UAAY8H,EAAM9H,KACjD8H,EAAM6M,QACN,CACN,EACAiG,MAAO,SAAU9S,GACf,MAAO,aAAeA,EAAM9H,KACxB0U,GAAiB5M,GACjB,YAAcA,EAAM9H,MAAQ,UAAY8H,EAAM9H,KAC5C8H,EAAM6M,QACN,CACR,KAeFkG,GAAwB9F,GAZAzW,EAAO,CAAC,EAAG2Y,GAAqB,CACtD6D,UAAW,EACXC,MAAO,EACPC,OAAQ,EACRC,SAAU,EACVC,mBAAoB,EACpBC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,YAAa,EACbC,UAAW,KAabC,GAAsBzG,GAVAzW,EAAO,CAAC,EAAGuY,GAAkB,CACjD4E,QAAS,EACTC,cAAe,EACfC,eAAgB,EAChBjE,OAAQ,EACRC,QAAS,EACTH,QAAS,EACTC,SAAU,EACVG,iBAAkBC,MAQpB+D,GAA2B7G,GALAzW,EAAO,CAAC,EAAG+X,GAAgB,CACpDwF,aAAc,EACdlD,YAAa,EACbC,cAAe,KAuBjBkD,GAAsB/G,GApBAzW,EAAO,CAAC,EAAG2Y,GAAqB,CACpD8E,OAAQ,SAAUjU,GAChB,MAAO,WAAYA,EACfA,EAAMiU,OACN,gBAAiBjU,GACdA,EAAMkU,YACP,CACR,EACAC,OAAQ,SAAUnU,GAChB,MAAO,WAAYA,EACfA,EAAMmU,OACN,gBAAiBnU,GACdA,EAAMoU,YACP,eAAgBpU,GACbA,EAAMqU,WACP,CACV,EACAC,OAAQ,EACRC,UAAW,KAObC,GAAuBvH,GAJAzW,EAAO,CAAC,EAAG+X,GAAgB,CAChDkG,SAAU,EACVC,SAAU,KAGZC,GAAe,CAAC,EAAG,GAAI,GAAI,IAC3BC,GAAyB/I,IAAa,qBAAsB9L,OAC5D8U,GAAe,KACjBhJ,IACE,iBAAkBvE,WACjBuN,GAAevN,SAASuN,cAC3B,IAAIC,GAAuBjJ,IAAa,cAAe9L,SAAW8U,GAChEE,GACElJ,MACE+I,IACCC,IAAgB,EAAIA,IAAgB,IAAMA,IAC/CG,GAAgBvC,OAAOC,aAAa,IACpCuC,IAAmB,EACrB,SAASC,GAAyBC,EAAczK,GAC9C,OAAQyK,GACN,IAAK,QACH,OAAQ,IAAMR,GAAa/Q,QAAQ8G,EAAYmC,SACjD,IAAK,UACH,OAAO,MAAQnC,EAAYmC,QAC7B,IAAK,WACL,IAAK,YACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,SAASuI,GAAuB1K,GAE9B,MAAO,kBADPA,EAAcA,EAAYuE,SACgB,SAAUvE,EAChDA,EAAYrR,KACZ,IACN,CACA,IAAIgc,IAAc,EAiDlB,IAAIC,GAAsB,CACxBC,OAAO,EACPC,MAAM,EACNC,UAAU,EACV,kBAAkB,EAClBC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,KAAK,EACL7M,MAAM,EACN8M,MAAM,EACNjhB,KAAK,EACLkhB,MAAM,GAER,SAASC,GAAmBlQ,GAC1B,IAAIC,EAAWD,GAAQA,EAAKC,UAAYD,EAAKC,SAAShD,cACtD,MAAO,UAAYgD,IACboP,GAAoBrP,EAAK/N,MAC3B,aAAegO,CAGrB,CACA,SAASkQ,GACPC,EACA/U,EACAoJ,EACAC,GAEAG,GACIC,GACEA,GAAahR,KAAK4Q,GACjBI,GAAe,CAACJ,GAClBG,GAAgBH,EAErB,GADArJ,EAAOgV,GAA4BhV,EAAM,aAChCpM,SACLwV,EAAc,IAAIoE,GAClB,WACA,SACA,KACApE,EACAC,GAEF0L,EAActc,KAAK,CAAEiG,MAAO0K,EAAa6L,UAAWjV,IACxD,CACA,IAAIkV,GAAkB,KACpBC,GAAsB,KACxB,SAASC,GAAgBL,GACvBM,GAAqBN,EAAe,EACtC,CACA,SAASO,GAAsB3V,GAE7B,GAAI+F,GADa3F,GAAoBJ,IACC,OAAOA,CAC/C,CACA,SAAS4V,GAA4B1B,EAAclU,GACjD,GAAI,WAAakU,EAAc,OAAOlU,CACxC,CACA,IAAI6V,IAAwB,EAC5B,GAAIjL,GAAW,CACb,IAAIkL,GACJ,GAAIlL,GAAW,CACb,IAAImL,GAAgC,YAAa1P,SACjD,IAAK0P,GAA+B,CAClC,IAAIC,GAA4B3P,SAASwE,cAAc,OACvDmL,GAA0B9T,aAAa,UAAW,WAClD6T,GACE,oBAAsBC,GAA0BC,OACpD,CACAH,GAAsCC,EACxC,MAAOD,IAAsC,EAC7CD,GACEC,MACEzP,SAASuN,cAAgB,EAAIvN,SAASuN,aAC5C,CACA,SAASsC,KACPX,KACGA,GAAgBY,YAAY,mBAAoBC,IAChDZ,GAAsBD,GAAkB,KAC7C,CACA,SAASa,GAAqB3M,GAC5B,GACE,UAAYA,EAAYqJ,cACxB6C,GAAsBH,IACtB,CACA,IAAIJ,EAAgB,GACpBD,GACEC,EACAI,GACA/L,EACAD,GAAeC,IAEjBe,GAAiBiL,GAAiBL,EACpC,CACF,CACA,SAASiB,GAAkCnC,EAAcxK,EAAQ1J,GAC/D,YAAckU,GACTgC,KAEAV,GAAsBxV,GADtBuV,GAAkB7L,GAEH4M,YAAY,mBAAoBF,KAChD,aAAelC,GAAgBgC,IACrC,CACA,SAASK,GAAmCrC,GAC1C,GACE,oBAAsBA,GACtB,UAAYA,GACZ,YAAcA,EAEd,OAAOyB,GAAsBH,GACjC,CACA,SAASgB,GAA2BtC,EAAclU,GAChD,GAAI,UAAYkU,EAAc,OAAOyB,GAAsB3V,EAC7D,CACA,SAASyW,GAAmCvC,EAAclU,GACxD,GAAI,UAAYkU,GAAgB,WAAaA,EAC3C,OAAOyB,GAAsB3V,EACjC,CAIA,IAAI0W,GAAW,oBAAsBlhB,OAAOmhB,GAAKnhB,OAAOmhB,GAHxD,SAAYjf,EAAGkf,GACb,OAAQlf,IAAMkf,IAAM,IAAMlf,GAAK,EAAIA,IAAM,EAAIkf,IAAQlf,IAAMA,GAAKkf,IAAMA,CACxE,EAEA,SAASC,GAAaC,EAAMC,GAC1B,GAAIL,GAASI,EAAMC,GAAO,OAAO,EACjC,GACE,kBAAoBD,GACpB,OAASA,GACT,kBAAoBC,GACpB,OAASA,EAET,OAAO,EACT,IAAIC,EAAQxhB,OAAOyhB,KAAKH,GACtBI,EAAQ1hB,OAAOyhB,KAAKF,GACtB,GAAIC,EAAM/iB,SAAWijB,EAAMjjB,OAAQ,OAAO,EAC1C,IAAKijB,EAAQ,EAAGA,EAAQF,EAAM/iB,OAAQijB,IAAS,CAC7C,IAAIC,EAAaH,EAAME,GACvB,IACGhd,EAAe2H,KAAKkV,EAAMI,KAC1BT,GAASI,EAAKK,GAAaJ,EAAKI,IAEjC,OAAO,CACX,CACA,OAAO,CACT,CACA,SAASC,GAAY/iB,GACnB,KAAOA,GAAQA,EAAK8T,YAAc9T,EAAOA,EAAK8T,WAC9C,OAAO9T,CACT,CACA,SAASgjB,GAA0Bza,EAAM0a,GACvC,IAESC,EAFLljB,EAAO+iB,GAAYxa,GAEvB,IADAA,EAAO,EACWvI,GAAQ,CACxB,GAAI,IAAMA,EAAKC,SAAU,CAEvB,GADAijB,EAAU3a,EAAOvI,EAAK2T,YAAY/T,OAC9B2I,GAAQ0a,GAAUC,GAAWD,EAC/B,MAAO,CAAEjjB,KAAMA,EAAMijB,OAAQA,EAAS1a,GACxCA,EAAO2a,CACT,CACArN,EAAG,CACD,KAAO7V,GAAQ,CACb,GAAIA,EAAKmjB,YAAa,CACpBnjB,EAAOA,EAAKmjB,YACZ,MAAMtN,CACR,CACA7V,EAAOA,EAAK4L,UACd,CACA5L,OAAO,CACT,CACAA,EAAO+iB,GAAY/iB,EACrB,CACF,CACA,SAASojB,GAAaC,EAAWC,GAC/B,SAAOD,IAAaC,KAChBD,IAAcC,KAEZD,GAAa,IAAMA,EAAUpjB,YAE3BqjB,GAAa,IAAMA,EAAUrjB,SAC3BmjB,GAAaC,EAAWC,EAAU1X,YAClC,aAAcyX,EACZA,EAAUE,SAASD,KACnBD,EAAUG,4BAC0C,GAA/CH,EAAUG,wBAAwBF,KAGrD,CACA,SAASG,GAAqBC,GAO5B,IACE,IAAIjR,EAAUX,IAPhB4R,EACE,MAAQA,GACR,MAAQA,EAAc3Q,eACtB,MAAQ2Q,EAAc3Q,cAAc4Q,YAChCD,EAAc3Q,cAAc4Q,YAC5BlZ,QAEyCuH,UAC7CS,aAAmBiR,EAAcE,mBAEjC,CACA,IACE,IAAIne,EACF,kBAAoBgN,EAAQoR,cAAcxG,SAASyG,IACvD,CAAE,MAAOjc,GACPpC,GAA2B,CAC7B,CACA,IAAIA,EACC,MACLgN,EAAUX,IAFoB4R,EAAgBjR,EAAQoR,eAEb7R,SAC3C,CACA,OAAOS,CACT,CACA,SAASsR,GAAyBpT,GAChC,IAAIC,EAAWD,GAAQA,EAAKC,UAAYD,EAAKC,SAAShD,cACtD,OACEgD,IACE,UAAYA,IACX,SAAWD,EAAK/N,MACf,WAAa+N,EAAK/N,MAClB,QAAU+N,EAAK/N,MACf,QAAU+N,EAAK/N,MACf,aAAe+N,EAAK/N,OACtB,aAAegO,GACf,SAAWD,EAAKqT,gBAEtB,CACA,IAAIC,GACA1N,IAAa,iBAAkBvE,UAAY,IAAMA,SAASuN,aAC5DtN,GAAgB,KAChBiS,GAAoB,KACpBC,GAAgB,KAChBC,IAAY,EACd,SAASC,GAAqBtD,EAAe3L,EAAa4C,GACxD,IAAIjG,EACFiG,EAAkBvN,SAAWuN,EACzBA,EAAkBhG,SAClB,IAAMgG,EAAkB/X,SACtB+X,EACAA,EAAkBjF,cAC1BqR,IACE,MAAQnS,IACRA,KAAkBH,GAAiBC,KAEnC,mBADEA,EAAME,KACmB8R,GAAyBhS,GAC/CA,EAAM,CAAEgF,MAAOhF,EAAIuS,eAAgBtN,IAAKjF,EAAIwS,cAK5CxS,EAAM,CACLyS,YALAzS,GACCA,EAAIgB,eAAiBhB,EAAIgB,cAAc4Q,aACxClZ,QACAga,gBAEgBD,WAChBE,aAAc3S,EAAI2S,aAClBC,UAAW5S,EAAI4S,UACfC,YAAa7S,EAAI6S,aAEtBT,IAAiB3B,GAAa2B,GAAepS,KAC1CoS,GAAgBpS,EAElB,GADCA,EAAMiP,GAA4BkD,GAAmB,aAC9CtkB,SACJwV,EAAc,IAAIoE,GAClB,WACA,SACA,KACApE,EACA4C,GAEF+I,EAActc,KAAK,CAAEiG,MAAO0K,EAAa6L,UAAWlP,IACnDqD,EAAYC,OAASpD,KAC9B,CACA,SAAS4S,GAAcC,EAAWC,GAChC,IAAIC,EAAW,CAAC,EAIhB,OAHAA,EAASF,EAAUlX,eAAiBmX,EAAUnX,cAC9CoX,EAAS,SAAWF,GAAa,SAAWC,EAC5CC,EAAS,MAAQF,GAAa,MAAQC,EAC/BC,CACT,CACA,IAAIC,GAAiB,CACjBC,aAAcL,GAAc,YAAa,gBACzCM,mBAAoBN,GAAc,YAAa,sBAC/CO,eAAgBP,GAAc,YAAa,kBAC3CQ,cAAeR,GAAc,aAAc,iBAC3CS,gBAAiBT,GAAc,aAAc,mBAC7CU,iBAAkBV,GAAc,aAAc,oBAC9CW,cAAeX,GAAc,aAAc,kBAE7CY,GAAqB,CAAC,EACtBtR,GAAQ,CAAC,EASX,SAASuR,GAA2BX,GAClC,GAAIU,GAAmBV,GAAY,OAAOU,GAAmBV,GAC7D,IAAKE,GAAeF,GAAY,OAAOA,EACvC,IACED,EADEa,EAAYV,GAAeF,GAE/B,IAAKD,KAAaa,EAChB,GAAIA,EAAU9f,eAAeif,IAAcA,KAAa3Q,GACtD,OAAQsR,GAAmBV,GAAaY,EAAUb,GACtD,OAAOC,CACT,CAjBAxO,KACIpC,GAAQnC,SAASwE,cAAc,OAAOrC,MACxC,mBAAoB1J,gBACVwa,GAAeC,aAAaU,iBAC7BX,GAAeE,mBAAmBS,iBAClCX,GAAeG,eAAeQ,WACvC,oBAAqBnb,eACZwa,GAAeO,cAAcK,YAWxC,IAAIC,GAAgBJ,GAA2B,gBAC7CK,GAAsBL,GAA2B,sBACjDM,GAAkBN,GAA2B,kBAC7CO,GAAiBP,GAA2B,iBAC5CQ,GAAmBR,GAA2B,mBAC9CS,GAAoBT,GAA2B,oBAC/CU,GAAiBV,GAA2B,iBAC5CW,GAA6B,IAAIha,IACjCia,GACE,mnBAAmnBvW,MACjnB,KAGN,SAASwW,GAAoB1G,EAAc/H,GACzCuO,GAA2BpX,IAAI4Q,EAAc/H,GAC7CnL,GAAsBmL,EAAW,CAAC+H,GACpC,CAJAyG,GAAwB7hB,KAAK,aAK7B,IAAI+hB,GAAiB,IAAIC,QACzB,SAASC,GAA2BhiB,EAAOiiB,GACzC,GAAI,kBAAoBjiB,GAAS,OAASA,EAAO,CAC/C,IAAIkiB,EAAWJ,GAAerV,IAAIzM,GAClC,YAAI,IAAWkiB,EAAiBA,GAChCD,EAAS,CACPjiB,MAAOA,EACPiiB,OAAQA,EACRvY,MAAOiC,GAA4BsW,IAErCH,GAAevX,IAAIvK,EAAOiiB,GACnBA,EACT,CACA,MAAO,CACLjiB,MAAOA,EACPiiB,OAAQA,EACRvY,MAAOiC,GAA4BsW,GAEvC,CACA,IAAIE,GAAmB,GACrBC,GAAwB,EACxBC,GAA2B,EAC7B,SAASC,KACP,IACE,IAAIC,EAAWH,GACbhnB,EAAKinB,GAA2BD,GAAwB,EAC1DhnB,EAAImnB,GAEJ,CACA,IAAI9mB,EAAQ0mB,GAAiB/mB,GAC7B+mB,GAAiB/mB,KAAO,KACxB,IAAIonB,EAAQL,GAAiB/mB,GAC7B+mB,GAAiB/mB,KAAO,KACxB,IAAIqnB,EAASN,GAAiB/mB,GAC9B+mB,GAAiB/mB,KAAO,KACxB,IAAIqJ,EAAO0d,GAAiB/mB,GAE5B,GADA+mB,GAAiB/mB,KAAO,KACpB,OAASonB,GAAS,OAASC,EAAQ,CACrC,IAAIrjB,EAAUojB,EAAMpjB,QACpB,OAASA,EACJqjB,EAAOC,KAAOD,GACbA,EAAOC,KAAOtjB,EAAQsjB,KAAQtjB,EAAQsjB,KAAOD,GACnDD,EAAMpjB,QAAUqjB,CAClB,CACA,IAAMhe,GAAQke,GAA8BlnB,EAAOgnB,EAAQhe,EAC7D,CACF,CACA,SAASme,GAAgBnnB,EAAO+mB,EAAOC,EAAQhe,GAC7C0d,GAAiBC,MAA2B3mB,EAC5C0mB,GAAiBC,MAA2BI,EAC5CL,GAAiBC,MAA2BK,EAC5CN,GAAiBC,MAA2B3d,EAC5C4d,IAA4B5d,EAC5BhJ,EAAMiI,OAASe,EAEf,QADAhJ,EAAQA,EAAME,aACKF,EAAMiI,OAASe,EACpC,CACA,SAASoe,GAA4BpnB,EAAO+mB,EAAOC,EAAQhe,GAEzD,OADAme,GAAgBnnB,EAAO+mB,EAAOC,EAAQhe,GAC/Bqe,GAAuBrnB,EAChC,CACA,SAASsnB,GAA+BtnB,EAAOgJ,GAE7C,OADAme,GAAgBnnB,EAAO,KAAM,KAAMgJ,GAC5Bqe,GAAuBrnB,EAChC,CACA,SAASknB,GAA8BK,EAAaP,EAAQhe,GAC1Due,EAAYtf,OAASe,EACrB,IAAI9I,EAAYqnB,EAAYrnB,UAC5B,OAASA,IAAcA,EAAU+H,OAASe,GAC1C,IAAK,IAAIwe,GAAW,EAAIC,EAASF,EAAYpnB,OAAQ,OAASsnB,GAC3DA,EAAOC,YAAc1e,EAEpB,QADC9I,EAAYunB,EAAOvnB,aACGA,EAAUwnB,YAAc1e,GAC/C,KAAOye,EAAOpnB,MAEZ,QADEknB,EAAcE,EAAO3b,YAC2B,EAA1Byb,EAAYI,cAAoBH,GAAW,IACpED,EAAcE,EACdA,EAASA,EAAOtnB,OACrB,OAAO,IAAMonB,EAAYlnB,KACnBonB,EAASF,EAAYzb,UACvB0b,GACE,OAASR,IACPQ,EAAW,GAAK7f,GAAMqB,GAGxB,QADC9I,GADAqnB,EAAcE,EAAOG,eACGJ,IAEpBD,EAAYC,GAAY,CAACR,GAC1B9mB,EAAUoE,KAAK0iB,GAClBA,EAAOhe,KAAc,UAAPA,GACjBye,GACA,IACN,CACA,SAASJ,GAAuBE,GAC9B,GAAI,GAAKM,GACP,MACIA,GAAoB,EACrBC,GAAwB,KACzBnnB,MAAMtB,EAAuB,MAEjC,IAAK,IAAIooB,EAASF,EAAYpnB,OAAQ,OAASsnB,GACpBA,GAAxBF,EAAcE,GAA+BtnB,OAChD,OAAO,IAAMonB,EAAYlnB,IAAMknB,EAAYzb,UAAY,IACzD,CACA,IAAIic,GAAqB,CAAC,EAC1B,SAASC,GAAU3nB,EAAK4nB,EAAclL,EAAKmL,GACzCjX,KAAK5Q,IAAMA,EACX4Q,KAAK8L,IAAMA,EACX9L,KAAKnQ,QACHmQ,KAAKpQ,MACLoQ,KAAK9Q,OACL8Q,KAAKnF,UACLmF,KAAKxO,KACLwO,KAAKkX,YACH,KACJlX,KAAKjN,MAAQ,EACbiN,KAAKmX,WAAanX,KAAKoX,IAAM,KAC7BpX,KAAKgX,aAAeA,EACpBhX,KAAKvE,aACHuE,KAAKzQ,cACLyQ,KAAKqX,YACLrX,KAAKsX,cACH,KACJtX,KAAKiX,KAAOA,EACZjX,KAAKuX,aAAevX,KAAK7Q,MAAQ,EACjC6Q,KAAKwX,UAAY,KACjBxX,KAAKyW,WAAazW,KAAKhJ,MAAQ,EAC/BgJ,KAAK/Q,UAAY,IACnB,CACA,SAASwoB,GAAqBroB,EAAK4nB,EAAclL,EAAKmL,GACpD,OAAO,IAAIF,GAAU3nB,EAAK4nB,EAAclL,EAAKmL,EAC/C,CACA,SAASS,GAAgBC,GAEvB,UADAA,EAAYA,EAAUjjB,aACEijB,EAAUC,iBACpC,CACA,SAASC,GAAqB3kB,EAAS8jB,GACrC,IAAI9X,EAAiBhM,EAAQjE,UAkC7B,OAjCA,OAASiQ,IACHA,EAAiBuY,GACjBvkB,EAAQ9D,IACR4nB,EACA9jB,EAAQ4Y,IACR5Y,EAAQ+jB,OAEMC,YAAchkB,EAAQgkB,YACrChY,EAAe1N,KAAO0B,EAAQ1B,KAC9B0N,EAAerE,UAAY3H,EAAQ2H,UACnCqE,EAAejQ,UAAYiE,EAC3BA,EAAQjE,UAAYiQ,IACnBA,EAAe8X,aAAeA,EAC/B9X,EAAe1N,KAAO0B,EAAQ1B,KAC9B0N,EAAe/P,MAAQ,EACvB+P,EAAeqY,aAAe,EAC9BrY,EAAesY,UAAY,MAChCtY,EAAe/P,MAAwB,SAAhB+D,EAAQ/D,MAC/B+P,EAAeuX,WAAavjB,EAAQujB,WACpCvX,EAAelI,MAAQ9D,EAAQ8D,MAC/BkI,EAAetP,MAAQsD,EAAQtD,MAC/BsP,EAAeoY,cAAgBpkB,EAAQokB,cACvCpY,EAAe3P,cAAgB2D,EAAQ3D,cACvC2P,EAAemY,YAAcnkB,EAAQmkB,YACrCL,EAAe9jB,EAAQuI,aACvByD,EAAezD,aACb,OAASub,EACL,KACA,CAAEhgB,MAAOggB,EAAahgB,MAAO8gB,aAAcd,EAAac,cAC9D5Y,EAAerP,QAAUqD,EAAQrD,QACjCqP,EAAenM,MAAQG,EAAQH,MAC/BmM,EAAekY,IAAMlkB,EAAQkkB,IAC7BlY,EAAeiY,WAAajkB,EAAQikB,WAC7BjY,CACT,CACA,SAAS6Y,GAAoB7Y,EAAgBrH,GAC3CqH,EAAe/P,OAAS,SACxB,IAAI+D,EAAUgM,EAAejQ,UA4B7B,OA3BA,OAASiE,GACHgM,EAAeuX,WAAa,EAC7BvX,EAAelI,MAAQa,EACvBqH,EAAetP,MAAQ,KACvBsP,EAAeqY,aAAe,EAC9BrY,EAAeoY,cAAgB,KAC/BpY,EAAe3P,cAAgB,KAC/B2P,EAAemY,YAAc,KAC7BnY,EAAezD,aAAe,KAC9ByD,EAAerE,UAAY,OAC1BqE,EAAeuX,WAAavjB,EAAQujB,WACrCvX,EAAelI,MAAQ9D,EAAQ8D,MAC/BkI,EAAetP,MAAQsD,EAAQtD,MAC/BsP,EAAeqY,aAAe,EAC9BrY,EAAesY,UAAY,KAC3BtY,EAAeoY,cAAgBpkB,EAAQokB,cACvCpY,EAAe3P,cAAgB2D,EAAQ3D,cACvC2P,EAAemY,YAAcnkB,EAAQmkB,YACrCnY,EAAe1N,KAAO0B,EAAQ1B,KAC9BqG,EAAc3E,EAAQuI,aACtByD,EAAezD,aACd,OAAS5D,EACL,KACA,CACEb,MAAOa,EAAYb,MACnB8gB,aAAcjgB,EAAYigB,eAE/B5Y,CACT,CACA,SAAS8Y,GACPxmB,EACAsa,EACAkL,EACAiB,EACAhB,EACAjgB,GAEA,IAAIkhB,EAAW,EAEf,GADAD,EAAQzmB,EACJ,oBAAsBA,EAAMkmB,GAAgBlmB,KAAU0mB,EAAW,QAChE,GAAI,kBAAoB1mB,EAC3B0mB,EA4jXJ,SAA6B1mB,EAAMgT,EAAO2T,GACxC,GAAI,IAAMA,GAAe,MAAQ3T,EAAM4T,SAAU,OAAO,EACxD,OAAQ5mB,GACN,IAAK,OACL,IAAK,QACH,OAAO,EACT,IAAK,QACH,GACE,kBAAoBgT,EAAM6T,YAC1B,kBAAoB7T,EAAMkO,MAC1B,KAAOlO,EAAMkO,KAEb,MACF,OAAO,EACT,IAAK,OACH,GACE,kBAAoBlO,EAAM8T,KAC1B,kBAAoB9T,EAAMkO,MAC1B,KAAOlO,EAAMkO,MACblO,EAAM+T,QACN/T,EAAMgU,QAEN,MACF,MACO,eADChU,EAAM8T,MAGP9mB,EAAOgT,EAAMrC,SACd,kBAAoBqC,EAAM6T,YAAc,MAAQ7mB,GAKxD,IAAK,SACH,GACEgT,EAAMiU,OACN,oBAAsBjU,EAAMiU,OAC5B,kBAAoBjU,EAAMiU,QACzBjU,EAAM+T,SACN/T,EAAMgU,SACPhU,EAAMkU,KACN,kBAAoBlU,EAAMkU,IAE1B,OAAO,EAEb,OAAO,CACT,CAzmXeC,CACTnnB,EACAwlB,EACAzjB,EAAmBL,SAEjB,GACA,SAAW1B,GAAQ,SAAWA,GAAQ,SAAWA,EAC/C,GACA,OAENiT,EAAG,OAAQjT,GACT,KAAKR,EACH,OACGQ,EAAOimB,GAAqB,GAAIT,EAAclL,EAAKmL,IAC9CC,YAAclmB,EACnBQ,EAAKwF,MAAQA,EACdxF,EAEJ,KAAKnB,EACH,OAAOuoB,GAAwB5B,EAAa1U,SAAU2U,EAAMjgB,EAAO8U,GACrE,KAAKxb,EACH4nB,EAAW,EACXjB,GAAQ,GACR,MACF,KAAK1mB,EACH,OACGiB,EAAOimB,GAAqB,GAAIT,EAAclL,EAAY,EAAPmL,IAC9CC,YAAc3mB,EACnBiB,EAAKwF,MAAQA,EACdxF,EAEJ,KAAKZ,EACH,OACGY,EAAOimB,GAAqB,GAAIT,EAAclL,EAAKmL,IAC9CC,YAActmB,EACnBY,EAAKwF,MAAQA,EACdxF,EAEJ,KAAKX,EACH,OACGW,EAAOimB,GAAqB,GAAIT,EAAclL,EAAKmL,IAC9CC,YAAcrmB,EACnBW,EAAKwF,MAAQA,EACdxF,EAEJ,QACE,GAAI,kBAAoBA,GAAQ,OAASA,EACvC,OAAQA,EAAKC,UACX,KAAKjB,EACL,KAAKE,EACHwnB,EAAW,GACX,MAAMzT,EACR,KAAKhU,EACHynB,EAAW,EACX,MAAMzT,EACR,KAAK9T,EACHunB,EAAW,GACX,MAAMzT,EACR,KAAK3T,EACHonB,EAAW,GACX,MAAMzT,EACR,KAAK1T,EACHmnB,EAAW,GACXD,EAAQ,KACR,MAAMxT,EAEZyT,EAAW,GACXlB,EAAetnB,MACbtB,EAAuB,IAAK,OAASoD,EAAO,cAAgBA,EAAM,KAEpEymB,EAAQ,KAMd,OAJAnM,EAAM2L,GAAqBS,EAAUlB,EAAclL,EAAKmL,IACpDC,YAAc1lB,EAClBsa,EAAIta,KAAOymB,EACXnM,EAAI9U,MAAQA,EACL8U,CACT,CACA,SAAS8M,GAAwBC,EAAU5B,EAAMjgB,EAAO8U,GAGtD,OAFA+M,EAAWpB,GAAqB,EAAGoB,EAAU/M,EAAKmL,IACzCjgB,MAAQA,EACV6hB,CACT,CACA,SAASC,GAAoBC,EAAS9B,EAAMjgB,GAG1C,OAFA+hB,EAAUtB,GAAqB,EAAGsB,EAAS,KAAM9B,IACzCjgB,MAAQA,EACT+hB,CACT,CACA,SAASC,GAAsBC,EAAQhC,EAAMjgB,GAa3C,OAZAigB,EAAOQ,GACL,EACA,OAASwB,EAAO3W,SAAW2W,EAAO3W,SAAW,GAC7C2W,EAAOnN,IACPmL,IAEGjgB,MAAQA,EACbigB,EAAKpc,UAAY,CACfyX,cAAe2G,EAAO3G,cACtB4G,gBAAiB,KACjBC,eAAgBF,EAAOE,gBAElBlC,CACT,CACA,IAAImC,GAAY,GACdC,GAAiB,EACjBC,GAAmB,KACnBC,GAAgB,EAChBC,GAAU,GACVC,GAAe,EACfC,GAAsB,KACtBC,GAAgB,EAChBC,GAAsB,GACxB,SAASC,GAAa3a,EAAgB4a,GACpCV,GAAUC,MAAoBE,GAC9BH,GAAUC,MAAoBC,GAC9BA,GAAmBpa,EACnBqa,GAAgBO,CAClB,CACA,SAASC,GAAW7a,EAAgB4a,EAAe/mB,GACjDymB,GAAQC,MAAkBE,GAC1BH,GAAQC,MAAkBG,GAC1BJ,GAAQC,MAAkBC,GAC1BA,GAAsBxa,EACtB,IAAI8a,EAAuBL,GAC3Bza,EAAiB0a,GACjB,IAAIK,EAAa,GAAKvjB,GAAMsjB,GAAwB,EACpDA,KAA0B,GAAKC,GAC/BlnB,GAAS,EACT,IAAIvE,EAAS,GAAKkI,GAAMojB,GAAiBG,EACzC,GAAI,GAAKzrB,EAAQ,CACf,IAAI0rB,EAAuBD,EAAcA,EAAa,EACtDzrB,GACEwrB,GACE,GAAKE,GAAwB,GAC/BxgB,SAAS,IACXsgB,IAAyBE,EACzBD,GAAcC,EACdP,GACG,GAAM,GAAKjjB,GAAMojB,GAAiBG,EAClClnB,GAASknB,EACVD,EACFJ,GAAsBprB,EAAS0Q,CACjC,MACGya,GACE,GAAKnrB,EAAWuE,GAASknB,EAAcD,EACvCJ,GAAsB1a,CAC7B,CACA,SAASib,GAAuBjb,GAC9B,OAASA,EAAehQ,SACrB2qB,GAAa3a,EAAgB,GAAI6a,GAAW7a,EAAgB,EAAG,GACpE,CACA,SAASkb,GAAelb,GACtB,KAAOA,IAAmBoa,IACvBA,GAAmBF,KAAYC,IAC7BD,GAAUC,IAAkB,KAC5BE,GAAgBH,KAAYC,IAC5BD,GAAUC,IAAkB,KACjC,KAAOna,IAAmBwa,IACvBA,GAAsBF,KAAUC,IAC9BD,GAAQC,IAAgB,KACxBG,GAAsBJ,KAAUC,IAChCD,GAAQC,IAAgB,KACxBE,GAAgBH,KAAUC,IAC1BD,GAAQC,IAAgB,IAC/B,CACA,IAAIY,GAAuB,KACzBC,GAAyB,KACzB5Y,IAAc,EACd6Y,GAAkB,KAClBC,IAAyB,EACzBC,GAA6B/qB,MAAMtB,EAAuB,MAC5D,SAASssB,GAAyB3rB,GAGhC,MADA4rB,GAAoBrF,GADR5lB,MAAMtB,EAAuB,IAAK,KACQW,IAChD0rB,EACR,CACA,SAASG,GAA6B7rB,GACpC,IAAI8rB,EAAW9rB,EAAM8L,UACnBrJ,EAAOzC,EAAMyC,KACbgT,EAAQzV,EAAMuoB,cAGhB,OAFAuD,EAASjhB,IAAuB7K,EAChC8rB,EAAShhB,IAAoB2K,EACrBhT,GACN,IAAK,SACHspB,GAA0B,SAAUD,GACpCC,GAA0B,QAASD,GACnC,MACF,IAAK,SACL,IAAK,SACL,IAAK,QACHC,GAA0B,OAAQD,GAClC,MACF,IAAK,QACL,IAAK,QACH,IAAKrpB,EAAO,EAAGA,EAAOupB,GAAgBvsB,OAAQgD,IAC5CspB,GAA0BC,GAAgBvpB,GAAOqpB,GACnD,MACF,IAAK,SACHC,GAA0B,QAASD,GACnC,MACF,IAAK,MACL,IAAK,QACL,IAAK,OACHC,GAA0B,QAASD,GACnCC,GAA0B,OAAQD,GAClC,MACF,IAAK,UACHC,GAA0B,SAAUD,GACpC,MACF,IAAK,QACHC,GAA0B,UAAWD,GACrCpZ,GACEoZ,EACArW,EAAMlR,MACNkR,EAAMvR,aACNuR,EAAM/D,QACN+D,EAAMjD,eACNiD,EAAMhT,KACNgT,EAAM7S,MACN,GAEF8N,GAAMob,GACN,MACF,IAAK,SACHC,GAA0B,UAAWD,GACrC,MACF,IAAK,WACHC,GAA0B,UAAWD,GACnCxY,GAAawY,EAAUrW,EAAMlR,MAAOkR,EAAMvR,aAAcuR,EAAMlC,UAC9D7C,GAAMob,GAGX,kBADDrpB,EAAOgT,EAAMlC,WAEX,kBAAoB9Q,GACpB,kBAAoBA,GACtBqpB,EAAStY,cAAgB,GAAK/Q,IAC9B,IAAOgT,EAAMwW,0BACbC,GAAsBJ,EAAStY,YAAa/Q,IACvC,MAAQgT,EAAM0W,UACZJ,GAA0B,eAAgBD,GAC3CC,GAA0B,SAAUD,IACtC,MAAQrW,EAAM2W,UAAYL,GAA0B,SAAUD,GAC9D,MAAQrW,EAAM4W,aACZN,GAA0B,YAAaD,GACzC,MAAQrW,EAAM6W,UAAYR,EAASS,QAAUC,IAC5CV,GAAW,GACXA,GAAW,EAChBA,GAAYH,GAAyB3rB,EACvC,CACA,SAASysB,GAAoBzsB,GAC3B,IAAKsrB,GAAuBtrB,EAAMG,OAAQmrB,IACxC,OAAQA,GAAqBjrB,KAC3B,KAAK,EACL,KAAK,GAEH,YADAorB,IAAyB,GAE3B,KAAK,GACL,KAAK,EAEH,YADAA,IAAyB,GAE3B,QACEH,GAAuBA,GAAqBnrB,OAEpD,CACA,SAASusB,GAAkB1sB,GACzB,GAAIA,IAAUsrB,GAAsB,OAAO,EAC3C,IAAK3Y,GAAa,OAAO8Z,GAAoBzsB,GAAS2S,IAAc,GAAK,EACzE,IACEga,EADEtsB,EAAML,EAAMK,IAYhB,IAVKssB,EAAkB,IAAMtsB,GAAO,KAAOA,MACpCssB,EAAkB,IAAMtsB,KAExBssB,IACG,UAFLA,EAAkB3sB,EAAMyC,OAEW,WAAakqB,IAC7CC,GAAqB5sB,EAAMyC,KAAMzC,EAAMuoB,gBAC7CoE,GAAmBA,GAErBA,GAAmBpB,IAA0BI,GAAyB3rB,GACtEysB,GAAoBzsB,GAChB,KAAOK,EAAK,CAGd,KADAL,EAAQ,QADRA,EAAQA,EAAMQ,eACWR,EAAMS,WAAa,MAChC,MAAME,MAAMtB,EAAuB,MAC/CqW,EAAG,CAED,IADA1V,EAAQA,EAAMgjB,YACT3iB,EAAM,EAAGL,GAAS,CACrB,GAAI,IAAMA,EAAMF,SACd,GAAqC,QAA/B6sB,EAAkB3sB,EAAM4D,MAAkC,CAC9D,GAAI,IAAMvD,EAAK,CACbkrB,GAAyBsB,GAAkB7sB,EAAMgjB,aACjD,MAAMtN,CACR,CACArV,GACF,KACG,MAAQssB,GACP,OAASA,GACT,OAASA,GACTtsB,IACNL,EAAQA,EAAMgjB,WAChB,CACAuI,GAAyB,IAC3B,CACF,MACE,KAAOlrB,GACDA,EAAMkrB,GACRuB,GAAiB9sB,EAAMyC,OACjBzC,EAAQ+sB,GACTA,GAA8C,KAC9CxB,GAAyBvrB,GACzBurB,GAAyBlrB,GAC7BkrB,GAAyBD,GACtBuB,GAAkB7sB,EAAM8L,UAAUkX,aAClC,KACV,OAAO,CACT,CACA,SAASgK,KACPzB,GAAyBD,GAAuB,KAChD3Y,IAAc,CAChB,CACA,SAASsa,KACP,IAAIC,EAAe1B,GASnB,OARA,OAAS0B,IACN,OAASC,GACLA,GAAsCD,EACvCC,GAAoC7oB,KAAK8oB,MACvCD,GACAD,GAEL1B,GAAkB,MACd0B,CACT,CACA,SAAStB,GAAoByB,GAC3B,OAAS7B,GACJA,GAAkB,CAAC6B,GACpB7B,GAAgBlnB,KAAK+oB,EAC3B,CACA,IAAIC,GAAcrpB,EAAa,MAC7BspB,GAA4B,KAC5BC,GAAwB,KAC1B,SAASC,GAAaC,EAAeroB,EAASsoB,GAC5CrpB,EAAKgpB,GAAajoB,EAAQI,eAC1BJ,EAAQI,cAAgBkoB,CAC1B,CACA,SAASC,GAAYvoB,GACnBA,EAAQI,cAAgB6nB,GAAYnpB,QACpCC,EAAIkpB,GACN,CACA,SAASO,GAAgCpG,EAAQ3e,EAAaglB,GAC5D,KAAO,OAASrG,GAAU,CACxB,IAAIvnB,EAAYunB,EAAOvnB,UAOvB,IANCunB,EAAOC,WAAa5e,KAAiBA,GAChC2e,EAAOC,YAAc5e,EACvB,OAAS5I,IAAcA,EAAUwnB,YAAc5e,IAC/C,OAAS5I,IACRA,EAAUwnB,WAAa5e,KAAiBA,IACxC5I,EAAUwnB,YAAc5e,GACzB2e,IAAWqG,EAAiB,MAChCrG,EAASA,EAAOtnB,MAClB,CACF,CACA,SAAS4tB,GACP5d,EACA6d,EACAllB,EACAmlB,GAEA,IAAIjuB,EAAQmQ,EAAetP,MAE3B,IADA,OAASb,IAAUA,EAAMG,OAASgQ,GAC3B,OAASnQ,GAAS,CACvB,IAAIkuB,EAAOluB,EAAM0M,aACjB,GAAI,OAASwhB,EAAM,CACjB,IAAIC,EAAYnuB,EAAMa,MACtBqtB,EAAOA,EAAKnF,aACZrT,EAAG,KAAO,OAASwY,GAAQ,CACzB,IAAIE,EAAaF,EACjBA,EAAOluB,EACP,IAAK,IAAIL,EAAI,EAAGA,EAAIquB,EAASvuB,OAAQE,IACnC,GAAIyuB,EAAW/oB,UAAY2oB,EAASruB,GAAI,CACtCuuB,EAAKjmB,OAASa,EAEd,QADAslB,EAAaF,EAAKhuB,aACMkuB,EAAWnmB,OAASa,GAC5C+kB,GACEK,EAAK/tB,OACL2I,EACAqH,GAEF8d,IAA6BE,EAAY,MACzC,MAAMzY,CACR,CACFwY,EAAOE,EAAWnH,IACpB,CACF,MAAO,GAAI,KAAOjnB,EAAMK,IAAK,CAE3B,GAAI,QADJ8tB,EAAYnuB,EAAMG,QACM,MAAMQ,MAAMtB,EAAuB,MAC3D8uB,EAAUlmB,OAASa,EAEnB,QADAolB,EAAOC,EAAUjuB,aACCguB,EAAKjmB,OAASa,GAChC+kB,GAAgCM,EAAWrlB,EAAaqH,GACxDge,EAAY,IACd,MAAOA,EAAYnuB,EAAMa,MACzB,GAAI,OAASstB,EAAWA,EAAUhuB,OAASH,OAEzC,IAAKmuB,EAAYnuB,EAAO,OAASmuB,GAAa,CAC5C,GAAIA,IAAche,EAAgB,CAChCge,EAAY,KACZ,KACF,CAEA,GAAI,QADJnuB,EAAQmuB,EAAUrtB,SACE,CAClBd,EAAMG,OAASguB,EAAUhuB,OACzBguB,EAAYnuB,EACZ,KACF,CACAmuB,EAAYA,EAAUhuB,MACxB,CACFH,EAAQmuB,CACV,CACF,CACA,SAASE,GACPlqB,EACAgM,EACArH,EACAmlB,GAEA9pB,EAAU,KACV,IACE,IAAIsjB,EAAStX,EAAgBme,GAA6B,EAC1D,OAAS7G,GAET,CACA,IAAK6G,EACH,GAAI,KAAsB,OAAf7G,EAAOrnB,OAAiBkuB,GAA6B,OAC3D,GAAI,KAAsB,OAAf7G,EAAOrnB,OAAiB,MAC1C,GAAI,KAAOqnB,EAAOpnB,IAAK,CACrB,IAAIkuB,EAAgB9G,EAAOvnB,UAC3B,GAAI,OAASquB,EAAe,MAAM5tB,MAAMtB,EAAuB,MAE/D,GAAI,QADJkvB,EAAgBA,EAAchG,eACF,CAC1B,IAAIljB,EAAUoiB,EAAOhlB,KACrByf,GAASuF,EAAOQ,aAAa1jB,MAAOgqB,EAAchqB,SAC/C,OAASJ,EAAUA,EAAQG,KAAKe,GAAYlB,EAAU,CAACkB,GAC5D,CACF,MAAO,GAAIoiB,IAAW9iB,EAA6BR,QAAS,CAE1D,GAAI,QADJoqB,EAAgB9G,EAAOvnB,WACK,MAAMS,MAAMtB,EAAuB,MAC/DkvB,EAAc/tB,cAAcA,gBAC1BinB,EAAOjnB,cAAcA,gBACpB,OAAS2D,EACNA,EAAQG,KAAKkB,IACZrB,EAAU,CAACqB,IACpB,CACAiiB,EAASA,EAAOtnB,MAClB,CACA,OAASgE,GACP4pB,GACE5d,EACAhM,EACA2E,EACAmlB,GAEJ9d,EAAe/P,OAAS,MAC1B,CACA,SAASouB,GAAsBC,GAC7B,IACEA,EAAsBA,EAAoB1F,aAC1C,OAAS0F,GAET,CACA,IACGvM,GACCuM,EAAoBppB,QAAQI,cAC5BgpB,EAAoBC,eAGtB,OAAO,EACTD,EAAsBA,EAAoBxH,IAC5C,CACA,OAAO,CACT,CACA,SAAS0H,GAAqBxe,GAC5Bod,GAA4Bpd,EAC5Bqd,GAAwB,KAExB,QADArd,EAAiBA,EAAezD,gBACJyD,EAAe4Y,aAAe,KAC5D,CACA,SAAS6F,GAAYvpB,GACnB,OAAOwpB,GAAuBtB,GAA2BloB,EAC3D,CACA,SAASypB,GAAgCC,EAAU1pB,GAEjD,OADA,OAASkoB,IAA6BoB,GAAqBI,GACpDF,GAAuBE,EAAU1pB,EAC1C,CACA,SAASwpB,GAAuBE,EAAU1pB,GACxC,IAAId,EAAQc,EAAQI,cAEpB,GADAJ,EAAU,CAAEA,QAASA,EAASqpB,cAAenqB,EAAO0iB,KAAM,MACtD,OAASuG,GAAuB,CAClC,GAAI,OAASuB,EAAU,MAAMpuB,MAAMtB,EAAuB,MAC1DmuB,GAAwBnoB,EACxB0pB,EAASriB,aAAe,CAAEzE,MAAO,EAAG8gB,aAAc1jB,GAClD0pB,EAAS3uB,OAAS,MACpB,MAAOotB,GAAwBA,GAAsBvG,KAAO5hB,EAC5D,OAAOd,CACT,CACA,IAAIyqB,GACA,qBAAuBC,gBACnBA,gBACA,WACE,IAAInO,EAAY,GACdoO,EAAUje,KAAKie,OAAS,CACtBC,SAAS,EACT5Y,iBAAkB,SAAU9T,EAAM2sB,GAChCtO,EAAUxc,KAAK8qB,EACjB,GAEJne,KAAKoe,MAAQ,WACXH,EAAOC,SAAU,EACjBrO,EAAUwO,SAAQ,SAAUF,GAC1B,OAAOA,GACT,GACF,CACF,EACNG,GAAqBtwB,EAAU4G,0BAC/B2pB,GAAiBvwB,EAAU4H,wBAC3B4oB,GAAe,CACb/sB,SAAUf,EACV+tB,SAAU,KACVC,SAAU,KACVlqB,cAAe,KACfmqB,eAAgB,KAChBC,aAAc,GAElB,SAASC,KACP,MAAO,CACLC,WAAY,IAAIf,GAChBprB,KAAM,IAAIsI,IACV8jB,SAAU,EAEd,CACA,SAASC,GAAaC,GACpBA,EAAMF,WACN,IAAME,EAAMF,UACVT,GAAmBC,IAAgB,WACjCU,EAAMH,WAAWV,OACnB,GACJ,CACA,IAAIc,GAA4B,KAC9BC,GAA+B,EAC/BC,GAAuB,EACvBC,GAAiC,KAkBnC,SAASC,KACP,GACE,MAAQH,IACR,OAASD,GACT,CACA,OAASG,KACNA,GAA+BE,OAAS,aAC3C,IAAI1P,EAAYqP,GAChBA,GAA4B,KAC5BE,GAAuB,EACvBC,GAAiC,KACjC,IAAK,IAAI3wB,EAAI,EAAGA,EAAImhB,EAAUrhB,OAAQE,KAAK,EAAImhB,EAAUnhB,KAC3D,CACF,CA0BA,IAAI8wB,GAA8BntB,EAAqBotB,EACvDptB,EAAqBotB,EAAI,SAAUhL,EAAYtN,GAC7C,kBAAoBA,GAClB,OAASA,GACT,oBAAsBA,EAAYuY,MA5DtC,SAA6BjL,EAAYkL,GACvC,GAAI,OAAST,GAA2B,CACtC,IAAIU,EAAsBV,GAA4B,GACtDC,GAA+B,EAC/BC,GAAuBS,KACvBR,GAAiC,CAC/BE,OAAQ,UACRjsB,WAAO,EACPosB,KAAM,SAAUI,GACdF,EAAmBvsB,KAAKysB,EAC1B,EAEJ,CACAX,KACAQ,EAASD,KAAKJ,GAA2BA,GAE3C,CA6CIS,CAAoBtL,EAAYtN,GAClC,OAASqY,IACPA,GAA4B/K,EAAYtN,EAC5C,EACA,IAAI6Y,GAAehtB,EAAa,MAChC,SAASitB,KACP,IAAIC,EAAiCF,GAAa9sB,QAClD,OAAO,OAASgtB,EACZA,EACAC,GAAmBC,WACzB,CACA,SAASC,GAAeC,EAAyBC,GAE3CltB,EAAK2sB,GADT,OAASO,EACcP,GAAa9sB,QACbqtB,EAAcC,KACvC,CACA,SAASC,KACP,IAAIC,EAAgBT,KACpB,OAAO,OAASS,EACZ,KACA,CAAElK,OAAQgI,GAAahqB,cAAegsB,KAAME,EAClD,CACA,IAAIC,GAAoBjxB,MAAMtB,EAAuB,MACnDwyB,GAA2BlxB,MAAMtB,EAAuB,MACxDyyB,GAA0BnxB,MAAMtB,EAAuB,MACvD0yB,GAA8B,CAAEpB,KAAM,WAAa,GACrD,SAASqB,GAAmBpB,GAE1B,MAAO,eADPA,EAAWA,EAASJ,SACe,aAAeI,CACpD,CACA,SAASqB,KAAU,CACnB,SAASC,GAAkBC,EAAevB,EAAU5sB,GAKlD,YAHA,KADAA,EAAQmuB,EAAcnuB,IAElBmuB,EAAc7tB,KAAKssB,GACnB5sB,IAAU4sB,IAAaA,EAASD,KAAKsB,GAAQA,IAAUrB,EAAW5sB,GAC9D4sB,EAASJ,QACf,IAAK,YACH,OAAOI,EAASrsB,MAClB,IAAK,WACH,MAEE6tB,GADED,EAAgBvB,EAASyB,QAE3BF,EAEJ,QACE,GAAI,kBAAoBvB,EAASJ,OAAQI,EAASD,KAAKsB,GAAQA,QAC1D,CAEH,GAAI,QADJE,EAAgBf,KACc,IAAMe,EAAcG,oBAChD,MAAM3xB,MAAMtB,EAAuB,OACrC8yB,EAAgBvB,GACFJ,OAAS,UACvB2B,EAAcxB,MACZ,SAAU4B,GACR,GAAI,YAAc3B,EAASJ,OAAQ,CACjC,IAAIgC,EAAoB5B,EACxB4B,EAAkBhC,OAAS,YAC3BgC,EAAkBjuB,MAAQguB,CAC5B,CACF,IACA,SAAUlF,GACR,GAAI,YAAcuD,EAASJ,OAAQ,CACjC,IAAIiC,EAAmB7B,EACvB6B,EAAiBjC,OAAS,WAC1BiC,EAAiBJ,OAAShF,CAC5B,CACF,GAEJ,CACA,OAAQuD,EAASJ,QACf,IAAK,YACH,OAAOI,EAASrsB,MAClB,IAAK,WACH,MAEE6tB,GADED,EAAgBvB,EAASyB,QAE3BF,EAIN,MADAO,GAAoB9B,EACdgB,GAEZ,CACA,IAAIc,GAAoB,KACxB,SAASC,KACP,GAAI,OAASD,GAAmB,MAAM/xB,MAAMtB,EAAuB,MACnE,IAAIuxB,EAAW8B,GAEf,OADAA,GAAoB,KACb9B,CACT,CACA,SAASwB,GAA8BQ,GACrC,GACEA,IAAmBhB,IACnBgB,IAAmBd,GAEnB,MAAMnxB,MAAMtB,EAAuB,KACvC,CACA,IAAIwzB,IAAiB,EACrB,SAASC,GAAsB9yB,GAC7BA,EAAMsoB,YAAc,CAClByK,UAAW/yB,EAAMQ,cACjBwyB,gBAAiB,KACjBC,eAAgB,KAChBC,OAAQ,CAAEvvB,QAAS,KAAMsE,MAAO,EAAGkrB,gBAAiB,MACpDC,UAAW,KAEf,CACA,SAASC,GAAiBlvB,EAASgM,GACjChM,EAAUA,EAAQmkB,YAClBnY,EAAemY,cAAgBnkB,IAC5BgM,EAAemY,YAAc,CAC5ByK,UAAW5uB,EAAQ4uB,UACnBC,gBAAiB7uB,EAAQ6uB,gBACzBC,eAAgB9uB,EAAQ8uB,eACxBC,OAAQ/uB,EAAQ+uB,OAChBE,UAAW,MAEjB,CACA,SAASE,GAAatqB,GACpB,MAAO,CAAEA,KAAMA,EAAM3I,IAAK,EAAGkzB,QAAS,KAAMC,SAAU,KAAMvM,KAAM,KACpE,CACA,SAASwM,GAAczzB,EAAOgnB,EAAQhe,GACpC,IAAIsf,EAActoB,EAAMsoB,YACxB,GAAI,OAASA,EAAa,OAAO,KAEjC,GADAA,EAAcA,EAAY4K,OACtB,KAA0B,EAAnBQ,IAAuB,CAChC,IAAI/vB,EAAU2kB,EAAY3kB,QAO1B,OANA,OAASA,EACJqjB,EAAOC,KAAOD,GACbA,EAAOC,KAAOtjB,EAAQsjB,KAAQtjB,EAAQsjB,KAAOD,GACnDsB,EAAY3kB,QAAUqjB,EACtBA,EAASK,GAAuBrnB,GAChCknB,GAA8BlnB,EAAO,KAAMgJ,GACpCge,CACT,CAEA,OADAG,GAAgBnnB,EAAOsoB,EAAatB,EAAQhe,GACrCqe,GAAuBrnB,EAChC,CACA,SAAS2zB,GAAoBvrB,EAAMpI,EAAOgJ,GAExC,GAAI,QADJhJ,EAAQA,EAAMsoB,eACUtoB,EAAQA,EAAMkzB,OAAS,KAAc,QAAPlqB,IAAkB,CACtE,IAAI4qB,EAAa5zB,EAAMiI,MAEvBe,GADA4qB,GAAcxrB,EAAKG,aAEnBvI,EAAMiI,MAAQe,EACdc,GAAkB1B,EAAMY,EAC1B,CACF,CACA,SAAS6qB,GAAsB1jB,EAAgB2jB,GAC7C,IAAI/M,EAAQ5W,EAAemY,YACzBnkB,EAAUgM,EAAejQ,UAC3B,GACE,OAASiE,GACyB4iB,KAAhC5iB,EAAUA,EAAQmkB,aACpB,CACA,IAAIyL,EAAW,KACbC,EAAU,KAEZ,GAAI,QADJjN,EAAQA,EAAMiM,iBACM,CAClB,EAAG,CACD,IAAIiB,EAAQ,CACVjrB,KAAM+d,EAAM/d,KACZ3I,IAAK0mB,EAAM1mB,IACXkzB,QAASxM,EAAMwM,QACfC,SAAU,KACVvM,KAAM,MAER,OAAS+M,EACJD,EAAWC,EAAUC,EACrBD,EAAUA,EAAQ/M,KAAOgN,EAC9BlN,EAAQA,EAAME,IAChB,OAAS,OAASF,GAClB,OAASiN,EACJD,EAAWC,EAAUF,EACrBE,EAAUA,EAAQ/M,KAAO6M,CAChC,MAAOC,EAAWC,EAAUF,EAS5B,OARA/M,EAAQ,CACNgM,UAAW5uB,EAAQ4uB,UACnBC,gBAAiBe,EACjBd,eAAgBe,EAChBd,OAAQ/uB,EAAQ+uB,OAChBE,UAAWjvB,EAAQivB,gBAErBjjB,EAAemY,YAAcvB,EAE/B,CAEA,QADA5W,EAAiB4W,EAAMkM,gBAElBlM,EAAMiM,gBAAkBc,EACxB3jB,EAAe8W,KAAO6M,EAC3B/M,EAAMkM,eAAiBa,CACzB,CACA,IAAII,IAAkC,EACtC,SAASC,KACP,GAAID,GAAiC,CAEnC,GAAI,OAD0B5D,GACQ,MADRA,EAEhC,CACF,CACA,SAAS8D,GACPC,EACA5e,EACA6e,EACAxrB,GAEAorB,IAAkC,EAClC,IAAInN,EAAQsN,EAAwB/L,YACpCuK,IAAiB,EACjB,IAAIG,EAAkBjM,EAAMiM,gBAC1BC,EAAiBlM,EAAMkM,eACvBsB,EAAexN,EAAMmM,OAAOvvB,QAC9B,GAAI,OAAS4wB,EAAc,CACzBxN,EAAMmM,OAAOvvB,QAAU,KACvB,IAAI6wB,EAAoBD,EACtBE,EAAqBD,EAAkBvN,KACzCuN,EAAkBvN,KAAO,KACzB,OAASgM,EACJD,EAAkByB,EAClBxB,EAAehM,KAAOwN,EAC3BxB,EAAiBuB,EACjB,IAAIrwB,EAAUkwB,EAAwBn0B,UACtC,OAASiE,KAENowB,GADCpwB,EAAUA,EAAQmkB,aACI2K,kBACPA,IACd,OAASsB,EACLpwB,EAAQ6uB,gBAAkByB,EAC1BF,EAAatN,KAAOwN,EACxBtwB,EAAQ8uB,eAAiBuB,GAChC,CACA,GAAI,OAASxB,EAAiB,CAC5B,IAAIhU,EAAW+H,EAAMgM,UAIrB,IAHAE,EAAiB,EACjB9uB,EAAUswB,EAAqBD,EAAoB,KACnDD,EAAevB,IACZ,CACD,IAAIxpB,GAAkC,UAArB+qB,EAAavrB,KAC5B0rB,EAAiBlrB,IAAe+qB,EAAavrB,KAC/C,GACE0rB,GACKC,GAAgCnrB,KAAgBA,GAChDV,EAAcU,KAAgBA,EACnC,CACA,IAAMA,GACJA,IAAe6mB,KACd6D,IAAkC,GACrC,OAAS/vB,IACNA,EAAUA,EAAQ8iB,KACjB,CACEje,KAAM,EACN3I,IAAKk0B,EAAal0B,IAClBkzB,QAASgB,EAAahB,QACtBC,SAAU,KACVvM,KAAM,OAEZvR,EAAG,CACD,IAAIvF,EAAiBkkB,EACnBrN,EAASuN,EACX/qB,EAAaiM,EACb,IAAIqW,EAAWwI,EACf,OAAQtN,EAAO3mB,KACb,KAAK,EAEH,GAAI,oBADJ8P,EAAiB6W,EAAOuM,SACkB,CACxCvU,EAAW7O,EAAe9C,KAAKye,EAAU9M,EAAUxV,GACnD,MAAMkM,CACR,CACAsJ,EAAW7O,EACX,MAAMuF,EACR,KAAK,EACHvF,EAAe/P,OAAiC,MAAxB+P,EAAe/P,MAAkB,IAC3D,KAAK,EAMH,GAAI,QAJJoJ,EACE,oBAFF2G,EAAiB6W,EAAOuM,SAGlBpjB,EAAe9C,KAAKye,EAAU9M,EAAUxV,GACxC2G,SACqB,IAAW3G,EAAY,MAAMkM,EACxDsJ,EAAWje,EAAO,CAAC,EAAGie,EAAUxV,GAChC,MAAMkM,EACR,KAAK,EACHmd,IAAiB,EAEvB,CAEA,QADArpB,EAAa+qB,EAAaf,YAEtBa,EAAwBj0B,OAAS,GACnCs0B,IAAmBL,EAAwBj0B,OAAS,MAEpD,QADCs0B,EAAiB3N,EAAMqM,WAEnBrM,EAAMqM,UAAY,CAAC5pB,GACpBkrB,EAAepwB,KAAKkF,GAC5B,MACGkrB,EAAiB,CAChB1rB,KAAMQ,EACNnJ,IAAKk0B,EAAal0B,IAClBkzB,QAASgB,EAAahB,QACtBC,SAAUe,EAAaf,SACvBvM,KAAM,MAEN,OAAS9iB,GACHswB,EAAqBtwB,EAAUuwB,EAChCF,EAAoBxV,GACpB7a,EAAUA,EAAQ8iB,KAAOyN,EAC7BzB,GAAkBzpB,EAEvB,GAAI,QADJ+qB,EAAeA,EAAatN,MAE1B,IAA4C,QAAtCsN,EAAexN,EAAMmM,OAAOvvB,SAChC,MAGG4wB,GADFG,EAAiBH,GACetN,KAC9ByN,EAAezN,KAAO,KACtBF,EAAMkM,eAAiByB,EACvB3N,EAAMmM,OAAOvvB,QAAU,IAAK,CACrC,CACA,OAASQ,IAAYqwB,EAAoBxV,GACzC+H,EAAMgM,UAAYyB,EAClBzN,EAAMiM,gBAAkByB,EACxB1N,EAAMkM,eAAiB9uB,EACvB,OAAS6uB,IAAoBjM,EAAMmM,OAAOjrB,MAAQ,GAClD2sB,IAAkC3B,EAClCoB,EAAwBpsB,MAAQgrB,EAChCoB,EAAwB7zB,cAAgBwe,CAC1C,CACF,CACA,SAAS6V,GAAarB,EAAUnuB,GAC9B,GAAI,oBAAsBmuB,EACxB,MAAM7yB,MAAMtB,EAAuB,IAAKm0B,IAC1CA,EAASnmB,KAAKhI,EAChB,CACA,SAASyvB,GAAgBxM,EAAajjB,GACpC,IAAI+tB,EAAY9K,EAAY8K,UAC5B,GAAI,OAASA,EACX,IACE9K,EAAY8K,UAAY,KAAM9K,EAAc,EAC5CA,EAAc8K,EAAU3zB,OACxB6oB,IAEAuM,GAAazB,EAAU9K,GAAcjjB,EAC3C,CACA,IAAI0vB,GAA+B9wB,EAAa,MAC9C+wB,GAAiC/wB,EAAa,GAChD,SAASgxB,GAAkBj1B,EAAOqF,GAEhCf,EAAK0wB,GADLh1B,EAAQk1B,IAER5wB,EAAKywB,GAA8B1vB,GACnC6vB,GAAuBl1B,EAAQqF,EAAQ8vB,SACzC,CACA,SAASC,KACP9wB,EAAK0wB,GAAgCE,IACrC5wB,EAAKywB,GAA8BA,GAA6B5wB,QAClE,CACA,SAASkxB,KACPH,GAAuBF,GAA+B7wB,QACtDC,EAAI2wB,IACJ3wB,EAAI4wB,GACN,CACA,IAAIlsB,GAAc,EAChBwsB,GAA0B,KAC1BC,GAAc,KACdC,GAAqB,KACrBC,IAA+B,EAC/BC,IAA6C,EAC7CC,IAAsC,EACtCC,GAAiB,EACjBC,GAAyB,EACzBC,GAAkB,KAClBC,GAAwB,EAC1B,SAASC,KACP,MAAMr1B,MAAMtB,EAAuB,KACrC,CACA,SAAS42B,GAAmBC,EAAUC,GACpC,GAAI,OAASA,EAAU,OAAO,EAC9B,IAAK,IAAIx2B,EAAI,EAAGA,EAAIw2B,EAAS12B,QAAUE,EAAIu2B,EAASz2B,OAAQE,IAC1D,IAAKuiB,GAASgU,EAASv2B,GAAIw2B,EAASx2B,IAAK,OAAO,EAClD,OAAO,CACT,CACA,SAASy2B,GACPjyB,EACAgM,EACAyY,EACAnT,EACA4gB,EACAC,GAsBA,OApBAxtB,GAAcwtB,EACdhB,GAA0BnlB,EAC1BA,EAAe3P,cAAgB,KAC/B2P,EAAemY,YAAc,KAC7BnY,EAAelI,MAAQ,EACvB3E,EAAqBizB,EACnB,OAASpyB,GAAW,OAASA,EAAQ3D,cACjCg2B,GACAC,GACNd,IAAsC,EACtCW,EAAkB1N,EAAUnT,EAAO4gB,GACnCV,IAAsC,EACtCD,KACGY,EAAkBI,GACjBvmB,EACAyY,EACAnT,EACA4gB,IAEJM,GAAqBxyB,GACdmyB,CACT,CACA,SAASK,GAAqBxyB,GAC5Bb,EAAqBizB,EAAIK,GACzB,IAAIC,EAAuB,OAAStB,IAAe,OAASA,GAAYtO,KAMxE,GALAne,GAAc,EACd0sB,GAAqBD,GAAcD,GAA0B,KAC7DG,IAA+B,EAC/BI,GAAyB,EACzBC,GAAkB,KACde,EAAsB,MAAMl2B,MAAMtB,EAAuB,MAC7D,OAAS8E,GACP2yB,IAEA,QADE3yB,EAAUA,EAAQuI,eAElB8hB,GAAsBrqB,KACrB2yB,IAAmB,EAC1B,CACA,SAASJ,GAAqBvmB,EAAgByY,EAAWnT,EAAO4gB,GAC9Df,GAA0BnlB,EAC1B,IAAI4mB,EAAoB,EACxB,EAAG,CAID,GAHArB,KAA+CI,GAAkB,MACjED,GAAyB,EACzBH,IAA6C,EACzC,IAAMqB,EAAmB,MAAMp2B,MAAMtB,EAAuB,MAGhE,GAFA03B,GAAqB,EACrBvB,GAAqBD,GAAc,KAC/B,MAAQplB,EAAemY,YAAa,CACtC,IAAI/U,EAAWpD,EAAemY,YAC9B/U,EAASyjB,WAAa,KACtBzjB,EAAS0jB,OAAS,KAClB1jB,EAAS2jB,OAAS,KAClB,MAAQ3jB,EAAS4jB,YAAc5jB,EAAS4jB,UAAUnzB,MAAQ,EAC5D,CACAV,EAAqBizB,EAAIa,GACzB7jB,EAAWqV,EAAUnT,EAAO4gB,EAC9B,OAASX,IACT,OAAOniB,CACT,CACA,SAAS8jB,KACP,IAAIC,EAAah0B,EAAqBizB,EACpCgB,EAAgBD,EAAWE,WAAW,GAQxC,OAPAD,EACE,oBAAsBA,EAAc5G,KAChC8G,GAAYF,GACZA,EACND,EAAaA,EAAWE,WAAW,IAClC,OAASjC,GAAcA,GAAY/0B,cAAgB,QAAU82B,IAC3DhC,GAAwBl1B,OAAS,MAC7Bm3B,CACT,CACA,SAASG,KACP,IAAIC,EAAkB,IAAM/B,GAE5B,OADAA,GAAiB,EACV+B,CACT,CACA,SAASC,GAAazzB,EAASgM,EAAgBlI,GAC7CkI,EAAemY,YAAcnkB,EAAQmkB,YACrCnY,EAAe/P,QAAU,KACzB+D,EAAQ8D,QAAUA,CACpB,CACA,SAAS4vB,GAAmB1nB,GAC1B,GAAIslB,GAA8B,CAChC,IACEtlB,EAAiBA,EAAe3P,cAChC,OAAS2P,GAET,CACA,IAAI4W,EAAQ5W,EAAe4W,MAC3B,OAASA,IAAUA,EAAMpjB,QAAU,MACnCwM,EAAiBA,EAAe8W,IAClC,CACAwO,IAA+B,CACjC,CACA3sB,GAAc,EACd0sB,GAAqBD,GAAcD,GAA0B,KAC7DI,IAA6C,EAC7CG,GAAyBD,GAAiB,EAC1CE,GAAkB,IACpB,CACA,SAASgC,KACP,IAAIC,EAAO,CACTv3B,cAAe,KACfuyB,UAAW,KACXiF,UAAW,KACXjR,MAAO,KACPE,KAAM,MAKR,OAHA,OAASuO,GACJF,GAAwB90B,cAAgBg1B,GAAqBuC,EAC7DvC,GAAqBA,GAAmBvO,KAAO8Q,EAC7CvC,EACT,CACA,SAASyC,KACP,GAAI,OAAS1C,GAAa,CACxB,IAAI2C,EAAkB5C,GAAwBp1B,UAC9Cg4B,EACE,OAASA,EAAkBA,EAAgB13B,cAAgB,IAC/D,MAAO03B,EAAkB3C,GAAYtO,KACrC,IAAIkR,EACF,OAAS3C,GACLF,GAAwB90B,cACxBg1B,GAAmBvO,KACzB,GAAI,OAASkR,EACV3C,GAAqB2C,EACnB5C,GAAc2C,MACd,CACH,GAAI,OAASA,EAAiB,CAC5B,GAAI,OAAS5C,GAAwBp1B,UACnC,MAAMS,MAAMtB,EAAuB,MACrC,MAAMsB,MAAMtB,EAAuB,KACrC,CAEA64B,EAAkB,CAChB13B,eAFF+0B,GAAc2C,GAEe13B,cAC3BuyB,UAAWwC,GAAYxC,UACvBiF,UAAWzC,GAAYyC,UACvBjR,MAAOwO,GAAYxO,MACnBE,KAAM,MAER,OAASuO,GACJF,GAAwB90B,cAAgBg1B,GACvC0C,EACD1C,GAAqBA,GAAmBvO,KAAOiR,CACtD,CACA,OAAO1C,EACT,CAIA,SAASiC,GAAY7G,GACnB,IAAI5sB,EAAQ6xB,GAcZ,OAbAA,IAA0B,EAC1B,OAASC,KAAoBA,GAAkB,IAC/ClF,EAAWsB,GAAkB4D,GAAiBlF,EAAU5sB,GACxDA,EAAQsxB,GACR,QACG,OAASE,GACNxxB,EAAMxD,cACNg1B,GAAmBvO,QACrBjjB,EAAQA,EAAM9D,UACfoD,EAAqBizB,EACpB,OAASvyB,GAAS,OAASA,EAAMxD,cAC7Bg2B,GACAC,IACD7F,CACT,CACA,SAASwH,GAAIC,GACX,GAAI,OAASA,GAAU,kBAAoBA,EAAQ,CACjD,GAAI,oBAAsBA,EAAO1H,KAAM,OAAO8G,GAAYY,GAC1D,GAAIA,EAAO31B,WAAaf,EAAoB,OAAOitB,GAAYyJ,EACjE,CACA,MAAM13B,MAAMtB,EAAuB,IAAK2d,OAAOqb,IACjD,CACA,SAASC,GAAaC,GACpB,IAAIpB,EAAY,KACd7O,EAAcgN,GAAwBhN,YAExC,GADA,OAASA,IAAgB6O,EAAY7O,EAAY6O,WAC7C,MAAQA,EAAW,CACrB,IAAIhzB,EAAUmxB,GAAwBp1B,UACtC,OAASiE,IAEP,QADEA,EAAUA,EAAQmkB,eAGlB,OADEnkB,EAAUA,EAAQgzB,aAEjBA,EAAY,CACXvzB,KAAMO,EAAQP,KAAK40B,KAAI,SAAUC,GAC/B,OAAOA,EAAM7tB,OACf,IACA5G,MAAO,KAEjB,CAOA,GANA,MAAQmzB,IAAcA,EAAY,CAAEvzB,KAAM,GAAII,MAAO,IACrD,OAASskB,IACLA,EA9CG,CAAE0O,WAAY,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,UAAW,MA+C/D7B,GAAwBhN,YAAcA,GACzCA,EAAY6O,UAAYA,OAEpB,KADJ7O,EAAc6O,EAAUvzB,KAAKuzB,EAAUnzB,QAErC,IACEskB,EAAc6O,EAAUvzB,KAAKuzB,EAAUnzB,OAASZ,MAAMm1B,GAAOp0B,EAAU,EACvEA,EAAUo0B,EACVp0B,IAEAmkB,EAAYnkB,GAAWjC,EAE3B,OADAi1B,EAAUnzB,QACHskB,CACT,CACA,SAASoQ,GAAkBC,EAAO70B,GAChC,MAAO,oBAAsBA,EAASA,EAAO60B,GAAS70B,CACxD,CACA,SAAS80B,GAAcC,GAErB,OAAOC,GADIb,KACoB1C,GAAasD,EAC9C,CACA,SAASC,GAAkBf,EAAM5zB,EAAS00B,GACxC,IAAI9R,EAAQgR,EAAKhR,MACjB,GAAI,OAASA,EAAO,MAAMpmB,MAAMtB,EAAuB,MACvD0nB,EAAMgS,oBAAsBF,EAC5B,IAAIb,EAAYD,EAAKC,UACnBzD,EAAexN,EAAMpjB,QACvB,GAAI,OAAS4wB,EAAc,CACzB,GAAI,OAASyD,EAAW,CACtB,IAAIgB,EAAYhB,EAAU/Q,KAC1B+Q,EAAU/Q,KAAOsN,EAAatN,KAC9BsN,EAAatN,KAAO+R,CACtB,CACA70B,EAAQ6zB,UAAYA,EAAYzD,EAChCxN,EAAMpjB,QAAU,IAClB,CAEA,GADA4wB,EAAewD,EAAKhF,UAChB,OAASiF,EAAWD,EAAKv3B,cAAgB+zB,MACxC,CAEH,IAAI0E,EAAqBD,EAAY,KACnCE,EAAmB,KACnBlS,EAHF7iB,EAAU6zB,EAAU/Q,KAIlBkS,GAAqC,EACvC,EAAG,CACD,IAAI3vB,GAA4B,UAAfwd,EAAOhe,KACxB,GACEQ,IAAewd,EAAOhe,MACjB2rB,GAAgCnrB,KAAgBA,GAChDV,GAAcU,KAAgBA,EACnC,CACA,IAAI4vB,EAAapS,EAAOoS,WACxB,GAAI,IAAMA,EACR,OAASF,IACNA,EAAmBA,EAAiBjS,KACnC,CACEje,KAAM,EACNowB,WAAY,EACZt1B,OAAQkjB,EAAOljB,OACfu1B,cAAerS,EAAOqS,cACtBC,WAAYtS,EAAOsS,WACnBrS,KAAM,OAEVzd,IAAe6mB,KACZ8I,GAAqC,OACvC,KAAKrwB,GAAcswB,KAAgBA,EAAY,CAClDpS,EAASA,EAAOC,KAChBmS,IAAe/I,KACZ8I,GAAqC,GACxC,QACF,CACG3vB,EAAa,CACZR,KAAM,EACNowB,WAAYpS,EAAOoS,WACnBt1B,OAAQkjB,EAAOljB,OACfu1B,cAAerS,EAAOqS,cACtBC,WAAYtS,EAAOsS,WACnBrS,KAAM,MAEN,OAASiS,GACHD,EAAoBC,EAAmB1vB,EACxCwvB,EAAYzE,GACZ2E,EAAmBA,EAAiBjS,KAAOzd,EAC/C8rB,GAAwBrtB,OAASmxB,EACjCxE,IAAkCwE,CAAW,CAClD5vB,EAAawd,EAAOljB,OACpB6xB,IACEkD,EAAQtE,EAAc/qB,GACxB+qB,EAAevN,EAAOqS,cAClBrS,EAAOsS,WACPT,EAAQtE,EAAc/qB,EAC5B,MACG4vB,EAAa,CACZpwB,KAAMQ,EACN4vB,WAAYpS,EAAOoS,WACnBt1B,OAAQkjB,EAAOljB,OACfu1B,cAAerS,EAAOqS,cACtBC,WAAYtS,EAAOsS,WACnBrS,KAAM,MAEN,OAASiS,GACHD,EAAoBC,EAAmBE,EACxCJ,EAAYzE,GACZ2E,EAAmBA,EAAiBjS,KAAOmS,EAC/C9D,GAAwBrtB,OAASuB,EACjCorB,IAAkCprB,EACvCwd,EAASA,EAAOC,IAClB,OAAS,OAASD,GAAUA,IAAW7iB,GAIvC,GAHA,OAAS+0B,EACJF,EAAYzE,EACZ2E,EAAiBjS,KAAOgS,GAE1B/W,GAASqS,EAAcwD,EAAKv3B,iBAC3Bs2B,IAAmB,EACrBqC,GAC+C,QAA3CN,EAAUvI,KAEd,MAAMuI,EACRd,EAAKv3B,cAAgB+zB,EACrBwD,EAAKhF,UAAYiG,EACjBjB,EAAKC,UAAYkB,EACjBnS,EAAMwS,kBAAoBhF,CAC5B,CAEA,OADA,OAASyD,IAAcjR,EAAM9e,MAAQ,GAC9B,CAAC8vB,EAAKv3B,cAAeumB,EAAMyS,SACpC,CACA,SAASC,GAAgBZ,GACvB,IAAId,EAAOE,KACTlR,EAAQgR,EAAKhR,MACf,GAAI,OAASA,EAAO,MAAMpmB,MAAMtB,EAAuB,MACvD0nB,EAAMgS,oBAAsBF,EAC5B,IAAIW,EAAWzS,EAAMyS,SACnBE,EAAwB3S,EAAMpjB,QAC9Bqb,EAAW+Y,EAAKv3B,cAClB,GAAI,OAASk5B,EAAuB,CAClC3S,EAAMpjB,QAAU,KAChB,IAAIqjB,EAAU0S,EAAwBA,EAAsBzS,KAC5D,GAAIjI,EAAW6Z,EAAQ7Z,EAAUgI,EAAOljB,QAAWkjB,EAASA,EAAOC,WAC5DD,IAAW0S,GAClBxX,GAASlD,EAAU+Y,EAAKv3B,iBAAmBs2B,IAAmB,GAC9DiB,EAAKv3B,cAAgBwe,EACrB,OAAS+Y,EAAKC,YAAcD,EAAKhF,UAAY/T,GAC7C+H,EAAMwS,kBAAoBva,CAC5B,CACA,MAAO,CAACA,EAAUwa,EACpB,CACA,SAASG,GAAwBC,EAAWC,EAAaC,GACvD,IAAI95B,EAAQs1B,GACVyC,EAAOE,KACP8B,EAAuBpnB,GACzB,GAAIonB,EAAsB,CACxB,QAAI,IAAWD,EAAmB,MAAMn5B,MAAMtB,EAAuB,MACrEy6B,EAAoBA,GACtB,MAAOA,EAAoBD,IAC3B,IAAIG,GAAmB9X,IACpBqT,IAAewC,GAAMv3B,cACtBs5B,GAOF,GALAE,IACIjC,EAAKv3B,cAAgBs5B,EAAqBhD,IAAmB,GACjEiB,EAAOA,EAAKhR,MAEZkT,GAAiB,KAAM,EADVC,GAAiBC,KAAK,KAAMn6B,EAAO+3B,EAAM6B,GACpB,CAACA,IAEjC7B,EAAK8B,cAAgBA,GACrBG,GACC,OAASxE,IAA6D,EAAvCA,GAAmBh1B,cAAcH,IACjE,CAcA,GAbAL,EAAMI,OAAS,KACfg6B,GACE,EAoWG,CAAEC,aAAS,EAAQC,cAAU,GAlWhCC,GAAoBJ,KAClB,KACAn6B,EACA+3B,EACA+B,EACAD,GAEF,MAEE,OAASzI,GAAoB,MAAMzwB,MAAMtB,EAAuB,MACpE06B,GACE,KAAqB,IAAdjxB,KACP0xB,GAA0Bx6B,EAAO65B,EAAaC,EAClD,CACA,OAAOA,CACT,CACA,SAASU,GAA0Bx6B,EAAO65B,EAAaY,GACrDz6B,EAAMI,OAAS,MACfJ,EAAQ,CAAE65B,YAAaA,EAAat1B,MAAOk2B,GAE3C,QADAZ,EAAcvE,GAAwBhN,cAEhCuR,EA/OC,CAAE7C,WAAY,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,UAAW,MAgP7D7B,GAAwBhN,YAAcuR,EACtCA,EAAY3C,OAAS,CAACl3B,IAEvB,QADEy6B,EAAmBZ,EAAY3C,QAE5B2C,EAAY3C,OAAS,CAACl3B,GACvBy6B,EAAiBn2B,KAAKtE,EAChC,CACA,SAASu6B,GAAoBv6B,EAAO6L,EAAM6uB,EAAcb,GACtDhuB,EAAKtH,MAAQm2B,EACb7uB,EAAKguB,YAAcA,EACnBc,GAAuB9uB,IAAS+uB,GAAmB56B,EACrD,CACA,SAASk6B,GAAiBl6B,EAAO6L,EAAM+tB,GACrC,OAAOA,GAAU,WACfe,GAAuB9uB,IAAS+uB,GAAmB56B,EACrD,GACF,CACA,SAAS26B,GAAuB9uB,GAC9B,IAAIgvB,EAAoBhvB,EAAKguB,YAC7BhuB,EAAOA,EAAKtH,MACZ,IACE,IAAIopB,EAAYkN,IAChB,OAAQ3Y,GAASrW,EAAM8hB,EACzB,CAAE,MAAON,GACP,OAAO,CACT,CACF,CACA,SAASuN,GAAmB56B,GAC1B,IAAIoI,EAAOkf,GAA+BtnB,EAAO,GACjD,OAASoI,GAAQ0yB,GAAsB1yB,EAAMpI,EAAO,EACtD,CACA,SAAS+6B,GAAeC,GACtB,IAAIjD,EAAOD,KACX,GAAI,oBAAsBkD,EAAc,CACtC,IAAIC,EAA0BD,EAE9B,GADAA,EAAeC,IACXtF,GAAqC,CACvCpuB,IAA2B,GAC3B,IACE0zB,GACF,CAAE,QACA1zB,IAA2B,EAC7B,CACF,CACF,CASA,OARAwwB,EAAKv3B,cAAgBu3B,EAAKhF,UAAYiI,EACtCjD,EAAKhR,MAAQ,CACXpjB,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqBL,GACrBa,kBAAmByB,GAEdjD,CACT,CACA,SAASmD,GAAqBnD,EAAM5zB,EAASg3B,EAAatC,GAExD,OADAd,EAAKhF,UAAYoI,EACVrC,GACLf,EACAxC,GACA,oBAAsBsD,EAAUA,EAAUH,GAE9C,CACA,SAAS0C,GACPp7B,EACAq7B,EACAC,EACAC,EACAhI,GAEA,GAAIiI,GAAoBx7B,GAAQ,MAAMW,MAAMtB,EAAuB,MAEnE,GAAI,QADJW,EAAQq7B,EAAYv3B,QACA,CAClB,IAAI23B,EAAa,CACflI,QAASA,EACTzvB,OAAQ9D,EACRinB,KAAM,KACNyU,cAAc,EACdlL,OAAQ,UACRjsB,MAAO,KACP8tB,OAAQ,KACRvR,UAAW,GACX6P,KAAM,SAAUvB,GACdqM,EAAW3a,UAAUxc,KAAK8qB,EAC5B,GAEF,OAAS9rB,EAAqBq4B,EAC1BL,GAAgB,GACfG,EAAWC,cAAe,EAC/BH,EAASE,GAET,QADAH,EAAkBD,EAAY13B,UAExB83B,EAAWxU,KAAOoU,EAAY13B,QAAU83B,EAC1CG,GAAqBP,EAAaI,KAChCA,EAAWxU,KAAOqU,EAAgBrU,KACnCoU,EAAY13B,QAAU23B,EAAgBrU,KAAOwU,EACpD,CACF,CACA,SAASG,GAAqBP,EAAax7B,GACzC,IAAIiE,EAASjE,EAAKiE,OAChByvB,EAAU1zB,EAAK0zB,QACfsI,EAAYR,EAAY1C,MAC1B,GAAI94B,EAAK67B,aAAc,CACrB,IAAII,EAAiBx4B,EAAqBq4B,EACxCI,EAAoB,CAAC,EACvBz4B,EAAqBq4B,EAAII,EACzB,IACE,IAAI3jB,EAActU,EAAO+3B,EAAWtI,GAClCyI,EAA0B14B,EAAqBotB,EACjD,OAASsL,GACPA,EAAwBD,EAAmB3jB,GAC7C6jB,GAAwBZ,EAAax7B,EAAMuY,EAC7C,CAAE,MAAOiV,GACP6O,GAAcb,EAAax7B,EAAMwtB,EACnC,CAAE,QACA/pB,EAAqBq4B,EAAIG,CAC3B,CACF,MACE,IAEIG,GAAwBZ,EAAax7B,EADtCi8B,EAAiBh4B,EAAO+3B,EAAWtI,GAEtC,CAAE,MAAO4I,GACPD,GAAcb,EAAax7B,EAAMs8B,EACnC,CACJ,CACA,SAASF,GAAwBZ,EAAax7B,EAAMuY,GAClD,OAASA,GACT,kBAAoBA,GACpB,oBAAsBA,EAAYuY,KAC9BvY,EAAYuY,MACV,SAAUyL,GACRC,GAAgBhB,EAAax7B,EAAMu8B,EACrC,IACA,SAAU/O,GACR,OAAO6O,GAAcb,EAAax7B,EAAMwtB,EAC1C,IAEFgP,GAAgBhB,EAAax7B,EAAMuY,EACzC,CACA,SAASikB,GAAgBhB,EAAaI,EAAYW,GAChDX,EAAWjL,OAAS,YACpBiL,EAAWl3B,MAAQ63B,EACnBE,GAAsBb,GACtBJ,EAAY1C,MAAQyD,EAEpB,QADAX,EAAaJ,EAAY13B,YAErBy4B,EAAYX,EAAWxU,QACXwU,EACTJ,EAAY13B,QAAU,MACrBy4B,EAAYA,EAAUnV,KACvBwU,EAAWxU,KAAOmV,EACnBR,GAAqBP,EAAae,IAC1C,CACA,SAASF,GAAcb,EAAaI,EAAYpO,GAC9C,IAAIkP,EAAOlB,EAAY13B,QAEvB,GADA03B,EAAY13B,QAAU,KAClB,OAAS44B,EAAM,CACjBA,EAAOA,EAAKtV,KACZ,GACGwU,EAAWjL,OAAS,WAClBiL,EAAWpJ,OAAShF,EACrBiP,GAAsBb,GACrBA,EAAaA,EAAWxU,WACtBwU,IAAec,EACxB,CACAlB,EAAYv3B,OAAS,IACvB,CACA,SAASw4B,GAAsBb,GAC7BA,EAAaA,EAAW3a,UACxB,IAAK,IAAInhB,EAAI,EAAGA,EAAI87B,EAAWh8B,OAAQE,KAAK,EAAI87B,EAAW97B,KAC7D,CACA,SAAS68B,GAAmBvd,EAAUD,GACpC,OAAOA,CACT,CACA,SAASyd,GAAiB34B,EAAQ44B,GAChC,GAAI/pB,GAAa,CACf,IAAIgqB,EAAevL,GAAmBwL,UACtC,GAAI,OAASD,EAAc,CACzBjnB,EAAG,CACD,IAAIpQ,EAA2BgwB,GAC/B,GAAI3iB,GAAa,CACf,GAAI4Y,GAAwB,CAC1BtV,EAAG,CAED,IADA,IAAI4mB,EAAoCtR,GAElCuR,EAAoBrR,GACxB,IAAMoR,EAAkC/8B,UAExC,CACA,IAAKg9B,EAAmB,CACtBD,EAAoC,KACpC,MAAM5mB,CACR,CAIA,GAAI,QAHJ4mB,EAAoChQ,GAClCgQ,EAAkC7Z,cAEY,CAC9C6Z,EAAoC,KACpC,MAAM5mB,CACR,CACF,CAEA4mB,EACE,QAFFC,EAAoBD,EAAkCj5B,OAEtB,MAAQk5B,EAClCD,EACA,IACR,CACA,GAAIA,EAAmC,CACrCtR,GAAyBsB,GACvBgQ,EAAkC7Z,aAEpC1d,EACE,OAASu3B,EAAkCj5B,KAC7C,MAAM8R,CACR,CACF,CACAiW,GAAyBrmB,EAC3B,CACAA,GAA2B,CAC7B,CACAA,IAA6Bo3B,EAAmBC,EAAa,GAC/D,CACF,CAyCA,OAxCAA,EAAe7E,MACFt3B,cAAgBm8B,EAAa5J,UAAY2J,EACtDp3B,EAA2B,CACzB3B,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqByD,GACrBjD,kBAAmBmD,GAErBC,EAAa5V,MAAQzhB,EACrBq3B,EAAeI,GAAiB5C,KAC9B,KACA7E,GACAhwB,GAEFA,EAAyBk0B,SAAWmD,EACpCr3B,EAA2By1B,IAAe,GAC1C+B,EAAoBE,GAA2B7C,KAC7C,KACA7E,IACA,EACAhwB,EAAyByhB,OAG3B8V,EAAoC,CAClClE,MAAO+D,EACPlD,SAAU,KACV11B,OAAQA,EACRH,QAAS,OALX2B,EAA2BwyB,MAOF/Q,MAAQ8V,EACjCF,EAAevB,GAAoBjB,KACjC,KACA7E,GACAuH,EACAC,EACAH,GAEFE,EAAkCrD,SAAWmD,EAC7Cr3B,EAAyB9E,cAAgBsD,EAClC,CAAC44B,EAAkBC,GAAc,EAC1C,CACA,SAASM,GAAkBn5B,GAEzB,OAAOo5B,GADSjF,KACwB1C,GAAazxB,EACvD,CACA,SAASo5B,GAAsBC,EAAWC,EAAkBt5B,GAO1D,GANAs5B,EAAmBtE,GACjBqE,EACAC,EACAZ,IACA,GACFW,EAAYvE,GAAcF,IAAmB,GAE3C,kBAAoB0E,GACpB,OAASA,GACT,oBAAsBA,EAAiBzM,KAEvC,IACE,IAAIgI,EAAQlB,GAAY2F,EAC1B,CAAE,MAAOl6B,GACP,GAAIA,IAAM0uB,GAAmB,MAAME,GACnC,MAAM5uB,CACR,MACGy1B,EAAQyE,EAEb,IAAI/B,GADJ+B,EAAmBnF,MACgBlR,MACjCyS,EAAW6B,EAAY7B,SASzB,OARA11B,IAAWs5B,EAAiB58B,gBACxB80B,GAAwBl1B,OAAS,KACnCg6B,GACE,EAsCG,CAAEC,aAAS,EAAQC,cAAU,GApChC+C,GAAwBlD,KAAK,KAAMkB,EAAav3B,GAChD,OAEG,CAAC60B,EAAOa,EAAU2D,EAC3B,CACA,SAASE,GAAwBhC,EAAav3B,GAC5Cu3B,EAAYv3B,OAASA,CACvB,CACA,SAASw5B,GAAoBx5B,GAC3B,IAAIq5B,EAAYlF,KACdmF,EAAmB7H,GACrB,GAAI,OAAS6H,EACX,OAAOF,GAAsBC,EAAWC,EAAkBt5B,GAC5Dm0B,KACAkF,EAAYA,EAAU38B,cAEtB,IAAIg5B,GADJ4D,EAAmBnF,MACalR,MAAMyS,SAEtC,OADA4D,EAAiB58B,cAAgBsD,EAC1B,CAACq5B,EAAW3D,GAAU,EAC/B,CACA,SAASY,GAAiB/5B,EAAKwL,EAAM0xB,EAAQC,GAa3C,OAZAn9B,EAAM,CAAEA,IAAKA,EAAKk9B,OAAQA,EAAQE,KAAMD,EAAY3xB,KAAMA,EAAMob,KAAM,MAEtE,QADApb,EAAOypB,GAAwBhN,eAE3Bzc,EAhjBG,CAAEmrB,WAAY,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,UAAW,MAijB/D7B,GAAwBhN,YAAczc,GAEzC,QADA0xB,EAAS1xB,EAAKmrB,YAETnrB,EAAKmrB,WAAa32B,EAAI4mB,KAAO5mB,GAC5Bm9B,EAAaD,EAAOtW,KACrBsW,EAAOtW,KAAO5mB,EACdA,EAAI4mB,KAAOuW,EACX3xB,EAAKmrB,WAAa32B,GAChBA,CACT,CAIA,SAASq9B,KACP,OAAOzF,KAA2Bz3B,aACpC,CACA,SAASm9B,GAAgBC,EAAYC,EAAWN,EAAQC,GACtD,IAAIzF,EAAOD,KACX0F,OAAa,IAAWA,EAAa,KAAOA,EAC5ClI,GAAwBl1B,OAASw9B,EACjC7F,EAAKv3B,cAAgB45B,GACnB,EAAIyD,EAVC,CAAExD,aAAS,EAAQC,cAAU,GAYlCiD,EACAC,EAEJ,CACA,SAASvD,GAAiB2D,EAAYC,EAAWN,EAAQE,GACvD,IAAI1F,EAAOE,KACXwF,OAAO,IAAWA,EAAO,KAAOA,EAChC,IAAI5xB,EAAOksB,EAAKv3B,cAAcqL,KAC9B,OAAS0pB,IACT,OAASkI,GACTxH,GAAmBwH,EAAMlI,GAAY/0B,cAAci9B,MAC9C1F,EAAKv3B,cAAgB45B,GAAiByD,EAAWhyB,EAAM0xB,EAAQE,IAC9DnI,GAAwBl1B,OAASw9B,EAClC7F,EAAKv3B,cAAgB45B,GACpB,EAAIyD,EACJhyB,EACA0xB,EACAE,GAER,CACA,SAASK,GAAYP,EAAQC,GAC3BG,GAAgB,QAAS,EAAGJ,EAAQC,EACtC,CACA,SAASO,GAAaR,EAAQC,GAC5BvD,GAAiB,KAAM,EAAGsD,EAAQC,EACpC,CACA,SAASQ,GAAsBT,EAAQE,GACrC,OAAOxD,GAAiB,EAAG,EAAGsD,EAAQE,EACxC,CACA,SAASQ,GAAmBV,EAAQE,GAClC,OAAOxD,GAAiB,EAAG,EAAGsD,EAAQE,EACxC,CACA,SAASS,GAAuBX,EAAQlV,GACtC,GAAI,oBAAsBA,EAAK,CAC7BkV,EAASA,IACT,IAAInV,EAAaC,EAAIkV,GACrB,OAAO,WACL,oBAAsBnV,EAAaA,IAAeC,EAAI,KACxD,CACF,CACA,GAAI,OAASA,QAAO,IAAWA,EAC7B,OACGkV,EAASA,IACTlV,EAAIlkB,QAAUo5B,EACf,WACElV,EAAIlkB,QAAU,IAChB,CAEN,CACA,SAASg6B,GAAuB9V,EAAKkV,EAAQE,GAC3CA,EAAO,OAASA,QAAQ,IAAWA,EAAOA,EAAKW,OAAO,CAAC/V,IAAQ,KAC/D4R,GAAiB,EAAG,EAAGiE,GAAuB/D,KAAK,KAAMoD,EAAQlV,GAAMoV,EACzE,CACA,SAASY,KAAmB,CAC5B,SAASC,GAAe9K,EAAUiK,GAChC,IAAI1F,EAAOE,KACXwF,OAAO,IAAWA,EAAO,KAAOA,EAChC,IAAI5B,EAAY9D,EAAKv3B,cACrB,OAAI,OAASi9B,GAAQxH,GAAmBwH,EAAM5B,EAAU,IAC/CA,EAAU,IACnB9D,EAAKv3B,cAAgB,CAACgzB,EAAUiK,GACzBjK,EACT,CACA,SAAS+K,GAAWC,EAAYf,GAC9B,IAAI1F,EAAOE,KACXwF,OAAO,IAAWA,EAAO,KAAOA,EAChC,IAAI5B,EAAY9D,EAAKv3B,cACrB,GAAI,OAASi9B,GAAQxH,GAAmBwH,EAAM5B,EAAU,IACtD,OAAOA,EAAU,GAEnB,GADAA,EAAY2C,IACR7I,GAAqC,CACvCpuB,IAA2B,GAC3B,IACEi3B,GACF,CAAE,QACAj3B,IAA2B,EAC7B,CACF,CAEA,OADAwwB,EAAKv3B,cAAgB,CAACq7B,EAAW4B,GAC1B5B,CACT,CACA,SAAS4C,GAAuB1G,EAAMxzB,EAAOm6B,GAC3C,YAAI,IAAWA,GAAgB,KAAqB,WAAd51B,IAC5BivB,EAAKv3B,cAAgB+D,GAC/BwzB,EAAKv3B,cAAgBk+B,EACrB3G,EAAO4G,KACPrJ,GAAwBrtB,OAAS8vB,EACjCnD,IAAkCmD,EAC3B2G,EACT,CACA,SAASE,GAAwB7G,EAAM8G,EAAWt6B,EAAOm6B,GACvD,OAAIxc,GAAS3d,EAAOs6B,GAAmBt6B,EACnC,OAASwwB,GAA6B5wB,SAErC4zB,EAAO0G,GAAuB1G,EAAMxzB,EAAOm6B,GAC5Cxc,GAAS6V,EAAM8G,KAAe/H,IAAmB,GACjDiB,GAEA,KAAqB,GAAdjvB,KACDguB,IAAmB,EAAMiB,EAAKv3B,cAAgB+D,IACxDwzB,EAAO4G,KACPrJ,GAAwBrtB,OAAS8vB,EACjCnD,IAAkCmD,EAC3B8G,EACT,CACA,SAASC,GAAgB9+B,EAAO+mB,EAAOgY,EAAcC,EAAexL,GAClE,IAAIyL,EAAmBz7B,EAAwB6G,EAC/C7G,EAAwB6G,EACtB,IAAM40B,GAAoB,EAAIA,EAAmBA,EAAmB,EACtE,IAAInD,EAAiBx4B,EAAqBq4B,EACxCI,EAAoB,CAAC,EACvBz4B,EAAqBq4B,EAAII,EACzBiB,GAA2Bh9B,GAAO,EAAI+mB,EAAOgY,GAC7C,IACE,IAAI3mB,EAAcob,IAChBwI,EAA0B14B,EAAqBotB,EAGjD,GAFA,OAASsL,GACPA,EAAwBD,EAAmB3jB,GAE3C,OAASA,GACT,kBAAoBA,GACpB,oBAAsBA,EAAYuY,KAMlCuO,GACEl/B,EACA+mB,EA/vCR,SAA4B6J,EAAUuO,GACpC,IAAIre,EAAY,GACdse,EAAuB,CACrB5O,OAAQ,UACRjsB,MAAO,KACP8tB,OAAQ,KACR1B,KAAM,SAAUI,GACdjQ,EAAUxc,KAAKysB,EACjB,GAeJ,OAbAH,EAASD,MACP,WACEyO,EAAqB5O,OAAS,YAC9B4O,EAAqB76B,MAAQ46B,EAC7B,IAAK,IAAIx/B,EAAI,EAAGA,EAAImhB,EAAUrhB,OAAQE,KAAK,EAAImhB,EAAUnhB,IAAIw/B,EAC/D,IACA,SAAU9R,GAGR,IAFA+R,EAAqB5O,OAAS,WAC9B4O,EAAqB/M,OAAShF,EACzBA,EAAQ,EAAGA,EAAQvM,EAAUrhB,OAAQ4tB,KACxC,EAAIvM,EAAUuM,SAAQ,EAC1B,IAEK+R,CACT,CAiuCqCC,CAC7BjnB,EACA4mB,GAMAM,WAGFJ,GACEl/B,EACA+mB,EACAiY,EACAM,KAEN,CAAE,MAAOjS,GACP6R,GACEl/B,EACA+mB,EACA,CAAE4J,KAAM,WAAa,EAAGH,OAAQ,WAAY6B,OAAQhF,GACpDiS,KAEJ,CAAE,QACC97B,EAAwB6G,EAAI40B,EAC1B37B,EAAqBq4B,EAAIG,CAC9B,CACF,CACA,SAASyD,KAAU,CACnB,SAASC,GAAoBC,EAAWV,EAAcj7B,EAAQ47B,GAC5D,GAAI,IAAMD,EAAUp/B,IAAK,MAAMM,MAAMtB,EAAuB,MAC5D,IAAI0nB,EAAQ4Y,GAA8BF,GAAW1Y,MACrD+X,GACEW,EACA1Y,EACAgY,EACAr7B,EACA,OAASI,EACLy7B,GACA,WAEE,OADAK,GAAmBH,GACZ37B,EAAO47B,EAChB,EAER,CACA,SAASC,GAA8BF,GACrC,IAAII,EAAoBJ,EAAUj/B,cAClC,GAAI,OAASq/B,EAAmB,OAAOA,EAcvC,IAAIC,EAAoB,CAAC,EAiBzB,OA9BAD,EAAoB,CAClBr/B,cAAekD,EACfqvB,UAAWrvB,EACXs0B,UAAW,KACXjR,MAAO,CACLpjB,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqBL,GACrBa,kBAAmB71B,GAErBujB,KAAM,OAGUA,KAAO,CACvBzmB,cAAes/B,EACf/M,UAAW+M,EACX9H,UAAW,KACXjR,MAAO,CACLpjB,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqBL,GACrBa,kBAAmBuG,GAErB7Y,KAAM,MAERwY,EAAUj/B,cAAgBq/B,EAE1B,QADAJ,EAAYA,EAAUv/B,aACCu/B,EAAUj/B,cAAgBq/B,GAC1CA,CACT,CACA,SAASD,GAAmBH,GAE1BP,GAAyBO,EADHE,GAA8BF,GAAWxY,KAAKF,MACf,CAAC,EAAGuY,KAC3D,CACA,SAASS,KACP,OAAOnR,GAAYppB,GACrB,CACA,SAASw6B,KACP,OAAO/H,KAA2Bz3B,aACpC,CACA,SAASy/B,KACP,OAAOhI,KAA2Bz3B,aACpC,CACA,SAAS0/B,GAAalgC,GACpB,IAAK,IAAImgC,EAAWngC,EAAMG,OAAQ,OAASggC,GAAY,CACrD,OAAQA,EAAS9/B,KACf,KAAK,GACL,KAAK,EACH,IAAI2I,EAAOs2B,KAEPc,EAAU3M,GAAc0M,EAD5BngC,EAAQszB,GAAatqB,GACwBA,GAM7C,OALA,OAASo3B,IACNtF,GAAsBsF,EAASD,EAAUn3B,GAC1C2qB,GAAoByM,EAASD,EAAUn3B,IACzCm3B,EAAW,CAAEjQ,MAAOJ,WACpB9vB,EAAMuzB,QAAU4M,GAGpBA,EAAWA,EAAShgC,MACtB,CACF,CACA,SAASkgC,GAAsBrgC,EAAO+mB,EAAOjjB,GAC3C,IAAIkF,EAAOs2B,KACXx7B,EAAS,CACPkF,KAAMA,EACNowB,WAAY,EACZt1B,OAAQA,EACRu1B,eAAe,EACfC,WAAY,KACZrS,KAAM,MAERuU,GAAoBx7B,GAChBsgC,GAAyBvZ,EAAOjjB,GAEhC,QADEA,EAASsjB,GAA4BpnB,EAAO+mB,EAAOjjB,EAAQkF,MAE1D8xB,GAAsBh3B,EAAQ9D,EAAOgJ,GACtCu3B,GAAyBz8B,EAAQijB,EAAO/d,GAChD,CACA,SAAS+zB,GAAiB/8B,EAAO+mB,EAAOjjB,GAEtCo7B,GAAyBl/B,EAAO+mB,EAAOjjB,EAD5Bw7B,KAEb,CACA,SAASJ,GAAyBl/B,EAAO+mB,EAAOjjB,EAAQkF,GACtD,IAAIge,EAAS,CACXhe,KAAMA,EACNowB,WAAY,EACZt1B,OAAQA,EACRu1B,eAAe,EACfC,WAAY,KACZrS,KAAM,MAER,GAAIuU,GAAoBx7B,GAAQsgC,GAAyBvZ,EAAOC,OAC3D,CACH,IAAI9mB,EAAYF,EAAME,UACtB,GACE,IAAMF,EAAMiI,QACX,OAAS/H,GAAa,IAAMA,EAAU+H,QACG,QAAxC/H,EAAY6mB,EAAMgS,qBAEpB,IACE,IAAIyH,EAAezZ,EAAMwS,kBACvBD,EAAap5B,EAAUsgC,EAAc18B,GAGvC,GAFAkjB,EAAOqS,eAAgB,EACvBrS,EAAOsS,WAAaA,EAChBpX,GAASoX,EAAYkH,GACvB,OACErZ,GAAgBnnB,EAAO+mB,EAAOC,EAAQ,GACtC,OAASoK,IAAsBvK,MAC/B,CAEN,CAAE,MAAOwG,GACT,CAGF,GAAI,QADJvpB,EAASsjB,GAA4BpnB,EAAO+mB,EAAOC,EAAQhe,IAEzD,OACE8xB,GAAsBh3B,EAAQ9D,EAAOgJ,GACrCu3B,GAAyBz8B,EAAQijB,EAAO/d,IACxC,CAEN,CACA,OAAO,CACT,CACA,SAASg0B,GAA2Bh9B,EAAOygC,EAAqB1Z,EAAOjjB,GASrE,GARAA,EAAS,CACPkF,KAAM,EACNowB,WAAYtI,KACZhtB,OAAQA,EACRu1B,eAAe,EACfC,WAAY,KACZrS,KAAM,MAEJuU,GAAoBx7B,IACtB,GAAIygC,EAAqB,MAAM9/B,MAAMtB,EAAuB,WAQ1D,QANDohC,EAAsBrZ,GACrBpnB,EACA+mB,EACAjjB,EACA,KAGEg3B,GAAsB2F,EAAqBzgC,EAAO,EAC1D,CACA,SAASw7B,GAAoBx7B,GAC3B,IAAIE,EAAYF,EAAME,UACtB,OACEF,IAAUs1B,IACT,OAASp1B,GAAaA,IAAco1B,EAEzC,CACA,SAASgL,GAAyBvZ,EAAOC,GACvC0O,GAA6CD,IAC3C,EACF,IAAI9xB,EAAUojB,EAAMpjB,QACpB,OAASA,EACJqjB,EAAOC,KAAOD,GACbA,EAAOC,KAAOtjB,EAAQsjB,KAAQtjB,EAAQsjB,KAAOD,GACnDD,EAAMpjB,QAAUqjB,CAClB,CACA,SAASuZ,GAAyBn4B,EAAM2e,EAAO/d,GAC7C,GAAI,KAAc,QAAPA,GAAiB,CAC1B,IAAI4qB,EAAa7M,EAAM9e,MAEvBe,GADA4qB,GAAcxrB,EAAKG,aAEnBwe,EAAM9e,MAAQe,EACdc,GAAkB1B,EAAMY,EAC1B,CACF,CACA,IAAI4tB,GAAwB,CACxBhI,YAAaA,GACbwJ,IAAKA,GACLsI,YAAa1K,GACb2K,WAAY3K,GACZ4K,UAAW5K,GACX6K,oBAAqB7K,GACrB8K,gBAAiB9K,GACjB+K,mBAAoB/K,GACpBgL,QAAShL,GACTiL,WAAYjL,GACZkL,OAAQlL,GACRwB,SAAUxB,GACVmL,cAAenL,GACfoL,iBAAkBpL,GAClBqL,cAAerL,GACfsL,qBAAsBtL,GACtBuL,MAAOvL,GACP+J,wBAAyB/J,GACzBwL,aAAcxL,GACdyL,eAAgBzL,GAChB0L,cAAe1L,GACfsC,aAActC,GACd2L,gBAAiB3L,IAEnBQ,GAAyB,CACvB5H,YAAaA,GACbwJ,IAAKA,GACLsI,YAAa,SAAUlN,EAAUiK,GAK/B,OAJA3F,KAA0Bt3B,cAAgB,CACxCgzB,OACA,IAAWiK,EAAO,KAAOA,GAEpBjK,CACT,EACAmN,WAAY/R,GACZgS,UAAW9C,GACX+C,oBAAqB,SAAUxY,EAAKkV,EAAQE,GAC1CA,EAAO,OAASA,QAAQ,IAAWA,EAAOA,EAAKW,OAAO,CAAC/V,IAAQ,KAC/DsV,GACE,QACA,EACAO,GAAuB/D,KAAK,KAAMoD,EAAQlV,GAC1CoV,EAEJ,EACAqD,gBAAiB,SAAUvD,EAAQE,GACjC,OAAOE,GAAgB,QAAS,EAAGJ,EAAQE,EAC7C,EACAsD,mBAAoB,SAAUxD,EAAQE,GACpCE,GAAgB,EAAG,EAAGJ,EAAQE,EAChC,EACAuD,QAAS,SAAUxC,EAAYf,GAC7B,IAAI1F,EAAOD,KACX2F,OAAO,IAAWA,EAAO,KAAOA,EAChC,IAAI9P,EAAY6Q,IAChB,GAAI7I,GAAqC,CACvCpuB,IAA2B,GAC3B,IACEi3B,GACF,CAAE,QACAj3B,IAA2B,EAC7B,CACF,CAEA,OADAwwB,EAAKv3B,cAAgB,CAACmtB,EAAW8P,GAC1B9P,CACT,EACAsT,WAAY,SAAUpI,EAAS+I,EAAYC,GACzC,IAAI9J,EAAOD,KACX,QAAI,IAAW+J,EAAM,CACnB,IAAI7G,EAAe6G,EAAKD,GACxB,GAAIjM,GAAqC,CACvCpuB,IAA2B,GAC3B,IACEs6B,EAAKD,EACP,CAAE,QACAr6B,IAA2B,EAC7B,CACF,CACF,MAAOyzB,EAAe4G,EAetB,OAdA7J,EAAKv3B,cAAgBu3B,EAAKhF,UAAYiI,EACtCnC,EAAU,CACRl1B,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqBF,EACrBU,kBAAmByB,GAErBjD,EAAKhR,MAAQ8R,EACbA,EAAUA,EAAQW,SAAW6G,GAAsBlG,KACjD,KACA7E,GACAuD,GAEK,CAACd,EAAKv3B,cAAeq4B,EAC9B,EACAqI,OAAQ,SAAUxC,GAGhB,OADAA,EAAe,CAAEv6B,QAASu6B,GADf5G,KAEEt3B,cAAgBk+B,CAC/B,EACAlH,SAAU,SAAUwD,GAElB,IAAIjU,GADJiU,EAAeD,GAAeC,IACLjU,MACvByS,EAAWuD,GAAiB5C,KAAK,KAAM7E,GAAyBvO,GAElE,OADAA,EAAMyS,SAAWA,EACV,CAACwB,EAAax6B,cAAeg5B,EACtC,EACA2H,cAAe9C,GACf+C,iBAAkB,SAAU78B,EAAOm6B,GAEjC,OAAOD,GADI3G,KACyBvzB,EAAOm6B,EAC7C,EACA2C,cAAe,WACb,IAAIlE,EAAYpC,IAAe,GAS/B,OARAoC,EAAY2B,GAAgB3E,KAC1B,KACA7E,GACA6H,EAAUpW,OACV,GACA,GAEF+Q,KAA0Bt3B,cAAgB28B,EACnC,EAAC,EAAIA,EACd,EACAmE,qBAAsB,SAAU1H,EAAWC,EAAaC,GACtD,IAAI95B,EAAQs1B,GACVyC,EAAOD,KACT,GAAInlB,GAAa,CACf,QAAI,IAAWmnB,EACb,MAAMn5B,MAAMtB,EAAuB,MACrCy6B,EAAoBA,GACtB,KAAO,CAEL,GADAA,EAAoBD,IAChB,OAASzI,GACX,MAAMzwB,MAAMtB,EAAuB,MACrC,KAAuC,IAAhCs1B,KACL6F,GAA0Bx6B,EAAO65B,EAAaC,EAClD,CACA/B,EAAKv3B,cAAgBs5B,EACrB,IAAIjuB,EAAO,CAAEtH,MAAOu1B,EAAmBD,YAAaA,GAkBpD,OAjBA9B,EAAKhR,MAAQlb,EACbiyB,GAAY5D,GAAiBC,KAAK,KAAMn6B,EAAO6L,EAAM+tB,GAAY,CAC/DA,IAEF55B,EAAMI,OAAS,KACfg6B,GACE,EAtfC,CAAEC,aAAS,EAAQC,cAAU,GAwf9BC,GAAoBJ,KAClB,KACAn6B,EACA6L,EACAiuB,EACAD,GAEF,MAEKC,CACT,EACAyH,MAAO,WACL,IAAIxJ,EAAOD,KACTgK,EAAmB1Q,GAAmB0Q,iBACxC,GAAInvB,GAAa,CACf,IAAIrN,EAA2BulB,GAM/BiX,EACE,OAAWA,EAAmB,KALhCx8B,GADuBslB,KAGE,GAAM,GAAKjjB,GAHbijB,IAGuC,IAC1DjgB,SAAS,IAAMrF,GAInB,GADAA,EAA2BswB,QAExBkM,GAAoB,IAAMx8B,EAAyBqF,SAAS,KAC/Dm3B,GAAoB,MACtB,MAEKA,EACC,OACAA,EACA,KAJHx8B,EAA2BywB,MAKCprB,SAAS,IAClC,OACN,OAAQotB,EAAKv3B,cAAgBshC,CAC/B,EACA/B,wBAAyBA,GACzByB,aAAc/E,GACdgF,eAAgBhF,GAChBiF,cAAe,SAAUvG,GACvB,IAAIpD,EAAOD,KACXC,EAAKv3B,cAAgBu3B,EAAKhF,UAAYoI,EACtC,IAAIpU,EAAQ,CACVpjB,QAAS,KACTsE,MAAO,EACPuxB,SAAU,KACVT,oBAAqB,KACrBQ,kBAAmB,MAUrB,OARAxB,EAAKhR,MAAQA,EACbgR,EAAOiF,GAA2B7C,KAChC,KACA7E,IACA,EACAvO,GAEFA,EAAMyS,SAAWzB,EACV,CAACoD,EAAapD,EACvB,EACAO,aAAcA,GACdqJ,gBAAiB,WACf,OAAQ7J,KAA0Bt3B,cAAgB0/B,GAAa/F,KAC7D,KACA7E,GAEJ,GAEFmB,GAA0B,CACxB7H,YAAaA,GACbwJ,IAAKA,GACLsI,YAAapC,GACbqC,WAAY/R,GACZgS,UAAW7C,GACX8C,oBAAqB1C,GACrB4C,mBAAoB/C,GACpB8C,gBAAiB7C,GACjB+C,QAASzC,GACT0C,WAAYrI,GACZsI,OAAQxD,GACRlG,SAAU,WACR,OAAOoB,GAAcF,GACvB,EACAyI,cAAe9C,GACf+C,iBAAkB,SAAU78B,EAAOm6B,GAEjC,OAAOE,GADI3G,KAGT1C,GAAY/0B,cACZ+D,EACAm6B,EAEJ,EACA2C,cAAe,WACb,IAAIU,EAAoBnJ,GAAcF,IAAmB,GACvD9hB,EAAQqhB,KAA2Bz3B,cACrC,MAAO,CACL,mBAAqBuhC,EACjBA,EACAtK,GAAYsK,GAChBnrB,EAEJ,EACA0qB,qBAAsB3H,GACtB4H,MAAOvB,GACPD,wBAAyBA,GACzByB,aAAcvE,GACdwE,eAAgBxE,GAChByE,cAAe,SAAUvG,EAAatC,GAEpC,OAAOqC,GADIjD,KACuB1C,EAAa4F,EAAatC,EAC9D,EACAP,aAAcA,GACdqJ,gBAAiB1B,IAEnB7I,GAA4B,CAC1BxI,YAAaA,GACbwJ,IAAKA,GACLsI,YAAapC,GACbqC,WAAY/R,GACZgS,UAAW7C,GACX8C,oBAAqB1C,GACrB4C,mBAAoB/C,GACpB8C,gBAAiB7C,GACjB+C,QAASzC,GACT0C,WAAYxH,GACZyH,OAAQxD,GACRlG,SAAU,WACR,OAAOiC,GAAgBf,GACzB,EACAyI,cAAe9C,GACf+C,iBAAkB,SAAU78B,EAAOm6B,GACjC,IAAI3G,EAAOE,KACX,OAAO,OAAS1C,GACZkJ,GAAuB1G,EAAMxzB,EAAOm6B,GACpCE,GACE7G,EACAxC,GAAY/0B,cACZ+D,EACAm6B,EAER,EACA2C,cAAe,WACb,IAAIU,EAAoBtI,GAAgBf,IAAmB,GACzD9hB,EAAQqhB,KAA2Bz3B,cACrC,MAAO,CACL,mBAAqBuhC,EACjBA,EACAtK,GAAYsK,GAChBnrB,EAEJ,EACA0qB,qBAAsB3H,GACtB4H,MAAOvB,GACPD,wBAAyBA,GACzByB,aAAclE,GACdmE,eAAgBnE,GAChBoE,cAAe,SAAUvG,EAAatC,GACpC,IAAId,EAAOE,KACX,OAAI,OAAS1C,GACJ2F,GAAqBnD,EAAMxC,EAAa4F,EAAatC,IAC9Dd,EAAKhF,UAAYoI,EACV,CAACA,EAAapD,EAAKhR,MAAMyS,UAClC,EACAlB,aAAcA,GACdqJ,gBAAiB1B,IAEnB9N,GAAgB,KAChB6P,GAAuB,EACzB,SAASC,GAAerR,GACtB,IAAI5sB,EAAQg+B,GAGZ,OAFAA,IAAwB,EACxB,OAAS7P,KAAkBA,GAAgB,IACpCD,GAAkBC,GAAevB,EAAU5sB,EACpD,CACA,SAASk+B,GAAU/xB,EAAgBmC,GACjCA,EAAUA,EAAQmD,MAAM4S,IACxBlY,EAAekY,SAAM,IAAW/V,EAAUA,EAAU,IACtD,CACA,SAAS6vB,GAAyBC,EAAaC,GAC7C,GAAIA,EAAS3/B,WAAazB,EACxB,MAAMN,MAAMtB,EAAuB,MAErC,MADA+iC,EAAcphC,OAAO2E,UAAUgF,SAAS0C,KAAKg1B,GACvC1hC,MACJtB,EACE,GACA,oBAAsB+iC,EAClB,qBAAuBphC,OAAOyhB,KAAK4f,GAAUC,KAAK,MAAQ,IAC1DF,GAGV,CACA,SAASG,GAAYC,GAEnB,OAAOX,EADIW,EAASv/B,OACRu/B,EAASx/B,SACvB,CACA,SAASy/B,GAAsBC,GAC7B,SAASC,EAAYP,EAAaQ,GAChC,GAAIF,EAAwB,CAC1B,IAAIja,EAAY2Z,EAAY3Z,UAC5B,OAASA,GACH2Z,EAAY3Z,UAAY,CAACma,GAAkBR,EAAYhiC,OAAS,IAClEqoB,EAAUnkB,KAAKs+B,EACrB,CACF,CACA,SAASC,EAAwBT,EAAaU,GAC5C,IAAKJ,EAAwB,OAAO,KACpC,KAAO,OAASI,GACdH,EAAYP,EAAaU,GACtBA,EAAoBA,EAAkBhiC,QAC3C,OAAO,IACT,CACA,SAASiiC,EAAqBD,GAC5B,IAAK,IAAIE,EAAmB,IAAI92B,IAAO,OAAS42B,GAC9C,OAASA,EAAkB/lB,IACvBimB,EAAiBl0B,IAAIg0B,EAAkB/lB,IAAK+lB,GAC5CE,EAAiBl0B,IAAIg0B,EAAkB9+B,MAAO8+B,GAC/CA,EAAoBA,EAAkBhiC,QAC3C,OAAOkiC,CACT,CACA,SAASC,EAASjjC,EAAOioB,GAIvB,OAHAjoB,EAAQ8oB,GAAqB9oB,EAAOioB,IAC9BjkB,MAAQ,EACdhE,EAAMc,QAAU,KACTd,CACT,CACA,SAASkjC,EAAWC,EAAUC,EAAiBC,GAE7C,OADAF,EAASn/B,MAAQq/B,EACZX,EAGD,QADJW,EAAWF,EAASjjC,YAGfmjC,EAAWA,EAASr/B,OACVo/B,GACLD,EAAS/iC,OAAS,SAAWgjC,GAC/BC,GAERF,EAAS/iC,OAAS,SACXgjC,IAVGD,EAAS/iC,OAAS,QAAUgjC,EAWxC,CACA,SAASE,EAAiBH,GAIxB,OAHAT,GACE,OAASS,EAASjjC,YACjBijC,EAAS/iC,OAAS,UACd+iC,CACT,CACA,SAASI,EAAenB,EAAaj+B,EAASqP,EAAavL,GACzD,OAAI,OAAS9D,GAAW,IAAMA,EAAQ9D,MAEjC8D,EAAU4lB,GAAoBvW,EAAa4uB,EAAYla,KAAMjgB,IACrD9H,OAASiiC,EAClBj+B,KAEJA,EAAU8+B,EAAS9+B,EAASqP,IACpBrT,OAASiiC,EACVj+B,EACT,CACA,SAASq/B,EAAcpB,EAAaj+B,EAASmO,EAASrK,GACpD,IAAIkgB,EAAc7V,EAAQ7P,KAC1B,OAAI0lB,IAAgB7mB,EACXmiC,EACLrB,EACAj+B,EACAmO,EAAQmD,MAAMlC,SACdtL,EACAqK,EAAQyK,KAGV,OAAS5Y,IACRA,EAAQgkB,cAAgBA,GACtB,kBAAoBA,GACnB,OAASA,GACTA,EAAYzlB,WAAaV,GACzBugC,GAAYpa,KAAiBhkB,EAAQ1B,OAIvCy/B,GADC/9B,EAAU8+B,EAAS9+B,EAASmO,EAAQmD,OAClBnD,GAClBnO,EAAQhE,OAASiiC,EAClBj+B,IAUJ+9B,GARA/9B,EAAU8kB,GACR3W,EAAQ7P,KACR6P,EAAQyK,IACRzK,EAAQmD,MACR,KACA2sB,EAAYla,KACZjgB,GAEiBqK,GACnBnO,EAAQhE,OAASiiC,EACVj+B,EACT,CACA,SAASu/B,EAAatB,EAAaj+B,EAAS+lB,EAAQjiB,GAClD,OACE,OAAS9D,GACT,IAAMA,EAAQ9D,KACd8D,EAAQ2H,UAAUyX,gBAAkB2G,EAAO3G,eAC3Cpf,EAAQ2H,UAAUse,iBAAmBF,EAAOE,iBAGzCjmB,EAAU8lB,GAAsBC,EAAQkY,EAAYla,KAAMjgB,IAClD9H,OAASiiC,EAClBj+B,KAEJA,EAAU8+B,EAAS9+B,EAAS+lB,EAAO3W,UAAY,KACvCpT,OAASiiC,EACVj+B,EACT,CACA,SAASs/B,EAAerB,EAAaj+B,EAASw/B,EAAU17B,EAAO8U,GAC7D,OAAI,OAAS5Y,GAAW,IAAMA,EAAQ9D,MAEjC8D,EAAU0lB,GACT8Z,EACAvB,EAAYla,KACZjgB,EACA8U,IAEO5c,OAASiiC,EAClBj+B,KAEJA,EAAU8+B,EAAS9+B,EAASw/B,IACpBxjC,OAASiiC,EACVj+B,EACT,CACA,SAASy/B,EAAYxB,EAAaC,EAAUp6B,GAC1C,GACG,kBAAoBo6B,GAAY,KAAOA,GACxC,kBAAoBA,GACpB,kBAAoBA,EAEpB,OACGA,EAAWtY,GACV,GAAKsY,EACLD,EAAYla,KACZjgB,IAEQ9H,OAASiiC,EACnBC,EAEJ,GAAI,kBAAoBA,GAAY,OAASA,EAAU,CACrD,OAAQA,EAAS3/B,UACf,KAAKtB,EACH,OASE8gC,GARCj6B,EAAQghB,GACPoZ,EAAS5/B,KACT4/B,EAAStlB,IACTslB,EAAS5sB,MACT,KACA2sB,EAAYla,KACZjgB,GAEeo6B,GAChBp6B,EAAM9H,OAASiiC,EAChBn6B,EAEJ,KAAK5G,EACH,OACGghC,EAAWpY,GACVoY,EACAD,EAAYla,KACZjgB,IAEQ9H,OAASiiC,EACnBC,EAEJ,KAAKrgC,EAGH,OAAO4hC,EAAYxB,EADnBC,GAAWR,EADAQ,EAASp/B,OACJo/B,EAASr/B,UACiBiF,GAE9C,GAAI9E,EAAYk/B,IAAahgC,EAAcggC,GACzC,OACGA,EAAWxY,GACVwY,EACAD,EAAYla,KACZjgB,EACA,OAEQ9H,OAASiiC,EACnBC,EAEJ,GAAI,oBAAsBA,EAAS1R,KACjC,OAAOiT,EAAYxB,EAAaH,GAAeI,GAAWp6B,GAC5D,GAAIo6B,EAAS3/B,WAAaf,EACxB,OAAOiiC,EACLxB,EACAtT,GAAgCsT,EAAaC,GAC7Cp6B,GAEJk6B,GAAyBC,EAAaC,EACxC,CACA,OAAO,IACT,CACA,SAASwB,EAAWzB,EAAa0B,EAAUzB,EAAUp6B,GACnD,IAAI8U,EAAM,OAAS+mB,EAAWA,EAAS/mB,IAAM,KAC7C,GACG,kBAAoBslB,GAAY,KAAOA,GACxC,kBAAoBA,GACpB,kBAAoBA,EAEpB,OAAO,OAAStlB,EACZ,KACAwmB,EAAenB,EAAa0B,EAAU,GAAKzB,EAAUp6B,GAC3D,GAAI,kBAAoBo6B,GAAY,OAASA,EAAU,CACrD,OAAQA,EAAS3/B,UACf,KAAKtB,EACH,OAAOihC,EAAStlB,MAAQA,EACpBymB,EAAcpB,EAAa0B,EAAUzB,EAAUp6B,GAC/C,KACN,KAAK5G,EACH,OAAOghC,EAAStlB,MAAQA,EACpB2mB,EAAatB,EAAa0B,EAAUzB,EAAUp6B,GAC9C,KACN,KAAKjG,EACH,OAGE6hC,EAAWzB,EAAa0B,EADvBzB,GADAtlB,EAAMslB,EAASp/B,OACAo/B,EAASr/B,UACmBiF,GAGlD,GAAI9E,EAAYk/B,IAAahgC,EAAcggC,GACzC,OAAO,OAAStlB,EACZ,KACA0mB,EAAerB,EAAa0B,EAAUzB,EAAUp6B,EAAO,MAC7D,GAAI,oBAAsBo6B,EAAS1R,KACjC,OAAOkT,EACLzB,EACA0B,EACA7B,GAAeI,GACfp6B,GAEJ,GAAIo6B,EAAS3/B,WAAaf,EACxB,OAAOkiC,EACLzB,EACA0B,EACAhV,GAAgCsT,EAAaC,GAC7Cp6B,GAEJk6B,GAAyBC,EAAaC,EACxC,CACA,OAAO,IACT,CACA,SAAS0B,EACPf,EACAZ,EACA4B,EACA3B,EACAp6B,GAEA,GACG,kBAAoBo6B,GAAY,KAAOA,GACxC,kBAAoBA,GACpB,kBAAoBA,EAEpB,OAEEkB,EAAenB,EADdY,EAAmBA,EAAiBhyB,IAAIgzB,IAAW,KACN,GAAK3B,EAAUp6B,GAEjE,GAAI,kBAAoBo6B,GAAY,OAASA,EAAU,CACrD,OAAQA,EAAS3/B,UACf,KAAKtB,EACH,OAKEoiC,EAAcpB,EAJbY,EACCA,EAAiBhyB,IACf,OAASqxB,EAAStlB,IAAMinB,EAAS3B,EAAStlB,MACvC,KACsCslB,EAAUp6B,GAE3D,KAAK5G,EACH,OAKEqiC,EAAatB,EAJZY,EACCA,EAAiBhyB,IACf,OAASqxB,EAAStlB,IAAMinB,EAAS3B,EAAStlB,MACvC,KACqCslB,EAAUp6B,GAE1D,KAAKjG,EAGH,OAAO+hC,EACLf,EACAZ,EACA4B,EAJF3B,GAAWR,EADAQ,EAASp/B,OACJo/B,EAASr/B,UAMvBiF,GAGN,GAAI9E,EAAYk/B,IAAahgC,EAAcggC,GACzC,OAEEoB,EAAerB,EADdY,EAAmBA,EAAiBhyB,IAAIgzB,IAAW,KACN3B,EAAUp6B,EAAO,MAEnE,GAAI,oBAAsBo6B,EAAS1R,KACjC,OAAOoT,EACLf,EACAZ,EACA4B,EACA/B,GAAeI,GACfp6B,GAEJ,GAAIo6B,EAAS3/B,WAAaf,EACxB,OAAOoiC,EACLf,EACAZ,EACA4B,EACAlV,GAAgCsT,EAAaC,GAC7Cp6B,GAEJk6B,GAAyBC,EAAaC,EACxC,CACA,OAAO,IACT,CA4KA,SAAS4B,EACP7B,EACAU,EACAT,EACAp6B,GAOA,GALA,kBAAoBo6B,GAClB,OAASA,GACTA,EAAS5/B,OAASnB,GAClB,OAAS+gC,EAAStlB,MACjBslB,EAAWA,EAAS5sB,MAAMlC,UACzB,kBAAoB8uB,GAAY,OAASA,EAAU,CACrD,OAAQA,EAAS3/B,UACf,KAAKtB,EACHsU,EAAG,CACD,IAAK,IAAIqH,EAAMslB,EAAStlB,IAAK,OAAS+lB,GAAqB,CACzD,GAAIA,EAAkB/lB,MAAQA,EAAK,CAEjC,IADAA,EAAMslB,EAAS5/B,QACHnB,GACV,GAAI,IAAMwhC,EAAkBziC,IAAK,CAC/BwiC,EACET,EACAU,EAAkBhiC,UAEpBmH,EAAQg7B,EACNH,EACAT,EAAS5sB,MAAMlC,WAEXpT,OAASiiC,EACfA,EAAcn6B,EACd,MAAMyN,CACR,OACK,GACLotB,EAAkB3a,cAAgBpL,GACjC,kBAAoBA,GACnB,OAASA,GACTA,EAAIra,WAAaV,GACjBugC,GAAYxlB,KAAS+lB,EAAkBrgC,KACzC,CACAogC,EACET,EACAU,EAAkBhiC,SAGpBohC,GADAj6B,EAAQg7B,EAASH,EAAmBT,EAAS5sB,OAC5B4sB,GACjBp6B,EAAM9H,OAASiiC,EACfA,EAAcn6B,EACd,MAAMyN,CACR,CACAmtB,EAAwBT,EAAaU,GACrC,KACF,CAAOH,EAAYP,EAAaU,GAChCA,EAAoBA,EAAkBhiC,OACxC,CACAuhC,EAAS5/B,OAASnB,IACZ2G,EAAQ4hB,GACRwY,EAAS5sB,MAAMlC,SACf6uB,EAAYla,KACZjgB,EACAo6B,EAAStlB,MAEJ5c,OAASiiC,EACfA,EAAcn6B,IASfi6B,GAREj6B,EAAQghB,GACRoZ,EAAS5/B,KACT4/B,EAAStlB,IACTslB,EAAS5sB,MACT,KACA2sB,EAAYla,KACZjgB,GAEeo6B,GAChBp6B,EAAM9H,OAASiiC,EACfA,EAAcn6B,EACrB,CACA,OAAOq7B,EAAiBlB,GAC1B,KAAK/gC,EACHqU,EAAG,CACD,IAAKqH,EAAMslB,EAAStlB,IAAK,OAAS+lB,GAAqB,CACrD,GAAIA,EAAkB/lB,MAAQA,EAAG,CAC/B,GACE,IAAM+lB,EAAkBziC,KACxByiC,EAAkBh3B,UAAUyX,gBAC1B8e,EAAS9e,eACXuf,EAAkBh3B,UAAUse,iBAC1BiY,EAASjY,eACX,CACAyY,EACET,EACAU,EAAkBhiC,UAEpBmH,EAAQg7B,EAASH,EAAmBT,EAAS9uB,UAAY,KACnDpT,OAASiiC,EACfA,EAAcn6B,EACd,MAAMyN,CACR,CACEmtB,EAAwBT,EAAaU,GACrC,KACD,CACEH,EAAYP,EAAaU,GAC9BA,EAAoBA,EAAkBhiC,OACxC,EACAmH,EAAQgiB,GAAsBoY,EAAUD,EAAYla,KAAMjgB,IACpD9H,OAASiiC,EACfA,EAAcn6B,CAChB,CACA,OAAOq7B,EAAiBlB,GAC1B,KAAKpgC,EACH,OAGEiiC,EACE7B,EACAU,EAHDT,GADAtlB,EAAMslB,EAASp/B,OACAo/B,EAASr/B,UAKvBiF,GAIR,GAAI9E,EAAYk/B,GACd,OAnSN,SACED,EACAU,EACAoB,EACAj8B,GAEA,IACE,IAAIk8B,EAAsB,KACxBC,EAAmB,KACnBN,EAAWhB,EACXkB,EAAUlB,EAAoB,EAC9BuB,EAAe,KACjB,OAASP,GAAYE,EAASE,EAAYzkC,OAC1CukC,IACA,CACAF,EAAS9/B,MAAQggC,GACXK,EAAeP,EAAYA,EAAW,MACvCO,EAAeP,EAAShjC,QAC7B,IAAIqiC,EAAWU,EACbzB,EACA0B,EACAI,EAAYF,GACZ/7B,GAEF,GAAI,OAASk7B,EAAU,CACrB,OAASW,IAAaA,EAAWO,GACjC,KACF,CACA3B,GACEoB,GACA,OAASX,EAASjjC,WAClByiC,EAAYP,EAAa0B,GAC3BhB,EAAoBI,EAAWC,EAAUL,EAAmBkB,GAC5D,OAASI,EACJD,EAAsBhB,EACtBiB,EAAiBtjC,QAAUqiC,EAChCiB,EAAmBjB,EACnBW,EAAWO,CACb,CACA,GAAIL,IAAWE,EAAYzkC,OACzB,OACEojC,EAAwBT,EAAa0B,GACrCnxB,IAAemY,GAAasX,EAAa4B,GACzCG,EAEJ,GAAI,OAASL,EAAU,CACrB,KAAOE,EAASE,EAAYzkC,OAAQukC,IAEhC,QADDF,EAAWF,EAAYxB,EAAa8B,EAAYF,GAAS/7B,MAEpD66B,EAAoBI,EACpBY,EACAhB,EACAkB,GAEF,OAASI,EACJD,EAAsBL,EACtBM,EAAiBtjC,QAAUgjC,EAC/BM,EAAmBN,GAE1B,OADAnxB,IAAemY,GAAasX,EAAa4B,GAClCG,CACT,CACA,IACEL,EAAWf,EAAqBe,GAChCE,EAASE,EAAYzkC,OACrBukC,IASE,QAPDK,EAAeN,EACdD,EACA1B,EACA4B,EACAE,EAAYF,GACZ/7B,MAGGy6B,GACC,OAAS2B,EAAankC,WACtB4jC,EAASQ,OACP,OAASD,EAAatnB,IAAMinB,EAASK,EAAatnB,KAErD+lB,EAAoBI,EACnBmB,EACAvB,EACAkB,GAEF,OAASI,EACJD,EAAsBE,EACtBD,EAAiBtjC,QAAUujC,EAC/BD,EAAmBC,GAM1B,OALA3B,GACEoB,EAASxU,SAAQ,SAAUzuB,GACzB,OAAO8hC,EAAYP,EAAavhC,EAClC,IACF8R,IAAemY,GAAasX,EAAa4B,GAClCG,CACT,CAqMaI,CACLnC,EACAU,EACAT,EACAp6B,GAEJ,GAAI5F,EAAcggC,GAAW,CAE3B,GAAI,oBADJtlB,EAAM1a,EAAcggC,IACW,MAAM1hC,MAAMtB,EAAuB,MAElE,OA9MN,SACE+iC,EACAU,EACAoB,EACAj8B,GAEA,GAAI,MAAQi8B,EAAa,MAAMvjC,MAAMtB,EAAuB,MAC5D,IACE,IAAI8kC,EAAsB,KACxBC,EAAmB,KACnBN,EAAWhB,EACXkB,EAAUlB,EAAoB,EAC9BuB,EAAe,KACfG,EAAON,EAAYjd,OACrB,OAAS6c,IAAaU,EAAKC,KAC3BT,IAAUQ,EAAON,EAAYjd,OAC7B,CACA6c,EAAS9/B,MAAQggC,GACXK,EAAeP,EAAYA,EAAW,MACvCO,EAAeP,EAAShjC,QAC7B,IAAIqiC,EAAWU,EAAWzB,EAAa0B,EAAUU,EAAKjgC,MAAO0D,GAC7D,GAAI,OAASk7B,EAAU,CACrB,OAASW,IAAaA,EAAWO,GACjC,KACF,CACA3B,GACEoB,GACA,OAASX,EAASjjC,WAClByiC,EAAYP,EAAa0B,GAC3BhB,EAAoBI,EAAWC,EAAUL,EAAmBkB,GAC5D,OAASI,EACJD,EAAsBhB,EACtBiB,EAAiBtjC,QAAUqiC,EAChCiB,EAAmBjB,EACnBW,EAAWO,CACb,CACA,GAAIG,EAAKC,KACP,OACE5B,EAAwBT,EAAa0B,GACrCnxB,IAAemY,GAAasX,EAAa4B,GACzCG,EAEJ,GAAI,OAASL,EAAU,CACrB,MAAQU,EAAKC,KAAMT,IAAUQ,EAAON,EAAYjd,OAE5C,QADDud,EAAOZ,EAAYxB,EAAaoC,EAAKjgC,MAAO0D,MAEvC66B,EAAoBI,EAAWsB,EAAM1B,EAAmBkB,GAC1D,OAASI,EACJD,EAAsBK,EACtBJ,EAAiBtjC,QAAU0jC,EAC/BJ,EAAmBI,GAE1B,OADA7xB,IAAemY,GAAasX,EAAa4B,GAClCG,CACT,CACA,IACEL,EAAWf,EAAqBe,IAC/BU,EAAKC,KACNT,IAAUQ,EAAON,EAAYjd,OAG3B,QADDud,EAAOT,EAAcD,EAAU1B,EAAa4B,EAAQQ,EAAKjgC,MAAO0D,MAE5Dy6B,GACC,OAAS8B,EAAKtkC,WACd4jC,EAASQ,OAAO,OAASE,EAAKznB,IAAMinB,EAASQ,EAAKznB,KACnD+lB,EAAoBI,EAAWsB,EAAM1B,EAAmBkB,GACzD,OAASI,EACJD,EAAsBK,EACtBJ,EAAiBtjC,QAAU0jC,EAC/BJ,EAAmBI,GAM1B,OALA9B,GACEoB,EAASxU,SAAQ,SAAUzuB,GACzB,OAAO8hC,EAAYP,EAAavhC,EAClC,IACF8R,IAAemY,GAAasX,EAAa4B,GAClCG,CACT,CAmIaO,CACLtC,EACAU,EAHFT,EAAWtlB,EAAI1P,KAAKg1B,GAKlBp6B,EAEJ,CACA,GAAI,oBAAsBo6B,EAAS1R,KACjC,OAAOsT,EACL7B,EACAU,EACAb,GAAeI,GACfp6B,GAEJ,GAAIo6B,EAAS3/B,WAAaf,EACxB,OAAOsiC,EACL7B,EACAU,EACAhU,GAAgCsT,EAAaC,GAC7Cp6B,GAEJk6B,GAAyBC,EAAaC,EACxC,CACA,MAAQ,kBAAoBA,GAAY,KAAOA,GAC7C,kBAAoBA,GACpB,kBAAoBA,GAChBA,EAAW,GAAKA,EAClB,OAASS,GAAqB,IAAMA,EAAkBziC,KACjDwiC,EAAwBT,EAAaU,EAAkBhiC,UACvDmH,EAAQg7B,EAASH,EAAmBT,IAC9BliC,OAASiiC,EACfA,EAAcn6B,IACd46B,EAAwBT,EAAaU,IACrC76B,EAAQ8hB,GAAoBsY,EAAUD,EAAYla,KAAMjgB,IAClD9H,OAASiiC,EACfA,EAAcn6B,GACnBq7B,EAAiBlB,IACjBS,EAAwBT,EAAaU,EAC3C,CACA,OAAO,SAAUV,EAAaU,EAAmBT,EAAUp6B,GACzD,IACE+5B,GAAuB,EACvB,IAAI2C,EAAkBV,EACpB7B,EACAU,EACAT,EACAp6B,GAGF,OADAkqB,GAAgB,KACTwS,CACT,CAAE,MAAOzhC,GACP,GAAIA,IAAM0uB,IAAqB1uB,IAAM4uB,GAAyB,MAAM5uB,EACpE,IAAIlD,EAAQ0oB,GAAqB,GAAIxlB,EAAG,KAAMk/B,EAAYla,MAG1D,OAFAloB,EAAMiI,MAAQA,EACdjI,EAAMG,OAASiiC,EACRpiC,CACT,CAEF,CACF,CACA,IAAI4kC,GAAuBnC,IAAsB,GAC/CoC,GAAmBpC,IAAsB,GACzCqC,GAA6B7gC,EAAa,MAC1C8gC,GAAgB,KAClB,SAASC,GAA+BC,GACtC,IAAI9gC,EAAU8gC,EAAQ/kC,UACtBoE,EAAK4gC,GAAmD,EAA9BA,GAAoB/gC,SAC9CG,EAAKwgC,GAA4BG,GACjC,OAASF,KACN,OAAS5gC,GAAW,OAAS4wB,GAA6B5wB,SAEvD,OAASA,EAAQ3D,iBADhBukC,GAAgBE,EAEzB,CACA,SAASE,GAA6BnlC,GACpC,GAAI,KAAOA,EAAMK,KACf,GACGiE,EAAK4gC,GAAqBA,GAAoB/gC,SAC/CG,EAAKwgC,GAA4B9kC,GACjC,OAAS+kC,GACT,CACA,IAAI5gC,EAAUnE,EAAME,UACpB,OAASiE,GACP,OAASA,EAAQ3D,gBAChBukC,GAAgB/kC,EACrB,OACKolC,IACT,CACA,SAASA,KACP9gC,EAAK4gC,GAAqBA,GAAoB/gC,SAC9CG,EAAKwgC,GAA4BA,GAA2B3gC,QAC9D,CACA,SAASkhC,GAAmBrlC,GAC1BoE,EAAI0gC,IACJC,KAAkB/kC,IAAU+kC,GAAgB,MAC5C3gC,EAAI8gC,GACN,CACA,IAAIA,GAAsBjhC,EAAa,GACvC,SAASqhC,GAAmBC,GAC1B,IAAK,IAAI1lC,EAAO0lC,EAAK,OAAS1lC,GAAQ,CACpC,GAAI,KAAOA,EAAKQ,IAAK,CACnB,IAAIs4B,EAAQ94B,EAAKW,cACjB,GACE,OAASm4B,IAET,QADEA,EAAQA,EAAMl4B,aAEd,OAASk4B,EAAM/0B,MACf4hC,GAA2B7M,IAE7B,OAAO94B,CACX,MAAO,GAAI,KAAOA,EAAKQ,UAAO,IAAWR,EAAK0oB,cAAckd,aAC1D,GAAI,KAAoB,IAAb5lC,EAAKO,OAAc,OAAOP,OAChC,GAAI,OAASA,EAAKgB,MAAO,CAC9BhB,EAAKgB,MAAMV,OAASN,EACpBA,EAAOA,EAAKgB,MACZ,QACF,CACA,GAAIhB,IAAS0lC,EAAK,MAClB,KAAO,OAAS1lC,EAAKiB,SAAW,CAC9B,GAAI,OAASjB,EAAKM,QAAUN,EAAKM,SAAWolC,EAAK,OAAO,KACxD1lC,EAAOA,EAAKM,MACd,CACAN,EAAKiB,QAAQX,OAASN,EAAKM,OAC3BN,EAAOA,EAAKiB,OACd,CACA,OAAO,IACT,CACA,SAAS4kC,GACPv1B,EACAw1B,EACAC,EACAC,GAIAD,EACE,QAFFA,EAA2BA,EAAyBC,EADpDF,EAAOx1B,EAAe3P,sBAGiB,IAAWolC,EAC5CD,EACA5kC,EAAO,CAAC,EAAG4kC,EAAMC,GACvBz1B,EAAe3P,cAAgBolC,EAC/B,IAAMz1B,EAAelI,QAClBkI,EAAemY,YAAYyK,UAAY6S,EAC5C,CACA,IAAIE,GAAwB,CAC1BC,gBAAiB,SAAUl6B,EAAM0nB,EAASC,GACxC3nB,EAAOA,EAAKm6B,gBACZ,IAAIh9B,EAAOs2B,KACTtY,EAASsM,GAAatqB,GACxBge,EAAOuM,QAAUA,OACjB,IAAWC,GAAY,OAASA,IAAaxM,EAAOwM,SAAWA,GAE/D,QADAD,EAAUE,GAAc5nB,EAAMmb,EAAQhe,MAEnC8xB,GAAsBvH,EAAS1nB,EAAM7C,GACtC2qB,GAAoBJ,EAAS1nB,EAAM7C,GACvC,EACAi9B,oBAAqB,SAAUp6B,EAAM0nB,EAASC,GAC5C3nB,EAAOA,EAAKm6B,gBACZ,IAAIh9B,EAAOs2B,KACTtY,EAASsM,GAAatqB,GACxBge,EAAO3mB,IAAM,EACb2mB,EAAOuM,QAAUA,OACjB,IAAWC,GAAY,OAASA,IAAaxM,EAAOwM,SAAWA,GAE/D,QADAD,EAAUE,GAAc5nB,EAAMmb,EAAQhe,MAEnC8xB,GAAsBvH,EAAS1nB,EAAM7C,GACtC2qB,GAAoBJ,EAAS1nB,EAAM7C,GACvC,EACAk9B,mBAAoB,SAAUr6B,EAAM2nB,GAClC3nB,EAAOA,EAAKm6B,gBACZ,IAAIh9B,EAAOs2B,KACTtY,EAASsM,GAAatqB,GACxBge,EAAO3mB,IAAM,OACb,IAAWmzB,GAAY,OAASA,IAAaxM,EAAOwM,SAAWA,GAE/D,QADAA,EAAWC,GAAc5nB,EAAMmb,EAAQhe,MAEpC8xB,GAAsBtH,EAAU3nB,EAAM7C,GACvC2qB,GAAoBH,EAAU3nB,EAAM7C,GACxC,GAEF,SAASm9B,GACPh2B,EACAw1B,EACAS,EACAC,EACApnB,EACAD,EACAsnB,GAGA,MAAO,oBADPn2B,EAAiBA,EAAerE,WACYy6B,sBACxCp2B,EAAeo2B,sBAAsBF,EAAUrnB,EAAUsnB,IACzDX,EAAKhgC,YAAaggC,EAAKhgC,UAAU6gC,wBAC9BnkB,GAAa+jB,EAAUC,KAAchkB,GAAapD,EAAUD,GAErE,CACA,SAASynB,GACPt2B,EACA2b,EACAua,EACAC,GAEAn2B,EAAiB2b,EAAS6M,MAC1B,oBAAsB7M,EAAS4a,2BAC7B5a,EAAS4a,0BAA0BL,EAAUC,GAC/C,oBAAsBxa,EAAS6a,kCAC7B7a,EAAS6a,iCAAiCN,EAAUC,GACtDxa,EAAS6M,QAAUxoB,GACjB21B,GAAsBG,oBAAoBna,EAAUA,EAAS6M,MAAO,KACxE,CACA,SAASiO,GAA2Bhe,EAAWie,GAC7C,IAAIR,EAAWQ,EACf,GAAI,QAASA,EAEX,IAAK,IAAI/uB,KADTuuB,EAAW,CAAC,EACSQ,EACnB,QAAU/uB,IAAauuB,EAASvuB,GAAY+uB,EAAU/uB,IAE1D,GAAK8Q,EAAYA,EAAUke,aAEzB,IAAK,IAAIC,KADTV,IAAaQ,IAAcR,EAAWtlC,EAAO,CAAC,EAAGslC,IACzBzd,OACtB,IAAWyd,EAASU,KACjBV,EAASU,GAAene,EAAUme,IAEzC,OAAOV,CACT,CACA,IAAIW,GACF,oBAAsBC,YAClBA,YACA,SAAU5Z,GACR,GACE,kBAAoB/iB,QACpB,oBAAsBA,OAAO48B,WAC7B,CACA,IAAI38B,EAAQ,IAAID,OAAO48B,WAAW,QAAS,CACzCluB,SAAS,EACTC,YAAY,EACZ5I,QACE,kBAAoBgd,GACpB,OAASA,GACT,kBAAoBA,EAAMhd,QACtB2M,OAAOqQ,EAAMhd,SACb2M,OAAOqQ,GACbA,MAAOA,IAET,IAAK/iB,OAAO68B,cAAc58B,GAAQ,MACpC,MAAO,GACL,kBAAoB68B,SACpB,oBAAsBA,QAAQC,KAG9B,YADAD,QAAQC,KAAK,oBAAqBha,GAGpCia,QAAQja,MAAMA,EAChB,EACN,SAASka,GAAuBla,GAC9B2Z,GAAkB3Z,EACpB,CACA,SAASma,GAAqBna,GAC5Bia,QAAQja,MAAMA,EAChB,CACA,SAASoa,GAA0Bpa,GACjC2Z,GAAkB3Z,EACpB,CACA,SAASqa,GAAiBt/B,EAAMu/B,GAC9B,KAEEC,EADsBx/B,EAAKw/B,iBACXD,EAAUpjC,MAAO,CAAEsjC,eAAgBF,EAAU15B,OAC/D,CAAE,MAAO65B,GACPC,YAAW,WACT,MAAMD,CACR,GACF,CACF,CACA,SAASE,GAAe5/B,EAAM6/B,EAAUN,GACtC,KAEEO,EADoB9/B,EAAK8/B,eACXP,EAAUpjC,MAAO,CAC7BsjC,eAAgBF,EAAU15B,MAC1Bk6B,cAAe,IAAMF,EAAS5nC,IAAM4nC,EAASn8B,UAAY,MAE7D,CAAE,MAAOs8B,GACPL,YAAW,WACT,MAAMK,CACR,GACF,CACF,CACA,SAASC,GAAsBjgC,EAAMu/B,EAAW3+B,GAO9C,OANAA,EAAOsqB,GAAatqB,IACf3I,IAAM,EACX2I,EAAKuqB,QAAU,CAAEjhB,QAAS,MAC1BtJ,EAAKwqB,SAAW,WACdkU,GAAiBt/B,EAAMu/B,EACzB,EACO3+B,CACT,CACA,SAASs/B,GAAuBt/B,GAG9B,OAFAA,EAAOsqB,GAAatqB,IACf3I,IAAM,EACJ2I,CACT,CACA,SAASu/B,GAA2BvhB,EAAQ5e,EAAMpI,EAAO2nC,GACvD,IAAIa,EAA2BxoC,EAAMyC,KAAK+lC,yBAC1C,GAAI,oBAAsBA,EAA0B,CAClD,IAAInb,EAAQsa,EAAUpjC,MACtByiB,EAAOuM,QAAU,WACf,OAAOiV,EAAyBnb,EAClC,EACArG,EAAOwM,SAAW,WAChBwU,GAAe5/B,EAAMpI,EAAO2nC,EAC9B,CACF,CACA,IAAI97B,EAAO7L,EAAM8L,UACjB,OAASD,GACP,oBAAsBA,EAAK48B,oBAC1BzhB,EAAOwM,SAAW,WACjBwU,GAAe5/B,EAAMpI,EAAO2nC,GAC5B,oBAAsBa,IACnB,OAASE,GACLA,GAAyC,IAAIp8B,IAAI,CAAC2E,OACnDy3B,GAAuC97B,IAAIqE,OACjD,IAAIhD,EAAQ05B,EAAU15B,MACtBgD,KAAKw3B,kBAAkBd,EAAUpjC,MAAO,CACtCsjC,eAAgB,OAAS55B,EAAQA,EAAQ,IAE7C,EACJ,CAyJA,IAAI06B,GAA8BhoC,MAAMtB,EAAuB,MAC7Dy3B,IAAmB,EACrB,SAAS8R,GAAkBzkC,EAASgM,EAAgB04B,EAAc//B,GAChEqH,EAAetP,MACb,OAASsD,EACL0gC,GAAiB10B,EAAgB,KAAM04B,EAAc//B,GACrD87B,GACEz0B,EACAhM,EAAQtD,MACRgoC,EACA//B,EAEV,CACA,SAASggC,GACP3kC,EACAgM,EACAyY,EACAid,EACA/8B,GAEA8f,EAAYA,EAAU7lB,OACtB,IAAIslB,EAAMlY,EAAekY,IACzB,GAAI,QAASwd,EAAW,CACtB,IAAIkD,EAAkB,CAAC,EACvB,IAAK,IAAIhsB,KAAO8oB,EACd,QAAU9oB,IAAQgsB,EAAgBhsB,GAAO8oB,EAAU9oB,GACvD,MAAOgsB,EAAkBlD,EAWzB,OAVAlX,GAAqBxe,GACrB01B,EAAYzP,GACVjyB,EACAgM,EACAyY,EACAmgB,EACA1gB,EACAvf,GAEFiU,EAAM2a,KACF,OAASvzB,GAAY2yB,IAKzBnkB,IAAeoK,GAAOqO,GAAuBjb,GAC7CA,EAAe/P,OAAS,EACxBwoC,GAAkBzkC,EAASgM,EAAgB01B,EAAW/8B,GAC/CqH,EAAetP,QANlB+2B,GAAazzB,EAASgM,EAAgBrH,GACtCkgC,GAA6B7kC,EAASgM,EAAgBrH,GAM5D,CACA,SAASmgC,GACP9kC,EACAgM,EACAyY,EACAid,EACA/8B,GAEA,GAAI,OAAS3E,EAAS,CACpB,IAAI1B,EAAOmmB,EAAUnmB,KACrB,MACE,oBAAsBA,GACrBkmB,GAAgBlmB,SACjB,IAAWA,EAAKqkC,cAChB,OAASle,EAAUsgB,UAarB/kC,EAAU8kB,GACRL,EAAUnmB,KACV,KACAojC,EACA11B,EACAA,EAAe+X,KACfpf,IAEMuf,IAAMlY,EAAekY,IAC7BlkB,EAAQhE,OAASgQ,EACTA,EAAetP,MAAQsD,IApB1BgM,EAAe9P,IAAM,GACrB8P,EAAe1N,KAAOA,EACvB0mC,GACEhlC,EACAgM,EACA1N,EACAojC,EACA/8B,GAcR,CAEA,GADArG,EAAO0B,EAAQtD,OACVuoC,GAA8BjlC,EAAS2E,GAAc,CACxD,IAAIugC,EAAY5mC,EAAK8lB,cAGrB,IADAK,EAAY,QADZA,EAAYA,EAAUsgB,SACWtgB,EAAYvG,IAC/BgnB,EAAWxD,IAAc1hC,EAAQkkB,MAAQlY,EAAekY,IACpE,OAAO2gB,GAA6B7kC,EAASgM,EAAgBrH,EACjE,CAKA,OAJAqH,EAAe/P,OAAS,GACxB+D,EAAU2kB,GAAqBrmB,EAAMojC,IAC7Bxd,IAAMlY,EAAekY,IAC7BlkB,EAAQhE,OAASgQ,EACTA,EAAetP,MAAQsD,CACjC,CACA,SAASglC,GACPhlC,EACAgM,EACAyY,EACAid,EACA/8B,GAEA,GAAI,OAAS3E,EAAS,CACpB,IAAIklC,EAAYllC,EAAQokB,cACxB,GACElG,GAAagnB,EAAWxD,IACxB1hC,EAAQkkB,MAAQlY,EAAekY,IAE/B,IACIyO,IAAmB,EACpB3mB,EAAe8X,aAAe4d,EAAYwD,GAC3CD,GAA8BjlC,EAAS2E,GAIvC,OACGqH,EAAelI,MAAQ9D,EAAQ8D,MAChC+gC,GAA6B7kC,EAASgM,EAAgBrH,GAJxD,KAAuB,OAAhB3E,EAAQ/D,SAAoB02B,IAAmB,EAIc,CAE1E,CACA,OAAOwS,GACLnlC,EACAgM,EACAyY,EACAid,EACA/8B,EAEJ,CACA,SAASygC,GAAyBplC,EAASgM,EAAgBrH,GACzD,IAAI+8B,EAAY11B,EAAe8X,aAC7B4gB,EAAehD,EAAUtyB,SACzBsoB,EAAY,OAAS13B,EAAUA,EAAQ3D,cAAgB,KACzD,GAAI,WAAaqlC,EAAU3d,KAAM,CAC/B,GAAI,KAA8B,IAAvB/X,EAAe/P,OAAc,CAGtC,GAFAylC,EACE,OAAShK,EAAYA,EAAU1G,UAAYrsB,EAAcA,EACvD,OAAS3E,EAAS,CAEpB,IADA0kC,EAAe14B,EAAetP,MAAQsD,EAAQtD,MACzCg7B,EAAY,EAAG,OAASgN,GAC1BhN,EACCA,EAAYgN,EAAa5gC,MAAQ4gC,EAAanhB,WAC7CmhB,EAAeA,EAAa/nC,QACjCqP,EAAeuX,WAAamU,GAAagK,CAC3C,MAAQ11B,EAAeuX,WAAa,EAAKvX,EAAetP,MAAQ,KAChE,OAAO2oC,GACLrlC,EACAgM,EACA01B,EACA/8B,EAEJ,CACA,GAAI,KAAqB,UAAdA,GAYT,OACGqH,EAAelI,MAAQkI,EAAeuX,WAAa,UACpD8hB,GACErlC,EACAgM,EACA,OAAS0rB,EAAYA,EAAU1G,UAAYrsB,EAAcA,EACzDA,GAjBHqH,EAAe3P,cAAgB,CAAE20B,UAAW,EAAGsU,UAAW,MACzD,OAAStlC,GACPmtB,GACEnhB,EACA,OAAS0rB,EAAYA,EAAU4N,UAAY,MAE/C,OAAS5N,EACL5G,GAAkB9kB,EAAgB0rB,GAClCzG,KACJ+P,GAA6Bh1B,EAWnC,MACE,OAAS0rB,GACJvK,GAAenhB,EAAgB0rB,EAAU4N,WAC1CxU,GAAkB9kB,EAAgB0rB,GAClCuJ,KACCj1B,EAAe3P,cAAgB,OAC/B,OAAS2D,GAAWmtB,GAAenhB,EAAgB,MACpDilB,KACAgQ,MAEN,OADAwD,GAAkBzkC,EAASgM,EAAgB04B,EAAc//B,GAClDqH,EAAetP,KACxB,CACA,SAAS2oC,GACPrlC,EACAgM,EACAu5B,EACA5gC,GAEA,IAAIxD,EAA2B4rB,KAc/B,OAbA5rB,EACE,OAASA,EACL,KACA,CAAEmiB,OAAQgI,GAAahqB,cAAegsB,KAAMnsB,GAClD6K,EAAe3P,cAAgB,CAC7B20B,UAAWuU,EACXD,UAAWnkC,GAEb,OAASnB,GAAWmtB,GAAenhB,EAAgB,MACnDilB,KACA+P,GAA6Bh1B,GAC7B,OAAShM,GACPkqB,GAA8BlqB,EAASgM,EAAgBrH,GAAa,GAC/D,IACT,CACA,SAAS6gC,GAAQxlC,EAASgM,GACxB,IAAIkY,EAAMlY,EAAekY,IACzB,GAAI,OAASA,EACX,OAASlkB,GACP,OAASA,EAAQkkB,MAChBlY,EAAe/P,OAAS,aACxB,CACH,GAAI,oBAAsBioB,GAAO,kBAAoBA,EACnD,MAAM1nB,MAAMtB,EAAuB,MACjC,OAAS8E,GAAWA,EAAQkkB,MAAQA,IACtClY,EAAe/P,OAAS,QAC5B,CACF,CACA,SAASkpC,GACPnlC,EACAgM,EACAyY,EACAid,EACA/8B,GAYA,OAVA6lB,GAAqBxe,GACrByY,EAAYwN,GACVjyB,EACAgM,EACAyY,EACAid,OACA,EACA/8B,GAEF+8B,EAAYnO,KACR,OAASvzB,GAAY2yB,IAKzBnkB,IAAekzB,GAAaza,GAAuBjb,GACnDA,EAAe/P,OAAS,EACxBwoC,GAAkBzkC,EAASgM,EAAgByY,EAAW9f,GAC/CqH,EAAetP,QANlB+2B,GAAazzB,EAASgM,EAAgBrH,GACtCkgC,GAA6B7kC,EAASgM,EAAgBrH,GAM5D,CACA,SAAS8gC,GACPzlC,EACAgM,EACA01B,EACAjd,EACAyN,EACAvtB,GAYA,OAVA6lB,GAAqBxe,GACrBA,EAAemY,YAAc,KAC7Bud,EAAYnP,GACVvmB,EACAyY,EACAid,EACAxP,GAEFM,GAAqBxyB,GACrBykB,EAAY8O,KACR,OAASvzB,GAAY2yB,IAKzBnkB,IAAeiW,GAAawC,GAAuBjb,GACnDA,EAAe/P,OAAS,EACxBwoC,GAAkBzkC,EAASgM,EAAgB01B,EAAW/8B,GAC/CqH,EAAetP,QANlB+2B,GAAazzB,EAASgM,EAAgBrH,GACtCkgC,GAA6B7kC,EAASgM,EAAgBrH,GAM5D,CACA,SAAS+gC,GACP1lC,EACAgM,EACAyY,EACAid,EACA/8B,GAGA,GADA6lB,GAAqBxe,GACjB,OAASA,EAAerE,UAAW,CACrC,IAAIzG,EAAU0iB,GACZ+hB,EAAclhB,EAAUkhB,YAC1B,kBAAoBA,GAClB,OAASA,IACRzkC,EAAUupB,GAAYkb,IACzBzkC,EAAU,IAAIujB,EAAUid,EAAWxgC,GACnC8K,EAAe3P,cACb,OAAS6E,EAAQszB,YAAS,IAAWtzB,EAAQszB,MAAQtzB,EAAQszB,MAAQ,KACvEtzB,EAAQ0kC,QAAUjE,GAClB31B,EAAerE,UAAYzG,EAC3BA,EAAQ2gC,gBAAkB71B,GAC1B9K,EAAU8K,EAAerE,WACjB2J,MAAQowB,EAChBxgC,EAAQszB,MAAQxoB,EAAe3P,cAC/B6E,EAAQ2kC,KAAO,CAAC,EAChBlX,GAAsB3iB,GACtB25B,EAAclhB,EAAUkhB,YACxBzkC,EAAQA,QACN,kBAAoBykC,GAAe,OAASA,EACxClb,GAAYkb,GACZ/hB,GACN1iB,EAAQszB,MAAQxoB,EAAe3P,cAE/B,oBADAspC,EAAclhB,EAAUgd,4BAErBF,GACCv1B,EACAyY,EACAkhB,EACAjE,GAEDxgC,EAAQszB,MAAQxoB,EAAe3P,eAClC,oBAAsBooB,EAAUgd,0BAC9B,oBAAsBvgC,EAAQ4kC,yBAC7B,oBAAsB5kC,EAAQ6kC,2BAC7B,oBAAsB7kC,EAAQ8kC,qBAC9BL,EAAczkC,EAAQszB,MACxB,oBAAsBtzB,EAAQ8kC,oBAC5B9kC,EAAQ8kC,qBACV,oBAAsB9kC,EAAQ6kC,2BAC5B7kC,EAAQ6kC,4BACVJ,IAAgBzkC,EAAQszB,OACtBmN,GAAsBG,oBAAoB5gC,EAASA,EAAQszB,MAAO,MACpEvE,GAAmBjkB,EAAgB01B,EAAWxgC,EAASyD,GACvDqrB,KACC9uB,EAAQszB,MAAQxoB,EAAe3P,eAClC,oBAAsB6E,EAAQ+kC,oBAC3Bj6B,EAAe/P,OAAS,SAC3BylC,GAAY,CACd,MAAO,GAAI,OAAS1hC,EAAS,CAC3BkB,EAAU8K,EAAerE,UACzB,IAAIu+B,EAAqBl6B,EAAeoY,cACtC6d,EAAWQ,GAA2Bhe,EAAWyhB,GACnDhlC,EAAQoQ,MAAQ2wB,EAChB,IAAIkE,EAAajlC,EAAQA,QACvBklC,EAAuB3hB,EAAUkhB,YACnCA,EAAc/hB,GACd,kBAAoBwiB,GAClB,OAASA,IACRT,EAAclb,GAAY2b,IAC7B,IAAI3E,EAA2Bhd,EAAUgd,yBACzC2E,EACE,oBAAsB3E,GACtB,oBAAsBvgC,EAAQ4kC,wBAChCI,EAAqBl6B,EAAe8X,eAAiBoiB,EACrDE,GACG,oBAAsBllC,EAAQshC,kCAC7B,oBAAsBthC,EAAQqhC,4BAC9B2D,GAAsBC,IAAeR,IACrCrD,GACEt2B,EACA9K,EACAwgC,EACAiE,GAENjX,IAAiB,EACjB,IAAI5T,EAAW9O,EAAe3P,cAC9B6E,EAAQszB,MAAQ1Z,EAChBmV,GAAmBjkB,EAAgB01B,EAAWxgC,EAASyD,GACvDqrB,KACAmW,EAAan6B,EAAe3P,cAC5B6pC,GAAsBprB,IAAaqrB,GAAczX,IAC5C,oBAAsB+S,IACpBF,GACCv1B,EACAyY,EACAgd,EACAC,GAEDyE,EAAan6B,EAAe3P,gBAC9B4lC,EACCvT,IACAsT,GACEh2B,EACAyY,EACAwd,EACAP,EACA5mB,EACAqrB,EACAR,KAECS,GACE,oBAAsBllC,EAAQ6kC,2BAC7B,oBAAsB7kC,EAAQ8kC,qBAC/B,oBAAsB9kC,EAAQ8kC,oBAC7B9kC,EAAQ8kC,qBACV,oBAAsB9kC,EAAQ6kC,2BAC5B7kC,EAAQ6kC,6BACZ,oBAAsB7kC,EAAQ+kC,oBAC3Bj6B,EAAe/P,OAAS,WAC1B,oBAAsBiF,EAAQ+kC,oBAC5Bj6B,EAAe/P,OAAS,SAC1B+P,EAAeoY,cAAgBsd,EAC/B11B,EAAe3P,cAAgB8pC,GACnCjlC,EAAQoQ,MAAQowB,EAChBxgC,EAAQszB,MAAQ2R,EAChBjlC,EAAQA,QAAUykC,EAClBjE,EAAYO,IACZ,oBAAsB/gC,EAAQ+kC,oBAC5Bj6B,EAAe/P,OAAS,SAC1BylC,GAAY,EACnB,KAAO,CACLxgC,EAAU8K,EAAerE,UACzBunB,GAAiBlvB,EAASgM,GAE1Bo6B,EAAuB3D,GAA2Bhe,EADlDkhB,EAAc35B,EAAeoY,eAE7BljB,EAAQoQ,MAAQ80B,EAChB3E,EAA2Bz1B,EAAe8X,aAC1ChJ,EAAW5Z,EAAQA,QACnBilC,EAAa1hB,EAAUkhB,YACvB1D,EAAWre,GACX,kBAAoBuiB,GAClB,OAASA,IACRlE,EAAWxX,GAAY0b,KAEzBA,EACC,oBAFFD,EAAqBzhB,EAAUgd,2BAG7B,oBAAsBvgC,EAAQ4kC,0BAC7B,oBAAsB5kC,EAAQshC,kCAC7B,oBAAsBthC,EAAQqhC,4BAC9BoD,IAAgBlE,GAA4B3mB,IAAamnB,IACzDK,GACEt2B,EACA9K,EACAwgC,EACAO,GAENvT,IAAiB,EACjB5T,EAAW9O,EAAe3P,cAC1B6E,EAAQszB,MAAQ1Z,EAChBmV,GAAmBjkB,EAAgB01B,EAAWxgC,EAASyD,GACvDqrB,KACA,IAAInV,EAAW7O,EAAe3P,cAC9BspC,IAAgBlE,GAChB3mB,IAAaD,GACb6T,IACC,OAAS1uB,GACR,OAASA,EAAQuI,cACjB8hB,GAAsBrqB,EAAQuI,eAC3B,oBAAsB29B,IACpB3E,GACCv1B,EACAyY,EACAyhB,EACAxE,GAED7mB,EAAW7O,EAAe3P,gBAC5B+pC,EACC1X,IACAsT,GACEh2B,EACAyY,EACA2hB,EACA1E,EACA5mB,EACAD,EACAonB,IAED,OAASjiC,GACR,OAASA,EAAQuI,cACjB8hB,GAAsBrqB,EAAQuI,gBAC7B49B,GACE,oBAAsBjlC,EAAQmlC,4BAC7B,oBAAsBnlC,EAAQolC,sBAC/B,oBAAsBplC,EAAQolC,qBAC7BplC,EAAQolC,oBAAoB5E,EAAW7mB,EAAUonB,GACnD,oBAAsB/gC,EAAQmlC,4BAC5BnlC,EAAQmlC,2BACN3E,EACA7mB,EACAonB,IAEN,oBAAsB/gC,EAAQqlC,qBAC3Bv6B,EAAe/P,OAAS,GAC3B,oBAAsBiF,EAAQ4kC,0BAC3B95B,EAAe/P,OAAS,QAC1B,oBAAsBiF,EAAQqlC,oBAC5BZ,IAAgB3lC,EAAQokB,eACvBtJ,IAAa9a,EAAQ3D,gBACtB2P,EAAe/P,OAAS,GAC3B,oBAAsBiF,EAAQ4kC,yBAC3BH,IAAgB3lC,EAAQokB,eACvBtJ,IAAa9a,EAAQ3D,gBACtB2P,EAAe/P,OAAS,MAC1B+P,EAAeoY,cAAgBsd,EAC/B11B,EAAe3P,cAAgBwe,GACnC3Z,EAAQoQ,MAAQowB,EAChBxgC,EAAQszB,MAAQ3Z,EAChB3Z,EAAQA,QAAU+gC,EAClBP,EAAY0E,IACZ,oBAAsBllC,EAAQqlC,oBAC5BZ,IAAgB3lC,EAAQokB,eACvBtJ,IAAa9a,EAAQ3D,gBACtB2P,EAAe/P,OAAS,GAC3B,oBAAsBiF,EAAQ4kC,yBAC3BH,IAAgB3lC,EAAQokB,eACvBtJ,IAAa9a,EAAQ3D,gBACtB2P,EAAe/P,OAAS,MAC1BylC,GAAY,EACnB,CAgCA,OA/BAxgC,EAAUwgC,EACV8D,GAAQxlC,EAASgM,GACjB01B,EAAY,KAA8B,IAAvB11B,EAAe/P,OAClCiF,GAAWwgC,GACLxgC,EAAU8K,EAAerE,UAC1B8c,EACCid,GAAa,oBAAsBjd,EAAU4f,yBACzC,KACAnjC,EAAQtC,SACboN,EAAe/P,OAAS,EACzB,OAAS+D,GAAW0hC,GACd11B,EAAetP,MAAQ+jC,GACvBz0B,EACAhM,EAAQtD,MACR,KACAiI,GAEDqH,EAAetP,MAAQ+jC,GACtBz0B,EACA,KACAyY,EACA9f,IAEF8/B,GAAkBzkC,EAASgM,EAAgByY,EAAW9f,GACzDqH,EAAe3P,cAAgB6E,EAAQszB,MACvCx0B,EAAUgM,EAAetP,OACzBsD,EAAU6kC,GACT7kC,EACAgM,EACArH,GAEC3E,CACT,CACA,SAASwmC,GACPxmC,EACAgM,EACA04B,EACA//B,GAKA,OAHAkkB,KACA7c,EAAe/P,OAAS,IACxBwoC,GAAkBzkC,EAASgM,EAAgB04B,EAAc//B,GAClDqH,EAAetP,KACxB,CACA,IAAI+pC,GAAmB,CACrBnqC,WAAY,KACZoqC,YAAa,KACbC,UAAW,EACXtf,gBAAiB,MAEnB,SAASuf,GAA4BjiC,GACnC,MAAO,CAAEqsB,UAAWrsB,EAAa2gC,UAAW/X,KAC9C,CACA,SAASsZ,GACP7mC,EACA8mC,EACAniC,GAIA,OAFA3E,EAAU,OAASA,EAAUA,EAAQujB,YAAc5e,EAAc,EACjEmiC,IAAwB9mC,GAAW+mC,IAC5B/mC,CACT,CACA,SAASgnC,GAAwBhnC,EAASgM,EAAgBrH,GACxD,IAGE6jB,EAHEkZ,EAAY11B,EAAe8X,aAC7BmjB,GAAe,EACfC,EAAa,KAA8B,IAAvBl7B,EAAe/P,OAUrC,IARCusB,EAAkB0e,KAChB1e,GACC,OAASxoB,GAAW,OAASA,EAAQ3D,gBAEjC,KAAqC,EAA9B0kC,GAAoB/gC,UACnCwoB,IAAqBye,GAAe,EAAMj7B,EAAe/P,QAAU,KACnEusB,EAAkB,KAA8B,GAAvBxc,EAAe/P,OACxC+P,EAAe/P,QAAU,GACrB,OAAS+D,EAAS,CACpB,GAAIwO,GAAa,CAIf,GAHAy4B,EACIpG,GAA+B70B,GAC/Bi1B,KACAzyB,GAAa,CACf,IACE24B,EADEC,EAAehgB,GAEnB,GAAK+f,EAA2BC,EAAe,CAC7CC,EAAG,CAED,IADAF,EAA2BC,EAEzBA,EAAe9f,GACf,IAAM6f,EAAyBxrC,UAE/B,CACA,IAAKyrC,EAAc,CACjBA,EAAe,KACf,MAAMC,CACR,CAIA,GAAI,QAHJF,EAA2Bze,GACzBye,EAAyBtoB,cAEY,CACrCuoB,EAAe,KACf,MAAMC,CACR,CACF,CACAD,EAAeD,CACjB,CACA,OAASC,GACHp7B,EAAe3P,cAAgB,CAC/BC,WAAY8qC,EACZV,YACE,OAASlgB,GACL,CAAE8gB,GAAI7gB,GAAe8gB,SAAU7gB,IAC/B,KACNigB,UAAW,UACXtf,gBAAiB,OAElB8f,EAA2B5iB,GAC1B,GACA,KACA,KACA,IAEwB5c,UAAYy/B,EACrCD,EAAyBnrC,OAASgQ,EAClCA,EAAetP,MAAQyqC,EACvBhgB,GAAuBnb,EACvBob,GAAyB,KACzB+f,GAA2B,GAC3BA,GAA2B,CAClC,CACAA,GAA4B3f,GAAyBxb,EACvD,CAEA,GACE,QAFFo7B,EAAep7B,EAAe3P,gBAGe,QAAzC+qC,EAAeA,EAAa9qC,YAE9B,OACE+kC,GAA2B+F,GACtBp7B,EAAelI,MAAQ,GACvBkI,EAAelI,MAAQ,UAC5B,KAEJo9B,GAAmBl1B,EACrB,CAGA,OAFAo7B,EAAe1F,EAAUtyB,SACzBsyB,EAAYA,EAAU8F,SAClBP,GAEAhG,KAECmG,EAAeK,GACd,CAAE1jB,KAAM,SAAU3U,SAAUg4B,GAF7BH,EAAej7B,EAAe+X,MAK9B2d,EAAYhc,GACXgc,EACAuF,EACAtiC,EACA,MAEDyiC,EAAaprC,OAASgQ,EACtB01B,EAAU1lC,OAASgQ,EACnBo7B,EAAazqC,QAAU+kC,EACvB11B,EAAetP,MAAQ0qC,GACvBH,EAAej7B,EAAetP,OACjBL,cAAgBuqC,GAA4BjiC,GACzDsiC,EAAa1jB,WAAasjB,GACzB7mC,EACAwoB,EACA7jB,GAEDqH,EAAe3P,cAAgBoqC,GAChC/E,IAEJb,GAA+B70B,GACxB07B,GAA6B17B,EAAgBo7B,GACtD,CAEA,GACE,QAFFD,EAA2BnnC,EAAQ3D,gBAIjC,QADE+qC,EAAeD,EAAyB7qC,YAE1C,CACA,GAAI4qC,EACqB,IAAvBl7B,EAAe/P,OACV4kC,GAA+B70B,GAC/BA,EAAe/P,QAAU,IACzB+P,EAAiB27B,GAChB3nC,EACAgM,EACArH,IAEF,OAASqH,EAAe3P,eACrB4kC,KACAj1B,EAAetP,MAAQsD,EAAQtD,MAC/BsP,EAAe/P,OAAS,IACxB+P,EAAiB,OACjBi1B,KACAgG,EAAevF,EAAU8F,SACzBJ,EAAep7B,EAAe+X,KAC9B2d,EAAY+F,GACX,CAAE1jB,KAAM,UAAW3U,SAAUsyB,EAAUtyB,UACvCg4B,IAEDH,EAAevhB,GACduhB,EACAG,EACAziC,EACA,OAEY1I,OAAS,EACtBylC,EAAU1lC,OAASgQ,EACnBi7B,EAAajrC,OAASgQ,EACtB01B,EAAU/kC,QAAUsqC,EACpBj7B,EAAetP,MAAQglC,EACxBjB,GACEz0B,EACAhM,EAAQtD,MACR,KACAiI,IAED+8B,EAAY11B,EAAetP,OACjBL,cACTuqC,GAA4BjiC,GAC7B+8B,EAAUne,WAAasjB,GACtB7mC,EACAwoB,EACA7jB,GAEDqH,EAAe3P,cAAgBoqC,GAC/Bz6B,EAAiBi7B,QACrB,GACFpG,GAA+B70B,GAChCq1B,GAA2B+F,GAC3B,CAGA,GAFA5e,EACE4e,EAAavoB,aAAeuoB,EAAavoB,YAAY+oB,QAClC,IAAIC,EAASrf,EAAgBsf,KAClDtf,EAAkBqf,GAClBnG,EAAYllC,MAAMtB,EAAuB,OAC/B4O,MAAQ,GAClB43B,EAAUmG,OAASrf,EACnBf,GAAoB,CAAErnB,MAAOshC,EAAWrf,OAAQ,KAAMvY,MAAO,OAC7DkC,EAAiB27B,GACf3nC,EACAgM,EACArH,EAEJ,MAAO,GACJguB,IACCzI,GAA8BlqB,EAASgM,EAAgBrH,GAAa,GACrE6jB,EAAkB,KAAO7jB,EAAc3E,EAAQujB,YAChDoP,IAAoBnK,EACpB,CAEA,GACE,QAFFA,EAAkByE,MAYhB,KAJCyU,EACC,MALDA,EACC,KAAmB,IAFnBA,EAAY/8B,GAAeA,IAGvB,EACAmB,GAAgC47B,KAEhBlZ,EAAgBlkB,eAAiBK,IACjD,EACA+8B,IACaA,IAAcyF,EAAyBR,WAE1D,MACIQ,EAAyBR,UAAYjF,EACvCve,GAA+BnjB,EAAS0hC,GACxC/K,GAAsBnO,EAAiBxoB,EAAS0hC,GAChD8C,GAEJ,OAAS4C,EAAa3nC,MAAQsoC,KAC9B/7B,EAAiB27B,GACf3nC,EACAgM,EACArH,EAEJ,KACE,OAASyiC,EAAa3nC,MAChBuM,EAAe/P,OAAS,IACzB+P,EAAetP,MAAQsD,EAAQtD,MAC/BsP,EAAiB,OAChBhM,EAAUmnC,EAAyBT,YACpCtf,GAAyBsB,GACxB0e,EAAavoB,aAEdsI,GAAuBnb,EACvBwC,IAAc,EACd6Y,GAAkB,KAClBC,IAAyB,EAC1B,OAAStnB,IACLsmB,GAAQC,MAAkBE,GAC3BH,GAAQC,MAAkBG,GAC1BJ,GAAQC,MAAkBC,GAC1BC,GAAgBzmB,EAAQsnC,GACxB5gB,GAAsB1mB,EAAQunC,SAC9B/gB,GAAsBxa,IACxBA,EAAiB07B,GAChB17B,EACA01B,EAAUtyB,WAEInT,OAAS,MAC/B,OAAO+P,CACT,CACA,OAAIi7B,GAEAhG,KACCgG,EAAevF,EAAU8F,SACzBJ,EAAep7B,EAAe+X,KAE9B8jB,GADAV,EAA2BnnC,EAAQtD,OACDC,SAClC+kC,EAAY/c,GAAqBwiB,EAA0B,CAC1DpjB,KAAM,SACN3U,SAAUsyB,EAAUtyB,YAEXiV,aAC+B,SAAxC8iB,EAAyB9iB,aAC3B,OAASwjB,EACJZ,EAAetiB,GAAqBkjB,EAAQZ,IAC3CA,EAAevhB,GACfuhB,EACAG,EACAziC,EACA,OAEY1I,OAAS,EAC1BgrC,EAAajrC,OAASgQ,EACtB01B,EAAU1lC,OAASgQ,EACnB01B,EAAU/kC,QAAUsqC,EACpBj7B,EAAetP,MAAQglC,EACvBA,EAAYuF,EACZA,EAAej7B,EAAetP,MAE/B,QADC0qC,EAAepnC,EAAQtD,MAAML,eAEzB+qC,EAAeR,GAA4BjiC,IAE5C,QADEwiC,EAA2BC,EAAa9B,YAEpCuC,EAASvc,GAAahqB,cACvB6lC,EACCA,EAAyB7jB,SAAWukB,EAChC,CAAEvkB,OAAQukB,EAAQva,KAAMua,GACxBV,GACLA,EAA2B5Z,KAC/B6Z,EAAe,CACdpW,UAAWoW,EAAapW,UAAYrsB,EACpC2gC,UAAW6B,IAEhBF,EAAa5qC,cAAgB+qC,EAC7BH,EAAa1jB,WAAasjB,GACzB7mC,EACAwoB,EACA7jB,GAEDqH,EAAe3P,cAAgBoqC,GAChC/E,IAEJb,GAA+B70B,GAE/BhM,GADA2E,EAAc3E,EAAQtD,OACAC,SACtBgI,EAAcggB,GAAqBhgB,EAAa,CAC9Cof,KAAM,UACN3U,SAAUsyB,EAAUtyB,YAEVpT,OAASgQ,EACrBrH,EAAYhI,QAAU,KACtB,OAASqD,IAEP,QADEwoB,EAAkBxc,EAAesY,YAE7BtY,EAAesY,UAAY,CAACtkB,GAAYgM,EAAe/P,OAAS,IAClEusB,EAAgBroB,KAAKH,IAC3BgM,EAAetP,MAAQiI,EACvBqH,EAAe3P,cAAgB,KACxBsI,EACT,CACA,SAAS+iC,GAA6B17B,EAAgBg8B,GAMpD,OALAA,EAAkBP,GAChB,CAAE1jB,KAAM,UAAW3U,SAAU44B,GAC7Bh8B,EAAe+X,OAED/nB,OAASgQ,EACjBA,EAAetP,MAAQsrC,CACjC,CACA,SAASP,GAAkCQ,EAAgBlkB,GASzD,OARAkkB,EAAiB1jB,GAAqB,GAAI0jB,EAAgB,KAAMlkB,IACjDjgB,MAAQ,EACvBmkC,EAAetgC,UAAY,CACzB6b,YAAa,EACb0kB,gBAAiB,KACjBC,YAAa,KACbC,aAAc,MAETH,CACT,CACA,SAASN,GACP3nC,EACAgM,EACArH,GASA,OAPA87B,GAAqBz0B,EAAgBhM,EAAQtD,MAAO,KAAMiI,IAC1D3E,EAAU0nC,GACR17B,EACAA,EAAe8X,aAAa1U,WAEtBnT,OAAS,EACjB+P,EAAe3P,cAAgB,KACxB2D,CACT,CACA,SAASqoC,GAA4BxsC,EAAO8I,EAAaglB,GACvD9tB,EAAMiI,OAASa,EACf,IAAI5I,EAAYF,EAAME,UACtB,OAASA,IAAcA,EAAU+H,OAASa,GAC1C+kB,GAAgC7tB,EAAMG,OAAQ2I,EAAaglB,EAC7D,CACA,SAAS2e,GACPt8B,EACAu8B,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAc38B,EAAe3P,cACjC,OAASssC,EACJ38B,EAAe3P,cAAgB,CAC9BksC,YAAaA,EACbK,UAAW,KACXC,mBAAoB,EACpBzQ,KAAMqQ,EACND,KAAMA,EACNE,SAAUA,IAEVC,EAAYJ,YAAcA,EAC3BI,EAAYC,UAAY,KACxBD,EAAYE,mBAAqB,EACjCF,EAAYvQ,KAAOqQ,EACnBE,EAAYH,KAAOA,EACnBG,EAAYD,SAAWA,EAC9B,CACA,SAASI,GAA4B9oC,EAASgM,EAAgBrH,GAC5D,IAAI+8B,EAAY11B,EAAe8X,aAC7Bwd,EAAcI,EAAUJ,YACxBoH,EAAWhH,EAAU8G,KAGvB,GAFA/D,GAAkBzkC,EAASgM,EAAgB01B,EAAUtyB,SAAUzK,GAE3D,KAAmB,GADvB+8B,EAAYX,GAAoB/gC,UAE7B0hC,EAAyB,EAAZA,EAAiB,EAAK11B,EAAe/P,OAAS,QACzD,CACH,GAAI,OAAS+D,GAAW,KAAuB,IAAhBA,EAAQ/D,OACrCsV,EAAG,IAAKvR,EAAUgM,EAAetP,MAAO,OAASsD,GAAW,CAC1D,GAAI,KAAOA,EAAQ9D,IACjB,OAAS8D,EAAQ3D,eACfgsC,GAA4BroC,EAAS2E,EAAaqH,QACjD,GAAI,KAAOhM,EAAQ9D,IACtBmsC,GAA4BroC,EAAS2E,EAAaqH,QAC/C,GAAI,OAAShM,EAAQtD,MAAO,CAC/BsD,EAAQtD,MAAMV,OAASgE,EACvBA,EAAUA,EAAQtD,MAClB,QACF,CACA,GAAIsD,IAAYgM,EAAgB,MAAMuF,EACtC,KAAO,OAASvR,EAAQrD,SAAW,CACjC,GAAI,OAASqD,EAAQhE,QAAUgE,EAAQhE,SAAWgQ,EAChD,MAAMuF,EACRvR,EAAUA,EAAQhE,MACpB,CACAgE,EAAQrD,QAAQX,OAASgE,EAAQhE,OACjCgE,EAAUA,EAAQrD,OACpB,CACF+kC,GAAa,CACf,CAEA,OADAvhC,EAAK4gC,GAAqBW,GAClBJ,GACN,IAAK,WAEH,IADA38B,EAAcqH,EAAetP,MACxB4kC,EAAc,KAAM,OAAS38B,GAE9B,QADD3E,EAAU2E,EAAY5I,YAEnB,OAASolC,GAAmBnhC,KAC3BshC,EAAc38B,GAChBA,EAAcA,EAAYhI,QAE/B,QADAgI,EAAc28B,IAERA,EAAct1B,EAAetP,MAASsP,EAAetP,MAAQ,OAC7D4kC,EAAc38B,EAAYhI,QAAWgI,EAAYhI,QAAU,MACjE2rC,GACEt8B,GACA,EACAs1B,EACA38B,EACA+jC,GAEF,MACF,IAAK,YAGH,IAFA/jC,EAAc,KACd28B,EAAct1B,EAAetP,MACxBsP,EAAetP,MAAQ,KAAM,OAAS4kC,GAAe,CAExD,GAAI,QADJthC,EAAUshC,EAAYvlC,YACE,OAASolC,GAAmBnhC,GAAU,CAC5DgM,EAAetP,MAAQ4kC,EACvB,KACF,CACAthC,EAAUshC,EAAY3kC,QACtB2kC,EAAY3kC,QAAUgI,EACtBA,EAAc28B,EACdA,EAActhC,CAChB,CACAsoC,GACEt8B,GACA,EACArH,EACA,KACA+jC,GAEF,MACF,IAAK,WACHJ,GAA4Bt8B,GAAgB,EAAI,KAAM,UAAM,GAC5D,MACF,QACEA,EAAe3P,cAAgB,KAEnC,OAAO2P,EAAetP,KACxB,CACA,SAASmoC,GAA6B7kC,EAASgM,EAAgBrH,GAG7D,GAFA,OAAS3E,IAAYgM,EAAezD,aAAevI,EAAQuI,cAC3DkoB,IAAkCzkB,EAAelI,MAC7C,KAAOa,EAAcqH,EAAeuX,YACtC,IAAI,OAASvjB,EAWN,OAAO,KAVZ,GACGkqB,GACClqB,EACAgM,EACArH,GACA,GAEF,KAAOA,EAAcqH,EAAeuX,YAEpC,OAAO,IACO,CACpB,GAAI,OAASvjB,GAAWgM,EAAetP,QAAUsD,EAAQtD,MACvD,MAAMF,MAAMtB,EAAuB,MACrC,GAAI,OAAS8Q,EAAetP,MAAO,CAIjC,IAFAiI,EAAcggB,GADd3kB,EAAUgM,EAAetP,MACmBsD,EAAQ8jB,cACpD9X,EAAetP,MAAQiI,EAClBA,EAAY3I,OAASgQ,EAAgB,OAAShM,EAAQrD,SACxDqD,EAAUA,EAAQrD,SAChBgI,EAAcA,EAAYhI,QACzBgoB,GAAqB3kB,EAASA,EAAQ8jB,eAC3B9nB,OAASgQ,EAC1BrH,EAAYhI,QAAU,IACxB,CACA,OAAOqP,EAAetP,KACxB,CACA,SAASuoC,GAA8BjlC,EAAS2E,GAC9C,OAAI,KAAO3E,EAAQ8D,MAAQa,MAEpB,QADP3E,EAAUA,EAAQuI,gBACS8hB,GAAsBrqB,GACnD,CAsFA,SAAS+oC,GAAU/oC,EAASgM,EAAgBrH,GAC1C,GAAI,OAAS3E,EACX,GAAIA,EAAQokB,gBAAkBpY,EAAe8X,aAC3C6O,IAAmB,MAChB,CACH,IACGsS,GAA8BjlC,EAAS2E,IACxC,KAA8B,IAAvBqH,EAAe/P,OAEtB,OACG02B,IAAmB,EA/F9B,SACE3yB,EACAgM,EACArH,GAEA,OAAQqH,EAAe9P,KACrB,KAAK,EACHuE,EAAkBuL,EAAgBA,EAAerE,UAAUyX,eAC3DkK,GAAatd,EAAgBsf,GAActrB,EAAQ3D,cAAc0vB,OACjElD,KACA,MACF,KAAK,GACL,KAAK,EACH5nB,EAAgB+K,GAChB,MACF,KAAK,EACHvL,EAAkBuL,EAAgBA,EAAerE,UAAUyX,eAC3D,MACF,KAAK,GACHkK,GACEtd,EACAA,EAAe1N,KACf0N,EAAeoY,cAAchkB,OAE/B,MACF,KAAK,GACH,IAAIo0B,EAAQxoB,EAAe3P,cAC3B,GAAI,OAASm4B,EACX,OAAI,OAASA,EAAMl4B,YAEfukC,GAA+B70B,GAC9BA,EAAe/P,OAAS,IACzB,MAEA,KAAO0I,EAAcqH,EAAetP,MAAM6mB,YACrCyjB,GAAwBhnC,EAASgM,EAAgBrH,IAC1Dk8B,GAA+B70B,GAMxB,QALPhM,EAAU6kC,GACR7kC,EACAgM,EACArH,IAEwB3E,EAAQrD,QAAU,MAE9CkkC,GAA+B70B,GAC/B,MACF,KAAK,GACH,IAAIg9B,EAAmB,KAAuB,IAAhBhpC,EAAQ/D,OAUtC,IATAu4B,EAAQ,KAAO7vB,EAAcqH,EAAeuX,eAEzC2G,GACClqB,EACAgM,EACArH,GACA,GAED6vB,EAAQ,KAAO7vB,EAAcqH,EAAeuX,aAC3CylB,EAAkB,CACpB,GAAIxU,EACF,OAAOsU,GACL9oC,EACAgM,EACArH,GAEJqH,EAAe/P,OAAS,GAC1B,CAOA,GALA,QADA+sC,EAAmBh9B,EAAe3P,iBAE9B2sC,EAAiBJ,UAAY,KAC9BI,EAAiBR,KAAO,KACxBQ,EAAiBnW,WAAa,MACjC1yB,EAAK4gC,GAAqBA,GAAoB/gC,SAC1Cw0B,EAAO,MACN,OAAO,KACd,KAAK,GACL,KAAK,GACH,OACGxoB,EAAelI,MAAQ,EACxBshC,GAAyBplC,EAASgM,EAAgBrH,GAEtD,KAAK,GACH2kB,GAAatd,EAAgBsf,GAActrB,EAAQ3D,cAAc0vB,OAErE,OAAO8Y,GAA6B7kC,EAASgM,EAAgBrH,EAC/D,CAYUskC,CACEjpC,EACAgM,EACArH,GAGNguB,GAAmB,KAAuB,OAAhB3yB,EAAQ/D,MACpC,MAEC02B,IAAmB,EAClBnkB,IACE,KAA8B,QAAvBxC,EAAe/P,QACtB4qB,GAAW7a,EAAgBqa,GAAera,EAAenM,OAE/D,OADAmM,EAAelI,MAAQ,EACfkI,EAAe9P,KACrB,KAAK,GACHqV,EAAG,CACDvR,EAAUgM,EAAe8X,aACzB,IAAIolB,EAAgBl9B,EAAegY,YACjC0Z,EAAOwL,EAAcpqC,MAGvB,GAFAoqC,EAAgBxL,EAAKwL,EAAcrqC,UACnCmN,EAAe1N,KAAO4qC,EAClB,oBAAsBA,EAmBrB,CACH,QAAI,IAAWA,GAAiB,OAASA,EACvC,KACIxL,EAAOwL,EAAc3qC,YAAoBd,EAC3C,CACAuO,EAAe9P,IAAM,GACrB8P,EAAiB24B,GACf,KACA34B,EACAk9B,EACAlpC,EACA2E,GAEF,MAAM4M,CACR,CAAO,GAAImsB,IAAS9/B,EAAiB,CACnCoO,EAAe9P,IAAM,GACrB8P,EAAiB84B,GACf,KACA94B,EACAk9B,EACAlpC,EACA2E,GAEF,MAAM4M,CACR,EAGF,MAFAvF,EACE3N,EAAyB6qC,IAAkBA,EACvC1sC,MAAMtB,EAAuB,IAAK8Q,EAAgB,IAC1D,CA9CEwY,GAAgB0kB,IACVlpC,EAAUyiC,GAA2ByG,EAAelpC,GACrDgM,EAAe9P,IAAM,EACrB8P,EAAiB05B,GAChB,KACA15B,EACAk9B,EACAlpC,EACA2E,KAEAqH,EAAe9P,IAAM,EACtB8P,EAAiBm5B,GAChB,KACAn5B,EACAk9B,EACAlpC,EACA2E,GA+BV,CACA,OAAOqH,EACT,KAAK,EACH,OAAOm5B,GACLnlC,EACAgM,EACAA,EAAe1N,KACf0N,EAAe8X,aACfnf,GAEJ,KAAK,EACH,OAME+gC,GACE1lC,EACAgM,EAPDk9B,EAAgBl9B,EAAe1N,KAC/Bo/B,EAAO+E,GACNyG,EACAl9B,EAAe8X,cAOfnf,GAGN,KAAK,EACH4M,EAAG,CAKD,GAJA9Q,EACEuL,EACAA,EAAerE,UAAUyX,eAEvB,OAASpf,EAAS,MAAMxD,MAAMtB,EAAuB,MACzDguC,EAAgBl9B,EAAe8X,aAC/B,IAAI4T,EAAY1rB,EAAe3P,cAC/BqhC,EAAOhG,EAAUvpB,QACjB+gB,GAAiBlvB,EAASgM,GAC1BikB,GAAmBjkB,EAAgBk9B,EAAe,KAAMvkC,GACxD,IAAIszB,EAAYjsB,EAAe3P,cAY/B,GAXA6sC,EAAgBjR,EAAUlM,MAC1BzC,GAAatd,EAAgBsf,GAAc4d,GAC3CA,IAAkBxR,EAAU3L,OAC1BnC,GACE5d,EACA,CAACsf,IACD3mB,GACA,GAEJqrB,KACAkZ,EAAgBjR,EAAU9pB,QACtBupB,EAAUyR,aAAY,CACxB,GACIzR,EAAY,CACZvpB,QAAS+6B,EACTC,cAAc,EACdpd,MAAOkM,EAAUlM,OAElB/f,EAAemY,YAAYyK,UAAY8I,EACvC1rB,EAAe3P,cAAgBq7B,EACT,IAAvB1rB,EAAe/P,MACf,CACA+P,EAAiBw6B,GACfxmC,EACAgM,EACAk9B,EACAvkC,GAEF,MAAM4M,CACR,CAAO,GAAI23B,IAAkBxL,EAAM,CAKjCjW,GAJAiW,EAAOtb,GACL5lB,MAAMtB,EAAuB,MAC7B8Q,IAGFA,EAAiBw6B,GACfxmC,EACAgM,EACAk9B,EACAvkC,GAEF,MAAM4M,CACR,CAEE,GACO,KAFPvR,EAAUgM,EAAerE,UAAUyX,eACnBzjB,SAEZqE,EAAUA,EAAQ4N,UAGlB5N,EACE,SAAWA,EAAQsM,SACftM,EAAQyO,cAAcb,KACtB5N,EAaV,IAXAonB,GAAyBsB,GAAkB1oB,EAAQwP,YACnD2X,GAAuBnb,EACvBwC,IAAc,EACd6Y,GAAkB,KAClBC,IAAyB,EACzB3iB,EAAc+7B,GACZ10B,EACA,KACAk9B,EACAvkC,GAEGqH,EAAetP,MAAQiI,EAAaA,GACtCA,EAAY1I,OAA8B,EAArB0I,EAAY1I,MAAc,KAC7C0I,EAAcA,EAAYhI,OAChC,KACE,CAEH,GADAksB,KACIqgB,IAAkBxL,EAAM,CAC1B1xB,EAAiB64B,GACf7kC,EACAgM,EACArH,GAEF,MAAM4M,CACR,CACAkzB,GACEzkC,EACAgM,EACAk9B,EACAvkC,EAEJ,CACAqH,EAAiBA,EAAetP,KAClC,CACA,OAAOsP,EACT,KAAK,GACH,OACEw5B,GAAQxlC,EAASgM,GACjB,OAAShM,GACJ2E,EAAcykC,GACbp9B,EAAe1N,KACf,KACA0N,EAAe8X,aACf,OAEC9X,EAAe3P,cAAgBsI,EAChC6J,KACE7J,EAAcqH,EAAe1N,KAC9B0B,EAAUgM,EAAe8X,cACzBolB,EAAgBG,GACf9oC,EAAwBP,SACxBkS,cAAcvN,IACD+B,IAAuBsF,EACrCk9B,EAAcviC,IAAoB3G,EACnCspC,GAAqBJ,EAAevkC,EAAa3E,GACjDiI,GAAoBihC,GACnBl9B,EAAerE,UAAYuhC,GAC7Bl9B,EAAe3P,cAAgB+sC,GAC9Bp9B,EAAe1N,KACf0B,EAAQokB,cACRpY,EAAe8X,aACf9jB,EAAQ3D,eAEd,KAEJ,KAAK,GACH,OACE4E,EAAgB+K,GAChB,OAAShM,GACPwO,KACE06B,EAAgBl9B,EAAerE,UAC/B4hC,GACEv9B,EAAe1N,KACf0N,EAAe8X,aACfvjB,EAAwBP,SAE3BmnB,GAAuBnb,EACvBsb,IAAyB,EACzBoW,EAAOtW,GACRuB,GAAiB3c,EAAe1N,OAC1BsqB,GAA8C8U,EAC/CtW,GAAyBsB,GACxBwgB,EAAc15B,aAEf4X,GAAyBsW,GAChC+G,GACEzkC,EACAgM,EACAA,EAAe8X,aAAa1U,SAC5BzK,GAEF6gC,GAAQxlC,EAASgM,GACjB,OAAShM,IAAYgM,EAAe/P,OAAS,SAC7C+P,EAAetP,MAEnB,KAAK,EA0CH,OAzCI,OAASsD,GAAWwO,MACjBkvB,EAAOwL,EAAgB9hB,MAOxB,QAND8hB,EA2hMX,SAA4BvhB,EAAUrpB,EAAMgT,EAAOqnB,GACjD,KAAO,IAAMhR,EAAShsB,UAAY,CAChC,IAAI6tC,EAAWl4B,EACf,GAAIqW,EAASrb,SAAShD,gBAAkBhL,EAAKgL,eAC3C,IACGqvB,IACA,UAAYhR,EAASrb,UAAY,WAAaqb,EAASrpB,MAExD,WACG,GAAKq6B,GASP,IAAKhR,EAAS1gB,IACjB,OAAQ3I,GACN,IAAK,OACH,IAAKqpB,EAAS8hB,aAAa,YAAa,MACxC,OAAO9hB,EACT,IAAK,OAEH,GAAI,gBADJlpB,EAAOkpB,EAAS+hB,aAAa,SACA/hB,EAAS8hB,aAAa,mBACjD,MACG,GACHhrC,IAAS+qC,EAASpkB,KAClBuC,EAAS+hB,aAAa,WACnB,MAAQF,EAAShqB,MAAQ,KAAOgqB,EAAShqB,KACtC,KACAgqB,EAAShqB,OACfmI,EAAS+hB,aAAa,kBACnB,MAAQF,EAASG,YAAc,KAAOH,EAASG,cAClDhiB,EAAS+hB,aAAa,YACnB,MAAQF,EAASI,MAAQ,KAAOJ,EAASI,OAE5C,MACF,OAAOjiB,EACT,IAAK,QACH,GAAIA,EAAS8hB,aAAa,mBAAoB,MAC9C,OAAO9hB,EACT,IAAK,SAEH,KADAlpB,EAAOkpB,EAAS+hB,aAAa,WAEhB,MAAQF,EAAShkB,IAAM,KAAOgkB,EAAShkB,MAChDmC,EAAS+hB,aAAa,WACnB,MAAQF,EAASlrC,KAAO,KAAOkrC,EAASlrC,OAC3CqpB,EAAS+hB,aAAa,kBACnB,MAAQF,EAASG,YAAc,KAAOH,EAASG,eACpDlrC,GACAkpB,EAAS8hB,aAAa,WACrB9hB,EAAS8hB,aAAa,YAEvB,MACF,OAAO9hB,EACT,QACE,OAAOA,OAjDgB,CAC3B,GAAI,UAAYrpB,GAAQ,WAAaqpB,EAASrpB,KAOvC,OAAOqpB,EANZ,IAAIlpB,EAAO,MAAQ+qC,EAAS/qC,KAAO,KAAO,GAAK+qC,EAAS/qC,KACxD,GACE,WAAa+qC,EAASlrC,MACtBqpB,EAAS+hB,aAAa,UAAYjrC,EAElC,OAAOkpB,CACY,CA4CzB,GAAI,QADJA,EAAWe,GAAkBf,EAAS9I,cACf,KACzB,CACA,OAAO,IACT,CA3lM2BgrB,CACfX,EACAl9B,EAAe1N,KACf0N,EAAe8X,aACfwD,MAGMtb,EAAerE,UAAYuhC,EAC5B/hB,GAAuBnb,EACvBob,GAAyBsB,GACxBwgB,EAAc15B,YAEf8X,IAAyB,EACzBoW,GAAO,GACPA,GAAO,GAChBA,GAAQlW,GAAyBxb,IAEnC/K,EAAgB+K,GAChB0xB,EAAO1xB,EAAe1N,KACtBo5B,EAAY1rB,EAAe8X,aAC3BmU,EAAY,OAASj4B,EAAUA,EAAQokB,cAAgB,KACvD8kB,EAAgBxR,EAAUtoB,SAC1BqZ,GAAqBiV,EAAMhG,GACtBwR,EAAgB,KACjB,OAASjR,GACTxP,GAAqBiV,EAAMzF,KAC1BjsB,EAAe/P,OAAS,IAC7B,OAAS+P,EAAe3P,gBACpBqhC,EAAOzL,GACPjyB,EACAgM,EACAknB,GACA,KACA,KACAvuB,GAEDtD,GAAsBC,cAAgBo8B,GACzC8H,GAAQxlC,EAASgM,GACjBy4B,GAAkBzkC,EAASgM,EAAgBk9B,EAAevkC,GACnDqH,EAAetP,MACxB,KAAK,EAgBH,OAfI,OAASsD,GAAWwO,MACjBxO,EAAU2E,EAAcyiB,MAMzB,QALDziB,EAijMX,SAAgCgjB,EAAUpY,EAAMopB,GAC9C,GAAI,KAAOppB,EAAM,OAAO,KACxB,KAAO,IAAMoY,EAAShsB,UAAY,CAChC,IACG,IAAMgsB,EAAShsB,UACd,UAAYgsB,EAASrb,UACrB,WAAaqb,EAASrpB,QACvBq6B,EAED,OAAO,KAET,GAAI,QADJhR,EAAWe,GAAkBf,EAAS9I,cACf,OAAO,IAChC,CACA,OAAO8I,CACT,CA/jMyBmiB,CACbnlC,EACAqH,EAAe8X,aACfwD,MAGMtb,EAAerE,UAAYhD,EAC5BwiB,GAAuBnb,EACvBob,GAAyB,KACzBpnB,GAAU,GACVA,GAAU,GACnBA,GAAWwnB,GAAyBxb,IAE/B,KACT,KAAK,GACH,OAAOg7B,GAAwBhnC,EAASgM,EAAgBrH,GAC1D,KAAK,EACH,OACElE,EACEuL,EACAA,EAAerE,UAAUyX,eAE1B8pB,EAAgBl9B,EAAe8X,aAChC,OAAS9jB,EACJgM,EAAetP,MAAQ+jC,GACtBz0B,EACA,KACAk9B,EACAvkC,GAEF8/B,GACEzkC,EACAgM,EACAk9B,EACAvkC,GAENqH,EAAetP,MAEnB,KAAK,GACH,OAAOioC,GACL3kC,EACAgM,EACAA,EAAe1N,KACf0N,EAAe8X,aACfnf,GAEJ,KAAK,EACH,OACE8/B,GACEzkC,EACAgM,EACAA,EAAe8X,aACfnf,GAEFqH,EAAetP,MAEnB,KAAK,EAUL,KAAK,GACH,OACE+nC,GACEzkC,EACAgM,EACAA,EAAe8X,aAAa1U,SAC5BzK,GAEFqH,EAAetP,MAEnB,KAAK,GACH,OACGwsC,EAAgBl9B,EAAe8X,aAChCwF,GAAatd,EAAgBA,EAAe1N,KAAM4qC,EAAc9oC,OAChEqkC,GACEzkC,EACAgM,EACAk9B,EAAc95B,SACdzK,GAEFqH,EAAetP,MAEnB,KAAK,EACH,OACGghC,EAAO1xB,EAAe1N,KAAKI,SAC3BwqC,EAAgBl9B,EAAe8X,aAAa1U,SAC7Cob,GAAqBxe,GAEpBk9B,EAAgBA,EADhBxL,EAAOjT,GAAYiT,IAEnB1xB,EAAe/P,OAAS,EACzBwoC,GAAkBzkC,EAASgM,EAAgBk9B,EAAevkC,GAC1DqH,EAAetP,MAEnB,KAAK,GACH,OAAOooC,GACL9kC,EACAgM,EACAA,EAAe1N,KACf0N,EAAe8X,aACfnf,GAEJ,KAAK,GACH,OAAOqgC,GACLhlC,EACAgM,EACAA,EAAe1N,KACf0N,EAAe8X,aACfnf,GAEJ,KAAK,GACH,OAAOmkC,GAA4B9oC,EAASgM,EAAgBrH,GAC9D,KAAK,GACH,OACGukC,EAAgBl9B,EAAe8X,aAC/Bnf,EAAcqH,EAAe+X,KAC7BmlB,EAAgB,CACfnlB,KAAMmlB,EAAcnlB,KACpB3U,SAAU85B,EAAc95B,UAE1B,OAASpP,IACH2E,EAAc8iC,GACdyB,EACAvkC,IAEWuf,IAAMlY,EAAekY,IACjClY,EAAetP,MAAQiI,EACvBA,EAAY3I,OAASgQ,EACrBA,EAAiBrH,KAChBA,EAAcggB,GAAqB3kB,EAAQtD,MAAOwsC,IACvChlB,IAAMlY,EAAekY,IACjClY,EAAetP,MAAQiI,EACvBA,EAAY3I,OAASgQ,EACrBA,EAAiBrH,GACtBqH,EAEJ,KAAK,GACH,OAAOo5B,GAAyBplC,EAASgM,EAAgBrH,GAC3D,KAAK,GACH,OACE6lB,GAAqBxe,GACpBk9B,EAAgBze,GAAYa,IAC7B,OAAStrB,GAEL,QADE09B,EAAO3Q,QAEL2Q,EAAOzQ,GACRyK,EAAY/L,KACZ+R,EAAKxQ,YAAcwK,EACpBA,EAAU7L,WACV,OAAS6L,IAAcgG,EAAKqM,kBAAoBplC,GAC/C+4B,EAAOhG,GACT1rB,EAAe3P,cAAgB,CAC9BinB,OAAQ4lB,EACRnd,MAAO2R,GAET/O,GAAsB3iB,GACtBsd,GAAatd,EAAgBsf,GAAcoS,KAC1C,KAAO19B,EAAQ8D,MAAQa,KACrBuqB,GAAiBlvB,EAASgM,GAC3BikB,GAAmBjkB,EAAgB,KAAM,KAAMrH,GAC/CqrB,MACD0N,EAAO19B,EAAQ3D,cACfq7B,EAAY1rB,EAAe3P,cAC5BqhC,EAAKpa,SAAW4lB,GACVxL,EAAO,CAAEpa,OAAQ4lB,EAAend,MAAOmd,GACxCl9B,EAAe3P,cAAgBqhC,EAChC,IAAM1xB,EAAelI,QAClBkI,EAAe3P,cACd2P,EAAemY,YAAYyK,UACzB8O,GACNpU,GAAatd,EAAgBsf,GAAc4d,KACzCA,EAAgBxR,EAAU3L,MAC5BzC,GAAatd,EAAgBsf,GAAc4d,GAC3CA,IAAkBxL,EAAK3R,OACrBnC,GACE5d,EACA,CAACsf,IACD3mB,GACA,KAEZ8/B,GACEzkC,EACAgM,EACAA,EAAe8X,aAAa1U,SAC5BzK,GAEFqH,EAAetP,MAEnB,KAAK,GACH,MAAMsP,EAAe8X,aAEzB,MAAMtnB,MAAMtB,EAAuB,IAAK8Q,EAAe9P,KACzD,CACA,SAAS8tC,GAAWh+B,GAClBA,EAAe/P,OAAS,CAC1B,CACA,SAASguC,GAAkCj+B,EAAgBmqB,GACzD,GAAI,eAAiBA,EAAS73B,MAAQ,KAAgC,EAAzB63B,EAAS3B,MAAM0V,SAC1Dl+B,EAAe/P,QAAU,cACtB,GAAM+P,EAAe/P,OAAS,UAAYkuC,GAAgBhU,GAAY,CAEzE,GACE,QAFFA,EAAWwK,GAA2B3gC,YAGF,QAAhCwwB,MACFA,GACI,OAASoQ,IACyB,SAAhCpQ,MACAA,IACA,KAAuC,UAAhCA,KACT2F,IAAayK,IAEjB,MACIrS,GAAoBX,GACtBF,GAEJ1hB,EAAe/P,OAAS,IAC1B,CACF,CACA,SAASmuC,GAAoBp+B,EAAgBq+B,GAC3C,OAASA,IAAer+B,EAAe/P,OAAS,GACzB,MAAvB+P,EAAe/P,QACXouC,EACA,KAAOr+B,EAAe9P,IAAM8I,KAAuB,UACpDgH,EAAelI,OAASumC,EACxBC,IAAqCD,EAC1C,CACA,SAASE,GAAmB5B,EAAa6B,GACvC,IAAKh8B,GACH,OAAQm6B,EAAYD,UAClB,IAAK,SACH8B,EAA2B7B,EAAYH,KACvC,IAAK,IAAIiC,EAAe,KAAM,OAASD,GACrC,OAASA,EAAyBzuC,YAC/B0uC,EAAeD,GACfA,EAA2BA,EAAyB7tC,QACzD,OAAS8tC,EACJ9B,EAAYH,KAAO,KACnBiC,EAAa9tC,QAAU,KAC5B,MACF,IAAK,YACH8tC,EAAe9B,EAAYH,KAC3B,IAAK,IAAIkC,EAAmB,KAAM,OAASD,GACzC,OAASA,EAAa1uC,YAAc2uC,EAAmBD,GACpDA,EAAeA,EAAa9tC,QACjC,OAAS+tC,EACLF,GAA4B,OAAS7B,EAAYH,KAC9CG,EAAYH,KAAO,KACnBG,EAAYH,KAAK7rC,QAAU,KAC7B+tC,EAAiB/tC,QAAU,KAExC,CACA,SAASguC,GAAiBC,GACxB,IAAIC,EACA,OAASD,EAAc7uC,WACvB6uC,EAAc7uC,UAAUW,QAAUkuC,EAAcluC,MAClDouC,EAAgB,EAChBzmB,EAAe,EACjB,GAAIwmB,EACF,IAAK,IAAIE,EAAYH,EAAcluC,MAAO,OAASquC,GAChDD,GAAiBC,EAAUjnC,MAAQinC,EAAUxnB,WAC3Cc,GAAyC,SAAzB0mB,EAAU1mB,aAC1BA,GAAkC,SAAlB0mB,EAAU9uC,MAC1B8uC,EAAU/uC,OAAS4uC,EACnBG,EAAYA,EAAUpuC,aAE3B,IAAKouC,EAAYH,EAAcluC,MAAO,OAASquC,GAC5CD,GAAiBC,EAAUjnC,MAAQinC,EAAUxnB,WAC3Cc,GAAgB0mB,EAAU1mB,aAC1BA,GAAgB0mB,EAAU9uC,MAC1B8uC,EAAU/uC,OAAS4uC,EACnBG,EAAYA,EAAUpuC,QAG7B,OAFAiuC,EAAcvmB,cAAgBA,EAC9BumB,EAAcrnB,WAAaunB,EACpBD,CACT,CACA,SAASG,GAAahrC,EAASgM,EAAgBrH,GAC7C,IAAIu9B,EAAWl2B,EAAe8X,aAE9B,OADAoD,GAAelb,GACPA,EAAe9P,KACrB,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,GACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,EACL,KAAK,GAEL,KAAK,EACH,OAAOyuC,GAAiB3+B,GAAiB,KAC3C,KAAK,EAoBH,OAnBArH,EAAcqH,EAAerE,UAC7Bu6B,EAAW,KACX,OAASliC,IAAYkiC,EAAWliC,EAAQ3D,cAAc0vB,OACtD/f,EAAe3P,cAAc0vB,QAAUmW,IACpCl2B,EAAe/P,OAAS,MAC3BwtB,GAAY6B,IACZtqB,IACA2D,EAAYsmC,iBACRtmC,EAAYzD,QAAUyD,EAAYsmC,eACnCtmC,EAAYsmC,eAAiB,MAC5B,OAASjrC,GAAW,OAASA,EAAQtD,QACvC6rB,GAAkBvc,GACdg+B,GAAWh+B,GACX,OAAShM,GACRA,EAAQ3D,cAAc8sC,cACrB,KAA8B,IAAvBn9B,EAAe/P,SACtB+P,EAAe/P,OAAS,KAC1B6sB,OACN6hB,GAAiB3+B,GACV,KACT,KAAK,GACH,OACGrH,EAAcqH,EAAe3P,cAC9B,OAAS2D,GACJgqC,GAAWh+B,GACZ,OAASrH,GACJgmC,GAAiB3+B,GAClBi+B,GAAkCj+B,EAAgBrH,KACjDgmC,GAAiB3+B,GACjBA,EAAe/P,QAAU,WAC9B0I,EACEA,IAAgB3E,EAAQ3D,eACrB2tC,GAAWh+B,GACZ2+B,GAAiB3+B,GACjBi+B,GAAkCj+B,EAAgBrH,KACjDgmC,GAAiB3+B,GACjBA,EAAe/P,QAAU,WAC3B+D,EAAQokB,gBAAkB8d,GAAY8H,GAAWh+B,GAClD2+B,GAAiB3+B,GAChBA,EAAe/P,QAAU,UAChC,KAEJ,KAAK,GACHmF,EAAe4K,GACfrH,EAAcpE,EAAwBP,QACtC,IAAI1B,EAAO0N,EAAe1N,KAC1B,GAAI,OAAS0B,GAAW,MAAQgM,EAAerE,UAC7C3H,EAAQokB,gBAAkB8d,GAAY8H,GAAWh+B,OAC9C,CACH,IAAKk2B,EAAU,CACb,GAAI,OAASl2B,EAAerE,UAC1B,MAAMnL,MAAMtB,EAAuB,MAErC,OADAyvC,GAAiB3+B,GACV,IACT,CACAhM,EAAUK,EAAmBL,QAC7BuoB,GAAkBvc,GACd0b,GAA6B1b,IAC3BhM,EAAUupC,GAAyBjrC,EAAM4jC,EAAUv9B,GACpDqH,EAAerE,UAAY3H,EAC5BgqC,GAAWh+B,GACjB,CAEA,OADA2+B,GAAiB3+B,GACV,KACT,KAAK,EAGH,GAFA5K,EAAe4K,GACfrH,EAAcqH,EAAe1N,KACzB,OAAS0B,GAAW,MAAQgM,EAAerE,UAC7C3H,EAAQokB,gBAAkB8d,GAAY8H,GAAWh+B,OAC9C,CACH,IAAKk2B,EAAU,CACb,GAAI,OAASl2B,EAAerE,UAC1B,MAAMnL,MAAMtB,EAAuB,MAErC,OADAyvC,GAAiB3+B,GACV,IACT,CAEA,GADAhM,EAAUK,EAAmBL,QACzBuoB,GAAkBvc,GACpB0b,GAA6B1b,OAC1B,CAIH,OAHA1N,EAAO+qC,GACL9oC,EAAwBP,SAElBA,GACN,KAAK,EACHA,EAAU1B,EAAK4sC,gBACb,6BACAvmC,GAEF,MACF,KAAK,EACH3E,EAAU1B,EAAK4sC,gBACb,qCACAvmC,GAEF,MACF,QACE,OAAQA,GACN,IAAK,MACH3E,EAAU1B,EAAK4sC,gBACb,6BACAvmC,GAEF,MACF,IAAK,OACH3E,EAAU1B,EAAK4sC,gBACb,qCACAvmC,GAEF,MACF,IAAK,UACH3E,EAAU1B,EAAK4T,cAAc,QACrBi5B,UAAY,qBACpBnrC,EAAUA,EAAQorC,YAAYprC,EAAQwP,YACtC,MACF,IAAK,SACHxP,EACE,kBAAoBkiC,EAASlkB,GACzB1f,EAAK4T,cAAc,SAAU,CAAE8L,GAAIkkB,EAASlkB,KAC5C1f,EAAK4T,cAAc,UACzBgwB,EAASvzB,SACJ3O,EAAQ2O,UAAW,EACpBuzB,EAAS9N,OAASp0B,EAAQo0B,KAAO8N,EAAS9N,MAC9C,MACF,QACEp0B,EACE,kBAAoBkiC,EAASlkB,GACzB1f,EAAK4T,cAAcvN,EAAa,CAAEqZ,GAAIkkB,EAASlkB,KAC/C1f,EAAK4T,cAAcvN,IAGjC3E,EAAQ0G,IAAuBsF,EAC/BhM,EAAQ2G,IAAoBu7B,EAC5B3wB,EAAG,IAAKjT,EAAO0N,EAAetP,MAAO,OAAS4B,GAAQ,CACpD,GAAI,IAAMA,EAAKpC,KAAO,IAAMoC,EAAKpC,IAC/B8D,EAAQqrC,YAAY/sC,EAAKqJ,gBACtB,GAAI,IAAMrJ,EAAKpC,KAAO,KAAOoC,EAAKpC,KAAO,OAASoC,EAAK5B,MAAO,CACjE4B,EAAK5B,MAAMV,OAASsC,EACpBA,EAAOA,EAAK5B,MACZ,QACF,CACA,GAAI4B,IAAS0N,EAAgB,MAAMuF,EACnC,KAAO,OAASjT,EAAK3B,SAAW,CAC9B,GAAI,OAAS2B,EAAKtC,QAAUsC,EAAKtC,SAAWgQ,EAC1C,MAAMuF,EACRjT,EAAOA,EAAKtC,MACd,CACAsC,EAAK3B,QAAQX,OAASsC,EAAKtC,OAC3BsC,EAAOA,EAAK3B,OACd,CACAqP,EAAerE,UAAY3H,EAC3BuR,EAAG,OACA+3B,GAAqBtpC,EAAS2E,EAAau9B,GAAWv9B,GAEvD,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,WACH3E,IAAYkiC,EAASoJ,UACrB,MAAM/5B,EACR,IAAK,MACHvR,GAAU,EACV,MAAMuR,EACR,QACEvR,GAAU,EAEdA,GAAWgqC,GAAWh+B,EACxB,CACF,CAGA,OAFA2+B,GAAiB3+B,GACjBA,EAAe/P,QAAU,SAClB,KACT,KAAK,EACH,GAAI+D,GAAW,MAAQgM,EAAerE,UACpC3H,EAAQokB,gBAAkB8d,GAAY8H,GAAWh+B,OAC9C,CACH,GAAI,kBAAoBk2B,GAAY,OAASl2B,EAAerE,UAC1D,MAAMnL,MAAMtB,EAAuB,MAErC,GADA8E,EAAUO,EAAwBP,QAC9BuoB,GAAkBvc,GAAiB,CAKrC,GAJAhM,EAAUgM,EAAerE,UACzBhD,EAAcqH,EAAeoY,cAC7B8d,EAAW,KAEP,QADJ5jC,EAAO6oB,IAEL,OAAQ7oB,EAAKpC,KACX,KAAK,GACL,KAAK,EACHgmC,EAAW5jC,EAAK8lB,cAEtBpkB,EAAQ0G,IAAuBsF,GAC/BhM,KACEA,EAAQ0P,YAAc/K,GACrB,OAASu9B,IAAY,IAAOA,EAASpa,0BACtCC,GAAsB/nB,EAAQ0P,UAAW/K,MAGhC6iB,GAAyBxb,EACtC,MACGhM,EACCqpC,GAAkCrpC,GAASurC,eACzCrJ,IAEOx7B,IAAuBsF,EAC/BA,EAAerE,UAAY3H,CAClC,CAEA,OADA2qC,GAAiB3+B,GACV,KACT,KAAK,GAEH,GADAk2B,EAAWl2B,EAAe3P,cAExB,OAAS2D,GACR,OAASA,EAAQ3D,eAChB,OAAS2D,EAAQ3D,cAAcC,WACjC,CAEA,GADAgC,EAAOiqB,GAAkBvc,GACrB,OAASk2B,GAAY,OAASA,EAAS5lC,WAAY,CACrD,GAAI,OAAS0D,EAAS,CACpB,IAAK1B,EAAM,MAAM9B,MAAMtB,EAAuB,MAG9C,KADAoD,EAAO,QADPA,EAAO0N,EAAe3P,eACCiC,EAAKhC,WAAa,MAC9B,MAAME,MAAMtB,EAAuB,MAC9CoD,EAAKoI,IAAuBsF,CAC9B,MACE6c,KACE,KAA8B,IAAvB7c,EAAe/P,SACnB+P,EAAe3P,cAAgB,MACjC2P,EAAe/P,OAAS,EAC7B0uC,GAAiB3+B,GACjB1N,GAAO,CACT,MACGA,EAAOwqB,KACN,OAAS9oB,GACP,OAASA,EAAQ3D,gBAChB2D,EAAQ3D,cAAcgrB,gBAAkB/oB,GAC1CA,GAAO,EACZ,IAAKA,EACH,OAA2B,IAAvB0N,EAAe/P,OACVilC,GAAmBl1B,GAAiBA,IAC7Ck1B,GAAmBl1B,GACZ,KAEX,CAEA,GADAk1B,GAAmBl1B,GACf,KAA8B,IAAvBA,EAAe/P,OACxB,OAAQ+P,EAAelI,MAAQa,EAAcqH,EAG/C,GAFArH,EAAc,OAASu9B,EACvBliC,EAAU,OAASA,GAAW,OAASA,EAAQ3D,cAC3CsI,EAAa,CAEfrG,EAAO,KACP,QAFA4jC,EAAWl2B,EAAetP,OAERX,WAChB,OAASmmC,EAASnmC,UAAUM,eAC5B,OAAS6lC,EAASnmC,UAAUM,cAAcipC,YACzChnC,EAAO4jC,EAASnmC,UAAUM,cAAcipC,UAAUhY,MACrD,IAAIke,EAAY,KAChB,OAAStJ,EAAS7lC,eAChB,OAAS6lC,EAAS7lC,cAAcipC,YAC/BkG,EAAYtJ,EAAS7lC,cAAcipC,UAAUhY,MAChDke,IAAcltC,IAAS4jC,EAASjmC,OAAS,KAC3C,CAMA,OALA0I,IAAgB3E,GACd2E,IACCqH,EAAetP,MAAMT,OAAS,MACjCmuC,GAAoBp+B,EAAgBA,EAAemY,aACnDwmB,GAAiB3+B,GACV,KACT,KAAK,EACH,OACEhL,IACA,OAAShB,GACPyrC,GAA2Bz/B,EAAerE,UAAUyX,eACtDurB,GAAiB3+B,GACjB,KAEJ,KAAK,GACH,OACEyd,GAAYzd,EAAe1N,MAAOqsC,GAAiB3+B,GAAiB,KAExE,KAAK,GAGH,GAFA/L,EAAI8gC,IAEA,QADJziC,EAAO0N,EAAe3P,eACH,OAAOsuC,GAAiB3+B,GAAiB,KAG5D,GAFAk2B,EAAW,KAA8B,IAAvBl2B,EAAe/P,OAE7B,QADJuvC,EAAYltC,EAAKsqC,WAEf,GAAI1G,EAAUqI,GAAmBjsC,GAAM,OAClC,CACH,GACE,IAAMotC,IACL,OAAS1rC,GAAW,KAAuB,IAAhBA,EAAQ/D,OAEpC,IAAK+D,EAAUgM,EAAetP,MAAO,OAASsD,GAAW,CAEvD,GAAI,QADJwrC,EAAYrK,GAAmBnhC,IACP,CAQtB,IAPAgM,EAAe/P,OAAS,IACxBsuC,GAAmBjsC,GAAM,GACzB0B,EAAUwrC,EAAUrnB,YACpBnY,EAAemY,YAAcnkB,EAC7BoqC,GAAoBp+B,EAAgBhM,GACpCgM,EAAeqY,aAAe,EAC9BrkB,EAAU2E,EACLA,EAAcqH,EAAetP,MAAO,OAASiI,GAChDkgB,GAAoBlgB,EAAa3E,GAC9B2E,EAAcA,EAAYhI,QAK/B,OAJAwD,EACE4gC,GAC+B,EAA9BA,GAAoB/gC,QAAe,GAE/BgM,EAAetP,KACxB,CACAsD,EAAUA,EAAQrD,OACpB,CACF,OAAS2B,EAAKkqC,MACZvmC,KAAQ0pC,KACN3/B,EAAe/P,OAAS,IACzBimC,GAAW,EACZqI,GAAmBjsC,GAAM,GACxB0N,EAAelI,MAAQ,QAC5B,KACG,CACH,IAAKo+B,EACH,GAAgD,QAA1CliC,EAAUmhC,GAAmBqK,KACjC,GACIx/B,EAAe/P,OAAS,IACzBimC,GAAW,EACXliC,EAAUA,EAAQmkB,YAClBnY,EAAemY,YAAcnkB,EAC9BoqC,GAAoBp+B,EAAgBhM,GACpCuqC,GAAmBjsC,GAAM,GACzB,OAASA,EAAKkqC,MACZ,WAAalqC,EAAKoqC,WACjB8C,EAAUzvC,YACVyS,GAEH,OAAOm8B,GAAiB3+B,GAAiB,UAE3C,EAAI/J,KAAQ3D,EAAKuqC,mBACf8C,IACA,YAAchnC,IACZqH,EAAe/P,OAAS,IACzBimC,GAAW,EACZqI,GAAmBjsC,GAAM,GACxB0N,EAAelI,MAAQ,SAC9BxF,EAAKiqC,aACCiD,EAAU7uC,QAAUqP,EAAetP,MACpCsP,EAAetP,MAAQ8uC,IAExB,QADExrC,EAAU1B,EAAK85B,MAEZp4B,EAAQrD,QAAU6uC,EAClBx/B,EAAetP,MAAQ8uC,EAC3BltC,EAAK85B,KAAOoT,EACnB,CACA,OAAI,OAASltC,EAAKkqC,MAEbx8B,EAAiB1N,EAAKkqC,KACtBlqC,EAAKsqC,UAAY58B,EACjB1N,EAAKkqC,KAAOx8B,EAAerP,QAC3B2B,EAAKuqC,mBAAqB5mC,KAC1B+J,EAAerP,QAAU,KACzBqD,EAAU+gC,GAAoB/gC,QAC/BG,EAAK4gC,GAAqBmB,EAAsB,EAAVliC,EAAe,EAAc,EAAVA,GACzDgM,IAEJ2+B,GAAiB3+B,GACV,MACT,KAAK,GACL,KAAK,GACH,OACEk1B,GAAmBl1B,GACnBklB,KACCgR,EAAW,OAASl2B,EAAe3P,cACpC,OAAS2D,EACJ,OAASA,EAAQ3D,gBAAmB6lC,IACpCl2B,EAAe/P,OAAS,MACzBimC,IAAal2B,EAAe/P,OAAS,MACzCimC,EACI,KAAqB,UAAdv9B,IACP,KAA8B,IAAvBqH,EAAe/P,SACrB0uC,GAAiB3+B,GACY,EAA9BA,EAAeqY,eAAqBrY,EAAe/P,OAAS,OAC5D0uC,GAAiB3+B,GAErB,QADCrH,EAAcqH,EAAemY,cAE5BimB,GAAoBp+B,EAAgBrH,EAAY0lC,YACjD1lC,EAAc,KACf,OAAS3E,GACP,OAASA,EAAQ3D,eACjB,OAAS2D,EAAQ3D,cAAcipC,YAC9B3gC,EAAc3E,EAAQ3D,cAAcipC,UAAUhY,MAChD4U,EAAW,KACZ,OAASl2B,EAAe3P,eACtB,OAAS2P,EAAe3P,cAAcipC,YACrCpD,EAAWl2B,EAAe3P,cAAcipC,UAAUhY,MACrD4U,IAAav9B,IAAgBqH,EAAe/P,OAAS,MACrD,OAAS+D,GAAWC,EAAI6sB,IACxB,KAEJ,KAAK,GACH,OACGnoB,EAAc,KACf,OAAS3E,IAAY2E,EAAc3E,EAAQ3D,cAAc0vB,OACzD/f,EAAe3P,cAAc0vB,QAAUpnB,IACpCqH,EAAe/P,OAAS,MAC3BwtB,GAAY6B,IACZqf,GAAiB3+B,GACjB,KAEJ,KAAK,GAEL,KAAK,GACH,OAAO,KAEX,MAAMxP,MAAMtB,EAAuB,IAAK8Q,EAAe9P,KACzD,CACA,SAAS0vC,GAAW5rC,EAASgM,GAE3B,OADAkb,GAAelb,GACPA,EAAe9P,KACrB,KAAK,EACH,OAEY,OADT8D,EAAUgM,EAAe/P,QAEpB+P,EAAe/P,OAAoB,MAAX+D,EAAoB,IAAMgM,GACpD,KAER,KAAK,EACH,OACEyd,GAAY6B,IACZtqB,IAEA,KAAiB,OADhBhB,EAAUgM,EAAe/P,SACC,KAAiB,IAAV+D,IAC5BgM,EAAe/P,OAAoB,MAAX+D,EAAoB,IAAMgM,GACpD,KAER,KAAK,GACL,KAAK,GACL,KAAK,EACH,OAAO5K,EAAe4K,GAAiB,KACzC,KAAK,GAGH,GAFAk1B,GAAmBl1B,GAEf,QADJhM,EAAUgM,EAAe3P,gBACD,OAAS2D,EAAQ1D,WAAY,CACnD,GAAI,OAAS0P,EAAejQ,UAC1B,MAAMS,MAAMtB,EAAuB,MACrC2tB,IACF,CAEA,OAAiB,OADjB7oB,EAAUgM,EAAe/P,QAEnB+P,EAAe/P,OAAoB,MAAX+D,EAAoB,IAAMgM,GACpD,KACN,KAAK,GACH,OAAO/L,EAAI8gC,IAAsB,KACnC,KAAK,EACH,OAAO//B,IAAoB,KAC7B,KAAK,GACH,OAAOyoB,GAAYzd,EAAe1N,MAAO,KAC3C,KAAK,GACL,KAAK,GACH,OACE4iC,GAAmBl1B,GACnBklB,KACA,OAASlxB,GAAWC,EAAI6sB,IAEd,OADT9sB,EAAUgM,EAAe/P,QAEpB+P,EAAe/P,OAAoB,MAAX+D,EAAoB,IAAMgM,GACpD,KAER,KAAK,GACH,OAAOyd,GAAY6B,IAAe,KAGpC,QACE,OAAO,KAEb,CACA,SAASugB,GAAsB7rC,EAAS8rC,GAEtC,OADA5kB,GAAe4kB,GACPA,EAAgB5vC,KACtB,KAAK,EACHutB,GAAY6B,IACZtqB,IACA,MACF,KAAK,GACL,KAAK,GACL,KAAK,EACHI,EAAe0qC,GACf,MACF,KAAK,EACH9qC,IACA,MACF,KAAK,GACHkgC,GAAmB4K,GACnB,MACF,KAAK,GACH7rC,EAAI8gC,IACJ,MACF,KAAK,GACHtX,GAAYqiB,EAAgBxtC,MAC5B,MACF,KAAK,GACL,KAAK,GACH4iC,GAAmB4K,GACnB5a,KACA,OAASlxB,GAAWC,EAAI6sB,IACxB,MACF,KAAK,GACHrD,GAAY6B,IAElB,CACA,SAASygB,GAA0B9vC,EAAO+vC,GACxC,IACE,IAAI7nB,EAAc6nB,EAAa7nB,YAC7B0O,EAAa,OAAS1O,EAAcA,EAAY0O,WAAa,KAC/D,GAAI,OAASA,EAAY,CACvB,IAAIoZ,EAAcpZ,EAAW/P,KAC7BqB,EAAc8nB,EACd,EAAG,CACD,IAAK9nB,EAAYjoB,IAAMD,KAAWA,EAAO,CACvC42B,OAAa,EACb,IAAIuG,EAASjV,EAAYiV,OACvB1xB,EAAOyc,EAAYzc,KACrBmrB,EAAauG,IACb1xB,EAAKwuB,QAAUrD,CACjB,CACA1O,EAAcA,EAAYrB,IAC5B,OAASqB,IAAgB8nB,EAC3B,CACF,CAAE,MAAO/iB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,SAASijB,GACPlwC,EACA+vC,EACAI,GAEA,IACE,IAAIjoB,EAAc6nB,EAAa7nB,YAC7B0O,EAAa,OAAS1O,EAAcA,EAAY0O,WAAa,KAC/D,GAAI,OAASA,EAAY,CACvB,IAAIoZ,EAAcpZ,EAAW/P,KAC7BqB,EAAc8nB,EACd,EAAG,CACD,IAAK9nB,EAAYjoB,IAAMD,KAAWA,EAAO,CACvC,IAAIyL,EAAOyc,EAAYzc,KACrBwuB,EAAUxuB,EAAKwuB,QACjB,QAAI,IAAWA,EAAS,CACtBxuB,EAAKwuB,aAAU,EACfrD,EAAamZ,EACb,IAAIK,EAAyBD,EAC3BE,EAAWpW,EACb,IACEoW,GACF,CAAE,MAAOpjB,GACPgjB,GACErZ,EACAwZ,EACAnjB,EAEJ,CACF,CACF,CACA/E,EAAcA,EAAYrB,IAC5B,OAASqB,IAAgB8nB,EAC3B,CACF,CAAE,MAAO/iB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,SAASqjB,GAAqBP,GAC5B,IAAI7nB,EAAc6nB,EAAa7nB,YAC/B,GAAI,OAASA,EAAa,CACxB,IAAIwD,EAAWqkB,EAAarkC,UAC5B,IACEgpB,GAAgBxM,EAAawD,EAC/B,CAAE,MAAOuB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACF,CACA,SAASsjB,GACPxsC,EACAqsC,EACA1kB,GAEAA,EAASrW,MAAQmxB,GACfziC,EAAQ1B,KACR0B,EAAQokB,eAEVuD,EAAS6M,MAAQx0B,EAAQ3D,cACzB,IACEsrB,EAAS8kB,sBACX,CAAE,MAAOvjB,GACPgjB,GAAwBlsC,EAASqsC,EAAwBnjB,EAC3D,CACF,CACA,SAASwjB,GAAgB1sC,EAASqsC,GAChC,IACE,IAAInoB,EAAMlkB,EAAQkkB,IAClB,GAAI,OAASA,EAAK,CAChB,OAAQlkB,EAAQ9D,KACd,KAAK,GACL,KAAK,GACL,KAAK,EACH,IAAIywC,EAAgB3sC,EAAQ2H,UAC5B,MAIF,QACEglC,EAAgB3sC,EAAQ2H,UAE5B,oBAAsBuc,EACjBlkB,EAAQikB,WAAaC,EAAIyoB,GACzBzoB,EAAIlkB,QAAU2sC,CACrB,CACF,CAAE,MAAOzjB,GACPgjB,GAAwBlsC,EAASqsC,EAAwBnjB,EAC3D,CACF,CACA,SAAS0jB,GAAgB5sC,EAASqsC,GAChC,IAAInoB,EAAMlkB,EAAQkkB,IAChBD,EAAajkB,EAAQikB,WACvB,GAAI,OAASC,EACX,GAAI,oBAAsBD,EACxB,IACEA,GACF,CAAE,MAAOiF,GACPgjB,GAAwBlsC,EAASqsC,EAAwBnjB,EAC3D,CAAE,QACClpB,EAAQikB,WAAa,KAEpB,OADCjkB,EAAUA,EAAQjE,aACCiE,EAAQikB,WAAa,KAC7C,MACG,GAAI,oBAAsBC,EAC7B,IACEA,EAAI,KACN,CAAE,MAAO2oB,GACPX,GAAwBlsC,EAASqsC,EAAwBQ,EAC3D,MACG3oB,EAAIlkB,QAAU,IACvB,CACA,SAAS8sC,GAAgBd,GACvB,IAAI1tC,EAAO0tC,EAAa1tC,KACtBgT,EAAQ06B,EAAa5nB,cACrBuD,EAAWqkB,EAAarkC,UAC1B,IACE4J,EAAG,OAAQjT,GACT,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,WACHgT,EAAMg6B,WAAa3jB,EAASolB,QAC5B,MAAMx7B,EACR,IAAK,MACHD,EAAMkU,IACDmC,EAASnC,IAAMlU,EAAMkU,IACtBlU,EAAM07B,SAAWrlB,EAASslB,OAAS37B,EAAM07B,QAEnD,CAAE,MAAO9jB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,SAASgkB,GAAiBlB,EAAc9J,EAAUD,GAChD,IACE,IAAIkL,EAAanB,EAAarkC,WA+kJlC,SAA0BwlC,EAAYjxC,EAAKkxC,EAAW1L,GACpD,OAAQxlC,GACN,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACH,MACF,IAAK,QACH,IAAIuC,EAAO,KACTH,EAAO,KACP8B,EAAQ,KACRL,EAAe,KACfqO,EAAmB,KACnBb,EAAU,KACVc,EAAiB,KACnB,IAAKg/B,KAAWD,EAAW,CACzB,IAAIE,EAAWF,EAAUC,GACzB,GAAID,EAAU7rC,eAAe8rC,IAAY,MAAQC,EAC/C,OAAQD,GACN,IAAK,UAEL,IAAK,QACH,MACF,IAAK,eACHj/B,EAAmBk/B,EACrB,QACE5L,EAAUngC,eAAe8rC,IACvBE,GAAQJ,EAAYjxC,EAAKmxC,EAAS,KAAM3L,EAAW4L,GAE7D,CACA,IAAK,IAAIE,KAAe9L,EAAW,CACjC,IAAI2L,EAAU3L,EAAU8L,GAExB,GADAF,EAAWF,EAAUI,GAEnB9L,EAAUngC,eAAeisC,KACxB,MAAQH,GAAW,MAAQC,GAE5B,OAAQE,GACN,IAAK,OACHlvC,EAAO+uC,EACP,MACF,IAAK,OACH5uC,EAAO4uC,EACP,MACF,IAAK,UACH9/B,EAAU8/B,EACV,MACF,IAAK,iBACHh/B,EAAiBg/B,EACjB,MACF,IAAK,QACHjtC,EAAQitC,EACR,MACF,IAAK,eACHttC,EAAestC,EACf,MACF,IAAK,WACL,IAAK,0BACH,GAAI,MAAQA,EACV,MAAM7wC,MAAMtB,EAAuB,IAAKgB,IAC1C,MACF,QACEmxC,IAAYC,GACVC,GACEJ,EACAjxC,EACAsxC,EACAH,EACA3L,EACA4L,GAGZ,CAWA,YAVAp/B,GACEi/B,EACA/sC,EACAL,EACAqO,EACAb,EACAc,EACA/P,EACAG,GAGJ,IAAK,SAEH,IAAKH,KADL+uC,EAAUjtC,EAAQL,EAAeytC,EAAc,KAClCJ,EACX,GACIh/B,EAAmBg/B,EAAU9uC,GAC/B8uC,EAAU7rC,eAAejD,IAAS,MAAQ8P,EAE1C,OAAQ9P,GACN,IAAK,QACH,MACF,IAAK,WACH+uC,EAAUj/B,EACZ,QACEszB,EAAUngC,eAAejD,IACvBivC,GACEJ,EACAjxC,EACAoC,EACA,KACAojC,EACAtzB,GAGZ,IAAK3P,KAAQijC,EACX,GACIpjC,EAAOojC,EAAUjjC,GAClB2P,EAAmBg/B,EAAU3uC,GAC9BijC,EAAUngC,eAAe9C,KACtB,MAAQH,GAAQ,MAAQ8P,GAE3B,OAAQ3P,GACN,IAAK,QACH+uC,EAAclvC,EACd,MACF,IAAK,eACHyB,EAAezB,EACf,MACF,IAAK,WACH8B,EAAQ9B,EACV,QACEA,IAAS8P,GACPm/B,GACEJ,EACAjxC,EACAuC,EACAH,EACAojC,EACAtzB,GAYZ,OATAlS,EAAM6D,EACNqtC,EAAYhtC,EACZshC,EAAY2L,OACZ,MAAQG,EACJ9+B,GAAcy+B,IAAcC,EAAWI,GAAa,KAClD9L,MAAgB0L,IACjB,MAAQlxC,EACLwS,GAAcy+B,IAAcC,EAAWlxC,GAAK,GAC5CwS,GAAcy+B,IAAcC,EAAWA,EAAY,GAAK,IAAI,KAEtE,IAAK,WAEH,IAAKrtC,KADLstC,EAAUG,EAAc,KACHJ,EACnB,GACI3uC,EAAO2uC,EAAUrtC,GACnBqtC,EAAU7rC,eAAexB,IACvB,MAAQtB,IACPijC,EAAUngC,eAAexB,GAE5B,OAAQA,GACN,IAAK,QAEL,IAAK,WACH,MACF,QACEwtC,GAAQJ,EAAYjxC,EAAK6D,EAAc,KAAM2hC,EAAWjjC,GAEhE,IAAK2B,KAASshC,EACZ,GACIjjC,EAAOijC,EAAUthC,GAClB9B,EAAO8uC,EAAUhtC,GAClBshC,EAAUngC,eAAenB,KAAW,MAAQ3B,GAAQ,MAAQH,GAE5D,OAAQ8B,GACN,IAAK,QACHotC,EAAc/uC,EACd,MACF,IAAK,eACH4uC,EAAU5uC,EACV,MACF,IAAK,WACH,MACF,IAAK,0BACH,GAAI,MAAQA,EAAM,MAAMjC,MAAMtB,EAAuB,KACrD,MACF,QACEuD,IAASH,GACPivC,GAAQJ,EAAYjxC,EAAKkE,EAAO3B,EAAMijC,EAAWpjC,GAG3D,YADA4Q,GAAei+B,EAAYK,EAAaH,GAE1C,IAAK,SACH,IAAK,IAAII,KAAeL,EACtB,GACII,EAAcJ,EAAUK,GAC1BL,EAAU7rC,eAAeksC,IACvB,MAAQD,IACP9L,EAAUngC,eAAeksC,GAE5B,GACO,aADCA,EAEJN,EAAWp+B,UAAW,OAGtBw+B,GACEJ,EACAjxC,EACAuxC,EACA,KACA/L,EACA8L,GAGV,IAAKp/B,KAAoBszB,EACvB,GACI8L,EAAc9L,EAAUtzB,GACzBi/B,EAAUD,EAAUh/B,GACrBszB,EAAUngC,eAAe6M,IACvBo/B,IAAgBH,IACf,MAAQG,GAAe,MAAQH,GAElC,GACO,aADCj/B,EAEJ++B,EAAWp+B,SACTy+B,GACA,oBAAsBA,GACtB,kBAAoBA,OAGtBD,GACEJ,EACAjxC,EACAkS,EACAo/B,EACA9L,EACA2L,GAGV,OACF,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,QACL,IAAK,KACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,MACL,IAAK,WACH,IAAK,IAAIK,KAAeN,EACrBI,EAAcJ,EAAUM,GACvBN,EAAU7rC,eAAemsC,IACvB,MAAQF,IACP9L,EAAUngC,eAAemsC,IAC1BH,GAAQJ,EAAYjxC,EAAKwxC,EAAa,KAAMhM,EAAW8L,GAC7D,IAAKjgC,KAAWm0B,EACd,GACI8L,EAAc9L,EAAUn0B,GACzB8/B,EAAUD,EAAU7/B,GACrBm0B,EAAUngC,eAAegM,IACvBigC,IAAgBH,IACf,MAAQG,GAAe,MAAQH,GAElC,OAAQ9/B,GACN,IAAK,WACL,IAAK,0BACH,GAAI,MAAQigC,EACV,MAAMhxC,MAAMtB,EAAuB,IAAKgB,IAC1C,MACF,QACEqxC,GACEJ,EACAjxC,EACAqR,EACAigC,EACA9L,EACA2L,GAGV,OACF,QACE,GAAI78B,GAAgBtU,GAAM,CACxB,IAAK,IAAIyxC,KAAeP,EACrBI,EAAcJ,EAAUO,GACvBP,EAAU7rC,eAAeosC,SACvB,IAAWH,IACV9L,EAAUngC,eAAeosC,IAC1BC,GACET,EACAjxC,EACAyxC,OACA,EACAjM,EACA8L,GAER,IAAKn/B,KAAkBqzB,EACpB8L,EAAc9L,EAAUrzB,GACtBg/B,EAAUD,EAAU/+B,IACpBqzB,EAAUngC,eAAe8M,IACxBm/B,IAAgBH,QACf,IAAWG,QAAe,IAAWH,GACtCO,GACET,EACAjxC,EACAmS,EACAm/B,EACA9L,EACA2L,GAER,MACF,EAEJ,IAAK,IAAIQ,KAAeT,EACrBI,EAAcJ,EAAUS,GACvBT,EAAU7rC,eAAessC,IACvB,MAAQL,IACP9L,EAAUngC,eAAessC,IAC1BN,GAAQJ,EAAYjxC,EAAK2xC,EAAa,KAAMnM,EAAW8L,GAC7D,IAAKF,KAAY5L,EACd8L,EAAc9L,EAAU4L,GACtBD,EAAUD,EAAUE,IACpB5L,EAAUngC,eAAe+rC,IACxBE,IAAgBH,GACf,MAAQG,GAAe,MAAQH,GAChCE,GAAQJ,EAAYjxC,EAAKoxC,EAAUE,EAAa9L,EAAW2L,EACnE,CAt5JIS,CAAiBX,EAAYnB,EAAa1tC,KAAM2jC,EAAUC,GAC1DiL,EAAWxmC,IAAoBu7B,CACjC,CAAE,MAAOhZ,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,SAAS6kB,GAAalyC,GACpB,OACE,IAAMA,EAAMK,KACZ,IAAML,EAAMK,KACZ,KAAOL,EAAMK,KACZ,KAAOL,EAAMK,KAAOysB,GAAiB9sB,EAAMyC,OAC5C,IAAMzC,EAAMK,GAEhB,CACA,SAAS8xC,GAAenyC,GACtB0V,EAAG,OAAS,CACV,KAAO,OAAS1V,EAAMc,SAAW,CAC/B,GAAI,OAASd,EAAMG,QAAU+xC,GAAalyC,EAAMG,QAAS,OAAO,KAChEH,EAAQA,EAAMG,MAChB,CAEA,IADAH,EAAMc,QAAQX,OAASH,EAAMG,OAE3BH,EAAQA,EAAMc,QACd,IAAMd,EAAMK,KAAO,IAAML,EAAMK,KAAO,KAAOL,EAAMK,KAEnD,CACA,GAAI,KAAOL,EAAMK,KAAOysB,GAAiB9sB,EAAMyC,MAAO,SAASiT,EAC/D,GAAkB,EAAd1V,EAAMI,MAAW,SAASsV,EAC9B,GAAI,OAAS1V,EAAMa,OAAS,IAAMb,EAAMK,IAAK,SAASqV,EAChD1V,EAAMa,MAAMV,OAASH,EAASA,EAAQA,EAAMa,KACpD,CACA,KAAoB,EAAdb,EAAMI,OAAY,OAAOJ,EAAM8L,SACvC,CACF,CACA,SAASsmC,GAAyCvyC,EAAMwyC,EAAQ5qB,GAC9D,IAAIpnB,EAAMR,EAAKQ,IACf,GAAI,IAAMA,GAAO,IAAMA,EACpBR,EAAOA,EAAKiM,UACXumC,GACK,IAAM5qB,EAAO3nB,SACV2nB,EAAO1V,KACP,SAAW0V,EAAOhX,SAChBgX,EAAO7U,cAAcb,KACrB0V,GACJ6qB,aAAazyC,EAAMwyC,KACnBA,EACA,IAAM5qB,EAAO3nB,SACT2nB,EAAO1V,KACP,SAAW0V,EAAOhX,SAChBgX,EAAO7U,cAAcb,KACrB0V,GACD+nB,YAAY3vC,GAElB,QADA4nB,EAASA,EAAO8qB,2BACG,IAAW9qB,GAC7B,OAAS4qB,EAAO9lB,UACf8lB,EAAO9lB,QAAUC,UACvB,GACH,IAAMnsB,IACL,KAAOA,GACNysB,GAAiBjtB,EAAK4C,QACpBglB,EAAS5nB,EAAKiM,UAAaumC,EAAS,MAExC,QADCxyC,EAAOA,EAAKgB,QAGb,IACEuxC,GAAyCvyC,EAAMwyC,EAAQ5qB,GACrD5nB,EAAOA,EAAKiB,QACd,OAASjB,GAGTuyC,GAAyCvyC,EAAMwyC,EAAQ5qB,GACpD5nB,EAAOA,EAAKiB,OACrB,CACA,SAAS0xC,GAA4B3yC,EAAMwyC,EAAQ5qB,GACjD,IAAIpnB,EAAMR,EAAKQ,IACf,GAAI,IAAMA,GAAO,IAAMA,EACpBR,EAAOA,EAAKiM,UACXumC,EAAS5qB,EAAO6qB,aAAazyC,EAAMwyC,GAAU5qB,EAAO+nB,YAAY3vC,QAC/D,GACH,IAAMQ,IACL,KAAOA,GAAOysB,GAAiBjtB,EAAK4C,QAAUglB,EAAS5nB,EAAKiM,WAE7D,QADCjM,EAAOA,EAAKgB,QAGb,IACE2xC,GAA4B3yC,EAAMwyC,EAAQ5qB,GAAS5nB,EAAOA,EAAKiB,QAC/D,OAASjB,GAGT2yC,GAA4B3yC,EAAMwyC,EAAQ5qB,GAAU5nB,EAAOA,EAAKiB,OACtE,CACA,SAAS2xC,GAA+BtC,GACtC,IAAIuC,EAAYvC,EAAarkC,UAC3B2J,EAAQ06B,EAAa5nB,cACvB,IACE,IACE,IAAI9lB,EAAO0tC,EAAa1tC,KAAMkwC,EAAaD,EAAUC,WACrDA,EAAWlzC,QAGXizC,EAAUE,oBAAoBD,EAAW,IAC3ClF,GAAqBiF,EAAWjwC,EAAMgT,GACtCi9B,EAAU7nC,IAAuBslC,EACjCuC,EAAU5nC,IAAoB2K,CAChC,CAAE,MAAO4X,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,IAAIwlB,IAA2B,EAC7BC,IAA4B,EAC5BC,IAAiB,EACjBC,GAAkB,oBAAsBC,QAAUA,QAAU3mC,IAC5D4mC,GAAa,KA2Jf,SAASC,GAA0BC,EAAcjvC,EAASgsC,GACxD,IAAI/vC,EAAQ+vC,EAAa/vC,MACzB,OAAQ+vC,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACHgzC,GAAiCD,EAAcjD,GACvC,EAAR/vC,GAAa8vC,GAA0B,EAAGC,GAC1C,MACF,KAAK,EAEH,GADAkD,GAAiCD,EAAcjD,GACnC,EAAR/vC,EACF,GAAMgzC,EAAejD,EAAarkC,UAAY,OAAS3H,EACrD,IACEivC,EAAahJ,mBACf,CAAE,MAAO/c,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,KACG,CACH,IAAIgc,EAAYzC,GACduJ,EAAa1tC,KACb0B,EAAQokB,eAEVpkB,EAAUA,EAAQ3D,cAClB,IACE4yC,EAAa1I,mBACXrB,EACAllC,EACAivC,EAAaE,oCAEjB,CAAE,MAAOC,GACPlD,GACEF,EACAA,EAAahwC,OACbozC,EAEJ,CACF,CACM,GAARnzC,GAAcswC,GAAqBP,GAC3B,IAAR/vC,GAAeywC,GAAgBV,EAAcA,EAAahwC,QAC1D,MACF,KAAK,EAEH,GADAkzC,GAAiCD,EAAcjD,GAErC,GAAR/vC,GAC4C,QAA1CgzC,EAAejD,EAAa7nB,aAC9B,CAEA,GADAnkB,EAAU,KACN,OAASgsC,EAAatvC,MACxB,OAAQsvC,EAAatvC,MAAMR,KACzB,KAAK,GACL,KAAK,EAGL,KAAK,EACH8D,EAAUgsC,EAAatvC,MAAMiL,UAEnC,IACEgpB,GAAgBse,EAAcjvC,EAChC,CAAE,MAAOkpB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,MACF,KAAK,GACH,OAASlpB,GACC,EAAR/D,GACAqyC,GAA+BtC,GACnC,KAAK,GACL,KAAK,EACHkD,GAAiCD,EAAcjD,GAC/C,OAAShsC,GAAmB,EAAR/D,GAAa6wC,GAAgBd,GACzC,IAAR/vC,GAAeywC,GAAgBV,EAAcA,EAAahwC,QAC1D,MACF,KAAK,GACHkzC,GAAiCD,EAAcjD,GAC/C,MACF,KAAK,GACHkD,GAAiCD,EAAcjD,GACvC,EAAR/vC,GAAaozC,GAAiCJ,EAAcjD,GACpD,GAAR/vC,IAEE,QADEgzC,EAAejD,EAAa3vC,iBAG5B,QADE4yC,EAAeA,EAAa3yC,aAmyJxC,SAAuCqrB,EAAU0H,GAC/C,IAAI5gB,EAAgBkZ,EAASlZ,cAC7B,GAAI,OAASkZ,EAASloB,MAAQ,aAAegP,EAAc6gC,WACzDjgB,QACG,CACH,IAAIpE,EAAW,WACboE,IACA5gB,EAAc4D,oBAAoB,mBAAoB4Y,EACxD,EACAxc,EAAc2D,iBAAiB,mBAAoB6Y,GACnDtD,EAAS4nB,YAActkB,CACzB,CACF,CAzyJYukB,CAA8BP,EAJ5BjD,EAAeyD,GAAgCzZ,KAC/C,KACAgW,MAGR,MACF,KAAK,GAEH,KADA/vC,EAAQ,OAAS+vC,EAAa3vC,eAAiBqyC,IACnC,CACV1uC,EACG,OAASA,GAAW,OAASA,EAAQ3D,eACtCsyC,GACFzJ,EAAYwJ,GACZ,IAAIgB,EAAgCf,GACpCD,GAA2BzyC,GAC1B0yC,GAA4B3uC,KAAa0vC,EACtCC,GACEV,EACAjD,EACA,KAAmC,KAA5BA,EAAa3nB,eAEtB6qB,GAAiCD,EAAcjD,GACnD0C,GAA2BxJ,EAC3ByJ,GAA4Be,CAC9B,CACA,MACF,KAAK,GACH,MACF,QACER,GAAiCD,EAAcjD,GAErD,CACA,SAAS4D,GAAwB/zC,GAC/B,IAAIE,EAAYF,EAAME,UACtB,OAASA,IACLF,EAAME,UAAY,KAAO6zC,GAAwB7zC,IACrDF,EAAMa,MAAQ,KACdb,EAAMyoB,UAAY,KAClBzoB,EAAMc,QAAU,KAChB,IAAMd,EAAMK,MAEV,QADEH,EAAYF,EAAM8L,YACET,GAAsBnL,IAC9CF,EAAM8L,UAAY,KAClB9L,EAAMG,OAAS,KACfH,EAAM0M,aAAe,KACrB1M,EAAMuoB,cAAgB,KACtBvoB,EAAMQ,cAAgB,KACtBR,EAAMioB,aAAe,KACrBjoB,EAAM8L,UAAY,KAClB9L,EAAMsoB,YAAc,IACtB,CACA,IAAI0rB,GAAa,KACfC,IAAwB,EAC1B,SAASC,GACPd,EACA5C,EACA/oB,GAEA,IAAKA,EAASA,EAAO5mB,MAAO,OAAS4mB,GACnC0sB,GAA6Bf,EAAc5C,EAAwB/oB,GAChEA,EAASA,EAAO3mB,OACvB,CACA,SAASqzC,GACPf,EACA5C,EACA4D,GAEA,GAAI9sC,IAAgB,oBAAsBA,GAAa+sC,qBACrD,IACE/sC,GAAa+sC,qBAAqBhtC,GAAY+sC,EAChD,CAAE,MAAO1sC,GAAM,CACjB,OAAQ0sC,EAAa/zC,KACnB,KAAK,GACHyyC,IACE/B,GAAgBqD,EAAc5D,GAChC0D,GACEd,EACA5C,EACA4D,GAEFA,EAAa5zC,cACT4zC,EAAa5zC,cAAc8zC,QAC3BF,EAAatoC,YACXsoC,EAAeA,EAAatoC,WACjBL,WAAW8jC,YAAY6E,GACxC,MACF,KAAK,GACHtB,IACE/B,GAAgBqD,EAAc5D,GAChC,IAAI+D,EAAiBP,GACnBQ,EAA4BP,GAC9BnnB,GAAiBsnB,EAAa3xC,QAC1BuxC,GAAaI,EAAatoC,UAAamoC,IAAwB,GACnEC,GACEd,EACA5C,EACA4D,GAEFK,GAAyBL,EAAatoC,WACtCkoC,GAAaO,EACbN,GAAwBO,EACxB,MACF,KAAK,EACH1B,IACE/B,GAAgBqD,EAAc5D,GAClC,KAAK,EAWH,GAVA+D,EAAiBP,GACjBQ,EAA4BP,GAC5BD,GAAa,KACbE,GACEd,EACA5C,EACA4D,GAGFH,GAAwBO,EACpB,QAFJR,GAAaO,GAGX,GAAIN,GACF,KACG,IAAMD,GAAWl0C,SACdk0C,GAAWjiC,KACX,SAAWiiC,GAAWvjC,SACpBujC,GAAWphC,cAAcb,KACzBiiC,IACJzE,YAAY6E,EAAatoC,UAC7B,CAAE,MAAOuhB,GACPgjB,GACE+D,EACA5D,EACAnjB,EAEJ,MAEA,IACE2mB,GAAWzE,YAAY6E,EAAatoC,UACtC,CAAE,MAAOuhB,GACPgjB,GACE+D,EACA5D,EACAnjB,EAEJ,CACJ,MACF,KAAK,GACH,OAAS2mB,KACNC,IAEGS,GACE,KAFAtB,EAAeY,IAEIl0C,SACfszC,EAAarhC,KACb,SAAWqhC,EAAa3iC,SACtB2iC,EAAaxgC,cAAcb,KAC3BqhC,EACNgB,EAAatoC,WAEf6oC,GAAiBvB,IACjBsB,GAAsBV,GAAYI,EAAatoC,YACrD,MACF,KAAK,EACHyoC,EAAiBP,GACjBQ,EAA4BP,GAC5BD,GAAaI,EAAatoC,UAAUyX,cACpC0wB,IAAwB,EACxBC,GACEd,EACA5C,EACA4D,GAEFJ,GAAaO,EACbN,GAAwBO,EACxB,MACF,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACH1B,IACExC,GAA4B,EAAG8D,EAAc5D,GAC/CsC,IACExC,GAA4B,EAAG8D,EAAc5D,GAC/C0D,GACEd,EACA5C,EACA4D,GAEF,MACF,KAAK,EACHtB,KACG/B,GAAgBqD,EAAc5D,GAE/B,oBADC+D,EAAiBH,EAAatoC,WACM8kC,sBACnCD,GACEyD,EACA5D,EACA+D,IAENL,GACEd,EACA5C,EACA4D,GAEF,MACF,KAAK,GACHF,GACEd,EACA5C,EACA4D,GAEF,MACF,KAAK,GACHtB,IACGyB,EAAiBzB,KAClB,OAASsB,EAAa5zC,cACxB0zC,GACEd,EACA5C,EACA4D,GAEFtB,GAA4ByB,EAC5B,MACF,QACEL,GACEd,EACA5C,EACA4D,GAGR,CACA,SAASZ,GAAiCJ,EAAcjD,GACtD,GACE,OAASA,EAAa3vC,gBAEtB,QADE4yC,EAAejD,EAAajwC,aAG5B,QADEkzC,EAAeA,EAAa5yC,gBAEe,QAAzC4yC,EAAeA,EAAa3yC,cAElC,IACEk0C,GAAiBvB,EACnB,CAAE,MAAO/lB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACJ,CAqBA,SAASunB,GAA6BzE,EAAc0E,GAClD,IAAIC,EArBN,SAAuB3E,GACrB,OAAQA,EAAa9vC,KACnB,KAAK,GACL,KAAK,GACH,IAAIy0C,EAAa3E,EAAarkC,UAG9B,OAFA,OAASgpC,IACNA,EAAa3E,EAAarkC,UAAY,IAAIknC,IACtC8B,EACT,KAAK,GACH,OAGE,QADCA,GADA3E,EAAeA,EAAarkC,WACFwgC,eAExBwI,EAAa3E,EAAa7D,YAAc,IAAI0G,IAC/C8B,EAEJ,QACE,MAAMn0C,MAAMtB,EAAuB,IAAK8wC,EAAa9vC,MAE3D,CAEmB00C,CAAc5E,GAC/B0E,EAAUvlB,SAAQ,SAAU0lB,GAC1B,IAAIC,EAAQC,GAAqB/a,KAAK,KAAMgW,EAAc6E,GAC1DF,EAAWzgC,IAAI2gC,KACZF,EAAWloC,IAAIooC,GAAWA,EAASrkB,KAAKskB,EAAOA,GACpD,GACF,CACA,SAASE,GAAmCC,EAAeC,GACzD,IAAI5sB,EAAY4sB,EAAY5sB,UAC5B,GAAI,OAASA,EACX,IAAK,IAAI9oB,EAAI,EAAGA,EAAI8oB,EAAUhpB,OAAQE,IAAK,CACzC,IAAIijC,EAAgBna,EAAU9oB,GAC5ByI,EAAOgtC,EACPhT,EAAciT,EACd5tB,EAAS2a,EACX1sB,EAAG,KAAO,OAAS+R,GAAU,CAC3B,OAAQA,EAAOpnB,KACb,KAAK,GACH,GAAIysB,GAAiBrF,EAAOhlB,MAAO,CACjCuxC,GAAavsB,EAAO3b,UACpBmoC,IAAwB,EACxB,MAAMv+B,CACR,CACA,MACF,KAAK,EACHs+B,GAAavsB,EAAO3b,UACpBmoC,IAAwB,EACxB,MAAMv+B,EACR,KAAK,EACL,KAAK,EACHs+B,GAAavsB,EAAO3b,UAAUyX,cAC9B0wB,IAAwB,EACxB,MAAMv+B,EAEV+R,EAASA,EAAOtnB,MAClB,CACA,GAAI,OAAS6zC,GAAY,MAAMrzC,MAAMtB,EAAuB,MAC5D80C,GAA6B/rC,EAAMg6B,EAAaQ,GAChDoR,GAAa,KACbC,IAAwB,EAExB,QADA7rC,EAAOw6B,EAAc1iC,aACHkI,EAAKjI,OAAS,MAChCyiC,EAAcziC,OAAS,IACzB,CACF,GAA+B,MAA3Bk1C,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAC7CC,GAA6BD,EAAaD,GACvCC,EAAcA,EAAYv0C,OACnC,CACA,IAAIy0C,GAAuB,KAC3B,SAASD,GAA6BnF,EAAc/nC,GAClD,IAAIjE,EAAUgsC,EAAajwC,UACzBE,EAAQ+vC,EAAa/vC,MACvB,OAAQ+vC,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACH80C,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,EAAR/vC,IACGkwC,GAA4B,EAAGH,EAAcA,EAAahwC,QAC3D+vC,GAA0B,EAAGC,GAC7BG,GAA4B,EAAGH,EAAcA,EAAahwC,SAC5D,MACF,KAAK,EACHg1C,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,IAAR/vC,IACG0yC,IACC,OAAS3uC,GACT4sC,GAAgB5sC,EAASA,EAAQhE,SAC7B,GAARC,GACEyyC,KAEA,QADE1C,EAAeA,EAAa7nB,eAG5B,QADEloB,EAAQ+vC,EAAa/c,aAEnBjvB,EAAUgsC,EAAajd,OAAOC,gBAC/Bgd,EAAajd,OAAOC,gBACnB,OAAShvB,EAAU/D,EAAQ+D,EAAQi6B,OAAOh+B,MAClD,MACF,KAAK,GACH,IAAIq1C,EAAgBF,GAOpB,GANAJ,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,IAAR/vC,IACG0yC,IACC,OAAS3uC,GACT4sC,GAAgB5sC,EAASA,EAAQhE,SACzB,EAARC,EAAW,CACb,IAAIs1C,EAAkB,OAASvxC,EAAUA,EAAQ3D,cAAgB,KAEjE,GADAJ,EAAQ+vC,EAAa3vC,cACjB,OAAS2D,EACX,GAAI,OAAS/D,EACX,GAAI,OAAS+vC,EAAarkC,UAAW,CACnC4J,EAAG,CACDtV,EAAQ+vC,EAAa1tC,KACrB0B,EAAUgsC,EAAa5nB,cACvBktB,EAAgBA,EAAc7iC,eAAiB6iC,EAC/Cx/B,EAAG,OAAQ7V,GACT,IAAK,WACHs1C,EACED,EAAcE,qBAAqB,SAAS,KAG5CD,EAAgBtqC,KAChBsqC,EAAgB7qC,KAChB,+BACE6qC,EAAgB3wC,cAClB2wC,EAAgB9H,aAAa,eAE5B8H,EAAkBD,EAAcp/B,cAAcjW,GAC7Cq1C,EAAcG,KAAKtD,aACjBoD,EACAD,EAAcI,cAAc,kBAElCpI,GAAqBiI,EAAiBt1C,EAAO+D,GAC7CuxC,EAAgB7qC,IAAuBslC,EACvC/jC,GAAoBspC,GACpBt1C,EAAQs1C,EACR,MAAMhgC,EACR,IAAK,OACH,IAAIogC,EAAaC,GACf,OACA,OACAN,GACAzkC,IAAI5Q,GAAS+D,EAAQwf,MAAQ,KAC/B,GAAImyB,EACF,IAAK,IAAIn2C,EAAI,EAAGA,EAAIm2C,EAAWr2C,OAAQE,IACrC,IACI+1C,EAAkBI,EAAWn2C,IACfkuC,aAAa,WAC1B,MAAQ1pC,EAAQwf,MAAQ,KAAOxf,EAAQwf,KACpC,KACAxf,EAAQwf,OACZ+xB,EAAgB7H,aAAa,UAC1B,MAAQ1pC,EAAQolB,IAAM,KAAOplB,EAAQolB,MACxCmsB,EAAgB7H,aAAa,YAC1B,MAAQ1pC,EAAQ4pC,MAAQ,KAAO5pC,EAAQ4pC,QAC1C2H,EAAgB7H,aAAa,kBAC1B,MAAQ1pC,EAAQ2pC,YACb,KACA3pC,EAAQ2pC,aAChB,CACAgI,EAAWE,OAAOr2C,EAAG,GACrB,MAAMsW,CACR,CAEJw3B,GADAiI,EAAkBD,EAAcp/B,cAAcjW,GACRA,EAAO+D,GAC7CsxC,EAAcG,KAAKpG,YAAYkG,GAC/B,MACF,IAAK,OACH,GACGI,EAAaC,GACZ,OACA,UACAN,GACAzkC,IAAI5Q,GAAS+D,EAAQ6lB,SAAW,KAElC,IAAKrqB,EAAI,EAAGA,EAAIm2C,EAAWr2C,OAAQE,IACjC,IACI+1C,EAAkBI,EAAWn2C,IACfkuC,aAAa,cAC1B,MAAQ1pC,EAAQ6lB,QACb,KACA,GAAK7lB,EAAQ6lB,UACjB0rB,EAAgB7H,aAAa,WAC1B,MAAQ1pC,EAAQvB,KAAO,KAAOuB,EAAQvB,OACzC8yC,EAAgB7H,aAAa,eAC1B,MAAQ1pC,EAAQ8xC,SACb,KACA9xC,EAAQ8xC,WACdP,EAAgB7H,aAAa,iBAC1B,MAAQ1pC,EAAQ+xC,UACb,KACA/xC,EAAQ+xC,YACdR,EAAgB7H,aAAa,cAC1B,MAAQ1pC,EAAQgyC,QACb,KACAhyC,EAAQgyC,SAChB,CACAL,EAAWE,OAAOr2C,EAAG,GACrB,MAAMsW,CACR,CAEJw3B,GADAiI,EAAkBD,EAAcp/B,cAAcjW,GACRA,EAAO+D,GAC7CsxC,EAAcG,KAAKpG,YAAYkG,GAC/B,MACF,QACE,MAAM/0C,MAAMtB,EAAuB,IAAKe,IAE5Cs1C,EAAgB7qC,IAAuBslC,EACvC/jC,GAAoBspC,GACpBt1C,EAAQs1C,CACV,CACAvF,EAAarkC,UAAY1L,CAC3B,MACEg2C,GACEX,EACAtF,EAAa1tC,KACb0tC,EAAarkC,gBAGjBqkC,EAAarkC,UAAYuqC,GACvBZ,EACAr1C,EACA+vC,EAAa5nB,oBAGjBmtB,IAAoBt1C,GACf,OAASs1C,EACN,OAASvxC,EAAQ2H,YACf3H,EAAUA,EAAQ2H,WACZL,WAAW8jC,YAAYprC,GAC/BuxC,EAAgBpB,QACpB,OAASl0C,EACLg2C,GACEX,EACAtF,EAAa1tC,KACb0tC,EAAarkC,WAEfuqC,GACEZ,EACAr1C,EACA+vC,EAAa5nB,gBAEnB,OAASnoB,GACT,OAAS+vC,EAAarkC,WACtBulC,GACElB,EACAA,EAAa5nB,cACbpkB,EAAQokB,cAElB,CACA,MACF,KAAK,GACH4sB,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,IAAR/vC,IACG0yC,IACC,OAAS3uC,GACT4sC,GAAgB5sC,EAASA,EAAQhE,SACrC,OAASgE,GACC,EAAR/D,GACAixC,GACElB,EACAA,EAAa5nB,cACbpkB,EAAQokB,eAEZ,MACF,KAAK,EAOH,GANA4sB,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,IAAR/vC,IACG0yC,IACC,OAAS3uC,GACT4sC,GAAgB5sC,EAASA,EAAQhE,SACZ,GAArBgwC,EAAa/vC,MAAY,CAC3Bq1C,EAAgBtF,EAAarkC,UAC7B,IACE2H,GAAegiC,EAAe,GAChC,CAAE,MAAOpoB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACQ,EAARjtB,GACE,MAAQ+vC,EAAarkC,WAErBulC,GACElB,EAFAsF,EAAgBtF,EAAa5nB,cAI7B,OAASpkB,EAAUA,EAAQokB,cAAgBktB,GAEvC,KAARr1C,IAAiB2yC,IAAiB,GAClC,MACF,KAAK,EAGH,GAFAoC,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GAChB,EAAR/vC,EAAW,CACb,GAAI,OAAS+vC,EAAarkC,UACxB,MAAMnL,MAAMtB,EAAuB,MACrCe,EAAQ+vC,EAAa5nB,cACrBpkB,EAAUgsC,EAAarkC,UACvB,IACE3H,EAAQ0P,UAAYzT,CACtB,CAAE,MAAOitB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,CACA,MACF,KAAK,EAOH,GANAipB,GAAY,KACZb,EAAgBF,GAChBA,GAAuBgB,GAAiBnuC,EAAKmb,eAC7C4xB,GAAmC/sC,EAAM+nC,GACzCoF,GAAuBE,EACvBD,GAA4BrF,GAChB,EAAR/vC,GAAa,OAAS+D,GAAWA,EAAQ3D,cAAc8sC,aACzD,IACEqH,GAAiBvsC,EAAKmb,cACxB,CAAE,MAAO8J,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF0lB,KACIA,IAAiB,EAAKyD,GAAsBrG,IAChD,MACF,KAAK,EACH/vC,EAAQm1C,GACRA,GAAuBgB,GACrBpG,EAAarkC,UAAUyX,eAEzB4xB,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GAC5BoF,GAAuBn1C,EACvB,MACF,KAAK,GA4HL,QACE+0C,GAAmC/sC,EAAM+nC,GACvCqF,GAA4BrF,SA1HhC,KAAK,GACHgF,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACD,KAA3BA,EAAatvC,MAAMT,OAChB,OAAS+vC,EAAa3vC,iBACpB,OAAS2D,GAAW,OAASA,EAAQ3D,iBACvCi2C,GAA+BrwC,MAC1B,EAARhG,IAEE,QADEA,EAAQ+vC,EAAa7nB,eAEnB6nB,EAAa7nB,YAAc,KAC7BssB,GAA6BzE,EAAc/vC,KAC/C,MACF,KAAK,GACHq1C,EAAgB,OAAStF,EAAa3vC,cACtC,IAAIk2C,EAAY,OAASvyC,GAAW,OAASA,EAAQ3D,cACnDm2C,EAA+B9D,GAC/BgB,EAAgCf,GAOlC,GANAD,GAA2B8D,GAAgClB,EAC3D3C,GAA4Be,GAAiC6C,EAC7DvB,GAAmC/sC,EAAM+nC,GACzC2C,GAA4Be,EAC5BhB,GAA2B8D,EAC3BnB,GAA4BrF,GAChB,KAAR/vC,EACFsV,EAAG,IACDtN,EAAO+nC,EAAarkC,UAClB1D,EAAKuf,YAAc8tB,GACK,EAApBrtC,EAAKuf,YACc,EAAnBvf,EAAKuf,YACT8tB,IACG,OAAStxC,GACRuyC,GACA7D,IACAC,IACA8D,GAA0CzG,IAC9ChsC,EAAU,KACViE,EAAO+nC,IAGT,CACA,GAAI,IAAM/nC,EAAK/H,KAAO,KAAO+H,EAAK/H,KAChC,GAAI,OAAS8D,EAAS,CACpBuyC,EAAYvyC,EAAUiE,EACtB,IACE,GAAMstC,EAAkBgB,EAAU5qC,UAAY2pC,EAE1C,oBADDK,EAAaJ,EAAgB1hC,OACKG,YAC7B2hC,EAAW3hC,YAAY,UAAW,OAAQ,aACzC2hC,EAAWe,QAAU,WACzB,CACHl3C,EAAI+2C,EAAU5qC,UACd,IAAI6Y,EAAY+xB,EAAUnuB,cAAcvU,MACtC6iC,OACE,IAAWlyB,GACX,OAASA,GACTA,EAAUjf,eAAe,WACrBif,EAAUkyB,QACV,KACRl3C,EAAEqU,MAAM6iC,QACN,MAAQA,GAAW,mBAAqBA,EACpC,IACC,GAAKA,GAAS3oC,MACvB,CACF,CAAE,MAAOmf,GACPgjB,GAAwBqG,EAAWA,EAAUv2C,OAAQktB,EACvD,CACF,OACK,GAAI,IAAMjlB,EAAK/H,KACpB,GAAI,OAAS8D,EAAS,CACpBuyC,EAAYtuC,EACZ,IACEsuC,EAAU5qC,UAAU+H,UAAY4hC,EAC5B,GACAiB,EAAUnuB,aAChB,CAAE,MAAO8E,GACPgjB,GAAwBqG,EAAWA,EAAUv2C,OAAQktB,EACvD,CACF,OACK,IACH,KAAOjlB,EAAK/H,KAAO,KAAO+H,EAAK/H,KAC/B,OAAS+H,EAAK5H,eACd4H,IAAS+nC,IACX,OAAS/nC,EAAKvH,MACd,CACAuH,EAAKvH,MAAMV,OAASiI,EACpBA,EAAOA,EAAKvH,MACZ,QACF,CACA,GAAIuH,IAAS+nC,EAAc,MAAMz6B,EACjC,KAAO,OAAStN,EAAKtH,SAAW,CAC9B,GAAI,OAASsH,EAAKjI,QAAUiI,EAAKjI,SAAWgwC,EAAc,MAAMz6B,EAChEvR,IAAYiE,IAASjE,EAAU,MAC/BiE,EAAOA,EAAKjI,MACd,CACAgE,IAAYiE,IAASjE,EAAU,MAC/BiE,EAAKtH,QAAQX,OAASiI,EAAKjI,OAC3BiI,EAAOA,EAAKtH,OACd,CACM,EAARV,IAEE,QADEA,EAAQ+vC,EAAa7nB,eAGrB,QADEnkB,EAAU/D,EAAMouC,cAEdpuC,EAAMouC,WAAa,KACrBoG,GAA6BzE,EAAchsC,MACjD,MACF,KAAK,GACHgxC,GAAmC/sC,EAAM+nC,GACzCqF,GAA4BrF,GACpB,EAAR/vC,IAEE,QADEA,EAAQ+vC,EAAa7nB,eAEnB6nB,EAAa7nB,YAAc,KAC7BssB,GAA6BzE,EAAc/vC,KAEjD,KAAK,GAEL,KAAK,IAMT,CACA,SAASo1C,GAA4BrF,GACnC,IAAI/vC,EAAQ+vC,EAAa/vC,MACzB,GAAY,EAARA,EAAW,CACb,IACE,IACE,IAAI02C,EAAiBzB,EAAclF,EAAahwC,OAChD,OAASk1C,GAET,CACA,GAAInD,GAAamD,GAAc,CAC7ByB,EAAkBzB,EAClB,KACF,CACAA,EAAcA,EAAYl1C,MAC5B,CACA,GAAI,MAAQ22C,EAAiB,MAAMn2C,MAAMtB,EAAuB,MAChE,OAAQy3C,EAAgBz2C,KACtB,KAAK,GACH,IAAIonB,EAASqvB,EAAgBhrC,UAE7B0mC,GAA4BrC,EADjBgC,GAAehC,GACwB1oB,GAClD,MACF,KAAK,EACH,IAAIsvB,EAAaD,EAAgBhrC,UACT,GAAxBgrC,EAAgB12C,QACbqT,GAAesjC,EAAY,IAAMD,EAAgB12C,QAAU,IAE9DoyC,GAA4BrC,EADXgC,GAAehC,GACsB4G,GACtD,MACF,KAAK,EACL,KAAK,EACH,IAAIC,EAAaF,EAAgBhrC,UAAUyX,cAE3C6uB,GACEjC,EAFagC,GAAehC,GAI5B6G,GAEF,MACF,QACE,MAAMr2C,MAAMtB,EAAuB,MAEzC,CAAE,MAAOguB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACA8iB,EAAa/vC,QAAU,CACzB,CACQ,KAARA,IAAiB+vC,EAAa/vC,QAAU,KAC1C,CACA,SAASo2C,GAAsBnB,GAC7B,GAA+B,KAA3BA,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAC5D,IAAIr1C,EAAQq1C,EACZmB,GAAsBx2C,GACtB,IAAMA,EAAMK,KAAqB,KAAdL,EAAMI,OAAgBJ,EAAM8L,UAAUmrC,QACzD5B,EAAcA,EAAYv0C,OAC5B,CACJ,CACA,SAASuyC,GAAiCjrC,EAAMitC,GAC9C,GAA+B,KAA3BA,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAC7ClC,GAA0B/qC,EAAMitC,EAAYn1C,UAAWm1C,GACpDA,EAAcA,EAAYv0C,OACnC,CACA,SAAS81C,GAA0CvB,GACjD,IAAKA,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAC5D,IAAIlF,EAAekF,EACnB,OAAQlF,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACHiwC,GAA4B,EAAGH,EAAcA,EAAahwC,QAC1Dy2C,GAA0CzG,GAC1C,MACF,KAAK,EACHY,GAAgBZ,EAAcA,EAAahwC,QAC3C,IAAI2rB,EAAWqkB,EAAarkC,UAC5B,oBAAsBggB,EAAS8kB,sBAC7BD,GACER,EACAA,EAAahwC,OACb2rB,GAEJ8qB,GAA0CzG,GAC1C,MACF,KAAK,GACHsE,GAAyBtE,EAAarkC,WACxC,KAAK,GACL,KAAK,EACHilC,GAAgBZ,EAAcA,EAAahwC,QAC3Cy2C,GAA0CzG,GAC1C,MACF,KAAK,GACH,OAASA,EAAa3vC,eACpBo2C,GAA0CzG,GAC5C,MAIF,QACEyG,GAA0CzG,GAE9CkF,EAAcA,EAAYv0C,OAC5B,CACF,CACA,SAASgzC,GACPoD,EACA7B,EACA8B,GAIA,IAFAA,EACEA,GAAgC,KAAkC,KAA3B9B,EAAY7sB,cAChD6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAC5D,IAAIlxC,EAAUkxC,EAAYn1C,UACxBkzC,EAAe8D,EACf/G,EAAekF,EACfj1C,EAAQ+vC,EAAa/vC,MACvB,OAAQ+vC,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACHyzC,GACEV,EACAjD,EACAgH,GAEFjH,GAA0B,EAAGC,GAC7B,MACF,KAAK,EAQH,GAPA2D,GACEV,EACAjD,EACAgH,GAIE,oBADJ/D,GADAjvC,EAAUgsC,GACarkC,WACgBs+B,kBACrC,IACEgJ,EAAahJ,mBACf,CAAE,MAAO/c,GACPgjB,GAAwBlsC,EAASA,EAAQhE,OAAQktB,EACnD,CAGF,GAAI,QADJ+lB,GADAjvC,EAAUgsC,GACa7nB,aACI,CACzB,IAAIwD,EAAW3nB,EAAQ2H,UACvB,IACE,IAAIqnB,EAAkBigB,EAAalgB,OAAOC,gBAC1C,GAAI,OAASA,EACX,IACEigB,EAAalgB,OAAOC,gBAAkB,KAAMigB,EAAe,EAC3DA,EAAejgB,EAAgB1zB,OAC/B2zC,IAEAve,GAAa1B,EAAgBigB,GAAetnB,EAClD,CAAE,MAAOuB,GACPgjB,GAAwBlsC,EAASA,EAAQhE,OAAQktB,EACnD,CACF,CACA8pB,GACU,GAAR/2C,GACAswC,GAAqBP,GACvBU,GAAgBV,EAAcA,EAAahwC,QAC3C,MACF,KAAK,GACHsyC,GAA+BtC,GACjC,KAAK,GACL,KAAK,EACH2D,GACEV,EACAjD,EACAgH,GAEFA,GACE,OAAShzC,GACD,EAAR/D,GACA6wC,GAAgBd,GAClBU,GAAgBV,EAAcA,EAAahwC,QAC3C,MACF,KAAK,GACH2zC,GACEV,EACAjD,EACAgH,GAEF,MACF,KAAK,GACHrD,GACEV,EACAjD,EACAgH,GAEFA,GACU,EAAR/2C,GACAozC,GAAiCJ,EAAcjD,GACjD,MACF,KAAK,GACH,OAASA,EAAa3vC,eACpBszC,GACEV,EACAjD,EACAgH,GAEJtG,GAAgBV,EAAcA,EAAahwC,QAC3C,MACF,KAAK,GACH,MACF,QACE2zC,GACEV,EACAjD,EACAgH,GAGN9B,EAAcA,EAAYv0C,OAC5B,CACF,CACA,SAASs2C,GAAmCjzC,EAASgsC,GACnD,IAAIkH,EAAgB,KACpB,OAASlzC,GACP,OAASA,EAAQ3D,eACjB,OAAS2D,EAAQ3D,cAAcipC,YAC9B4N,EAAgBlzC,EAAQ3D,cAAcipC,UAAUhY,MACnDttB,EAAU,KACV,OAASgsC,EAAa3vC,eACpB,OAAS2vC,EAAa3vC,cAAcipC,YACnCtlC,EAAUgsC,EAAa3vC,cAAcipC,UAAUhY,MAClDttB,IAAYkzC,IACT,MAAQlzC,GAAWA,EAAQ6rB,WAC5B,MAAQqnB,GAAiBpnB,GAAaonB,GAC1C,CACA,SAASC,GAA8BnzC,EAASgsC,GAC9ChsC,EAAU,KACV,OAASgsC,EAAajwC,YACnBiE,EAAUgsC,EAAajwC,UAAUM,cAAc0vB,QAClDigB,EAAeA,EAAa3vC,cAAc0vB,SACzB/rB,IACdgsC,EAAangB,WAAY,MAAQ7rB,GAAW8rB,GAAa9rB,GAC9D,CACA,SAASozC,GACPnvC,EACAitC,EACAmC,EACAC,GAEA,GAA+B,MAA3BpC,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAC7CqC,GACEtvC,EACAitC,EACAmC,EACAC,GAECpC,EAAcA,EAAYv0C,OACnC,CACA,SAAS42C,GACPtE,EACAjD,EACAqH,EACAC,GAEA,IAAIr3C,EAAQ+vC,EAAa/vC,MACzB,OAAQ+vC,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACHk3C,GACEnE,EACAjD,EACAqH,EACAC,GAEM,KAARr3C,GAAgB8vC,GAA0B,EAAGC,GAC7C,MACF,KAAK,EAuDL,KAAK,GAiDL,QACEoH,GACEnE,EACAjD,EACAqH,EACAC,SArGJ,KAAK,EACHF,GACEnE,EACAjD,EACAqH,EACAC,GAEM,KAARr3C,IACIgzC,EAAe,KACjB,OAASjD,EAAajwC,YACnBkzC,EAAejD,EAAajwC,UAAUM,cAAc0vB,QACtDigB,EAAeA,EAAa3vC,cAAc0vB,SAC1BkjB,IACdjD,EAAangB,WACd,MAAQojB,GAAgBnjB,GAAamjB,KACzC,MACF,KAAK,GACH,GAAY,KAARhzC,EAAc,CAChBm3C,GACEnE,EACAjD,EACAqH,EACAC,GAEFrE,EAAejD,EAAarkC,UAC5B,IACE,IAAI6rC,EAAyBxH,EAAa5nB,cACxCkjB,EAAKkM,EAAuBlM,GAC5BmM,EAAeD,EAAuBC,aACxC,oBAAsBA,GACpBA,EACEnM,EACA,OAAS0E,EAAajwC,UAAY,QAAU,SAC5CkzC,EAAayE,uBACZ,EAEP,CAAE,MAAOxqB,GACPgjB,GAAwBF,EAAcA,EAAahwC,OAAQktB,EAC7D,CACF,MACEkqB,GACEnE,EACAjD,EACAqH,EACAC,GAEJ,MASF,KAAK,GACH,MACF,KAAK,GACHE,EAAyBxH,EAAarkC,UACtC2/B,EAAK0E,EAAajwC,UAClB,OAASiwC,EAAa3vC,cACmB,EAArCm3C,EAAuBhwB,YACrB4vB,GACEnE,EACAjD,EACAqH,EACAC,GAEFK,GAAwC1E,EAAcjD,GACnB,EAArCwH,EAAuBhwB,YACrB4vB,GACEnE,EACAjD,EACAqH,EACAC,IAEAE,EAAuBhwB,aAAe,EACxCowB,GACE3E,EACAjD,EACAqH,EACAC,EACA,KAAmC,MAA5BtH,EAAa3nB,gBAEpB,KAARpoB,GAAgBg3C,GAAmC3L,EAAI0E,GACvD,MACF,KAAK,GACHoH,GACEnE,EACAjD,EACAqH,EACAC,GAEM,KAARr3C,GACEk3C,GAA8BnH,EAAajwC,UAAWiwC,GAU9D,CACA,SAAS4H,GACPb,EACA7B,EACA2C,EACAC,EACAd,GAIA,IAFAA,EACEA,GAAgC,KAAkC,MAA3B9B,EAAY7sB,cAChD6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAC5D,IAAIjC,EAAe8D,EACjB/G,EAAekF,EACfmC,EAAiBQ,EACjBP,EAAuBQ,EACvB73C,EAAQ+vC,EAAa/vC,MACvB,OAAQ+vC,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACH03C,GACE3E,EACAjD,EACAqH,EACAC,EACAN,GAEFjH,GAA0B,EAAGC,GAC7B,MACF,KAAK,GACH,MACF,KAAK,GACH,IAAIrkB,EAAWqkB,EAAarkC,UAC5B,OAASqkC,EAAa3vC,cACK,EAAvBsrB,EAASnE,YACPowB,GACE3E,EACAjD,EACAqH,EACAC,EACAN,GAEFW,GACE1E,EACAjD,IAEFrkB,EAASnE,aAAe,EAC1BowB,GACE3E,EACAjD,EACAqH,EACAC,EACAN,IAENA,GACU,KAAR/2C,GACAg3C,GACEjH,EAAajwC,UACbiwC,GAEJ,MACF,KAAK,GACH4H,GACE3E,EACAjD,EACAqH,EACAC,EACAN,GAEFA,GACU,KAAR/2C,GACAk3C,GAA8BnH,EAAajwC,UAAWiwC,GACxD,MACF,QACE4H,GACE3E,EACAjD,EACAqH,EACAC,EACAN,GAGN9B,EAAcA,EAAYv0C,OAC5B,CACF,CACA,SAASg3C,GACPZ,EACA7B,GAEA,GAA+B,MAA3BA,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAC5D,IAAIjC,EAAe8D,EACjB/G,EAAekF,EACfj1C,EAAQ+vC,EAAa/vC,MACvB,OAAQ+vC,EAAa9vC,KACnB,KAAK,GACHy3C,GAAwC1E,EAAcjD,GAC9C,KAAR/vC,GACEg3C,GACEjH,EAAajwC,UACbiwC,GAEJ,MACF,KAAK,GACH2H,GAAwC1E,EAAcjD,GAC9C,KAAR/vC,GACEk3C,GAA8BnH,EAAajwC,UAAWiwC,GACxD,MACF,QACE2H,GAAwC1E,EAAcjD,GAE1DkF,EAAcA,EAAYv0C,OAC5B,CACJ,CACA,IAAIo3C,GAAsB,KAC1B,SAASC,GAAqC9C,GAC5C,GAAIA,EAAY7sB,aAAe0vB,GAC7B,IAAK7C,EAAcA,EAAYx0C,MAAO,OAASw0C,GAC7C+C,GAAiC/C,GAC9BA,EAAcA,EAAYv0C,OACnC,CACA,SAASs3C,GAAiCp4C,GACxC,OAAQA,EAAMK,KACZ,KAAK,GACH83C,GAAqCn4C,GACrCA,EAAMI,MAAQ83C,IACZ,OAASl4C,EAAMQ,eAqxIvB,SAAyBi1C,EAAenb,EAAU7kB,GAChD,GAAI,OAAS4iC,GAAgB,MAAM13C,MAAMtB,EAAuB,MAChE,IAAIs5B,EAAQ0f,GACZ,GACE,eAAiB/d,EAAS73B,OACzB,kBAAoBgT,EAAM6iC,QACzB,IAAOC,WAAW9iC,EAAM6iC,OAAOE,UACjC,KAAgC,EAAzBle,EAAS3B,MAAM0V,SACtB,CACA,GAAI,OAAS/T,EAASxO,SAAU,CAC9B,IAAI/O,EAAM07B,GAAYhjC,EAAMkO,MAC1BmI,EAAW2pB,EAAcI,cACvB6C,GAA6B37B,IAEjC,GAAI+O,EAWF,OATA,QADA2pB,EAAgB3pB,EAAS6sB,KAEvB,kBAAoBlD,GACpB,oBAAsBA,EAAc9kB,OACnCgI,EAAM2b,QACN3b,EAAQigB,GAAYze,KAAKxB,GAC1B8c,EAAc9kB,KAAKgI,EAAOA,IAC5B2B,EAAS3B,MAAM0V,SAAW,EAC1B/T,EAASxO,SAAWA,OACpB1f,GAAoB0f,GAGtBA,EAAW2pB,EAAc7iC,eAAiB6iC,EAC1ChgC,EAAQojC,GAA4BpjC,IACnCsH,EAAM+7B,GAAgB9nC,IAAI+L,KACzBg8B,GAA+BtjC,EAAOsH,GAExC3Q,GADA0f,EAAWA,EAASzV,cAAc,SAElC,IAAI2iC,EAAeltB,EACnBktB,EAAaL,GAAK,IAAIM,SAAQ,SAAUloB,EAASmoB,GAC/CF,EAAaG,OAASpoB,EACtBioB,EAAaI,QAAUF,CACzB,IACAzL,GAAqB3hB,EAAU,OAAQrW,GACvC6kB,EAASxO,SAAWA,CACtB,CACA,OAAS6M,EAAM0gB,cAAgB1gB,EAAM0gB,YAAc,IAAIntC,KACvDysB,EAAM0gB,YAAYvqC,IAAIwrB,EAAUmb,IAC/BA,EAAgBnb,EAAS3B,MAAM2gB,UAC9B,KAAgC,EAAzBhf,EAAS3B,MAAM0V,WACrB1V,EAAM2b,QACNha,EAAWse,GAAYze,KAAKxB,GAC7B8c,EAAcl/B,iBAAiB,OAAQ+jB,GACvCmb,EAAcl/B,iBAAiB,QAAS+jB,GAC5C,CACF,CAt0IQif,CACEhE,GACAv1C,EAAMQ,cACNR,EAAMuoB,eAEV,MACF,KAAK,EAqBL,QACE4vB,GAAqCn4C,SAnBvC,KAAK,EACL,KAAK,EACH,IAAIw5C,EAAwBjE,GAC5BA,GAAuBgB,GAAiBv2C,EAAM8L,UAAUyX,eACxD40B,GAAqCn4C,GACrCu1C,GAAuBiE,EACvB,MACF,KAAK,GACH,OAASx5C,EAAMQ,gBAEb,QADEg5C,EAAwBx5C,EAAME,YAEhC,OAASs5C,EAAsBh5C,eACzBg5C,EAAwBtB,GACzBA,GAAsB,SACvBC,GAAqCn4C,GACpCk4C,GAAsBsB,GACvBrB,GAAqCn4C,IAKjD,CACA,SAASy5C,GAAwBpE,GAC/B,IAAIqE,EAAgBrE,EAAYn1C,UAChC,GACE,OAASw5C,GAC6B,QAApCrE,EAAcqE,EAAc74C,OAC9B,CACA64C,EAAc74C,MAAQ,KACtB,GACG64C,EAAgBrE,EAAYv0C,QAC1Bu0C,EAAYv0C,QAAU,KACtBu0C,EAAcqE,QACZ,OAASrE,EAClB,CACF,CACA,SAASsE,GAAyCtE,GAChD,IAAI5sB,EAAY4sB,EAAY5sB,UAC5B,GAAI,KAA2B,GAApB4sB,EAAYj1C,OAAa,CAClC,GAAI,OAASqoB,EACX,IAAK,IAAI9oB,EAAI,EAAGA,EAAI8oB,EAAUhpB,OAAQE,IAAK,CACzC,IAAIijC,EAAgBna,EAAU9oB,GAC9BuzC,GAAatQ,EACbgX,GACEhX,EACAyS,EAEJ,CACFoE,GAAwBpE,EAC1B,CACA,GAA+B,MAA3BA,EAAY7sB,aACd,IAAK6sB,EAAcA,EAAYx0C,MAAO,OAASw0C,GAC7CwE,GAA4BxE,GACzBA,EAAcA,EAAYv0C,OACnC,CACA,SAAS+4C,GAA4B1J,GACnC,OAAQA,EAAa9vC,KACnB,KAAK,EACL,KAAK,GACL,KAAK,GACHs5C,GAAyCxJ,GACpB,KAArBA,EAAa/vC,OACXkwC,GAA4B,EAAGH,EAAcA,EAAahwC,QAC5D,MACF,KAAK,EAGL,KAAK,GAYL,QACEw5C,GAAyCxJ,SAV3C,KAAK,GACH,IAAIrkB,EAAWqkB,EAAarkC,UAC5B,OAASqkC,EAAa3vC,eACC,EAAvBsrB,EAASnE,cACR,OAASwoB,EAAahwC,QAAU,KAAOgwC,EAAahwC,OAAOE,MACtDyrB,EAASnE,cAAgB,EAC3BmyB,GAA4C3J,IAC5CwJ,GAAyCxJ,GAKnD,CACA,SAAS2J,GAA4CzE,GACnD,IAAI5sB,EAAY4sB,EAAY5sB,UAC5B,GAAI,KAA2B,GAApB4sB,EAAYj1C,OAAa,CAClC,GAAI,OAASqoB,EACX,IAAK,IAAI9oB,EAAI,EAAGA,EAAI8oB,EAAUhpB,OAAQE,IAAK,CACzC,IAAIijC,EAAgBna,EAAU9oB,GAC9BuzC,GAAatQ,EACbgX,GACEhX,EACAyS,EAEJ,CACFoE,GAAwBpE,EAC1B,CACA,IAAKA,EAAcA,EAAYx0C,MAAO,OAASw0C,GAAe,CAE5D,QADA5sB,EAAY4sB,GACMh1C,KAChB,KAAK,EACL,KAAK,GACL,KAAK,GACHiwC,GAA4B,EAAG7nB,EAAWA,EAAUtoB,QACpD25C,GAA4CrxB,GAC5C,MACF,KAAK,GAEa,GADhB9oB,EAAI8oB,EAAU3c,WACZ6b,cACEhoB,EAAEgoB,cAAgB,EACpBmyB,GAA4CrxB,IAC9C,MACF,QACEqxB,GAA4CrxB,GAEhD4sB,EAAcA,EAAYv0C,OAC5B,CACF,CACA,SAAS84C,GACPG,EACAvJ,GAEA,KAAO,OAAS0C,IAAc,CAC5B,IAAIlzC,EAAQkzC,GACZ,OAAQlzC,EAAMK,KACZ,KAAK,EACL,KAAK,GACL,KAAK,GACHiwC,GAA4B,EAAGtwC,EAAOwwC,GACtC,MACF,KAAK,GACL,KAAK,GACH,GACE,OAASxwC,EAAMQ,eACf,OAASR,EAAMQ,cAAcipC,UAC7B,CACA,IAAIvZ,EAAQlwB,EAAMQ,cAAcipC,UAAUhY,KAC1C,MAAQvB,GAASA,EAAMF,UACzB,CACA,MACF,KAAK,GACHC,GAAajwB,EAAMQ,cAAc0vB,OAGrC,GAAI,QADJA,EAAQlwB,EAAMa,OACOqvB,EAAM/vB,OAASH,EAASkzC,GAAahjB,OAExDxa,EAAG,IAAK1V,EAAQ+5C,EAAoB,OAAS7G,IAAc,CAEzD,IAAIpyC,GADJovB,EAAQgjB,IACYpyC,QAClBshC,EAAclS,EAAM/vB,OAEtB,GADA4zC,GAAwB7jB,GACpBA,IAAUlwB,EAAO,CACnBkzC,GAAa,KACb,MAAMx9B,CACR,CACA,GAAI,OAAS5U,EAAS,CACpBA,EAAQX,OAASiiC,EACjB8Q,GAAapyC,EACb,MAAM4U,CACR,CACAw9B,GAAa9Q,CACf,CACJ,CACF,CACA,IAAI4X,GAAyB,CACzBC,gBAAiB,SAAUC,GACzB,IAAIhqB,EAAQtB,GAAYa,IACtB0qB,EAAejqB,EAAMtsB,KAAKoN,IAAIkpC,GAIhC,YAHA,IAAWC,IACPA,EAAeD,IACjBhqB,EAAMtsB,KAAKkL,IAAIorC,EAAcC,IACxBA,CACT,GAEFC,GAAkB,oBAAsB9zB,QAAUA,QAAUpa,IAC5DwnB,GAAmB,EACnBtC,GAAqB,KACrBjhB,GAAiB,KACjBwkB,GAAgC,EAChC0lB,GAAgC,EAChCC,GAA4B,KAC5BC,IAA6C,EAC7CC,IAAmC,EACnCC,IAA0C,EAC1CvlB,GAAuB,EACvB2a,GAA+B,EAC/Bjb,GAAiC,EACjC8lB,GAA4C,EAC5CC,GAAgC,EAChCzP,GAA6B,EAC7BuD,GAAoC,EACpCmM,GAAqC,KACrCztB,GAAsC,KACtC0tB,IAAoD,EACpDpE,GAA+B,EAC/B3G,GAAqCgL,IACrCC,GAA4B,KAC5BrS,GAAyC,KACzCsS,GAAuB,EACvBC,GAAqB,KACrBC,GAAsB,KACtBC,GAAsB,EACtBC,GAA+B,EAC/BC,GAA4B,KAC5BC,GAA2B,KAC3BzzB,GAAoB,EACpBC,GAAwB,KAC1B,SAASwX,KACP,GAAI,KAA0B,EAAnB5L,KAAyB,IAAMiB,GACxC,OAAOA,IAAiCA,GAC1C,GAAI,OAASrxB,EAAqBq4B,EAAG,CAEnC,OAAO,IADetL,MAC2BS,IACnD,CACA,OAAO3mB,IACT,CACA,SAASw0B,KACP,IAAMuM,KACHA,GACC,KAAuC,UAAhCvW,KAA8ChiB,GACjDzJ,KACA,WACR,IAAIqyC,EAAkBzW,GAA2B3gC,QAEjD,OADA,OAASo3C,IAAoBA,EAAgBn7C,OAAS,IAC/C8qC,EACT,CACA,SAASpQ,GAAsB1yB,EAAMpI,EAAOgJ,IAEvCZ,IAASgpB,IACP,IAAMipB,IACL,IAAMA,KACV,OAASjyC,EAAKozC,sBAEdC,GAAkBrzC,EAAM,GACtBszC,GACEtzC,EACAusB,GACAuW,IACA,IAEN3hC,GAAkBnB,EAAMY,GACpB,KAA0B,EAAnB0qB,KAAyBtrB,IAASgpB,KAC3ChpB,IAASgpB,KACN,KAA0B,EAAnBsC,MACLgnB,IAA6C1xC,GAChD,IAAM6mC,IACJ6L,GACEtzC,EACAusB,GACAuW,IACA,IAEJyQ,GAAsBvzC,GAC5B,CACA,SAASwzC,GAAkBxG,EAAentC,EAAO4zC,GAC/C,GAAI,KAA0B,EAAnBnoB,IAAuB,MAAM/yB,MAAMtB,EAAuB,MAUrE,IATA,IAAIy8C,GACED,GACA,KAAe,IAAR5zC,IACP,KAAOA,EAAQmtC,EAAc2G,eAC/BlzC,GAA0BusC,EAAentC,GAC3C+zC,EAAaF,EAwcjB,SAA8B1zC,EAAMH,GAClC,IAAIg0C,EAAuBvoB,GAC3BA,IAAoB,EACpB,IAAIwoB,EAAiBC,KACnBC,EAAsBC,KACxBjrB,KAAuBhpB,GAAQusB,KAAkC1sB,GAC3D8yC,GAA4B,KAC7BjL,GAAqC1pC,KAAQ,IAC9Cq1C,GAAkBrzC,EAAMH,IACvBuyC,GAAmC3xC,GAClCT,EACAH,GAENyN,EAAG,WAEC,GAAI,IAAM2kC,IAAiC,OAASlqC,GAAgB,CAClElI,EAAQkI,GACR,IAAImsC,EAAchC,GAClBrkC,EAAG,OAAQokC,IACT,KAAK,EACHA,GAAgC,EAChCC,GAA4B,KAC5BiC,GAAuBn0C,EAAMH,EAAOq0C,EAAa,GACjD,MACF,KAAK,EACL,KAAK,EACH,GAAItqB,GAAmBsqB,GAAc,CACnCjC,GAAgC,EAChCC,GAA4B,KAC5BkC,GAA0Bv0C,GAC1B,KACF,CACAA,EAAQ,WACL,IAAMoyC,IACL,IAAMA,IACNjpB,KAAuBhpB,IACtBiyC,GAAgC,GACnCsB,GAAsBvzC,EACxB,EACAk0C,EAAY3rB,KAAK1oB,EAAOA,GACxB,MAAMyN,EACR,KAAK,EACH2kC,GAAgC,EAChC,MAAM3kC,EACR,KAAK,EACH2kC,GAAgC,EAChC,MAAM3kC,EACR,KAAK,EACHsc,GAAmBsqB,IACbjC,GAAgC,EACjCC,GAA4B,KAC7BkC,GAA0Bv0C,KACxBoyC,GAAgC,EACjCC,GAA4B,KAC7BiC,GAAuBn0C,EAAMH,EAAOq0C,EAAa,IACrD,MACF,KAAK,EACH,IAAIhiB,EAAW,KACf,OAAQnqB,GAAe9P,KACrB,KAAK,GACHi6B,EAAWnqB,GAAe3P,cAC5B,KAAK,EACL,KAAK,GACH,IAAIi8C,EAAYtsC,GAChB,IAAImqB,GAAWgU,GAAgBhU,GAAe,CAC5C+f,GAAgC,EAChCC,GAA4B,KAC5B,IAAIx5C,EAAU27C,EAAU37C,QACxB,GAAI,OAASA,EAASqP,GAAiBrP,MAClC,CACH,IAAIshC,EAAcqa,EAAUt8C,OAC5B,OAASiiC,GACHjyB,GAAiBiyB,EACnBsa,GAAmBta,IAClBjyB,GAAiB,IACxB,CACA,MAAM8F,CACR,EAEJokC,GAAgC,EAChCC,GAA4B,KAC5BiC,GAAuBn0C,EAAMH,EAAOq0C,EAAa,GACjD,MACF,KAAK,EACHjC,GAAgC,EAChCC,GAA4B,KAC5BiC,GAAuBn0C,EAAMH,EAAOq0C,EAAa,GACjD,MACF,KAAK,EACHK,KACA9M,GAA+B,EAC/B,MAAMn6B,EACR,QACE,MAAM/U,MAAMtB,EAAuB,MAEzC,CACAu9C,KACA,KACF,CAAE,MAAOC,GACPC,GAAY10C,EAAMy0C,EACpB,CAMF,OAJArvB,GAAwBD,GAA4B,KACpDjqB,EAAqBizB,EAAI2lB,EACzB54C,EAAqBy5C,EAAIX,EACzB1oB,GAAmBuoB,EACf,OAAS9rC,GAAuB,GACpCihB,GAAqB,KACrBuD,GAAgC,EAChC9N,KACOgpB,GACT,CAtjBQmN,CAAqB5H,EAAentC,GACpCg1C,GAAe7H,EAAentC,GAAO,GACzCi1C,EAAsBpB,IACrB,CACD,GAAI,IAAME,EAAY,CACpBxB,KACGsB,GACDJ,GAAkBtG,EAAentC,EAAO,GAAG,GAC7C,KACF,CAEE,GADA4zC,EAAYzG,EAAcjxC,QAAQjE,WAEhCg9C,GACCC,GAAqCtB,GAFxC,CAQA,GAAI,IAAMG,EAAY,CAEpB,GADAkB,EAAsBj1C,EAClBmtC,EAAcgI,2BAA6BF,EAC7C,IAAI53C,EAA2B,OAG5BA,EACC,KAFHA,GAAyD,UAA9B8vC,EAAc7sC,cAGlCjD,EAC2B,UAA3BA,EACE,UACA,EACZ,GAAI,IAAMA,EAA0B,CAClC2C,EAAQ3C,EACRoQ,EAAG,CACD,IAAItN,EAAOgtC,EACX4G,EAAapB,GACb,IAAIyC,EAAoBj1C,EAAKjE,QAAQ3D,cAAc8sC,aAQnD,GAPA+P,IACG5B,GAAkBrzC,EAAM9C,GAA0BlF,OAAS,KAM1D,KALJkF,EAA2B23C,GACzB70C,EACA9C,GACA,IAEkC,CAClC,GACEm1C,KACC4C,EACD,CACAj1C,EAAKg1C,4BAA8BF,EACnCxC,IACEwC,EACFlB,EAAa,EACb,MAAMtmC,CACR,CACAwnC,EAAsB/vB,GACtBA,GAAsC6uB,EACtC,OAASkB,IACN,OAAS/vB,GACLA,GAAsC+vB,EACvC/vB,GAAoC7oB,KAAK8oB,MACvCD,GACA+vB,GAEV,CACAlB,EAAa12C,CACf,CAEA,GADA43C,GAAsB,EAClB,IAAMlB,EAAY,QACxB,CACF,CACA,GAAI,IAAMA,EAAY,CACpBP,GAAkBrG,EAAe,GACjCsG,GAAkBtG,EAAentC,EAAO,GAAG,GAC3C,KACF,CACAyN,EAAG,CAGD,OAFAomC,EAAkB1G,EAClB8H,EAAsBlB,GAEpB,KAAK,EACL,KAAK,EACH,MAAMr7C,MAAMtB,EAAuB,MACrC,KAAK,EACH,IAAa,QAAR4I,KAAqBA,EAAO,MACnC,KAAK,EACHyzC,GACEI,EACA7zC,EACAijC,IACCqP,IAEH,MAAM7kC,EACR,KAAK,EACHyX,GAAsC,KACtC,MACF,KAAK,EACL,KAAK,EACH,MACF,QACE,MAAMxsB,MAAMtB,EAAuB,MAEvC,IACW,SAAR4I,KAAsBA,GAEvB,IADE+zC,EAAavF,GAA+B,IAAMrwC,MAFtD,CAWE,GANAs1C,GACEI,EACA7zC,EACAijC,IACCqP,IAEC,IAAMpyC,GAAa2zC,EAAiB,GAAG,GAAK,MAAMpmC,EACtDomC,EAAgBwB,cAAgBC,GAC9BC,GAAoBrjB,KAClB,KACA2hB,EACAD,EACA1uB,GACA4tB,GACAF,GACA5yC,EACAijC,GACAwP,GACAjM,GACA8L,GACA2C,EACA,GACC,EACD,GAEFlB,EAGJ,MACAwB,GACE1B,EACAD,EACA1uB,GACA4tB,GACAF,GACA5yC,EACAijC,GACAwP,GACAjM,GACA8L,GACA2C,EACA,GACC,EACD,EAEJ,CAEF,KAxIE,CAHElB,EAAaiB,GAAe7H,EAAentC,GAAO,GAClDi1C,GAAsB,CA2I5B,CACAvB,GAAsBvG,EACxB,CACA,SAASoI,GACPp1C,EACA+nC,EACAsN,EACAC,EACAC,EACA11C,EACAyB,EACAk0C,EACAC,EACAC,EACA9B,EACA+B,EACAC,EACAC,GAIA,GAFA71C,EAAKk1C,eAAiB,GAGI,MAF1BS,EAAwB5N,EAAa3nB,eAGnC,YAAsC,SAAxBu1B,MAGV1F,GAAiB,CAAEgB,YAAa,KAAM/E,MAAO,EAAG4J,UAAWC,IAC7D/F,GAAiCjI,GAEjC,QADC4N,EAi4HP,WACE,GAAI,OAAS1F,GAAgB,MAAM13C,MAAMtB,EAAuB,MAChE,IAAIs5B,EAAQ0f,GAIZ,OAHA1f,EAAM0gB,aACJ,IAAM1gB,EAAM2b,OACZ8J,GAA2BzlB,EAAOA,EAAM0gB,aACnC,EAAI1gB,EAAM2b,MACb,SAAU+J,GACR,IAAIC,EAAkBvW,YAAW,WAG/B,GAFApP,EAAM0gB,aACJ+E,GAA2BzlB,EAAOA,EAAM0gB,aACtC1gB,EAAMulB,UAAW,CACnB,IAAIA,EAAYvlB,EAAMulB,UACtBvlB,EAAMulB,UAAY,KAClBA,GACF,CACF,GAAG,KAEH,OADAvlB,EAAMulB,UAAYG,EACX,WACL1lB,EAAMulB,UAAY,KAClBK,aAAaD,EACf,CACF,EACA,IACN,CAz5H+BE,KAsBzB,OAnBAp2C,EAAKozC,oBAAsBuC,EACzBU,GAAWtkB,KACT,KACA/xB,EACA+nC,EACAloC,EACAw1C,EACAC,EACAC,EACAj0C,EACAk0C,EACAC,EACA7B,EACA,EACAgC,EACAC,SAGJvC,GAAkBtzC,EAAMH,EAAOyB,GAAco0C,GAGjDW,GACEr2C,EACA+nC,EACAloC,EACAw1C,EACAC,EACAC,EACAj0C,EACAk0C,EACAC,EAEJ,CACA,SAASV,GAAqChN,GAC5C,IAAK,IAAItwC,EAAOswC,IAAkB,CAChC,IAAI9vC,EAAMR,EAAKQ,IACf,IACG,IAAMA,GAAO,KAAOA,GAAO,KAAOA,IACtB,MAAbR,EAAKO,QAEL,QADEC,EAAMR,EAAKyoB,cACwB,QAAnBjoB,EAAMA,EAAI62B,SAE5B,IAAK,IAAIv3B,EAAI,EAAGA,EAAIU,EAAIZ,OAAQE,IAAK,CACnC,IAAI++C,EAAQr+C,EAAIV,GACdk6B,EAAc6kB,EAAM7kB,YACtB6kB,EAAQA,EAAMn6C,MACd,IACE,IAAK2d,GAAS2X,IAAe6kB,GAAQ,OAAO,CAC9C,CAAE,MAAOrxB,GACP,OAAO,CACT,CACF,CAEF,GADAhtB,EAAMR,EAAKgB,MACa,MAApBhB,EAAK2oB,cAAwB,OAASnoB,EACvCA,EAAIF,OAASN,EAAQA,EAAOQ,MAC1B,CACH,GAAIR,IAASswC,EAAc,MAC3B,KAAO,OAAStwC,EAAKiB,SAAW,CAC9B,GAAI,OAASjB,EAAKM,QAAUN,EAAKM,SAAWgwC,EAAc,OAAO,EACjEtwC,EAAOA,EAAKM,MACd,CACAN,EAAKiB,QAAQX,OAASN,EAAKM,OAC3BN,EAAOA,EAAKiB,OACd,CACF,CACA,OAAO,CACT,CACA,SAAS46C,GACPtzC,EACAK,EACAiB,EACAi1C,GAEAl2C,IAAmBkyC,GACnBlyC,IAAmBiyC,GACnBtyC,EAAKK,gBAAkBA,EACvBL,EAAKM,cAAgBD,EACrBk2C,IAAyBv2C,EAAKO,WAAaF,GAC3Ck2C,EAAuBv2C,EAAKw2C,gBAC5B,IAAK,IAAI32C,EAAQQ,EAAgB,EAAIR,GAAS,CAC5C,IAAI42C,EAAU,GAAKl3C,GAAMM,GACvBe,EAAO,GAAK61C,EACdF,EAAqBE,IAAY,EACjC52C,IAAUe,CACZ,CACA,IAAMU,GACJD,GAAwBrB,EAAMsB,EAAajB,EAC/C,CACA,SAASyN,KACP,OAAO,KAA0B,EAAnBwd,MACTorB,GAA8B,GAAG,IAAK,EAE7C,CACA,SAASnC,KACP,GAAI,OAASxsC,GAAgB,CAC3B,GAAI,IAAMkqC,GACR,IAAIpK,EAAkB9/B,GAAehQ,YAGlCqtB,GAAwBD,GAA4B,KACrDsK,GAFDoY,EAAkB9/B,IAGhBgiB,GAAgB,KAChB6P,GAAuB,EACvBiO,EAAkB9/B,GACvB,KAAO,OAAS8/B,GACdD,GAAsBC,EAAgB/vC,UAAW+vC,GAC9CA,EAAkBA,EAAgB9vC,OACvCgQ,GAAiB,IACnB,CACF,CACA,SAASsrC,GAAkBrzC,EAAMH,GAC/B,IAAIq1C,EAAgBl1C,EAAKk1C,eACxB,IAAMA,IACHl1C,EAAKk1C,eAAiB,EAAIyB,GAAczB,IAE5C,QADAA,EAAgBl1C,EAAKozC,uBAEjBpzC,EAAKozC,oBAAsB,KAAO8B,KACtCX,KACAvrB,GAAqBhpB,EACrB+H,GAAiBmtC,EAAgBx0B,GAAqB1gB,EAAKjE,QAAS,MACpEwwB,GAAgC1sB,EAChCoyC,GAAgC,EAChCC,GAA4B,KAC5BC,IAA6C,EAC7CC,GAAmC3xC,GAA0BT,EAAMH,GACnEwyC,IAA0C,EAC1ChM,GACEvD,GACAyP,GACAD,GACA9lB,GACAib,GACE,EACJ1iB,GAAsCytB,GACpC,KACFC,IAAoD,EACpD,KAAe,EAAR5yC,KAAeA,GAAiB,GAARA,GAC/B,IAAI+2C,EAAoB52C,EAAKuB,eAC7B,GAAI,IAAMq1C,EACR,IACE52C,EAAOA,EAAKyB,cAAem1C,GAAqB/2C,EAChD,EAAI+2C,GAEJ,CACA,IAAIC,EAAU,GAAKt3C,GAAMq3C,GACvBh2C,EAAO,GAAKi2C,EACdh3C,GAASG,EAAK62C,GACdD,IAAsBh2C,CACxB,CAGF,OAFAksB,GAAuBjtB,EACvB4e,KACOy2B,CACT,CACA,SAASR,GAAY10C,EAAMk0C,GACzBhnB,GAA0B,KAC1BhyB,EAAqBizB,EAAIK,GACzB0lB,IAAgB1qB,IAAqB0qB,IAAgBxqB,IAC/CwqB,EAAc3pB,KACf0nB,GAAgC,GACjCiC,IAAgBzqB,IACZyqB,EAAc3pB,KACf0nB,GAAgC,GAChCA,GACCiC,IAAgB3T,GACZ,EACA,OAAS2T,GACP,kBAAoBA,GACpB,oBAAsBA,EAAY3rB,KAClC,EACA,EACd2pB,GAA4BgC,EAC5B,OAASnsC,KACL0/B,GAA+B,EACjCnI,GACEt/B,EACAme,GAA2B+1B,EAAal0C,EAAKjE,UAEnD,CACA,SAASg4C,KACP,IAAID,EAAiB54C,EAAqBizB,EAE1C,OADAjzB,EAAqBizB,EAAIK,GAClB,OAASslB,EAAiBtlB,GAAwBslB,CAC3D,CACA,SAASG,KACP,IAAID,EAAsB94C,EAAqBy5C,EAE/C,OADAz5C,EAAqBy5C,EAAI/C,GAClBoC,CACT,CACA,SAASlQ,KACP2D,GAA+B,EAC/B0K,KACoC,QAAhC5lB,MACAA,IACA,OAASmQ,GAA2B3gC,UACrCq2C,IAAmC,GACrC,KAAwC,UAAjC5lB,KACN,KAAmD,UAA5C8lB,KACP,OAAStpB,IACTsqB,GACEtqB,GACAuD,GACAuW,IACA,EAEN,CACA,SAAS+R,GAAe70C,EAAMH,EAAOi3C,GACnC,IAAIjD,EAAuBvoB,GAC3BA,IAAoB,EACpB,IAAIwoB,EAAiBC,KACnBC,EAAsBC,KACpBjrB,KAAuBhpB,GAAQusB,KAAkC1sB,IAClE8yC,GAA4B,KAAOU,GAAkBrzC,EAAMH,IAC9DA,GAAQ,EACR,IAAI+zC,EAAanM,GACjBn6B,EAAG,WAEC,GAAI,IAAM2kC,IAAiC,OAASlqC,GAAgB,CAClE,IAAIgvC,EAAahvC,GACfmsC,EAAchC,GAChB,OAAQD,IACN,KAAK,EACHsC,KACAX,EAAa,EACb,MAAMtmC,EACR,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAASovB,GAA2B3gC,UAAY8D,GAAQ,GACxD,IAAIoqB,EAASgoB,GAIb,GAHAA,GAAgC,EAChCC,GAA4B,KAC5BiC,GAAuBn0C,EAAM+2C,EAAY7C,EAAajqB,GAEpD6sB,GACA1E,GACA,CACAwB,EAAa,EACb,MAAMtmC,CACR,CACA,MACF,QACG2c,EAASgoB,GACPA,GAAgC,EAChCC,GAA4B,KAC7BiC,GAAuBn0C,EAAM+2C,EAAY7C,EAAajqB,GAE9D,CACA+sB,KACApD,EAAanM,GACb,KACF,CAAE,MAAOwP,GACPvC,GAAY10C,EAAMi3C,EACpB,CAWF,OATAp3C,GAASG,EAAKkqB,sBACd9E,GAAwBD,GAA4B,KACpDmG,GAAmBuoB,EACnB34C,EAAqBizB,EAAI2lB,EACzB54C,EAAqBy5C,EAAIX,EACzB,OAASjsC,KACLihB,GAAqB,KACtBuD,GAAgC,EACjC9N,MACKm1B,CACT,CACA,SAASoD,KACP,KAAO,OAASjvC,IAAkBmvC,GAAkBnvC,GACtD,CAiHA,SAASysC,KACP,KAAO,OAASzsC,KAAmBnK,KACjCs5C,GAAkBnvC,GACtB,CACA,SAASmvC,GAAkBH,GACzB,IAAIl4B,EAAOimB,GAAUiS,EAAWj/C,UAAWi/C,EAAYjqB,IACvDiqB,EAAW52B,cAAgB42B,EAAWl3B,aACtC,OAAShB,EAAOy1B,GAAmByC,GAAehvC,GAAiB8W,CACrE,CACA,SAASu1B,GAA0B2C,GACjC,IAAIl4B,EAAOk4B,EACPh7C,EAAU8iB,EAAK/mB,UACnB,OAAQ+mB,EAAK5mB,KACX,KAAK,GACL,KAAK,EACH4mB,EAAO2iB,GACLzlC,EACA8iB,EACAA,EAAKgB,aACLhB,EAAKxkB,UACL,EACAkyB,IAEF,MACF,KAAK,GACH1N,EAAO2iB,GACLzlC,EACA8iB,EACAA,EAAKgB,aACLhB,EAAKxkB,KAAKM,OACVkkB,EAAKoB,IACLsM,IAEF,MACF,KAAK,EACHkD,GAAmB5Q,GACrB,QACE+oB,GAAsB7rC,EAAS8iB,GAG5BA,EAAOimB,GAAU/oC,EAFjB8iB,EAAO9W,GACN6Y,GAAoB/B,EAAMiO,IACKA,IAEvCiqB,EAAW52B,cAAgB42B,EAAWl3B,aACtC,OAAShB,EAAOy1B,GAAmByC,GAAehvC,GAAiB8W,CACrE,CACA,SAASs1B,GACPn0C,EACA+2C,EACA7C,EACAiD,GAEA/xB,GAAwBD,GAA4B,KACpDsK,GAAmBsnB,GACnBhtB,GAAgB,KAChB6P,GAAuB,EACvB,IAAII,EAAc+c,EAAWh/C,OAC7B,IACE,GA37JJ,SACEiI,EACAg6B,EACA7a,EACAhjB,EACAi7C,GAGA,GADAj4B,EAAYnnB,OAAS,MAEnB,OAASmE,GACT,kBAAoBA,GACpB,oBAAsBA,EAAMosB,KAC5B,CAUA,GARA,QADAyR,EAAc7a,EAAYrnB,YAExBmuB,GACE+T,EACA7a,EACAi4B,GACA,GAGA,QADJj4B,EAAcud,GAA2B3gC,SACf,CACxB,OAAQojB,EAAYlnB,KAClB,KAAK,GACH,OACE,OAAS0kC,GACLmH,KACA,OAAS3kB,EAAYrnB,WACrB,IAAM2vC,KACLA,GAA+B,GACnCtoB,EAAYnnB,QAAU,IACtBmnB,EAAYnnB,OAAS,MACrBmnB,EAAYtf,MAAQu3C,EACrBj7C,IAAUwtB,GACLxK,EAAYnnB,OAAS,OAEtB,QADEgiC,EAAc7a,EAAYe,aAEvBf,EAAYe,YAAc,IAAIhc,IAAI,CAAC/H,IACpC69B,EAAYx1B,IAAIrI,GACpBk7C,GAAmBr3C,EAAM7D,EAAOi7C,KACpC,EAEJ,KAAK,GACH,OACGj4B,EAAYnnB,OAAS,MACtBmE,IAAUwtB,GACLxK,EAAYnnB,OAAS,OAEtB,QADEgiC,EAAc7a,EAAYe,cAEtB8Z,EAAc,CACdsb,YAAa,KACbgC,gBAAiB,KACjBlR,WAAY,IAAIliC,IAAI,CAAC/H,KAEtBgjB,EAAYe,YAAc8Z,GAE3B,QADE7a,EAAc6a,EAAYoM,YAEvBpM,EAAYoM,WAAa,IAAIliC,IAAI,CAAC/H,IACnCgjB,EAAY3a,IAAIrI,GACxBk7C,GAAmBr3C,EAAM7D,EAAOi7C,KACpC,EAGN,MAAM7+C,MAAMtB,EAAuB,IAAKkoB,EAAYlnB,KACtD,CAGA,OAFAo/C,GAAmBr3C,EAAM7D,EAAOi7C,GAChCtT,MACO,CACT,CACA,GAAIv5B,GACF,OAEE,QADCyvB,EAAc0C,GAA2B3gC,UAErC,KAA2B,MAApBi+B,EAAYhiC,SAAmBgiC,EAAYhiC,OAAS,KAC3DgiC,EAAYhiC,OAAS,MACrBgiC,EAAYn6B,MAAQu3C,EACrBj7C,IAAUmnB,IAERE,GAAoBrF,GADlBne,EAAOzH,MAAMtB,EAAuB,KAAM,CAAEsgD,MAAOp7C,IACAgjB,MACtDhjB,IAAUmnB,IAITE,GACErF,GAJA6b,EAAczhC,MAAMtB,EAAuB,KAAM,CACjDsgD,MAAOp7C,IAGiCgjB,KAE3Cnf,EAAOA,EAAKjE,QAAQjE,WACfE,OAAS,MACdo/C,IAAoBA,EACpBp3C,EAAKH,OAASu3C,EACdj7C,EAAQgiB,GAA2BhiB,EAAOgjB,GAM3CsM,GAAsBzrB,EALrBo3C,EAAkBnX,GACjBjgC,EAAK0D,UACLvH,EACAi7C,IAGF,IAAM3P,KACHA,GAA+B,KACtC,EAEJ,IAAI+P,EAAej/C,MAAMtB,EAAuB,KAAM,CAAEsgD,MAAOp7C,IAM/D,GALAq7C,EAAer5B,GAA2Bq5B,EAAcr4B,GACxD,OAASqzB,GACJA,GAAqC,CAACgF,GACvChF,GAAmCt2C,KAAKs7C,GAC5C,IAAM/P,KAAiCA,GAA+B,GAClE,OAASzN,EAAa,OAAO,EACjC79B,EAAQgiB,GAA2BhiB,EAAOgjB,GAC1CA,EAAc6a,EACd,EAAG,CACD,OAAQ7a,EAAYlnB,KAClB,KAAK,EACH,OACGknB,EAAYnnB,OAAS,MACrBgI,EAAOo3C,GAAmBA,EAC1Bj4B,EAAYtf,OAASG,EAEtByrB,GAAsBtM,EADrBnf,EAAOigC,GAAsB9gB,EAAYzb,UAAWvH,EAAO6D,KAE5D,EAEJ,KAAK,EACH,GACIg6B,EAAc7a,EAAY9kB,KAC3Bm9C,EAAer4B,EAAYzb,UAC5B,KAA2B,IAApByb,EAAYnnB,SAChB,oBAAsBgiC,EAAYoG,0BAChC,OAASoX,GACR,oBAAsBA,EAAanX,oBAClC,OAASC,KACPA,GAAuCr0B,IAAIurC,KAEpD,OACGr4B,EAAYnnB,OAAS,MACrBo/C,IAAoBA,EACpBj4B,EAAYtf,OAASu3C,EAEtBjX,GADCiX,EAAkBlX,GAAuBkX,GAGxCp3C,EACAmf,EACAhjB,GAEFsvB,GAAsBtM,EAAai4B,IACnC,EAGRj4B,EAAcA,EAAYpnB,MAC5B,OAAS,OAASonB,GAClB,OAAO,CACT,CAqyJMs4B,CACEz3C,EACAg6B,EACA+c,EACA7C,EACA3nB,IASF,OANAkb,GAA+B,EAC/BnI,GACEt/B,EACAme,GAA2B+1B,EAAal0C,EAAKjE,eAE/CgM,GAAiB,KAGrB,CAAE,MAAOkd,GACP,GAAI,OAAS+U,EAAa,MAAQjyB,GAAiBiyB,EAAc/U,EAOjE,OANAwiB,GAA+B,EAC/BnI,GACEt/B,EACAme,GAA2B+1B,EAAal0C,EAAKjE,eAE/CgM,GAAiB,KAEnB,CACuB,MAAnBgvC,EAAW/+C,OACTuS,IAAe,IAAM4sC,EAAiBn3C,GAAO,EAE/CoyC,IACA,KAAuC,UAAhC7lB,IAEPvsB,GAAO,GAELmyC,GAA6CnyC,GAAO,GACtD,IAAMm3C,GACJ,IAAMA,GACN,IAAMA,GACN,IAAMA,KAGN,QADDA,EAAkBza,GAA2B3gC,UAE1C,KAAOo7C,EAAgBl/C,MACtBk/C,EAAgBn/C,OAAS,SAChC0/C,GAAiBX,EAAY/2C,IACxBs0C,GAAmByC,EAC5B,CACA,SAASzC,GAAmByC,GAC1B,IAAIpQ,EAAgBoQ,EACpB,EAAG,CACD,GAAI,KAA6B,MAAtBpQ,EAAc3uC,OAKvB,YAJA0/C,GACE/Q,EACAwL,IAIJ4E,EAAapQ,EAAc5uC,OAC3B,IAAI8mB,EAAOkoB,GACTJ,EAAc7uC,UACd6uC,EACA7Z,IAEF,GAAI,OAASjO,EAEX,YADA9W,GAAiB8W,GAInB,GAAI,QADJ8nB,EAAgBA,EAAcjuC,SAG5B,YADAqP,GAAiB4+B,GAGnB5+B,GAAiB4+B,EAAgBoQ,CACnC,OAAS,OAASpQ,GAClB,IAAMc,KAAiCA,GAA+B,EACxE,CACA,SAASiQ,GAAiBX,EAAYY,GACpC,EAAG,CACD,IAAI94B,EAAO8oB,GAAWoP,EAAWj/C,UAAWi/C,GAC5C,GAAI,OAASl4B,EAGX,OAFAA,EAAK7mB,OAAS,WACd+P,GAAiB8W,GAMnB,GAFA,QADAA,EAAOk4B,EAAWh/C,UAEd8mB,EAAK7mB,OAAS,MAAS6mB,EAAKuB,aAAe,EAAKvB,EAAKwB,UAAY,OAElEs3B,GACmC,QAAlCZ,EAAaA,EAAWr+C,SAG1B,YADAqP,GAAiBgvC,GAGnBhvC,GAAiBgvC,EAAal4B,CAChC,OAAS,OAASk4B,GAClBtP,GAA+B,EAC/B1/B,GAAiB,IACnB,CACA,SAASsuC,GACPr2C,EACA+nC,EACAloC,EACAw1C,EACAC,EACAC,EACAj0C,EACAk0C,EACAC,GAEAz1C,EAAKozC,oBAAsB,KAC3B,GAAGwE,WACI,IAAMhF,IACb,GAAI,KAA0B,EAAnBtnB,IAAuB,MAAM/yB,MAAMtB,EAAuB,MACrE,GAAI,OAAS8wC,EAAc,CACzB,GAAIA,IAAiB/nC,EAAKjE,QAAS,MAAMxD,MAAMtB,EAAuB,MA8BtE,GA7BAs+C,EAA8BxN,EAAaloC,MAAQkoC,EAAazoB,WArxUpE,SACEtf,EACA63C,EACAC,EACAx2C,EACAk0C,EACAC,GAEA,IAAIsC,EAAyB/3C,EAAKG,aAClCH,EAAKG,aAAe23C,EACpB93C,EAAKK,eAAiB,EACtBL,EAAKM,YAAc,EACnBN,EAAKO,UAAY,EACjBP,EAAK2zC,cAAgBmE,EACrB93C,EAAKuB,gBAAkBu2C,EACvB93C,EAAKg1C,4BAA8B8C,EACnC93C,EAAKkqB,oBAAsB,EAC3B,IAAIzoB,EAAgBzB,EAAKyB,cACvB+0C,EAAkBx2C,EAAKw2C,gBACvBh3B,EAAgBxf,EAAKwf,cACvB,IACEs4B,EAAiBC,GAA0BD,EAC3C,EAAIA,GAEJ,CACA,IAAIE,EAAU,GAAKz4C,GAAMu4C,GACvBl3C,EAAO,GAAKo3C,EACdv2C,EAAcu2C,GAAW,EACzBxB,EAAgBwB,IAAY,EAC5B,IAAIC,EAAuBz4B,EAAcw4B,GACzC,GAAI,OAASC,EACX,IACEz4B,EAAcw4B,GAAW,KAAMA,EAAU,EACzCA,EAAUC,EAAqB5gD,OAC/B2gD,IACA,CACA,IAAIp5B,EAASq5B,EAAqBD,GAClC,OAASp5B,IAAWA,EAAOhe,OAAS,UACtC,CACFk3C,IAAmBl3C,CACrB,CACA,IAAMU,GAAeD,GAAwBrB,EAAMsB,EAAa,GAChE,IAAMm0C,GACJ,IAAMD,GACN,IAAMx1C,EAAK/H,MACV+H,EAAKK,gBACJo1C,IAAwBsC,GAA0BF,GACxD,CAwuUIK,CACEl4C,EACAH,EAHF01C,GAA+B/2B,GAK7Bld,EACAk0C,EACAC,GAEFz1C,IAASgpB,KACLjhB,GAAiBihB,GAAqB,KACvCuD,GAAgC,GACnCumB,GAAsB/K,EACtB8K,GAAqB7yC,EACrB+yC,GAAsBlzC,EACtBmzC,GAA+BuC,EAC/BtC,GAA4BqC,EAC5BpC,GAA2BmC,EAC3B,KAAmC,MAA5BtN,EAAa3nB,eACpB,KAA4B,MAArB2nB,EAAa/vC,QACdgI,EAAKm4C,aAAe,KACrBn4C,EAAKo4C,iBAAmB,EAmZxB56C,EAlZkBgB,IAAkB,WAEnC,OADA65C,KACO,IACT,MACEr4C,EAAKm4C,aAAe,KAAQn4C,EAAKo4C,iBAAmB,GAC1D/C,EAAoB,KAA4B,MAArBtN,EAAa/vC,OACpC,KAAmC,MAA5B+vC,EAAa3nB,eAAyBi1B,EAAmB,CAClEA,EAAoBn6C,EAAqBq4B,EACzCr4B,EAAqBq4B,EAAI,KACzB+hB,EAAcl6C,EAAwB6G,EACtC7G,EAAwB6G,EAAI,EAC5BX,EAAcgqB,GACdA,IAAoB,EACpB,KA78EN,SAAqCtrB,EAAMuL,GAIzC,GAHAvL,EAAOA,EAAKmb,cACZm9B,GAAgBC,GAEZ/8B,GADJxb,EAAOkb,GAAqBlb,IACQ,CAClC,GAAI,mBAAoBA,EACtB,IAAIukB,EAAkB,CACpB/V,MAAOxO,EAAK+b,eACZtN,IAAKzO,EAAKgc,mBAGZ1O,EAAG,CAKD,IAAIkrC,GAJJj0B,GACIA,EAAkBvkB,EAAKwK,gBACvB+Z,EAAgBnJ,aAClBlZ,QAEgBga,cAAgBqI,EAAgBrI,eAClD,GAAIs8B,GAAa,IAAMA,EAAUC,WAAY,CAC3Cl0B,EAAkBi0B,EAAUv8B,WAC5B,IAAIE,EAAeq8B,EAAUr8B,aAC3BC,EAAYo8B,EAAUp8B,UACxBo8B,EAAYA,EAAUn8B,YACtB,IACEkI,EAAgB7sB,SAAU0kB,EAAU1kB,QACtC,CAAE,MAAOghD,GACPn0B,EAAkB,KAClB,MAAMjX,CACR,CACA,IAAIjW,EAAS,EACXmX,GAAS,EACTC,GAAO,EACPkqC,EAAoB,EACpBC,EAAmB,EACnBnhD,EAAOuI,EACPqD,EAAa,KACfwK,EAAG,OAAS,CACV,IAAK,IAAIgR,EACPpnB,IAAS8sB,GACN,IAAMpI,GAAgB,IAAM1kB,EAAKC,WACjC8W,EAAQnX,EAAS8kB,GACpB1kB,IAAS2kB,GACN,IAAMo8B,GAAa,IAAM/gD,EAAKC,WAC9B+W,EAAMpX,EAASmhD,GAClB,IAAM/gD,EAAKC,WAAaL,GAAUI,EAAKgU,UAAUpU,QAC7C,QAAUwnB,EAAOpnB,EAAK8T,aAC1BlI,EAAa5L,EACbA,EAAOonB,EAET,OAAS,CACP,GAAIpnB,IAASuI,EAAM,MAAM6N,EAOzB,GANAxK,IAAekhB,KACXo0B,IAAsBx8B,IACvB3N,EAAQnX,GACXgM,IAAe+Y,KACXw8B,IAAqBJ,IACtB/pC,EAAMpX,GACL,QAAUwnB,EAAOpnB,EAAKmjB,aAAc,MAExCvX,GADA5L,EAAO4L,GACWA,UACpB,CACA5L,EAAOonB,CACT,CACA0F,GACG,IAAM/V,IAAU,IAAMC,EAAM,KAAO,CAAED,MAAOA,EAAOC,IAAKA,EAC7D,MAAO8V,EAAkB,IAC3B,CACFA,EAAkBA,GAAmB,CAAE/V,MAAO,EAAGC,IAAK,EACxD,MAAO8V,EAAkB,KAGzB,IAFAs0B,GAAuB,CAAEC,YAAa94C,EAAM+4C,eAAgBx0B,GAC5Dg0B,IAAW,EACNzN,GAAav/B,EAAY,OAASu/B,IACrC,GAEG9qC,GADCuL,EAAau/B,IACIryC,MACnB,KAAiC,KAA1B8S,EAAW6U,eAAwB,OAASpgB,EAElDA,EAAKjI,OAASwT,EAAcu/B,GAAa9qC,OAE1C,KAAO,OAAS8qC,IAAc,CAI5B,OAFA1uB,GADA7Q,EAAau/B,IACUhzC,UACvBkI,EAAOuL,EAAWvT,MACVuT,EAAWtT,KACjB,KAAK,EAEL,KAAK,GACL,KAAK,GAgDL,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,EACL,KAAK,GACH,MApDF,KAAK,EACH,GAAI,KAAc,KAAP+H,IAAgB,OAASoc,EAAW,CAC7Cpc,OAAO,EACPukB,EAAkBhZ,EAClB4Q,EAAeC,EAAU+D,cACzB/D,EAAYA,EAAUhkB,cACtBogD,EAAYj0B,EAAgB7gB,UAC5B,IACE,IAAIs1C,EAAoBxa,GACtBja,EAAgBlqB,KAChB8hB,GACAoI,EAAgBxE,YAAgBwE,EAAgBlqB,OAElD2F,EAAOw4C,EAAU3W,wBACfmX,EACA58B,GAEFo8B,EAAUtN,oCAAsClrC,CAClD,CAAE,MAAOilB,GACPgjB,GACE1jB,EACAA,EAAgBxsB,OAChBktB,EAEJ,CACF,CACA,MACF,KAAK,EACH,GAAI,KAAc,KAAPjlB,GACT,GAGE,KADCukB,GADCvkB,EAAOuL,EAAW7H,UAAUyX,eACNzjB,UAGxBuhD,GAAwBj5C,QACrB,GAAI,IAAMukB,EACb,OAAQvkB,EAAKqI,UACX,IAAK,OACL,IAAK,OACL,IAAK,OACH4wC,GAAwBj5C,GACxB,MACF,QACEA,EAAKoL,YAAc,GAE3B,MAQF,QACE,GAAI,KAAc,KAAPpL,GAAc,MAAMzH,MAAMtB,EAAuB,MAGhE,GAAI,QADJ+I,EAAOuL,EAAW7S,SACC,CACjBsH,EAAKjI,OAASwT,EAAWxT,OACzB+yC,GAAa9qC,EACb,KACF,CACA8qC,GAAav/B,EAAWxT,MAC1B,CACN,CAqzEQmhD,CAA4Bl5C,EAAM+nC,EACpC,CAAE,QACCzc,GAAmBhqB,EACjBlG,EAAwB6G,EAAIqzC,EAC5Bp6C,EAAqBq4B,EAAI8hB,CAC9B,CACF,CACAzC,GAAuB,EACvBuG,KACAC,KACAC,IACF,CACF,CACA,SAASF,KACP,GAAI,IAAMvG,GAAsB,CAC9BA,GAAuB,EACvB,IAAI5yC,EAAO6yC,GACT9K,EAAe+K,GACfwG,EAAwB,KAA4B,MAArBvR,EAAa/vC,OAC9C,GAAI,KAAmC,MAA5B+vC,EAAa3nB,eAAyBk5B,EAAuB,CACtEA,EAAwBp+C,EAAqBq4B,EAC7Cr4B,EAAqBq4B,EAAI,KACzB,IAAIsD,EAAmBz7B,EAAwB6G,EAC/C7G,EAAwB6G,EAAI,EAC5B,IAAI4xC,EAAuBvoB,GAC3BA,IAAoB,EACpB,IACE4hB,GAA6BnF,EAAc/nC,GAC3C,IAAIu5C,EAA4BV,GAC9BW,EAAiBt+B,GAAqBlb,EAAKmb,eAC3Cs+B,EAAmBF,EAA0BT,YAC7CY,EAAsBH,EAA0BR,eAClD,GACES,IAAmBC,GACnBA,GACAA,EAAiBjvC,eACjBqQ,GACE4+B,EAAiBjvC,cAAc9N,gBAC/B+8C,GAEF,CACA,GACE,OAASC,GACTl+B,GAAyBi+B,GACzB,CACA,IAAIjrC,EAAQkrC,EAAoBlrC,MAC9BC,EAAMirC,EAAoBjrC,IAE5B,QADA,IAAWA,IAAQA,EAAMD,GACrB,mBAAoBirC,EACrBA,EAAiB19B,eAAiBvN,EAChCirC,EAAiBz9B,aAAexc,KAAKm6C,IACpClrC,EACAgrC,EAAiBt9C,MAAM9E,YAExB,CACH,IAAImS,EAAMiwC,EAAiBjvC,eAAiBf,SAC1CmwC,EAAOpwC,GAAOA,EAAI4R,aAAgBlZ,OACpC,GAAI03C,EAAI19B,aAAc,CACpB,IAAIs8B,EAAYoB,EAAI19B,eAClB7kB,EAASoiD,EAAiBruC,YAAY/T,OACtCwiD,EAAiBr6C,KAAKm6C,IAAID,EAAoBlrC,MAAOnX,GACrDyiD,OACE,IAAWJ,EAAoBjrC,IAC3BorC,EACAr6C,KAAKm6C,IAAID,EAAoBjrC,IAAKpX,IACzCmhD,EAAUuB,QACTF,EAAiBC,IACfN,EAAiBM,EAClBA,EAAeD,EACfA,EAAiBL,GACpB,IAAIQ,EAAcv/B,GACdg/B,EACAI,GAEFI,EAAYx/B,GACVg/B,EACAK,GAEJ,GACEE,GACAC,IACC,IAAMzB,EAAUC,YACfD,EAAUv8B,aAAe+9B,EAAYviD,MACrC+gD,EAAUr8B,eAAiB69B,EAAYt/B,QACvC89B,EAAUp8B,YAAc69B,EAAUxiD,MAClC+gD,EAAUn8B,cAAgB49B,EAAUv/B,QACtC,CACA,IAAIzC,EAAQzO,EAAI0wC,cAChBjiC,EAAMkiC,SAASH,EAAYviD,KAAMuiD,EAAYt/B,QAC7C89B,EAAU4B,kBACVP,EAAiBC,GACZtB,EAAU6B,SAASpiC,GACpBugC,EAAUuB,OAAOE,EAAUxiD,KAAMwiD,EAAUv/B,UAC1CzC,EAAMqiC,OAAOL,EAAUxiD,KAAMwiD,EAAUv/B,QACxC89B,EAAU6B,SAASpiC,GACzB,CACF,CACF,CACF,CAEA,IADAzO,EAAM,GAEJgvC,EAAYiB,EACXjB,EAAYA,EAAUn1C,YAGvB,IAAMm1C,EAAU9gD,UACd8R,EAAItN,KAAK,CACPgO,QAASsuC,EACT+B,KAAM/B,EAAUgC,WAChBC,IAAKjC,EAAUkC,YAIrB,IAFA,oBAAsBjB,EAAiB3Q,OACrC2Q,EAAiB3Q,QAEjB2Q,EAAmB,EACnBA,EAAmBjwC,EAAInS,OACvBoiD,IACA,CACA,IAAIzxC,EAAOwB,EAAIiwC,GACfzxC,EAAKkC,QAAQswC,WAAaxyC,EAAKuyC,KAC/BvyC,EAAKkC,QAAQwwC,UAAY1yC,EAAKyyC,GAChC,CACF,CACAlC,KAAaD,GACbO,GAAuBP,GAAgB,IACzC,CAAE,QACChtB,GAAmBuoB,EACjBz4C,EAAwB6G,EAAI40B,EAC5B37B,EAAqBq4B,EAAI+lB,CAC9B,CACF,CACAt5C,EAAKjE,QAAUgsC,EACf6K,GAAuB,CACzB,CACF,CACA,SAASwG,KACP,GAAI,IAAMxG,GAAsB,CAC9BA,GAAuB,EACvB,IAAI5yC,EAAO6yC,GACT9K,EAAe+K,GACf6H,EAAsB,KAA4B,KAArB5S,EAAa/vC,OAC5C,GAAI,KAAmC,KAA5B+vC,EAAa3nB,eAAwBu6B,EAAqB,CACnEA,EAAsBz/C,EAAqBq4B,EAC3Cr4B,EAAqBq4B,EAAI,KACzB,IAAIsD,EAAmBz7B,EAAwB6G,EAC/C7G,EAAwB6G,EAAI,EAC5B,IAAI4xC,EAAuBvoB,GAC3BA,IAAoB,EACpB,IACEyf,GAA0B/qC,EAAM+nC,EAAajwC,UAAWiwC,EAC1D,CAAE,QACCzc,GAAmBuoB,EACjBz4C,EAAwB6G,EAAI40B,EAC5B37B,EAAqBq4B,EAAIonB,CAC9B,CACF,CACA/H,GAAuB,CACzB,CACF,CACA,SAASyG,KACP,GAAI,IAAMzG,IAAwB,IAAMA,GAAsB,CAC5DA,GAAuB,EACvB90C,KACA,IAAIkC,EAAO6yC,GACT9K,EAAe+K,GACfjzC,EAAQkzC,GACRsC,EAAoBnC,GACtB,KAAmC,MAA5BnL,EAAa3nB,eACpB,KAA4B,MAArB2nB,EAAa/vC,OACf46C,GAAuB,GACtBA,GAAuB,EACxBE,GAAsBD,GAAqB,KAC5C+H,GAAuB56C,EAAMA,EAAKG,eACtC,IAAI23C,EAAiB93C,EAAKG,aAI1B,GAHA,IAAM23C,IAAmBxX,GAAyC,MAClEx+B,GAAqBjC,GACrBkoC,EAAeA,EAAarkC,UACxBxE,IAAgB,oBAAsBA,GAAa27C,kBACrD,IACE37C,GAAa27C,kBACX57C,GACA8oC,OACA,EACA,OAAsC,IAA7BA,EAAahsC,QAAQ/D,OAElC,CAAE,MAAOsH,GAAM,CACjB,GAAI,OAAS+1C,EAAmB,CAC9BtN,EAAe7sC,EAAqBq4B,EACpCukB,EAAiB18C,EAAwB6G,EACzC7G,EAAwB6G,EAAI,EAC5B/G,EAAqBq4B,EAAI,KACzB,IACE,IACE,IAAIunB,EAAqB96C,EAAK86C,mBAAoBvjD,EAAI,EACtDA,EAAI89C,EAAkBh+C,OACtBE,IACA,CACA,IAAIwjD,EAAmB1F,EAAkB99C,GACzCujD,EAAmBC,EAAiB5+C,MAAO,CACzCsjC,eAAgBsb,EAAiBl1C,OAErC,CACF,CAAE,QACC3K,EAAqBq4B,EAAIwU,EACvB3sC,EAAwB6G,EAAI61C,CACjC,CACF,CACA,KAA6B,EAAtB/E,KAA4B6E,KACnCrE,GAAsBvzC,GACtB83C,EAAiB93C,EAAKG,aACtB,KAAe,QAARN,IAAoB,KAAwB,GAAjBi4C,GAC9B93C,IAAS0f,GACPD,MACEA,GAAoB,EAAKC,GAAwB1f,GACpDyf,GAAoB,EACzBi3B,GAA8B,GAAG,EACnC,CACF,CACA,SAASkE,GAAuB56C,EAAM83C,GACpC,KAAO93C,EAAK8lC,kBAAoBgS,KAE9B,OADEA,EAAiB93C,EAAKipB,eAEpBjpB,EAAKipB,YAAc,KAAOpB,GAAaiwB,IAC/C,CACA,SAASF,GAAoBoD,GAI3B,OAHA7B,KACAC,KACAC,KACOhB,IACT,CACA,SAASA,KACP,GAAI,IAAMzF,GAAsB,OAAO,EACvC,IAAI5yC,EAAO6yC,GACTiF,EAAiB9E,GACnBA,GAA+B,EAC/B,IAAIiI,EAAiBn5C,GAAqBixC,IACxCrf,EAAiBx4B,EAAqBq4B,EACtCsD,EAAmBz7B,EAAwB6G,EAC7C,IACE7G,EAAwB6G,EAAI,GAAKg5C,EAAiB,GAAKA,EACvD//C,EAAqBq4B,EAAI,KACzB0nB,EAAiBhI,GACjBA,GAA4B,KAC5B,IAAIjG,EAAgB6F,GAClBhzC,EAAQkzC,GAIV,GAHAH,GAAuB,EACvBE,GAAsBD,GAAqB,KAC3CE,GAAsB,EAClB,KAA0B,EAAnBznB,IAAuB,MAAM/yB,MAAMtB,EAAuB,MACrE,IAAI48C,EAAuBvoB,GAW3B,GAVAA,IAAoB,EACpBmmB,GAA4BzE,EAAcjxC,SAC1CuzC,GACEtC,EACAA,EAAcjxC,QACd8D,EACAo7C,GAEF3vB,GAAmBuoB,EACnB6C,GAA8B,GAAG,GAE/Bx3C,IACA,oBAAsBA,GAAag8C,sBAEnC,IACEh8C,GAAag8C,sBAAsBj8C,GAAY+tC,EACjD,CAAE,MAAO1tC,GAAM,CACjB,OAAO,CACT,CAAE,QACClE,EAAwB6G,EAAI40B,EAC1B37B,EAAqBq4B,EAAIG,EAC1BknB,GAAuB56C,EAAM83C,EACjC,CACF,CACA,SAASqD,GAA8BC,EAAWj8B,EAAa8F,GAC7D9F,EAAchB,GAA2B8G,EAAO9F,GAGhD,QADAi8B,EAAY/vB,GAAc+vB,EAD1Bj8B,EAAc8gB,GAAsBmb,EAAU13C,UAAWyb,EAAa,GACpB,MAE/Che,GAAkBi6C,EAAW,GAAI7H,GAAsB6H,GAC5D,CACA,SAASnT,GAAwB9oB,EAAaipB,EAAwBnjB,GACpE,GAAI,IAAM9F,EAAYlnB,IACpBkjD,GAA8Bh8B,EAAaA,EAAa8F,QAExD,KAAO,OAASmjB,GAA0B,CACxC,GAAI,IAAMA,EAAuBnwC,IAAK,CACpCkjD,GACE/S,EACAjpB,EACA8F,GAEF,KACF,CAAO,GAAI,IAAMmjB,EAAuBnwC,IAAK,CAC3C,IAAIyrB,EAAW0kB,EAAuB1kC,UACtC,GACE,oBACS0kC,EAAuB/tC,KAAK+lC,0BACpC,oBAAsB1c,EAAS2c,oBAC7B,OAASC,KACPA,GAAuCr0B,IAAIyX,IAChD,CACAvE,EAAchB,GAA2B8G,EAAO9F,GAGhD,QADAuE,EAAW2H,GAAc+c,EADzBnjB,EAAQib,GAAuB,GACyB,MAErDC,GACClb,EACAvB,EACA0kB,EACAjpB,GAEFhe,GAAkBuiB,EAAU,GAC5B6vB,GAAsB7vB,IACxB,KACF,CACF,CACA0kB,EAAyBA,EAAuBrwC,MAClD,CACJ,CACA,SAASs/C,GAAmBr3C,EAAM4sC,EAAU/sC,GAC1C,IAAIw7C,EAAYr7C,EAAKq7C,UACrB,GAAI,OAASA,EAAW,CACtBA,EAAYr7C,EAAKq7C,UAAY,IAAIrJ,GACjC,IAAIsJ,EAAY,IAAIp3C,IACpBm3C,EAAU30C,IAAIkmC,EAAU0O,EAC1B,WAEI,KADDA,EAAYD,EAAUzyC,IAAIgkC,MAErB0O,EAAY,IAAIp3C,IAAQm3C,EAAU30C,IAAIkmC,EAAU0O,IACxDA,EAAUrvC,IAAIpM,KACVwyC,IAA0C,EAC5CiJ,EAAU92C,IAAI3E,GACbG,EAAOu7C,GAAkBxpB,KAAK,KAAM/xB,EAAM4sC,EAAU/sC,GACrD+sC,EAASrkB,KAAKvoB,EAAMA,GACxB,CACA,SAASu7C,GAAkBv7C,EAAM4sC,EAAUtsC,GACzC,IAAI+6C,EAAYr7C,EAAKq7C,UACrB,OAASA,GAAaA,EAAUnf,OAAO0Q,GACvC5sC,EAAKM,aAAeN,EAAKK,eAAiBC,EAC1CN,EAAKO,YAAcD,EACnB0oB,KAAuBhpB,IACpBusB,GAAgCjsB,KAAiBA,IACjD,IAAMmnC,IACN,IAAMA,KAC4B,SAAhClb,MACCA,IACF,IAAMvuB,KAAQqwC,GACZ,KAA0B,EAAnB/iB,KAAyB+nB,GAAkBrzC,EAAM,GACvDuyC,IAAiCjyC,EACtC+lC,KAAsC9Z,KACnC8Z,GAAoC,IACzCkN,GAAsBvzC,EACxB,CACA,SAASw7C,GAAsBC,EAAe/Y,GAC5C,IAAMA,IAAcA,EAAY3hC,MAEhC,QADA06C,EAAgBv8B,GAA+Bu8B,EAAe/Y,MAE3DvhC,GAAkBs6C,EAAe/Y,GAClC6Q,GAAsBkI,GAC1B,CACA,SAASjQ,GAAgCiQ,GACvC,IAAItjD,EAAgBsjD,EAAcrjD,cAChCsqC,EAAY,EACd,OAASvqC,IAAkBuqC,EAAYvqC,EAAcuqC,WACrD8Y,GAAsBC,EAAe/Y,EACvC,CACA,SAASoK,GAAqB2O,EAAe7O,GAC3C,IAAIlK,EAAY,EAChB,OAAQ+Y,EAAcxjD,KACpB,KAAK,GACH,IAAIy0C,EAAa+O,EAAc/3C,UAC3BvL,EAAgBsjD,EAAcrjD,cAClC,OAASD,IAAkBuqC,EAAYvqC,EAAcuqC,WACrD,MACF,KAAK,GACHgK,EAAa+O,EAAc/3C,UAC3B,MACF,KAAK,GACHgpC,EAAa+O,EAAc/3C,UAAUwgC,YACrC,MACF,QACE,MAAM3rC,MAAMtB,EAAuB,MAEvC,OAASy1C,GAAcA,EAAWxQ,OAAO0Q,GACzC4O,GAAsBC,EAAe/Y,EACvC,CAIA,IAAIgZ,GAAqB,KACvBC,GAAoB,KACpBC,IAAuB,EACvBC,IAA2B,EAC3BC,IAAiB,EACjBC,GAA6B,EAC/B,SAASxI,GAAsBvzC,GAC7BA,IAAS27C,IACP,OAAS37C,EAAK6e,OACb,OAAS88B,GACLD,GAAqBC,GAAoB37C,EACzC27C,GAAoBA,GAAkB98B,KAAO7e,GACpD67C,IAA2B,EAC3BD,KACIA,IAAuB,EA4K3BI,IAAkB,WAChB,KAA0B,EAAnB1wB,IACH9tB,EACEY,GACA69C,IAEFC,IACN,IAlLF,CACA,SAASxF,GAA8ByF,EAAqBC,GAC1D,IAAKN,IAAkBD,GAA0B,CAC/CC,IAAiB,EACjB,GAEE,IADA,IAAIO,GAAqB,EAChBC,EAAWZ,GAAoB,OAASY,GAAY,CAC3D,IAAKF,EACH,GAAI,IAAMD,EAAqB,CAC7B,IAAIh8C,EAAem8C,EAASn8C,aAC5B,GAAI,IAAMA,EAAc,IAAIjD,EAA2B,MAClD,CACH,IAAImD,EAAiBi8C,EAASj8C,eAC5BC,EAAcg8C,EAASh8C,YACzBpD,GACG,GAAM,GAAKqC,GAAM,GAAK48C,GAAuB,GAAM,EAGtDj/C,EAC6B,WAH7BA,GACEiD,IAAiBE,GAAkBC,IAGH,UAA3BpD,EAAwC,EACzCA,EAC6B,EAA3BA,EACA,CACV,CACA,IAAMA,IACFm/C,GAAqB,EACvBE,GAAsBD,EAAUp/C,GACpC,MACGA,EAA2BqvB,GAO1B,KAAkC,GANjCrvB,EAA2B6C,GAC1Bu8C,EACAA,IAAatzB,GAAqB9rB,EAA2B,EAC7D,OAASo/C,EAASlJ,sBACf,IAAMkJ,EAASpH,kBAGlBz0C,GAA0B67C,EAAUp/C,KAClCm/C,GAAqB,EACvBE,GAAsBD,EAAUp/C,IACxCo/C,EAAWA,EAASz9B,IACtB,QACOw9B,GACTP,IAAiB,CACnB,CACF,CACA,SAASG,KACPC,IACF,CACA,SAASA,KACPL,GAA2BD,IAAuB,EAClD,IAAIO,EAAsB,EAC1B,IAAMJ,KA07DR,WACE,IAAI55C,EAAQD,OAAOC,MACnB,GAAIA,GAAS,aAAeA,EAAM9H,KAChC,OAAI8H,IAAUq6C,KACdA,GAAiCr6C,GAC1B,GAGT,OADAq6C,GAAiC,MAC1B,CACT,CAl8DKC,KACEN,EAAsBJ,IACxBA,GAA6B,GAChC,IACE,IAAIl7C,EAAc7C,KAAO0+C,EAAO,KAAM18C,EAAO07C,GAC7C,OAAS17C,GAET,CACA,IAAI6e,EAAO7e,EAAK6e,KACdze,EAAYu8C,GAAmC38C,EAAMa,GACnD,IAAMT,GACPJ,EAAK6e,KAAO,KACX,OAAS69B,EAAQhB,GAAqB78B,EAAS69B,EAAK79B,KAAOA,EAC3D,OAASA,IAAS88B,GAAoBe,KAEtCA,EAAO18C,GAAO,IAAMm8C,GAAuB,KAAmB,EAAZ/7C,MAEpDy7C,IAA2B,IAC7B77C,EAAO6e,CACT,CACA63B,GAA8ByF,GAAqB,EACrD,CACA,SAASQ,GAAmC38C,EAAMa,GAChD,IACE,IAAIR,EAAiBL,EAAKK,eACxBC,EAAcN,EAAKM,YACnBk2C,EAAkBx2C,EAAKw2C,gBACvB32C,GAA6B,SAArBG,EAAKG,aACf,EAAIN,GAEJ,CACA,IAAI+8C,EAAU,GAAKr9C,GAAMM,GACvBe,EAAO,GAAKg8C,EACZC,EAAiBrG,EAAgBoG,IAC9B,IAAMC,EACL,KAAOj8C,EAAOP,IAAmB,KAAOO,EAAON,KACjDk2C,EAAgBoG,GAAWj8C,GAAsBC,EAAMC,IACpDg8C,GAAkBh8C,IAAgBb,EAAK2zC,cAAgB/yC,GAC9Df,IAAUe,CACZ,CASA,GAPAP,EAAiBksB,GACjBlsB,EAAiBN,GACfC,EACAA,KAJFa,EAAcmoB,IAIW3oB,EAAiB,EACxC,OAASL,EAAKozC,sBAAwB,IAAMpzC,EAAKk1C,eAEnD50C,EAAcN,EAAKm4C,aAEjB,IAAM93C,GACLL,IAASa,IACP,IAAMoxC,IACL,IAAMA,KACV,OAASjyC,EAAKozC,oBAEd,OACE,OAAS9yC,GACP,OAASA,GACT5C,EAAiB4C,GAClBN,EAAKm4C,aAAe,KACpBn4C,EAAKo4C,iBAAmB,EAE7B,GACE,KAAwB,EAAjB/3C,IACPI,GAA0BT,EAAMK,GAChC,CAEA,IADAQ,EAAcR,GAAkBA,KACZL,EAAKo4C,iBAAkB,OAAOv3C,EAElD,OADA,OAASP,GAAe5C,EAAiB4C,GACjCwB,GAAqBzB,IAC3B,KAAK,EACL,KAAK,EACHA,EAAiB/B,GACjB,MACF,KAAK,GAML,QACE+B,EAAiB7B,SAJnB,KAAK,UACH6B,EAAiBzB,GASrB,OAJA0B,EAAcw8C,GAAkC/qB,KAAK,KAAM/xB,GAC3DK,EAAiB7C,EAAmB6C,EAAgBC,GACpDN,EAAKo4C,iBAAmBv3C,EACxBb,EAAKm4C,aAAe93C,EACbQ,CACT,CAIA,OAHA,OAASP,GAAe,OAASA,GAAe5C,EAAiB4C,GACjEN,EAAKo4C,iBAAmB,EACxBp4C,EAAKm4C,aAAe,KACb,CACT,CACA,SAAS2E,GAAkC98C,EAAM+8C,GAC/C,GAAI,IAAMnK,IAAwB,IAAMA,GACtC,OAAQ5yC,EAAKm4C,aAAe,KAAQn4C,EAAKo4C,iBAAmB,EAAI,KAClE,IAAI4E,EAAuBh9C,EAAKm4C,aAChC,GAAIP,MAA2B53C,EAAKm4C,eAAiB6E,EACnD,OAAO,KACT,IAAIC,EAAyC1wB,GAM7C,OAAI,KALJ0wB,EAAyCl9C,GACvCC,EACAA,IAASgpB,GAAqBi0B,EAAyC,EACvE,OAASj9C,EAAKozC,sBAAwB,IAAMpzC,EAAKk1C,gBAEM,MACzD1B,GAAkBxzC,EAAMi9C,EAAwCF,GAChEJ,GAAmC38C,EAAMhC,MAClC,MAAQgC,EAAKm4C,cAAgBn4C,EAAKm4C,eAAiB6E,EACtDF,GAAkC/qB,KAAK,KAAM/xB,GAC7C,KACN,CACA,SAASu8C,GAAsBv8C,EAAMH,GACnC,GAAI+3C,KAAuB,OAAO,KAClCpE,GAAkBxzC,EAAMH,GAAO,EACjC,CAWA,SAAS6oB,KAGP,OAFA,IAAMqzB,KACHA,GAA6Bj7C,MACzBi7C,EACT,CACA,SAASmB,GAAqBC,GAC5B,OAAO,MAAQA,GACb,kBAAoBA,GACpB,mBAAqBA,EACnB,KACA,oBAAsBA,EACpBA,EACAzwC,GAAY,GAAKywC,EACzB,CACA,SAASC,GAA4B3vC,EAAM4vC,GACzC,IAAIC,EAAOD,EAAU7yC,cAAcyD,cAAc,SAOjD,OANAqvC,EAAK9iD,KAAO6iD,EAAU7iD,KACtB8iD,EAAKnhD,MAAQkhD,EAAUlhD,MACvBsR,EAAK41B,IAAMia,EAAKh4C,aAAa,OAAQmI,EAAK41B,IAC1Cga,EAAUh6C,WAAW6mC,aAAaoT,EAAMD,GACxC5vC,EAAO,IAAI8vC,SAAS9vC,GACpB6vC,EAAKj6C,WAAW8jC,YAAYmW,GACrB7vC,CACT,CA4EA,IACE,IAAI+vC,GAAuB,EAC3BA,GAAuBz/B,GAAwB1mB,OAC/CmmD,KACA,CACA,IAAIC,GACA1/B,GAAwBy/B,IAM5Bx/B,GAJIy/B,GAA6Bp4C,cAM/B,MAJEo4C,GAA6B,GAAGC,cAChCD,GAA6Bj7C,MAAM,IAKzC,CACAwb,GAAoBT,GAAe,kBACnCS,GAAoBR,GAAqB,wBACzCQ,GAAoBP,GAAiB,oBACrCO,GAAoB,WAAY,iBAChCA,GAAoB,UAAW,WAC/BA,GAAoB,WAAY,UAChCA,GAAoBN,GAAgB,mBACpCM,GAAoBL,GAAkB,qBACtCK,GAAoBJ,GAAmB,sBACvCI,GAAoBH,GAAgB,mBACpCtZ,GAAoB,eAAgB,CAAC,WAAY,cACjDA,GAAoB,eAAgB,CAAC,WAAY,cACjDA,GAAoB,iBAAkB,CAAC,aAAc,gBACrDA,GAAoB,iBAAkB,CAAC,aAAc,gBACrDH,GACE,WACA,oEAAoEoD,MAAM,MAE5EpD,GACE,WACA,uFAAuFoD,MACrF,MAGJpD,GAAsB,gBAAiB,CACrC,iBACA,WACA,YACA,UAEFA,GACE,mBACA,2DAA2DoD,MAAM,MAEnEpD,GACE,qBACA,6DAA6DoD,MAAM,MAErEpD,GACE,sBACA,8DAA8DoD,MAAM,MAEtE,IAAIoc,GACA,6NAA6Npc,MAC3N,KAEJm2C,GAAqB,IAAIz5C,IACvB,iEACGsD,MAAM,KACNwuB,OAAOpS,KAEd,SAAS9K,GAAqBN,EAAeolC,GAC3CA,EAAmB,KAA0B,EAAnBA,GAC1B,IAAK,IAAIrmD,EAAI,EAAGA,EAAIihB,EAAcnhB,OAAQE,IAAK,CAC7C,IAAIsmD,EAAmBrlC,EAAcjhB,GACnC4K,EAAQ07C,EAAiB17C,MAC3B07C,EAAmBA,EAAiBnlC,UACpCpL,EAAG,CACD,IAAIwwC,OAAmB,EACvB,GAAIF,EACF,IACE,IAAIG,EAAaF,EAAiBxmD,OAAS,EAC3C,GAAK0mD,EACLA,IACA,CACA,IAAIC,EAAuBH,EAAiBE,GAC1Cr6B,EAAWs6B,EAAqBt6B,SAChC7T,EAAgBmuC,EAAqBnuC,cAEvC,GADAmuC,EAAuBA,EAAqBh3B,SACxCtD,IAAao6B,GAAoB37C,EAAM8N,uBACzC,MAAM3C,EACRwwC,EAAmBE,EACnB77C,EAAM0N,cAAgBA,EACtB,IACEiuC,EAAiB37C,EACnB,CAAE,MAAO8iB,GACP2Z,GAAkB3Z,EACpB,CACA9iB,EAAM0N,cAAgB,KACtBiuC,EAAmBp6B,CACrB,MAEA,IACEq6B,EAAa,EACbA,EAAaF,EAAiBxmD,OAC9B0mD,IACA,CAKA,GAHAr6B,GADAs6B,EAAuBH,EAAiBE,IACRr6B,SAChC7T,EAAgBmuC,EAAqBnuC,cACrCmuC,EAAuBA,EAAqBh3B,SACxCtD,IAAao6B,GAAoB37C,EAAM8N,uBACzC,MAAM3C,EACRwwC,EAAmBE,EACnB77C,EAAM0N,cAAgBA,EACtB,IACEiuC,EAAiB37C,EACnB,CAAE,MAAO8iB,GACP2Z,GAAkB3Z,EACpB,CACA9iB,EAAM0N,cAAgB,KACtBiuC,EAAmBp6B,CACrB,CACJ,CACF,CACF,CACA,SAASC,GAA0BrM,EAAc2mC,GAC/C,IAAI/gD,EAA2B+gD,EAAcr7C,SAC7C,IAAW1F,IACRA,EAA2B+gD,EAAcr7C,IACxC,IAAIsB,KACR,IAAIg6C,EAAiB5mC,EAAe,WACpCpa,EAAyB+O,IAAIiyC,KAC1BC,GAAwBF,EAAe3mC,EAAc,GAAG,GACzDpa,EAAyBsH,IAAI05C,GACjC,CACA,SAASE,GAAoB9mC,EAAc+mC,EAAwBvxC,GACjE,IAAI8wC,EAAmB,EACvBS,IAA2BT,GAAoB,GAC/CO,GACErxC,EACAwK,EACAsmC,EACAS,EAEJ,CACA,IAAIC,GAAkB,kBAAoB9+C,KAAK8C,SAASC,SAAS,IAAIC,MAAM,GAC3E,SAASglC,GAA2B+W,GAClC,IAAKA,EAAqBD,IAAkB,CAC1CC,EAAqBD,KAAmB,EACxCr6C,GAAgBijB,SAAQ,SAAU5P,GAChC,oBAAsBA,IACnBqmC,GAAmB1xC,IAAIqL,IACtB8mC,GAAoB9mC,GAAc,EAAIinC,GACxCH,GAAoB9mC,GAAc,EAAIinC,GAC1C,IACA,IAAI/zC,EACF,IAAM+zC,EAAqB7mD,SACvB6mD,EACAA,EAAqB/zC,cAC3B,OAASA,GACPA,EAAc8zC,MACZ9zC,EAAc8zC,KAAmB,EACnCF,GAAoB,mBAAmB,EAAI5zC,GAC/C,CACF,CACA,SAAS2zC,GACPK,EACAlnC,EACAsmC,EACAS,GAEA,OAAQj8C,GAAiBkV,IACvB,KAAK,EACH,IAAImnC,EAAkBC,GACtB,MACF,KAAK,EACHD,EAAkBE,GAClB,MACF,QACEF,EAAkB1f,GAEtB6e,EAAmBa,EAAgB1sB,KACjC,KACAza,EACAsmC,EACAY,GAEFC,OAAkB,GACjBvwC,IACE,eAAiBoJ,GAChB,cAAgBA,GAChB,UAAYA,IACbmnC,GAAkB,GACrBJ,OACI,IAAWI,EACTD,EAAgBrwC,iBAAiBmJ,EAAcsmC,EAAkB,CAC/DgB,SAAS,EACTC,QAASJ,IAEXD,EAAgBrwC,iBAAiBmJ,EAAcsmC,GAAkB,QACnE,IAAWa,EACTD,EAAgBrwC,iBAAiBmJ,EAAcsmC,EAAkB,CAC/DiB,QAASJ,IAEXD,EAAgBrwC,iBAAiBmJ,EAAcsmC,GAAkB,EACzE,CACA,SAASkB,GACPxnC,EACAsmC,EACA/wC,EACAkyC,EACAP,GAEA,IAAIQ,EAAeD,EACnB,GACE,KAA0B,EAAnBnB,IACP,KAA0B,EAAnBA,IACP,OAASmB,EAETzxC,EAAG,OAAS,CACV,GAAI,OAASyxC,EAAqB,OAClC,IAAIE,EAAUF,EAAoB9mD,IAClC,GAAI,IAAMgnD,GAAW,IAAMA,EAAS,CAClC,IAAIC,EAAYH,EAAoBr7C,UAAUyX,cAC9C,GAAI+jC,IAAcV,EAAiB,MACnC,GAAI,IAAMS,EACR,IAAKA,EAAUF,EAAoBhnD,OAAQ,OAASknD,GAAW,CAC7D,IAAIE,EAAWF,EAAQhnD,IACvB,IACG,IAAMknD,GAAY,IAAMA,IACzBF,EAAQv7C,UAAUyX,gBAAkBqjC,EAEpC,OACFS,EAAUA,EAAQlnD,MACpB,CACF,KAAO,OAASmnD,GAAa,CAE3B,GAAI,QADJD,EAAU/7C,GAA2Bg8C,IACf,OAEtB,GACE,KAFFC,EAAWF,EAAQhnD,MAGjB,IAAMknD,GACN,KAAOA,GACP,KAAOA,EACP,CACAJ,EAAsBC,EAAeC,EACrC,SAAS3xC,CACX,CACA4xC,EAAYA,EAAU77C,UACxB,CACF,CACA07C,EAAsBA,EAAoBhnD,MAC5C,CACF6V,IAAiB,WACf,IAAIxK,EAAa47C,EACfvvC,EAAoB7C,GAAeC,GACnC2L,EAAgB,GAClBlL,EAAG,CACD,IAAIiC,EAAYuO,GAA2BlV,IAAI0O,GAC/C,QAAI,IAAW/H,EAAW,CACxB,IAAI6vC,EAAqBnuC,GACvBzB,EAAiB8H,EACnB,OAAQA,GACN,IAAK,WACH,GAAI,IAAMvI,GAAiBlC,GAAc,MAAMS,EACjD,IAAK,UACL,IAAK,QACH8xC,EAAqB1qC,GACrB,MACF,IAAK,UACHlF,EAAiB,QACjB4vC,EAAqBvsC,GACrB,MACF,IAAK,WACHrD,EAAiB,OACjB4vC,EAAqBvsC,GACrB,MACF,IAAK,aACL,IAAK,YACHusC,EAAqBvsC,GACrB,MACF,IAAK,QACH,GAAI,IAAMhG,EAAYsF,OAAQ,MAAM7E,EACtC,IAAK,WACL,IAAK,WACL,IAAK,YACL,IAAK,YACL,IAAK,UACL,IAAK,WACL,IAAK,YACL,IAAK,cACH8xC,EAAqB1sC,GACrB,MACF,IAAK,OACL,IAAK,UACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,OACH0sC,EAAqBzsC,GACrB,MACF,IAAK,cACL,IAAK,WACL,IAAK,YACL,IAAK,aACHysC,EAAqBvpC,GACrB,MACF,KAAK0H,GACL,KAAKC,GACL,KAAKC,GACH2hC,EAAqBtsC,GACrB,MACF,KAAK+K,GACHuhC,EAAqBnpC,GACrB,MACF,IAAK,SACL,IAAK,YACHmpC,EAAqB/tC,GACrB,MACF,IAAK,QACH+tC,EAAqBjpC,GACrB,MACF,IAAK,OACL,IAAK,MACL,IAAK,QACHipC,EAAqBlsC,GACrB,MACF,IAAK,oBACL,IAAK,qBACL,IAAK,gBACL,IAAK,cACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,YACHksC,EAAqBlqC,GACrB,MACF,IAAK,SACL,IAAK,eACHkqC,EAAqBzoC,GAEzB,IAAI0oC,EAAiB,KAA0B,EAAnBzB,GAC1B0B,GACGD,IACA,WAAa/nC,GAAgB,cAAgBA,GAChDioC,EAAiBF,EACb,OAAS9vC,EACPA,EAAY,UACZ,KACFA,EACN8vC,EAAiB,GACjB,IACE,IAA2BG,EAAvB97B,EAAWtgB,EACf,OAASsgB,GAET,CACA,IAAI+7B,EAAY/7B,EAWhB,GAVA87B,EAAoBC,EAAU/7C,UAE7B,KADD+7C,EAAYA,EAAUxnD,MACF,KAAOwnD,GAAa,KAAOA,GAC7C,OAASD,GACT,OAASD,GAET,OADEE,EAAY1xC,GAAY2V,EAAU67B,KAElCF,EAAenjD,KACbwjD,GAAuBh8B,EAAU+7B,EAAWD,IAE9CF,EAAsB,MAC1B57B,EAAWA,EAAS3rB,MACtB,CACA,EAAIsnD,EAAehoD,SACfkY,EAAY,IAAI6vC,EAChB7vC,EACAC,EACA,KACA3C,EACA4C,GAEF+I,EAActc,KAAK,CAAEiG,MAAOoN,EAAWmJ,UAAW2mC,IACtD,CACF,CACA,GAAI,KAA0B,EAAnBzB,GAAuB,CAM9B,GAFAwB,EACE,aAAe9nC,GAAgB,eAAiBA,KAHlD/H,EACE,cAAgB+H,GAAgB,gBAAkBA,IAKlDzK,IAAgBF,MACf6C,EACC3C,EAAYwF,eAAiBxF,EAAYyF,eAC1CpP,GAA2BsM,KAC1BA,EAAe7M,OAGfy8C,GAAsB7vC,KACxBA,EACEE,EAAkBvN,SAAWuN,EACzBA,GACCF,EAAYE,EAAkBjF,eAC7B+E,EAAU6L,aAAe7L,EAAUowC,aACnCz9C,OACJk9C,GAICA,EAAqBh8C,EAItB,QAHCoM,GAHCA,EACA3C,EAAYwF,eAAiBxF,EAAY0F,WAGvCrP,GAA2BsM,GAC3B,QAEA8vC,EACA3nD,EAAuB6X,GACxB6vC,EAAiB7vC,EAAevX,IACjCuX,IAAmB8vC,GAChB,IAAMD,GACL,KAAOA,GACP,IAAMA,KAEZ7vC,EAAiB,QACb4vC,EAAqB,KAAQ5vC,EAAiBpM,GAClDg8C,IAAuB5vC,GAAgB,CAwCzC,GAvCA6vC,EAAiB3sC,GACjB+sC,EAAY,eACZF,EAAiB,eACjB77B,EAAW,QACP,eAAiBpM,GAAgB,gBAAkBA,IACpD+nC,EAAiBnqC,GACfuqC,EAAY,iBACZF,EAAiB,iBACjB77B,EAAW,WAChB47B,EACE,MAAQF,EACJ7vC,EACA/L,GAAoB47C,GAC1BI,EACE,MAAQhwC,EACJD,EACA/L,GAAoBgM,IAC1BD,EAAY,IAAI8vC,EACdI,EACA/7B,EAAW,QACX07B,EACAvyC,EACA4C,IAEQ3C,OAASwyC,EACnB/vC,EAAU8C,cAAgBmtC,EAC1BC,EAAY,KACZv8C,GAA2BuM,KAAuBrM,KAC9Ci8C,EAAiB,IAAIA,EACrBE,EACA77B,EAAW,QACXlU,EACA3C,EACA4C,IAEc3C,OAAS0yC,EACxBH,EAAehtC,cAAgBitC,EAC/BG,EAAYJ,GACfC,EAAuBG,EACnBL,GAAsB5vC,EACxB3B,EAAG,CAID,IAFA0xC,EAAiB/vC,EACjBkU,EAAW,EAET87B,EAJFH,EAAiBD,EAKfI,EACAA,EAAoBI,GAAUJ,GAE9B97B,IAEF,IADA87B,EAAoB,EAElBC,EAAYF,EACZE,EACAA,EAAYG,GAAUH,GAEtBD,IACF,KAAO,EAAI97B,EAAW87B,GACnBH,EAAiBO,GAAUP,GAAkB37B,IAChD,KAAO,EAAI87B,EAAoB97B,GAC5B67B,EAAiBK,GAAUL,GAC1BC,IACJ,KAAO97B,KAAc,CACnB,GACE27B,IAAmBE,GAClB,OAASA,GACRF,IAAmBE,EAAeznD,UAEpC,MAAM+V,EACRwxC,EAAiBO,GAAUP,GAC3BE,EAAiBK,GAAUL,EAC7B,CACAF,EAAiB,IACnB,MACGA,EAAiB,KACtB,OAASD,GACPS,GACErnC,EACAjJ,EACA6vC,EACAC,GACA,GAEJ,OAAS7vC,GACP,OAAS8vC,GACTO,GACErnC,EACA8mC,EACA9vC,EACA6vC,GACA,EAEN,CAOF,GACE,YAHFD,GADA7vC,EAAYnM,EAAaI,GAAoBJ,GAAclB,QAE/CmG,UAAYkH,EAAUlH,SAAShD,gBAGxC,UAAY+5C,GAAsB,SAAW7vC,EAAUlV,KAExD,IAAIylD,EAAoB9mC,QACrB,GAAIV,GAAmB/I,GAC1B,GAAI0J,GACF6mC,EAAoBjmC,OACjB,CACHimC,EAAoBnmC,GACpB,IAAIomC,EAAkBtmC,EACxB,OAEC2lC,EAAqB7vC,EAAUlH,WAE9B,UAAY+2C,EAAmB/5C,eAC9B,aAAekK,EAAUlV,MAAQ,UAAYkV,EAAUlV,KACpD+I,GACAmJ,GAAgBnJ,EAAW2c,eAC1B+/B,EAAoB9mC,IACpB8mC,EAAoBlmC,GAqB/B,OAnBIkmC,IACCA,EAAoBA,EAAkBxoC,EAAclU,IAErDmV,GACEC,EACAsnC,EACAjzC,EACA4C,IAIJswC,GAAmBA,EAAgBzoC,EAAc/H,EAAWnM,GAC5D,aAAekU,GACblU,GACA,WAAamM,EAAUlV,MACvB,MAAQ+I,EAAW+c,cAAchkB,OACjCkO,GAAgBkF,EAAW,SAAUA,EAAUpT,QAEnD4jD,EAAkB38C,EAAaI,GAAoBJ,GAAclB,OACzDoV,GACN,IAAK,WAEDgB,GAAmBynC,IACnB,SAAWA,EAAgBtkC,mBAE1B/R,GAAgBq2C,EACdpkC,GAAoBvY,EACpBwY,GAAgB,MACrB,MACF,IAAK,WACHA,GAAgBD,GAAoBjS,GAAgB,KACpD,MACF,IAAK,YACHmS,IAAY,EACZ,MACF,IAAK,cACL,IAAK,UACL,IAAK,UACHA,IAAY,EACZC,GAAqBtD,EAAe3L,EAAa4C,GACjD,MACF,IAAK,kBACH,GAAIiM,GAA0B,MAChC,IAAK,UACL,IAAK,QACHI,GAAqBtD,EAAe3L,EAAa4C,GAErD,IAAIuwC,EACJ,GAAIjpC,GACFlJ,EAAG,CACD,OAAQyJ,GACN,IAAK,mBACH,IAAI2oC,EAAY,qBAChB,MAAMpyC,EACR,IAAK,iBACHoyC,EAAY,mBACZ,MAAMpyC,EACR,IAAK,oBACHoyC,EAAY,sBACZ,MAAMpyC,EAEVoyC,OAAY,CACd,MAEAzoC,GACIH,GAAyBC,EAAczK,KACtCozC,EAAY,oBACb,YAAc3oC,GACd,MAAQzK,EAAYmC,UACnBixC,EAAY,sBACnBA,IACG/oC,IACC,OAASrK,EAAYmI,SACpBwC,IAAe,uBAAyByoC,EACrC,qBAAuBA,GACvBzoC,KACCwoC,EAAezxC,OAEfF,GAAY,UADXrO,GAAOyP,GACsBzP,GAAK7D,MAAQ6D,GAAKoL,YAChDoM,IAAc,IAErB,GADCuoC,EAAkBtnC,GAA4BrV,EAAY68C,IACvC5oD,SAChB4oD,EAAY,IAAI7sC,GAChB6sC,EACA3oC,EACA,KACAzK,EACA4C,GAEF+I,EAActc,KAAK,CAAEiG,MAAO89C,EAAWvnC,UAAWqnC,IAClDC,EACKC,EAAUzkD,KAAOwkD,EAElB,QADEA,EAAezoC,GAAuB1K,MACdozC,EAAUzkD,KAAOwkD,MAEhDA,EAAe/oC,GA1uUxB,SAAmCK,EAAczK,GAC/C,OAAQyK,GACN,IAAK,iBACH,OAAOC,GAAuB1K,GAChC,IAAK,WACH,OAAI,KAAOA,EAAYoI,MAAc,MACrCmC,IAAmB,EACZD,IACT,IAAK,YACH,OACGG,EAAezK,EAAYrR,QACX2b,IAAiBC,GAAmB,KAAOE,EAEhE,QACE,OAAO,KAEb,CA2tUY4oC,CAA0B5oC,EAAczK,GA1tUpD,SAAqCyK,EAAczK,GACjD,GAAI2K,GACF,MAAO,mBAAqBF,IACxBP,IACAM,GAAyBC,EAAczK,IACrCyK,EAAe/I,KAChBD,GAAeD,GAAYrO,GAAO,KAClCwX,IAAc,EACfF,GACA,KACN,OAAQA,GACN,IAAK,QAgBL,QACE,OAAO,KAfT,IAAK,WACH,KACIzK,EAAYgF,SAAWhF,EAAYkF,QAAUlF,EAAYmF,UAC1DnF,EAAYgF,SAAWhF,EAAYkF,OACpC,CACA,GAAIlF,EAAYszC,MAAQ,EAAItzC,EAAYszC,KAAK9oD,OAC3C,OAAOwV,EAAYszC,KACrB,GAAItzC,EAAYoI,MAAO,OAAOL,OAAOC,aAAahI,EAAYoI,MAChE,CACA,OAAO,KACT,IAAK,iBACH,OAAOiC,IAA8B,OAASrK,EAAYmI,OACtD,KACAnI,EAAYrR,KAItB,CA6rUY4kD,CAA4B9oC,EAAczK,MAG5C,GADDozC,EAAYxnC,GAA4BrV,EAAY,kBACrC/L,SACV0oD,EAAkB,IAAI3sC,GACtB,gBACA,cACA,KACAvG,EACA4C,GAEF+I,EAActc,KAAK,CACjBiG,MAAO49C,EACPrnC,UAAWunC,IAEZF,EAAgBvkD,KAAOwkD,IA3tBpC,SACExnC,EACAlB,EACA+oC,EACAxzC,EACA4C,GAEA,GACE,WAAa6H,GACb+oC,GACAA,EAAgB38C,YAAc+L,EAC9B,CACA,IAAI/T,EAASwhD,IACRztC,EAAkB/M,KAAqB,MAAMhH,QAEhD2hD,EAAYxwC,EAAYwwC,UAC1BA,GAIE,QAHE/lC,GAAgBA,EAAe+lC,EAAU36C,KAAqB,MAC5Dw6C,GAAqB5lC,EAAagpC,YAClCjD,EAAU5X,aAAa,iBACA/pC,EAAS4b,EAAgB+lC,EAAY,MAClE,IAAIl7C,EAAQ,IAAI8O,GACd,SACA,SACA,KACApE,EACA4C,GAEF+I,EAActc,KAAK,CACjBiG,MAAOA,EACPuW,UAAW,CACT,CACEgL,SAAU,KACVsD,SAAU,WACR,GAAIna,EAAYkD,kBACd,GAAI,IAAMgsC,GAA4B,CACpC,IAAIzkB,EAAW+lB,EACXD,GAA4B3tC,EAAmB4tC,GAC/C,IAAIE,SAAS9tC,GACjB2nB,GACEipB,EACA,CACE9kD,SAAS,EACTC,KAAM87B,EACN77B,OAAQgU,EAAkBhU,OAC1BC,OAAQA,GAEV,KACA47B,EAEJ,MAEA,oBAAsB57B,IACnByG,EAAM+N,iBACNonB,EAAW+lB,EACRD,GAA4B3tC,EAAmB4tC,GAC/C,IAAIE,SAAS9tC,GACjB2nB,GACEipB,EACA,CACE9kD,SAAS,EACTC,KAAM87B,EACN77B,OAAQgU,EAAkBhU,OAC1BC,OAAQA,GAEVA,EACA47B,GAER,EACAznB,cAAeJ,KAIvB,CACF,CAkpBM8wC,CACE/nC,EACAlB,EACAlU,EACAyJ,EACA4C,EAEJ,CACAqJ,GAAqBN,EAAeolC,EACtC,GACF,CACA,SAAS8B,GAAuBh8B,EAAUsD,EAAUnX,GAClD,MAAO,CACL6T,SAAUA,EACVsD,SAAUA,EACVnX,cAAeA,EAEnB,CACA,SAAS4I,GAA4B+nC,EAAajxC,GAChD,IACE,IAAIkxC,EAAclxC,EAAY,UAAWmJ,EAAY,GACrD,OAAS8nC,GAET,CACA,IAAIE,EAAaF,EACf98C,EAAYg9C,EAAWh9C,UAczB,GAZC,KADDg9C,EAAaA,EAAWzoD,MACH,KAAOyoD,GAAc,KAAOA,GAC/C,OAASh9C,IAET,OADEg9C,EAAa3yC,GAAYyyC,EAAaC,KAEtC/nC,EAAUioC,QACRjB,GAAuBc,EAAaE,EAAYh9C,IAGpD,OADCg9C,EAAa3yC,GAAYyyC,EAAajxC,KAErCmJ,EAAUxc,KACRwjD,GAAuBc,EAAaE,EAAYh9C,KAElD,IAAM88C,EAAYvoD,IAAK,OAAOygB,EAClC8nC,EAAcA,EAAYzoD,MAC5B,CACA,MAAO,EACT,CACA,SAAS6nD,GAAUn8C,GACjB,GAAI,OAASA,EAAM,OAAO,KAC1B,GAAGA,EAAOA,EAAK1L,aACR0L,GAAQ,IAAMA,EAAKxL,KAAO,KAAOwL,EAAKxL,KAC7C,OAAOwL,GAAc,IACvB,CACA,SAASo8C,GACPrnC,EACArW,EACA2K,EACA8zC,EACAvB,GAEA,IACE,IAAIh7C,EAAmBlC,EAAMwN,WAAY+I,EAAY,GACrD,OAAS5L,GAAUA,IAAW8zC,GAE9B,CACA,IAAIC,EAAa/zC,EACfhV,EAAY+oD,EAAW/oD,UACvB4L,EAAYm9C,EAAWn9C,UAEzB,GADAm9C,EAAaA,EAAW5oD,IACpB,OAASH,GAAaA,IAAc8oD,EAAQ,MAC/C,IAAMC,GAAc,KAAOA,GAAc,KAAOA,GAC/C,OAASn9C,IACP5L,EAAY4L,EACd27C,EAEI,OADE37C,EAAYqK,GAAYjB,EAAQzI,KAEhCqU,EAAUioC,QACRjB,GAAuB5yC,EAAQpJ,EAAW5L,IAE9CunD,GAEA,OADE37C,EAAYqK,GAAYjB,EAAQzI,KAEhCqU,EAAUxc,KACRwjD,GAAuB5yC,EAAQpJ,EAAW5L,KAEpDgV,EAASA,EAAO/U,MAClB,CACA,IAAM2gB,EAAUrhB,QACdmhB,EAActc,KAAK,CAAEiG,MAAOA,EAAOuW,UAAWA,GAClD,CACA,IAAIooC,GAA2B,SAC7BC,GAAuC,iBACzC,SAASC,GAAkCC,GACzC,OAAQ,kBAAoBA,EAASA,EAAS,GAAKA,GAChDr5C,QAAQk5C,GAA0B,MAClCl5C,QAAQm5C,GAAsC,GACnD,CACA,SAASj9B,GAAsBo9B,EAAYC,GAEzC,OADAA,EAAaH,GAAkCG,GACxCH,GAAkCE,KAAgBC,CAC3D,CACA,SAAS/8B,KAAU,CACnB,SAASklB,GAAQJ,EAAYjxC,EAAK0c,EAAKxY,EAAOkR,EAAOopB,GACnD,OAAQ9hB,GACN,IAAK,WACH,kBAAoBxY,EAChB,SAAWlE,GACV,aAAeA,GAAO,KAAOkE,GAC9BkP,GAAe69B,EAAY/sC,IAC1B,kBAAoBA,GAAS,kBAAoBA,IAClD,SAAWlE,GACXoT,GAAe69B,EAAY,GAAK/sC,GACpC,MACF,IAAK,YACHoJ,GAA0B2jC,EAAY,QAAS/sC,GAC/C,MACF,IAAK,WACHoJ,GAA0B2jC,EAAY,WAAY/sC,GAClD,MACF,IAAK,MACL,IAAK,OACL,IAAK,UACL,IAAK,QACL,IAAK,SACHoJ,GAA0B2jC,EAAYv0B,EAAKxY,GAC3C,MACF,IAAK,QACH+P,GAAkBg9B,EAAY/sC,EAAOs6B,GACrC,MACF,IAAK,OACH,GAAI,WAAax+B,EAAK,CACpBsN,GAA0B2jC,EAAY,OAAQ/sC,GAC9C,KACF,CACF,IAAK,MACL,IAAK,OACH,GAAI,KAAOA,IAAU,MAAQlE,GAAO,SAAW0c,GAAM,CACnDu0B,EAAW/jC,gBAAgBwP,GAC3B,KACF,CACA,GACE,MAAQxY,GACR,oBAAsBA,GACtB,kBAAoBA,GACpB,mBAAqBA,EACrB,CACA+sC,EAAW/jC,gBAAgBwP,GAC3B,KACF,CACAxY,EAAQuQ,GAAY,GAAKvQ,GACzB+sC,EAAW5jC,aAAaqP,EAAKxY,GAC7B,MACF,IAAK,SACL,IAAK,aACH,GAAI,oBAAsBA,EAAO,CAC/B+sC,EAAW5jC,aACTqP,EACA,wRAEF,KACF,CAgCA,GA/BE,oBAAsB8hB,IACnB,eAAiB9hB,GACb,UAAY1c,GACXqxC,GAAQJ,EAAYjxC,EAAK,OAAQoV,EAAM7S,KAAM6S,EAAO,MACtDi8B,GACEJ,EACAjxC,EACA,cACAoV,EAAM+zC,YACN/zC,EACA,MAEFi8B,GACEJ,EACAjxC,EACA,aACAoV,EAAMg0C,WACNh0C,EACA,MAEFi8B,GACEJ,EACAjxC,EACA,aACAoV,EAAMi0C,WACNj0C,EACA,QAEDi8B,GAAQJ,EAAYjxC,EAAK,UAAWoV,EAAMk0C,QAASl0C,EAAO,MAC3Di8B,GAAQJ,EAAYjxC,EAAK,SAAUoV,EAAM5R,OAAQ4R,EAAO,MACxDi8B,GAAQJ,EAAYjxC,EAAK,SAAUoV,EAAMP,OAAQO,EAAO,QAE9D,MAAQlR,GACR,kBAAoBA,GACpB,mBAAqBA,EACrB,CACA+sC,EAAW/jC,gBAAgBwP,GAC3B,KACF,CACAxY,EAAQuQ,GAAY,GAAKvQ,GACzB+sC,EAAW5jC,aAAaqP,EAAKxY,GAC7B,MACF,IAAK,UACH,MAAQA,IAAU+sC,EAAW/kB,QAAUC,IACvC,MACF,IAAK,WACH,MAAQjoB,GAASwnB,GAA0B,SAAUulB,GACrD,MACF,IAAK,cACH,MAAQ/sC,GAASwnB,GAA0B,YAAaulB,GACxD,MACF,IAAK,0BACH,GAAI,MAAQ/sC,EAAO,CACjB,GAAI,kBAAoBA,KAAW,WAAYA,GAC7C,MAAM5D,MAAMtB,EAAuB,KAErC,GAAI,OADJ0d,EAAMxY,EAAMqlD,QACK,CACf,GAAI,MAAQn0C,EAAMlC,SAAU,MAAM5S,MAAMtB,EAAuB,KAC/DiyC,EAAWhC,UAAYvyB,CACzB,CACF,CACA,MACF,IAAK,WACHu0B,EAAWx+B,SACTvO,GAAS,oBAAsBA,GAAS,kBAAoBA,EAC9D,MACF,IAAK,QACH+sC,EAAWuY,MACTtlD,GAAS,oBAAsBA,GAAS,kBAAoBA,EAC9D,MACF,IAAK,iCACL,IAAK,2BACL,IAAK,eACL,IAAK,iBACL,IAAK,YACL,IAAK,MAEL,IAAK,YACH,MACF,IAAK,YACH,GACE,MAAQA,GACR,oBAAsBA,GACtB,mBAAqBA,GACrB,kBAAoBA,EACpB,CACA+sC,EAAW/jC,gBAAgB,cAC3B,KACF,CACAwP,EAAMjI,GAAY,GAAKvQ,GACvB+sC,EAAWxjC,eACT,+BACA,aACAiP,GAEF,MACF,IAAK,kBACL,IAAK,aACL,IAAK,YACL,IAAK,QACL,IAAK,cACL,IAAK,4BACL,IAAK,YACL,IAAK,gBACH,MAAQxY,GAAS,oBAAsBA,GAAS,kBAAoBA,EAChE+sC,EAAW5jC,aAAaqP,EAAK,GAAKxY,GAClC+sC,EAAW/jC,gBAAgBwP,GAC/B,MACF,IAAK,QACL,IAAK,kBACL,IAAK,QACL,IAAK,WACL,IAAK,WACL,IAAK,UACL,IAAK,QACL,IAAK,WACL,IAAK,0BACL,IAAK,wBACL,IAAK,iBACL,IAAK,SACL,IAAK,OACL,IAAK,WACL,IAAK,aACL,IAAK,OACL,IAAK,cACL,IAAK,WACL,IAAK,WACL,IAAK,WACL,IAAK,SACL,IAAK,WACL,IAAK,YACHxY,GAAS,oBAAsBA,GAAS,kBAAoBA,EACxD+sC,EAAW5jC,aAAaqP,EAAK,IAC7Bu0B,EAAW/jC,gBAAgBwP,GAC/B,MACF,IAAK,UACL,IAAK,YACH,IAAOxY,EACH+sC,EAAW5jC,aAAaqP,EAAK,KAC7B,IAAOxY,GACL,MAAQA,GACR,oBAAsBA,GACtB,kBAAoBA,EACpB+sC,EAAW5jC,aAAaqP,EAAKxY,GAC7B+sC,EAAW/jC,gBAAgBwP,GACjC,MACF,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACH,MAAQxY,GACR,oBAAsBA,GACtB,kBAAoBA,IACnBulD,MAAMvlD,IACP,GAAKA,EACD+sC,EAAW5jC,aAAaqP,EAAKxY,GAC7B+sC,EAAW/jC,gBAAgBwP,GAC/B,MACF,IAAK,UACL,IAAK,QACH,MAAQxY,GACR,oBAAsBA,GACtB,kBAAoBA,GACpBulD,MAAMvlD,GACF+sC,EAAW/jC,gBAAgBwP,GAC3Bu0B,EAAW5jC,aAAaqP,EAAKxY,GACjC,MACF,IAAK,UACHwnB,GAA0B,eAAgBulB,GAC1CvlB,GAA0B,SAAUulB,GACpCnkC,GAAqBmkC,EAAY,UAAW/sC,GAC5C,MACF,IAAK,eACHqJ,GACE0jC,EACA,+BACA,gBACA/sC,GAEF,MACF,IAAK,eACHqJ,GACE0jC,EACA,+BACA,gBACA/sC,GAEF,MACF,IAAK,YACHqJ,GACE0jC,EACA,+BACA,aACA/sC,GAEF,MACF,IAAK,YACHqJ,GACE0jC,EACA,+BACA,aACA/sC,GAEF,MACF,IAAK,aACHqJ,GACE0jC,EACA,+BACA,cACA/sC,GAEF,MACF,IAAK,YACHqJ,GACE0jC,EACA,+BACA,aACA/sC,GAEF,MACF,IAAK,UACHqJ,GACE0jC,EACA,uCACA,WACA/sC,GAEF,MACF,IAAK,UACHqJ,GACE0jC,EACA,uCACA,WACA/sC,GAEF,MACF,IAAK,WACHqJ,GACE0jC,EACA,uCACA,YACA/sC,GAEF,MACF,IAAK,KACH4I,GAAqBmkC,EAAY,KAAM/sC,GACvC,MACF,IAAK,YACL,IAAK,cACH,MACF,WAEM,EAAIwY,EAAItd,SACT,MAAQsd,EAAI,IAAM,MAAQA,EAAI,IAC9B,MAAQA,EAAI,IAAM,MAAQA,EAAI,KAG7B5P,GAAqBmkC,EADtBv0B,EAAMnI,GAAQ5D,IAAI+L,IAAQA,EACaxY,GAEhD,CACA,SAASwtC,GAAuBT,EAAYjxC,EAAK0c,EAAKxY,EAAOkR,EAAOopB,GAClE,OAAQ9hB,GACN,IAAK,QACHzI,GAAkBg9B,EAAY/sC,EAAOs6B,GACrC,MACF,IAAK,0BACH,GAAI,MAAQt6B,EAAO,CACjB,GAAI,kBAAoBA,KAAW,WAAYA,GAC7C,MAAM5D,MAAMtB,EAAuB,KAErC,GAAI,OADJ0d,EAAMxY,EAAMqlD,QACK,CACf,GAAI,MAAQn0C,EAAMlC,SAAU,MAAM5S,MAAMtB,EAAuB,KAC/DiyC,EAAWhC,UAAYvyB,CACzB,CACF,CACA,MACF,IAAK,WACH,kBAAoBxY,EAChBkP,GAAe69B,EAAY/sC,IAC1B,kBAAoBA,GAAS,kBAAoBA,IAClDkP,GAAe69B,EAAY,GAAK/sC,GACpC,MACF,IAAK,WACH,MAAQA,GAASwnB,GAA0B,SAAUulB,GACrD,MACF,IAAK,cACH,MAAQ/sC,GAASwnB,GAA0B,YAAaulB,GACxD,MACF,IAAK,UACH,MAAQ/sC,IAAU+sC,EAAW/kB,QAAUC,IACvC,MACF,IAAK,iCACL,IAAK,2BACL,IAAK,YACL,IAAK,MAEL,IAAK,YACL,IAAK,cACH,MACF,QACOjgB,GAA6B7G,eAAeqX,KAG3C,MAAQA,EAAI,IACZ,MAAQA,EAAI,KACVtH,EAAQsH,EAAIgtC,SAAS,WACtB1pD,EAAM0c,EAAInS,MAAM,EAAG6K,EAAQsH,EAAItd,OAAS,OAAI,GAG7C,oBADCo/B,EAAY,OADZA,EAAYyS,EAAWxmC,KAAqB,MACZ+zB,EAAU9hB,GAAO,OAEhDu0B,EAAW96B,oBAAoBnW,EAAKw+B,EAAWppB,GACjD,oBAAsBlR,GAWxBwY,KAAOu0B,EACFA,EAAWv0B,GAAOxY,GACnB,IAAOA,EACL+sC,EAAW5jC,aAAaqP,EAAK,IAC7B5P,GAAqBmkC,EAAYv0B,EAAKxY,IAb1C,oBAAsBs6B,GACpB,OAASA,IACR9hB,KAAOu0B,EACHA,EAAWv0B,GAAO,KACnBu0B,EAAW1D,aAAa7wB,IACxBu0B,EAAW/jC,gBAAgBwP,IACjCu0B,EAAW/6B,iBAAiBlW,EAAKkE,EAAOkR,KAUpD,CACA,SAASg4B,GAAqB6D,EAAYjxC,EAAKoV,GAC7C,OAAQpV,GACN,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACH,MACF,IAAK,MACH0rB,GAA0B,QAASulB,GACnCvlB,GAA0B,OAAQulB,GAClC,IAEEE,EAFEwY,GAAS,EACXC,GAAY,EAEd,IAAKzY,KAAW/7B,EACd,GAAIA,EAAM/P,eAAe8rC,GAAU,CACjC,IAAIz+B,EAAY0C,EAAM+7B,GACtB,GAAI,MAAQz+B,EACV,OAAQy+B,GACN,IAAK,MACHwY,GAAS,EACT,MACF,IAAK,SACHC,GAAY,EACZ,MACF,IAAK,WACL,IAAK,0BACH,MAAMtpD,MAAMtB,EAAuB,IAAKgB,IAC1C,QACEqxC,GAAQJ,EAAYjxC,EAAKmxC,EAASz+B,EAAW0C,EAAO,MAE5D,CAIF,OAHAw0C,GACEvY,GAAQJ,EAAYjxC,EAAK,SAAUoV,EAAM07B,OAAQ17B,EAAO,WAC1Du0C,GAAUtY,GAAQJ,EAAYjxC,EAAK,MAAOoV,EAAMkU,IAAKlU,EAAO,OAE9D,IAAK,QACHsW,GAA0B,UAAWulB,GACrC,IAAIptC,EAAgBstC,EAAUz+B,EAAYk3C,EAAY,KACpDv4C,EAAU,KACVc,EAAiB,KACnB,IAAKw3C,KAAUv0C,EACb,GAAIA,EAAM/P,eAAeskD,GAAS,CAChC,IAAIE,EAAgBz0C,EAAMu0C,GAC1B,GAAI,MAAQE,EACV,OAAQF,GACN,IAAK,OACHC,EAAYC,EACZ,MACF,IAAK,OACHn3C,EAAYm3C,EACZ,MACF,IAAK,UACHx4C,EAAUw4C,EACV,MACF,IAAK,iBACH13C,EAAiB03C,EACjB,MACF,IAAK,QACH1Y,EAAU0Y,EACV,MACF,IAAK,eACHhmD,EAAegmD,EACf,MACF,IAAK,WACL,IAAK,0BACH,GAAI,MAAQA,EACV,MAAMvpD,MAAMtB,EAAuB,IAAKgB,IAC1C,MACF,QACEqxC,GAAQJ,EAAYjxC,EAAK2pD,EAAQE,EAAez0C,EAAO,MAE/D,CAYF,OAXA/C,GACE4+B,EACAE,EACAttC,EACAwN,EACAc,EACAO,EACAk3C,GACA,QAEFv5C,GAAM4gC,GAER,IAAK,SAGH,IAAK2Y,KAFLl+B,GAA0B,UAAWulB,GACrC0Y,EAASj3C,EAAYy+B,EAAU,KACb/7B,EAChB,GACEA,EAAM/P,eAAeukD,IACe,OAAlC/lD,EAAeuR,EAAMw0C,IAEvB,OAAQA,GACN,IAAK,QACHzY,EAAUttC,EACV,MACF,IAAK,eACH6O,EAAY7O,EACZ,MACF,IAAK,WACH8lD,EAAS9lD,EACX,QACEwtC,GAAQJ,EAAYjxC,EAAK4pD,EAAW/lD,EAAcuR,EAAO,MAQjE,OANApV,EAAMmxC,EACN/7B,EAAQ1C,EACRu+B,EAAWx+B,WAAak3C,OACxB,MAAQ3pD,EACJwS,GAAcy+B,IAAc0Y,EAAQ3pD,GAAK,GACzC,MAAQoV,GAAS5C,GAAcy+B,IAAc0Y,EAAQv0C,GAAO,IAElE,IAAK,WAGH,IAAK1C,KAFLgZ,GAA0B,UAAWulB,GACrCE,EAAUyY,EAAYD,EAAS,KACbv0C,EAChB,GACEA,EAAM/P,eAAeqN,IACe,OAAlC7O,EAAeuR,EAAM1C,IAEvB,OAAQA,GACN,IAAK,QACHi3C,EAAS9lD,EACT,MACF,IAAK,eACH+lD,EAAY/lD,EACZ,MACF,IAAK,WACHstC,EAAUttC,EACV,MACF,IAAK,0BACH,GAAI,MAAQA,EAAc,MAAMvD,MAAMtB,EAAuB,KAC7D,MACF,QACEqyC,GAAQJ,EAAYjxC,EAAK0S,EAAW7O,EAAcuR,EAAO,MAIjE,OAFAnC,GAAag+B,EAAY0Y,EAAQC,EAAWzY,QAC5C9gC,GAAM4gC,GAER,IAAK,SACH,IAAK5/B,KAAW+D,EACd,GACEA,EAAM/P,eAAegM,IACO,OAA1Bs4C,EAASv0C,EAAM/D,IAEjB,GACO,aADCA,EAEJ4/B,EAAWp+B,SACT82C,GACA,oBAAsBA,GACtB,kBAAoBA,OAGtBtY,GAAQJ,EAAYjxC,EAAKqR,EAASs4C,EAAQv0C,EAAO,MAEzD,OACF,IAAK,SACHsW,GAA0B,eAAgBulB,GAC1CvlB,GAA0B,SAAUulB,GACpCvlB,GAA0B,SAAUulB,GACpCvlB,GAA0B,QAASulB,GACnC,MACF,IAAK,SACL,IAAK,SACHvlB,GAA0B,OAAQulB,GAClC,MACF,IAAK,QACL,IAAK,QACH,IAAK0Y,EAAS,EAAGA,EAASh+B,GAAgBvsB,OAAQuqD,IAChDj+B,GAA0BC,GAAgBg+B,GAAS1Y,GACrD,MACF,IAAK,QACHvlB,GAA0B,QAASulB,GACnCvlB,GAA0B,OAAQulB,GAClC,MACF,IAAK,UACHvlB,GAA0B,SAAUulB,GACpC,MACF,IAAK,QACL,IAAK,SACL,IAAK,OACHvlB,GAA0B,QAASulB,GACjCvlB,GAA0B,OAAQulB,GACtC,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,WACH,IAAK9+B,KAAkBiD,EACrB,GACEA,EAAM/P,eAAe8M,IACc,OAAjCw3C,EAASv0C,EAAMjD,IAEjB,OAAQA,GACN,IAAK,WACL,IAAK,0BACH,MAAM7R,MAAMtB,EAAuB,IAAKgB,IAC1C,QACEqxC,GAAQJ,EAAYjxC,EAAKmS,EAAgBw3C,EAAQv0C,EAAO,MAEhE,OACF,QACE,GAAId,GAAgBtU,GAAM,CACxB,IAAK6pD,KAAiBz0C,EACpBA,EAAM/P,eAAewkD,UAEnB,KADEF,EAASv0C,EAAMy0C,KAEfnY,GACET,EACAjxC,EACA6pD,EACAF,EACAv0C,OACA,IAER,MACF,EAEJ,IAAKvR,KAAgBuR,EACnBA,EAAM/P,eAAexB,KAEnB,OADE8lD,EAASv0C,EAAMvR,KAEfwtC,GAAQJ,EAAYjxC,EAAK6D,EAAc8lD,EAAQv0C,EAAO,MAC9D,CA0UA,IAAIirC,GAAgB,KAClBO,GAAuB,KACzB,SAASzT,GAAkCmZ,GACzC,OAAO,IAAMA,EAAqB7mD,SAC9B6mD,EACAA,EAAqB/zC,aAC3B,CACA,SAAS5N,GAAkBD,GACzB,OAAQA,GACN,IAAK,6BACH,OAAO,EACT,IAAK,qCACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,SAASG,GAAwBilD,EAAiB1nD,GAChD,GAAI,IAAM0nD,EACR,OAAQ1nD,GACN,IAAK,MACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,QACE,OAAO,EAEb,OAAO,IAAM0nD,GAAmB,kBAAoB1nD,EAChD,EACA0nD,CACN,CACA,SAASv9B,GAAqBnqB,EAAMgT,GAClC,MACE,aAAehT,GACf,aAAeA,GACf,kBAAoBgT,EAAMlC,UAC1B,kBAAoBkC,EAAMlC,UAC1B,kBAAoBkC,EAAMlC,UACzB,kBAAoBkC,EAAM20C,yBACzB,OAAS30C,EAAM20C,yBACf,MAAQ30C,EAAM20C,wBAAwBR,MAE5C,CACA,IAAIhF,GAAiC,KAWrC,IAAIrH,GAAkB,oBAAsBxV,WAAaA,gBAAa,EACpEgX,GAAgB,oBAAsBR,aAAeA,kBAAe,EACpE8L,GAAe,oBAAsBpR,QAAUA,aAAU,EACzDmL,GACE,oBAAsBkG,eAClBA,eACA,qBAAuBD,GACrB,SAAU72B,GACR,OAAO62B,GACJt5B,QAAQ,MACRJ,KAAK6C,GACLrkB,MAAMo7C,GACX,EACAhN,GACV,SAASgN,GAAsBl9B,GAC7B0a,YAAW,WACT,MAAM1a,CACR,GACF,CACA,SAASP,GAAiBrqB,GACxB,MAAO,SAAWA,CACpB,CACA,SAASiyC,GAAsB8V,EAAgBC,GAC7C,IAAI5qD,EAAO4qD,EACTC,EAA+B,EAC/BC,EAAQ,EACV,EAAG,CACD,IAAIC,EAAW/qD,EAAKmjB,YAEpB,GADAwnC,EAAejb,YAAY1vC,GACvB+qD,GAAY,IAAMA,EAAS9qD,SAC7B,GAA6B,QAAvBD,EAAO+qD,EAAShnD,MAAuB,CAC3C,GACE,EAAI8mD,GACJ,EAAIA,EACJ,CACA7qD,EAAO6qD,EACP,IAAI93C,EAAgB43C,EAAe53C,cAGnC,GAFO,EAAP/S,GAAY40C,GAAyB7hC,EAAc9N,iBAC5C,EAAPjF,GAAY40C,GAAyB7hC,EAAcb,MACxC,EAAPlS,EACF,IAEI40C,GADF50C,EAAO+S,EAAcgjC,MAEnBhjC,EAAgB/S,EAAK8T,WACvBf,GAEA,CACA,IAAIi4C,EAAoBj4C,EAAcoQ,YACpCvS,EAAWmC,EAAcnC,SAC3BmC,EAAcxH,KACZ,WAAaqF,GACb,UAAYA,GACX,SAAWA,GACV,eAAiBmC,EAAc2W,IAAI9b,eACrC5N,EAAK0vC,YAAY38B,GACnBA,EAAgBi4C,CAClB,CACJ,CACA,GAAI,IAAMF,EAGR,OAFAH,EAAejb,YAAYqb,QAC3BjW,GAAiB8V,GAGnBE,GACF,KACE,MAAQ9qD,GAAQ,OAASA,GAAQ,OAASA,EACtC8qD,IACCD,EAA+B7qD,EAAKuS,WAAW,GAAK,QACxDs4C,EAA+B,EACpC7qD,EAAO+qD,CACT,OAAS/qD,GACT80C,GAAiB8V,EACnB,CACA,SAASpJ,GAAwBiG,GAC/B,IAAIsD,EAAWtD,EAAU3zC,WAEzB,IADAi3C,GAAY,KAAOA,EAAS9qD,WAAa8qD,EAAWA,EAAS5nC,aACtD4nC,GAAY,CACjB,IAAI/qD,EAAO+qD,EAEX,OADAA,EAAWA,EAAS5nC,YACZnjB,EAAK4Q,UACX,IAAK,OACL,IAAK,OACL,IAAK,OACH4wC,GAAwBxhD,GACxBwL,GAAsBxL,GACtB,SACF,IAAK,SACL,IAAK,QACH,SACF,IAAK,OACH,GAAI,eAAiBA,EAAK0pB,IAAI9b,cAAe,SAEjD65C,EAAU/X,YAAY1vC,EACxB,CACF,CAiFA,SAAS2lC,GAA2B1Z,GAClC,MACE,OAASA,EAASloB,MACjB,OAASkoB,EAASloB,MAAQ,aAAekoB,EAASlZ,cAAc6gC,UAErE,CAcA,SAAS5mB,GAAkBhtB,GACzB,KAAO,MAAQA,EAAMA,EAAOA,EAAKmjB,YAAa,CAC5C,IAAIljB,EAAWD,EAAKC,SACpB,GAAI,IAAMA,GAAY,IAAMA,EAAU,MACtC,GAAI,IAAMA,EAAU,CAElB,GACE,OAFFA,EAAWD,EAAK+D,OAGd,OAAS9D,GACT,OAASA,GACT,OAASA,GACT,MAAQA,EAER,MACF,GAAI,OAASA,EAAU,OAAO,IAChC,CACF,CACA,OAAOD,CACT,CACA,IAAIktB,GAA8C,KAClD,SAASrhB,GAA0Bo/C,GACjCA,EAAiBA,EAAeC,gBAChC,IAAK,IAAIJ,EAAQ,EAAGG,GAAkB,CACpC,GAAI,IAAMA,EAAehrD,SAAU,CACjC,IAAI8D,EAAOknD,EAAelnD,KAC1B,GAAI,MAAQA,GAAQ,OAASA,GAAQ,OAASA,EAAM,CAClD,GAAI,IAAM+mD,EAAO,OAAOG,EACxBH,GACF,KAAO,OAAS/mD,GAAQ+mD,GAC1B,CACAG,EAAiBA,EAAeC,eAClC,CACA,OAAO,IACT,CACA,SAASrd,GAAyBjrC,EAAMgT,EAAOu1C,GAE7C,OADAv1C,EAAQ+3B,GAAkCwd,GAClCvoD,GACN,IAAK,OAEH,KADAA,EAAOgT,EAAM3Q,iBACF,MAAMnE,MAAMtB,EAAuB,MAC9C,OAAOoD,EACT,IAAK,OAEH,KADAA,EAAOgT,EAAMmgC,MACF,MAAMj1C,MAAMtB,EAAuB,MAC9C,OAAOoD,EACT,IAAK,OAEH,KADAA,EAAOgT,EAAM1D,MACF,MAAMpR,MAAMtB,EAAuB,MAC9C,OAAOoD,EACT,QACE,MAAM9B,MAAMtB,EAAuB,MAEzC,CACA,SAASo1C,GAAyB3oB,GAChC,IAAK,IAAI6mB,EAAa7mB,EAAS6mB,WAAYA,EAAWlzC,QACpDqsB,EAAS8mB,oBAAoBD,EAAW,IAC1CtnC,GAAsBygB,EACxB,CACA,IAAIgtB,GAAkB,IAAI5sC,IACxB++C,GAAiB,IAAI3+C,IACvB,SAASiqC,GAAiB+Q,GACxB,MAAO,oBAAsBA,EAAU4D,YACnC5D,EAAU4D,cACV,IAAM5D,EAAUxnD,SACdwnD,EACAA,EAAU10C,aAClB,CACA,IAAIu4C,GAAqB3nD,EAAwB4nD,EACjD5nD,EAAwB4nD,EAAI,CAC1BC,EAUF,WACE,IAAIC,EAAuBH,GAAmBE,IAC5CE,EAAer1C,KACjB,OAAOo1C,GAAwBC,CACjC,EAbEC,EAcF,SAA0B31C,GACxB,IAAI41C,EAAW9/C,GAAoBkK,GACnC,OAAS41C,GAAY,IAAMA,EAASprD,KAAO,SAAWorD,EAAShpD,KAC3Dm9B,GAAmB6rB,GACnBN,GAAmBK,EAAE31C,EAC3B,EAlBE61C,EAuCF,SAAqB/nC,GACnBwnC,GAAmBO,EAAE/nC,GACrBgoC,GAAa,eAAgBhoC,EAAM,KACrC,EAzCEioC,EA0CF,SAAoBjoC,EAAMmqB,GACxBqd,GAAmBS,EAAEjoC,EAAMmqB,GAC3B6d,GAAa,aAAchoC,EAAMmqB,EACnC,EA5CE+d,EA6CF,SAAiBloC,EAAMmoC,EAAI74C,GACzBk4C,GAAmBU,EAAEloC,EAAMmoC,EAAI74C,GAC/B,IAAIL,EAAgBm5C,GACpB,GAAIn5C,GAAiB+Q,GAAQmoC,EAAI,CAC/B,IAAIE,EACF,2BACA95C,GAA+C45C,GAC/C,KACF,UAAYA,GACR74C,GAAWA,EAAQg5C,aACfD,GACA,iBACA95C,GACEe,EAAQg5C,aAEV,KACF,kBAAoBh5C,EAAQi5C,aACzBF,GACC,gBACA95C,GACEe,EAAQi5C,YAEV,OAKLF,GACC,UACA95C,GAA+CyR,GAC/C,KACN,IAAI5G,EAAMivC,EACV,OAAQF,GACN,IAAK,QACH/uC,EAAM07B,GAAY90B,GAClB,MACF,IAAK,SACH5G,EAAMovC,GAAaxoC,GAEvBm1B,GAAgBzkC,IAAI0I,KAChB4G,EAAO5iB,EACP,CACEwoB,IAAK,UACL5F,KACE,UAAYmoC,GAAM74C,GAAWA,EAAQg5C,iBAAc,EAAStoC,EAC9DmoC,GAAIA,GAEN74C,GAEF6lC,GAAgBhqC,IAAIiO,EAAK4G,GACzB,OAAS/Q,EAAcijC,cAAcmW,IAClC,UAAYF,GACXl5C,EAAcijC,cAAc6C,GAA6B37B,KAC1D,WAAa+uC,GACZl5C,EAAcijC,cAAcuW,GAAyBrvC,MAEvD0wB,GADEqe,EAAKl5C,EAAcyD,cAAc,QACV,OAAQsN,GACjCvX,GAAoB0/C,GACpBl5C,EAAcgjC,KAAKpG,YAAYsc,IACrC,CACF,EAxGEO,EAyGF,SAAuB1oC,EAAM1Q,GAC3Bk4C,GAAmBkB,EAAE1oC,EAAM1Q,GAC3B,IAAIL,EAAgBm5C,GACpB,GAAIn5C,GAAiB+Q,EAAM,CACzB,IAAImoC,EAAK74C,GAAW,kBAAoBA,EAAQ64C,GAAK74C,EAAQ64C,GAAK,SAChEE,EACE,iCACA95C,GAA+C45C,GAC/C,YACA55C,GAA+CyR,GAC/C,KACF5G,EAAMivC,EACR,OAAQF,GACN,IAAK,eACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,SACL,IAAK,SACH/uC,EAAMovC,GAAaxoC,GAEvB,IACGm1B,GAAgBzkC,IAAI0I,KACnB4G,EAAO5iB,EAAO,CAAEwoB,IAAK,gBAAiB5F,KAAMA,GAAQ1Q,GACtD6lC,GAAgBhqC,IAAIiO,EAAK4G,GACzB,OAAS/Q,EAAcijC,cAAcmW,IACrC,CACA,OAAQF,GACN,IAAK,eACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,SACL,IAAK,SACH,GAAIl5C,EAAcijC,cAAcuW,GAAyBrvC,IACvD,OAGN0wB,GADAqe,EAAKl5C,EAAcyD,cAAc,QACR,OAAQsN,GACjCvX,GAAoB0/C,GACpBl5C,EAAcgjC,KAAKpG,YAAYsc,EACjC,CACF,CACF,EAnJEQ,EAqMF,SAAuB3iC,EAAK1W,GAC1Bk4C,GAAmBmB,EAAE3iC,EAAK1W,GAC1B,IAAIL,EAAgBm5C,GACpB,GAAIn5C,GAAiB+W,EAAK,CACxB,IAAI4iC,EAAUxgD,GAAqB6G,GAAezG,iBAChD4Q,EAAMovC,GAAaxiC,GACnB2Q,EAAWiyB,EAAQv7C,IAAI+L,GACzBud,KACIA,EAAW1nB,EAAcijC,cAAcuW,GAAyBrvC,OAE9D4M,EAAM5oB,EAAO,CAAE4oB,IAAKA,EAAKD,OAAO,GAAMzW,IACvCA,EAAU6lC,GAAgB9nC,IAAI+L,KAC7ByvC,GAA2B7iC,EAAK1W,GAElC7G,GADCkuB,EAAW1nB,EAAcyD,cAAc,WAExCo3B,GAAqBnT,EAAU,OAAQ3Q,GACvC/W,EAAcgjC,KAAKpG,YAAYlV,IAChCA,EAAW,CACV73B,KAAM,SACNqpB,SAAUwO,EACVga,MAAO,EACP3b,MAAO,MAET4zB,EAAQz9C,IAAIiO,EAAKud,GACrB,CACF,EA7NE5J,EAmJF,SAAsB/M,EAAM2F,EAAYrW,GACtCk4C,GAAmBz6B,EAAE/M,EAAM2F,EAAYrW,GACvC,IAAIL,EAAgBm5C,GACpB,GAAIn5C,GAAiB+Q,EAAM,CACzB,IAAIpP,EAASxI,GAAqB6G,GAAe3G,gBAC/C8Q,EAAM07B,GAAY90B,GACpB2F,EAAaA,GAAc,UAC3B,IAAIgR,EAAW/lB,EAAOvD,IAAI+L,GAC1B,IAAKud,EAAU,CACb,IAAI3B,EAAQ,CAAE0V,QAAS,EAAGiL,QAAS,MACnC,GACGhf,EAAW1nB,EAAcijC,cACxB6C,GAA6B37B,IAG/B4b,EAAM0V,QAAU,MACb,CACH1qB,EAAO5iB,EACL,CAAEwoB,IAAK,aAAc5F,KAAMA,EAAM,kBAAmB2F,GACpDrW,IAEDA,EAAU6lC,GAAgB9nC,IAAI+L,KAC7Bg8B,GAA+Bp1B,EAAM1Q,GACvC,IAAIw5C,EAAQnyB,EAAW1nB,EAAcyD,cAAc,QACnDjK,GAAoBqgD,GACpBhf,GAAqBgf,EAAM,OAAQ9oC,GACnC8oC,EAAK9T,GAAK,IAAIM,SAAQ,SAAUloB,EAASmoB,GACvCuT,EAAKtT,OAASpoB,EACd07B,EAAKrT,QAAUF,CACjB,IACAuT,EAAKl2C,iBAAiB,QAAQ,WAC5BoiB,EAAM0V,SAAW,CACnB,IACAoe,EAAKl2C,iBAAiB,SAAS,WAC7BoiB,EAAM0V,SAAW,CACnB,IACA1V,EAAM0V,SAAW,EACjBqe,GAAiBpyB,EAAUhR,EAAY1W,EACzC,CACA0nB,EAAW,CACT73B,KAAM,aACNqpB,SAAUwO,EACVga,MAAO,EACP3b,MAAOA,GAETpkB,EAAOzF,IAAIiO,EAAKud,EAClB,CACF,CACF,EAlMEqyB,EA6NF,SAA6BhjC,EAAK1W,GAChCk4C,GAAmBwB,EAAEhjC,EAAK1W,GAC1B,IAAIL,EAAgBm5C,GACpB,GAAIn5C,GAAiB+W,EAAK,CACxB,IAAI4iC,EAAUxgD,GAAqB6G,GAAezG,iBAChD4Q,EAAMovC,GAAaxiC,GACnB2Q,EAAWiyB,EAAQv7C,IAAI+L,GACzBud,KACIA,EAAW1nB,EAAcijC,cAAcuW,GAAyBrvC,OAE9D4M,EAAM5oB,EAAO,CAAE4oB,IAAKA,EAAKD,OAAO,EAAIjnB,KAAM,UAAYwQ,IACvDA,EAAU6lC,GAAgB9nC,IAAI+L,KAC7ByvC,GAA2B7iC,EAAK1W,GAElC7G,GADCkuB,EAAW1nB,EAAcyD,cAAc,WAExCo3B,GAAqBnT,EAAU,OAAQ3Q,GACvC/W,EAAcgjC,KAAKpG,YAAYlV,IAChCA,EAAW,CACV73B,KAAM,SACNqpB,SAAUwO,EACVga,MAAO,EACP3b,MAAO,MAET4zB,EAAQz9C,IAAIiO,EAAKud,GACrB,CACF,GAzOA,IAAIyxB,GAAiB,qBAAuBl6C,SAAW,KAAOA,SAC9D,SAAS85C,GAAapiC,EAAK5F,EAAMmqB,GAC/B,IAAIl7B,EAAgBm5C,GACpB,GAAIn5C,GAAiB,kBAAoB+Q,GAAQA,EAAM,CACrD,IAAIipC,EACF16C,GAA+CyR,GACjDipC,EACE,aAAerjC,EAAM,YAAcqjC,EAAqB,KAC1D,kBAAoB9e,IACjB8e,GAAsB,iBAAmB9e,EAAc,MAC1Dmd,GAAe52C,IAAIu4C,KAChB3B,GAAer+C,IAAIggD,GACnBrjC,EAAM,CAAEA,IAAKA,EAAKukB,YAAaA,EAAanqB,KAAMA,GACnD,OAAS/Q,EAAcijC,cAAc+W,KAEnCnf,GADE9pB,EAAO/Q,EAAcyD,cAAc,QACV,OAAQkT,GACnCnd,GAAoBuX,GACpB/Q,EAAcgjC,KAAKpG,YAAY7rB,IACrC,CACF,CAuNA,SAAS4pB,GAAY9qC,EAAMoqD,EAAc5kC,EAAcytB,GACrD,IAwHyB9iC,EAAemK,EAAK+vC,EAAcn0B,EAxHvDrzB,GAA4BA,EAC9BZ,EAAwBP,SACtBoyC,GAAiBjxC,GACjB,KACJ,IAAKA,EAA0B,MAAM3E,MAAMtB,EAAuB,MAClE,OAAQoD,GACN,IAAK,OACL,IAAK,QACH,OAAO,KACT,IAAK,QACH,MAAO,kBAAoBwlB,EAAaqB,YACtC,kBAAoBrB,EAAatE,MAC7BkpC,EAAepU,GAAYxwB,EAAatE,OAIzC+xB,GAHAztB,EAAelc,GACdzG,GACA2G,iBAC8B+E,IAAI67C,MAEhCnX,EAAkB,CAClBjzC,KAAM,QACNqpB,SAAU,KACVwoB,MAAO,EACP3b,MAAO,MAET1Q,EAAanZ,IAAI+9C,EAAcnX,IACjCA,GACA,CAAEjzC,KAAM,OAAQqpB,SAAU,KAAMwoB,MAAO,EAAG3b,MAAO,MACvD,IAAK,OACH,GACE,eAAiB1Q,EAAasB,KAC9B,kBAAoBtB,EAAatE,MACjC,kBAAoBsE,EAAaqB,WACjC,CACA7mB,EAAOg2C,GAAYxwB,EAAatE,MAChC,IAAIopC,EAAahhD,GACbzG,GACA2G,gBACF+gD,EAAeD,EAAW/7C,IAAIvO,GAoChC,GAnCAuqD,IACI1nD,EACAA,EAAyBsN,eAAiBtN,EAC3C0nD,EAAe,CACdvqD,KAAM,aACNqpB,SAAU,KACVwoB,MAAO,EACP3b,MAAO,CAAE0V,QAAS,EAAGiL,QAAS,OAEhCyT,EAAWj+C,IAAIrM,EAAMuqD,IACpBD,EAAaznD,EAAyBuwC,cACrC6C,GAA6Bj2C,OAE5BsqD,EAAWpU,KACVqU,EAAalhC,SAAWihC,EACzBC,EAAar0B,MAAM0V,QAAU,GAChCyK,GAAgBzkC,IAAI5R,KAChBwlB,EAAe,CACfsB,IAAK,UACLuiC,GAAI,QACJnoC,KAAMsE,EAAatE,KACnBmqB,YAAa7lB,EAAa6lB,YAC1Bmf,UAAWhlC,EAAaglC,UACxB3U,MAAOrwB,EAAaqwB,MACpB4U,SAAUjlC,EAAailC,SACvBC,eAAgBllC,EAAaklC,gBAE/BrU,GAAgBhqC,IAAIrM,EAAMwlB,GAC1B8kC,IAsDen6C,EApDXtN,EAoD0ByX,EAnD1Bta,EAmD+BqqD,EAlD/B7kC,EAkD6C0Q,EAjD7Cq0B,EAAar0B,MAkD3B/lB,EAAcijC,cAAc,mCAAqC94B,EAAM,KAClE4b,EAAM0V,QAAU,GACftxB,EAAMnK,EAAcyD,cAAc,QACnCsiB,EAAM2gB,QAAUv8B,EACjBA,EAAIxG,iBAAiB,QAAQ,WAC3B,OAAQoiB,EAAM0V,SAAW,CAC3B,IACAtxB,EAAIxG,iBAAiB,SAAS,WAC5B,OAAQoiB,EAAM0V,SAAW,CAC3B,IACAZ,GAAqB1wB,EAAK,OAAQ+vC,GAClC1gD,GAAoB2Q,GACpBnK,EAAcgjC,KAAKpG,YAAYzyB,OA5DzB8vC,GAAgB,OAASnX,EAC3B,MAAM/0C,MAAMtB,EAAuB,IAAK,KAC1C,OAAO2tD,CACT,CACA,GAAIH,GAAgB,OAASnX,EAC3B,MAAM/0C,MAAMtB,EAAuB,IAAK,KAC1C,OAAO,KACT,IAAK,SACH,OACGwtD,EAAe5kC,EAAayB,MAE7B,kBADCzB,EAAeA,EAAa0B,MAE7BkjC,GACA,oBAAsBA,GACtB,kBAAoBA,GACdA,EAAeV,GAAalkC,IAI7BytB,GAHAztB,EAAelc,GACdzG,GACA6G,kBAC8B6E,IAAI67C,MAEhCnX,EAAkB,CAClBjzC,KAAM,SACNqpB,SAAU,KACVwoB,MAAO,EACP3b,MAAO,MAET1Q,EAAanZ,IAAI+9C,EAAcnX,IACjCA,GACA,CAAEjzC,KAAM,OAAQqpB,SAAU,KAAMwoB,MAAO,EAAG3b,MAAO,MAEzD,QACE,MAAMh4B,MAAMtB,EAAuB,IAAKoD,IAE9C,CACA,SAASg2C,GAAY90B,GACnB,MAAO,SAAWzR,GAA+CyR,GAAQ,GAC3E,CACA,SAAS+0B,GAA6B37B,GACpC,MAAO,0BAA4BA,EAAM,GAC3C,CACA,SAAS87B,GAA4BuU,GACnC,OAAOrsD,EAAO,CAAC,EAAGqsD,EAAU,CAC1B,kBAAmBA,EAAS9jC,WAC5BA,WAAY,MAEhB,CAgBA,SAAS6iC,GAAaxiC,GACpB,MAAO,SAAWzX,GAA+CyX,GAAO,IAC1E,CACA,SAASyiC,GAAyBrvC,GAChC,MAAO,gBAAkBA,CAC3B,CACA,SAASs5B,GAAgBZ,EAAenb,EAAU7kB,GAEhD,GADA6kB,EAASga,QACL,OAASha,EAASxO,SACpB,OAAQwO,EAAS73B,MACf,IAAK,QACH,IAAIqpB,EAAW2pB,EAAcI,cAC3B,qBACE3jC,GAA+CuD,EAAMkO,MACrD,MAEJ,GAAImI,EACF,OACGwO,EAASxO,SAAWA,EACrB1f,GAAoB0f,GACpBA,EAEJ,IAAIuhC,EAAatsD,EAAO,CAAC,EAAG0U,EAAO,CACjC,YAAaA,EAAMkO,KACnB,kBAAmBlO,EAAM6T,WACzB3F,KAAM,KACN2F,WAAY,OAQd,OAHAld,GAHA0f,GAAY2pB,EAAc7iC,eAAiB6iC,GAAep/B,cACxD,UAGFo3B,GAAqB3hB,EAAU,QAASuhC,GACxCX,GAAiB5gC,EAAUrW,EAAM6T,WAAYmsB,GACrCnb,EAASxO,SAAWA,EAC9B,IAAK,aACHuhC,EAAa5U,GAAYhjC,EAAMkO,MAC/B,IAAI2pC,EAAe7X,EAAcI,cAC/B6C,GAA6B2U,IAE/B,GAAIC,EACF,OACGhzB,EAAS3B,MAAM0V,SAAW,EAC1B/T,EAASxO,SAAWwhC,EACrBlhD,GAAoBkhD,GACpBA,EAEJxhC,EAAW+sB,GAA4BpjC,IACtC43C,EAAavU,GAAgB9nC,IAAIq8C,KAChCtU,GAA+BjtB,EAAUuhC,GAI3CjhD,GAHAkhD,GACE7X,EAAc7iC,eAAiB6iC,GAC/Bp/B,cAAc,SAEhB,IAAI2iC,EAAesU,EAQnB,OAPAtU,EAAaL,GAAK,IAAIM,SAAQ,SAAUloB,EAASmoB,GAC/CF,EAAaG,OAASpoB,EACtBioB,EAAaI,QAAUF,CACzB,IACAzL,GAAqB6f,EAAc,OAAQxhC,GAC3CwO,EAAS3B,MAAM0V,SAAW,EAC1Bqe,GAAiBY,EAAc73C,EAAM6T,WAAYmsB,GACzCnb,EAASxO,SAAWwhC,EAC9B,IAAK,SAEH,OADAA,EAAenB,GAAa12C,EAAMkU,MAE/B0jC,EAAa5X,EAAcI,cAC1BuW,GAAyBkB,MAIxBhzB,EAASxO,SAAWuhC,EACrBjhD,GAAoBihD,GACpBA,IAEJvhC,EAAWrW,GACN43C,EAAavU,GAAgB9nC,IAAIs8C,KAElCd,GADD1gC,EAAW/qB,EAAO,CAAC,EAAG0U,GACgB43C,GAGzCjhD,GADAihD,GADA5X,EAAgBA,EAAc7iC,eAAiB6iC,GACpBp/B,cAAc,WAEzCo3B,GAAqB4f,EAAY,OAAQvhC,GACzC2pB,EAAcG,KAAKpG,YAAY6d,GACvB/yB,EAASxO,SAAWuhC,GAC9B,IAAK,OACH,OAAO,KACT,QACE,MAAM1sD,MAAMtB,EAAuB,IAAKi7B,EAAS73B,WAGrD,eAAiB63B,EAAS73B,MACxB,KAAgC,EAAzB63B,EAAS3B,MAAM0V,WACpBviB,EAAWwO,EAASxO,SACrBwO,EAAS3B,MAAM0V,SAAW,EAC3Bqe,GAAiB5gC,EAAUrW,EAAM6T,WAAYmsB,IACjD,OAAOnb,EAASxO,QAClB,CACA,SAAS4gC,GAAiB5gC,EAAUxC,EAAYlhB,GAC9C,IACE,IAAImlD,EAAQnlD,EAAKuN,iBACb,kEAEF4mB,EAAOgxB,EAAM9tD,OAAS8tD,EAAMA,EAAM9tD,OAAS,GAAK,KAChD+tD,EAAQjxB,EACR58B,EAAI,EACNA,EAAI4tD,EAAM9tD,OACVE,IACA,CACA,IAAIE,EAAO0tD,EAAM5tD,GACjB,GAAIE,EAAKksC,QAAQziB,aAAeA,EAAYkkC,EAAQ3tD,OAC/C,GAAI2tD,IAAUjxB,EAAM,KAC3B,CACAixB,EACIA,EAAM/hD,WAAW6mC,aAAaxmB,EAAU0hC,EAAMxqC,cAC5CsG,EAAa,IAAMlhB,EAAKtI,SAAWsI,EAAKwtC,KAAOxtC,GACtCkqC,aAAaxmB,EAAUxC,EAAW3V,WACnD,CACA,SAASolC,GAA+B0U,EAAiBX,GACvD,MAAQW,EAAgB3f,cACrB2f,EAAgB3f,YAAcgf,EAAahf,aAC9C,MAAQ2f,EAAgBN,iBACrBM,EAAgBN,eAAiBL,EAAaK,gBACjD,MAAQM,EAAgB1f,QAAU0f,EAAgB1f,MAAQ+e,EAAa/e,MACzE,CACA,SAASye,GAA2BkB,EAAaZ,GAC/C,MAAQY,EAAY5f,cACjB4f,EAAY5f,YAAcgf,EAAahf,aAC1C,MAAQ4f,EAAYP,iBACjBO,EAAYP,eAAiBL,EAAaK,gBAC7C,MAAQO,EAAYT,YACjBS,EAAYT,UAAYH,EAAaG,UAC1C,CACA,IAAI3W,GAAY,KAChB,SAASP,GAA4BtzC,EAAMkrD,EAAc/6C,GACvD,GAAI,OAAS0jC,GAAW,CACtB,IAAIpmB,EAAQ,IAAIhkB,IACZ0hD,EAAUtX,GAAY,IAAIpqC,IAC9B0hD,EAAO9+C,IAAI8D,EAAesd,EAC5B,MAEKA,GADF09B,EAAStX,IACQtlC,IAAI4B,MACTsd,EAAQ,IAAIhkB,IAAQ0hD,EAAO9+C,IAAI8D,EAAesd,IAC7D,GAAIA,EAAM7b,IAAI5R,GAAO,OAAOytB,EAG5B,IAFAA,EAAMphB,IAAIrM,EAAM,MAChBmQ,EAAgBA,EAAc+iC,qBAAqBlzC,GAC9CmrD,EAAS,EAAGA,EAASh7C,EAAcnT,OAAQmuD,IAAU,CACxD,IAAI/tD,EAAO+S,EAAcg7C,GACzB,KAEI/tD,EAAKuL,KACLvL,EAAKgL,KACJ,SAAWpI,GAAQ,eAAiB5C,EAAKguC,aAAa,SAEzD,+BAAiChuC,EAAKkF,aACtC,CACA,IAAI8oD,EAAUhuD,EAAKguC,aAAa8f,IAAiB,GACjDE,EAAUprD,EAAOorD,EACjB,IAAIpnC,EAAWyJ,EAAMlf,IAAI68C,GACzBpnC,EAAWA,EAASniB,KAAKzE,GAAQqwB,EAAMphB,IAAI++C,EAAS,CAAChuD,GACvD,CACF,CACA,OAAOqwB,CACT,CACA,SAASkmB,GAAeX,EAAehzC,EAAMqpB,IAC3C2pB,EAAgBA,EAAc7iC,eAAiB6iC,GACjCG,KAAKtD,aACjBxmB,EACA,UAAYrpB,EAAOgzC,EAAcI,cAAc,gBAAkB,KAErE,CA+CA,SAASvH,GAAgBhU,GACvB,MAAO,eAAiBA,EAAS73B,MAAQ,KAAgC,EAAzB63B,EAAS3B,MAAM0V,QAGjE,CACA,IAAIgK,GAAiB,KACrB,SAAS8F,KAAQ,CA6EjB,SAASvF,KAEP,GADA3nC,KAAKqjC,QACD,IAAMrjC,KAAKqjC,MACb,GAAIrjC,KAAKooC,YAAa+E,GAA2BntC,KAAMA,KAAKooC,kBACvD,GAAIpoC,KAAKitC,UAAW,CACvB,IAAIA,EAAYjtC,KAAKitC,UACrBjtC,KAAKitC,UAAY,KACjBA,GACF,CACJ,CACA,IAAI4P,GAAoB,KACxB,SAAS1P,GAA2BzlB,EAAO3sB,GACzC2sB,EAAM0gB,YAAc,KACpB,OAAS1gB,EAAMulB,YACZvlB,EAAM2b,QACNwZ,GAAoB,IAAI5hD,IACzBF,EAAUsjB,QAAQy+B,GAA0Bp1B,GAC3Cm1B,GAAoB,KACrBlV,GAAYvrC,KAAKsrB,GACrB,CACA,SAASo1B,GAAyB3lD,EAAMkyB,GACtC,KAA+B,EAAzBA,EAAS3B,MAAM0V,SAAc,CACjC,IAAI2f,EAAcF,GAAkB98C,IAAI5I,GACxC,GAAI4lD,EAAa,IAAIzxB,EAAOyxB,EAAYh9C,IAAI,UACvC,CACHg9C,EAAc,IAAI9hD,IAClB4hD,GAAkBh/C,IAAI1G,EAAM4lD,GAC5B,IACE,IAAIT,EAAQnlD,EAAKuN,iBACb,gDAEFhW,EAAI,EACNA,EAAI4tD,EAAM9tD,OACVE,IACA,CACA,IAAIE,EAAO0tD,EAAM5tD,GAEf,SAAWE,EAAK4Q,UAChB,YAAc5Q,EAAKguC,aAAa,WAEhCmgB,EAAYl/C,IAAIjP,EAAKksC,QAAQziB,WAAYzpB,GAAQ08B,EAAO18B,EAC5D,CACA08B,GAAQyxB,EAAYl/C,IAAI,KAAMytB,EAChC,CAEA18B,GADA0tD,EAAQjzB,EAASxO,UACJ+hB,aAAa,oBAC1BluC,EAAIquD,EAAYh9C,IAAInR,IAAS08B,KACvBA,GAAQyxB,EAAYl/C,IAAI,KAAMy+C,GACpCS,EAAYl/C,IAAIjP,EAAM0tD,GACtBt8C,KAAKqjC,QACL/X,EAAOqc,GAAYze,KAAKlpB,MACxBs8C,EAAMh3C,iBAAiB,OAAQgmB,GAC/BgxB,EAAMh3C,iBAAiB,QAASgmB,GAChC58B,EACIA,EAAE8L,WAAW6mC,aAAaib,EAAO5tD,EAAEqjB,cACjC5a,EAAO,IAAMA,EAAKtI,SAAWsI,EAAKwtC,KAAOxtC,GACtCkqC,aAAaib,EAAOnlD,EAAKuL,YAClC2mB,EAAS3B,MAAM0V,SAAW,CAC5B,CACF,CACA,IAAI7oC,GAAwB,CAC1B9C,SAAUf,EACVguB,SAAU,KACVD,SAAU,KACVjqB,cAAe/B,EACfksB,eAAgBlsB,EAChBmsB,aAAc,GAEhB,SAASo+B,GACP1qC,EACAljB,EACA6tD,EACApsB,EACA8F,EACAM,EACAgb,EACAtmB,GAEA3rB,KAAK5Q,IAAM,EACX4Q,KAAKsS,cAAgBA,EACrBtS,KAAKwyC,UAAYxyC,KAAK9M,QAAU8M,KAAKkZ,gBAAkB,KACvDlZ,KAAKqsC,eAAiB,EACtBrsC,KAAKsvC,aACHtvC,KAAKgW,KACLhW,KAAKm+B,eACLn+B,KAAK5L,QACL4L,KAAKuqC,oBACH,KACJvqC,KAAKuvC,iBAAmB,EACxBvvC,KAAK2tC,gBAAkBx1C,IAAe,GACtC6H,KAAKtH,eACHsH,KAAKqhB,oBACLrhB,KAAKmsC,2BACLnsC,KAAK8qC,aACL9qC,KAAKtI,UACLsI,KAAKvI,YACLuI,KAAKxI,eACLwI,KAAK1I,aACH,EACJ0I,KAAKpH,cAAgBT,GAAc,GACnC6H,KAAK2W,cAAgBxe,GAAc,MACnC6H,KAAK6wB,iBAAmBA,EACxB7wB,KAAK22B,gBAAkBA,EACvB32B,KAAKi3B,cAAgBA,EACrBj3B,KAAKiyC,mBAAqBA,EAC1BjyC,KAAKogB,YAAc,KACnBpgB,KAAKi9B,iBAAmB,EACxBj9B,KAAK2rB,UAAYA,EACjB3rB,KAAKk9C,sBAAwB,IAAIjiD,GACnC,CACA,SAASkiD,GACP7qC,EACAljB,EACA6tD,EACAG,EACAC,EACAC,EACAzsB,EACA8F,EACAM,EACAgb,EACAsL,EACA5xB,GA2BA,OAzBArZ,EAAgB,IAAI0qC,GAClB1qC,EACAljB,EACA6tD,EACApsB,EACA8F,EACAM,EACAgb,EACAtmB,GAEFv8B,EAAM,GACN,IAAOkuD,IAAiBluD,GAAO,IAC/BkuD,EAAe7lC,GAAqB,EAAG,KAAM,KAAMroB,GACnDkjB,EAAcpf,QAAUoqD,EACxBA,EAAaziD,UAAYyX,GACzBljB,EAAMyvB,MACFE,WACJzM,EAAc8N,YAAchxB,EAC5BA,EAAI2vB,WACJu+B,EAAa/tD,cAAgB,CAC3B8R,QAAS+7C,EACT/gB,aAAc4gB,EACdh+B,MAAO7vB,GAETyyB,GAAsBy7B,GACfhrC,CACT,CACA,SAASkrC,GAAqBC,GAC5B,OAAKA,EACLA,EAAkB3mC,GADWA,EAG/B,CACA,SAAS4mC,GACPnL,EACAx6C,EACAsJ,EACAg1C,EACAoH,EACAl7B,GAEAk7B,EAAkBD,GAAqBC,GACvC,OAASpH,EAAUjiD,QACdiiD,EAAUjiD,QAAUqpD,EACpBpH,EAAUlY,eAAiBsf,GAChCpH,EAAYh0B,GAAatqB,IACfuqB,QAAU,CAAEjhB,QAASA,GAE/B,QADAkhB,OAAW,IAAWA,EAAW,KAAOA,KAClB8zB,EAAU9zB,SAAWA,GAE3C,QADAlhB,EAAUmhB,GAAc+vB,EAAW8D,EAAWt+C,MAE3C8xB,GAAsBxoB,EAASkxC,EAAWx6C,GAC3C2qB,GAAoBrhB,EAASkxC,EAAWx6C,GAC5C,CACA,SAAS4lD,GAAkB5uD,EAAO8qC,GAEhC,GAAI,QADJ9qC,EAAQA,EAAMQ,gBACQ,OAASR,EAAMS,WAAY,CAC/C,IAAIiV,EAAI1V,EAAM8qC,UACd9qC,EAAM8qC,UAAY,IAAMp1B,GAAKA,EAAIo1B,EAAYp1B,EAAIo1B,CACnD,CACF,CACA,SAAS+jB,GAA2B7uD,EAAO8qC,GACzC8jB,GAAkB5uD,EAAO8qC,IACxB9qC,EAAQA,EAAME,YAAc0uD,GAAkB5uD,EAAO8qC,EACxD,CACA,SAASgkB,GAA2B9uD,GAClC,GAAI,KAAOA,EAAMK,IAAK,CACpB,IAAI+H,EAAOkf,GAA+BtnB,EAAO,UACjD,OAASoI,GAAQ0yB,GAAsB1yB,EAAMpI,EAAO,UACpD6uD,GAA2B7uD,EAAO,SACpC,CACF,CACA,IAAI2gD,IAAW,EACf,SAASmG,GACPpnC,EACAsmC,EACAsB,EACAryC,GAEA,IAAI6mB,EAAiBx4B,EAAqBq4B,EAC1Cr4B,EAAqBq4B,EAAI,KACzB,IAAIsD,EAAmBz7B,EAAwB6G,EAC/C,IACG7G,EAAwB6G,EAAI,EAC3B88B,GAAcznB,EAAcsmC,EAAkBsB,EAAWryC,EAC7D,CAAE,QACCzR,EAAwB6G,EAAI40B,EAC1B37B,EAAqBq4B,EAAIG,CAC9B,CACF,CACA,SAASirB,GACPrnC,EACAsmC,EACAsB,EACAryC,GAEA,IAAI6mB,EAAiBx4B,EAAqBq4B,EAC1Cr4B,EAAqBq4B,EAAI,KACzB,IAAIsD,EAAmBz7B,EAAwB6G,EAC/C,IACG7G,EAAwB6G,EAAI,EAC3B88B,GAAcznB,EAAcsmC,EAAkBsB,EAAWryC,EAC7D,CAAE,QACCzR,EAAwB6G,EAAI40B,EAC1B37B,EAAqBq4B,EAAIG,CAC9B,CACF,CACA,SAASqL,GACPznB,EACAsmC,EACAY,EACA3xC,GAEA,GAAI0rC,GAAU,CACZ,IAAIoO,EAAYC,GAA0B/5C,GAC1C,GAAI,OAAS85C,EACX7H,GACExnC,EACAsmC,EACA/wC,EACAg6C,GACArI,GAEAsI,GAAuBxvC,EAAczK,QACpC,GA+PT,SACE85C,EACArvC,EACAsmC,EACAY,EACA3xC,GAEA,OAAQyK,GACN,IAAK,UACH,OACGyvC,GAAcC,GACbD,GACAJ,EACArvC,EACAsmC,EACAY,EACA3xC,IAEF,EAEJ,IAAK,YACH,OACGo6C,GAAaD,GACZC,GACAN,EACArvC,EACAsmC,EACAY,EACA3xC,IAEF,EAEJ,IAAK,YACH,OACGq6C,GAAcF,GACbE,GACAP,EACArvC,EACAsmC,EACAY,EACA3xC,IAEF,EAEJ,IAAK,cACH,IAAIsI,EAAYtI,EAAYsI,UAY5B,OAXAgyC,GAAezgD,IACbyO,EACA6xC,GACEG,GAAev+C,IAAIuM,IAAc,KACjCwxC,EACArvC,EACAsmC,EACAY,EACA3xC,KAGG,EACT,IAAK,oBACH,OACGsI,EAAYtI,EAAYsI,UACzBiyC,GAAsB1gD,IACpByO,EACA6xC,GACEI,GAAsBx+C,IAAIuM,IAAc,KACxCwxC,EACArvC,EACAsmC,EACAY,EACA3xC,KAGJ,EAGN,OAAO,CACT,CA1UMw6C,CACEV,EACArvC,EACAsmC,EACAY,EACA3xC,GAGFA,EAAYsD,uBACT,GACF22C,GAAuBxvC,EAAczK,GACnB,EAAnB+wC,IACG,EAAI0J,GAAyBvhD,QAAQuR,GACxC,CACA,KAAO,OAASqvC,GAAa,CAC3B,IAAI/uD,EAAQ2L,GAAoBojD,GAChC,GAAI,OAAS/uD,EACX,OAAQA,EAAMK,KACZ,KAAK,EAEH,IADAL,EAAQA,EAAM8L,WACJ3H,QAAQ3D,cAAc8sC,aAAc,CAC5C,IAAIrlC,EAAQD,GAAwBhI,EAAMuI,cAC1C,GAAI,IAAMN,EAAO,CACf,IAAIG,EAAOpI,EAEX,IADAoI,EAAKG,cAAgB,EAChBH,EAAKuB,gBAAkB,EAAG1B,GAAS,CACtC,IAAIe,EAAO,GAAM,GAAKrB,GAAMM,GAC5BG,EAAKyB,cAAc,IAAMb,EACzBf,IAAUe,CACZ,CACA2yC,GAAsB37C,GACtB,KAA0B,EAAnB0zB,MACHoc,GAAqC1pC,KAAQ,IAC/C04C,GAA8B,GAAG,GACrC,CACF,CACA,MACF,KAAK,GAED,QADD12C,EAAOkf,GAA+BtnB,EAAO,KAC3B86B,GAAsB1yB,EAAMpI,EAAO,GACpDkW,KACA24C,GAA2B7uD,EAAO,GAW1C,GARA,QADAA,EAAQgvD,GAA0B/5C,KAEhCiyC,GACExnC,EACAsmC,EACA/wC,EACAg6C,GACArI,GAEA5mD,IAAU+uD,EAAW,MACzBA,EAAY/uD,CACd,CACA,OAAS+uD,GAAa95C,EAAYsD,iBACpC,MACE2uC,GACExnC,EACAsmC,EACA/wC,EACA,KACA2xC,EAEN,CACF,CACA,SAASoI,GAA0B/5C,GAEjC,OAAO06C,GADP16C,EAAcD,GAAeC,GAE/B,CACA,IAAIg6C,GAAoB,KACxB,SAASU,GAA2BpkD,GAGlC,GAFA0jD,GAAoB,KAEhB,QADJ1jD,EAAaD,GAA2BC,IACf,CACvB,IAAItL,EAAiBF,EAAuBwL,GAC5C,GAAI,OAAStL,EAAgBsL,EAAa,SACrC,CACH,IAAIlL,EAAMJ,EAAeI,IACzB,GAAI,KAAOA,EAAK,CAEd,GAAI,QADJkL,EAAajL,EAA6BL,IACjB,OAAOsL,EAChCA,EAAa,IACf,MAAO,GAAI,IAAMlL,EAAK,CACpB,GAAIJ,EAAe6L,UAAU3H,QAAQ3D,cAAc8sC,aACjD,OAAO,IAAMrtC,EAAeI,IACxBJ,EAAe6L,UAAUyX,cACzB,KACNhY,EAAa,IACf,MAAOtL,IAAmBsL,IAAeA,EAAa,KACxD,CACF,CAEA,OADA0jD,GAAoB1jD,EACb,IACT,CACA,SAASf,GAAiBkV,GACxB,OAAQA,GACN,IAAK,eACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,cACL,IAAK,OACL,IAAK,MACL,IAAK,WACL,IAAK,WACL,IAAK,UACL,IAAK,YACL,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,UACL,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,gBACL,IAAK,cACL,IAAK,YACL,IAAK,aACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,cACL,IAAK,WACL,IAAK,aACL,IAAK,eACL,IAAK,SACL,IAAK,kBACL,IAAK,YACL,IAAK,mBACL,IAAK,iBACL,IAAK,oBACL,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,OACL,IAAK,mBACL,IAAK,QACL,IAAK,aACL,IAAK,WACL,IAAK,SACL,IAAK,cACH,OAAO,EACT,IAAK,OACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,SACL,IAAK,YACL,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,eACH,OAAO,EACT,IAAK,UACH,OAAQpZ,MACN,KAAKE,GACH,OAAO,EACT,KAAKE,GACH,OAAO,EACT,KAAKE,GACL,KAAKE,GACH,OAAO,GACT,KAAKE,GACH,OAAO,UACT,QACE,OAAO,GAEb,QACE,OAAO,GAEb,CACA,IAAI4oD,IAA4B,EAC9BT,GAAc,KACdE,GAAa,KACbC,GAAc,KACdC,GAAiB,IAAIrjD,IACrBsjD,GAAwB,IAAItjD,IAC5B2jD,GAAiC,GACjCH,GACE,sPAAsP9/C,MACpP,KAEN,SAASs/C,GAAuBxvC,EAAczK,GAC5C,OAAQyK,GACN,IAAK,UACL,IAAK,WACHyvC,GAAc,KACd,MACF,IAAK,YACL,IAAK,YACHE,GAAa,KACb,MACF,IAAK,YACL,IAAK,WACHC,GAAc,KACd,MACF,IAAK,cACL,IAAK,aACHC,GAAejrB,OAAOrvB,EAAYsI,WAClC,MACF,IAAK,oBACL,IAAK,qBACHiyC,GAAsBlrB,OAAOrvB,EAAYsI,WAE/C,CACA,SAAS6xC,GACPU,EACAf,EACArvC,EACAsmC,EACAY,EACA3xC,GAEA,OACE,OAAS66C,GACTA,EAAoB76C,cAAgBA,GAGjC66C,EAAsB,CACrBf,UAAWA,EACXrvC,aAAcA,EACdsmC,iBAAkBA,EAClB/wC,YAAaA,EACb86C,iBAAkB,CAACnJ,IAErB,OAASmI,IAEP,QADEA,EAAYpjD,GAAoBojD,KACZD,GAA2BC,IACnDe,IAEJA,EAAoB9J,kBAAoBA,EACxC+I,EAAYe,EAAoBC,iBAChC,OAASnJ,IACN,IAAMmI,EAAU5gD,QAAQy4C,IACzBmI,EAAUzqD,KAAKsiD,GACVkJ,EACT,CA8EA,SAASE,GAA+BC,GACtC,IAAIzkD,EAAaF,GAA2B2kD,EAAa/6C,QACzD,GAAI,OAAS1J,EAAY,CACvB,IAAIvL,EAAiBF,EAAuByL,GAC5C,GAAI,OAASvL,EACX,GAAwC,MAAlCuL,EAAavL,EAAeI,MAChC,GAEE,QADEmL,EAAalL,EAA6BL,IAc5C,OAXAgwD,EAAalB,UAAYvjD,OAnlcnC,SAAyB0kD,EAAU5hD,GACjC,IAAI2wB,EAAmBz7B,EAAwB6G,EAC/C,IACE,OAAQ7G,EAAwB6G,EAAI6lD,EAAW5hD,GACjD,CAAE,QACA9K,EAAwB6G,EAAI40B,CAC9B,CACF,CA6kcUkxB,CAAgBF,EAAaC,UAAU,WACrC,GAAI,KAAOjwD,EAAeI,IAAK,CAC7B,IAAI2I,EAAOs2B,KACXt2B,EAAOiB,GAAgCjB,GACvC,IAAIZ,EAAOkf,GAA+BrnB,EAAgB+I,GAC1D,OAASZ,GACP0yB,GAAsB1yB,EAAMnI,EAAgB+I,GAC9C6lD,GAA2B5uD,EAAgB+I,EAC7C,CACF,SAGG,GACL,IAAMwC,GACNvL,EAAe6L,UAAU3H,QAAQ3D,cAAc8sC,aAM/C,YAJA2iB,EAAalB,UACX,IAAM9uD,EAAeI,IACjBJ,EAAe6L,UAAUyX,cACzB,KAGZ,CACA0sC,EAAalB,UAAY,IAC3B,CACA,SAASqB,GAAmCC,GAC1C,GAAI,OAASA,EAAYtB,UAAW,OAAO,EAC3C,IACE,IAAIgB,EAAmBM,EAAYN,iBACnC,EAAIA,EAAiBtwD,QAErB,CACA,IAAI6wD,EAAgBtB,GAA0BqB,EAAYp7C,aAC1D,GAAI,OAASq7C,EAUX,OAEE,QADCP,EAAmBpkD,GAAoB2kD,KAEtCxB,GAA2BiB,GAC5BM,EAAYtB,UAAYuB,GACzB,EAbF,IAAIC,EAAmB,IADvBD,EAAgBD,EAAYp7C,aACanE,YACvCw/C,EAAc7tD,KACd6tD,GAEFv7C,GAAwBw7C,EACxBD,EAAcp7C,OAAOiyB,cAAcopB,GACnCx7C,GAAwB,KAS1Bg7C,EAAiBS,OACnB,CACA,OAAO,CACT,CACA,SAASC,GAAwCJ,EAAatzC,EAAKyb,GACjE43B,GAAmCC,IAAgB73B,EAAI8L,OAAOvnB,EAChE,CACA,SAAS2zC,KACPd,IAA4B,EAC5B,OAAST,IACPiB,GAAmCjB,MAClCA,GAAc,MACjB,OAASE,IACPe,GAAmCf,MAClCA,GAAa,MAChB,OAASC,IACPc,GAAmCd,MAClCA,GAAc,MACjBC,GAAejgC,QAAQmhC,IACvBjB,GAAsBlgC,QAAQmhC,GAChC,CACA,SAASE,GAA4BN,EAAaO,GAChDP,EAAYtB,YAAc6B,IACtBP,EAAYtB,UAAY,KAC1Ba,KACIA,IAA4B,EAC9B3wD,EAAU4G,0BACR5G,EAAU4H,wBACV6pD,KAER,CACA,IAAIG,GAA2B,KAC/B,SAASC,GAA4BC,GACnCF,KAA6BE,IACzBF,GAA2BE,EAC7B9xD,EAAU4G,0BACR5G,EAAU4H,yBACV,WACEgqD,KAA6BE,IAC1BF,GAA2B,MAC9B,IAAK,IAAIlxD,EAAI,EAAGA,EAAIoxD,EAAmBtxD,OAAQE,GAAK,EAAG,CACrD,IAAIkW,EAAOk7C,EAAmBpxD,GAC5BqxD,EAAoBD,EAAmBpxD,EAAI,GAC3C+/B,EAAWqxB,EAAmBpxD,EAAI,GACpC,GAAI,oBAAsBqxD,EACxB,IAAI,OAASrB,GAA2BqB,GAAqBn7C,GAC3D,SACG,KAAK,CACZ,IAAI41C,EAAW9/C,GAAoBkK,GACnC,OAAS41C,IACNsF,EAAmB/a,OAAOr2C,EAAG,GAC7BA,GAAK,EACN6/B,GACEisB,EACA,CACE9nD,SAAS,EACTC,KAAM87B,EACN77B,OAAQgS,EAAKhS,OACbC,OAAQktD,GAEVA,EACAtxB,GAEN,CACF,IAEN,CACA,SAASiV,GAAiBic,GACxB,SAASK,EAAQZ,GACf,OAAOM,GAA4BN,EAAaO,EAClD,CACA,OAASzB,IAAewB,GAA4BxB,GAAayB,GACjE,OAASvB,IAAcsB,GAA4BtB,GAAYuB,GAC/D,OAAStB,IAAeqB,GAA4BrB,GAAasB,GACjErB,GAAejgC,QAAQ2hC,GACvBzB,GAAsBlgC,QAAQ2hC,GAC9B,IAAK,IAAItxD,EAAI,EAAGA,EAAIkwD,GAA+BpwD,OAAQE,IAAK,CAC9D,IAAIswD,EAAeJ,GAA+BlwD,GAClDswD,EAAalB,YAAc6B,IAAcX,EAAalB,UAAY,KACpE,CACA,KAEE,EAAIc,GAA+BpwD,QACO,QAAxCE,EAAIkwD,GAA+B,IAAgBd,WAGrDiB,GAA+BrwD,GAC7B,OAASA,EAAEovD,WAAac,GAA+BW,QAE3D,GAAI,OADJ7wD,GAAKixD,EAAUh+C,eAAiBg+C,GAAWM,mBAEzC,IAAKjB,EAAe,EAAGA,EAAetwD,EAAEF,OAAQwwD,GAAgB,EAAG,CACjE,IAAIp6C,EAAOlW,EAAEswD,GACXe,EAAoBrxD,EAAEswD,EAAe,GACrCkB,EAAYt7C,EAAK/K,KAAqB,KACxC,GAAI,oBAAsBkmD,EACxBG,GAAaL,GAA4BnxD,QACtC,GAAIwxD,EAAW,CAClB,IAAIrtD,EAAS,KACb,GAAIktD,GAAqBA,EAAkBpjB,aAAa,eACtD,GACI/3B,EAAOm7C,EACRG,EAAYH,EAAkBlmD,KAAqB,KAEpDhH,EAASqtD,EAAUzI,gBAEnB,GAAI,OAASiH,GAA2B95C,GAAO,cAE9C/R,EAASqtD,EAAUrtD,OACxB,oBAAsBA,EACjBnE,EAAEswD,EAAe,GAAKnsD,GACtBnE,EAAEq2C,OAAOia,EAAc,GAAKA,GAAgB,GACjDa,GAA4BnxD,EAC9B,CACF,CACJ,CACA,SAASyxD,GAAaC,GACpBpgD,KAAKqgD,cAAgBD,CACvB,CAoBA,SAASE,GAAsBF,GAC7BpgD,KAAKqgD,cAAgBD,CACvB,CArBAE,GAAsB5rD,UAAU5C,OAASquD,GAAazrD,UAAU5C,OAC9D,SAAUwQ,GACR,IAAInL,EAAO6I,KAAKqgD,cAChB,GAAI,OAASlpD,EAAM,MAAMzH,MAAMtB,EAAuB,MAGtDsvD,GAFcvmD,EAAKjE,QACVm7B,KAC0B/rB,EAAUnL,EAAM,KAAM,KAC3D,EACFmpD,GAAsB5rD,UAAU6rD,QAAUJ,GAAazrD,UAAU6rD,QAC/D,WACE,IAAIppD,EAAO6I,KAAKqgD,cAChB,GAAI,OAASlpD,EAAM,CACjB6I,KAAKqgD,cAAgB,KACrB,IAAIhK,EAAYl/C,EAAKmb,cACrBorC,GAAoBvmD,EAAKjE,QAAS,EAAG,KAAMiE,EAAM,KAAM,MACvD8N,KACAoxC,EAAUv8C,IAAgC,IAC5C,CACF,EAIFwmD,GAAsB5rD,UAAU8rD,2BAA6B,SAAUv8C,GACrE,GAAIA,EAAQ,CACV,IAAI9K,EAAiBD,KACrB+K,EAAS,CAAE65C,UAAW,KAAM75C,OAAQA,EAAQg7C,SAAU9lD,GACtD,IACE,IAAIzK,EAAI,EACRA,EAAIkwD,GAA+BpwD,QACnC,IAAM2K,GACNA,EAAiBylD,GAA+BlwD,GAAGuwD,SACnDvwD,KAEFkwD,GAA+B7Z,OAAOr2C,EAAG,EAAGuV,GAC5C,IAAMvV,GAAKqwD,GAA+B96C,EAC5C,CACF,EACA,IAAIw8C,GAAmDvyD,EAAMwyD,QAC7D,GACE,WACAD,GAEA,MAAM/wD,MACJtB,EACE,IACAqyD,GACA,WAGNluD,EAAwBouD,YAAc,SAAUC,GAC9C,IAAI7xD,EAAQ6xD,EAAmB7rB,gBAC/B,QAAI,IAAWhmC,EAAO,CACpB,GAAI,oBAAsB6xD,EAAmB9uD,OAC3C,MAAMpC,MAAMtB,EAAuB,MAErC,MADAwyD,EAAqB7wD,OAAOyhB,KAAKovC,GAAoBvvB,KAAK,KACpD3hC,MAAMtB,EAAuB,IAAKwyD,GAC1C,CAQA,OAPAA,EAx2dF,SAAuC7xD,GACrC,IAAIE,EAAYF,EAAME,UACtB,IAAKA,EAAW,CAEd,GAAI,QADJA,EAAYH,EAAuBC,IACX,MAAMW,MAAMtB,EAAuB,MAC3D,OAAOa,IAAcF,EAAQ,KAAOA,CACtC,CACA,IAAK,IAAI0V,EAAI1V,EAAOiW,EAAI/V,IAAe,CACrC,IAAI4xD,EAAUp8C,EAAEvV,OAChB,GAAI,OAAS2xD,EAAS,MACtB,IAAIC,EAAUD,EAAQ5xD,UACtB,GAAI,OAAS6xD,EAAS,CAEpB,GAAI,QADJ97C,EAAI67C,EAAQ3xD,QACI,CACduV,EAAIO,EACJ,QACF,CACA,KACF,CACA,GAAI67C,EAAQjxD,QAAUkxD,EAAQlxD,MAAO,CACnC,IAAKkxD,EAAUD,EAAQjxD,MAAOkxD,GAAW,CACvC,GAAIA,IAAYr8C,EAAG,OAAOhV,EAAgBoxD,GAAU9xD,EACpD,GAAI+xD,IAAY97C,EAAG,OAAOvV,EAAgBoxD,GAAU5xD,EACpD6xD,EAAUA,EAAQjxD,OACpB,CACA,MAAMH,MAAMtB,EAAuB,KACrC,CACA,GAAIqW,EAAEvV,SAAW8V,EAAE9V,OAASuV,EAAIo8C,EAAW77C,EAAI87C,MAC1C,CACH,IAAK,IAAIC,GAAe,EAAIC,EAAUH,EAAQjxD,MAAOoxD,GAAW,CAC9D,GAAIA,IAAYv8C,EAAG,CACjBs8C,GAAe,EACft8C,EAAIo8C,EACJ77C,EAAI87C,EACJ,KACF,CACA,GAAIE,IAAYh8C,EAAG,CACjB+7C,GAAe,EACf/7C,EAAI67C,EACJp8C,EAAIq8C,EACJ,KACF,CACAE,EAAUA,EAAQnxD,OACpB,CACA,IAAKkxD,EAAc,CACjB,IAAKC,EAAUF,EAAQlxD,MAAOoxD,GAAW,CACvC,GAAIA,IAAYv8C,EAAG,CACjBs8C,GAAe,EACft8C,EAAIq8C,EACJ97C,EAAI67C,EACJ,KACF,CACA,GAAIG,IAAYh8C,EAAG,CACjB+7C,GAAe,EACf/7C,EAAI87C,EACJr8C,EAAIo8C,EACJ,KACF,CACAG,EAAUA,EAAQnxD,OACpB,CACA,IAAKkxD,EAAc,MAAMrxD,MAAMtB,EAAuB,KACxD,CACF,CACA,GAAIqW,EAAExV,YAAc+V,EAAG,MAAMtV,MAAMtB,EAAuB,KAC5D,CACA,GAAI,IAAMqW,EAAErV,IAAK,MAAMM,MAAMtB,EAAuB,MACpD,OAAOqW,EAAE5J,UAAU3H,UAAYuR,EAAI1V,EAAQE,CAC7C,CAqyduBgyD,CAA8BlyD,GAKnD6xD,EACE,QALFA,EACE,OAASA,EACLjxD,EAAyBixD,GACzB,MAE0B,KAAOA,EAAmB/lD,SAE5D,EACA,IAAIqmD,GAA+B,CACjCC,WAAY,EACZT,QAAS,SACTU,oBAAqB,YACrBC,qBAAsBhvD,EACtBivD,kBAAmB,UAErB,GAAI,qBAAuBC,+BAAgC,CACzD,IAAIC,GAA0BD,+BAC9B,IACGC,GAAwBC,YACzBD,GAAwBE,cAExB,IACGtrD,GAAaorD,GAAwBG,OACpCT,IAEC7qD,GAAemrD,EACpB,CAAE,MAAO/qD,IAAM,CACnB,CACAmrD,EAAQC,WAAa,SAAUxL,EAAWr0C,GACxC,IAAKrT,EAAiB0nD,GAAY,MAAM3mD,MAAMtB,EAAuB,MACrE,IAAIkvD,GAAe,EACjBzsB,EAAmB,GACnB8F,EAAkBL,GAClBW,EAAgBV,GAChB0b,EAAqBzb,GA8BvB,OA5BA,OAASx0B,QACP,IAAWA,KACV,IAAOA,EAAQ8/C,sBAAwBxE,GAAe,QACvD,IAAWt7C,EAAQ6uB,mBAChBA,EAAmB7uB,EAAQ6uB,uBAC9B,IAAW7uB,EAAQ20B,kBAChBA,EAAkB30B,EAAQ20B,sBAC7B,IAAW30B,EAAQi1B,gBAAkBA,EAAgBj1B,EAAQi1B,oBAC7D,IAAWj1B,EAAQiwC,qBAChBA,EAAqBjwC,EAAQiwC,yBAChC,IAAWjwC,EAAQ+/C,8BACM//C,EAAQ+/C,8BACnC//C,EAAUm7C,GACR9G,EACA,GACA,EACA,KACA,EACAiH,EACAzsB,EACA8F,EACAM,EACAgb,EACAsL,EACA,MAEFlH,EAAUv8C,IAAgCkI,EAAQ9O,QAClDyrC,GAA2B0X,GACpB,IAAI8J,GAAan+C,EAC1B,EACA4/C,EAAQI,YAAc,SAAU3L,EAAW+G,EAAiBp7C,GAC1D,IAAKrT,EAAiB0nD,GAAY,MAAM3mD,MAAMtB,EAAuB,MACrE,IAAIkvD,GAAe,EACjBzsB,EAAmB,GACnB8F,EAAkBL,GAClBW,EAAgBV,GAChB0b,EAAqBzb,GAErB7K,EAAY,KAyCd,OAxCA,OAAS3pB,QACP,IAAWA,KACV,IAAOA,EAAQ8/C,sBAAwBxE,GAAe,QACvD,IAAWt7C,EAAQ6uB,mBAChBA,EAAmB7uB,EAAQ6uB,uBAC9B,IAAW7uB,EAAQ20B,kBAChBA,EAAkB30B,EAAQ20B,sBAC7B,IAAW30B,EAAQi1B,gBAAkBA,EAAgBj1B,EAAQi1B,oBAC7D,IAAWj1B,EAAQiwC,qBAChBA,EAAqBjwC,EAAQiwC,yBAChC,IAAWjwC,EAAQ+/C,8BACM//C,EAAQ+/C,kCACjC,IAAW//C,EAAQ2pB,YAAcA,EAAY3pB,EAAQ2pB,aACvDyxB,EAAkBD,GAChB9G,EACA,GACA,EACA+G,EACA,EACAE,EACAzsB,EACA8F,EACAM,EACAgb,EACAsL,EACA5xB,IAEcv3B,QAAUopD,GAAqB,MAC/Cx7C,EAAUo7C,EAAgBlqD,SAG1B29B,EAAmBxO,GADnBi7B,EAAetkD,GADfskD,EAAejvB,QAGE9L,SAAW,KAC5BC,GAAcxgB,EAAS6uB,EAAkBysB,GACzCt7C,EAAUs7C,EACVF,EAAgBlqD,QAAQ8D,MAAQgL,EAChC1J,GAAkB8kD,EAAiBp7C,GACnC0oC,GAAsB0S,GACtB/G,EAAUv8C,IAAgCsjD,EAAgBlqD,QAC1DyrC,GAA2B0X,GACpB,IAAIiK,GAAsBlD,EACnC,EACAwE,EAAQlB,QAAU,oCC7hehBuB,EAAOL,QAAU,EAAjBK,aCMC5oD,OAPD4oD,EAAOL,QAQF,SAAP,GCTE,IAAIM,EAAmB,CAAC,EAGxB,SAASxzD,EAAoByzD,GAG5B,GAAGD,EAAiBC,GACnB,OAAOD,EAAiBC,GAAUP,QAGnC,IAAIrH,EAAS2H,EAAiBC,GAAY,CACzCzzD,EAAGyzD,EACHC,GAAA,EACAR,QAAS,CAAC,GAUX,OANA7gD,EAAQohD,GAAU/lD,KAAKm+C,EAAOqH,QAASrH,EAAQA,EAAOqH,QAASlzD,GAG/D6rD,EAAO6H,GAAA,EAGA7H,EAAOqH,OAAA,CA0Df,OArDAlzD,EAAoB0sD,EAAIr6C,EAGxBrS,EAAoB6rC,EAAI2nB,EAGxBxzD,EAAoByrD,EAAI,SAASp5C,EAASmhD,EAAMC,GAC3CzzD,EAAoB2zD,EAAEthD,EAASmhD,IAClCnyD,OAAO6N,eAAemD,EAASmhD,EAAM,CAAEjiD,YAAA,EAAkBF,IAAKoiD,GAAA,EAKhEzzD,EAAoB6rD,EAAI,SAASx5C,GACX,oBAAX9Q,QAA0BA,OAAOqyD,aAC1CvyD,OAAO6N,eAAemD,EAAS9Q,OAAOqyD,YAAa,CAAEhvD,MAAO,WAE7DvD,OAAO6N,eAAemD,EAAS,aAAc,CAAEzN,OAAA,GAAO,EAQvD5E,EAAoBwzD,EAAI,SAASnhD,EAAOmhD,GAEvC,GADU,EAAPA,IAAUnhD,EAAQrS,EAAoBqS,IAC/B,EAAPmhD,EAAU,OAAOnhD,EACpB,GAAW,EAAPmhD,GAA8B,iBAAVnhD,GAAsBA,GAASA,EAAMwhD,WAAY,OAAOxhD,EAChF,IAAIohD,EAAKpyD,OAAOu8B,OAAO,MAGvB,GAFA59B,EAAoB6rD,EAAE4H,GACtBpyD,OAAO6N,eAAeukD,EAAI,UAAW,CAAEliD,YAAA,EAAkB3M,MAAOyN,IACtD,EAAPmhD,GAA4B,iBAATnhD,EAAmB,IAAI,IAAIw5C,KAAOx5C,EAAOrS,EAAoByrD,EAAEgI,EAAI5H,EAAK,SAAS2H,GAAO,OAAOnhD,EAAMmhD,EAAA,EAAQh5B,KAAK,KAAMqxB,IAC9I,OAAO4H,CAAA,EAIRzzD,EAAoByzD,EAAI,SAASphD,GAChC,IAAImhD,EAASnhD,GAAUA,EAAOwhD,WAC7B,WAAwB,OAAOxhD,EAAgByhD,OAAA,EAC/C,WAA8B,OAAOzhD,CAAA,EAEtC,OADArS,EAAoByrD,EAAE+H,EAAQ,IAAKA,GAC5BA,CAAA,EAIRxzD,EAAoB2zD,EAAI,SAASthD,EAAQmhD,GAAY,OAAOnyD,OAAO2E,UAAUD,eAAe2H,KAAK2E,EAAQmhD,EAAA,EAGzGxzD,EAAoB0K,EAAI,GAIjB1K,EAAoBA,EAAoB+zD,EAAI,IDxE9C,CCwE8C,8BClFrD,IAAAN,EAAAzzD,EAAA,GAAA6rD,EAAA7rD,EAAAyzD,EAAAA,GAoBA19C,EAAA,oBAAA1D,IAAA,CAyGA,OAvGWA,EAAAA,EAAP,SAASmhD,EAAKxzD,GACLwzD,IAAOnhD,EAAI2hD,mBACZR,EAAMnhD,EAAI4hD,YAEd,IAAIR,EAAM,IAAID,EAAG,OAAOxzD,EAEpBqS,EAAI6hD,iBACJ7hD,EAAI8hD,QAAQzsB,KAAK,MAAO,QAAS+rB,GAGhCphD,EAAI+hD,eAILzsB,QAAQja,MACRia,QAAQja,MAAM+lC,GACP9rB,QAAQ0sB,KACf1sB,QAAQ0sB,KAAKZ,GAEb9rB,QAAQngC,IAAIisD,GAAA,EAIbphD,EAAArS,EAAP,SAASwzD,EAAKxzD,GACLwzD,IAAOnhD,EAAI2hD,mBACZR,EAAMnhD,EAAI4hD,YAEd,IAAIR,EAAM,IAAID,EAAG,OAAOxzD,EAEpBqS,EAAI6hD,iBACJ7hD,EAAI8hD,QAAQzsB,KAAK,MAAO,OAAQ+rB,GAG/BphD,EAAIiiD,cAIL3sB,QAAQl3B,KACRk3B,QAAQl3B,KAAKgjD,GAEb9rB,QAAQngC,IAAIisD,GAAA,EAIbphD,EAAAkiD,EAAP,SAASf,EAAKxzD,GACLwzD,IAAOnhD,EAAI2hD,mBACZR,EAAMnhD,EAAI4hD,YAEd,IAAIR,EAAM,IAAID,EAAG,OAAOxzD,EAEpBqS,EAAI6hD,iBACJ7hD,EAAI8hD,QAAQzsB,KAAK,MAAO,OAAQ+rB,GAG/BphD,EAAImiD,cAIL7sB,QAAQ0sB,KACR1sB,QAAQ0sB,KAAKZ,GAEb9rB,QAAQngC,IAAIisD,GAAA,EAIbphD,EAAAo5C,EAAP,SAAS+H,EAAKxzD,GACLwzD,IAAOnhD,EAAI2hD,mBACZR,EAAMnhD,EAAI4hD,YAEd,IAAIR,EAAM,IAAID,EAAG,OAAOxzD,EAEpBqS,EAAI6hD,iBACJ7hD,EAAI8hD,QAAQzsB,KAAK,MAAO,QAAS+rB,GAGhCphD,EAAIoiD,eAIL9sB,QAAQ+sB,MACR/sB,QAAQ+sB,MAAMjB,GAEd9rB,QAAQngC,IAAIisD,GAAA,EAIbphD,EAAAsiD,EAAP,SAASnB,EAAKxzD,GACLwzD,IAAOnhD,EAAI2hD,mBACZR,EAAMnhD,EAAI4hD,YAEd,IAAIR,EAAM,IAAID,EAAG,OAAOxzD,EAEpBqS,EAAI6hD,iBACJ7hD,EAAI8hD,QAAQzsB,KAAK,MAAO,UAAW+rB,GAGlCphD,EAAIuiD,gBAITjtB,QAAQngC,IAAIisD,EAAA,EAGpBphD,CAAA,CAzGA,GA2GA0D,EAAIk+C,WAAa,YACjBl+C,EAAIi+C,kBAAA,EACJj+C,EAAIq+C,cAAA,EACJr+C,EAAIu+C,aAAA,EACJv+C,EAAIy+C,aAAA,EACJz+C,EAAI0+C,cAAA,EACJ1+C,EAAI6+C,gBAAA,EAEJ7+C,EAAIm+C,iBAAA,EAEJn+C,EAAIo+C,QAAU,IAAItI,EAAA91C,EAEHy9C,EAAAz9C,EAAAA,CAAA,+BCvGAy9C,EAAAz9C,EAlBW,CACtB8+C,SAAU,WACVC,YAAa,cACbC,aAAc,eACdC,cAAe,gBACfC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,WAAY,aACZC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,2BAA4B,6BAC5BC,wBAAyB,0BACzBC,4BAA6B,8BAC7BC,yBAA0B,2BAC1BC,gBAAiB,kBACjBC,oBAAqB,qDCjCzB31D,EAAAyrD,EAAA+H,EAAA,uBAAA3H,CAAA,IAAA7rD,EAAAyrD,EAAA+H,EAAA,uBAAAz9C,CAAA,IAAA/V,EAAAyrD,EAAA+H,EAAA,uBAAAO,CAAA,QAAAN,EAAAzzD,EAAA,GAoBa6rD,EAAe,CACxB+J,MAAO,EACPC,YAAa,EACbC,WAAY,EACZC,OAAQ,EACRC,UAAW,GAGFjgD,EAAe,CACxBkgD,GAAI,KACJC,UAAW,YACXC,yBAA0B,wBAC1BC,mBAAoB,oBACpBC,UAAW,WACXC,wBAAyB,yBAU7BvC,EAAA,WAEI,SAAA1hD,EAAYA,GACRf,KAAKilD,MAAQlkD,GAAY,YACzBf,KAAKklD,QAAU3K,EAAa+J,MAC5BtkD,KAAKmlD,YAAA,EAELnlD,KAAKolD,sBAAwB,KAC7BplD,KAAKqlD,eAAiB,KACtBrlD,KAAKslD,eAAiB,KACtBtlD,KAAKulD,SAAW,KAChBvlD,KAAKwlD,YAAc,KA8E3B,OA3EIzkD,EAAArM,UAAA00B,QAAA,WACIppB,KAAKklD,QAAU3K,EAAa+J,MAC5BtkD,KAAKolD,sBAAwB,KAC7BplD,KAAKqlD,eAAiB,KACtBrlD,KAAKslD,eAAiB,KACtBtlD,KAAKulD,SAAW,KAChBvlD,KAAKwlD,YAAc,MAGvBzkD,EAAArM,UAAA+wD,UAAA,WACI,OAAOzlD,KAAKklD,UAAY3K,EAAagK,aAAevkD,KAAKklD,UAAY3K,EAAaiK,UAAA,EAGtFz0D,OAAA6N,eAAImD,EAAArM,UAAA,OAAI,KAAR,WACI,OAAOsL,KAAKilD,KAAA,kCAGhBl1D,OAAA6N,eAAImD,EAAArM,UAAA,SAAM,KAAV,WACI,OAAOsL,KAAKklD,OAAA,kCAGhBn1D,OAAA6N,eAAImD,EAAArM,UAAA,kBAAe,KAAnB,WACI,OAAOsL,KAAKmlD,UAAA,kCAGhBp1D,OAAA6N,eAAImD,EAAArM,UAAA,uBAAoB,KAAxB,WACI,OAAOsL,KAAKolD,qBAAA,MAGhB,SAAyBrkD,GACrBf,KAAKolD,sBAAwBrkD,CAAA,kCAGjChR,OAAA6N,eAAImD,EAAArM,UAAA,gBAAa,KAAjB,WACI,OAAOsL,KAAKqlD,cAAA,MAGhB,SAAkBtkD,GACdf,KAAKqlD,eAAiBtkD,CAAA,kCAG1BhR,OAAA6N,eAAImD,EAAArM,UAAA,gBAAa,KAAjB,WACI,OAAOsL,KAAKslD,cAAA,MAGhB,SAAkBvkD,GACdf,KAAKslD,eAAiBvkD,CAAA,kCAG1BhR,OAAA6N,eAAImD,EAAArM,UAAA,UAAO,KAAX,WACI,OAAOsL,KAAKulD,QAAA,MAGhB,SAAYxkD,GACRf,KAAKulD,SAAWxkD,CAAA,kCAGpBhR,OAAA6N,eAAImD,EAAArM,UAAA,aAAU,KAAd,WACI,OAAOsL,KAAKwlD,WAAA,MAGhB,SAAezkD,GACXf,KAAKwlD,YAAczkD,CAAA,kCAIvBA,EAAArM,UAAAgxD,KAAA,SAAK3kD,EAAYmhD,GACb,MAAM,IAAIC,EAAA5nB,EAAwB,qCAGtCx5B,EAAArM,UAAA0pB,MAAA,WACI,MAAM,IAAI+jC,EAAA5nB,EAAwB,qCAI1Cx5B,CAAA,CAzFA,aAAAA,EAAA,kBC5CArS,EAAAyrD,EAAA+H,EAAA,uBAAAz9C,CAAA,IAAA/V,EAAAyrD,EAAA+H,EAAA,uBAAAO,CAAA,IAAA/zD,EAAAyrD,EAAA+H,EAAA,uBAAAG,CAAA,IAAA3zD,EAAAyrD,EAAA+H,EAAA,uBAAA/H,CAAA,8TAkBA11C,EAAA,WAEI,SAAA1D,EAAYA,GACRf,KAAK2lD,SAAW5kD,CAAA,CAexB,OAZIhR,OAAA6N,eAAImD,EAAArM,UAAA,OAAI,KAAR,WACI,MAAO,oDAGX3E,OAAA6N,eAAImD,EAAArM,UAAA,UAAO,KAAX,WACI,OAAOsL,KAAK2lD,QAAA,kCAGhB5kD,EAAArM,UAAAgF,SAAA,WACI,OAAOsG,KAAKrO,KAAO,KAAOqO,KAAKZ,OAAA,EAGvC2B,CAAA,CAlBA,GAoBA0hD,EAAA,SAAA1hD,GAEI,SAAAmhD,EAAYA,UACRnhD,EAAA3E,KAAA,KAAM8lD,IAAQ,KAOtB,OAV2C3H,EAAA2H,EAAAnhD,GAMvChR,OAAA6N,eAAIskD,EAAAxtD,UAAA,OAAI,KAAR,WACI,MAAO,yDAGfwtD,CAAA,CAVA,CAA2Cz9C,GAY3C49C,EAAA,SAAAthD,GAEI,SAAAmhD,EAAYA,UACRnhD,EAAA3E,KAAA,KAAM8lD,IAAQ,KAOtB,OAV8C3H,EAAA2H,EAAAnhD,GAM1ChR,OAAA6N,eAAIskD,EAAAxtD,UAAA,OAAI,KAAR,WACI,MAAO,4DAGfwtD,CAAA,CAVA,CAA8Cz9C,GAY9C01C,EAAA,SAAAp5C,GAEI,SAAAmhD,EAAYA,UACRnhD,EAAA3E,KAAA,KAAM8lD,IAAQ,KAOtB,OAV6C3H,EAAA2H,EAAAnhD,GAMzChR,OAAA6N,eAAIskD,EAAAxtD,UAAA,OAAI,KAAR,WACI,MAAO,2DAGfwtD,CAAA,CAVA,CAA6Cz9C,EAAA,+BC5C7C,IAAI09C,EAAU,CAAC,GAEf,WAGI,IAAIphD,EAAK6kD,KAAKC,UAAUC,UAAUtpD,cAE9B0lD,EAAQ,mBAAmB6D,KAAKhlD,IAChC,oBAAoBglD,KAAKhlD,IACzB,wBAAwBglD,KAAKhlD,IAC7B,yBAAyBglD,KAAKhlD,IAC9B,6DAA6DglD,KAAKhlD,IAClE,uEAAuEglD,KAAKhlD,IAC5E,wBAAwBglD,KAAKhlD,IAC7B,qCAAqCglD,KAAKhlD,IAC1C,kBAAkBglD,KAAKhlD,IACvBA,EAAG7D,QAAQ,YAAc,GAAK,sBAAsB6oD,KAAKhlD,IACzDA,EAAG7D,QAAQ,cAAgB,GAAK,yBAAyB6oD,KAAKhlD,IAC9D,GAEArS,EAAiB,SAASq3D,KAAKhlD,IAC/B,SAASglD,KAAKhlD,IACd,kBAAkBglD,KAAKhlD,IACvB,WAAWglD,KAAKhlD,IAChB,WAAWglD,KAAKhlD,IAChB,YAAYglD,KAAKhlD,IACjB,YAAYglD,KAAKhlD,IACjB,QAAQglD,KAAKhlD,IACb,UAAUglD,KAAKhlD,IACf,SAASglD,KAAKhlD,IACd,GAEAw5C,EAAU,CACVyL,QAAS9D,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAM,GAC7CxB,QAASwB,EAAM,IAAMA,EAAM,IAAM,IACjC+D,aAAc/D,EAAM,IAAMA,EAAM,IAAM,IACtCgE,SAAUx3D,EAAe,IAAM,IAG/B+V,EAAU,CAAC,EACf,GAAI81C,EAAQyL,QAAS,CACjBvhD,EAAQ81C,EAAQyL,UAAA,EAEhB,IAAIvD,EAAelI,EAAQ0L,aAAatnD,MAAM,KAC9C8F,EAAQi8C,QAAU,CACdyF,MAAOC,SAAS7L,EAAQ0L,aAAc,IACtCI,OAAQ9L,EAAQmG,SAEhB+B,EAAaj0D,OAAS,IACtBiW,EAAQi8C,QAAQ4F,MAAQF,SAAS3D,EAAa,GAAI,KAElDA,EAAaj0D,OAAS,IACtBiW,EAAQi8C,QAAQ6F,MAAQH,SAAS3D,EAAa,GAAI,KA+C1D,IAAK,IAAIJ,KA3CL9H,EAAQ2L,WACRzhD,EAAQ81C,EAAQ2L,WAAA,IAGhBzhD,EAAQ+hD,QAAU/hD,EAAQgiD,KAAOhiD,EAAQiiD,UACzCjiD,EAAQkiD,QAAA,IAIRliD,EAAQmiD,IAAMniD,EAAQoiD,YAClBpiD,EAAQmiD,WACDniD,EAAQmiD,GAGnBrM,EAAQyL,QADG,OAEXvhD,EAAYqiD,MAAA,GAIZriD,EAAQsiD,cACDtiD,EAAQsiD,KAEfxM,EAAQyL,QADK,SAEbvhD,EAAcuiD,QAAA,GAIdviD,EAAQgiD,MAERlM,EAAQyL,QADI,QAEZvhD,EAAawiD,OAAA,GAIbxiD,EAAQiiD,QAAUjiD,EAAQyiD,UAE1B3M,EAAQyL,QADM,UAEdvhD,EAAeyiD,SAAA,GAGnBziD,EAAQ9S,KAAO4oD,EAAQyL,QACvBvhD,EAAQyhD,SAAW3L,EAAQ2L,SAEX/D,EACRA,EAAQ1tD,eAAe4tD,WAChBF,EAAQE,GAGvBtyD,OAAOD,OAAOqyD,EAAS19C,EAAA,CAtG3B,GA2Gey9C,EAAAz9C,EAAA09C,CAAA,+BCtGAD,EAAAz9C,EAPK,CAChBkgD,GAAI,KACJwC,aAAc,cACdC,mBAAoB,oBACpBC,kBAAmB,kDCCvB,IAOIlF,EAPA5H,EAAuB,iBAAZz8C,QAAuBA,QAAU,KAC5C2G,EAAe81C,GAAwB,mBAAZA,EAAEp+B,MAC7Bo+B,EAAEp+B,MACF,SAAsBpb,EAAQmhD,EAAUxzD,GACxC,OAAO44D,SAAS5yD,UAAUynB,MAAM/f,KAAK2E,EAAQmhD,EAAUxzD,EAAA,EAKzDyzD,EADE5H,GAA0B,mBAAdA,EAAEgN,QACChN,EAAEgN,QACVx3D,OAAOy3D,sBACC,SAAwBzmD,GACvC,OAAOhR,OAAO03D,oBAAoB1mD,GAC/BosB,OAAOp9B,OAAOy3D,sBAAsBzmD,GAAA,EAGxB,SAAwBA,GACvC,OAAOhR,OAAO03D,oBAAoB1mD,EAAA,EAQtC,IAAI0hD,EAAciF,OAAO7O,OAAS,SAAqB93C,GACrD,OAAOA,GAAUA,CAAA,EAGnB,SAASshD,IACPA,EAAazxB,KAAKx0B,KAAK4D,KAAA,CAEzBe,EAAO6gD,QAAUS,EACjBthD,EAAO6gD,QAAQ+F,KAwYf,SAAc5mD,EAASmhD,GACrB,OAAO,IAAIla,SAAQ,SAAUt5C,EAASyzD,GACpC,SAAS5H,EAAc7rD,GACrBqS,EAAQ6mD,eAAe1F,EAAMz9C,GAC7B09C,EAAOzzD,EAAA,CAGT,SAAS+V,IAC+B,mBAA3B1D,EAAQ6mD,gBACjB7mD,EAAQ6mD,eAAe,QAASrN,GAElC7rD,EAAQ,GAAGiL,MAAMyC,KAAK7N,WAAA,CAGxBs5D,EAA+B9mD,EAASmhD,EAAMz9C,EAAU,CAAEkjD,MAAA,IAC7C,UAATzF,GAMR,SAAuCnhD,EAASmhD,EAASxzD,GAC7B,mBAAfqS,EAAQ+mD,IACjBD,EAA+B9mD,EAAS,QAASmhD,EAASxzD,EAAA,CAF9D,CALoCqS,EAASw5C,EAAe,CAAEoN,MAAA,GAAM,KArZpEtF,EAAa0F,aAAe1F,EAE5BA,EAAa3tD,UAAUszD,aAAA,EACvB3F,EAAa3tD,UAAUuzD,aAAe,EACtC5F,EAAa3tD,UAAUwzD,mBAAA,EAIvB,IAAI/N,EAAsB,GAE1B,SAASgO,EAAcpnD,GACrB,GAAwB,mBAAbA,EACT,MAAM,IAAIqnD,UAAU,0EAA4ErnD,EAAA,CAsCpG,SAASsnD,EAAiBtnD,GACxB,gBAAIA,EAAKmnD,cACA7F,EAAaiG,oBACfvnD,EAAKmnD,aAAA,CAmDd,SAASK,EAAaxnD,EAAQmhD,EAAMxzD,EAAUyzD,GAC5C,IAAI5H,EACA91C,EACAg+C,EA1HsBJ,EAgJ1B,GApBA8F,EAAcz5D,QAAA,KAEd+V,EAAS1D,EAAOinD,UAEdvjD,EAAS1D,EAAOinD,QAAUj4D,OAAOu8B,OAAO,MACxCvrB,EAAOknD,aAAe,aAIlBxjD,EAAO+jD,cACTznD,EAAOq1B,KAAK,cAAe8rB,EACfxzD,EAASyvB,SAAWzvB,EAASyvB,SAAWzvB,GAIpD+V,EAAS1D,EAAOinD,SAElBvF,EAAWh+C,EAAOy9C,SAAA,IAGhBO,EAEFA,EAAWh+C,EAAOy9C,GAAQxzD,IACxBqS,EAAOknD,kBAeT,GAbwB,mBAAbxF,EAETA,EAAWh+C,EAAOy9C,GAChBC,EAAU,CAACzzD,EAAU+zD,GAAY,CAACA,EAAU/zD,GAErCyzD,EACTM,EAAS3K,QAAQppD,GAEjB+zD,EAASpvD,KAAK3E,IAIhB6rD,EAAI8N,EAAiBtnD,IACb,GAAK0hD,EAASj0D,OAAS+rD,IAAMkI,EAASgG,OAAQ,CACpDhG,EAASgG,QAAA,EAGT,IAAItO,EAAI,IAAIzqD,MAAM,+CACE+yD,EAASj0D,OAAS,IAAMud,OAAOm2C,GADjC,qEAIlB/H,EAAExoD,KAAO,8BACTwoD,EAAE0I,QAAU9hD,EACZo5C,EAAE3oD,KAAO0wD,EACT/H,EAAE9W,MAAQof,EAASj0D,OA7KG6zD,EA8KHlI,EA7KnB9jB,SAAWA,QAAQ0sB,MAAM1sB,QAAQ0sB,KAAKV,EAAA,CAiL1C,OAAOthD,CAAA,CAcT,SAASqhD,IACP,IAAKpiD,KAAK0oD,MAGR,OAFA1oD,KAAKiE,OAAO2jD,eAAe5nD,KAAKxO,KAAMwO,KAAK2oD,QAC3C3oD,KAAK0oD,OAAA,EACoB,IAArBn6D,UAAUC,OACLwR,KAAKme,SAAS/hB,KAAK4D,KAAKiE,QAC1BjE,KAAKme,SAAShC,MAAMnc,KAAKiE,OAAQ1V,UAAA,CAI5C,SAASgsC,EAAUx5B,EAAQmhD,EAAMxzD,GAC/B,IAAIyzD,EAAQ,CAAEuG,OAAA,EAAcC,YAAA,EAAmB1kD,OAAQlD,EAAQvP,KAAM0wD,EAAM/jC,SAAUzvB,GACjF6rD,EAAU6H,EAAYl5B,KAAKi5B,GAG/B,OAFA5H,EAAQp8B,SAAWzvB,EACnByzD,EAAMwG,OAASpO,EACRA,CAAA,CA0HT,SAASH,EAAWr5C,EAAQmhD,EAAMxzD,GAChC,IAAIyzD,EAASphD,EAAOinD,QAEpB,QAAI,IAAA7F,EACF,MAAO,GAET,IAAI5H,EAAa4H,EAAOD,GACxB,gBAAI3H,EACK,GAEiB,mBAAfA,EACF7rD,EAAS,CAAC6rD,EAAWp8B,UAAYo8B,GAAc,CAACA,GAElD7rD,EAsDT,SAAyBqS,GAEvB,IADA,IAAImhD,EAAM,IAAI/vD,MAAM4O,EAAIvS,QACfE,EAAI,EAAGA,EAAIwzD,EAAI1zD,SAAUE,EAChCwzD,EAAIxzD,GAAKqS,EAAIrS,GAAGyvB,UAAYpd,EAAIrS,GAElC,OAAOwzD,CAAA,CALT,CArDoB3H,GAAca,EAAWb,EAAYA,EAAW/rD,OAAA,CAoBpE,SAAS4K,EAAc2H,GACrB,IAAImhD,EAASliD,KAAKgoD,QAElB,QAAI,IAAA9F,EAAsB,CACxB,IAAIxzD,EAAawzD,EAAOnhD,GAExB,GAA0B,mBAAfrS,EACT,OAAO,EACF,QAAI,IAAAA,EACT,OAAOA,EAAWF,MAAA,CAItB,OAAO,EAOT,SAAS4sD,EAAWr6C,EAAKmhD,GAEvB,IADA,IAAIxzD,EAAO,IAAIyD,MAAM+vD,GACZC,EAAI,EAAGA,EAAID,IAAKC,EACvBzzD,EAAKyzD,GAAKphD,EAAIohD,GAChB,OAAOzzD,CAAA,CA4CT,SAASm5D,EAA+B9mD,EAASmhD,EAAMxzD,EAAUyzD,GAC/D,GAA0B,mBAAfphD,EAAQ+mD,GACb3F,EAAMwF,KACR5mD,EAAQ4mD,KAAKzF,EAAMxzD,GAEnBqS,EAAQ+mD,GAAG5F,EAAMxzD,OAEd,IAAwC,mBAA7BqS,EAAQuE,iBAYxB,MAAM,IAAI8iD,UAAU,6EAA+ErnD,GATnGA,EAAQuE,iBAAiB48C,GAAM,SAAS3H,EAAa91C,GAG/C09C,EAAMwF,MACR5mD,EAAQwE,oBAAoB28C,EAAM3H,GAEpC7rD,EAAS+V,EAAA,KAhaf1U,OAAO6N,eAAeykD,EAAc,sBAAuB,CACzDpiD,YAAA,EACAF,IAAK,WACH,OAAOo6C,CAAA,EAETt8C,IAAK,SAASkD,GACZ,GAAmB,iBAARA,GAAoBA,EAAM,GAAK0hD,EAAY1hD,GACpD,MAAM,IAAI6nD,WAAW,kGAAoG7nD,EAAM,KAEjIo5C,EAAsBp5C,CAAA,IAI1BshD,EAAazxB,KAAO,oBAEd5wB,KAAKgoD,SACLhoD,KAAKgoD,UAAYj4D,OAAO84D,eAAe7oD,MAAMgoD,UAC/ChoD,KAAKgoD,QAAUj4D,OAAOu8B,OAAO,MAC7BtsB,KAAKioD,aAAe,GAGtBjoD,KAAKkoD,cAAgBloD,KAAKkoD,oBAAA,CAAiB,EAK7C7F,EAAa3tD,UAAUo0D,gBAAkB,SAAyB/nD,GAChE,GAAiB,iBAANA,GAAkBA,EAAI,GAAK0hD,EAAY1hD,GAChD,MAAM,IAAI6nD,WAAW,gFAAkF7nD,EAAI,KAG7G,OADAf,KAAKkoD,cAAgBnnD,EACdf,IAAA,EASTqiD,EAAa3tD,UAAUq0D,gBAAkB,WACvC,OAAOV,EAAiBroD,KAAA,EAG1BqiD,EAAa3tD,UAAU0hC,KAAO,SAAcr1B,GAE1C,IADA,IAAImhD,EAAO,GACFxzD,EAAI,EAAGA,EAAIH,UAAUC,OAAQE,IAAKwzD,EAAK7uD,KAAK9E,UAAUG,IAC/D,IAAIyzD,EAAoB,UAATphD,EAEXw5C,EAASv6C,KAAKgoD,QAClB,QAAI,IAAAzN,EACF4H,EAAWA,QAAA,IAAW5H,EAAOn+B,WAC1B,IAAK+lC,EACR,OAAO,EAGT,GAAIA,EAAS,CACX,IAAIM,EAGJ,GAFIP,EAAK1zD,OAAS,IAChBi0D,EAAKP,EAAK,IACRO,aAAc/yD,MAGhB,MAAM+yD,EAGR,IAAIJ,EAAM,IAAI3yD,MAAM,oBAAsB+yD,EAAK,KAAOA,EAAGrjD,QAAU,IAAM,KAEzE,MADAijD,EAAIjuD,QAAUquD,EACRJ,CAAA,CAGR,IAAIlI,EAAUI,EAAOx5C,GAErB,QAAI,IAAAo5C,EACF,OAAO,EAET,GAAuB,mBAAZA,EACT11C,EAAa01C,EAASn6C,KAAMkiD,OAE5B,KAAIiG,EAAMhO,EAAQ3rD,OACd65D,EAAYjN,EAAWjB,EAASgO,GACpC,IAASz5D,EAAI,EAAGA,EAAIy5D,IAAOz5D,EACzB+V,EAAa4jD,EAAU35D,GAAIsR,KAAMkiD,EAAA,CAGrC,OAAO,GAiETG,EAAa3tD,UAAUs0D,YAAc,SAAqBjoD,EAAMmhD,GAC9D,OAAOqG,EAAavoD,KAAMe,EAAMmhD,GAAA,EAAU,EAG5CG,EAAa3tD,UAAUozD,GAAKzF,EAAa3tD,UAAUs0D,YAEnD3G,EAAa3tD,UAAUu0D,gBACnB,SAAyBloD,EAAMmhD,GAC7B,OAAOqG,EAAavoD,KAAMe,EAAMmhD,GAAA,EAAU,EAqBhDG,EAAa3tD,UAAUizD,KAAO,SAAc5mD,EAAMmhD,GAGhD,OAFAiG,EAAcjG,GACdliD,KAAK8nD,GAAG/mD,EAAMw5B,EAAUv6B,KAAMe,EAAMmhD,IAC7BliD,IAAA,EAGTqiD,EAAa3tD,UAAUw0D,oBACnB,SAA6BnoD,EAAMmhD,GAGjC,OAFAiG,EAAcjG,GACdliD,KAAKipD,gBAAgBloD,EAAMw5B,EAAUv6B,KAAMe,EAAMmhD,IAC1CliD,IAAA,EAIbqiD,EAAa3tD,UAAUkzD,eACnB,SAAwB7mD,EAAMmhD,GAC5B,IAAIxzD,EAAMyzD,EAAQ5H,EAAU91C,EAAGg+C,EAK/B,GAHA0F,EAAcjG,QAAA,KAEdC,EAASniD,KAAKgoD,SAEZ,OAAOhoD,KAGT,QAAI,KADJtR,EAAOyzD,EAAOphD,IAEZ,OAAOf,KAET,GAAItR,IAASwzD,GAAYxzD,EAAKyvB,WAAa+jC,EACb,KAAtBliD,KAAKioD,aACTjoD,KAAKgoD,QAAUj4D,OAAOu8B,OAAO,cAEtB61B,EAAOphD,GACVohD,EAAOyF,gBACT5nD,KAAKo2B,KAAK,iBAAkBr1B,EAAMrS,EAAKyvB,UAAY+jC,SAElD,GAAoB,mBAATxzD,EAAqB,CAGrC,IAFA6rD,GAAY,EAEP91C,EAAI/V,EAAKF,OAAS,EAAGiW,GAAK,EAAGA,IAChC,GAAI/V,EAAK+V,KAAOy9C,GAAYxzD,EAAK+V,GAAG0Z,WAAa+jC,EAAU,CACzDO,EAAmB/zD,EAAK+V,GAAG0Z,SAC3Bo8B,EAAW91C,EACX,MAIJ,GAAI81C,EAAW,EACb,OAAOv6C,KAEQ,IAAbu6C,EACF7rD,EAAK6wD,QAiIf,SAAmBx+C,EAAMmhD,GACvB,KAAOA,EAAQ,EAAInhD,EAAKvS,OAAQ0zD,IAC9BnhD,EAAKmhD,GAASnhD,EAAKmhD,EAAQ,GAC7BnhD,EAAK5N,KAAA,CAHP,CA/HoBzE,EAAM6rD,GAGE,IAAhB7rD,EAAKF,SACP2zD,EAAOphD,GAAQrS,EAAK,aAElByzD,EAAOyF,gBACT5nD,KAAKo2B,KAAK,iBAAkBr1B,EAAM0hD,GAAoBP,EAAA,CAG1D,OAAOliD,IAAA,EAGbqiD,EAAa3tD,UAAUy0D,IAAM9G,EAAa3tD,UAAUkzD,eAEpDvF,EAAa3tD,UAAU00D,mBACnB,SAA4BroD,GAC1B,IAAImhD,EAAWxzD,EAAQyzD,EAGvB,QAAI,KADJzzD,EAASsR,KAAKgoD,SAEZ,OAAOhoD,KAGT,QAAI,IAAAtR,EAAOk5D,eAUT,OATyB,IAArBr5D,UAAUC,QACZwR,KAAKgoD,QAAUj4D,OAAOu8B,OAAO,MAC7BtsB,KAAKioD,aAAe,YACXv5D,EAAOqS,KACY,KAAtBf,KAAKioD,aACTjoD,KAAKgoD,QAAUj4D,OAAOu8B,OAAO,aAEtB59B,EAAOqS,IAEXf,KAIT,GAAyB,IAArBzR,UAAUC,OAAc,CAC1B,IACI+rD,EADA91C,EAAO1U,OAAOyhB,KAAK9iB,GAEvB,IAAKyzD,EAAI,EAAGA,EAAI19C,EAAKjW,SAAU2zD,EAEjB,oBADZ5H,EAAM91C,EAAK09C,KAEXniD,KAAKopD,mBAAmB7O,GAK1B,OAHAv6C,KAAKopD,mBAAmB,kBACxBppD,KAAKgoD,QAAUj4D,OAAOu8B,OAAO,MAC7BtsB,KAAKioD,aAAe,EACbjoD,IAAA,CAKT,GAAyB,mBAFzBkiD,EAAYxzD,EAAOqS,IAGjBf,KAAK4nD,eAAe7mD,EAAMmhD,QACrB,QAAI,IAAAA,EAET,IAAKC,EAAID,EAAU1zD,OAAS,EAAG2zD,GAAK,EAAGA,IACrCniD,KAAK4nD,eAAe7mD,EAAMmhD,EAAUC,IAIxC,OAAOniD,IAAA,EAoBbqiD,EAAa3tD,UAAUmb,UAAY,SAAmB9O,GACpD,OAAOq5C,EAAWp6C,KAAMe,GAAA,EAAM,EAGhCshD,EAAa3tD,UAAU20D,aAAe,SAAsBtoD,GAC1D,OAAOq5C,EAAWp6C,KAAMe,GAAA,EAAM,EAGhCshD,EAAaiH,cAAgB,SAASvoD,EAASmhD,GAC7C,MAAqC,mBAA1BnhD,EAAQuoD,cACVvoD,EAAQuoD,cAAcpH,GAEtB9oD,EAAcgD,KAAK2E,EAASmhD,EAAA,EAIvCG,EAAa3tD,UAAU40D,cAAgBlwD,EAiBvCipD,EAAa3tD,UAAU60D,WAAa,WAClC,OAAOvpD,KAAKioD,aAAe,EAAI9F,EAAeniD,KAAKgoD,SAAW,kCCxahEt5D,EAAAyrD,EAAA+H,EAAA,uBAAAC,CAAA,IAAAzzD,EAAAyrD,EAAA+H,EAAA,uBAAA3H,CAAA,IAAA7rD,EAAAyrD,EAAA+H,EAAA,uBAAAz9C,CAAA,IAAA/V,EAAAyrD,EAAA+H,EAAA,uBAAAO,CAAA,IAmBA,IAAAN,EAEI,SAAYphD,EAAKmhD,EAAKxzD,EAAUyzD,EAAa5H,GACzCv6C,KAAKwpD,IAAMzoD,EACXf,KAAKypD,IAAMvH,EACXliD,KAAK0pD,SAAWh7D,EAChBsR,KAAK2pD,YAAcxH,EACnBniD,KAAK4pD,YAAcrP,EACnBv6C,KAAK6pD,aAAe,MAO5BtP,EAAA,WAEI,SAAAx5C,IACIf,KAAK8pD,SAAW,EAChB9pD,KAAK+pD,OAAS,EACd/pD,KAAKgqD,SAAW,EAChBhqD,KAAKiqD,OAAS,EACdjqD,KAAKkqD,iBAAmB,EACxBlqD,KAAKmqD,eAAiB,EACtBnqD,KAAKoqD,WAAa,GAClBpqD,KAAKqqD,YAAc,KACnBrqD,KAAKsqD,WAAa,KAQ1B,OALIvpD,EAAArM,UAAA61D,gBAAA,SAAgBxpD,GACZA,EAAW6oD,aAAA,EACX5pD,KAAKoqD,WAAW/2D,KAAK0N,EAAA,EAG7BA,CAAA,CAnBA,GAsBA0D,EAAA,WAEI,SAAA1D,IACIf,KAAKwqD,MAAQ,GAoDrB,OAjDIzpD,EAAArM,UAAA+1D,MAAA,WACIzqD,KAAKwqD,MAAQ,IAGjBzpD,EAAArM,UAAAg2D,YAAA,SAAY3pD,GACR,IAAImhD,EAAOliD,KAAKwqD,MAEU,IAAtBzpD,EAAWvS,SAIX0zD,EAAK1zD,OAAS,GAAKuS,EAAW,GAAG4oD,YAAczH,EAAKA,EAAK1zD,OAAS,GAAGm7D,aACrE3pD,KAAKyqD,QAGTt4D,MAAMuC,UAAUrB,KAAK8oB,MAAM+lC,EAAMnhD,GAAA,EAGrCA,EAAArM,UAAAi2D,0BAAA,SAA0B5pD,GACtB,GAAyB,GAArBf,KAAKwqD,MAAMh8D,OACX,OAAO,KAGX,IAAI0zD,EAAOliD,KAAKwqD,MACZ97D,EAAM,EACNyzD,EAAOD,EAAK1zD,OAAS,EACrB+rD,EAAM,EACN91C,EAAS,EACTg+C,EAASN,EAOb,IALIphD,EAAMmhD,EAAK,GAAGsH,MACd96D,EAAM,EACN+V,EAASg+C,EAAS,GAGfh+C,GAAUg+C,GAAQ,CAErB,IADAlI,EAAM91C,EAAS9N,KAAKi0D,OAAOnI,EAASh+C,GAAU,MAClC09C,GAASphD,GAAOmhD,EAAK3H,GAAKiP,KAAOzoD,EAAMmhD,EAAK3H,EAAM,GAAGiP,IAAM,CACnE96D,EAAM6rD,EACN,MACO2H,EAAK3H,GAAKiP,IAAMzoD,EACvB0D,EAAS81C,EAAM,EAEfkI,EAASlI,EAAM,EAGvB,OAAOv6C,KAAKwqD,MAAM97D,EAAA,EAG1BqS,CAAA,CAvDA,GA0DA0hD,EAAA,WAEI,SAAA1hD,EAAYA,GACRf,KAAKilD,MAAQlkD,EACbf,KAAKwqD,MAAQ,GACbxqD,KAAK6qD,qBAAuB,EA8GpC,OA3GI96D,OAAA6N,eAAImD,EAAArM,UAAA,OAAI,KAAR,WACI,OAAOsL,KAAKilD,KAAA,kCAGhBl1D,OAAA6N,eAAImD,EAAArM,UAAA,SAAM,KAAV,WACI,OAAOsL,KAAKwqD,MAAMh8D,MAAA,kCAGtBuS,EAAArM,UAAAo2D,QAAA,WACI,OAA6B,IAAtB9qD,KAAKwqD,MAAMh8D,MAAA,EAGtBuS,EAAArM,UAAA+1D,MAAA,WACIzqD,KAAKwqD,MAAQ,GACbxqD,KAAK6qD,qBAAuB,GAGhC9pD,EAAArM,UAAAq2D,4BAAA,SAA4BhqD,GACxB,IAAImhD,EAAOliD,KAAKwqD,MAChB,GAAoB,IAAhBtI,EAAK1zD,OACL,OAAQ,EAEZ,IAAIE,EAAOwzD,EAAK1zD,OAAS,EACrB2zD,EAAM,EACN5H,EAAS,EACT91C,EAAS/V,EAET+zD,EAAM,EAEV,GAAI1hD,EAAmBmhD,EAAK,GAAGgI,iBAE3B,OADO,EAIX,KAAO3P,GAAU91C,GAAQ,CAErB,IADA09C,EAAM5H,EAAS5jD,KAAKi0D,OAAOnmD,EAAS81C,GAAU,MAClC7rD,GAASqS,EAAmBmhD,EAAKC,GAAKmI,WAAWX,aACxC5oD,EAAmBmhD,EAAKC,EAAM,GAAG+H,iBAAoB,CACtEzH,EAAMN,EACN,MACOD,EAAKC,GAAK+H,iBAAmBnpD,EACpCw5C,EAAS4H,EAAM,EAEf19C,EAAS09C,EAAM,EAGvB,OAAOM,CAAA,EAGX1hD,EAAArM,UAAAs2D,2BAAA,SAA2BjqD,GACvB,OAAOf,KAAK+qD,4BAA4BhqD,GAAoB,GAGhEA,EAAArM,UAAAu2D,OAAA,SAAOlqD,GACH,IAAImhD,EAAOliD,KAAKwqD,MACZ97D,EAAMqS,EACNohD,EAAgBniD,KAAK6qD,oBACrBtQ,EAAY,GAEO,IAAnB4H,GAAwBA,EAAgBD,EAAK1zD,QACrBE,EAAIw7D,kBAAoBhI,EAAKC,GAAemI,WAAWX,cACrDxH,IAAkBD,EAAK1zD,OAAS,GACjC2zD,EAAgBD,EAAK1zD,OAAS,GAC/BE,EAAIw7D,iBAAmBhI,EAAKC,EAAgB,GAAG+H,kBACvE3P,EAAY4H,EAAgB,EAExBD,EAAK1zD,OAAS,IACd+rD,EAAYv6C,KAAK+qD,4BAA4Br8D,EAAIw7D,kBAAoB,GAI7ElqD,KAAK6qD,oBAAsBtQ,EAC3Bv6C,KAAKwqD,MAAMzlB,OAAOwV,EAAW,EAAG7rD,EAAA,EAGpCqS,EAAArM,UAAAw2D,qBAAA,SAAqBnqD,GACjB,IAAImhD,EAAMliD,KAAK+qD,4BAA4BhqD,GAC3C,OAAImhD,GAAO,EACAliD,KAAKwqD,MAAMtI,GAEX,MAIfnhD,EAAArM,UAAAy2D,oBAAA,SAAoBpqD,GAChB,IAAImhD,EAAUliD,KAAKkrD,qBAAqBnqD,GACxC,OAAe,MAAXmhD,EACOA,EAAQoI,WAER,MAIfvpD,EAAArM,UAAA02D,uBAAA,SAAuBrqD,GAGnB,IAFA,IAAImhD,EAAaliD,KAAK+qD,4BAA4BhqD,GAC9CrS,EAAasR,KAAKwqD,MAAMtI,GAAYkI,WACX,IAAtB17D,EAAWF,QAAgB0zD,EAAa,GAC3CA,IACAxzD,EAAasR,KAAKwqD,MAAMtI,GAAYkI,WAExC,OAAI17D,EAAWF,OAAS,EACbE,EAAWA,EAAWF,OAAS,GAE/B,MAInBuS,CAAA,CAnHA,aAAAA,EAAA,kBChGA,IAAAohD,EAAA,WAEI,SAAAphD,IACIf,KAAKqrD,SAAW,KAChBrrD,KAAK0pD,SAAW,KAEhB1pD,KAAKsrD,SAAW,KAChBtrD,KAAKurD,SAAW,KAChBvrD,KAAKwrD,WAAa,KAClBxrD,KAAKyrD,WAAa,KAClBzrD,KAAK0rD,cAAgB,KACrB1rD,KAAK2rD,cAAgB,KAErB3rD,KAAK4rD,gBAAkB,KACvB5rD,KAAK6rD,kBAAoB,KAEzB7rD,KAAKuM,MAAQ,KACbvM,KAAKwM,OAAS,KACdxM,KAAK8rD,IAAM,KACX9rD,KAAK+rD,QAAU,KACf/rD,KAAKgsD,MAAQ,KACbhsD,KAAKisD,UAAY,KACjBjsD,KAAKksD,aAAe,KACpBlsD,KAAKmsD,OAAS,KACdnsD,KAAKosD,OAAS,KAEdpsD,KAAKqsD,SAAW,KAChBrsD,KAAKssD,SAAW,KAChBtsD,KAAKusD,aAAe,KACpBvsD,KAAKwsD,kBAAoB,KACzBxsD,KAAKysD,eAAiB,KA4E9B,OAzEI1rD,EAAArM,UAAAg4D,WAAA,WACI,IAAI3rD,GAAA,IAAqBf,KAAKsrD,WAAA,IACLtrD,KAAKsrD,UACc,MAAnBtrD,KAAKwrD,YACmB,MAAxBxrD,KAAK4rD,iBACqB,MAA1B5rD,KAAK6rD,kBAE1B3J,GAAA,IAAqBliD,KAAKurD,WAAA,IACLvrD,KAAKurD,UACc,MAAnBvrD,KAAKyrD,YACS,MAAdzrD,KAAKuM,OACU,MAAfvM,KAAKwM,QACO,MAAZxM,KAAK8rD,KACW,MAAhB9rD,KAAK+rD,SACS,MAAd/rD,KAAKgsD,OACa,MAAlBhsD,KAAKisD,WACgB,MAArBjsD,KAAKksD,cACU,MAAflsD,KAAKmsD,QACU,MAAfnsD,KAAKosD,OAG9B,OAAwB,MAAjBpsD,KAAKqrD,UACLtqD,GACAmhD,CAAA,EAGXnhD,EAAArM,UAAAi4D,WAAA,WACI,OAAO,IAAA3sD,KAAKwsD,iBAAA,EAGhBzrD,EAAArM,UAAAk4D,mBAAA,SAAmB7rD,GACf,GAA2B,MAAvBf,KAAKysD,eACL,OAAO,KAGX,IAAIvK,EAAQliD,KAAKysD,eACb/9D,EAAcsR,KAAK6sD,QAAQ3K,EAAM4K,MAAO/rD,GAE5C,MAAO,CACHhO,MAAOrE,EACPq+D,aAAc7K,EAAM4K,MAAMp+D,GAC1Bm7D,aAAc3H,EAAM8K,cAAct+D,GAAA,EAI1CqS,EAAArM,UAAAm4D,QAAA,SAAQ9rD,EAAMmhD,GACV,IAAIxzD,EAAM,EAENyzD,EAAOphD,EAAKvS,OAAS,EACrB+rD,EAAM,EACN91C,EAAS,EACTg+C,EAASN,EAOb,IALID,EAAQnhD,EAAK,KACbrS,EAAM,EACN+V,EAASg+C,EAAS,GAGfh+C,GAAUg+C,GAAQ,CAErB,IADAlI,EAAM91C,EAAS9N,KAAKi0D,OAAOnI,EAASh+C,GAAU,MAClC09C,GAASD,GAASnhD,EAAKw5C,IAAQ2H,EAAQnhD,EAAKw5C,EAAM,GAAK,CAC/D7rD,EAAM6rD,EACN,MACOx5C,EAAKw5C,GAAO2H,EACnBz9C,EAAS81C,EAAM,EAEfkI,EAASlI,EAAM,EAIvB,OAAO7rD,CAAA,EAGfqS,CAAA,CA1GA,GA4GemhD,EAAAz9C,EAAA09C,CAAA,+BC9Hf,IAAAA,EAAAzzD,EAAA,GAAA6rD,EAAA7rD,EAAAyzD,EAAAA,GAAA19C,EAAA/V,EAAA,GAqBA+zD,EAAA,oBAAA1hD,IAAA,CA2IA,OAzIIhR,OAAA6N,eAAWmD,EAAA,iBAAc,KAAzB,WACI,OAAO0D,EAAAA,EAAIi+C,gBAAA,MAGf,SAA0BR,GACtBz9C,EAAAA,EAAIi+C,iBAAmBR,EACvBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,YAAS,KAApB,WACI,OAAO0D,EAAAA,EAAIk+C,UAAA,MAGf,SAAqBT,GACjBz9C,EAAAA,EAAIk+C,WAAaT,EACjBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,YAAS,KAApB,WACI,OAAO0D,EAAAA,EAAI6+C,gBACJ7+C,EAAAA,EAAI0+C,cACJ1+C,EAAAA,EAAIu+C,aACJv+C,EAAAA,EAAIy+C,aACJz+C,EAAAA,EAAIq+C,YAAA,MAGf,SAAqBZ,GACjBz9C,EAAAA,EAAI6+C,eAAiBpB,EACrBz9C,EAAAA,EAAI0+C,aAAejB,EACnBz9C,EAAAA,EAAIu+C,YAAcd,EAClBz9C,EAAAA,EAAIy+C,YAAchB,EAClBz9C,EAAAA,EAAIq+C,aAAeZ,EACnBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,cAAW,KAAtB,WACI,OAAO0D,EAAAA,EAAI0+C,YAAA,MAGf,SAAuBjB,GACnBz9C,EAAAA,EAAI0+C,aAAejB,EACnBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,gBAAa,KAAxB,WACI,OAAO0D,EAAAA,EAAI6+C,cAAA,MAGf,SAAyBpB,GACrBz9C,EAAAA,EAAI6+C,eAAiBpB,EACrBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,aAAU,KAArB,WACI,OAAO0D,EAAAA,EAAIu+C,WAAA,MAGf,SAAsBd,GAClBz9C,EAAAA,EAAIu+C,YAAcd,EAClBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,aAAU,KAArB,WACI,OAAO0D,EAAAA,EAAIy+C,WAAA,MAGf,SAAsBhB,GAClBz9C,EAAAA,EAAIy+C,YAAchB,EAClBnhD,EAAeksD,eAAA,kCAGnBl9D,OAAA6N,eAAWmD,EAAA,cAAW,KAAtB,WACI,OAAO0D,EAAAA,EAAIq+C,YAAA,MAGf,SAAuBZ,GACnBz9C,EAAAA,EAAIq+C,aAAeZ,EACnBnhD,EAAeksD,eAAA,kCAGZlsD,EAAAmsD,UAAP,WACI,MAAO,CACHC,UAAW1oD,EAAAA,EAAIk+C,WACfyK,eAAgB3oD,EAAAA,EAAIi+C,iBACpB2K,cAAe5oD,EAAAA,EAAI6+C,eACnBgK,YAAa7oD,EAAAA,EAAI0+C,aACjBoK,WAAY9oD,EAAAA,EAAIu+C,YAChBwK,WAAY/oD,EAAAA,EAAIy+C,YAChBuK,YAAahpD,EAAAA,EAAIq+C,aACjB4K,eAAgBjpD,EAAAA,EAAIm+C,gBAAA,EAIrB7hD,EAAA4sD,YAAP,SAAmB5sD,GACf0D,EAAAA,EAAIk+C,WAAa5hD,EAAOosD,UACxB1oD,EAAAA,EAAIi+C,iBAAmB3hD,EAAOqsD,eAC9B3oD,EAAAA,EAAI6+C,eAAiBviD,EAAOssD,cAC5B5oD,EAAAA,EAAI0+C,aAAepiD,EAAOusD,YAC1B7oD,EAAAA,EAAIu+C,YAAcjiD,EAAOwsD,WACzB9oD,EAAAA,EAAIy+C,YAAcniD,EAAOysD,WACzB/oD,EAAAA,EAAIq+C,aAAe/hD,EAAO0sD,YAC1BhpD,EAAAA,EAAIm+C,gBAAkB7hD,EAAO2sD,cAAA,EAG1B3sD,EAAAksD,cAAP,WACI,IAAI/K,EAAUnhD,EAAe8hD,QAE7B,GAAIX,EAAQoH,cAAc,UAAY,EAAG,CACrC,IAAI56D,EAASqS,EAAemsD,YAC5BhL,EAAQ9rB,KAAK,SAAU1nC,EAAA,GAIxBqS,EAAA6sD,iBAAP,SAAwB1L,GACpBnhD,EAAe8hD,QAAQmG,YAAY,SAAU9G,EAAA,EAG1CnhD,EAAA6mD,eAAP,SAAsB1F,GAClBnhD,EAAe8hD,QAAQ+E,eAAe,SAAU1F,EAAA,EAG7CnhD,EAAA8sD,eAAP,SAAsB3L,GAClBz9C,EAAAA,EAAIo+C,QAAQmG,YAAY,MAAO9G,GAC3Bz9C,EAAAA,EAAIo+C,QAAQyG,cAAc,OAAS,IACnC7kD,EAAAA,EAAIm+C,iBAAA,EACJ7hD,EAAeksD,gBAAA,EAIhBlsD,EAAA+sD,kBAAP,SAAyB5L,GACrBz9C,EAAAA,EAAIo+C,QAAQ+E,eAAe,MAAO1F,GACO,IAArCz9C,EAAAA,EAAIo+C,QAAQyG,cAAc,SAC1B7kD,EAAAA,EAAIm+C,iBAAA,EACJ7hD,EAAeksD,gBAAA,EAI3BlsD,CAAA,CA3IA,GA6IA0hD,EAAeI,QAAU,IAAItI,EAAA91C,EAEdy9C,EAAAz9C,EAAAg+C,CAAA,wECjJf,SAAStI,EAAkBp5C,EAAYmhD,EAAOxzD,GAC1C,IAAIyzD,EAAQphD,EACZ,GAAImhD,EAAQxzD,EAAcyzD,EAAM3zD,OAAQ,CACpC,KAAOE,KACH,GAAgC,MAAV,IAAjByzD,IAAQD,IACT,OAAO,EAEf,OAAO,EAEP,OAAO,EAuDA,IC5DPiG,ECZI9E,EFwEGgF,EAnDf,SAAoBtnD,GAMhB,IALA,IAAImhD,EAAM,GACNxzD,EAAQqS,EACRohD,EAAI,EACJ5H,EAASx5C,EAAWvS,OAEjB2zD,EAAI5H,GACP,GAAI7rD,EAAMyzD,GAAK,IACXD,EAAI7uD,KAAK0Y,OAAOC,aAAatd,EAAMyzD,OACjCA,MAFN,CAIO,GAAIzzD,EAAMyzD,GAAK,UAEf,GAAIzzD,EAAMyzD,GAAK,KAClB,GAAIhI,EAAkBzrD,EAAOyzD,EAAG,KACxB19C,GAAmB,GAAX/V,EAAMyzD,KAAc,EAAoB,GAAfzzD,EAAMyzD,EAAI,KACnC,IAAM,CACdD,EAAI7uD,KAAK0Y,OAAOC,aAAoB,MAAPvH,IAC7B09C,GAAK,EACL,eAGL,GAAIzzD,EAAMyzD,GAAK,KAClB,GAAIhI,EAAkBzrD,EAAOyzD,EAAG,KACxB19C,GAAmB,GAAX/V,EAAMyzD,KAAa,IAAqB,GAAfzzD,EAAMyzD,EAAI,KAAc,EAAmB,GAAfzzD,EAAMyzD,EAAI,KAC/D,MAA6B,QAAZ,MAAP19C,GAA2B,CAC7Cy9C,EAAI7uD,KAAK0Y,OAAOC,aAAoB,MAAPvH,IAC7B09C,GAAK,EACL,eAGL,GAAIzzD,EAAMyzD,GAAK,IAAM,CAEpB,IAAI19C,EADR,GAAI01C,EAAkBzrD,EAAOyzD,EAAG,KACxB19C,GAAmB,EAAX/V,EAAMyzD,KAAa,IAAqB,GAAfzzD,EAAMyzD,EAAI,KAAc,IAClC,GAAfzzD,EAAMyzD,EAAI,KAAc,EAAoB,GAAfzzD,EAAMyzD,EAAI,IACxC,OAAW19C,EAAO,QAAU,CACnCA,GAAQ,MACRy9C,EAAI7uD,KAAK0Y,OAAOC,aAAcvH,IAAS,GAAM,QAC7Cy9C,EAAI7uD,KAAK0Y,OAAOC,aAAqB,KAAPvH,EAAgB,QAC9C09C,GAAK,EACL,UAIZD,EAAI7uD,KAAK0Y,OAAOC,aAAa,UAC3Bm2C,CAAA,CAGN,OAAOD,EAAI7wB,KAAK,YC1DhB+wB,GACI+F,EAAM,IAAI4F,YAAY,GAC1B,IAAKC,SAAS7F,GAAM8F,SAAS,EAAG,KAAK,GACD,MAA7B,IAAKC,WAAW/F,GAAM,IAyNlB5tB,EAtNf,oBAAAx5B,IAAA,CAoNA,OAlNWA,EAAAotD,gBAAP,SAAuBjM,EAAaxzD,EAAYyzD,GAC5C,IAAI5H,EAAO,CAAC,EAEZ,IACI,IAAIkI,EAAO1hD,EAAIqtD,WAAWlM,EAAaxzD,EAAYyzD,GAC/CE,EAAQthD,EAAIqtD,WAAWlM,EAAaxzD,EAAa+zD,EAAKn7B,KAAM66B,EAAWM,EAAKn7B,MAEhFizB,EAAKkI,EAAK9vD,MAAQ0vD,EAAM1vD,IAAA,CAC1B,MAAOoO,GACL0D,EAAAA,EAAI1D,EAAE,MAAOA,EAAErH,WAAA,CAGnB,OAAO6gD,CAAA,EAGJx5C,EAAAstD,YAAP,SAAmBnM,EAAaxzD,EAAYyzD,GACxC,GAAIA,EAAW,EACX,MAAM,IAAIoG,EAAA9jD,EAAsB,+CAEpC,IAAI81C,EAAOx5C,EAAIutD,YAAYpM,EAAaxzD,EAAYyzD,GAChD19C,EAAQ1D,EAAIqtD,WAAWlM,EAAaxzD,EAAa6rD,EAAKjzB,KAAM66B,EAAW5H,EAAKjzB,MAC5Em7B,EAAch+C,EAAM8pD,UAExB,MAAO,CACH57D,KAAM,CACFhB,KAAM4oD,EAAK5nD,KACXW,MAAOmR,EAAM9R,MAEjB20B,KAAMizB,EAAKjzB,KAAO7iB,EAAM6iB,KACxBinC,UAAW9L,EAAA,EAIZ1hD,EAAAytD,cAAP,SAAqBtM,EAAaxzD,EAAYyzD,GAC1C,OAAOphD,EAAIstD,YAAYnM,EAAaxzD,EAAYyzD,EAAA,EAG7CphD,EAAAutD,YAAP,SAAmBvtD,EAAamhD,EAAYxzD,GACxC,GAAIA,EAAW,EACX,MAAM,IAAI65D,EAAA9jD,EAAsB,qCAEpC,IACI09C,EADI,IAAI6L,SAASjtD,EAAamhD,EAAYxzD,GAC/B+/D,UAAU,GAAIrM,GAS7B,MAAO,CACHzvD,KAPAwvD,EAAS,EACHkG,EAAW,IAAIqG,WAAW3tD,EAAamhD,EAAa,EAAGC,IAEvD,GAKN76B,KAAM,EAAI66B,EAAA,EAIXphD,EAAA4tD,gBAAP,SAAuB5tD,EAAamhD,EAAYxzD,GAC5C,GAAIA,EAAW,EACX,MAAM,IAAI65D,EAAA9jD,EAAsB,yCAEpC,IACI09C,EADI,IAAI6L,SAASjtD,EAAamhD,EAAYxzD,GAC/BkgE,UAAU,GAAIxM,GAS7B,MAAO,CACHzvD,KAPAwvD,EAAS,EACHkG,EAAW,IAAIqG,WAAW3tD,EAAamhD,EAAa,EAAGC,IAEvD,GAKN76B,KAAM,EAAI66B,EAAA,EAIXphD,EAAA8tD,UAAP,SAAiB9tD,EAAamhD,EAAYxzD,GACtC,GAAIA,EAAW,GACX,MAAM,IAAI65D,EAAA9jD,EAAsB,qCAEpC,IAAI09C,EAAI,IAAI6L,SAASjtD,EAAamhD,EAAYxzD,GAC1C6rD,EAAY4H,EAAE2M,WAAW,GAAI1M,GAC7B39C,EAAkB09C,EAAE4M,SAAS,GAAI3M,GAGrC,MAAO,CACHzvD,KAAM,IAAIuV,KAHdqyC,GAA+B,GAAlB91C,EAAuB,KAIhC6iB,KAAM,KAIPvmB,EAAAqtD,WAAP,SAAkBlM,EAAaxzD,EAAYyzD,GACvC,GAAIA,EAAW,EACX,MAAM,IAAIoG,EAAA9jD,EAAsB,oCAGpC,IAII81C,EAJAkI,EAAI,IAAIuL,SAAS9L,EAAaxzD,EAAYyzD,GAE1CE,EAAS,EACTlI,EAAOsI,EAAEuM,SAAS,GAElB7G,GAAA,EAEJ,IACI,OAAQhO,GACJ,KAAK,EACDI,EAAQkI,EAAEqM,WAAW,GAAI1M,GACzBC,GAAU,EACV,MACJ,KAAK,EAED9H,IADQkI,EAAEuM,SAAS,GAEnB3M,GAAU,EACV,MAEJ,KAAK,EACD,IAAIgG,EAAStnD,EAAIutD,YAAYpM,EAAaxzD,EAAa,EAAGyzD,EAAW,GACrE5H,EAAQ8N,EAAO11D,KACf0vD,GAAUgG,EAAO/gC,KACjB,MAEJ,KAAK,EACDizB,EAAQ,CAAC,EACT,IAAIhgB,EAAW,EAIf,IAHsD,IAAhB,SAAjCkoB,EAAEmM,UAAUzM,EAAW,GAAIC,MAC5B7nB,EAAW,GAER8nB,EAASF,EAAW,GAAG,CAC1B,IAAI/H,EAASr5C,EAAIstD,YAAYnM,EAAaxzD,EAAa2zD,EAAQF,EAAWE,EAAS9nB,GACnF,GAAI6f,EAAOmU,UACP,MACJhU,EAAMH,EAAOznD,KAAKhB,MAAQyoD,EAAOznD,KAAKW,MACtC+uD,GAAUjI,EAAO9yB,IAAA,CAEjB+6B,GAAUF,EAAW,GAEN,KAD6B,SAA/BM,EAAEmM,UAAUvM,EAAS,GAAID,MAElCC,GAAU,GAGlB,MAEJ,KAAK,EAOD,IANA9H,EAAQ,CAAC,EACT8H,GAAU,EACN9nB,EAAW,EACuC,IAAhB,SAAjCkoB,EAAEmM,UAAUzM,EAAW,GAAIC,MAC5B7nB,EAAW,GAER8nB,EAASF,EAAW,GAAG,CAC1B,IAAI/oD,EAAS2H,EAAIytD,cAActM,EAAaxzD,EAAa2zD,EAAQF,EAAWE,EAAS9nB,GACrF,GAAInhC,EAAOm1D,UACP,MACJhU,EAAMnhD,EAAOzG,KAAKhB,MAAQyH,EAAOzG,KAAKW,MACtC+uD,GAAUjpD,EAAOkuB,IAAA,CAEjB+6B,GAAUF,EAAW,GAEN,KAD6B,SAA/BM,EAAEmM,UAAUvM,EAAS,GAAID,MAElCC,GAAU,GAGlB,MAEJ,KAAK,EACD9H,OAAA,EACA8H,EAAS,EACT8F,GAAA,EACA,MACJ,KAAK,GAED5N,EAAQ,GACR,IAAIa,EAAoBqH,EAAEmM,UAAU,GAAIxM,GACxCC,GAAU,EACV,IAAK,IAAIwF,EAAI,EAAGA,EAAIzM,EAAmByM,IAAK,CACxC,IAAIxE,EAAMtiD,EAAIqtD,WAAWlM,EAAaxzD,EAAa2zD,EAAQF,EAAWE,GACtE9H,EAAMlnD,KAAKgwD,EAAI1wD,MACf0vD,GAAUgB,EAAI/7B,IAAA,CAElB,MAEJ,KAAK,GACD,IAAInW,EAAOpQ,EAAI8tD,UAAU3M,EAAaxzD,EAAa,EAAGyzD,EAAW,GACjE5H,EAAQppC,EAAKxe,KACb0vD,GAAUlxC,EAAKmW,KACf,MAEJ,KAAK,GACD,IAAI2nC,EAAaluD,EAAIutD,YAAYpM,EAAaxzD,EAAa,EAAGyzD,EAAW,GACzE5H,EAAQ0U,EAAWt8D,KACnB0vD,GAAU4M,EAAW3nC,KACrB,MAEJ,QAEI+6B,EAASF,EACT19C,EAAAA,EAAIw+C,EAAE,MAAO,8BAAgC9I,GAAA,CAEvD,MAAOp5C,GACL0D,EAAAA,EAAI1D,EAAE,MAAOA,EAAErH,WAAA,CAGnB,MAAO,CACH/G,KAAM4nD,EACNjzB,KAAM+6B,EACNkM,UAAWpG,EAAA,EAIvBpnD,CAAA,CApNA,GEuFeq5C,EA9Ff,WAEI,SAAAr5C,EAAYA,GACRf,KAAKkvD,IAAM,YAEXlvD,KAAKmvD,QAAUpuD,EACff,KAAKovD,cAAgB,EACrBpvD,KAAKqvD,aAAetuD,EAAWuuD,WAC/BtvD,KAAKuvD,YAAsC,EAAxBxuD,EAAWuuD,WAC9BtvD,KAAKwvD,cAAgB,EACrBxvD,KAAKyvD,wBAA0B,EAkFvC,OA/EI1uD,EAAArM,UAAA00B,QAAA,WACIppB,KAAKmvD,QAAU,MAGnBpuD,EAAArM,UAAAg7D,iBAAA,WACI,IAAI3uD,EAAoBf,KAAKqvD,aAAervD,KAAKovD,cACjD,GAAIruD,GAAqB,EACrB,MAAM,IAAIwnD,EAAA9jD,EAAsB,wDAEpC,IAAIy9C,EAAavrD,KAAKm6C,IAAI,EAAG/vC,GACzBrS,EAAO,IAAIggE,WAAW,GAC1BhgE,EAAKmP,IAAImC,KAAKmvD,QAAQQ,SAAS3vD,KAAKovD,cAAepvD,KAAKovD,cAAgBlN,IACxEliD,KAAKwvD,cAAgB,IAAIxB,SAASt/D,EAAKkhE,QAAQhB,UAAU,GAAG,GAE5D5uD,KAAKovD,eAAiBlN,EACtBliD,KAAKyvD,wBAAuC,EAAbvN,CAAA,EAGnCnhD,EAAArM,UAAAm7D,SAAA,SAAS9uD,GACL,GAAIA,EAAO,GACP,MAAM,IAAIwnD,EAAAvjD,EAAyB,mDAEvC,GAAIjE,GAAQf,KAAKyvD,wBAAyB,CACtC,IAAIvN,EAASliD,KAAKwvD,gBAAmB,GAAKzuD,EAG1C,OAFAf,KAAKwvD,gBAAkBzuD,EACvBf,KAAKyvD,yBAA2B1uD,EACzBmhD,CAAA,CAGX,IAAIxzD,EAASsR,KAAKyvD,wBAA0BzvD,KAAKwvD,cAAgB,EACjE9gE,KAAqB,GAAKsR,KAAKyvD,wBAC/B,IAAItN,EAAiBphD,EAAOf,KAAKyvD,wBAEjCzvD,KAAK0vD,mBACL,IAAInV,EAAiB5jD,KAAKm6C,IAAIqR,EAAgBniD,KAAKyvD,yBAE/ChrD,EAAUzE,KAAKwvD,gBAAmB,GAAKjV,EAK3C,OAJAv6C,KAAKwvD,gBAAkBjV,EACvBv6C,KAAKyvD,yBAA2BlV,EAEtB7rD,GAAU6rD,EAAkB91C,CAAA,EAI1C1D,EAAArM,UAAAo7D,SAAA,WACI,OAA4B,IAArB9vD,KAAK6vD,SAAS,IAGzB9uD,EAAArM,UAAAq7D,SAAA,WACI,OAAO/vD,KAAK6vD,SAAS,IAGzB9uD,EAAArM,UAAAs7D,iBAAA,WACI,IAAIjvD,EACJ,IAAKA,EAAa,EAAGA,EAAaf,KAAKyvD,wBAAyB1uD,IAC5D,GAAI,IAAOf,KAAKwvD,cAAiB,aAAezuD,GAG5C,OAFAf,KAAKwvD,gBAAkBzuD,EACvBf,KAAKyvD,yBAA2B1uD,EACzBA,EAIf,OADAf,KAAK0vD,mBACE3uD,EAAaf,KAAKgwD,kBAAA,EAG7BjvD,EAAArM,UAAAu7D,QAAA,WACI,IAAIlvD,EAAgBf,KAAKgwD,mBACzB,OAAOhwD,KAAK6vD,SAAS9uD,EAAgB,GAAK,GAG9CA,EAAArM,UAAAw7D,QAAA,WACI,IAAInvD,EAAQf,KAAKiwD,UACjB,OAAY,EAARlvD,EACQA,EAAQ,IAAO,GAEf,GAAKA,IAAU,IAInCA,CAAA,CA5FA,GCoRe3H,EArRf,oBAAA2H,IAAA,CAmRA,OAjRWA,EAAAovD,WAAP,SAAkBpvD,GAMd,IALA,IAAImhD,EAAMnhD,EACNrS,EAAawzD,EAAIoN,WACjBnN,EAAM,IAAIuM,WAAWhgE,GACrB6rD,EAAU,EAEL91C,EAAI,EAAGA,EAAI/V,EAAY+V,IACxBA,GAAK,GAEU,IAAXy9C,EAAIz9C,IAA8B,IAAfy9C,EAAIz9C,EAAI,IAA8B,IAAfy9C,EAAIz9C,EAAI,KAI1D09C,EAAI5H,GAAW2H,EAAIz9C,GACnB81C,KAGJ,OAAO,IAAImU,WAAWvM,EAAIyN,OAAQ,EAAGrV,EAAA,EAGlCx5C,EAAAqvD,SAAP,SAAgBlO,GAGZ,IAFA,IAAIxzD,EAAcwzD,EAAWyN,SAAS,EAAG,GACrCxN,EAAiB,QACZ5H,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI91C,EAAI/V,EAAY6rD,GAAG7gD,SAAS,IAC5B+K,EAAEjW,OAAS,IACXiW,EAAI,IAAMA,GAEd09C,GAAkB19C,CAAA,CAGtB,IAAIg+C,EAAO1hD,EAAUovD,WAAWjO,GAC5BG,EAAK,IAAIjI,EAAUqI,GAEvBJ,EAAG0N,WACH,IAAI5V,EAAckI,EAAG0N,WACrB1N,EAAG0N,WACH,IAAI5H,EAAY9F,EAAG0N,WACnB1N,EAAG4N,UAEH,IAAI5H,EAAiBtnD,EAAUsvD,iBAAiBlW,GAC5CoO,EAAexnD,EAAUuvD,eAAenI,GACxC/F,EAAoB,EACpB7nB,EAAgB,IAEhBnhC,EAAiB,EACjBgiD,EAAmB,EAEvB,IAAoB,MAAhBjB,GAAuC,MAAhBA,GAAuC,MAAhBA,GAC9B,MAAhBA,GAAuC,KAAhBA,GAAsC,KAAhBA,GAC7B,KAAhBA,GAAsC,MAAhBA,GAAuC,MAAhBA,GAC7B,MAAhBA,GAAuC,MAAhBA,KAGG,KAD1BiI,EAAoBC,EAAG4N,YAEnB5N,EAAGwN,SAAS,GAEZzN,GAAqB,IACrB7nB,EAdkB,CAAC,EAAG,IAAK,IAAK,KAcI6nB,IAGxChpD,EAAiBipD,EAAG4N,UAAY,EAChC7U,EAAmBiH,EAAG4N,UAAY,EAClC5N,EAAGwN,SAAS,GACRxN,EAAGyN,YAEH,IADA,IAAIjI,EAA4C,IAAtBzF,EAA2B,EAAI,GAChDiB,EAAI,EAAGA,EAAIwE,EAAoBxE,IAChChB,EAAGyN,aACCzM,EAAI,EACJtiD,EAAUwvD,iBAAiBlO,EAAI,IAE/BthD,EAAUwvD,iBAAiBlO,EAAI,KAMnDA,EAAG4N,UACH,IAAI9+C,EAAqBkxC,EAAG4N,UAC5B,GAA2B,IAAvB9+C,EACAkxC,EAAG4N,eACA,GAA2B,IAAvB9+C,EAA0B,CACjCkxC,EAAGwN,SAAS,GACZxN,EAAG6N,UACH7N,EAAG6N,UACH,IAAIjB,EAAwC5M,EAAG4N,UAC/C,IAAS5M,EAAI,EAAGA,EAAI4L,EAAuC5L,IACvDhB,EAAG6N,SAAA,CAGX,IAAIzwC,EAAa4iC,EAAG4N,UACpB5N,EAAGwN,SAAS,GAEZ,IAAI7qD,EAA0Bq9C,EAAG4N,UAC7BnkB,EAAiCuW,EAAG4N,UAEpCO,EAAsBnO,EAAGwN,SAAS,GACV,IAAxBW,GACAnO,EAAGwN,SAAS,GAEhBxN,EAAGwN,SAAS,GAEZ,IAAInlC,EAAyB,EACzBkwB,EAA0B,EAC1BqI,EAAwB,EACxBwN,EAA2B,EAELpO,EAAGyN,aAEzBplC,EAAyB23B,EAAG4N,UAC5BrV,EAA0ByH,EAAG4N,UAC7BhN,EAAwBZ,EAAG4N,UAC3BQ,EAA2BpO,EAAG4N,WAGlC,IAAIxV,EAAY,EAAGE,EAAa,EAC5B+V,EAAM,EAAGC,GAAA,EAAkBC,EAAU,EAAGC,EAAU,EAGtD,GADkCxO,EAAGyN,WACJ,CAC7B,GAAIzN,EAAGyN,WAAY,CACf,IAAIpU,EAAmB2G,EAAG0N,WAItBrU,EAAmB,GAAKA,EAAmB,IAC3CjB,EAJc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,GAIjDiB,EAAmB,GAC3Cf,EAJc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,GAAI,EAAG,EAAG,GAIhDe,EAAmB,IAChB,MAArBA,IACPjB,EAAY4H,EAAG0N,YAAc,EAAI1N,EAAG0N,WACpCpV,EAAa0H,EAAG0N,YAAc,EAAI1N,EAAG0N,WAAA,CAiB7C,GAbI1N,EAAGyN,YACHzN,EAAGyN,WAEHzN,EAAGyN,aACHzN,EAAGwN,SAAS,GACRxN,EAAGyN,YACHzN,EAAGwN,SAAS,KAGhBxN,EAAGyN,aACHzN,EAAG4N,UACH5N,EAAG4N,WAEH5N,EAAGyN,WAAY,CACf,IAAI79D,EAAoBowD,EAAGwN,SAAS,IAChCiB,EAAazO,EAAGwN,SAAS,IAC7Bc,EAAYtO,EAAGyN,WAIfY,GAFAE,EAAUE,IACVD,EAA8B,EAApB5+D,EAAA,EAKlB,IAAI8+D,EAAW,EACG,IAAdtW,GAAkC,IAAfE,IACnBoW,EAAWtW,EAAYE,GAG3B,IAAIqW,EAAc,EAAGC,EAAc,EACT,IAAtB7O,GACA4O,EAAc,EACdC,EAAc,EAAIT,IAIlBQ,EAFoC,IAAtB5O,EAA2B,EAAI,EAG7C6O,GAFoC,IAAtB7O,EAA2B,EAAI,IAErB,EAAIoO,IAGhC,IAAIU,EAA8C,IAA/BlsD,EAA0B,GACzCmsD,EAAmF,IAAtCrlB,EAAiC,IAA9D,EAAI0kB,GAExBU,IAAgBxmC,EAAyBkwB,GAA2BoW,EACpEG,IAAiBlO,EAAwBwN,GAA4BQ,EAErE,IAAIG,EAAgBz6D,KAAK06D,KAAKH,EAAcH,GAK5C,OAHA1O,EAAGj5B,UACHi5B,EAAK,KAEE,CACHiP,eAAcnP,EACdoP,YAAWpX,EACXqX,UAASrJ,EACTsJ,eAAcpJ,EACdqJ,aAAYnJ,EACZoJ,kBAAiBvP,EACjBwP,UAAWx4D,EACXy4D,eAAcz4D,EACd04D,iBAAgB1W,EAChB2W,WAAUtyC,EACVuyC,cAAaz3B,EACb03B,qBAAsBlxD,EAAUmxD,sBAAsB33B,GAEtD43B,WAAY,CACRC,MAAOzB,EACP7E,IAAK4E,EACL2B,QAASxB,EACTyB,QAAS1B,GAGb2B,UAAW,CACPhmD,MAAOkuC,EACPjuC,OAAQmuC,GAGZ6X,WAAY,CACRjmD,MAAO2kD,EACP1kD,OAAQ2kD,GAGZsB,aAAc,CACVlmD,MAAO6kD,EACP5kD,OAAQ2kD,GAAA,EAKbpwD,EAAAwvD,iBAAP,SAAwBxvD,EAAImhD,GAGxB,IAFA,IAAIxzD,EAAa,EAAGyzD,EAAa,EAExB5H,EAAI,EAAGA,EAAI2H,EAAO3H,IACJ,IAAf4H,IAEAA,GAAczzD,EADAqS,EAAGmvD,UACwB,KAAO,KAEpDxhE,EAA6B,IAAfyzD,EAAoBzzD,EAAayzD,CAAA,EAIhDphD,EAAAsvD,iBAAP,SAAwBtvD,GACpB,OAAQA,GACJ,KAAK,GACD,MAAO,WACX,KAAK,GACD,MAAO,OACX,KAAK,GACD,MAAO,WACX,KAAK,IACD,MAAO,OACX,KAAK,IACD,MAAO,SACX,KAAK,IACD,MAAO,UACX,KAAK,IACD,MAAO,UACX,QACI,MAAO,YAIZA,EAAAuvD,eAAP,SAAsBvvD,GAClB,OAAQA,EAAY,IAAI2xD,QAAQ,IAG7B3xD,EAAAmxD,sBAAP,SAA6BnxD,GACzB,OAAQA,GACJ,KAAK,IACD,MAAO,QACX,KAAK,IACD,MAAO,QACX,KAAK,IACD,MAAO,QACX,QACI,MAAO,YAIvBA,CAAA,CAnRA,UCyde8mD,EAzdf,oBAAA9mD,IAAA,CAudA,OArdWA,EAAAovD,WAAP,SAAkBpvD,GAMd,IALA,IAAImhD,EAAMnhD,EACNrS,EAAawzD,EAAIoN,WACjBnN,EAAM,IAAIuM,WAAWhgE,GACrB6rD,EAAU,EAEL91C,EAAI,EAAGA,EAAI/V,EAAY+V,IACxBA,GAAK,GAEU,IAAXy9C,EAAIz9C,IAA8B,IAAfy9C,EAAIz9C,EAAI,IAA8B,IAAfy9C,EAAIz9C,EAAI,KAI1D09C,EAAI5H,GAAW2H,EAAIz9C,GACnB81C,KAGJ,OAAO,IAAImU,WAAWvM,EAAIyN,OAAQ,EAAGrV,EAAA,EAGlCx5C,EAAA4xD,SAAP,SAAgBzQ,GACZ,IAAIxzD,EAAOqS,EAAeovD,WAAWjO,GACjCC,EAAK,IAAI/H,EAAU1rD,GAcvB,OAXAyzD,EAAG4N,WACH5N,EAAG4N,WAG0B5N,EAAG0N,SAAS,GACzC1N,EAAG0N,SAAS,GACY1N,EAAG0N,SAAS,GAK7B,CACH+C,oBALwBzQ,EAAG0N,SAAS,GAKS,EAC7CgD,mBAL2B1Q,EAAG2N,WAAA,EAS/B/uD,EAAAqvD,SAAP,SAAgBlO,GACZ,IAAIxzD,EAAOqS,EAAeovD,WAAWjO,GACjCC,EAAK,IAAI/H,EAAU1rD,GAGvByzD,EAAG4N,WACH5N,EAAG4N,WAKyB5N,EAAG0N,SAAS,GAqBxC,IAxBA,IAIItV,EAAwB4H,EAAG0N,SAAS,GAIpCprD,GAH2B09C,EAAG2N,WAGN3N,EAAG0N,SAAS,IACpCpN,EAAoBN,EAAG2N,WACvBzN,EAAsBF,EAAG0N,SAAS,GAClC1V,EAAwCgI,EAAG4N,WAC3C5H,EAAwChG,EAAG4N,WAC3C1H,EAAwClG,EAAG4N,WAC3CxH,EAAwCpG,EAAG4N,WAC3C3N,EAAuCD,EAAG4N,WAC1Cx1B,EAAuC4nB,EAAG4N,WAC1C32D,EAAuC+oD,EAAG4N,WAC1C3U,EAAuC+G,EAAG4N,WAC1ClI,EAAuC1F,EAAG4N,WAC1C1M,EAAuClB,EAAG4N,WAC1C5+C,EAAoBgxC,EAAG4N,WACvBd,EAAiC,GACjCxvC,EAA+B,GAC1Bza,EAAI,EAAGA,EAAIu1C,EAAuBv1C,IACvCiqD,EAA+B57D,KAAK8uD,EAAG2N,YACvCrwC,EAA6BpsB,KAAK8uD,EAAG2N,YAEzC,GAAIvV,EAAwB,EACxB,IAASv1C,EAAIu1C,EAAuBv1C,EAAI,EAAGA,IAAOm9C,EAAG0N,SAAS,GAElE,IAAS7qD,EAAI,EAAGA,EAAIu1C,EAAuBv1C,IACnCiqD,EAA+BjqD,KAC/Bm9C,EAAG4N,WACH5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,WAChD5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,WAAY5N,EAAG4N,YAE9Ed,EAA+BjqD,IAC/Bm9C,EAAG4N,WAKgB5N,EAAG8N,UAA9B,IACInkB,EAAoBqW,EAAG8N,UACF,GAArBnkB,GACAqW,EAAG0N,SAAS,GAEhB,IAAIW,EAA4BrO,EAAG8N,UAC/BvlC,EAA6By3B,EAAG8N,UACN9N,EAAG2N,aAEd3N,EAAG8N,UACF9N,EAAG8N,UACL9N,EAAG8N,UACA9N,EAAG8N,WAExB,IAAIrV,EAAwBuH,EAAG8N,UAC3BhN,EAA0Bd,EAAG8N,UAC7BQ,EAAoCtO,EAAG8N,UAE3C,IAASjrD,EADkCm9C,EAAG2N,WACM,EAAIvV,EAAuBv1C,GAAKu1C,EAAuBv1C,IACvGm9C,EAAG8N,UACH9N,EAAG8N,UACH9N,EAAG8N,UASP,GAP6C9N,EAAG8N,UACD9N,EAAG8N,UACP9N,EAAG8N,UACD9N,EAAG8N,UACN9N,EAAG8N,UACH9N,EAAG8N,UACb9N,EAAG2N,YAEU3N,EAAG2N,WAExC,IAAK,IAAIrV,EAAS,EAAGA,EAAS,EAAGA,IAC7B,IAAI,IAAIE,EAAW,EAAGA,GAAwB,IAAXF,EAAgB,EAAI,GAAIE,IAEvD,GADkCwH,EAAG2N,WAG9B,CACH,IAAIY,EAAU/5D,KAAKm6C,IAAI,GAAK,GAAM,GAAK2J,GAAU,IAEjD,IADIA,EAAS,GAAK0H,EAAG+N,UACZlrD,EAAI,EAAGA,EAAI0rD,EAAS1rD,IAAOm9C,EAAG+N,SAAA,MAJvC/N,EAAG8N,UAUA9N,EAAG2N,WACgB3N,EAAG2N,WACtB3N,EAAG2N,aAEtB3N,EAAG4N,WACH5N,EAAG8N,UACH9N,EAAG8N,UACH9N,EAAG2N,YAEP,IAAIa,EAA8BxO,EAAG8N,UACjCW,EAAiB,EACrB,IAAS5rD,EAAI,EAAGA,EAAI2rD,EAA6B3rD,IAAK,CAClD,IAAI6rD,GAAA,EAEJ,GADU,IAAN7rD,IAAW6rD,EAAoC1O,EAAG2N,YAClDe,EAAmC,CAC/B7rD,IAAM2rD,GAA+BxO,EAAG8N,UAC5C9N,EAAG2N,WACH3N,EAAG8N,UAEH,IADA,IAAIvU,EAAsB,EACjBzpD,EAAI,EAAGA,GAAK2+D,EAAgB3+D,IAAK,CACtC,IAAI6+D,EAAwB3O,EAAG2N,WAC3BiB,GAAA,EACCD,IACDC,EAAiB5O,EAAG2N,aAEpBgB,GAAyBC,IACzBrV,GAAA,CAGRkV,EAAiBlV,CAAA,KACd,CACH,IAAIsV,EAAoB7O,EAAG8N,UACvBgB,EAAoB9O,EAAG8N,UAE3B,IADAW,EAAiBI,EAAoBC,EAC5Bh/D,EAAI,EAAGA,EAAI++D,EAAmB/+D,IACnCkwD,EAAG8N,UACH9N,EAAG2N,WAEP,IAAS79D,EAAI,EAAGA,EAAIg/D,EAAmBh/D,IACnCkwD,EAAG8N,UACH9N,EAAG2N,UAAA,EAKf,GADsC3N,EAAG2N,WAErC,KAAIoB,EAA6B/O,EAAG8N,UACpC,IAASjrD,EAAI,EAAGA,EAAIksD,EAA4BlsD,IAAK,CACjD,IAAS/S,EAAI,EAAGA,EAAKw+D,EAAoC,EAAIx+D,IAAOkwD,EAAG0N,SAAS,GAChF1N,EAAG0N,SAAS,IAIpB,IACIsB,EAA+B,EAC/BC,EAAY,EAAG9rC,EAAa,EAC5BwtC,GAAA,EAAmBC,EAAU,EAAGC,EAAU,EAK9C,GAHoC7Q,EAAG2N,WACG3N,EAAG2N,WACX3N,EAAG2N,WACJ,CAE7B,GADqC3N,EAAG2N,WACJ,CAChC,IAAIzU,EAAmB8G,EAAG4N,WAKtB1U,EAAmB,GAAKA,EAAmB,IAC3C+V,EAJc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,GAIjD/V,EAAmB,GAC3C/1B,EAJc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,GAAI,EAAG,EAAG,GAIhD+1B,EAAmB,IAChB,MAArBA,IACP+V,EAAYjP,EAAG0N,SAAS,IACxBvqC,EAAa68B,EAAG0N,SAAS,KAkCjC,GA/BiC1N,EAAG2N,YAEhC3N,EAAG2N,WAE8B3N,EAAG2N,aAEpC3N,EAAG0N,SAAS,GACZ1N,EAAG2N,WACmC3N,EAAG2N,aAErC3N,EAAG4N,WACH5N,EAAG4N,WACH5N,EAAG4N,aAGwB5N,EAAG2N,aAElC3N,EAAG8N,UACH9N,EAAG8N,WAE8B9N,EAAG2N,WACnB3N,EAAG2N,WACY3N,EAAG2N,WACT3N,EAAG2N,aAEd3N,EAAG8N,UACF9N,EAAG8N,UACL9N,EAAG8N,UACA9N,EAAG8N,WAEW9N,EAAG2N,aAElCiD,EAAU5Q,EAAG0N,SAAS,IACtBmD,EAAU7Q,EAAG0N,SAAS,IACoB1N,EAAG2N,aAEzC3N,EAAG8N,UACmC9N,EAAG2N,aACJ,CACjC,IACImD,GAAA,EACAC,GAAA,EAIA,GAFAD,EAAkC9Q,EAAG2N,WACrCoD,EAAkC/Q,EAAG2N,WACjCmD,GAAmCC,EAAiC,CACpE,IAAIC,EAAkChR,EAAG2N,WACrCqD,IACAhR,EAAG4N,WACH5N,EAAG0N,SAAS,GACZ1N,EAAG2N,WACH3N,EAAG0N,SAAS,IAEK1N,EAAG0N,SAAS,GACZ1N,EAAG0N,SAAS,GAC7BsD,GACAhR,EAAG0N,SAAS,GAEhB1N,EAAG0N,SAAS,GACZ1N,EAAG0N,SAAS,GACZ1N,EAAG0N,SAAS,GAGpB,IAAS7qD,EAAI,EAAGA,GAAKu1C,EAAuBv1C,IAAK,CAC7C,IAAIouD,EAA8BjR,EAAG2N,WACrCgD,EAAYM,EACZ,IAAIC,GAAA,EAECD,IACDC,EAAiClR,EAAG2N,YAExC,IAAIwD,IAAA,EASJ,GARID,EACAlR,EAAG+N,UAEHoD,GAAqBnR,EAAG2N,WAEvBwD,KACDC,OAASpR,EAAG8N,UAAY,GAExBgD,EACA,IAAShhE,EAAI,EAAGA,EAdP,EAcmBA,IACxBkwD,EAAG8N,UAAW9N,EAAG8N,UACbkD,IACAhR,EAAG8N,UAAW9N,EAAG8N,WAI7B,GAAIiD,EACA,IAASjhE,EAAI,EAAGA,EAtBP,EAsBmBA,IACxBkwD,EAAG8N,UAAW9N,EAAG8N,UACbkD,IACAhR,EAAG8N,UAAW9N,EAAG8N,UAAA,EAQZ9N,EAAG2N,aAEC3N,EAAG2N,WACU3N,EAAG2N,WACb3N,EAAG2N,WACvCqB,EAA+BhP,EAAG8N,UACJ9N,EAAG8N,UACD9N,EAAG8N,UACC9N,EAAG8N,UACL9N,EAAG8N,UAAA,CAGpB9N,EAAG2N,WAA5B,IAGI0D,GAAiB,QAAQnR,EAAmB,OAAOlxC,EAAiB,MACpEsiD,GAAcjD,EACdkD,GAAehpC,EACfipC,GAAY,EAQhB,OAPkB,IAAdvC,GAAkC,IAAf9rC,IACnBquC,GAAYvC,EAAY9rC,GAG5B68B,EAAG/4B,UACH+4B,EAAK,KAEE,CACHmP,eAAckC,GACd9B,aAAc3wD,EAAeuvD,eAAen/C,GAC5CogD,YAAalP,EACbuP,UAAWhX,EAAwB,EACnCmX,WAAY,EACZC,cAAelmB,EACfmmB,qBAAsBlxD,EAAemxD,sBAAsBpmB,GAE3D8nB,kBAAiBziD,EACjB0iD,sBAAqBpvD,EACrBqvD,kBAAiBrR,EACjBsR,oBAAmB1R,EACnB2R,sCAAqC7Z,EACrC8Z,sCAAqC9L,EACrC+L,sCAAqC7L,EACrC8L,sCAAqC5L,EACrC6L,qCAAoChS,EACpCiS,qCAAoC95B,EACpC+5B,qCAAoCl7D,EACpCm7D,qCAAoCnZ,EACpCoZ,qCAAoC3M,EACpC4M,qCAAoCpR,EACpCqR,6BAA4BvD,EAC5BwD,oBAAqB,EACrBhD,kBAAiB7lB,EACjB8oB,sBAAqBha,EACrBia,wBAAuB5R,EAEvBkP,WAAY,CACRC,MAAOU,EACPhH,IAAKkH,EAAUD,EACfV,QAASU,EACTT,QAASU,GAGbT,UAAW,CACPhmD,MAAO6kD,EACP5kD,OAAQ8Y,GAGZktC,WAAY,CACRjmD,MAAOknD,GACPjnD,OAAQknD,IAGZjB,aAAc,CACVlmD,MAAOknD,GAAcE,GACrBnnD,OAAQknD,IAAA,EAKb3yD,EAAA+zD,SAAP,SAAgB5S,GACZ,IAAIxzD,EAAOqS,EAAeovD,WAAWjO,GACjCC,EAAK,IAAI/H,EAAU1rD,GAGvByzD,EAAG4N,WACH5N,EAAG4N,WAEwB5N,EAAG8N,UACH9N,EAAG8N,UACc9N,EAAG2N,WAChB3N,EAAG2N,WACA3N,EAAG0N,SAAS,GACV1N,EAAG2N,WACT3N,EAAG2N,WACU3N,EAAG8N,UACH9N,EAAG8N,UACxB9N,EAAG+N,UACS/N,EAAG2N,WACH3N,EAAG2N,WACN3N,EAAG2N,YAED3N,EAAG8N,UAEjB9N,EAAG+N,UACH/N,EAAG+N,UACyB/N,EAAG2N,WACzB3N,EAAG2N,WACD3N,EAAG2N,WACO3N,EAAG2N,WALxC,IAMIvV,EAAqB4H,EAAG2N,WACxBrrD,EAAmC09C,EAAG2N,WAItCrN,EAAkB,EAStB,OARIh+C,GAAoC81C,EACpCkI,EAAkB,EACXh+C,EACPg+C,EAAkB,EACXlI,IACPkI,EAAkB,GAGf,CACHsS,gBAAetS,EAAA,EAIhB1hD,EAAAmxD,sBAAP,SAA6BnxD,GACzB,OAAQA,GACJ,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,QACf,QAAS,MAAO,YAIjBA,EAAAsvD,iBAAP,SAAwBtvD,GACpB,OAAQA,GACJ,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,MACf,QAAS,MAAO,YAIjBA,EAAAuvD,eAAP,SAAsBvvD,GAClB,OAAQA,EAAY,IAAI2xD,QAAQ,IAExC3xD,CAAA,CAvdA,GCgxCeoQ,EAtvCf,WAEI,SAAApQ,EAAYA,EAAWmhD,GACnBliD,KAAKkvD,IAAM,aAEXlvD,KAAKg1D,QAAU9S,EAEfliD,KAAKulD,SAAW,KAChBvlD,KAAKi1D,aAAe,KACpBj1D,KAAKk1D,mBAAqB,KAC1Bl1D,KAAKm1D,qBAAuB,KAC5Bn1D,KAAKo1D,iBAAmB,KACxBp1D,KAAKq1D,iBAAmB,KAExBr1D,KAAKs1D,YAAcv0D,EAAUw0D,WAC7Bv1D,KAAKw1D,aAAA,EACLx1D,KAAKy1D,WAAA,EAELz1D,KAAK01D,UAAY30D,EAAU40D,cAC3B31D,KAAK41D,UAAY70D,EAAU80D,cAE3B71D,KAAK81D,wBAAA,EACL91D,KAAK+1D,wBAAA,EAEL/1D,KAAKg2D,iCAAA,EACLh2D,KAAKi2D,iCAAA,EAELj2D,KAAKk2D,WAAa,IAAI7T,EAAA59C,EACtBzE,KAAKk2D,WAAW5K,SAAWtrD,KAAK01D,UAChC11D,KAAKk2D,WAAW3K,SAAWvrD,KAAK41D,UAChC51D,KAAKm2D,UAAY,KACjBn2D,KAAKo2D,eAAiB,KACtBp2D,KAAKq2D,eAAiB,KAEtBr2D,KAAKs2D,gBAAkB,EACvBt2D,KAAKu2D,eAAiB,EACtBv2D,KAAKw2D,WAAa,IAClBx2D,KAAKy2D,UAAY,EACjBz2D,KAAK02D,oBAAA,EACL12D,KAAK22D,oBAAsB,CACvBvE,OAAA,EACAtG,IAAK,OACLwG,QAAS,MACTD,QAAS,KAGbryD,KAAK42D,mBAAqB,CAAC,KAAM,MAAO,MAAO,MAAO,MAEtD52D,KAAK62D,mBAAqB,CACtB,KAAO,MAAO,KAAO,KAAO,MAAO,KACnC,KAAO,MAAO,KAAO,KAAO,MAAO,IAAM,MAG7C72D,KAAK82D,6BAA+B,CAAC,MAAO,KAAO,KAAO,GAC1D92D,KAAK+2D,6BAA+B,CAAC,MAAO,KAAO,KAAO,GAC1D/2D,KAAKg3D,6BAA+B,CAAC,MAAO,KAAO,IAAO,GAE1Dh3D,KAAKi3D,yBAA2B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GACxGj3D,KAAKk3D,yBAA2B,CAAC,EAAG,GAAI,GAAI,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GACxGl3D,KAAKm3D,yBAA2B,CAAC,EAAG,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExGn3D,KAAKo3D,YAAc,CAAC5lE,KAAM,QAASgpC,GAAI,EAAG68B,eAAgB,EAAGC,QAAS,GAAI9oE,OAAQ,GAClFwR,KAAKu3D,YAAc,CAAC/lE,KAAM,QAASgpC,GAAI,EAAG68B,eAAgB,EAAGC,QAAS,GAAI9oE,OAAQ,GAElFwR,KAAKw3D,cAAgB,WACjB,IAAIz2D,EAAM,IAAIgtD,YAAY,GAE1B,OADA,IAAKC,SAASjtD,GAAMktD,SAAS,EAAG,KAAK,GACD,MAA7B,IAAKC,WAAWntD,GAAM,GAHZ,GAorC7B,OA7qCIA,EAAArM,UAAA00B,QAAA,WACIppB,KAAKk2D,WAAa,KAClBl2D,KAAKm2D,UAAY,KACjBn2D,KAAKo2D,eAAiB,KACtBp2D,KAAKq2D,eAAiB,KACtBr2D,KAAKo3D,YAAc,KACnBp3D,KAAKu3D,YAAc,KAEnBv3D,KAAKulD,SAAW,KAChBvlD,KAAKi1D,aAAe,KACpBj1D,KAAKk1D,mBAAqB,KAC1Bl1D,KAAKm1D,qBAAuB,KAC5Bn1D,KAAKo1D,iBAAmB,KACxBp1D,KAAKq1D,iBAAmB,MAGrBt0D,EAAA02D,MAAP,SAAa12D,GACT,IAAImhD,EAAO,IAAIwM,WAAW3tD,GACtBrS,EAAW,CAACqO,OAAA,GAEhB,GAAgB,KAAZmlD,EAAK,IAA2B,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,IAAZA,EAAK,GACjE,OAAOxzD,EAGX,IAvGWyzD,EAAO5H,EAuGd91C,GAAuB,EAAVy9C,EAAK,MAAY,GAAO,EACrCO,EAA6B,IAAP,EAAVP,EAAK,IAEjBG,GA1GOF,EA0GYD,GA1GL3H,EA0GW,IAzGR,GAChB4H,EAAM5H,EAAQ,IAAM,GACpB4H,EAAM5H,EAAQ,IAAM,EACpB4H,EAAM5H,EAAQ,GAwGnB,OAAI8H,EAAS,EACF3zD,EAGJ,CACHqO,OAAA,EACA26D,SAAUrV,EACVkT,WAAYlT,EACZsT,cAAelxD,EACfoxD,cAAepT,EAAA,EAIvB1hD,EAAArM,UAAAijE,eAAA,SAAe52D,GAEX,OADAA,EAAO62D,cAAgB53D,KAAK63D,YAAY3uC,KAAKlpB,MACtCA,IAAA,EAIXjQ,OAAA6N,eAAImD,EAAArM,UAAA,kBAAe,KAAnB,WACI,OAAOsL,KAAKo1D,gBAAA,MAGhB,SAAoBr0D,GAChBf,KAAKo1D,iBAAmBr0D,CAAA,kCAI5BhR,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACI,OAAOsL,KAAKi1D,YAAA,MAGhB,SAAgBl0D,GACZf,KAAKi1D,aAAel0D,CAAA,kCAGxBhR,OAAA6N,eAAImD,EAAArM,UAAA,oBAAiB,KAArB,WACI,OAAOsL,KAAKk1D,kBAAA,MAGhB,SAAsBn0D,GAClBf,KAAKk1D,mBAAqBn0D,CAAA,kCAG9BhR,OAAA6N,eAAImD,EAAArM,UAAA,sBAAmB,KAAvB,WACI,OAAOsL,KAAKm1D,oBAAA,MAGhB,SAAwBp0D,GACpBf,KAAKm1D,qBAAuBp0D,CAAA,kCAIhChR,OAAA6N,eAAImD,EAAArM,UAAA,UAAO,KAAX,WACI,OAAOsL,KAAKulD,QAAA,MAGhB,SAAYxkD,GACRf,KAAKulD,SAAWxkD,CAAA,kCAIpBhR,OAAA6N,eAAImD,EAAArM,UAAA,kBAAe,KAAnB,WACI,OAAOsL,KAAKq1D,gBAAA,MAGhB,SAAoBt0D,GAChBf,KAAKq1D,iBAAmBt0D,CAAA,kCAI5BhR,OAAA6N,eAAImD,EAAArM,UAAA,gBAAa,KAAjB,WACI,OAAOsL,KAAKu2D,cAAA,MAGhB,SAAkBx1D,GACdf,KAAKu2D,eAAiBx1D,CAAA,kCAG1BhR,OAAA6N,eAAImD,EAAArM,UAAA,oBAAiB,KAArB,WACI,OAAOsL,KAAKy2D,SAAA,MAIhB,SAAsB11D,GAClBf,KAAK02D,oBAAA,EACL12D,KAAKy2D,UAAY11D,EACjBf,KAAKk2D,WAAWxM,SAAW3oD,CAAA,kCAI/BhR,OAAA6N,eAAImD,EAAArM,UAAA,oBAAiB,KAArB,SAAsBqM,GAClBf,KAAK81D,wBAAA,EACL91D,KAAK01D,UAAY30D,EACjBf,KAAKk2D,WAAW5K,SAAWvqD,CAAA,kCAI/BhR,OAAA6N,eAAImD,EAAArM,UAAA,oBAAiB,KAArB,SAAsBqM,GAClBf,KAAK+1D,wBAAA,EACL/1D,KAAK41D,UAAY70D,EACjBf,KAAKk2D,WAAW3K,SAAWxqD,CAAA,kCAG/BA,EAAArM,UAAAojE,eAAA,WACI93D,KAAKk2D,WAAa,IAAI7T,EAAA59C,CAAA,EAG1B1D,EAAArM,UAAAqjE,6BAAA,WACI,OAAI/3D,KAAK01D,WAAa11D,KAAK41D,UAChB51D,KAAKg2D,iCAAmCh2D,KAAKi2D,gCAEpDj2D,KAAK01D,YAAc11D,KAAK41D,UACjB51D,KAAKg2D,kCAEXh2D,KAAK01D,YAAa11D,KAAK41D,YACjB51D,KAAKi2D,+BAAA,EAMpBl1D,EAAArM,UAAAmjE,YAAA,SAAY3V,EAAOxzD,GACf,KAAKsR,KAAKulD,UAAavlD,KAAKi1D,cAAiBj1D,KAAKo1D,kBAAqBp1D,KAAKq1D,kBACxE,MAAM,IAAI9M,EAAA9jD,EAAsB,6FAGpC,IAAI09C,EAAS,EACT5H,EAAKv6C,KAAKw3D,cAEd,GAAkB,IAAd9oE,EAAiB,CACjB,KAAIwzD,EAAMoN,WAAa,IAInB,OAAO,EAFPnN,EADgBphD,EAAW02D,MAAMvV,GACdqT,UAAA,CAoB3B,IAdIv1D,KAAKw1D,cACLx1D,KAAKw1D,aAAA,EACD9mE,EAAYyzD,IAAWniD,KAAKs1D,aAC5B7wD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,mDAKC,KAFjBzM,EAAI,IAAIuL,SAAS9L,EAAOC,IACPyM,UAAU,GAAIrU,IAE/B91C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,0BAEpB/M,GAAU,GAGPA,EAASD,EAAMoN,YAAY,CAC9BtvD,KAAKy1D,WAAA,EAEL,IAAIhT,EAAI,IAAIuL,SAAS9L,EAAOC,GAE5B,GAAIA,EAAS,GAAK,EAAID,EAAMoN,WAExB,MAGJ,IAAIjN,EAAUI,EAAEuM,SAAS,GACrB7U,EAAiC,SAAtBsI,EAAEmM,UAAU,GAAIrU,GAE/B,GAAI4H,EAAS,GAAKhI,EAAW,EAAI+H,EAAMoN,WAEnC,MAGJ,GAAgB,IAAZjN,GAA6B,IAAZA,GAA6B,KAAZA,EAAtC,CAOA,IAAI8F,EAAM1F,EAAEuM,SAAS,GACjB3G,EAAM5F,EAAEuM,SAAS,GAIjB5M,EAHMK,EAAEuM,SAAS,GAGE3G,GAAO,EAAMF,GAAO,GAFjC1F,EAAEuM,SAAS,IAEoC,GAGxC,KADoB,SAAtBvM,EAAEmM,UAAU,GAAIrU,KAE3B91C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,qCAGpB,IAAI30B,EAAa4nB,EAAS,GAE1B,OAAQE,GACJ,KAAK,EACDriD,KAAKg4D,gBAAgB9V,EAAO3nB,EAAY4f,EAAUiI,GAClD,MACJ,KAAK,EACDpiD,KAAKi4D,gBAAgB/V,EAAO3nB,EAAY4f,EAAUiI,EAAW1zD,EAAYyzD,GACzE,MACJ,KAAK,GACDniD,KAAKk4D,iBAAiBhW,EAAO3nB,EAAY4f,GAIjD,IAAIC,EAAcqI,EAAEmM,UAAU,GAAKzU,GAAWI,GAC1CH,IAAgB,GAAKD,GACrB11C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,uBAAuB9U,GAG3C+H,GAAU,GAAKhI,EAAW,OArCtB11C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,wBAAwB7M,EAAO,aAE/CF,GAAU,GAAKhI,EAAW,EA6ClC,OANIn6C,KAAK+3D,gCACD/3D,KAAKy1D,YAAcz1D,KAAKu3D,YAAY/oE,QAAUwR,KAAKo3D,YAAY5oE,SAC/DwR,KAAKq1D,iBAAiBr1D,KAAKu3D,YAAav3D,KAAKo3D,aAI9CjV,CAAA,EAGXphD,EAAArM,UAAAwjE,iBAAA,SAAiBn3D,EAAamhD,EAAYxzD,GACtC,IAAIyzD,EAAa5nB,EAAI4zB,gBAAgBptD,EAAamhD,EAAYxzD,GAE9D,GAAIyzD,EAAW1tD,eAAe,cAAe,CACzC,GAA6B,MAAzB0tD,EAAWgW,YAAuD,iBAA1BhW,EAAWgW,WAEnD,YADA1zD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,iCAGhBlvD,KAAKm2D,WACL1xD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,iCAEpBlvD,KAAKm2D,UAAYhU,EACjB,IAAI5H,EAAav6C,KAAKm2D,UAAUgC,WA8BhC,GA5BIn4D,KAAKk1D,oBACLl1D,KAAKk1D,mBAAmBnlE,OAAOD,OAAO,CAAC,EAAGyqD,IAGX,kBAAxBA,EAAW+Q,WAAA,IACdtrD,KAAK81D,yBACL91D,KAAK01D,UAAYnb,EAAW+Q,SAC5BtrD,KAAKk2D,WAAW5K,SAAWtrD,KAAK01D,WAGL,kBAAxBnb,EAAWgR,WAAA,IACdvrD,KAAK+1D,yBACL/1D,KAAK41D,UAAYrb,EAAWgR,SAC5BvrD,KAAKk2D,WAAW3K,SAAWvrD,KAAK41D,WAGA,iBAA7Brb,EAAW6d,gBAClBp4D,KAAKk2D,WAAWxK,cAAgBnR,EAAW6d,eAEP,iBAA7B7d,EAAW8d,gBAClBr4D,KAAKk2D,WAAWvK,cAAgBpR,EAAW8d,eAEf,iBAArB9d,EAAWhuC,QAClBvM,KAAKk2D,WAAW3pD,MAAQguC,EAAWhuC,OAEN,iBAAtBguC,EAAW/tC,SAClBxM,KAAKk2D,WAAW1pD,OAAS+tC,EAAW/tC,QAEL,iBAAxB+tC,EAAWmP,UAClB,IAAK1pD,KAAK02D,mBAAoB,CAC1B,IAAIjU,EAAW9rD,KAAKi0D,MAAMrQ,EAAWmP,SAAW1pD,KAAKw2D,YACrDx2D,KAAKy2D,UAAYhU,EACjBziD,KAAKk2D,WAAWxM,SAAWjH,CAAA,OAG/BziD,KAAKk2D,WAAWxM,SAAW,EAE/B,GAAoC,iBAAzBnP,EAAW+d,UAAwB,CAC1C,IAAIjW,EAAU1rD,KAAKi0D,MAA6B,IAAvBrQ,EAAW+d,WACpC,GAAIjW,EAAU,EAAG,CACb,IAAIlI,EAAMkI,EAAU,IACpBriD,KAAK22D,oBAAoBvE,OAAA,EACzBpyD,KAAK22D,oBAAoB7K,IAAM3R,EAC/Bn6C,KAAK22D,oBAAoBrE,QAAUjQ,EACnCriD,KAAK22D,oBAAoBtE,QAAU,IACnCryD,KAAKk2D,WAAWpK,IAAM3R,CAAA,EAG9B,GAAoC,iBAAzBI,EAAWge,UAAwB,CAC1Cv4D,KAAKk2D,WAAW1J,mBAAA,EAChB,IAAIrE,EAAY5N,EAAWge,UAC3Bv4D,KAAKk2D,WAAWzJ,eAAiBzsD,KAAKw4D,qBAAqBrQ,GAC3D5N,EAAWge,UAAY,UAEvBv4D,KAAKk2D,WAAW1J,mBAAA,EAEpBxsD,KAAKy1D,WAAA,EACLz1D,KAAKk2D,WAAW7J,SAAW9R,EAC3B91C,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qBACZlvD,KAAKk2D,WAAWxJ,cAChB1sD,KAAKi1D,aAAaj1D,KAAKk2D,WAAA,CAI3BnmE,OAAOyhB,KAAK2wC,GAAY3zD,OAAS,GAC7BwR,KAAKm1D,sBACLn1D,KAAKm1D,qBAAqBplE,OAAOD,OAAO,CAAC,EAAGqyD,GAAA,EAKxDphD,EAAArM,UAAA8jE,qBAAA,SAAqBz3D,GAKjB,IAJA,IAAImhD,EAAQ,GACRxzD,EAAgB,GAGXyzD,EAAI,EAAGA,EAAIphD,EAAU+rD,MAAMt+D,OAAQ2zD,IAAK,CAC7C,IAAI5H,EAAOv6C,KAAKu2D,eAAiB5/D,KAAKi0D,MAA2B,IAArB7pD,EAAU+rD,MAAM3K,IAC5DD,EAAM7uD,KAAKknD,GACX7rD,EAAc2E,KAAK0N,EAAUisD,cAAc7K,GAAA,CAG/C,MAAO,CACH2K,MAAO5K,EACP8K,cAAet+D,EAAA,EAIvBqS,EAAArM,UAAAsjE,gBAAA,SAAgBj3D,EAAamhD,EAAYxzD,EAAUyzD,GAC/C,GAAIzzD,GAAY,EACZ+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,8DAIpB,IAAI,IAAAlvD,KAAK81D,yBAAA,IAAmC91D,KAAK01D,UAAjD,CAMS11D,KAAKw3D,cAAd,IAGIjd,EAFI,IAAIyT,SAASjtD,EAAamhD,EAAYxzD,GAE5BsgE,SAAS,GAEvBvM,EAAclI,IAAc,EAChC,GAAoB,IAAhBkI,GAAqC,KAAhBA,EAAzB,CAKA,IAAIJ,EAAY,EACZlI,GAA8B,GAAZI,KAAoB,EAC1C,GAAIJ,GAAkB,GAAKA,GAAkB,EAA7C,CACIkI,EAAYriD,KAAK42D,mBAAmBzc,GAMxC,IACIgO,EAAyB,EAAZ5N,EAGb8N,EAAOroD,KAAKo2D,eACZ7N,EAAQvoD,KAAKu3D,YAkBjB,GAhBKlP,KAAA,IACGroD,KAAK01D,YAAA,IAAuB11D,KAAK81D,yBACjC91D,KAAK01D,WAAA,EACL11D,KAAKk2D,WAAW5K,UAAA,IAIpBjD,EAAOroD,KAAKo2D,eAAiB,CAAC,GACzB5kE,KAAO,QACZ62D,EAAK7tB,GAAK+tB,EAAM/tB,GAChB6tB,EAAKoQ,UAAYz4D,KAAKw2D,WACtBnO,EAAKqB,SAAW1pD,KAAKy2D,UACrBpO,EAAKuD,gBAAkBvJ,EACvBgG,EAAKqQ,aAA8B,IAAdvQ,EAAkB,EAAI,GAG3B,KAAhB1F,EAAoB,CACpB,IAAIL,EAAUpiD,KAAK24D,mBAAmB53D,EAAamhD,EAAa,EAAGxzD,EAAW,GAC9E,GAAe,MAAX0zD,EACA,OAGJ,GAA2B,IAAvBA,EAAQwW,WAAkB,CACtBvQ,EAAKwQ,QACLp0D,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,sCAEpB,IAAI30B,EAAO6nB,EAAQzvD,KACnB01D,EAAKuD,gBAAkBrxB,EAAKu+B,aAC5BzQ,EAAKqQ,aAAen+B,EAAKm+B,aACzBrQ,EAAK0Q,MAAQx+B,EAAKw+B,MAClB1Q,EAAK2Q,cAAgBz+B,EAAKy+B,cAC1B3Q,EAAKwQ,OAASt+B,EAAKs+B,OAEnBxQ,EAAK4Q,kBAAoB,KAAO5Q,EAAKuD,gBAAkBvD,EAAKoQ,UAC5Dh0D,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,8BAEZlvD,KAAK+3D,+BAED/3D,KAAKy1D,YAAcz1D,KAAKu3D,YAAY/oE,QAAUwR,KAAKo3D,YAAY5oE,SAC/DwR,KAAKq1D,iBAAiBr1D,KAAKu3D,YAAav3D,KAAKo3D,aAGjDp3D,KAAKg2D,iCAAA,EAGTh2D,KAAKy1D,WAAA,EACLz1D,KAAKo1D,iBAAiB,QAAS/M,IAE3BR,EAAK7nD,KAAKk2D,YACX1K,WAAanD,EAAK2Q,cACrBnR,EAAG+D,gBAAkBvD,EAAKuD,gBAC1B/D,EAAGgE,kBAAoBxD,EAAKqQ,aACxB7Q,EAAG0D,SACkB,MAAjB1D,EAAG4D,aACH5D,EAAGwD,SAAW,wBAA0BxD,EAAG4D,WAAa,IAAM5D,EAAG2D,WAAa,KAGlF3D,EAAGwD,SAAW,wBAA0BxD,EAAG2D,WAAa,IAExD3D,EAAG6E,cACH1sD,KAAKi1D,aAAapN,EAAA,MAEnB,GAA2B,IAAvBzF,EAAQwW,WAAkB,CACjC,IAAIxe,EAAMp6C,KAAKu2D,eAAiBpU,EAC5B/oD,EAAY,CAAC8/D,KAAM9W,EAAQzvD,KAAMnE,OAAQ4zD,EAAQzvD,KAAK28D,WAAY9F,IAAKpP,EAAKqP,IAAKrP,GACrFmO,EAAM+O,QAAQjkE,KAAK+F,GACnBmvD,EAAM/5D,QAAU4zD,EAAQzvD,KAAKnE,MAAA,MAE7BiW,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,kCAAkC9M,EAAQwW,WAAA,MAE3D,GAAoB,IAAhBnW,EAAmB,CAC1B,IAAK4F,EAAK0Q,MAAO,CAEb,IAeIlR,EAdJ,GAAY,OADRttB,EAAOv6B,KAAKm5D,mBAAmBp4D,EAAamhD,EAAa,EAAGxzD,EAAW,GAAG,IAE1E,OAEJ25D,EAAKuD,gBAAkBrxB,EAAKu+B,aAC5BzQ,EAAKqQ,aAAen+B,EAAKm+B,aACzBrQ,EAAK0Q,MAAQx+B,EAAKw+B,MAClB1Q,EAAK2Q,cAAgBz+B,EAAKy+B,cAE1B3Q,EAAK4Q,kBAAoB,KAAO5Q,EAAKuD,gBAAkBvD,EAAKoQ,UAC5Dh0D,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,kCAEhBlvD,KAAKg2D,iCAAA,EACLh2D,KAAKo1D,iBAAiB,QAAS/M,IAE3BR,EAAK7nD,KAAKk2D,YACX1K,WAAanD,EAAK0Q,MACrBlR,EAAG+D,gBAAkBvD,EAAKuD,gBAC1B/D,EAAGgE,kBAAoBxD,EAAKqQ,aAC5B7Q,EAAG6D,cAAgBnxB,EAAK6+B,QACpBvR,EAAG0D,SACkB,MAAjB1D,EAAG4D,aACH5D,EAAGwD,SAAW,wBAA0BxD,EAAG4D,WAAa,IAAM5D,EAAG2D,WAAa,KAGlF3D,EAAGwD,SAAW,wBAA0BxD,EAAG2D,WAAa,IAExD3D,EAAG6E,cACH1sD,KAAKi1D,aAAapN,EAAA,CAK1B,IAAIxE,EAAOrjD,KAAKm5D,mBAAmBp4D,EAAamhD,EAAa,EAAGxzD,EAAW,GAAG,GAC9E,GAAY,MAAR20D,EACA,OAEAjJ,EAAMp6C,KAAKu2D,eAAiBpU,EAAhC,IACIhxC,EAAY,CAAC+nD,KAAM7V,EAAM70D,OAAQ60D,EAAKiM,WAAY9F,IAAKpP,EAAKqP,IAAKrP,GACrEmO,EAAM+O,QAAQjkE,KAAK8d,GACnBo3C,EAAM/5D,QAAU60D,EAAK70D,MAAA,OA5HrBwR,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,uCAAyChN,EAAA,MATjFn6C,KAAKulD,SAASnK,EAAA32C,EAAY4iD,kBAAmB,qCAAuC5E,EAAA,GAyI5F1hD,EAAArM,UAAAikE,mBAAA,SAAmB53D,EAAamhD,EAAYxzD,GACxC,KAAIA,GAAY,GAAhB,CAKA,IAAIyzD,EAAS,CAAC,EACV5H,EAAQ,IAAImU,WAAW3tD,EAAamhD,EAAYxzD,GAUpD,OARAyzD,EAAOyW,WAAare,EAAM,GAET,IAAbA,EAAM,GACN4H,EAAOxvD,KAAOqN,KAAKq5D,6BAA6Bt4D,EAAamhD,EAAa,EAAGxzD,EAAW,GAExFyzD,EAAOxvD,KAAO4nD,EAAMoV,SAAS,GAG1BxN,CAAA,CAfH19C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,gEAkBxBnuD,EAAArM,UAAA2kE,6BAAA,SAA6Bt4D,EAAamhD,EAAYxzD,GAClD,IAcIyzD,EAEA5H,EAhBA91C,EAAQ,IAAIiqD,WAAW3tD,EAAamhD,EAAYxzD,GAChD+zD,EAAS,KAYTJ,EAAkB,EAIlBlI,EAAyB,KAM7B,GAHAkI,EAAkBF,EAA0B19C,EAAM,KAAO,GAEzD81C,GAA6B,EAAX91C,EAAM,KAAc,EAAMA,EAAM,KAAO,GACrC,GAAK81C,GAAiBv6C,KAAK62D,mBAAmBroE,OAC9DwR,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,kDAD5C,CAKA,IAAIgB,EAAoBnoD,KAAK62D,mBAAmBtc,GAG5C8N,GAA4B,IAAX5jD,EAAM,MAAe,EAC1C,KAAI4jD,EAAgB,GAAKA,GAAiB,GAA1C,CAKwB,IAApBhG,IAEAlI,GAAsC,EAAX11C,EAAM,KAAc,EAAMA,EAAM,KAAO,EAEtCA,EAAM,IAItC,IAAI8jD,EAAY3C,KAAKC,UAAUC,UAAUtpD,cA8CzC,OA5CsC,IAAlC+rD,EAAUrrD,QAAQ,WAEdq9C,GAAiB,GACjB8H,EAAkB,EAClBI,EAAS,IAAItwD,MAAM,GACnBgoD,EAAyBI,EAAgB,IAEzC8H,EAAkB,EAClBI,EAAS,IAAItwD,MAAM,GACnBgoD,EAAyBI,IAEY,IAAlCgO,EAAUrrD,QAAQ,YAEzBmlD,EAAkB,EAClBI,EAAS,IAAItwD,MAAM,GACnBgoD,EAAyBI,IAIzB8H,EAAkB,EAClBlI,EAAyBI,EACzBkI,EAAS,IAAItwD,MAAM,GAEfooD,GAAiB,EACjBJ,EAAyBI,EAAgB,EAChB,IAAlB8N,IACPhG,EAAkB,EAClBI,EAAS,IAAItwD,MAAM,GACnBgoD,EAAyBI,IAIjCkI,EAAO,GAAMJ,GAAmB,EAChCI,EAAO,KAAuB,GAAhBlI,KAA0B,EACxCkI,EAAO,IAAuB,GAAhBlI,IAAyB,EACvCkI,EAAO,KAAuB,GAAhB4F,IAAyB,EACf,IAApBhG,IACAI,EAAO,KAAiC,GAAzBtI,KAAmC,EAClDsI,EAAO,IAAgC,EAAzBtI,IAAkC,EAEhDsI,EAAO,IAAM,EACbA,EAAO,GAAM,GAGV,CACHoW,OAAQpW,EACRqW,aAAc3Q,EACduQ,aAAcrQ,EACd0Q,MAAO,WAAa1W,EACpB2W,cAAe,WAAa7W,EAAA,CA/D5BniD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,4CAmEhDpmD,EAAArM,UAAAykE,mBAAA,SAAmBp4D,EAAamhD,EAAYxzD,EAAUyzD,GAClD,KAAIzzD,EAAW,GAAf,CAKSsR,KAAKw3D,cAAd,IACIjd,EAAQ,IAAImU,WAAW3tD,EAAamhD,EAAYxzD,GAChD+zD,EAAS,KAEb,GAAIN,EAAe,CACf,GAAiB,MAAb5H,EAAM,GACN,OAEJ,IAAI8H,EAAO9H,EAAM,KAAO,EAAK,EACzBJ,GAAoB,EAAXI,EAAM,KAAc,EAE7B4N,GAA4B,IAAX5N,EAAM,MAAe,EACtC8N,GAAkC,GAAX9N,EAAM,MAAe,EAG5CgO,EAAiC,KADjBhO,EAAM,KAAO,EAAK,GACG,EAAI,EAEzC6H,EAAc,EACd7nB,EAAW,EAKf,OAAQ8nB,GACJ,KAAK,EACDD,EAAcpiD,KAAKg3D,6BAA6B3O,GAChD,MACJ,KAAK,EACDjG,EAAcpiD,KAAK+2D,6BAA6B1O,GAChD,MACJ,KAAK,EACDjG,EAAcpiD,KAAK82D,6BAA6BzO,GAIxD,OAAQlO,GACJ,KAAK,EAEGgO,EAAgBnoD,KAAKm3D,yBAAyB3oE,SAC9C+rC,EAAWv6B,KAAKm3D,yBAAyBhP,IAE7C,MACJ,KAAK,EAEGA,EAAgBnoD,KAAKk3D,yBAAyB1oE,SAC9C+rC,EAAWv6B,KAAKk3D,yBAAyB/O,IAE7C,MACJ,KAAK,EAEGA,EAAgBnoD,KAAKi3D,yBAAyBzoE,SAC9C+rC,EAAWv6B,KAAKi3D,yBAAyB9O,IAKrD1F,EAAS,CACL2W,QAAS7+B,EACTu+B,aAAc1W,EACdsW,aAAcnQ,EACdwQ,MAvCQ,MAwCRC,cAxCQ,YA2CZvW,EAASlI,EAGb,OAAOkI,CAAA,CAvEHh+C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,6CA0ExBnuD,EAAArM,UAAAujE,gBAAA,SAAgBl3D,EAAamhD,EAAYxzD,EAAUyzD,EAAc5H,GAC7D,GAAI7rD,GAAY,EACZ+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,8DAIpB,IAAI,IAAAlvD,KAAK+1D,yBAAA,IAAmC/1D,KAAK41D,UAAjD,CAMA,IAAInT,EAAO,IAAKiM,WAAW3tD,EAAamhD,EAAYxzD,GAAW,GAE3D2zD,GAAoB,IAAPI,KAAgB,EAC7BtI,EAAiB,GAAPsI,EAEd,GAAgB,IAAZtI,EACAn6C,KAAKs5D,qBAAqBv4D,EAAamhD,EAAa,EAAGxzD,EAAW,EAAGyzD,EAAc5H,EAAa8H,OAC7F,IAAgB,KAAZlI,EAIP,YADAn6C,KAAKulD,SAASnK,EAAA32C,EAAY4iD,kBAAmB,0CAA0ClN,GAFvFn6C,KAAKu5D,sBAAsBx4D,EAAamhD,EAAa,EAAGxzD,EAAW,EAAGyzD,EAAc5H,EAAa8H,EAAA,IAOzGthD,EAAArM,UAAA4kE,qBAAA,SAAqBv4D,EAAamhD,EAAYxzD,EAAUyzD,EAAc5H,EAAakI,GAC/E,GAAI/zD,EAAW,EACX+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,6EADpB,CAKA,IAAI7M,EAAKriD,KAAKw3D,cACVrd,EAAI,IAAI6T,SAASjtD,EAAamhD,EAAYxzD,GAE1Cy5D,EAAahO,EAAE6U,SAAS,GAExB3G,GADqC,SAAtBlO,EAAEyU,UAAU,GAAIvM,KACR,GAAM,EAEjC,GAAmB,IAAf8F,EACAnoD,KAAKw5D,oCAAoCz4D,EAAamhD,EAAa,EAAGxzD,EAAW,QAC9E,GAAmB,IAAfy5D,EACPnoD,KAAKy5D,mBAAmB14D,EAAamhD,EAAa,EAAGxzD,EAAW,EAAGyzD,EAAc5H,EAAakI,EAAW4F,QACtG,GAAmB,IAAfF,EAIP,YADAnoD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,kCAAkCgB,EAAA,GAKlFpnD,EAAArM,UAAA6kE,sBAAA,SAAsBx4D,EAAamhD,EAAYxzD,EAAUyzD,EAAc5H,EAAakI,GAChF,GAAI/zD,EAAW,EACX+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,+EADpB,CAKA,IAAI7M,EAAKriD,KAAKw3D,cACVrd,EAAI,IAAI6T,SAASjtD,EAAamhD,EAAYxzD,GAE1Cy5D,EAAahO,EAAE6U,SAAS,GAExB3G,GADqC,SAAtBlO,EAAEyU,UAAU,GAAIvM,KACR,GAAM,EAEjC,GAAmB,IAAf8F,EACAnoD,KAAK05D,qCAAqC34D,EAAamhD,EAAa,EAAGxzD,EAAW,QAC/E,GAAmB,IAAfy5D,EACPnoD,KAAK25D,oBAAoB54D,EAAamhD,EAAa,EAAGxzD,EAAW,EAAGyzD,EAAc5H,EAAakI,EAAW4F,QACvG,GAAmB,IAAfF,EAIP,YADAnoD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,kCAAkCgB,EAAA,GAKlFpnD,EAAArM,UAAA8kE,oCAAA,SAAoCz4D,EAAamhD,EAAYxzD,GACzD,GAAIA,EAAW,EACX+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,iEADpB,CAKA,IAAI/M,EAAOniD,KAAKq2D,eACZ9b,EAAQv6C,KAAKo3D,YACb3U,EAAKziD,KAAKw3D,cACVnV,EAAI,IAAI2L,SAASjtD,EAAamhD,EAAYxzD,GAEzCyzD,OAAA,IAYUA,EAAKyX,MACZn1D,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,sDAZhBlvD,KAAK41D,YAAA,IAAuB51D,KAAK+1D,yBACjC/1D,KAAK41D,WAAA,EACL51D,KAAKk2D,WAAW3K,UAAA,IAGpBpJ,EAAOniD,KAAKq2D,eAAiB,CAAC,GACzB7kE,KAAO,QACZ2wD,EAAK3nB,GAAK+f,EAAM/f,GAChB2nB,EAAKsW,UAAYz4D,KAAKw2D,WACtBrU,EAAKuH,SAAW1pD,KAAKy2D,WAOzB,IAAItc,EAAUkI,EAAE2M,SAAS,GACrB7G,EAAa9F,EAAE2M,SAAS,GAI5B,GAH2B3M,EAAE2M,SAAS,GACvB3M,EAAE2M,SAAS,GAEV,IAAZ7U,GAAgC,IAAfgO,EAMrB,GADAnoD,KAAKs2D,gBAAwC,GAAL,EAAhBjU,EAAE2M,SAAS,IACN,IAAzBhvD,KAAKs2D,iBAAkD,IAAzBt2D,KAAKs2D,gBAAvC,CAKA,IAAIjO,EAA2B,GAAhBhG,EAAE2M,SAAS,GAC1B,GAAiB,IAAb3G,EAAJ,CAGWA,EAAW,GAClB5jD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,2DAA2D7G,GAK/E,IAFA,IAAIE,EAAS,EAEJnG,EAAI,EAAGA,EAAIiG,EAAUjG,IAAK,CAC/B,IAAI7nB,EAAM8nB,EAAEoM,UAAUlG,GAAS9F,GAG/B,GAFA8F,GAAU,EAEE,IAARhuB,EAAJ,CAKA,IAAI6f,EAAM,IAAIsU,WAAW3tD,EAAamhD,EAAaqG,EAAQhuB,GAC3DguB,GAAUhuB,EAEV,IAAIstB,EAASzuD,EAAUg3D,SAAShW,GAChC,GAAU,IAANgI,EAAJ,CAKAD,EAAK0X,WAAahS,EAAO2K,WAAWjmD,MACpC41C,EAAK2X,YAAcjS,EAAO2K,WAAWhmD,OACrC21C,EAAK4X,aAAelS,EAAO4K,aAAalmD,MACxC41C,EAAK6X,cAAgBnS,EAAO4K,aAAajmD,OAEzC21C,EAAK4J,QAAUlE,EAAO4J,eACtBtP,EAAK6J,MAAQnE,EAAO6J,aACpBvP,EAAK8X,SAAWpS,EAAO+J,UACvBzP,EAAK+J,aAAerE,EAAOmK,cAC3B7P,EAAK+X,SAAWrS,EAAO0K,UACvBpQ,EAAKgY,UAAYtS,EAAOsK,YAAA,IAEpBtK,EAAOsK,WAAWC,OACY,IAA9BvK,EAAOsK,WAAWG,SACY,IAA9BzK,EAAOsK,WAAWE,UAClBlQ,EAAKgY,UAAYn6D,KAAK22D,qBAG1B,IAAItT,EAAUlB,EAAKgY,UAAU9H,QACzBlhD,EAAUgxC,EAAKgY,UAAU7H,QAC7BnQ,EAAK8W,kBAAoB9W,EAAKsW,WAAapV,EAAUlyC,GAIrD,IAFA,IAAI89C,EAAa7U,EAAIuV,SAAS,EAAG,GAC7BlwC,EAAc,QACTza,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI8mC,EAAImjB,EAAWjqD,GAAGtL,SAAS,IAC3BoyC,EAAEt9C,OAAS,IACXs9C,EAAI,IAAMA,GAEdrsB,GAAeqsB,CAAA,CAEnBqW,EAAK4W,MAAQt5C,EAEb,IAAI+wC,EAAKxwD,KAAKk2D,WACd1F,EAAGjkD,MAAQ41C,EAAK0X,WAChBrJ,EAAGhkD,OAAS21C,EAAK2X,YACjBtJ,EAAG1E,IAAM3J,EAAKgY,UAAUrO,IACxB0E,EAAGzE,QAAU5J,EAAK4J,QAClByE,EAAGxE,MAAQ7J,EAAK6J,MAChBwE,EAAGvE,UAAYpE,EAAOkK,WACtBvB,EAAGtE,aAAerE,EAAOoK,qBACzBzB,EAAGrE,OAAShK,EAAK+X,SAAS3tD,MAC1BikD,EAAGpE,OAASjK,EAAK+X,SAAS1tD,OAC1BgkD,EAAG/E,WAAahsC,EAEZ+wC,EAAGlF,SACkB,MAAjBkF,EAAGhF,aACHgF,EAAGnF,SAAW,wBAA0BmF,EAAG/E,WAAa,IAAM+E,EAAGhF,WAAa,KAGlFgF,EAAGnF,SAAW,wBAA0BmF,EAAG/E,WAAa,IAExD+E,EAAG9D,cACH1sD,KAAKi1D,aAAazE,EAAA,GAI1B,IAAI9lC,EAAW23B,EAAE2M,SAASzG,GAC1B,GAAiB,IAAb79B,EAAJ,CASA,IANWA,EAAW,GAClBjmB,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,2DAA2DxkC,GAG/E69B,IAESnG,EAAI,EAAGA,EAAI13B,EAAU03B,IACtB7nB,EAAM8nB,EAAEoM,UAAUlG,GAAS9F,GAC/B8F,GAAU,EAEE,IAARhuB,IAKJguB,GAAUhuB,GAGd4nB,EAAKyX,KAAO,IAAIlL,WAAWhgE,GAC3ByzD,EAAKyX,KAAK/7D,IAAI,IAAI6wD,WAAW3tD,EAAamhD,EAAYxzD,GAAW,GACjE+V,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,wCAEZlvD,KAAK+3D,+BAED/3D,KAAKy1D,YAAcz1D,KAAKu3D,YAAY/oE,QAAUwR,KAAKo3D,YAAY5oE,SAC/DwR,KAAKq1D,iBAAiBr1D,KAAKu3D,YAAav3D,KAAKo3D,aAGjDp3D,KAAKi2D,iCAAA,EAGTj2D,KAAKy1D,WAAA,EACLz1D,KAAKo1D,iBAAiB,QAASjT,EAAA,MAlC3BniD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,2DArFxCnnD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,2DANxCnnD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,yCAAwCnnD,KAAKs2D,gBAAkB,SANvGt2D,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,gDAsIhDpmD,EAAArM,UAAAglE,qCAAA,SAAqC34D,EAAamhD,EAAYxzD,GAC1D,GAAIA,EAAW,GACX+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,kEADpB,CAKA,IAAI/M,EAAOniD,KAAKq2D,eACZ9b,EAAQv6C,KAAKo3D,YACb3U,EAAKziD,KAAKw3D,cACVnV,EAAI,IAAI2L,SAASjtD,EAAamhD,EAAYxzD,GAEzCyzD,OAAA,IAYUA,EAAKiY,MACZ31D,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,uDAZhBlvD,KAAK41D,YAAA,IAAuB51D,KAAK+1D,yBACjC/1D,KAAK41D,WAAA,EACL51D,KAAKk2D,WAAW3K,UAAA,IAGpBpJ,EAAOniD,KAAKq2D,eAAiB,CAAC,GACzB7kE,KAAO,QACZ2wD,EAAK3nB,GAAK+f,EAAM/f,GAChB2nB,EAAKsW,UAAYz4D,KAAKw2D,WACtBrU,EAAKuH,SAAW1pD,KAAKy2D,WAOzB,IAAItc,EAAUkI,EAAE2M,SAAS,GACrB7G,EAA8B,GAAhB9F,EAAE2M,SAAS,GAE7B,GAAgB,IAAZ7U,GAAiC,IAAhBgO,EAMrB,GADAnoD,KAAKs2D,gBAAyC,GAAL,EAAjBjU,EAAE2M,SAAS,KACN,IAAzBhvD,KAAKs2D,iBAAkD,IAAzBt2D,KAAKs2D,gBAAvC,CAMA,IADA,IAAIjO,EAAchG,EAAE2M,SAAS,IACpBzG,EAAI,EAAGnG,EAAS,GAAImG,EAAIF,EAAaE,IAAK,CAC/C,IAAIhuB,EAAuC,GAAzB8nB,EAAE2M,SAAS5M,EAAS,GAClChI,EAAWiI,EAAEoM,UAAUrM,EAAS,GAAIK,GAExCL,GAAU,EACV,IAAK,IAAIhpD,EAAI,EAAGA,EAAIghD,EAAUhhD,IAAK,CAC/B,IAAIiqD,EAAMhB,EAAEoM,UAAUrM,EAAS,GAAIK,GACnC,GAAU,IAANrpD,EAKJ,GAAoB,KAAhBmhC,EAAoB,CACpB6nB,GAAU,EACV,IAAIjxC,EAAM,IAAIu9C,WAAW3tD,EAAamhD,EAAaE,EAAQiB,GAEvD4L,EAASpH,EAAWuI,SAASj/C,GACjCgxC,EAAK0X,WAAa5K,EAAOuD,WAAWjmD,MACpC41C,EAAK2X,YAAc7K,EAAOuD,WAAWhmD,OACrC21C,EAAK4X,aAAe9K,EAAOwD,aAAalmD,MACxC41C,EAAK6X,cAAgB/K,EAAOwD,aAAajmD,OAEzC21C,EAAK4J,QAAUkD,EAAOwC,eACtBtP,EAAK6J,MAAQiD,EAAOyC,aACpBvP,EAAK8X,SAAWhL,EAAO2C,UACvBzP,EAAK+J,aAAe+C,EAAO+C,cAC3B7P,EAAK+X,SAAWjL,EAAOsD,UACvBpQ,EAAKgY,UAAYlL,EAAOkD,YAAA,IAEpBlD,EAAOkD,WAAWC,OACY,IAA9BnD,EAAOkD,WAAWG,SACY,IAA9BrD,EAAOkD,WAAWE,UAClBlQ,EAAKgY,UAAYn6D,KAAK22D,qBAG1B,IAAIl3C,EAAU0iC,EAAKgY,UAAU9H,QACzBrtD,EAAUm9C,EAAKgY,UAAU7H,QAC7BnQ,EAAK8W,kBAAoB9W,EAAKsW,WAAah5C,EAAUza,GACrDm9C,EAAK4W,MAAQ9J,EAAOqC,eAEpB,IAAIxlB,EAAK9rC,KAAKk2D,WACdpqB,EAAGv/B,MAAQ41C,EAAK0X,WAChB/tB,EAAGt/B,OAAS21C,EAAK2X,YACjBhuB,EAAGggB,IAAM3J,EAAKgY,UAAUrO,IACxBhgB,EAAGigB,QAAU5J,EAAK4J,QAClBjgB,EAAGkgB,MAAQ7J,EAAK6J,MAChBlgB,EAAGmgB,UAAYgD,EAAO8C,WACtBjmB,EAAGogB,aAAe+C,EAAOgD,qBACzBnmB,EAAGqgB,OAAShK,EAAK+X,SAAS3tD,MAC1Bu/B,EAAGsgB,OAASjK,EAAK+X,SAAS1tD,OAC1Bs/B,EAAG2f,WAAawD,EAAOqC,eAEnBxlB,EAAGwf,SACkB,MAAjBxf,EAAG0f,aACH1f,EAAGuf,SAAW,wBAA0Bvf,EAAG2f,WAAa,IAAM3f,EAAG0f,WAAa,KAGlF1f,EAAGuf,SAAW,wBAA0Bvf,EAAG2f,WAAa,IAExD3f,EAAG4gB,cACH1sD,KAAKi1D,aAAanpB,GAGtBsW,GAAUiB,CAAA,MAEVjB,GAAU,EAAIiB,OAzDdjB,GAAU,EAAIiB,CAAA,EA8D1BlB,EAAKiY,KAAO,IAAI1L,WAAWhgE,GAC3ByzD,EAAKiY,KAAKv8D,IAAI,IAAI6wD,WAAW3tD,EAAamhD,EAAYxzD,GAAW,GACjE+V,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,yCAEZlvD,KAAK+3D,+BAED/3D,KAAKy1D,YAAcz1D,KAAKu3D,YAAY/oE,QAAUwR,KAAKo3D,YAAY5oE,SAC/DwR,KAAKq1D,iBAAiBr1D,KAAKu3D,YAAav3D,KAAKo3D,aAGjDp3D,KAAKi2D,iCAAA,EAGTj2D,KAAKy1D,WAAA,EACLz1D,KAAKo1D,iBAAiB,QAASjT,EAAA,MAzF3BniD,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,yCAAwCnnD,KAAKs2D,gBAAkB,SANvGt2D,KAAKulD,SAASnK,EAAA32C,EAAY0iD,aAAc,iDAkGhDpmD,EAAArM,UAAA+kE,mBAAA,SAAmB14D,EAAamhD,EAAYxzD,EAAUyzD,EAAc5H,EAAakI,EAAWJ,GAWxF,IAVA,IAAIlI,EAAKn6C,KAAKw3D,cACVrP,EAAI,IAAI6F,SAASjtD,EAAamhD,EAAYxzD,GAE1C25D,EAAQ,GAAIE,EAAS,EAErBnG,EAAS,EACP7nB,EAAav6B,KAAKs2D,gBACpBlc,EAAMp6C,KAAKu2D,eAAiBpU,EAC5B/oD,EAA0B,IAAdqpD,EAETL,EAAS1zD,GAAU,CACtB,GAAI0zD,EAAS,GAAK1zD,EAAU,CACxB+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,iCAAiC9U,EAAG,cAAcgI,EAAM,gBAAgB1zD,GACxF,MAGJ,IAAI0sD,EAAW+M,EAAEyG,UAAUxM,GAASjI,GAIpC,GAHmB,IAAf5f,IACA6gB,KAAc,GAEdA,EAAW1sD,EAAW6rC,EAEtB,YADA91B,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,kCAAkC9U,EAAG,0BAIzD,IAAIyN,EAA6C,GAAlCM,EAAE6G,SAAS5M,EAAS7nB,GAElB,IAAbstB,IACAzuD,GAAA,GAGJ,IAAIiqD,EAAO,IAAIqL,WAAW3tD,EAAamhD,EAAaE,EAAQ7nB,EAAa6gB,GACrEjqC,EAAO,CAAC3f,KAAMq2D,EAAUl1D,KAAM0wD,GAClCgF,EAAMh1D,KAAK8d,GACXo3C,GAAUlF,EAAKiM,WAEflN,GAAU7nB,EAAa6gB,CAAA,CAG3B,GAAIiN,EAAM75D,OAAQ,CACd,IAAIygE,EAAQjvD,KAAKo3D,YACb33C,EAAY,CACZ46C,MAAOhS,EACP75D,OAAQ+5D,EACR+R,WAAYlhE,EACZowD,IAAKpP,EACLmgB,IAAKlY,EACLoH,IAAMrP,EAAMiI,GAEZjpD,IACAqmB,EAAUoqC,aAAetP,GAE7B0U,EAAMqI,QAAQjkE,KAAKosB,GACnBwvC,EAAMzgE,QAAU+5D,CAAA,GAIxBxnD,EAAArM,UAAAilE,oBAAA,SAAoB54D,EAAamhD,EAAYxzD,EAAUyzD,EAAc5H,EAAakI,EAAWJ,GAWzF,IAVA,IAAIlI,EAAKn6C,KAAKw3D,cACVrP,EAAI,IAAI6F,SAASjtD,EAAamhD,EAAYxzD,GAE1C25D,EAAQ,GAAIE,EAAS,EAErBnG,EAAS,EACP7nB,EAAav6B,KAAKs2D,gBACpBlc,EAAMp6C,KAAKu2D,eAAiBpU,EAC5B/oD,EAA0B,IAAdqpD,EAETL,EAAS1zD,GAAU,CACtB,GAAI0zD,EAAS,GAAK1zD,EAAU,CACxB+V,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,iCAAiC9U,EAAG,cAAcgI,EAAM,gBAAgB1zD,GACxF,MAGJ,IAAI0sD,EAAW+M,EAAEyG,UAAUxM,GAASjI,GAIpC,GAHmB,IAAf5f,IACA6gB,KAAc,GAEdA,EAAW1sD,EAAW6rC,EAEtB,YADA91B,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,kCAAkC9U,EAAG,0BAIzD,IAAIyN,EAA6C,GAAlCM,EAAE6G,SAAS5M,EAAS7nB,GAElB,KAAbstB,GAAgC,KAAbA,IACnBzuD,GAAA,GAGJ,IAAIiqD,EAAO,IAAIqL,WAAW3tD,EAAamhD,EAAaE,EAAQ7nB,EAAa6gB,GACrEjqC,EAAO,CAAC3f,KAAMq2D,EAAUl1D,KAAM0wD,GAClCgF,EAAMh1D,KAAK8d,GACXo3C,GAAUlF,EAAKiM,WAEflN,GAAU7nB,EAAa6gB,CAAA,CAG3B,GAAIiN,EAAM75D,OAAQ,CACd,IAAIygE,EAAQjvD,KAAKo3D,YACb33C,EAAa,CACb46C,MAAOhS,EACP75D,OAAQ+5D,EACR+R,WAAYlhE,EACZowD,IAAKpP,EACLmgB,IAAKlY,EACLoH,IAAMrP,EAAMiI,GAEZjpD,IACAqmB,EAAWoqC,aAAetP,GAE9B0U,EAAMqI,QAAQjkE,KAAKosB,GACnBwvC,EAAMzgE,QAAU+5D,CAAA,GAI5BxnD,CAAA,CApvCA,KChCA,WAYI,SAAAA,IAAA,CAgBJ,OAdWA,EAAArM,UAAA00B,QAAP,WACIppB,KAAKwY,QAAU,KACfxY,KAAKw6D,YAAc,KACnBx6D,KAAKy6D,kBAAoB,KACzBz6D,KAAK06D,gBAAkB,KACvB16D,KAAK26D,gBAAkB,KACvB36D,KAAK46D,mBAAqB,KAC1B56D,KAAK66D,iBAAmB,KACxB76D,KAAK86D,iBAAmB,KACxB96D,KAAK+6D,2BAA6B,MAK1Ch6D,CAAA,CA5BA,GLVA0e,EAAA,WAII,KAAAu7C,gBAAsC,CAAC,CAAD,GAG1C,SAAYj6D,GACRA,EAAAA,EAAAk6D,YAAA,iBACAl6D,EAAAA,EAAAm6D,YAAA,iBACAn6D,EAAAA,EAAAo6D,gBAAA,qBACAp6D,EAAAA,EAAAq6D,SAAA,eACAr6D,EAAAA,EAAAs6D,KAAA,WACAt6D,EAAAA,EAAAu6D,QAAA,eACAv6D,EAAAA,EAAAw6D,MAAA,YACAx6D,EAAAA,EAAAy6D,MAAA,YARJ,CAAYnY,IAAAA,EAAU,KAetB,IMxBYr+C,ENwBZ8mC,EAAA,WAKI,KAAA2vB,gBAAsC,CAAC,EAEvC,KAAAC,YAII,CACAC,UAAA,EACAC,UAAA,EACAC,cAAA,GAGJ,KAAAC,sBAEI,CAAC,EAEL,KAAAC,eAEI,CAAC,EAEL,KAAAC,aAEI,CAAC,CAAD,EAORxL,EAAA,aAQA9lC,EAAA,aAOAkwB,EAAA,WACI,KAAAqhB,OAAuB,GACvB,KAAAC,aAAuB,EACvB,KAAAC,gBAA0B,EAC1B,KAAAC,cAAwB,IM7E5B,SAAYr7D,GACRA,EAAAA,EAAAs7D,aAAA,kBACAt7D,EAAAA,EAAAu7D,aAAA,kBACAv7D,EAAAA,EAAAw7D,UAAA,eACAx7D,EAAAA,EAAAy7D,UAAA,eACAz7D,EAAAA,EAAA07D,UAAA,eACA17D,EAAAA,EAAA27D,UAAA,eACA37D,EAAAA,EAAA47D,UAAA,eACA57D,EAAAA,EAAA67D,UAAA,eACA77D,EAAAA,EAAA87D,UAAA,eACA97D,EAAAA,EAAA+7D,UAAA,eACA/7D,EAAAA,EAAAg8D,eAAA,qBACAh8D,EAAAA,EAAAi8D,aAAA,mBACAj8D,EAAAA,EAAAk8D,QAAA,cACAl8D,EAAAA,EAAAm8D,QAAA,cACAn8D,EAAAA,EAAAo8D,WAAA,iBAfJ,CAAYn4D,IAAAA,EAAY,KAkBxB,ICpBYi+C,EAcAwN,EDMZhW,EAAA,aAKAE,EAII,SAAY55C,GACR,IAAImhD,EAAYnhD,EAAKpO,KAAK28D,WAE1BtvD,KAAKxO,KAAOuP,EAAKvP,KACjBwO,KAAKrN,KAAO,IAAI+7D,WAAW,EAAIxM,GAEvB,IAAI8L,SAAShuD,KAAKrN,KAAKi9D,QAE7BwN,UAAU,EAAGlb,GAEfliD,KAAKrN,KAAKkL,IAAIkD,EAAKpO,KAAM,IAIjC+9D,EAAA,WAQI,SAAA3vD,EAAmBA,GANF,KAAAmuD,IAAc,mBAGvB,KAAAmO,0BAAoC,EACpC,KAAAC,WAAA,EAGJt9D,KAAKu9D,MAAQx8D,EACbf,KAAKq9D,0BAA4Br9D,KAAKw9D,wBAAwB,GAC1Dx9D,KAAKs9D,WACL74D,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,oDA0E5B,OAtEYnuD,EAAArM,UAAA8oE,wBAAR,SAAgCz8D,GAI5B,IAHA,IAAImhD,EAAInhD,EACJrS,EAAOsR,KAAKu9D,QAEH,CACT,GAAIrb,EAAI,GAAKxzD,EAAK4gE,WAEd,OADAtvD,KAAKs9D,WAAA,EACE5uE,EAAK4gE,WAIhB,IAAInN,EAAUzzD,EAAKwzD,EAAI,IAAM,GACdxzD,EAAKwzD,EAAI,IAAM,GACfxzD,EAAKwzD,EAAI,IAAM,EACfxzD,EAAKwzD,EAAI,GACpB3H,EAAU7rD,EAAKwzD,EAAI,IAAM,GACdxzD,EAAKwzD,EAAI,IAAM,EACfxzD,EAAKwzD,EAAI,GACxB,GAAe,IAAXC,GAAoC,IAAX5H,EACzB,OAAO2H,EAEPA,GAAA,GAKLnhD,EAAArM,UAAA+oE,oBAAP,WAII,IAHA,IAAI18D,EAAOf,KAAKu9D,MACZrb,EAAgC,KAEb,MAAhBA,IACCliD,KAAKs9D,WADgB,CAKzB,IAGI5uE,EAHmBsR,KAAKq9D,0BAWxBlb,EAAyC,GAAfphD,EAL1BrS,GADQ,KADDqS,EAAKrS,IAAW,GAAOqS,EAAKrS,EAAS,IAAM,GAAOqS,EAAKrS,EAAS,IAAM,EAAMqS,EAAKrS,EAAS,IAEvF,EAEA,GAIV6rD,GAAgC,IAAfx5C,EAAKrS,MAAoB,EAE1C+V,EAAwBzE,KAAKw9D,wBAAwB9uE,GAGzD,GAFAsR,KAAKq9D,0BAA4B54D,IAE7B09C,GAAan9C,EAAam4D,aAGR,IAAlB5iB,EAAJ,CAKA,IAAIkI,EAAe1hD,EAAK4uD,SAASjhE,EAAQ+V,IAEzCy9C,EAAe,IAAIzH,GACNjpD,KAAO2wD,EACpBD,EAAavvD,KAAO8vD,CAAA,EAGxB,OAAOP,CAAA,EAGfnhD,CAAA,CAtFA,GAyFA4vD,EAAA,WAKI,SAAA5vD,EAAmBA,EAAiBmhD,EAAiBxzD,GACjD,IAAIyzD,EAAS,EAAQphD,EAAIuuD,WAAa,EAAI,EAAIpN,EAAIoN,WAC9C/U,GAAA,EAEW,KAAXx5C,EAAI,IAAwB,KAAXA,EAAI,IAAwB,KAAXA,EAAI,KACtCw5C,GAAA,EACA4H,GAAU,GAGd,IAAI19C,EAAOzE,KAAKrN,KAAO,IAAI+7D,WAAWvM,GAEtC19C,EAAK,GAAK,EACVA,EAAK,GAAK1D,EAAI,GACd0D,EAAK,GAAK1D,EAAI,GACd0D,EAAK,GAAK1D,EAAI,GACd0D,EAAK,GAAK,IAEVA,EAAK,GAAK,IAEV,IAAIg+C,EAAa1hD,EAAIuuD,WACrB7qD,EAAK,GAAKg+C,IAAe,EACzBh+C,EAAK,GAAkB,IAAbg+C,EAEV,IAAIJ,EAAS,EACb59C,EAAK5G,IAAIkD,EAAK,GAGd0D,EAFA49C,GAAUI,GAEK,EAEf,IAAItI,EAAa+H,EAAIoN,WACrB7qD,EAAK49C,EAAS,GAAKlI,IAAe,EAClC11C,EAAK49C,EAAS,GAAkB,IAAblI,EAEnB11C,EAAK5G,IAAIqkD,EAAKG,EAAS,GACvBA,GAAU,EAAIlI,EAEVI,IACA91C,EAAK49C,GAAU,IAAO3zD,EAAYijE,kBAClCltD,EAAK49C,EAAS,GAAK,IAAQ3zD,EAAYmjE,eAAiB,EACxDptD,EAAK49C,EAAS,GAAK,IAAQ3zD,EAAYojE,iBAAmB,EAC1DrtD,EAAK49C,EAAS,GAAK,EACnBA,GAAU,GAQtB,OAJWthD,EAAArM,UAAAgR,QAAP,WACI,OAAO1F,KAAKrN,IAAA,EAGpBoO,CAAA,CAtDA,ICpIA,SAAYA,GACRA,EAAAA,EAAA28D,MAAA,WACA38D,EAAAA,EAAA48D,SAAA,cACA58D,EAAAA,EAAA68D,QAAA,aACA78D,EAAAA,EAAA88D,SAAA,cACA98D,EAAAA,EAAA+8D,SAAA,cACA/8D,EAAAA,EAAAg9D,SAAA,cACAh9D,EAAAA,EAAAi9D,cAAA,mBAEAj9D,EAAAA,EAAAk9D,QAAA,cACAl9D,EAAAA,EAAAm9D,QAAA,cACAn9D,EAAAA,EAAAo9D,QAAA,cAXJ,CAAYlb,IAAAA,EAAqB,KAcjC,SAAYliD,GACRA,EAAAA,EAAAq9D,SAAA,cACAr9D,EAAAA,EAAAs9D,SAAA,cACAt9D,EAAAA,EAAAu9D,SAAA,cACAv9D,EAAAA,EAAAw9D,SAAA,cACAx9D,EAAAA,EAAAy9D,SAAA,cACAz9D,EAAAA,EAAA09D,SAAA,cACA19D,EAAAA,EAAA29D,SAAA,cACA39D,EAAAA,EAAA49D,SAAA,cACA59D,EAAAA,EAAA69D,SAAA,cACA79D,EAAAA,EAAA89D,SAAA,cACA99D,EAAAA,EAAA+9D,SAAA,eACA/9D,EAAAA,EAAAg+D,QAAA,cACAh+D,EAAAA,EAAAi+D,QAAA,cAbJ,CAAYvO,IAAAA,EAA2B,KAgBhC,ICwGKG,EDxGCC,EAA2B,CACpC,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MExCJnV,EAAA,aASAzpD,EAAA,WASI,SAAA8O,EAAmBA,GAPF,KAAAmuD,IAAc,gBAQ3BlvD,KAAKu9D,MAAQx8D,EACbf,KAAKi/D,yBAA2Bj/D,KAAKk/D,uBAAuB,GACxDl/D,KAAKs9D,WACL74D,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,mDAgG5B,OA5FYnuD,EAAArM,UAAAwqE,uBAAR,SAA+Bn+D,GAI3B,IAHA,IAAImhD,EAAInhD,EACJrS,EAAOsR,KAAKu9D,QAEH,CACT,GAAIrb,EAAI,GAAKxzD,EAAK4gE,WAEd,OADAtvD,KAAKs9D,WAAA,EACE5uE,EAAK4gE,WAKhB,GAAiB,QADA5gE,EAAKwzD,EAAI,IAAM,EAAKxzD,EAAKwzD,EAAI,MAAQ,EAElD,OAAOA,EAEPA,GAAA,GAKLnhD,EAAArM,UAAAyqE,iBAAP,WAII,IAHA,IAAIp+D,EAAOf,KAAKu9D,MACZrb,EAAsB,KAEN,MAAbA,IACCliD,KAAKs9D,WADa,CAKtB,IACI5uE,EADkBsR,KAAKi/D,yBAKvB9c,GAAyB,EAAnBphD,EAAKrS,EAAS,MAAe,EACnC6rD,GAA4B,EAAnBx5C,EAAKrS,EAAS,MAAe,EACtC+V,EAAuC,EAAnB1D,EAAKrS,EAAS,GAClC+zD,GAA8B,IAAnB1hD,EAAKrS,EAAS,MAAe,EACxC2zD,GAA+C,GAAnBthD,EAAKrS,EAAS,MAAe,EACzDyrD,GAA6C,EAAnBp5C,EAAKrS,EAAS,KAAc,GACP,IAAnBqS,EAAKrS,EAAS,MAAe,EAGzDy5D,GAAwC,EAAnBpnD,EAAKrS,EAAS,KAAc,GAC1BqS,EAAKrS,EAAS,IAAM,GACA,IAAnBqS,EAAKrS,EAAS,MAAe,EAGzD,GAFyCqS,EAAKrS,EAAS,GAEnDA,EAASy5D,EAAmBnoD,KAAKu9D,MAAMjO,WAAY,CAEnDtvD,KAAKs9D,WAAA,EACLt9D,KAAKo/D,0BAAA,EACL,MAGJ,IAAI/W,EAA4C,IAAtB5jD,EAA2B,EAAI,EACrD8jD,EAA4BJ,EAAmBE,EAEnD35D,GAAU25D,EAEV,IAAIjG,EAAuBpiD,KAAKk/D,uBAAuBxwE,EAAS65D,GAGhE,GAFAvoD,KAAKi/D,yBAA2B7c,GAEpB,IAAPD,GAAmB,IAAPA,IAAuB,IAAV5H,EAA9B,CAKA,IAAIhgB,EAAax5B,EAAK4uD,SAASjhE,EAAQA,EAAS65D,IAEhDrG,EAAY,IAAIxG,GACN2jB,kBAAqB5c,EAAU,EACzCP,EAAUod,oBAAsBjd,EAChCH,EAAUqd,mBAAqB1O,EAAyBxO,GACxDH,EAAUsd,eAAiBrlB,EAC3B+H,EAAUvvD,KAAO4nC,CAAA,EAGrB,OAAO2nB,CAAA,EAGJnhD,EAAArM,UAAA+qE,kBAAP,WACI,OAAOz/D,KAAKo/D,wBAAA,EAGTr+D,EAAArM,UAAAgrE,kBAAP,WACI,OAAK1/D,KAAKo/D,yBAIHp/D,KAAKu9D,MAAM5N,SAAS3vD,KAAKi/D,0BAHrB,MAKnBl+D,CAAA,CA7GA,GA+GA+vD,EAQI,SAAmB/vD,GACf,IAAImhD,EAAwB,KAExBxzD,EAA6BqS,EAAMs+D,kBACnCld,EAAoBphD,EAAMs+D,kBAC1B9kB,EAAiBx5C,EAAMu+D,oBACvB76D,EAAiB1D,EAAMy+D,eACvB/c,EAA2B,EAE3BJ,EAAYwD,UAAUC,UAAUtpD,eAEE,IAAlC6lD,EAAUnlD,QAAQ,WAEdq9C,GAAkB,GAClB4H,EAAoB,EACpBD,EAAS,IAAI/vD,MAAM,GACnBswD,EAA2BlI,EAAiB,IAE5C4H,EAAoB,EACpBD,EAAS,IAAI/vD,MAAM,GACnBswD,EAA2BlI,IAEU,IAAlC8H,EAAUnlD,QAAQ,YAEzBilD,EAAoB,EACpBD,EAAS,IAAI/vD,MAAM,GACnBswD,EAA2BlI,IAI3B4H,EAAoB,EACpBM,EAA2BlI,EAC3B2H,EAAS,IAAI/vD,MAAM,GAEfooD,GAAkB,EAClBkI,EAA2BlI,EAAiB,EAClB,IAAnB91C,IACP09C,EAAoB,EACpBD,EAAS,IAAI/vD,MAAM,GACnBswD,EAA2BlI,IAInC2H,EAAO,GAAMC,GAAqB,EAClCD,EAAO,KAAwB,GAAjB3H,KAA2B,EACzC2H,EAAO,IAAwB,GAAjB3H,IAA0B,EACxC2H,EAAO,KAAwB,GAAjBz9C,IAA0B,EACd,IAAtB09C,IACAD,EAAO,KAAmC,GAA3BO,KAAqC,EACpDP,EAAO,IAAkC,EAA3BO,IAAoC,EAElDP,EAAO,IAAM,EACbA,EAAO,GAAM,GAGjBliD,KAAK64D,OAAS3W,EACdliD,KAAK2/D,cAAgB9O,EAAyBtW,GAC9Cv6C,KAAK4/D,cAAgBn7D,EACrBzE,KAAKsxD,eAAiB,WAAanP,EACnCniD,KAAK6/D,wBAA0B,WAAanxE,CAAA,EC7LpDqiE,EAAA,aAUAC,EAAA,cF2HA,SAAYjwD,GACRA,EAAAA,EAAA++D,YAAA,iBACA/+D,EAAAA,EAAAg/D,gBAAA,qBACAh/D,EAAAA,EAAAi/D,cAAA,mBACAj/D,EAAAA,EAAAk/D,YAAA,iBACAl/D,EAAAA,EAAAm/D,sBAAA,2BACAn/D,EAAAA,EAAAo/D,gBAAA,uBANJ,CAAYvP,IAAAA,EAAiB,KAc7B,IGlJYK,EHkJNC,EAAkB,SAACnwD,GACrB,IAAMmhD,EAAsBnhD,EAAO+uD,WAEnC,OAAK5N,GAIDnhD,EAAO8uD,SAAS,GAET,CACHuQ,oBAAmBle,EACnBme,SAHmC,EAAtBt/D,EAAO8uD,SAAS,IAAU9uD,EAAO8uD,SAAS,MAJ3D9uD,EAAO8uD,SAAS,GACT,CAAEuQ,oBAAmBle,GAAA,EAe9BiP,EAAqB,SAACpwD,GACxB,IAAMmhD,EAAcnhD,EAAO+uD,WAG3B,OAFA/uD,EAAO8uD,SAAS,GAET,CACHyQ,YAAWpe,EACXwH,SAHmC,EAAtB3oD,EAAO8uD,SAAS,IAAU9uD,EAAO8uD,SAAS,KAWzDuB,EAA6B,SAACrwD,EAAgCmhD,GAChE,IAAMxzD,EAAgBwzD,EAAO2N,SAAS,GACtC,OAAI9uD,EACO,CAAEw/D,cAAa7xE,GAInB,CACH6xE,cAAa7xE,EACb8xE,YAHgBtP,EAAgBhP,GAAA,EAUlC58B,EAAoC,SAACvkB,GAGvC,MAAO,CACHw/D,cAHkBx/D,EAAO8uD,SAAS,GAIlC4Q,gBAHoB1/D,EAAO8uD,SAAS,MAqBtCiD,EAA2B,SAAC/xD,GAC9B,IAAMmhD,EAAkBnhD,EAAO8uD,SAAS,IAClCnhE,EAAgCqS,EAAO+uD,WAC7C/uD,EAAO8uD,SAAS,GAEhB,IAAM1N,EAA2C,CAC7Cue,gBAAexe,EACfye,8BAA6BjyE,GAGjC,GAAIA,EACA,OAAOyzD,EAQX,GALAA,EAAoBye,yBAA2B7/D,EAAO+uD,WACtD3N,EAAoB0e,oBAAsB9/D,EAAO+uD,WACjD3N,EAAoB2e,cAAgB//D,EAAO+uD,WAC3C/uD,EAAO8uD,SAAS,GAEZ1N,EAAoB0e,oBACpB1e,EAAoBse,gBAAkB1/D,EAAO8uD,SAAS,QACnD,CACH1N,EAAoB4e,gBAAkBhgE,EAAO8uD,SAAS,GACtD1N,EAAoB6e,WAAa,GACjC,IAAK,IAAIzmB,EAAI,EAAGA,EAAI4H,EAAoB4e,gBAAiBxmB,IACrD4H,EAAoB6e,WAAW3tE,KAAKiyB,EAAkCvkB,GAAA,CAY9E,OARIohD,EAAoB2e,gBACpB3e,EAAoB8e,eAAiB9P,EAAmBpwD,IAG5DohD,EAAoB+e,kBAAoBngE,EAAO8uD,SAAS,IACxD1N,EAAoBgf,UAAYpgE,EAAO8uD,SAAS,GAChD1N,EAAoBif,gBAAkBrgE,EAAO8uD,SAAS,GAE/C1N,CAAA,EAsHL4Q,EAAuB,SAAChyD,EAAwBmhD,EAA2BxzD,EAAoByzD,GAGjG,MAAO,CACHkf,eAActgE,EACdugE,kBAAiBpf,EACjBqf,WAAU7yE,EACV8yE,kBANsBrf,EAAO0N,SAAS,MAcxCmD,EAAsB,SAACjyD,EAAwBmhD,EAA2BxzD,EAAoByzD,GAChG,IAAM5H,EAAU4H,EAAO0N,SAAS,GAC1BprD,EAAa09C,EAAO0N,SAAS,GACnC1N,EAAO0N,SAAS,GAEhB,IADA,IAAIpN,EAAY,GACPJ,EAAI,EAAGA,EAAI59C,EAAY49C,IAC5BI,GAAa12C,OAAOC,aAAam2C,EAAO0N,SAAS,IAGrD,MAAO,CACHwR,eAActgE,EACdugE,kBAAiBpf,EACjBqf,WAAU7yE,EACV+yE,QAAOlnB,EACPmnB,WAAUj9D,EACVk9D,UAASlf,EAAA,EAOXpH,EAAuC,SAACt6C,GAC1C,IAAMmhD,EAAgBnhD,EAAO8uD,SAAS,GAGtC,OAFA9uD,EAAO8uD,SAAS,GAET,CACH0Q,cAAare,EACb0f,WAHqC,EAAtB7gE,EAAO8uD,SAAS,IAAU9uD,EAAO8uD,SAAS,KA4B3DoD,EAA8B,SAAClyD,EAAwBmhD,EAA2BxzD,EAAoByzD,GACxG,IAAM5H,EAAwB4H,EAAO0N,SAAS,IACxCprD,EAAsC09C,EAAO2N,WACnD3N,EAAO0N,SAAS,GAEhB,IAAMpN,EAAiD,CACnD4e,eAActgE,EACdugE,kBAAiBpf,EACjBqf,WAAU7yE,EACVmzE,sBAAqBtnB,EACrBunB,oCAAmCr9D,GAGvC,GAAIA,EACA,OAAOg+C,EAgBX,GAbAA,EAAuBsf,0BAA4B5f,EAAO2N,WAC1DrN,EAAuBuf,2BAA6B7f,EAAO2N,WAC3DrN,EAAuBwf,6BAA+B9f,EAAO2N,WAExDrN,EAAuBwf,6BAMxB9f,EAAO0N,SAAS,IALhBpN,EAAuByf,0BAA4B/f,EAAO2N,WAC1DrN,EAAuB0f,0BAA4BhgB,EAAO2N,WAC1DrN,EAAuB2f,qBAAuBjgB,EAAO2N,WACrDrN,EAAuB4f,oBAAsBlgB,EAAO0N,SAAS,KAK5DpN,EAAuBsf,0BAA2B,CACnDtf,EAAuBse,gBAAkB5e,EAAO0N,SAAS,GACzDpN,EAAuBue,WAAa,GACpC,IAAK,IAAI3e,EAAI,EAAGA,EAAII,EAAuBse,gBAAiB1e,IACxDI,EAAuBue,WAAW3tE,KAAKgoD,EAAqC8G,GAAA,CAIhFM,EAAuBuf,6BACvBvf,EAAuB6f,sBAAwBngB,EAAO0N,SAAS,KAGnEpN,EAAuB8f,uBAAyBpgB,EAAO0N,SAAS,GAChEpN,EAAuB+f,yBAA2BrgB,EAAO0N,SAAS,GAE9D,IAAM1V,EAAO,IAAIuU,WAAWjM,EAAuB+f,0BACnD,IAASngB,EAAI,EAAGA,EAAII,EAAuB+f,yBAA0BngB,IACjElI,EAAKkI,GAAKF,EAAO0N,SAAS,GAiBlC,OAfIpN,EAAuBggB,kBAAoBtoB,EAAKyV,OAEpDnN,EAAuBigB,qBAAuBvgB,EAAO0N,SAAS,GAC9DpN,EAAuBkgB,YAAcxgB,EAAO0N,SAAS,GACrDpN,EAAuBmgB,kBAAoBzgB,EAAO0N,SAAS,GAEP,KAAhDpN,EAAuBigB,sBACyB,KAAhDjgB,EAAuBigB,sBACyB,KAAhDjgB,EAAuBigB,sBACyB,KAAhDjgB,EAAuBigB,uBAEvBjgB,EAAuBogB,gBAAkB1gB,EAAO0N,SAAS,GACzDpN,EAAuBqgB,sBAAwB3gB,EAAO0N,SAAS,IAG5DpN,CAAA,EAOLyQ,EAAsB,SAACnyD,EAAwBmhD,EAA2BxzD,EAAoByzD,GAKhG,MAAO,CACHkf,eAActgE,EACdugE,kBAAiBpf,EACjBqf,WAAU7yE,EACVq0E,YARgB5gB,EAAO0N,SAAS,IAShCmT,OARW7gB,EAAO0N,SAAS,IAS3BoT,WARe9gB,EAAO0N,SAAS,MAkBjCsD,EAAgC,SAACpyD,GAOnC,MAAO,CACHw/D,cAPkBx/D,EAAO8uD,SAAS,GAQlCqT,SAPan3D,OAAOC,aAAajL,EAAO8uD,SAAS,GAAI9uD,EAAO8uD,SAAS,GAAI9uD,EAAO8uD,SAAS,IAQzFsT,gBAPoBpiE,EAAO8uD,SAAS,GAQpCuT,aAPiBriE,EAAO8uD,SAAS,GAQjCwT,gBAPoBtiE,EAAO+uD,WAAA,EAc7BsD,EAAuB,SAACryD,EAAwBmhD,EAA2BxzD,EAAoByzD,GAGjG,IAFA,IAAM5H,EAAc4H,EAAO0N,SAAS,GAC9BprD,EAAyC,GACtCg+C,EAAI,EAAGA,EAAIlI,EAAakI,IAC7Bh+C,EAAWpR,KAAK8/D,EAA8BhR,IAGlD,MAAO,CACHkf,eAActgE,EACdugE,kBAAiBpf,EACjBqf,WAAU7yE,EACV40E,YAAW/oB,EACXymB,WAAUv8D,EAAA,EAML4uD,EAAa,SAACtyD,GACvB,IAAMmhD,EAAS,IAAI9H,EAAUr5C,GAEvBrS,EAAWwzD,EAAO2N,SAAS,GAC3B1N,EAA2BD,EAAO4N,WAClCvV,EAAoB2H,EAAO4N,WACjC5N,EAAO2N,SAAS,GAChB,IAAMprD,EAAiBy9C,EAAO2N,SAAS,IACjCpN,EAAmBP,EAAO2N,SAAS,GACnCxN,EAAmBH,EAAO4N,WAC1B3V,EAAuB+H,EAAO2N,SAAS,GACvC1H,EAAuC,EAAtBjG,EAAO2N,SAAS,IAAU3N,EAAO2N,SAAS,GAC3DxH,EAAWnG,EAAO2N,SAAS,GAC3BtH,EAAOrG,EAAO2N,SAAS,IACvBzN,EAAwBF,EAAO2N,SAAS,IACxCt1B,EAAsB2nB,EAAO2N,SAAS,GAExCz2D,EAAuC,KACvCmhC,IAAwBq2B,EAAkBkP,YAC1C1mE,EA3SG,CAAC,EA4SGmhC,IAAwBq2B,EAAkBmP,gBACjD3mE,EA3SoB,SAAC2H,GAGzB,IAFA,IAAMmhD,EAAenhD,EAAO8uD,SAAS,GAC/BnhE,EAAgC,GAC7ByzD,EAAI,EAAGA,EAAID,EAAcC,IAC9BzzD,EAAO2E,KAAKy/D,EAAyB/xD,IAEzC,MAAO,CACHwiE,aAAYrhB,EACZl8B,OAAMt3B,EAAA,CARc,CA2SiBwzD,GAC9B3nB,IAAwBq2B,EAAkBoP,cACjD5mE,EAlSkB,SAAC2H,GACvB,IAAMmhD,EAAkBnhD,EAAO8uD,SAAS,IAClCnhE,EAAgCqS,EAAO+uD,WAC7C/uD,EAAO8uD,SAAS,GAEhB,IAAM1N,EAA6B,CAC/Bue,gBAAexe,EACfye,8BAA6BjyE,GAGjC,GAAIA,EACA,OAAOyzD,EAYX,GATAA,EAAaye,yBAA2B7/D,EAAO+uD,WAC/C3N,EAAa0e,oBAAsB9/D,EAAO+uD,WAC1C3N,EAAa2e,cAAgB//D,EAAO+uD,WACpC3N,EAAaqhB,sBAAwBziE,EAAO+uD,WAC5C/uD,EAAO8uD,SAAS,GAEZ1N,EAAa0e,sBAAwB1e,EAAaqhB,wBAClDrhB,EAAaqe,YAActP,EAAgBnwD,KAE1CohD,EAAa0e,oBAAqB,CACnC1e,EAAa4e,gBAAkBhgE,EAAO8uD,SAAS,GAC/C1N,EAAa6e,WAAa,GAC1B,IAAK,IAAIzmB,EAAI,EAAGA,EAAI4H,EAAa4e,gBAAiBxmB,IAC9C4H,EAAa6e,WAAW3tE,KAAK+9D,EAA2BjP,EAAaqhB,sBAAuBziE,GAAA,CAYpG,OARIohD,EAAa2e,gBACb3e,EAAa8e,eAAiB9P,EAAmBpwD,IAGrDohD,EAAa+e,kBAAoBngE,EAAO8uD,SAAS,IACjD1N,EAAagf,UAAYpgE,EAAO8uD,SAAS,GACzC1N,EAAaif,gBAAkBrgE,EAAO8uD,SAAS,GAExC1N,CAAA,CAvCe,CAkSiBD,GAC5B3nB,IAAwBq2B,EAAkBqP,YACjD7mE,EA3PgB,SAAC2H,GACrB,MAAO,CACHy/D,YAAatP,EAAgBnwD,GAAA,CAFb,CA2PiBmhD,GAC1B3nB,IAAwBq2B,EAAkBsP,sBACjD9mE,EAvPG,CAAC,EAwPGmhC,IAAwBq2B,EAAkBuP,gBACjD/mE,EAvPoB,SAAC2H,EAA+BmhD,GAGxD,IAFA,IAAMxzD,EAAaqd,OAAOC,aAAak2C,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,IAC7G1N,EAAO,IAAIuM,WAAW3tD,EAAwB,GAC3Cw5C,EAAI,EAAGA,EAAIx5C,EAAwB,EAAGw5C,IAC3C4H,EAAK5H,GAAK2H,EAAO2N,SAAS,GAG9B,MAAO,CACH0R,WAAU7yE,EACV+0E,aAActhB,EAAKyN,OAAA,CATC,CAuPiBxN,EAAuBF,GAE5DA,EAAO2N,SAAiC,EAAxBzN,GAMpB,IAHA,IAAMhH,EAAyC,GAEzCyM,EAAyB3F,EAAO2N,SAAS,IACtCxM,EAAS,EAAGA,EAASwE,GAAyB,CACnD,IAAM12C,EAAiB+wC,EAAO2N,SAAS,GACjCZ,EAAoB/M,EAAO2N,SAAS,GACpCpwC,EAAa1T,OAAOC,aAAak2C,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,GAAI3N,EAAO2N,SAAS,IAE5F,IAAnB1+C,EACAiqC,EAAmB/nD,KAAK0/D,EAAqB5hD,EAAgB89C,EAAmBxvC,EAAYyiC,IAClE,IAAnB/wC,EACPiqC,EAAmB/nD,KAAK2/D,EAAoB7hD,EAAgB89C,EAAmBxvC,EAAYyiC,IACjE,IAAnB/wC,EACPiqC,EAAmB/nD,KAAK4/D,EAA4B9hD,EAAgB89C,EAAmBxvC,EAAYyiC,IACzE,IAAnB/wC,EACPiqC,EAAmB/nD,KAAK6/D,EAAoB/hD,EAAgB89C,EAAmBxvC,EAAYyiC,IACjE,IAAnB/wC,EACPiqC,EAAmB/nD,KAAK+/D,EAAqBjiD,EAAgB89C,EAAmBxvC,EAAYyiC,IAE5FA,EAAO2N,SAAmC,GAAzBZ,EAAoB,IAGzC5L,GAAU,EAAI4L,CAAA,CAGlB,IAGMjqD,EAAS,CACX0+D,SAAQh1E,EACRi1E,yBAAwBxhB,EACxByhB,kBAAiBrpB,EACjBspB,eAAcp/D,EACdq/D,iBAAgBrhB,EAChBshB,iBAAgB1hB,EAChB2hB,qBAAoB7pB,EACpB8pB,eAAc9b,EACd+b,SAAQ7b,EACR8b,KAAI5b,EACJ6b,sBAAqBhiB,EACrBiiB,oBAAmB9pC,EACnB+pC,eAAclrE,EACdmrE,uBAAsB1c,EACtB2c,mBAAkBppB,EAClBqpB,QAnBYpiB,EAAmBH,EAAO2N,SAAS,SAAM,EAoBrD6U,MAnBUxiB,EAAO2N,SAAS,KAsB9B,GAAIt1B,IAAwBq2B,EAAkBoP,cAAe,CACzD,IAAMl0B,EAAe1yC,EAErB,GAAI0yC,EAAa60B,8BACb,MAAO,CACH0D,oBAAmB9pC,EACnBhyB,OAAMvD,EACNrS,KAAIoO,GAEL,GAAI+qC,EAAa+0B,sBAAwB/0B,EAAa03B,sBAAuB,CAChF,IAAMhT,EAAc1kB,EAAag1B,cAAgBh1B,EAAam1B,eAAeX,iBAAA,EACvE51C,EAAWohB,EAAag1B,cAAgBh1B,EAAam1B,eAAevX,SAAW,QAAK,EAE1F,OAAI5d,EAAa00B,YAAYJ,oBAClB,CACHiE,oBAAmB9pC,EACnBkvB,KAAMtB,EAAiBrc,EAAa00B,YAAYH,UAAa1pE,KAAAguE,IAAA,EAAK,IAClErE,YAAW9P,EACXoU,SAAQl6C,EACRniB,OAAMvD,EACNrS,KAAIoO,GAGD,CACHsjE,oBAAmB9pC,EACnB+lC,YAAW9P,EACXoU,SAAQl6C,EACRniB,OAAMvD,EACNrS,KAAIoO,EAAA,CAOZ,MAAO,CACHsjE,oBAAmB9pC,EACnB+lC,YALE9P,EAAc1kB,EAAag1B,cAAgBh1B,EAAam1B,eAAeX,iBAAA,EAMzEsE,SALEl6C,EAAWohB,EAAag1B,cAAgBh1B,EAAam1B,eAAevX,SAAW,QAAK,EAMtFnhD,OAAMvD,EACNrS,KAAIoO,EAAA,CAGT,GAAIw5B,IAAwBq2B,EAAkBqP,YAAa,CAC9D,IAAMrlB,EAAaxhD,EAEnB,OAAIwhD,EAAW4lB,YAAYJ,oBAChB,CACHiE,oBAAmB9pC,EACnBkvB,KAAMtB,EAAiBvN,EAAW4lB,YAAYH,UAAa1pE,KAAAguE,IAAA,EAAK,IAChEp8D,OAAMvD,EACNrS,KAAIoO,GAGD,CACHsjE,oBAAmB9pC,EACnBhyB,OAAMvD,EACNrS,KAAIoO,EAAA,CAIZ,MAAO,CACHsjE,oBAAmB9pC,EACnBhyB,OAAMvD,EACNrS,KAAIoO,EAAA,GG7sBhB,SAAYA,GACRA,EAAAA,EAAA8jE,iBAAA,uBACA9jE,EAAAA,EAAA+jE,eAAA,qBACA/jE,EAAAA,EAAAgkE,UAAA,gBACAhkE,EAAAA,EAAA67D,UAAA,gBACA77D,EAAAA,EAAA87D,UAAA,gBACA97D,EAAAA,EAAA+7D,UAAA,gBANJ,CAAY7L,IAAAA,EAAY,KASxB,OAAAuC,GAAA,aAKAC,GAII,SAAY1yD,GACR,IAAImhD,EAAYnhD,EAAKpO,KAAK28D,WAE1BtvD,KAAKxO,KAAOuP,EAAKvP,KACjBwO,KAAKrN,KAAO,IAAI+7D,WAAW,EAAIxM,GAEvB,IAAI8L,SAAShuD,KAAKrN,KAAKi9D,QAE7BwN,UAAU,EAAGlb,GAEfliD,KAAKrN,KAAKkL,IAAIkD,EAAKpO,KAAM,IAIjC+gE,GAAA,WAQI,SAAA3yD,EAAmBA,GANF,KAAAmuD,IAAc,mBAGvB,KAAAmO,0BAAoC,EACpC,KAAAC,WAAA,EAGJt9D,KAAKu9D,MAAQx8D,EACbf,KAAKq9D,0BAA4Br9D,KAAKw9D,wBAAwB,GAC1Dx9D,KAAKs9D,WACL74D,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,oDAuE5B,OAnEYnuD,EAAArM,UAAA8oE,wBAAR,SAAgCz8D,GAI5B,IAHA,IAAImhD,EAAInhD,EACJrS,EAAOsR,KAAKu9D,QAEH,CACT,GAAIrb,EAAI,GAAKxzD,EAAK4gE,WAEd,OADAtvD,KAAKs9D,WAAA,EACE5uE,EAAK4gE,WAIhB,IAAInN,EAAUzzD,EAAKwzD,EAAI,IAAM,GACdxzD,EAAKwzD,EAAI,IAAM,GACfxzD,EAAKwzD,EAAI,IAAM,EACfxzD,EAAKwzD,EAAI,GACpB3H,EAAU7rD,EAAKwzD,EAAI,IAAM,GACdxzD,EAAKwzD,EAAI,IAAM,EACfxzD,EAAKwzD,EAAI,GACxB,GAAe,IAAXC,GAAoC,IAAX5H,EACzB,OAAO2H,EAEPA,GAAA,GAKLnhD,EAAArM,UAAA+oE,oBAAP,WAII,IAHA,IAAI18D,EAAOf,KAAKu9D,MACZrb,EAAgC,KAEb,MAAhBA,IACCliD,KAAKs9D,WADgB,CAKzB,IAGI5uE,EAHmBsR,KAAKq9D,0BAWxBlb,EAA2BphD,EAL3BrS,GADQ,KADDqS,EAAKrS,IAAW,GAAOqS,EAAKrS,EAAS,IAAM,GAAOqS,EAAKrS,EAAS,IAAM,EAAMqS,EAAKrS,EAAS,IAEvF,EAEA,IAGiC,EAAK,GAChD6rD,GAAgC,IAAfx5C,EAAKrS,MAAoB,EAE1C+V,EAAwBzE,KAAKw9D,wBAAwB9uE,GAGzD,GAFAsR,KAAKq9D,0BAA4B54D,EAEX,IAAlB81C,EAAJ,CAKA,IAAIkI,EAAe1hD,EAAK4uD,SAASjhE,EAAQ+V,IAEzCy9C,EAAe,IAAIsR,IACNhiE,KAAO2wD,EACpBD,EAAavvD,KAAO8vD,CAAA,EAGxB,OAAOP,CAAA,EAGfnhD,CAAA,CAnFA,GAuHA4yD,GAAA,WAKI,SAAA5yD,EAAmBA,EAAiBmhD,EAAiBxzD,EAAiByzD,GAClE,IAAI5H,EAAS,IAAM,EAAQx5C,EAAIuuD,aAAe,EAAQpN,EAAIoN,aAAe,EAAQ5gE,EAAI4gE,YACjF7qD,EAAOzE,KAAKrN,KAAO,IAAI+7D,WAAWnU,GAEtC91C,EAAK,GAAK,EACVA,EAAK,IAAsC,EAA/B09C,EAAO0R,wBAAiC,GAAO1R,EAAO2R,kBAAoB,EAAI,IAAM,EAAoC,GAA7B3R,EAAO4R,oBAC9GtvD,EAAK,GAAK09C,EAAO6R,sCACjBvvD,EAAK,GAAK09C,EAAO8R,sCACjBxvD,EAAK,GAAK09C,EAAO+R,sCACjBzvD,EAAK,GAAK09C,EAAOgS,sCACjB1vD,EAAK,GAAK09C,EAAOiS,qCACjB3vD,EAAK,GAAK09C,EAAOkS,qCACjB5vD,EAAK,GAAK09C,EAAOmS,qCACjB7vD,EAAK,GAAK09C,EAAOoS,qCACjB9vD,EAAK,IAAM09C,EAAOqS,qCAClB/vD,EAAK,IAAM09C,EAAOsS,qCAClBhwD,EAAK,IAAM,GACXA,EAAK,IAAM,KAA+C,KAAtC09C,EAAOuS,+BAA0C,EACrEjwD,EAAK,IAA6C,IAAtC09C,EAAOuS,6BACnBjwD,EAAK,IAAM,IAAiC,EAAzB09C,EAAO4S,gBAC1BtwD,EAAK,IAAM,IAAmC,EAA3B09C,EAAOwP,kBAC1BltD,EAAK,IAAM,IAAuC,EAA/B09C,EAAOyS,sBAC1BnwD,EAAK,IAAM,IAAyC,EAAjC09C,EAAO0S,wBAC1BpwD,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,KAAqC,EAA7B09C,EAAOwS,sBAA+B,GAAoC,EAA7BxS,EAAOyQ,sBAA+B,GAAOzQ,EAAO0Q,mBAAqB,EAAI,IAAM,EAAK,EAClJpuD,EAAK,IAAM,EACXA,EAAK,IAAc,IAAOwsD,EAAa8T,UACvCtgE,EAAK,IAAc,EACnBA,EAAK,IAAc,EACnBA,EAAK,KAAgC,MAAjB1D,EAAIuuD,aAAwB,EAChD7qD,EAAK,IAAgC,IAAjB1D,EAAIuuD,WACxB7qD,EAAK5G,IAAIkD,EAAK,IACd0D,EAAK,IAAM,EAAI1D,EAAIuuD,YAAc,GAAK,IAAO2B,EAAa2L,UAC1Dn4D,EAAK,IAAM,EAAI1D,EAAIuuD,YAAc,GAAK,EACtC7qD,EAAK,IAAM,EAAI1D,EAAIuuD,YAAc,GAAK,EACtC7qD,EAAK,IAAM,EAAI1D,EAAIuuD,YAAc,IAAuB,MAAjBpN,EAAIoN,aAAwB,EACnE7qD,EAAK,IAAM,EAAI1D,EAAIuuD,YAAc,GAAuB,IAAjBpN,EAAIoN,WAC3C7qD,EAAK5G,IAAIqkD,EAAK,IAAM,EAAInhD,EAAIuuD,YAAc,GAC1C7qD,EAAK,IAAM,EAAI1D,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,GAAK,IAAO2B,EAAa4L,UAC/Ep4D,EAAK,IAAM,EAAI1D,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,GAAK,EAC3D7qD,EAAK,IAAM,EAAI1D,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,GAAK,EAC3D7qD,EAAK,IAAM,EAAI1D,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,IAAuB,MAAjB5gE,EAAI4gE,aAAwB,EACxF7qD,EAAK,IAAM,EAAI1D,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,GAAuB,IAAjB5gE,EAAI4gE,WAChE7qD,EAAK5G,IAAInP,EAAK,IAAM,EAAIqS,EAAIuuD,WAAa,EAAIpN,EAAIoN,YAAc,GAOvE,OAJWvuD,EAAArM,UAAAgR,QAAP,WACI,OAAO1F,KAAKrN,IAAA,EAGpBoO,CAAA,CAxDA,4gBCykCeikE,GAjsCf,SAAAjkE,GA4DI,SAAAmhD,EAAmBA,EAAiBxzD,GAApC,IAAAyzD,EACIphD,EAAA3E,KAAA,OAAO,YA3DM+lD,EAAA+M,IAAc,YAKvB/M,EAAA8iB,cAAA,EAEA9iB,EAAA+iB,YAAc,IAAI7iB,EAAA59C,EAElB09C,EAAAgjB,WAAa,GACbhjB,EAAAijB,UAAY,EAIZjjB,EAAAkjB,kBAA4B,EAE5BljB,EAAAmjB,iBAAoC,CAAC,EAErCnjB,EAAAojB,kBAAsC,CAAC,EACvCpjB,EAAAqjB,sBAA0C,CAAC,EAE3CrjB,EAAAsjB,gBAKJ,CACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,aAAA,GAGI1jB,EAAA2jB,gBAKJ,CACAzG,uBAAA,EACAC,yBAAA,EACAC,wBAAA,EACAC,oBAAA,GAGIrd,EAAA4jB,0BAAA,EACA5jB,EAAA6jB,0BAAwC,KAExC7jB,EAAA8jB,YAAA,EACA9jB,EAAA+jB,YAAA,EACA/jB,EAAAgkB,gCAAA,EACAhkB,EAAAikB,gCAAA,EACAjkB,EAAAkkB,yBAAA,EACAlkB,EAAAmkB,yBAAA,EAEAnkB,EAAAokB,aAAe,CAAC/0E,KAAM,QAASgpC,GAAI,EAAG68B,eAAgB,EAAGC,QAAS,GAAI9oE,OAAQ,GAC9E2zD,EAAAqkB,aAAe,CAACh1E,KAAM,QAASgpC,GAAI,EAAG68B,eAAgB,EAAGC,QAAS,GAAI9oE,OAAQ,GAKlF2zD,EAAKskB,gBAAkBvkB,EAAWwkB,eAClCvkB,EAAKwkB,aAAezkB,EAAW0kB,YAC/BzkB,EAAK0kB,QAAUn4E,EAAA,EA8nCvB,OA/rCwBo4E,GAAA5kB,EAAAnhD,GAoEbmhD,EAAAxtD,UAAA00B,QAAP,WACIppB,KAAKklE,YAAc,KACnBllE,KAAKulE,kBAAoB,KACzBvlE,KAAKwlE,sBAAwB,KAE7BxlE,KAAKylE,gBAAkB,KACvBzlE,KAAK8lE,gBAAkB,KACvB9lE,KAAKgmE,0BAA4B,KAEjChmE,KAAKumE,aAAe,KACpBvmE,KAAKwmE,aAAe,KAEpBzlE,EAAArM,UAAM00B,QAAOhtB,KAAC,KAAD,EAGH8lD,EAAAuV,MAAd,SAAoB12D,GAChB,IAAImhD,EAAO,IAAIwM,WAAW3tD,GACtBrS,GAAe,EACfyzD,EAAiB,IAErB,GAAID,EAAKoN,YAAc,EAAInN,EAEvB,OADA19C,EAAAA,EAAI1D,EAAE,YAAa,cAAcmhD,EAAKoN,WAAU,wDACzC,CAACvyD,OAAA,GAGZ,MAAwB,IAAjBrO,GAAoB,CAGvB,IAFA,IAAI6rD,EAAc5jD,KAAKm6C,IAAI,IAAMoR,EAAKoN,WAAa,EAAInN,GAE9CM,EAAI,EAAGA,EAAIlI,GAAe,CAE/B,GAAgB,KAAZ2H,EAAKO,IAC+B,KAA7BP,EAAKO,EAAIN,IACwB,KAAjCD,EAAKO,EAAI,EAAIN,GAA0B,CAC9CzzD,EAAc+zD,EACd,MAEAA,GAAA,CAKR,IAAqB,IAAjB/zD,EACA,GAAuB,MAAnByzD,EAEAA,EAAiB,QACd,IAAuB,MAAnBA,EAKP,MAHAA,EAAiB,KAQ7B,OAAqB,IAAjBzzD,EAEO,CAACqO,OAAA,IAGW,MAAnBolD,GAA0BzzD,GAAe,GACzC+V,EAAAA,EAAI4+C,EAAE,YAAa,mCACnB30D,GAAe,GACW,MAAnByzD,GACP19C,EAAAA,EAAI4+C,EAAE,YAAa,oDAGhB,CACHtmD,OAAA,EACA26D,SAAU,EACVgP,eAAcvkB,EACdykB,YAAWl4E,GAAA,EAIZwzD,EAAAxtD,UAAAijE,eAAP,SAAsB52D,GAElB,OADAA,EAAO62D,cAAgB53D,KAAK63D,YAAY3uC,KAAKlpB,MACtCA,IAAA,EAGJkiD,EAAAxtD,UAAAojE,eAAP,WACI93D,KAAKklE,YAAc,IAAI7iB,EAAA59C,CAAA,EAGpBy9C,EAAAxtD,UAAAmjE,YAAP,SAAmB92D,EAAoBmhD,GACnC,KAAKliD,KAAKwY,SACExY,KAAKw6D,aACLx6D,KAAK06D,iBACL16D,KAAK26D,iBACb,MAAM,IAAIpS,EAAA9jD,EAAsB,wFAGpC,IAAI/V,EAAS,EAOb,IALIsR,KAAKilE,eACLjlE,KAAKilE,cAAA,EACLv2E,EAASsR,KAAK2mE,cAGXj4E,EAASsR,KAAKymE,iBAAmB1lE,EAAMuuD,YAAY,CACtD,IAAInN,EAAgBD,EAAaxzD,EAEJ,MAAzBsR,KAAKymE,kBAEL/3E,GAAU,GAGd,IAAI6rD,EAAO,IAAImU,WAAW3tD,EAAOrS,EAAQ,KAErC+zD,EAAYlI,EAAK,GACrB,GAAkB,KAAdkI,EAAoB,CACpBh+C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,eAAezM,EAAS,cACxC,MAGJ,IAAIJ,GAA0C,GAAV9H,EAAK,MAAe,EAEpDJ,GADsBI,EAAK,IACT,GAAVA,EAAK,KAAc,EAAKA,EAAK,IACrC4N,GAAsC,GAAV5N,EAAK,MAAe,EAChD8N,EAAiC,GAAV9N,EAAK,GAE5B6H,EAIA,CAAC,EACD7nB,EAAyB,EAE7B,GAAgC,GAA5B4tB,GAAgE,GAA5BA,EAAkC,CACtE,IAAI/N,EAA0BG,EAAK,GACnC,GAAI,EAAIH,IAA4B,IAAK,CAErC1rD,GAAU,IACmB,MAAzBsR,KAAKymE,kBAEL/3E,GAAU,IAEd,SAGI0rD,EAA0B,IAC1BgI,EAAwBpiD,KAAK+mE,qBAAqBhmE,EACArS,EAAS,EACT,EAAI0rD,IAE1D7f,EAAyB,EAAQ6f,CAAA,CAIzC,GAAgC,GAA5B+N,GAAgE,GAA5BA,EACpC,GAAY,IAARhO,GAAaA,IAAQn6C,KAAKqlE,kBAAkC,MAAbrlE,KAAKgnE,MAAqBhnE,KAAKgnE,KAAKvL,gBAAgBthB,KAASkJ,EAAWiY,QAAU,CACjI,IAAIliE,EAAoB,IAAMmhC,EAE9Bv6B,KAAKinE,mBAAmBlmE,EACArS,EAAS6rC,EACTnhC,EACA,CACI8tE,IAAG/sB,EACHiiB,cAAaja,EACbglB,6BAA4B9kB,EAC5B+kB,oBAAmB/e,EACnBgf,wBAAyBjlB,EAAsBilB,yBAAA,MAExE,GAAiB,MAAbrnE,KAAKgnE,MAAuD,MAAlChnE,KAAKgnE,KAAKvL,gBAAgBthB,GAAmB,CAE1E/gD,EAAoB,IAAMmhC,EAA9B,IACI6gB,EAAcp7C,KAAKgnE,KAAKvL,gBAAgBthB,GAGxCA,IAAQn6C,KAAKgnE,KAAKtL,YAAYC,MACvBxhB,IAAQn6C,KAAKgnE,KAAKtL,YAAYE,MAC9BzhB,IAAQn6C,KAAKgnE,KAAKtL,YAAYG,WAAA,IAC9B77D,KAAKgnE,KAAKlL,sBAAsB3hB,KAAA,IAChCn6C,KAAKgnE,KAAKjL,eAAe5hB,IAChCn6C,KAAKsnE,eAAevmE,EACArS,EAAS6rC,EACTnhC,EACA,CACI8tE,IAAG/sB,EACHotB,YAAWnsB,EACXghB,cAAaja,EACbglB,6BAA4B9kB,EAC5B+kB,oBAAmB/e,EACnBgf,wBAAyBjlB,EAAsBilB,yBAAA,CAMnF34E,GAAU,IAEmB,MAAzBsR,KAAKymE,kBAEL/3E,GAAU,IAOlB,OAFAsR,KAAKwnE,iCAEE94E,CAAA,EAGHwzD,EAAAxtD,UAAAqyE,qBAAR,SAA6BhmE,EAAqBmhD,EAAgBxzD,GAK9D,IAAIyzD,EAAO,IAAIuM,WAAW3tD,EAAQmhD,EAAQxzD,GAEtC6rD,EAA0B4H,EAAK,GACnC,OAAI5H,EAA0B,EACtBA,EAA0B,KAC1B91C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,oCAAoC3U,GAC7C,CAAC,GAOL,CACHktB,yBAL6C,IAAVtlB,EAAK,MAAe,EAMvDklB,yBAL6C,GAAVllB,EAAK,MAAe,EAMvDulB,sCAL0D,GAAVvlB,EAAK,MAAe,GASrE,CAAC,CAAD,EAGHD,EAAAxtD,UAAAuyE,mBAAR,SAA2BlmE,EAAqBmhD,EAAgBxzD,EAAgByzD,GAC5E,IAAI5H,EAAO,IAAImU,WAAW3tD,EAAQmhD,EAAQxzD,GACtC+V,EAAczE,KAAKwlE,sBAAsBrjB,EAAK+kB,KAElD,GAAI/kB,EAAKglB,6BAA8B,CACnC,IAAI1kB,EAAgBlI,EAAK,GAEzB,GAAmB,MAAf91C,GAAyD,IAA7BA,EAAYy3D,aAAoB,CAC5D,IAAI7Z,EAAiB,IAAIqM,WAAW3tD,EAAQmhD,EAAS,EAAGvrD,KAAKm6C,IAAIpiD,EAAQ+zD,IACzEh+C,EAAYw3D,OAAO5oE,KAAKgvD,GACxB59C,EAAYy3D,cAAgB7Z,EAAeiN,WAEvC7qD,EAAYy3D,eAAiBz3D,EAAY03D,gBACzCn8D,KAAK2nE,kBAAkBljE,EAAa09C,GAEpCniD,KAAK4nE,YAAYnjE,EAAa09C,EAAA,CAItC,IAAK,IAAIhI,EAAI,EAAIsI,EAAetI,EAAII,EAAK+U,YAEpB,MADF/U,EAAKJ,EAAI,IAD0B,CAIlD,IAAIgO,GAAiC,GAAd5N,EAAKJ,EAAI,KAAc,EAAKI,EAAKJ,EAAI,GAE5Dn6C,KAAKwlE,sBAAsBrjB,EAAK+kB,KAAO,IAAItsB,GAC3Cn2C,EAAczE,KAAKwlE,sBAAsBrjB,EAAK+kB,MAElC/K,gBAAkBhU,EAAiB,EAC/C1jD,EAAY23D,cAAgBja,EAAKia,cACjC33D,EAAY4iE,wBAA0BllB,EAAKklB,wBAEvChlB,EAAiB,IAAIqM,WAAW3tD,EAAQmhD,EAAS/H,EAAGxjD,KAAKm6C,IAAIpiD,EAASyrD,EAAG11C,EAAY03D,gBAAkB13D,EAAYy3D,eACvHz3D,EAAYw3D,OAAO5oE,KAAKgvD,GACxB59C,EAAYy3D,cAAgB7Z,EAAeiN,WAEvC7qD,EAAYy3D,eAAiBz3D,EAAY03D,gBACzCn8D,KAAK2nE,kBAAkBljE,EAAa09C,GAC7B19C,EAAYy3D,cAAgBz3D,EAAY03D,iBAC/Cn8D,KAAK4nE,YAAYnjE,EAAa09C,GAGlChI,GAAKkI,EAAeiN,UAAA,OAEF,MAAf7qD,GAAyD,IAA7BA,EAAYy3D,eAC3C7Z,EAAiB,IAAIqM,WAAW3tD,EAAQmhD,EAAQvrD,KAAKm6C,IAAIpiD,EAAQ+V,EAAY03D,gBAAkB13D,EAAYy3D,eAC/Gz3D,EAAYw3D,OAAO5oE,KAAKgvD,GACxB59C,EAAYy3D,cAAgB7Z,EAAeiN,WAEvC7qD,EAAYy3D,eAAiBz3D,EAAY03D,gBACzCn8D,KAAK2nE,kBAAkBljE,EAAa09C,GAC7B19C,EAAYy3D,cAAgBz3D,EAAY03D,iBAC/Cn8D,KAAK4nE,YAAYnjE,EAAa09C,GAAA,EAKlCD,EAAAxtD,UAAA4yE,eAAR,SAAuBvmE,EAAqBmhD,EAAgBxzD,EAAgByzD,GACxE,IAAI5H,EAAO,IAAImU,WAAW3tD,EAAQmhD,EAAQxzD,GAEtC+zD,EAA4BlI,EAAK,IAAM,GAAOA,EAAK,IAAM,EAAMA,EAAK,GAEpE8H,GADY9H,EAAK,GACIA,EAAK,IAAM,EAAKA,EAAK,IAE9C,GAAI4H,EAAKglB,6BAA8B,CACnC,GAAiC,IAA7B1kB,EAEA,YADAh+C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,uEAAuEzM,GAM3F,IAAItI,EAAcn6C,KAAKulE,kBAAkBpjB,EAAK+kB,KAC1C/sB,IACoC,IAAhCA,EAAYgiB,iBAAyBhiB,EAAYgiB,kBAAoBhiB,EAAY+hB,aACjFl8D,KAAK6nE,cAAc1tB,EAAagI,GAEhCniD,KAAK4nE,YAAYztB,EAAagI,IAKtCniD,KAAKulE,kBAAkBpjB,EAAK+kB,KAAO,IAAItsB,EACvC56C,KAAKulE,kBAAkBpjB,EAAK+kB,KAAK9K,cAAgBja,EAAKia,cACtDp8D,KAAKulE,kBAAkBpjB,EAAK+kB,KAAKG,wBAA0BllB,EAAKklB,uBAAA,CAGpE,GAAwC,MAApCrnE,KAAKulE,kBAAkBpjB,EAAK+kB,KAAhC,CAMA,IAAI/e,EAAcnoD,KAAKulE,kBAAkBpjB,EAAK+kB,KAC9C/e,EAAY8T,OAAO5oE,KAAKknD,GACpB4H,EAAKglB,+BACLhf,EAAYgU,gBAAwC,IAAtB9Z,EAA0B,EAAIA,EAAoB,GAEpF8F,EAAY+T,cAAgB3hB,EAAK+U,WAE7BnH,EAAYgU,gBAAkB,GAAKhU,EAAYgU,kBAAoBhU,EAAY+T,aAC/El8D,KAAK6nE,cAAc1f,EAAahG,GACzBgG,EAAYgU,gBAAkB,GAAKhU,EAAYgU,gBAAkBhU,EAAY+T,cACpFl8D,KAAK4nE,YAAYzf,EAAahG,EAAA,GAI9BD,EAAAxtD,UAAAizE,kBAAR,SAA0B5mE,EAAyBmhD,GAE/C,IADA,IAAIxzD,EAAO,IAAIggE,WAAW3tD,EAAYm7D,cAC7B/Z,EAAI,EAAG5H,EAAS,EAAG4H,EAAIphD,EAAYk7D,OAAOztE,OAAQ2zD,IAAK,CAC5D,IAAI19C,EAAQ1D,EAAYk7D,OAAO9Z,GAC/BzzD,EAAKmP,IAAI4G,EAAO81C,GAChBA,GAAU91C,EAAM6qD,UAAA,CAEpBvuD,EAAYk7D,OAAS,GACrBl7D,EAAYo7D,iBAAmB,EAC/Bp7D,EAAYm7D,aAAe,EAE3B,IAAIzZ,EAAe,IAAI/3B,EACvB+3B,EAAaykB,IAAMhlB,EAAKglB,IACxBzkB,EAAa9vD,KAAOjE,EACpB+zD,EAAa2Z,cAAgBr7D,EAAYq7D,cACzC3Z,EAAa4kB,wBAA0BtmE,EAAYsmE,wBACnDrnE,KAAK8nE,aAAarlB,EAAA,EAGdP,EAAAxtD,UAAAmzE,cAAR,SAAsB9mE,EAAyBmhD,GAE3C,IADA,IAAIxzD,EAAO,IAAIggE,WAAW3tD,EAAYm7D,cAC7B/Z,EAAI,EAAG5H,EAAS,EAAG4H,EAAIphD,EAAYk7D,OAAOztE,OAAQ2zD,IAAK,CAC5D,IAAI19C,EAAQ1D,EAAYk7D,OAAO9Z,GAC/BzzD,EAAKmP,IAAI4G,EAAO81C,GAChBA,GAAU91C,EAAM6qD,UAAA,CAEpBvuD,EAAYk7D,OAAS,GACrBl7D,EAAYo7D,iBAAmB,EAC/Bp7D,EAAYm7D,aAAe,EAE3B,IAAIzZ,EAAW,IAAI+N,EACnB/N,EAASykB,IAAMhlB,EAAKglB,IACpBzkB,EAAS9vD,KAAOjE,EAChB+zD,EAAS8kB,YAAcrlB,EAAKqlB,YAC5B9kB,EAAS2Z,cAAgBr7D,EAAYq7D,cACrC3Z,EAAS4kB,wBAA0BtmE,EAAYsmE,wBAC/CrnE,KAAK+nE,SAAStlB,EAAA,EAGVP,EAAAxtD,UAAAkzE,YAAR,SAAoB7mE,EAAyBmhD,GACzCnhD,EAAYk7D,OAAS,GACrBl7D,EAAYo7D,iBAAmB,EAC/Bp7D,EAAYm7D,aAAe,GAGvBha,EAAAxtD,UAAAozE,aAAR,SAAqB/mE,GACjB,IAAImhD,EAAOnhD,EAAapO,KACpBjE,EAAMqS,EAAammE,IAEX,IAARx4E,EACAsR,KAAKgoE,SAAS9lB,GACPxzD,IAAQsR,KAAKqlE,iBACpBrlE,KAAKioE,SAAS/lB,GACM,MAAbliD,KAAKgnE,MAAqBhnE,KAAKgnE,KAAKhL,aAAattE,IACxDsR,KAAKkoE,YAAYhmB,EAAA,EAIjBA,EAAAxtD,UAAAqzE,SAAR,SAAiBhnE,GACb,IAAImhD,EAAOnhD,EAASpO,KAChBjE,EAA4BwzD,EAAK,IAAM,GAAOA,EAAK,IAAM,EAAMA,EAAK,GACpEC,EAAYD,EAAK,GACjB3H,EAAqB2H,EAAK,IAAM,EAAKA,EAAK,GAE9C,GAAiC,IAA7BxzD,EAKJ,GAAkB,MAAdyzD,GACqB,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,EAAoB,CACGD,EAAK,GAAnC,IACIO,GAA2B,IAAVP,EAAK,MAAe,EACrCG,EAAyBH,EAAK,GAE9B/H,OAAA,EACAgO,OAAA,EAEkB,IAAlB1F,GAA4C,IAAlBA,IAC1BtI,EAAyB,WAAR,GAAV+H,EAAK,IACc,SAAR,IAAXA,EAAK,KACc,OAAR,IAAXA,EAAK,KACc,KAAR,IAAXA,EAAK,MACM,IAAXA,EAAK,KAAc,EAGtBiG,EADkB,IAAlB1F,EAC0B,WAAR,GAAXP,EAAK,KACc,SAAR,IAAXA,EAAK,KACc,OAAR,IAAXA,EAAK,KACc,KAAR,IAAXA,EAAK,MACM,IAAXA,EAAK,KAAc,EAEpB/H,GAId,IAAIkO,EAAsB,EAAQhG,EAC9BkG,OAAA,EAEJ,GAA0B,IAAtBhO,EAAyB,CACzB,GAAIA,EAAoB,EAAI8H,EAExB,YADA59C,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,iEAGpB3G,EAAiBhO,EAAoB,EAAI8H,CAAA,MAEzCkG,EAAiBrG,EAAKoN,WAAajH,EAGvC,IAAIjG,EAAUF,EAAKyN,SAAStH,EAAqBA,EAAsBE,GAEvE,OAAQxnD,EAASwmE,aACb,KAAKlkB,EAAW4X,YAChB,KAAK5X,EAAW6X,YACZ,MACJ,KAAK7X,EAAW8X,gBACZn7D,KAAKmoE,2BAA2B/lB,EAASjI,EAAKgO,EAAKpnD,EAASmmE,IAAK/kB,GACjE,MACJ,KAAKkB,EAAW+X,SACZp7D,KAAKooE,gBAAgBhmB,EAASjI,GAC9B,MACJ,KAAKkJ,EAAWgY,KACZr7D,KAAKqoE,6BAA6BjmB,EAASjI,EAAKgO,EAAKpnD,EAASmmE,IAAK/kB,GACnE,MACJ,KAAKkB,EAAWkY,MACZv7D,KAAKsoE,iBAAiBlmB,EAASjI,EAAKgO,EAAKpnD,EAASq7D,cAAer7D,EAASsmE,yBAC1E,MACJ,KAAKhkB,EAAWmY,MACZx7D,KAAKuoE,iBAAiBnmB,EAASjI,EAAKgO,EAAKpnD,EAASq7D,cAAer7D,EAASsmE,yBAAA,MAK7D,MAAdllB,GACqB,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACVphD,EAASwmE,cAAgBlkB,EAAW8X,kBAChC9S,EAAsB,EACtBE,OAAA,EAGAA,EADsB,IAAtBhO,EACiBA,EAEA2H,EAAKoN,WAAajH,EAGnCjG,EAAUF,EAAKyN,SAAStH,EAAqBA,EAAsBE,GACvEvoD,KAAKmoE,2BAA2B/lB,OAAA,OAAS,EAAsBrhD,EAASmmE,IAAK/kB,SA5FjF19C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,iEAAiExgE,EAAA,EAiGjFwzD,EAAAxtD,UAAAszE,SAAR,SAAiBjnE,GACb,IAAImhD,EAAWnhD,EAAK,GACpB,GAAiB,IAAbmhD,EAAJ,CAKA,IAAIxzD,GAA6B,GAAVqS,EAAK,KAAc,EAAKA,EAAK,GAGhDohD,GADuBphD,EAAK,GAAWA,EAAK,IAChB,GAAVA,EAAK,MAAe,GACtCw5C,EAAmC,EAAVx5C,EAAK,GAC9B0hD,EAAiB1hD,EAAK,GAGtBshD,GAFsBthD,EAAK,GAEhB,MAEf,GAA+B,IAA3Bw5C,GAAmD,IAAnBkI,GAChCJ,EAAM,IAAI5iC,GACN+oD,eAAiBrmB,OAGrB,GAAW,OADXE,EAAMriD,KAAKyoE,MAEP,OASR,IALA,IACItuB,EAAgBzrD,EAAiB,EAAI,EACrCy5D,GAAwB,EACxBE,GAAiB,EAEZE,EALiB,EAKQA,EALR,EAKkCpO,EAAeoO,GAAK,EAAG,CAC/E,IAAInG,EAAkBrhD,EAAKwnD,IAAM,EAAKxnD,EAAKwnD,EAAI,GAC3ChuB,GAAsB,GAAdx5B,EAAKwnD,EAAI,KAAc,EAAKxnD,EAAKwnD,EAAI,GAE1B,IAAnBnG,EAEAC,EAAIqmB,YAAcnuC,GAGlB8nB,EAAI2Y,gBAAgB5Y,GAAkB7nB,GAER,IAA1B4tB,IACAA,EAAuB/F,IAGJ,IAAnBiG,IACAA,EAAgB9tB,GAAA,CAMG,IAA3BggB,GAAmD,IAAnBkI,IACf,MAAbziD,KAAKyoE,MACLhkE,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qBAAqByZ,KAAKC,UAAUvmB,IAExDriD,KAAKyoE,KAAOpmB,EACZriD,KAAK6oE,iBAAmB1gB,EACxBnoD,KAAKqlE,iBAAmBhd,EAAA,MAzDxB5jD,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,sBAAsBhN,EAAQ,iCA6D9CA,EAAAxtD,UAAAuzE,SAAR,SAAiBlnE,GACb,IAAImhD,EAAWnhD,EAAK,GACpB,GAAiB,IAAbmhD,EAAJ,CAKA,IAAIxzD,GAA6B,GAAVqS,EAAK,KAAc,EAAKA,EAAK,GAEhDohD,EAAkBphD,EAAK,IAAM,EAAKA,EAAK,GACvCw5C,GAA4B,GAAVx5C,EAAK,MAAe,EACtC0hD,EAAmC,EAAV1hD,EAAK,GAC9BshD,EAAiBthD,EAAK,GAGtBo5C,GAFsBp5C,EAAK,GAEhB,MAEf,GAA+B,IAA3B0hD,GAAmD,IAAnBJ,GAChClI,EAAM,IAAIrO,GACNg9B,eAAiB3mB,EACrBhI,EAAIquB,eAAiBjuB,EACrBv6C,KAAKslE,iBAAiBnjB,GAAkBhI,OAGxC,GAAW,OADXA,EAAMn6C,KAAKslE,iBAAiBnjB,IAExB,OAIQphD,EAAK,GAAmBA,EAAK,GAM7C,IANA,IACIonD,GAAmC,GAAXpnD,EAAK,MAAe,EAAKA,EAAK,IAEtDsnD,EAAmB,GAAKF,EACxBI,EAAa75D,EAAiB,EAAIy5D,EAAsB,EAEnD/F,EAAIiG,EAAkBjG,EAAIiG,EAAmBE,GAAc,CAChE,IAAIhuB,EAAcx5B,EAAKqhD,GACnBhI,GAAiC,GAAdr5C,EAAKqhD,EAAI,KAAc,EAAKrhD,EAAKqhD,EAAI,GACxDhpD,GAAiC,GAAd2H,EAAKqhD,EAAI,KAAc,EAAKrhD,EAAKqhD,EAAI,GAI5D,GAFAjI,EAAIshB,gBAAgBrhB,GAAkB7f,EAElCA,IAAgB8oB,EAAWkY,OAAUphB,EAAIuhB,YAAYC,MAASxhB,EAAIuhB,YAAYE,KAE3E,GAAIrhC,IAAgB8oB,EAAWmY,OAAUrhB,EAAIuhB,YAAYC,MAASxhB,EAAIuhB,YAAYE,KAElF,GAAIrhC,IAAgB8oB,EAAW+X,UAAajhB,EAAIuhB,YAAYG,SAE5D,GAAIthC,IAAgB8oB,EAAW8X,iBAElC,GADAhhB,EAAI2hB,sBAAsB1hB,IAAA,EACtBhhD,EAAiB,EAAG,CAEpB,IAAIgiD,EAAar6C,EAAK4uD,SAASvN,EAAI,EAAGA,EAAI,EAAIhpD,GAC9C4G,KAAK+oE,iCAAiC3uB,EAAgB7f,EAAa6gB,EAAA,OAEhE7gB,IAAgB8oB,EAAWgY,KAClClhB,EAAI4hB,eAAe3hB,IAAA,EACZ7f,IAAgB8oB,EAAWiY,UAClCnhB,EAAI6hB,aAAa5hB,IAAA,QAXjBD,EAAIuhB,YAAYG,SAAWzhB,OAF3BD,EAAIuhB,YAAYE,KAAOxhB,OAFvBD,EAAIuhB,YAAYC,KAAOvhB,EAkB3BgI,GAAK,EAAIhpD,CAAA,CAGT+oD,IAAmBniD,KAAK6oE,mBACP,MAAb7oE,KAAKgnE,MACLviE,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qBAAqByZ,KAAKC,UAAUzuB,IAExDn6C,KAAKgnE,KAAO7sB,GACRA,EAAIuhB,YAAYC,MAAQxhB,EAAIuhB,YAAYE,QACxC57D,KAAKimE,YAAA,GAEL9rB,EAAIuhB,YAAYG,WAChB77D,KAAKkmE,YAAA,GAAa,MAtEtBzhE,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,sBAAsBhN,EAAQ,iCA2E9CA,EAAAxtD,UAAAwzE,YAAR,SAAoBnnE,GAChB,IAAMmhD,EAASmR,EAAWtyD,GAE1B,GAAkB,MAAdmhD,EAAOuH,IAAkB,CACzB,IAAI/6D,EAASiI,KAAKi0D,MAAM1I,EAAOuH,IAAMzpD,KAAKmlE,YAC1CjjB,EAAOuH,IAAM/6D,CAAA,MAEbwzD,EAAO8mB,YAAchpE,KAAK+lE,qBAG1B/lE,KAAK66D,kBACL76D,KAAK66D,iBAAiB3Y,EAAA,EAItBA,EAAAxtD,UAAA4zE,iBAAR,SAAyBvnE,EAAkBmhD,EAAaxzD,EAAayzD,EAAuB5H,GAOxF,IANA,IAAIkI,EAAgB,IAAIiO,EAAiB3vD,GACrCshD,EAAgC,KAChClI,EAAkD,GAClDgO,EAAS,EACTE,GAAA,EAE2D,OAAvDhG,EAAeI,EAAcgb,wBAAgC,CACjE,IAAIlV,EAAY,IAAI5N,EAAa0H,GAEjC,GAAIkG,EAAU/2D,OAASwT,EAAa43D,UAAW,CAE3C,IAAIxa,EAAUhpD,EAAUg3D,SAAS/N,EAAa1vD,MACzCqN,KAAKmmE,gCAAA,IAGCnmE,KAAKipE,0BAA0B1gB,EAAWnG,KACjD39C,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qFAChBlvD,KAAKqmE,yBAAA,EACLrmE,KAAKylE,gBAAkB,CAACC,SAAA,EAAgBC,IAAKpd,EAAWqd,SAAA,EAAgBC,QAASzjB,KALjFpiD,KAAKylE,gBAAgBE,IAAMpd,EAC3BvoD,KAAKylE,gBAAgBI,QAAUzjB,EAAA,MAM5BmG,EAAU/2D,OAASwT,EAAa63D,UAClC78D,KAAKmmE,iCAAkCnmE,KAAKqmE,0BAC7CrmE,KAAKylE,gBAAgBG,IAAMrd,EACvBvoD,KAAKylE,gBAAgBE,KAAO3lE,KAAKylE,gBAAgBG,MAC7C5lE,KAAKqmE,yBAELrmE,KAAKkpE,4BAGTlpE,KAAKmpE,8BAGN5gB,EAAU/2D,OAASwT,EAAa03D,WAEhCnU,EAAU/2D,OAASwT,EAAas3D,cAA4C,IAA5B/hB,KADvD8N,GAAA,GAOAroD,KAAKmmE,iCACLhsB,EAAM9mD,KAAKk1D,GACXJ,GAAUI,EAAU51D,KAAK28D,WAAA,CAIjC,IAAI/0B,EAAS5jC,KAAKi0D,MAAM1I,EAAMliD,KAAKmlE,YAC/B/qB,EAASzjD,KAAKi0D,MAAMl8D,EAAMsR,KAAKmlE,YAEnC,GAAIhrB,EAAM3rD,OAAQ,CACd,IAAI4sD,EAAQp7C,KAAKumE,aACb1e,EAAa,CACbwS,MAAKlgB,EACL3rD,OAAM25D,EACNmS,WAAYjS,EACZmB,IAAKpP,EACLqP,IAAKlvB,EACLggC,IAAKhgC,EAAS6f,EACdgiB,cAAaja,GAEjB/G,EAAMkc,QAAQjkE,KAAKw0D,GACnBzM,EAAM5sD,QAAU25D,CAAA,GAIhBjG,EAAAxtD,UAAA6zE,iBAAR,SAAyBxnE,EAAkBmhD,EAAaxzD,EAAayzD,EAAuB5H,GAOxF,IANA,IAAIkI,EAAgB,IAAIiR,GAAiB3yD,GACrCshD,EAAgC,KAChClI,EAAkD,GAClDgO,EAAS,EACTE,GAAA,EAE2D,OAAvDhG,EAAeI,EAAcgb,wBAAgC,CACjE,IAAIlV,EAAY,IAAIkL,GAAapR,GAEjC,GAAIkG,EAAU/2D,OAASy/D,EAAa8T,WAChC,IAAK/kE,KAAKmmE,+BAAgC,CACtC,IAAI/jB,EAAUyF,EAAW8K,SAAStQ,EAAa1vD,MAC/CqN,KAAKylE,gBAAgBC,IAAMnd,EAC3BvoD,KAAKylE,gBAAgBI,QAAUuD,GAAHA,GAAA,GACpBppE,KAAKylE,gBAAgBI,SACrBzjB,EAAA,OAGLmG,EAAU/2D,OAASy/D,EAAa2L,WACnCxa,EAAUyF,EAAWuI,SAAS/N,EAAa1vD,MAC1CqN,KAAKmmE,gCAAA,IAMCnmE,KAAKipE,0BAA0B1gB,EAAWnG,KACjD39C,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qFAChBlvD,KAAKqmE,yBAAA,EACLrmE,KAAKylE,gBAAkB,CAAEC,SAAA,EAAgBC,IAAKpd,EAAWqd,SAAA,EAAgBC,QAASzjB,KARlFpiD,KAAKylE,gBAAgBE,IAAMpd,EAC3BvoD,KAAKylE,gBAAgBI,QAAUuD,GAAHA,GAAA,GACpBppE,KAAKylE,gBAAgBI,SACrBzjB,KAOLmG,EAAU/2D,OAASy/D,EAAa4L,UAClC78D,KAAKmmE,iCAAkCnmE,KAAKqmE,0BACzCjkB,EAAUyF,EAAWiN,SAASzS,EAAa1vD,MAC/CqN,KAAKylE,gBAAgBG,IAAMrd,EAC3BvoD,KAAKylE,gBAAgBI,QAAUuD,GAAHA,GAAA,GACpBppE,KAAKylE,gBAAgBI,SACrBzjB,GAGJpiD,KAAKylE,gBAAgBC,KAAO1lE,KAAKylE,gBAAgBE,KAAO3lE,KAAKylE,gBAAgBG,MACzE5lE,KAAKqmE,yBAELrmE,KAAKkpE,4BAGTlpE,KAAKmpE,6BAGN5gB,EAAU/2D,OAASy/D,EAAa4T,kBAAoBtc,EAAU/2D,OAASy/D,EAAa6T,iBAC3Fzc,GAAA,GAIAroD,KAAKmmE,iCACLhsB,EAAM9mD,KAAKk1D,GACXJ,GAAUI,EAAU51D,KAAK28D,WAAA,CAIjC,IAAI/0B,EAAS5jC,KAAKi0D,MAAM1I,EAAMliD,KAAKmlE,YAC/B/qB,EAASzjD,KAAKi0D,MAAMl8D,EAAMsR,KAAKmlE,YAEnC,GAAIhrB,EAAM3rD,OAAQ,CACd,IAAI4K,EAAQ4G,KAAKumE,aACbnrB,EAAa,CACbif,MAAKlgB,EACL3rD,OAAM25D,EACNmS,WAAYjS,EACZmB,IAAKpP,EACLqP,IAAKlvB,EACLggC,IAAKhgC,EAAS6f,EACdgiB,cAAaja,GAEjB/oD,EAAMk+D,QAAQjkE,KAAK+nD,GACnBhiD,EAAM5K,QAAU25D,CAAA,GAIhBjG,EAAAxtD,UAAAu0E,0BAAR,SAAkCloE,EAAsCmhD,GACpE,GAAIA,EAAYoP,iBAAmBtxD,KAAKylE,gBAAgBI,QAAQvU,eAG5D,OAFA7sD,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,sCACGlvD,KAAKylE,gBAAgBI,QAAQvU,eAAc,OAAOpP,EAAYoP,iBAAA,EAIrF,GAAIpP,EAAYsQ,WAAWjmD,QAAUvM,KAAKylE,gBAAgBI,QAAQrT,WAAWjmD,OACtE21C,EAAYsQ,WAAWhmD,SAAWxM,KAAKylE,gBAAgBI,QAAQrT,WAAWhmD,OAAQ,CACrF,IAAI9d,EAAWsR,KAAKylE,gBAAgBI,QAAQrT,WACxCrQ,EAAWD,EAAYsQ,WAG3B,OAFA/tD,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,wCACGxgE,EAAS6d,MAAK,IAAI7d,EAAS8d,OAAM,OAAO21C,EAAS51C,MAAK,IAAI41C,EAAS31C,SAAA,CAC/E,CAGX,OAAI01C,EAAYuQ,aAAalmD,QAAUvM,KAAKylE,gBAAgBI,QAAQpT,aAAalmD,QAC7E9H,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,gDACGlvD,KAAKylE,gBAAgBI,QAAQpT,aAAalmD,MAAK,OAAO21C,EAAYuQ,aAAalmD,QAAA,EAC3F,EAMP21C,EAAAxtD,UAAA20E,wBAAR,WACI,OAAIrpE,KAAKimE,YAAcjmE,KAAKkmE,WACjBlmE,KAAKmmE,gCAAkCnmE,KAAKomE,+BAEnDpmE,KAAKimE,aAAejmE,KAAKkmE,WAClBlmE,KAAKmmE,iCAEXnmE,KAAKimE,aAAcjmE,KAAKkmE,aAClBlmE,KAAKomE,8BAAA,EAKZlkB,EAAAxtD,UAAAy0E,yBAAR,WACI,IAAIpoE,EAAUf,KAAKylE,gBAAgBI,QAC/B3jB,EAAY,CAEhB1wD,KAAY,SACZ0wD,EAAK1nB,GAAKx6B,KAAKumE,aAAa/rC,GAC5B0nB,EAAKuW,UAAY,IACjBvW,EAAKwH,SAAW1pD,KAAKolE,UAErBljB,EAAK2X,WAAa94D,EAAQyxD,WAAWjmD,MACrC21C,EAAK4X,YAAc/4D,EAAQyxD,WAAWhmD,OACtC01C,EAAK6X,aAAeh5D,EAAQ0xD,aAAalmD,MACzC21C,EAAK8X,cAAgBj5D,EAAQ0xD,aAAajmD,OAE1C01C,EAAK6J,QAAUhrD,EAAQ0wD,eACvBvP,EAAK8J,MAAQjrD,EAAQ2wD,aACrBxP,EAAK+X,SAAWl5D,EAAQ6wD,UACxB1P,EAAKgK,aAAenrD,EAAQixD,cAC5B9P,EAAKgY,SAAWn5D,EAAQwxD,UACxBrQ,EAAKiY,UAAYp5D,EAAQoxD,WAEzB,IAAIzjE,EAAUwzD,EAAKiY,UAAU9H,QACzBlQ,EAAUD,EAAKiY,UAAU7H,QAK7B,GAJApQ,EAAK+W,kBAA4BvqE,EAAUyzD,EAAlB,IAEzBD,EAAK6W,MAAQh4D,EAAQuwD,eAEjBtxD,KAAKylE,gBAAgBC,IAAK,CAC1B,IAAInrB,EAAqBv6C,KAAKylE,gBAAgBC,IAAI/yE,KAAKg9D,SAAS,GAC5DlN,EAAqBziD,KAAKylE,gBAAgBE,IAAIhzE,KAAKg9D,SAAS,GAC5DtN,EAAqBriD,KAAKylE,gBAAgBG,IAAIjzE,KAAKg9D,SAAS,GAC5DxV,EAAO,IAAIwZ,GAA+BpZ,EAAoBkI,EAAoBJ,EAAoBthD,GAC1GmhD,EAAKkY,KAAOjgB,EAAKz0C,UAE0B,GAAvC1F,KAAKmmE,gCACL1hE,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,gEAAgEhN,EAAK6W,MAAA,KAEtF,CACCtW,EAAqBziD,KAAKylE,gBAAgBE,IAAIhzE,KAAKg9D,SAAS,GAC5DtN,EAAqBriD,KAAKylE,gBAAgBG,IAAIjzE,KAAKg9D,SAAS,GADhE,IAEIxH,EAAO,IAAIwI,EAA8BlO,EAAoBJ,EAAoBthD,GACrFmhD,EAAK0X,KAAOzR,EAAKziD,UAE0B,GAAvC1F,KAAKmmE,gCACL1hE,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,+DAA+DhN,EAAK6W,MAAA,CAG5F/4D,KAAK06D,gBAAgB,QAASxY,GAC9BliD,KAAKmmE,gCAAA,EACLnmE,KAAKqmE,yBAAA,EAGL,IAAIhe,EAAKroD,KAAKklE,YACd7c,EAAGkD,UAAA,EACHlD,EAAG97C,MAAQ21C,EAAK2X,WAChBxR,EAAG77C,OAAS01C,EAAK4X,YACjBzR,EAAGyD,IAAM5J,EAAKiY,UAAUrO,IACxBzD,EAAG0D,QAAU7J,EAAK6J,QAClB1D,EAAG2D,MAAQ9J,EAAK8J,MAChB3D,EAAG4D,UAAYlrD,EAAQgxD,WACvB1J,EAAG6D,aAAenrD,EAAQkxD,qBAC1B5J,EAAG8D,OAASjK,EAAKgY,SAAS3tD,MAC1B87C,EAAG+D,OAASlK,EAAKgY,SAAS1tD,OAC1B67C,EAAGoD,WAAavJ,EAAK6W,MAEjB1Q,EAAGiD,UAAYjD,EAAGmD,WAClBnD,EAAGgD,SAAW,uBAAuBhD,EAAGoD,WAAU,IAAIpD,EAAGmD,WAAU,IAEnEnD,EAAGgD,SAAW,uBAAuBhD,EAAGoD,WAAU,IAGlDpD,EAAGqE,cACH1sD,KAAKw6D,YAAYnS,EAAA,EAIjBnG,EAAAxtD,UAAAw0E,0BAAR,WACQlpE,KAAKqpE,2BACDrpE,KAAKumE,aAAa/3E,QAClBwR,KAAK26D,gBAAgB,KAAM36D,KAAKumE,aAAA,EAKpCrkB,EAAAxtD,UAAA40E,0BAAR,WACQtpE,KAAKqpE,2BACDrpE,KAAKwmE,aAAah4E,QAClBwR,KAAK26D,gBAAgB36D,KAAKwmE,aAAc,OAK5CtkB,EAAAxtD,UAAA8yE,+BAAR,WACQxnE,KAAKqpE,4BACDrpE,KAAKwmE,aAAah4E,QAAUwR,KAAKumE,aAAa/3E,SAC9CwR,KAAK26D,gBAAgB36D,KAAKwmE,aAAcxmE,KAAKumE,aAAA,EAKjDrkB,EAAAxtD,UAAA0zE,gBAAR,SAAwBrnE,EAAkBmhD,GACtC,IAAIliD,KAAKimE,YAAejmE,KAAKmmE,+BAA7B,CAMA,GAAInmE,KAAKgmE,0BAA2B,CAChC,IAAIt3E,EAAM,IAAIggE,WAAW3tD,EAAKuuD,WAAatvD,KAAKgmE,0BAA0B1W,YAC1E5gE,EAAImP,IAAImC,KAAKgmE,0BAA2B,GACxCt3E,EAAImP,IAAIkD,EAAMf,KAAKgmE,0BAA0B1W,YAC7CvuD,EAAOrS,CAAA,CAGX,IAAIyzD,EACA5H,EAEJ,GAAW,MAAP2H,EACA3H,EAAc2H,EAAMliD,KAAKmlE,eACtB,IAAiC,MAA7BnlE,KAAK+lE,qBAKZ,YADAthE,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,oBAHhB/M,EAAsB,KAAOniD,KAAK8lE,gBAAgBvG,mBAAqB,IACvEhlB,EAAcv6C,KAAK+lE,qBAAuB5jB,CAAA,CAM9C,GAAIniD,KAAKgmE,2BAA6BhmE,KAAK+lE,qBAAsB,CAC7D5jB,EAAsB,KAAOniD,KAAK8lE,gBAAgBvG,mBAAqB,IACvE,IAAI9c,EAAaziD,KAAK+lE,qBAAuB5jB,EAEzCxrD,KAAK4yE,IAAI9mB,EAAalI,GAAe,IACrC91C,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,2CACazM,EAAU,gBAAgBlI,EAAW,MAClEA,EAAckI,EAAA,CAStB,IALA,IAGIJ,EAHAlI,EAAc,IAAIloD,EAAc8O,GAChConD,EAAsB,KACtBE,EAAgB9N,EAGmC,OAA/C4N,EAAYhO,EAAYglB,qBAA6B,CACzDhd,EAAsB,KAAOgG,EAAUoX,mBAAqB,IAEjB,GAAvCv/D,KAAKomE,gCACLpmE,KAAK8lE,gBAAgBzG,kBAAoBlX,EAAUkX,kBACnDr/D,KAAK8lE,gBAAgBxG,oBAAsBnX,EAAUmX,oBACrDt/D,KAAK8lE,gBAAgBvG,mBAAqBpX,EAAUoX,mBACpDv/D,KAAK8lE,gBAAgBtG,eAAiBrX,EAAUqX,eAChDx/D,KAAKwpE,yBAAyBrhB,IACvBnoD,KAAKypE,0BAA0BthB,KAEtCnoD,KAAKspE,4BAELtpE,KAAKwpE,yBAAyBrhB,IAGlC9F,EAAqBgG,EACrB,IAAIE,EAAoB5xD,KAAKi0D,MAAMvC,GAE/BjG,EAAa,CACb8W,KAAM/Q,EAAUx1D,KAChBnE,OAAQ25D,EAAUx1D,KAAK28D,WACvB7F,IAAKlB,EACLiB,IAAKjB,GAETvoD,KAAKwmE,aAAalP,QAAQjkE,KAAK+uD,GAC/BpiD,KAAKwmE,aAAah4E,QAAU25D,EAAUx1D,KAAK28D,WAE3CjH,GAAiBlG,CAAA,CAGjBhI,EAAYslB,sBACZz/D,KAAKgmE,0BAA4B7rB,EAAYulB,qBAG7Crd,IACAriD,KAAK+lE,qBAAuB1jB,EAAA,GAI5BH,EAAAxtD,UAAA+0E,0BAAR,SAAkC1oE,GAC9B,OAAIA,EAAMs+D,oBAAsBr/D,KAAK8lE,gBAAgBzG,mBACjD56D,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qCACGlvD,KAAK8lE,gBAAgBzG,kBAAiB,OAAOt+D,EAAMs+D,oBAAA,GAItEt+D,EAAMu+D,sBAAwBt/D,KAAK8lE,gBAAgBxG,qBACnD76D,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,4CACGlvD,KAAK8lE,gBAAgBxG,oBAAmB,OAAOv+D,EAAMu+D,sBAAA,GAIxEv+D,EAAMy+D,iBAAmBx/D,KAAK8lE,gBAAgBtG,iBAC9C/6D,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,2CACGlvD,KAAK8lE,gBAAgBtG,eAAc,OAAOz+D,EAAMy+D,iBAAA,EAC5D,EAMPtd,EAAAxtD,UAAA80E,yBAAR,SAAiCzoE,GAC7B,IAAImhD,EAAwB,IAAI4O,EAAoB/vD,GAChDrS,EAAY,CAEhB8C,KAAY,SACZ9C,EAAK8rC,GAAKx6B,KAAKwmE,aAAahsC,GAC5B9rC,EAAK+pE,UAAY,IACjB/pE,EAAKg7D,SAAW1pD,KAAKolE,UAErB12E,EAAKk9D,gBAAkB1J,EAAsByd,cAC7CjxE,EAAKgqE,aAAexW,EAAsB0d,cAC1ClxE,EAAKqqE,MAAQ7W,EAAsBoP,eACnC5iE,EAAKsqE,cAAgB9W,EAAsB2d,wBAC3CnxE,EAAKmqE,OAAS3W,EAAsB2W,OAEpCnqE,EAAKuqE,kBAAoB,KAAOvqE,EAAKk9D,gBAAkBl9D,EAAK+pE,UAEjB,GAAvCz4D,KAAKomE,gCACL3hE,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,qDAAqDxgE,EAAKqqE,OAG9E/4D,KAAK06D,gBAAgB,QAAShsE,GAC9BsR,KAAKomE,gCAAA,EACLpmE,KAAKqmE,yBAAA,EAGL,IAAIlkB,EAAKniD,KAAKklE,YACd/iB,EAAGmJ,UAAA,EACHnJ,EAAGqJ,WAAa98D,EAAKsqE,cACrB7W,EAAGyJ,gBAAkBl9D,EAAKk9D,gBAC1BzJ,EAAG0J,kBAAoBn9D,EAAKgqE,aAExBvW,EAAGoJ,UAAYpJ,EAAGsJ,WAClBtJ,EAAGkJ,SAAW,uBAAuBlJ,EAAGsJ,WAAU,IAAItJ,EAAGqJ,WAAU,IAEnErJ,EAAGkJ,SAAW,uBAAuBlJ,EAAGqJ,WAAU,IAGlDrJ,EAAGuK,cACH1sD,KAAKw6D,YAAYrY,EAAA,EAIjBD,EAAAxtD,UAAAq0E,iCAAR,SAAyChoE,EAAamhD,EAAqBxzD,GACvE,IAAIyzD,EAAO,IAAI6O,EACf7O,EAAK+kB,IAAMnmE,EACXohD,EAAKolB,YAAcrlB,EACnBC,EAAKviD,WAAalR,EAEdsR,KAAK+6D,4BACL/6D,KAAK+6D,2BAA2B5Y,EAAA,EAIhCD,EAAAxtD,UAAAyzE,2BAAR,SAAmCpnE,EAAkBmhD,EAAaxzD,EAAayzD,EAAa5H,GACxF,IAAI91C,EAAe,IAAIssD,EAOvB,GALAtsD,EAAayiE,IAAM/kB,EACnB19C,EAAailE,UAAYnvB,EACzB91C,EAAaklE,IAAM5oE,EAAKuuD,WACxB7qD,EAAa9R,KAAOoO,EAET,MAAPmhD,EAAkB,CAClB,IAAIO,EAAS9rD,KAAKi0D,MAAM1I,EAAMliD,KAAKmlE,YACnC1gE,EAAaglD,IAAMhH,CAAA,MAEnBh+C,EAAaukE,YAAchpE,KAAK+lE,qBAGpC,GAAW,MAAPr3E,EAAkB,CAClB,IAAI2zD,EAAS1rD,KAAKi0D,MAAMl8D,EAAMsR,KAAKmlE,YACnC1gE,EAAa+kD,IAAMnH,CAAA,CAGnBriD,KAAK86D,kBACL96D,KAAK86D,iBAAiBr2D,EAAA,EAItBy9C,EAAAxtD,UAAA2zE,6BAAR,SAAqCtnE,EAAkBmhD,EAAaxzD,EAAayzD,EAAa5H,GAC1F,IAAI91C,EAAqB,IAAIssD,EAO7B,GALAtsD,EAAmByiE,IAAM/kB,EACzB19C,EAAmBilE,UAAYnvB,EAC/B91C,EAAmBklE,IAAM5oE,EAAKuuD,WAC9B7qD,EAAmB9R,KAAOoO,EAEf,MAAPmhD,EAAkB,CAClB,IAAIO,EAAS9rD,KAAKi0D,MAAM1I,EAAMliD,KAAKmlE,YACnC1gE,EAAmBglD,IAAMhH,CAAA,CAG7B,GAAW,MAAP/zD,EAAkB,CAClB,IAAI2zD,EAAS1rD,KAAKi0D,MAAMl8D,EAAMsR,KAAKmlE,YACnC1gE,EAAmB+kD,IAAMnH,CAAA,CAGzBriD,KAAK46D,oBACL56D,KAAK46D,mBAAmBn2D,EAAA,EAGpCy9C,CAAA,CA/rCA,CAAwB+M,GCbxB2a,GAAA,oBAAA7oE,IAAA,CAqkBA,OAnkBWA,EAAA6vB,KAAP,WAcI,IAAK,IAAIsxB,KAbTnhD,EAAI8oE,MAAQ,CACRC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAChBC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GACpCC,KAAM,GAAIC,KAAM,GAAI,OAAQ,IAGflrE,EAAI8oE,MACb9oE,EAAI8oE,MAAMp1E,eAAeytD,KACzBnhD,EAAI8oE,MAAM3nB,GAAQ,CACdA,EAAK/gD,WAAW,GAChB+gD,EAAK/gD,WAAW,GAChB+gD,EAAK/gD,WAAW,GAChB+gD,EAAK/gD,WAAW,KAK5B,IAAIzS,EAAYqS,EAAImrE,UAAY,CAAC,EAEjCx9E,EAAUy9E,KAAO,IAAIzd,WAAW,CAC5B,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,GAAM,IAAM,GAAM,KAGtBhgE,EAAU09E,YAAc,IAAI1d,WAAW,CACnC,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IAGtBhgE,EAAU29E,KAAO,IAAI3d,WAAW,CAC5B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IAGtBhgE,EAAU49E,KAAO59E,EAAU69E,KAAO79E,EAAU29E,KAE5C39E,EAAU89E,KAAO,IAAI9d,WAAW,CAC5B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IAGtBhgE,EAAU+9E,WAAa,IAAI/d,WAAW,CAClC,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAClB,IAAM,GAAM,GAAM,IAClB,IAAM,IAAM,IAAM,IAAM,IAG5BhgE,EAAUg+E,WAAa,IAAIhe,WAAW,CAClC,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAClB,IAAM,GAAM,GAAM,IAClB,IAAM,IAAM,IAAM,IAAM,IAG5BhgE,EAAUi+E,KAAO,IAAIje,WAAW,CAC5B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,GAClB,IAAM,IAAM,IAAM,GAClB,EAAM,EAAM,EAAM,IAItBhgE,EAAUk+E,KAAO,IAAIle,WAAW,CAC5B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IAItBhgE,EAAUm+E,KAAO,IAAIne,WAAW,CAC5B,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,KAKP3tD,EAAA+rE,IAAP,SAAW/rE,GAMP,IALA,IAAImhD,EAAO,EACPxzD,EAAS,KACTyzD,EAAQhwD,MAAMuC,UAAUiF,MAAMyC,KAAK7N,UAAW,GAC9CgsD,EAAa4H,EAAM3zD,OAEdiW,EAAI,EAAGA,EAAI81C,EAAY91C,IAC5By9C,GAAQC,EAAM19C,GAAG6qD,YAGrB5gE,EAAS,IAAIggE,WAAWxM,IACjB,GAAMA,IAAS,GAAM,IAC5BxzD,EAAO,GAAMwzD,IAAS,GAAM,IAC5BxzD,EAAO,GAAMwzD,IAAU,EAAK,IAC5BxzD,EAAO,GAAc,IAATwzD,EAEZxzD,EAAOmP,IAAIkD,EAAM,GAEjB,IAAI0hD,EAAS,EACb,IAASh+C,EAAI,EAAGA,EAAI81C,EAAY91C,IAC5B/V,EAAOmP,IAAIskD,EAAM19C,GAAIg+C,GACrBA,GAAUN,EAAM19C,GAAG6qD,WAGvB,OAAO5gE,CAAA,EAIJqS,EAAAgsE,oBAAP,SAA2B7qB,GACvB,IAAIxzD,EAAOqS,EAAI+rE,IAAI/rE,EAAI8oE,MAAMO,KAAMrpE,EAAImrE,UAAUC,MAC7ChqB,EAAOphD,EAAI+pE,KAAK5oB,GAEhB3H,EAAS,IAAImU,WAAWhgE,EAAK4gE,WAAanN,EAAKmN,YAGnD,OAFA/U,EAAO18C,IAAInP,EAAM,GACjB6rD,EAAO18C,IAAIskD,EAAMzzD,EAAK4gE,YACf/U,CAAA,EAIJx5C,EAAA+pE,KAAP,SAAY5oB,GACR,IAAIxzD,EAAOqS,EAAIkqE,KAAK/oB,EAAKuW,UAAWvW,EAAKwH,UACrCvH,EAAOphD,EAAI6qE,KAAK1pB,GAChB3H,EAAOx5C,EAAIiqE,KAAK9oB,GACpB,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMiB,KAAMp8E,EAAMyzD,EAAM5H,EAAA,EAIxCx5C,EAAAkqE,KAAP,SAAY/oB,EAAWxzD,GACnB,OAAOqS,EAAI+rE,IAAI/rE,EAAI8oE,MAAMoB,KAAM,IAAIvc,WAAW,CAC1C,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBxM,IAAc,GAAM,IACpBA,IAAc,GAAM,IACpBA,IAAe,EAAK,IACP,IAAdA,EACCxzD,IAAa,GAAM,IACnBA,IAAa,GAAM,IACnBA,IAAc,EAAK,IACP,IAAbA,EACA,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,QAKnBqS,EAAA6qE,KAAP,SAAY1pB,GACR,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAM+B,KAAM7qE,EAAIgrE,KAAK7pB,GAAOnhD,EAAI2pE,KAAKxoB,GAAA,EAIrDnhD,EAAAgrE,KAAP,SAAY7pB,GACR,IAAIxzD,EAAUwzD,EAAK1nB,GAAI2nB,EAAWD,EAAKwH,SACnCnP,EAAQ2H,EAAK6X,aAAct1D,EAASy9C,EAAK8X,cAE7C,OAAOj5D,EAAI+rE,IAAI/rE,EAAI8oE,MAAMkC,KAAM,IAAIrd,WAAW,CAC1C,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBhgE,IAAY,GAAM,IAClBA,IAAY,GAAM,IAClBA,IAAa,EAAK,IACP,IAAZA,EACA,EAAM,EAAM,EAAM,EACjByzD,IAAa,GAAM,IACnBA,IAAa,GAAM,IACnBA,IAAc,EAAK,IACP,IAAbA,EACA,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EACjB5H,IAAU,EAAK,IACN,IAAVA,EACA,EAAM,EACL91C,IAAW,EAAK,IACN,IAAXA,EACA,EAAM,MAKP1D,EAAA2pE,KAAP,SAAYxoB,GACR,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMa,KAAM3pE,EAAI0pE,KAAKvoB,GAAOnhD,EAAIspE,KAAKnoB,GAAOnhD,EAAI6pE,KAAK1oB,GAAA,EAIrEnhD,EAAA0pE,KAAP,SAAYvoB,GACR,IAAIxzD,EAAYwzD,EAAKuW,UACjBtW,EAAWD,EAAKwH,SACpB,OAAO3oD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMY,KAAM,IAAI/b,WAAW,CAC1C,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBhgE,IAAc,GAAM,IACpBA,IAAc,GAAM,IACpBA,IAAe,EAAK,IACP,IAAdA,EACCyzD,IAAa,GAAM,IACnBA,IAAa,GAAM,IACnBA,IAAc,EAAK,IACP,IAAbA,EACA,GAAM,IACN,EAAM,MAKPphD,EAAAspE,KAAP,SAAYnoB,GACR,IAAIxzD,EAAO,KAMX,OAJIA,EADc,UAAdwzD,EAAK1wD,KACEuP,EAAImrE,UAAUQ,WAEd3rE,EAAImrE,UAAUO,WAElB1rE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMQ,KAAM37E,EAAA,EAI5BqS,EAAA6pE,KAAP,SAAY1oB,GACR,IAAIxzD,EAAO,KAMX,OAJIA,EADc,UAAdwzD,EAAK1wD,KACEuP,EAAI+rE,IAAI/rE,EAAI8oE,MAAMoC,KAAMlrE,EAAImrE,UAAUU,MAEtC7rE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMmC,KAAMjrE,EAAImrE,UAAUW,MAE1C9rE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMe,KAAMl8E,EAAMqS,EAAIkpE,OAAQlpE,EAAIoqE,KAAKjpB,GAAA,EAIvDnhD,EAAAkpE,KAAP,WAII,OAHalpE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMI,KAC3BlpE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMK,KAAMnpE,EAAImrE,UAAUS,MAAA,EAMvC5rE,EAAAoqE,KAAP,SAAYjpB,GAQR,OAPanhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMsB,KAC3BpqE,EAAIuqE,KAAKppB,GACTnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAM2B,KAAMzqE,EAAImrE,UAAUG,MACtCtrE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMwB,KAAMtqE,EAAImrE,UAAUI,MACtCvrE,EAAI+rE,IAAI/rE,EAAI8oE,MAAM0B,KAAMxqE,EAAImrE,UAAUM,MACtCzrE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMuB,KAAMrqE,EAAImrE,UAAUK,MAAA,EAMvCxrE,EAAAuqE,KAAP,SAAYppB,GACR,MAAkB,UAAdA,EAAK1wD,KACc,QAAf0wD,EAAK6W,MACEh4D,EAAI+rE,IAAI/rE,EAAI8oE,MAAMyB,KAAMvqE,EAAImrE,UAAUE,YAAarrE,EAAIisE,IAAI9qB,IAG/DnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMyB,KAAMvqE,EAAImrE,UAAUE,YAAarrE,EAAIgqE,KAAK7oB,IAC9C,UAAdA,EAAK1wD,MAAoB0wD,EAAK6W,MAAMkU,WAAW,QAC/ClsE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMyB,KAAMvqE,EAAImrE,UAAUE,YAAarrE,EAAIupE,KAAKpoB,IAE5DnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMyB,KAAMvqE,EAAImrE,UAAUE,YAAarrE,EAAI+oE,KAAK5nB,GAAA,EAIpEnhD,EAAAisE,IAAP,SAAW9qB,GACP,IAAIxzD,EAAewzD,EAAKwW,aACpBvW,EAAaD,EAAK0J,gBAElBrR,EAAO,IAAImU,WAAW,CACtB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAMhgE,EACN,EAAM,GACN,EAAM,EAAM,EAAM,EACjByzD,IAAe,EAAK,IACN,IAAfA,EACA,EAAM,IAGV,OAAOphD,EAAI+rE,IAAI/rE,EAAI8oE,MAAM,QAAStvB,EAAA,EAG/Bx5C,EAAAgqE,KAAP,SAAY7oB,GACR,IAAIxzD,EAAewzD,EAAKwW,aACpBvW,EAAaD,EAAK0J,gBAElBrR,EAAO,IAAImU,WAAW,CACtB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAMhgE,EACN,EAAM,GACN,EAAM,EAAM,EAAM,EACjByzD,IAAe,EAAK,IACN,IAAfA,EACA,EAAM,IAGV,OAAOphD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMkB,KAAMxwB,EAAMx5C,EAAIopE,KAAKjoB,GAAA,EAG3CnhD,EAAAopE,KAAP,SAAYjoB,GACR,IAAIxzD,EAASwzD,EAAK2W,QAAU,GACxB1W,EAAazzD,EAAOF,OACpB+rD,EAAO,IAAImU,WAAW,CACtB,EAAM,EAAM,EAAM,EAElB,EACA,GAAOvM,EACP,EAAM,EACN,EAEA,EACA,GAAOA,EACP,GACA,GACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAElB,GACFh1B,OAAO,CACLg1B,IACDh1B,OACCz+B,GACFy+B,OAAO,CACL,EAAM,EAAM,KAEhB,OAAOpsB,EAAI+rE,IAAI/rE,EAAI8oE,MAAMM,KAAM5vB,EAAA,EAG5Bx5C,EAAA+oE,KAAP,SAAY5nB,GACR,IAAIxzD,EAAOwzD,EAAK0X,KACZzX,EAAQD,EAAK2X,WAAYtf,EAAS2H,EAAK4X,YAEvCr1D,EAAO,IAAIiqD,WAAW,CACtB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBvM,IAAU,EAAK,IACN,IAAVA,EACC5H,IAAW,EAAK,IACN,IAAXA,EACA,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,GACA,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EACZ,EAAM,GACN,IAAM,MAEV,OAAOx5C,EAAI+rE,IAAI/rE,EAAI8oE,MAAMC,KAAMrlE,EAAM1D,EAAI+rE,IAAI/rE,EAAI8oE,MAAME,KAAMr7E,GAAA,EAG1DqS,EAAAupE,KAAP,SAAYpoB,GACR,IAAIxzD,EAAOwzD,EAAKkY,KACZjY,EAAQD,EAAK2X,WAAYtf,EAAS2H,EAAK4X,YAEvCr1D,EAAO,IAAIiqD,WAAW,CACtB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBvM,IAAU,EAAK,IACN,IAAVA,EACC5H,IAAW,EAAK,IACN,IAAXA,EACA,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,GACA,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EACZ,EAAM,GACN,IAAM,MAEV,OAAOx5C,EAAI+rE,IAAI/rE,EAAI8oE,MAAMS,KAAM7lE,EAAM1D,EAAI+rE,IAAI/rE,EAAI8oE,MAAMU,KAAM77E,GAAA,EAI1DqS,EAAAiqE,KAAP,SAAY9oB,GACR,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMmB,KAAMjqE,EAAI+qE,KAAK5pB,GAAA,EAIrCnhD,EAAA+qE,KAAP,SAAY5pB,GACR,IAAIxzD,EAAUwzD,EAAK1nB,GACf2nB,EAAO,IAAIuM,WAAW,CACtB,EAAM,EAAM,EAAM,EACjBhgE,IAAY,GAAM,IAClBA,IAAY,GAAM,IAClBA,IAAa,EAAK,IACP,IAAZA,EACA,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IAEtB,OAAOqS,EAAI+rE,IAAI/rE,EAAI8oE,MAAMiC,KAAM3pB,EAAA,EAI5BphD,EAAA8pE,KAAP,SAAY3oB,EAAOxzD,GACf,OAAOqS,EAAI+rE,IAAI/rE,EAAI8oE,MAAMgB,KAAM9pE,EAAI4pE,KAAKzoB,EAAMmV,gBAAiBt2D,EAAI4qE,KAAKzpB,EAAOxzD,GAAA,EAG5EqS,EAAA4pE,KAAP,SAAYzoB,GACR,IAAIxzD,EAAO,IAAIggE,WAAW,CACtB,EAAM,EAAM,EAAM,EACjBxM,IAAmB,GAAM,IACzBA,IAAmB,GAAM,IACzBA,IAAoB,EAAK,IACP,IAAnBA,IAEJ,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMc,KAAMj8E,EAAA,EAI5BqS,EAAA4qE,KAAP,SAAYzpB,EAAOxzD,GACf,IAAIyzD,EAAUD,EAAM1nB,GAGhB+f,EAAOx5C,EAAI+rE,IAAI/rE,EAAI8oE,MAAM6B,KAAM,IAAIhd,WAAW,CAC9C,EAAM,EAAM,EAAM,EACjBvM,IAAY,GAAM,IAClBA,IAAY,GAAM,IAClBA,IAAa,EAAK,IACP,IAAZA,KAGA19C,EAAO1D,EAAI+rE,IAAI/rE,EAAI8oE,MAAM4B,KAAM,IAAI/c,WAAW,CAC9C,EAAM,EAAM,EAAM,EACjBhgE,IAAwB,GAAM,IAC9BA,IAAwB,GAAM,IAC9BA,IAAyB,EAAK,IACP,IAAxBA,KAEA+zD,EAAO1hD,EAAImqE,KAAKhpB,GAChBG,EAAOthD,EAAI8qE,KAAK3pB,EAAOO,EAAK6M,WAAa,GAAK,GAAK,EAAI,GAAK,EAAI,GAEpE,OAAOvuD,EAAI+rE,IAAI/rE,EAAI8oE,MAAM8B,KAAMpxB,EAAM91C,EAAM49C,EAAMI,EAAA,EAI9C1hD,EAAAmqE,KAAP,SAAYhpB,GAKR,IAJA,IAAIxzD,EAAUwzD,EAAMoV,SAAW,GAC3BnV,EAAczzD,EAAQF,OACtB+rD,EAAO,IAAImU,WAAW,EAAIvM,GAErB19C,EAAI,EAAGA,EAAI09C,EAAa19C,IAAK,CAClC,IAAIg+C,EAAQ/zD,EAAQ+V,GAAGtV,MACvBorD,EAAK91C,EAAI,GAAMg+C,EAAMyqB,WAAa,EACnBzqB,EAAM0qB,WAAa,EACnB1qB,EAAM2qB,cAAgB,EACtB3qB,EAAmB4qB,aAAA,CAEtC,OAAOtsE,EAAI+rE,IAAI/rE,EAAI8oE,MAAMqB,KAAM3wB,EAAA,EAI5Bx5C,EAAA8qE,KAAP,SAAY3pB,EAAOxzD,GACf,IAAIyzD,EAAUD,EAAMoV,SAAW,GAC3B/c,EAAc4H,EAAQ3zD,OACtBiW,EAAW,GAAK,GAAK81C,EACrBkI,EAAO,IAAIiM,WAAWjqD,GAC1B/V,GAAU,EAAI+V,EAEdg+C,EAAK5kD,IAAI,CACL,EAAM,EAAM,GAAM,EACjB08C,IAAgB,GAAM,IACtBA,IAAgB,GAAM,IACtBA,IAAiB,EAAK,IACP,IAAhBA,EACC7rD,IAAW,GAAM,IACjBA,IAAW,GAAM,IACjBA,IAAY,EAAK,IACP,IAAXA,GACD,GAEH,IAAK,IAAI2zD,EAAI,EAAGA,EAAI9H,EAAa8H,IAAK,CAClC,IAAIlI,EAAWgI,EAAQE,GAAGqH,SACtBvB,EAAOhG,EAAQE,GAAG/6B,KAClB+gC,EAAQlG,EAAQE,GAAGlzD,MACnBo5D,EAAMpG,EAAQE,GAAGkY,IACrB9X,EAAK5kD,IAAI,CACJs8C,IAAa,GAAM,IACnBA,IAAa,GAAM,IACnBA,IAAc,EAAK,IACP,IAAbA,EACCgO,IAAS,GAAM,IACfA,IAAS,GAAM,IACfA,IAAU,EAAK,IACP,IAATA,EACCE,EAAM6kB,WAAa,EAAK7kB,EAAM8kB,UAC9B9kB,EAAM+kB,cAAgB,EAAM/kB,EAAMglB,eAAiB,EAAKhlB,EAAMilB,UAC/D,EAAM,EACL/kB,IAAQ,GAAM,IACdA,IAAQ,GAAM,IACdA,IAAS,EAAK,IACP,IAARA,GACD,GAAK,GAAKlG,EAAA,CAEjB,OAAOthD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMgC,KAAMppB,EAAA,EAG5B1hD,EAAAypE,KAAP,SAAYtoB,GACR,OAAOnhD,EAAI+rE,IAAI/rE,EAAI8oE,MAAMW,KAAMtoB,EAAA,EAGvCnhD,CAAA,CArkBA,GAukBA6oE,GAAIh5C,OAEW,IAAA28C,GAAA3D,GCtiBA4D,GApCf,oBAAAzsE,IAAA,CAkCA,OAhCWA,EAAA0sE,eAAP,SAAsB1sE,EAAOmhD,GACzB,GAAc,cAAVnhD,EAAuB,CAEvB,GAAqB,IAAjBmhD,EACA,OAAO,IAAIwM,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,MAClD,GAAqB,IAAjBxM,EACP,OAAO,IAAIwM,WAAW,CAAC,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,MACpE,GAAqB,IAAjBxM,EACP,OAAO,IAAIwM,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,MAC5F,GAAqB,IAAjBxM,EACP,OAAO,IAAIwM,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,KAC1H,GAAqB,IAAjBxM,EACP,OAAO,IAAIwM,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,KAC5I,GAAqB,IAAjBxM,EACP,OAAO,IAAIwM,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAAM,EAAM,GAAM,EAAM,UAE9K,CAEH,GAAqB,IAAjBxM,EAEA,OAAO,IAAIwM,WAAW,CAAC,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACzW,GAAqB,IAAjBxM,EAEP,OAAO,IAAIwM,WAAW,CAAC,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACvW,GAAqB,IAAjBxM,EAEP,OAAO,IAAIwM,WAAW,CAAC,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAGlX,OAAO,MAGf3tD,CAAA,CAlCA,WCsvBe2sE,GA9uBf,WAEI,SAAA3sE,EAAYA,GACRf,KAAKkvD,IAAM,aAEXlvD,KAAKg1D,QAAUj0D,EACff,KAAK2tE,SAAA,IAAW5sE,EAAO6sE,OAEvB5tE,KAAK6tE,UAAY,EACjB7tE,KAAK8tE,gBAAA,EACL9tE,KAAK+tE,cAAgB,IACrB/tE,KAAKguE,cAAgB,IACrBhuE,KAAKiuE,mBAAA,EACLjuE,KAAKkuE,mBAAA,EACLluE,KAAKmuE,wBAA0B,KAC/BnuE,KAAKouE,wBAA0B,KAE/BpuE,KAAKquE,WAAa,KAClBruE,KAAKsuE,WAAa,KAElBtuE,KAAKuuE,sBAAwB,IAAIC,GAAAj0C,EAAqB,SACtDv6B,KAAKyuE,sBAAwB,IAAID,GAAAj0C,EAAqB,SAEtDv6B,KAAK0uE,eAAiB,KACtB1uE,KAAK2uE,gBAAkB,KAIvB3uE,KAAK4uE,kBAAkBnsB,EAAAh+C,EAAQ+hD,UACR/D,EAAAh+C,EAAQi8C,QAAQyF,MAAQ,IACE,KAA1B1D,EAAAh+C,EAAQi8C,QAAQyF,OAAgB1D,EAAAh+C,EAAQi8C,QAAQ6F,MAAQ,OAI/EvmD,KAAK6uE,qBAAwBpsB,EAAAh+C,EAAQuiD,QAAUvE,EAAAh+C,EAAQqiD,KAGvD9mD,KAAK8uE,kBAAoBrsB,EAAAh+C,EAAQsqE,QAEjC/uE,KAAKgvE,uBAAyBhvE,KAAKg1D,QAAQia,oBAAA,CAqsBnD,OAlsBIluE,EAAArM,UAAA00B,QAAA,WACIppB,KAAK6tE,UAAY,EACjB7tE,KAAK8tE,gBAAA,EACL9tE,KAAKquE,WAAa,KAClBruE,KAAKsuE,WAAa,KAClBtuE,KAAKuuE,sBAAsB9jB,QAC3BzqD,KAAKuuE,sBAAwB,KAC7BvuE,KAAKyuE,sBAAsBhkB,QAC3BzqD,KAAKyuE,sBAAwB,KAC7BzuE,KAAK0uE,eAAiB,KACtB1uE,KAAK2uE,gBAAkB,MAG3B5tE,EAAArM,UAAAijE,eAAA,SAAe52D,GAGX,OAFAA,EAAS45D,gBAAkB36D,KAAKkvE,MAAMhmD,KAAKlpB,MAC3Ce,EAAS25D,gBAAkB16D,KAAKmvE,yBAAyBjmD,KAAKlpB,MACvDA,IAAA,EAWXjQ,OAAA6N,eAAImD,EAAArM,UAAA,gBAAa,KAAjB,WACI,OAAOsL,KAAK0uE,cAAA,MAGhB,SAAkB3tE,GACdf,KAAK0uE,eAAiB3tE,CAAA,kCAW1BhR,OAAA6N,eAAImD,EAAArM,UAAA,iBAAc,KAAlB,WACI,OAAOsL,KAAK2uE,eAAA,MAGhB,SAAmB5tE,GACff,KAAK2uE,gBAAkB5tE,CAAA,kCAG3BA,EAAArM,UAAA06E,oBAAA,WACIpvE,KAAKiuE,cAAgBjuE,KAAKkuE,mBAAA,CAAgB,EAG9CntE,EAAArM,UAAA26E,KAAA,SAAKtuE,GACDf,KAAKmuE,wBAA0B,KAC/BnuE,KAAKouE,wBAA0B,KAC/BpuE,KAAKyuE,sBAAsBhkB,QAC3BzqD,KAAKuuE,sBAAsB9jB,OAAA,EAG/B1pD,EAAArM,UAAAw6E,MAAA,SAAMnuE,EAAYmhD,GACd,IAAKliD,KAAK2uE,gBACN,MAAM,IAAIpmB,EAAA9jD,EAAsB,2DAE/BzE,KAAK8tE,gBACN9tE,KAAKsvE,kBAAkBvuE,EAAYmhD,GAEnCA,GACAliD,KAAKuvE,YAAYrtB,GAEjBnhD,GACAf,KAAKwvE,YAAYzuE,EAAA,EAIzBA,EAAArM,UAAAy6E,yBAAA,SAAyBpuE,EAAMmhD,GAC3B,IAAIxzD,EAAU,KAEVyzD,EAAY,MACZ5H,EAAQ2H,EAAS6W,MAErB,GAAa,UAATh4D,EACAf,KAAKquE,WAAansB,EACK,QAAnBA,EAAS6W,OAAmB/4D,KAAK8uE,kBAEjC3sB,EAAY,OACZ5H,EAAQ,GACR7rD,EAAU,IAAIggE,YAGdhgE,EAAU6+E,GAAIR,oBAAoB7qB,OAEnC,IAAa,UAATnhD,EAIP,OAHAf,KAAKsuE,WAAapsB,EAClBxzD,EAAU6+E,GAAIR,oBAAoB7qB,EAAA,CAMtC,IAAKliD,KAAK0uE,eACN,MAAM,IAAInmB,EAAA9jD,EAAsB,yDAEpCzE,KAAK0uE,eAAe3tE,EAAM,CACtBvP,KAAMuP,EACNpO,KAAMjE,EAAQkhE,OACdmJ,MAAOxe,EACPlE,UAAct1C,EAAI,IAAIohD,EACtBstB,cAAevtB,EAASwH,UAAA,EAIhC3oD,EAAArM,UAAA46E,kBAAA,SAAkBvuE,EAAYmhD,GACtBliD,KAAK8tE,iBAIL/sE,GAAcA,EAAWu2D,SAAWv2D,EAAWu2D,QAAQ9oE,SACvDwR,KAAK+tE,cAAgBhtE,EAAWu2D,QAAQ,GAAG9N,KAE3CtH,GAAcA,EAAWoV,SAAWpV,EAAWoV,QAAQ9oE,SACvDwR,KAAKguE,cAAgB9rB,EAAWoV,QAAQ,GAAG9N,KAG/CxpD,KAAK6tE,SAAWl3E,KAAKm6C,IAAI9wC,KAAK+tE,cAAe/tE,KAAKguE,eAClDhuE,KAAK8tE,gBAAA,EAAiB,EAG1B/sE,EAAArM,UAAAg7E,iBAAA,WACI,GAAK1vE,KAAK8tE,eAGV,OAAO9tE,KAAK6tE,QAAA,EAGhB9sE,EAAArM,UAAAi7E,oBAAA,WACI,IAAI5uE,EAAcf,KAAKouE,wBACnBlsB,EAAcliD,KAAKmuE,wBAEnBz/E,EAAa,CACb8C,KAAM,QACNgpC,GAAI,EACJ68B,eAAgB,EAChBC,QAAS,GACT9oE,OAAQ,GAGO,MAAfuS,IACArS,EAAW4oE,QAAQjkE,KAAK0N,GACxBrS,EAAWF,OAASuS,EAAYvS,QAGpC,IAAI2zD,EAAa,CACb3wD,KAAM,QACNgpC,GAAI,EACJ68B,eAAgB,EAChBC,QAAS,GACT9oE,OAAQ,GAGO,MAAf0zD,IACAC,EAAWmV,QAAQjkE,KAAK6uD,GACxBC,EAAW3zD,OAAS0zD,EAAY1zD,QAGpCwR,KAAKouE,wBAA0B,KAC/BpuE,KAAKmuE,wBAA0B,KAE/BnuE,KAAKuvE,YAAY7gF,GAAA,GACjBsR,KAAKwvE,YAAYrtB,GAAA,EAAY,EAGjCphD,EAAArM,UAAA86E,YAAA,SAAYzuE,EAAYmhD,GACpB,GAAuB,MAAnBliD,KAAKquE,WAAT,CAIA,IAGmB3/E,EAHfyzD,EAAQphD,EACRw5C,EAAU4H,EAAMmV,QAChBjV,OAAA,EACAlI,GAAY,EACZgO,EAAoBnoD,KAAKquE,WAAWpV,kBAEpC5Q,EAAyC,QAA1BroD,KAAKquE,WAAWtV,OAAmB/4D,KAAK8uE,iBACvDvmB,EAAwBvoD,KAAK8tE,qBAAA,IAAkB9tE,KAAKiuE,cAEpD7rB,GAAA,EAEJ,GAAK7H,GAA8B,IAAnBA,EAAQ/rD,SAGD,IAAnB+rD,EAAQ/rD,QAAiB0zD,GAA7B,CAMA,IAAI3nB,EAAS,EACT6f,EAAU,KACVhhD,EAAY,EAGZivD,GAEA9tB,EAAS,EACTnhC,EAAY+oD,EAAM3zD,SAGlB+rC,EAAS,EACTnhC,EAAY,EAAI+oD,EAAM3zD,QAI1B,IAAI4sD,EAAa,KASjB,GANIb,EAAQ/rD,OAAS,IAEjB4K,IADAgiD,EAAab,EAAQpnD,OACG3E,QAIQ,MAAhCwR,KAAKmuE,wBAAiC,CACtC,IAAItmB,EAAS7nD,KAAKmuE,wBAClBnuE,KAAKmuE,wBAA0B,KAC/B5zB,EAAQzC,QAAQ+P,GAChBzuD,GAAayuD,EAAOr5D,MAAA,CAIN,MAAd4sD,IACAp7C,KAAKmuE,wBAA0B/yB,GAInC,IAAIiI,EAAyB9I,EAAQ,GAAGiP,IAAMxpD,KAAK6tE,SAGnD,GAAI7tE,KAAKiuE,cACL5rB,EAAgBgB,EAAyBrjD,KAAKiuE,mBAE9C,GAAIjuE,KAAKuuE,sBAAsBzjB,UAC3BzI,EAAgB,EACZriD,KAAK6uE,uBAAyB7uE,KAAKyuE,sBAAsB3jB,WACnB,QAAlC9qD,KAAKquE,WAAWrV,gBAChB5W,GAAA,OAGL,CACH,IAAIjxC,EAAanR,KAAKuuE,sBAAsBpjB,oBAAoB9H,GAChE,GAAkB,MAAdlyC,EAAoB,CACpB,IAAI89C,EAAY5L,GAA0BlyC,EAAWw4C,YAAcx4C,EAAWu4C,UAC1EuF,GAAY,IACZA,EAAW,GAGf5M,EAAgBgB,GADElyC,EAAWq4C,IAAMr4C,EAAWu4C,SAAWuF,EAAA,MAGzD5M,EAAgB,EAK5B,GAAID,EAAyB,CAEzB,IAAI3iC,EAAiB4jC,EAAyBhB,EAC1Cr9C,EAAehF,KAAKyuE,sBAAsBvjB,qBAAqB7H,GACnE,GAAoB,MAAhBr+C,GAAwBA,EAAa8kD,SAAWrqC,GAEhD,GADImxC,EAAa4c,GAAIC,eAAeztE,KAAKquE,WAAWrV,cAAeh5D,KAAKquE,WAAW3V,cACnE,CACZ,IAAI5sB,EAAM9mC,EAAa8kD,SACnB0G,EAAsB/wC,EAAiBza,EAAa8kD,SACxDrlD,EAAAA,EAAI4+C,EAAErjD,KAAKkvD,IAAK,iCAAiCpjB,EAAG,eAAe0kB,GACnEjW,EAAQzC,QAAQ,CAAEohB,KAAMtI,EAAYpH,IAAK1d,EAAK2d,IAAK3d,IACnD1yC,GAAaw3D,EAAWtB,UAAA,OAG5BlN,GAAA,CAA0B,CAOlC,IAHA,IAAI13B,EAAa,GAGRkwB,EAAI,EAAGA,EAAIL,EAAQ/rD,OAAQosD,IAAK,CACrC,IACIqI,GADA4E,EAAStN,EAAQK,IACHse,KACdzI,EAAc5I,EAAO2B,IAAMxpD,KAAK6tE,SAEhCpzB,GADA3O,EAAM2kB,GAAA,GAEN9V,EAAe,KACf+V,EAAiB,EAErB,KAAID,GAAe,MAAnB,CAIA,GAA8B,QAA1BzwD,KAAKquE,WAAWtV,MAAiB,CAEjC,IAAIpI,EAAYF,EAOhB,GALIzwD,KAAKiuE,gBACLtd,EAAY3wD,KAAKiuE,gBAGrB5rB,EAAgBoO,EAAcE,KALF,EAMgBxI,EAAmB,CAE3D1jD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,wCAAwCuB,EAAW,mBAAmBE,EAAS,+BAA+BtO,EAAa,gBAC3I,SAEC,GAAIA,GAXmB,EAWoB8F,GAAqBnoD,KAAKgvE,yBAA2BvsB,EAAAh+C,EAAQiiD,OAAQ,CAEjHjM,GAAA,EAEA,IAUImW,EAVAC,EAAal6D,KAAKi0D,MAAMvI,EAAgB8F,GAC5C1jD,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,kIAEIuB,EAAW,mBAAmBE,EAFlC,uBAGMh6D,KAAKi5E,MAAMvtB,GAAc,kBAAkBwO,EAAU,WAG3E/kB,EAAMn1C,KAAKi0D,MAAM+F,GACjBD,EAAiB/5D,KAAKi0D,MAAM+F,EAAYxI,GAAqBrc,EAG3C,OADd8kB,EAAa4c,GAAIC,eAAeztE,KAAKquE,WAAWrV,cAAeh5D,KAAKquE,WAAW3V,iBAE/Ej0D,EAAAA,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,uCACTlvD,KAAKquE,WAAWrV,cAAa,SAASh5D,KAAKquE,WAAW3V,aAAY,gCAEzE9H,EAAa3N,GAEjBtI,EAAe,GAEf,IAAK,IAAIe,EAAI,EAAGA,EAAImV,EAAYnV,IAAK,CACjCiV,GAAwBxI,EACxB,IAAIl2D,EAAS0E,KAAKi0D,MAAM+F,GACpBG,EAAcn6D,KAAKi0D,MAAM+F,EAAYxI,GAAqBl2D,EAC1D8+D,EAAQ,CACRvH,IAAKv3D,EACLw3D,IAAKx3D,EACLsoE,IAAK,EACLrB,KAAMtI,EACNtpC,KAAMspC,EAAWtB,WACjB5F,SAAUoH,EACVnH,YAAa8G,EACbthE,MAAO,CACH+9E,UAAW,EACXC,UAAW,EACXC,aAAc,EACdC,cAAe,IAGvB1yB,EAAatnD,KAAK09D,GAClB33D,GAAa23D,EAAMzpC,IAAA,CAIvBtnB,KAAKiuE,cAAgBtd,EAAYxI,CAAA,MAIjCrc,EAAMn1C,KAAKi0D,MAAM+F,GACjBD,EAAiB/5D,KAAKi0D,MAAM+F,EAAYxI,GAAqBrc,EAC7D9rC,KAAKiuE,cAAgBtd,EAAYxI,CAAA,MAKrCrc,EAAM2kB,EAAcpO,EAKhBqO,EAFA9V,IAAML,EAAQ/rD,OAAS,EACT+rD,EAAQK,EAAI,GAAG4O,IAAMxpD,KAAK6tE,SAAWxrB,EACxBvW,EAET,MAAdsP,EACcA,EAAWoO,IAAMxpD,KAAK6tE,SAAWxrB,EACpBvW,EACpBphB,EAAWl8B,QAAU,EACXk8B,EAAWA,EAAWl8B,OAAS,GAAGk7D,SAElC/yD,KAAKi0D,MAAMzC,GAGpCnoD,KAAKiuE,cAAgBniC,EAAM4kB,GAGb,IAAdvW,IACAA,EAAWrO,GAEfphB,EAAWr3B,KAAK,CACZm2D,IAAK1d,EACL2d,IAAK3d,EACLyuB,IAAK,EACLrB,KAAMrR,EAAOqR,KACb5xC,KAAMugC,EAAOqR,KAAK5J,WAClB5F,SAAUgH,EACV/G,YAAa8G,EACbthE,MAAO,CACH+9E,UAAW,EACXC,UAAW,EACXC,aAAc,EACdC,cAAe,KAInB5yB,GAEA/vB,EAAWr3B,KAAK8oB,MAAMuO,EAAYiwB,EAAA,EAI1C,GAA0B,IAAtBjwB,EAAWl8B,OAIX,OAFA2zD,EAAMmV,QAAU,QAChBnV,EAAM3zD,OAAS,GAqBnB,IAhBI65D,EAEAjO,EAAU,IAAIsU,WAAWt1D,KAGzBghD,EAAU,IAAIsU,WAAWt1D,IAEjB,GAAMA,IAAc,GAAM,IAClCghD,EAAQ,GAAMhhD,IAAc,GAAM,IAClCghD,EAAQ,GAAMhhD,IAAe,EAAK,IAClCghD,EAAQ,GAAmB,IAAdhhD,EAEbghD,EAAQv8C,IAAI0vE,GAAI1D,MAAMW,KAAM,IAIvB5vB,EAAI,EAAGA,EAAIlwB,EAAWl8B,OAAQosD,IAC/BqI,EAAOv4B,EAAWkwB,GAAGse,KACzB9e,EAAQv8C,IAAIolD,EAAM1oB,GAClBA,GAAU0oB,EAAKqM,WAGnB,IAAI0B,EAAStmC,EAAWA,EAAWl8B,OAAS,GAC5CE,EAAUsiE,EAAOxH,IAAMwH,EAAOtH,SAI9B,IAAIuH,EAAO,IAAIud,GAAAxpE,EACfisD,EAAKnH,SAAW3P,EAChB8W,EAAKlH,OAASr7D,EACduiE,EAAKjH,SAAW7P,EAChB8W,EAAKhH,OAASv7D,EACduiE,EAAK/G,iBAAmBx/B,EAAW,GAAGi/B,YACtCsH,EAAK9G,eAAiB6G,EAAOrH,YAAcqH,EAAOtH,SAClDuH,EAAK5G,YAAc,IAAImkB,GAAAr0B,EAAWzvB,EAAW,GAAG8+B,IACd9+B,EAAW,GAAG++B,IACd/+B,EAAW,GAAGg/B,SACdh/B,EAAW,GAAGi/B,aAAA,GAEhDsH,EAAK3G,WAAa,IAAIkkB,GAAAr0B,EAAW6W,EAAOxH,IACPwH,EAAOvH,IACPuH,EAAOtH,SACPsH,EAAOrH,aAAA,GAEnC3pD,KAAK2tE,SACN3tE,KAAKuuE,sBAAsBtjB,OAAOgG,GAGtC9O,EAAMmV,QAAU5sC,EAChBy3B,EAAMkV,iBAEN,IAAInG,EAAU,KAIVA,EAFA7I,EAEU,IAAIqG,WAGJ6e,GAAI1C,KAAK1oB,EAAOhI,GAG9BgI,EAAMmV,QAAU,GAChBnV,EAAM3zD,OAAS,EAEf,IAAI2iE,EAAU,CACV3/D,KAAM,QACNmB,KAAMqN,KAAK6vE,YAAY3e,EAAS9W,GAASwV,OACzCkgB,YAAaplD,EAAWl8B,OACxB2Q,KAAM8xD,GAGN5I,GAAgBE,IAGhB4I,EAAQ4e,gBAAkB51B,GAG9Bn6C,KAAK2uE,gBAAgB,QAASxd,EAAA,IAGlCpwD,EAAArM,UAAA66E,YAAA,SAAYxuE,EAAYmhD,GACpB,GAAuB,MAAnBliD,KAAKsuE,WAAT,CAIA,IAGmB5/E,EACAyzD,EAJf5H,EAAQx5C,EACR0D,EAAU81C,EAAM+c,QAChB7U,OAAA,EACAJ,GAAY,EACZlI,GAAY,EAEhB,GAAK11C,GAA8B,IAAnBA,EAAQjW,SAGD,IAAnBiW,EAAQjW,QAAiB0zD,GAA7B,CAMA,IAAIiG,EAAS,EACTE,EAAU,KACVE,EAAY,EAAIxnD,EAAWvS,OAG3B4zD,EAAa,KASjB,GANI39C,EAAQjW,OAAS,IAEjB+5D,IADAnG,EAAa39C,EAAQtR,OACG3E,QAIQ,MAAhCwR,KAAKouE,wBAAiC,CACtC,IAAI7zC,EAASv6B,KAAKouE,wBAClBpuE,KAAKouE,wBAA0B,KAC/B3pE,EAAQqzC,QAAQvd,GAChBguB,GAAahuB,EAAO/rC,MAAA,CAIN,MAAd4zD,IACApiD,KAAKouE,wBAA0BhsB,GAInC,IAAIhI,EAAyB31C,EAAQ,GAAG+kD,IAAMxpD,KAAK6tE,SAGnD,GAAI7tE,KAAKkuE,cACLzrB,EAAgBrI,EAAyBp6C,KAAKkuE,mBAE9C,GAAIluE,KAAKyuE,sBAAsB3jB,UAC3BrI,EAAgB,MACb,CACH,IAAIrpD,EAAa4G,KAAKyuE,sBAAsBtjB,oBAAoB/Q,GAChE,GAAkB,MAAdhhD,EAAoB,CACpB,IAAIgiD,EAAYhB,GAA0BhhD,EAAWuwD,YAAcvwD,EAAWswD,UAC1EtO,GAAY,IACZA,EAAW,GAGfqH,EAAgBrI,GADEhhD,EAAWowD,IAAMpwD,EAAWswD,SAAWtO,EAAA,MAGzDqH,EAAgB,EAS5B,IAJA,IAAIoF,EAAO,IAAI2mB,GAAAxpE,EACXq+C,EAAa,GAGRlyC,EAAI,EAAGA,EAAI1M,EAAQjW,OAAQ2iB,IAAK,CACrC,IACI89C,GADA10B,EAAS91B,EAAQ0M,IACIq4C,IAAMxpD,KAAK6tE,SAChCpuD,EAAa8a,EAAO+/B,WACpBt1D,EAAMiqD,EAAcxM,EACpB3W,EAAMvR,EAAOggC,IACb/J,EAAMxrD,EAAM8mC,GAEE,IAAduW,IACAA,EAAWr9C,EACXm1C,EAAWqW,GAGf,IAAI9lC,EAAiB,EAgBrB,GAZIA,EAFAvZ,IAAM1M,EAAQjW,OAAS,EACTiW,EAAQ0M,EAAI,GAAGq4C,IAAMxpD,KAAK6tE,SAAWprB,EACxBz9C,EAET,MAAdo9C,EACcA,EAAWoH,IAAMxpD,KAAK6tE,SAAWprB,EACpBz9C,EACpBq+C,EAAW70D,QAAU,EACX60D,EAAWA,EAAW70D,OAAS,GAAGk7D,SAElC/yD,KAAKi0D,MAAM5qD,KAAKsuE,WAAWrV,mBAIhDx5C,EAAY,CACZ,IAAIm7B,EAAY,IAAI4zB,GAAAr0B,EAAWn1C,EAAKwrD,EAAK9lC,EAAgB6P,EAAOivB,KAAA,GAChE5O,EAAUiP,aAAetvB,EAAOsvB,aAChChC,EAAK0C,gBAAgB3P,EAAA,CAGzByI,EAAWhwD,KAAK,CACZm2D,IAAKxkD,EACLykD,IAAK+G,EACL+J,IAAKzuB,EACLuuB,MAAO9/B,EAAO8/B,MACd/yC,KAAMiT,EAAO/rC,OACb8rE,WAAY76C,EACZiqC,SAAUh/B,EACVi/B,YAAasF,EACb9/D,MAAO,CACH+9E,UAAW,EACXC,UAAW1tD,EAAa,EAAI,EAC5B2tD,aAAc3tD,EAAa,EAAI,EAC/B4tD,cAAe,EACfC,UAAW7tD,EAAa,EAAI,KAcxC,KARA4oC,EAAU,IAAIqG,WAAWnG,IACjB,GAAMA,IAAc,GAAM,IAClCF,EAAQ,GAAME,IAAc,GAAM,IAClCF,EAAQ,GAAME,IAAe,EAAK,IAClCF,EAAQ,GAAmB,IAAdE,EACbF,EAAQxqD,IAAI0vE,GAAI1D,MAAMW,KAAM,GAGnBr5D,EAAI,EAAGA,EAAIkyC,EAAW70D,OAAQ2iB,IAEnC,IADA,IAAI8xC,EAAQI,EAAWlyC,GAAGkpD,MACnBpX,EAAMz0D,QAAQ,CACjB,IACIiiE,EADOxN,EAAM1D,QACD5sD,KAChB01D,EAAQxqD,IAAI4yD,EAAMtI,GAClBA,GAAUsI,EAAKnB,UAAA,CAIvB,IAAI7U,EAAS4I,EAAWA,EAAW70D,OAAS,GA+B5C,GA9BAE,EAAU+rD,EAAO+O,IAAM/O,EAAOiP,SAC9BvH,EAAU1H,EAAOgP,IAAMhP,EAAOiP,SAC9B1pD,KAAKkuE,cAAgBx/E,EAGrBm5D,EAAKiC,SAAWzH,EAChBwF,EAAKkC,OAASr7D,EACdm5D,EAAKmC,SAAW7P,EAChB0N,EAAKoC,OAAS9H,EACd0F,EAAKqC,iBAAmB7G,EAAW,GAAGsG,YACtC9B,EAAKsC,eAAiB1P,EAAOkP,YAAclP,EAAOiP,SAClD7B,EAAKwC,YAAc,IAAImkB,GAAAr0B,EAAWkJ,EAAW,GAAGmG,IACdnG,EAAW,GAAGoG,IACdpG,EAAW,GAAGqG,SACdrG,EAAW,GAAGsG,YACdtG,EAAW,GAAGiX,YAChDzS,EAAKyC,WAAa,IAAIkkB,GAAAr0B,EAAWM,EAAO+O,IACP/O,EAAOgP,IACPhP,EAAOiP,SACPjP,EAAOkP,YACPlP,EAAO6f,YACnCt6D,KAAK2tE,SACN3tE,KAAKyuE,sBAAsBxjB,OAAOpD,GAGtCtN,EAAM+c,QAAUjU,EAChB9I,EAAM8c,iBAIFr3D,KAAK4uE,eAAgB,CACrB,IAAIj0B,EAAQ0I,EAAW,GAAGl0D,MAC1BwrD,EAAMwyB,UAAY,EAClBxyB,EAAM2yB,UAAY,EAGtB,IAAI5c,EAAU6c,GAAI1C,KAAKtwB,EAAO8H,GAC9B9H,EAAM+c,QAAU,GAChB/c,EAAM/rD,OAAS,EAEfwR,KAAK2uE,gBAAgB,QAAS,CAC1Bn9E,KAAM,QACNmB,KAAMqN,KAAK6vE,YAAYnf,EAASrI,GAASuH,OACzCkgB,YAAazsB,EAAW70D,OACxB2Q,KAAM0oD,GAAA,IAId9mD,EAAArM,UAAAm7E,YAAA,SAAY9uE,EAAMmhD,GACd,IAAIxzD,EAAS,IAAIggE,WAAW3tD,EAAKuuD,WAAapN,EAAKoN,YAGnD,OAFA5gE,EAAOmP,IAAIkD,EAAM,GACjBrS,EAAOmP,IAAIqkD,EAAMnhD,EAAKuuD,YACf5gE,CAAA,EAGfqS,CAAA,CA5uBA,oBCIAivE,GAAA,WAEI,SAAAjvE,EAAYA,EAAiBmhD,GACzBliD,KAAKkvD,IAAM,wBACXlvD,KAAKiwE,SAAW,IAAI11B,EAAA91C,EAEpBzE,KAAKg1D,QAAU9S,EAGVnhD,EAAgBurD,WACjBvrD,EAAgBurD,SAAW,CAAC,CACxB5C,SAAU3oD,EAAgB2oD,SAC1BwmB,SAAUnvE,EAAgBmvE,SAC1B5hF,IAAKyS,EAAgBzS,OAKO,kBAAzByS,EAAgBovE,OACvBpvE,EAAgBovE,MAAA,GAE2B,kBAApCpvE,EAAgBqvE,kBACvBrvE,EAAgBqvE,iBAAA,GAGpBpwE,KAAKqwE,iBAAmBtvE,EACxBf,KAAKswE,qBAAuB,EAC5B,IAAI5hF,EAAgB,EAEpBsR,KAAKqwE,iBAAiB/jB,SAASjuC,SAAQ,SAAC8jC,GAEpCA,EAAQouB,cAAgB7hF,EACxBA,GAAiByzD,EAAQuH,SAEzBvH,EAAQguB,KAAOpvE,EAAgBovE,KAC/BhuB,EAAQiuB,gBAAkBrvE,EAAgBqvE,gBAEtCluB,EAAOhG,iBACPiG,EAAQjG,eAAiBgG,EAAOhG,eAAA,IAInCrD,MAAMnqD,IAAkBsR,KAAKqwE,iBAAiB3mB,WAAah7D,IAC5DsR,KAAKqwE,iBAAiB3mB,SAAWh7D,GAGrCsR,KAAKk2D,WAAa,KAClBl2D,KAAKwwE,SAAW,KAChBxwE,KAAKywE,SAAW,KAChBzwE,KAAK0wE,OAAS,KAEd1wE,KAAK2wE,iBAAmB,KACxB3wE,KAAK4wE,yBAA2B,KAEhC5wE,KAAK6wE,oBAAsB,KA+anC,OA5aI9vE,EAAArM,UAAA00B,QAAA,WACIppB,KAAKk2D,WAAa,KAClBl2D,KAAKqwE,iBAAmB,KAEpBrwE,KAAK6wE,qBACL7wE,KAAK8wE,6BAEL9wE,KAAK0wE,SACL1wE,KAAK0wE,OAAOtnD,UACZppB,KAAK0wE,OAAS,MAEd1wE,KAAKwwE,WACLxwE,KAAKwwE,SAASpnD,UACdppB,KAAKwwE,SAAW,MAEhBxwE,KAAKywE,WACLzwE,KAAKywE,SAASrnD,UACdppB,KAAKywE,SAAW,MAGpBzwE,KAAKiwE,SAAS7mB,qBACdppD,KAAKiwE,SAAW,MAGpBlvE,EAAArM,UAAAozD,GAAA,SAAG/mD,EAAOmhD,GACNliD,KAAKiwE,SAASjnB,YAAYjoD,EAAOmhD,EAAA,EAGrCnhD,EAAArM,UAAAy0D,IAAA,SAAIpoD,EAAOmhD,GACPliD,KAAKiwE,SAASroB,eAAe7mD,EAAOmhD,EAAA,EAGxCnhD,EAAArM,UAAAiR,MAAA,WACI3F,KAAK+wE,aAAa,GAClB/wE,KAAKgxE,2BAAA,EAGTjwE,EAAArM,UAAAq8E,aAAA,SAAahwE,EAAcmhD,GACvBliD,KAAKswE,qBAAuBvvE,EAC5B,IAAIrS,EAAasR,KAAKqwE,iBAAiB/jB,SAASvrD,GAE5CohD,EAAQniD,KAAK0wE,OAAS,IAAIO,GAAAxsE,EAAa/V,EAAYsR,KAAKg1D,QAASj0D,GACrEohD,EAAM3pC,QAAUxY,KAAKkxE,eAAehoD,KAAKlpB,MACzCmiD,EAAMgvB,SAAWnxE,KAAKoxE,YAAYloD,KAAKlpB,MACvCmiD,EAAMkvB,WAAarxE,KAAKsxE,cAAcpoD,KAAKlpB,MAC3CmiD,EAAMovB,WAAavxE,KAAKwxE,cAActoD,KAAKlpB,MAC3CmiD,EAAMsvB,oBAAsBzxE,KAAK0xE,uBAAuBxoD,KAAKlpB,MAEzDkiD,EACAliD,KAAKwwE,SAAS7Y,eAAe33D,KAAK0wE,QAElCvuB,EAAMyV,cAAgB53D,KAAK2xE,oBAAoBzoD,KAAKlpB,MAGxDmiD,EAAMuD,KAAKxD,EAAA,EAGfnhD,EAAArM,UAAAk9E,KAAA,WACI5xE,KAAK6xE,iBACL7xE,KAAK8wE,4BAAA,EAGT/vE,EAAArM,UAAAm9E,eAAA,WACQ7xE,KAAK0wE,SACL1wE,KAAK0wE,OAAOtnD,UACZppB,KAAK0wE,OAAS,OAItB3vE,EAAArM,UAAAo9E,MAAA,WACQ9xE,KAAK0wE,QAAU1wE,KAAK0wE,OAAOjrB,cAC3BzlD,KAAK0wE,OAAOoB,QACZ9xE,KAAK8wE,6BAAA,EAIb/vE,EAAArM,UAAAq9E,OAAA,WACQ/xE,KAAK0wE,QAAU1wE,KAAK0wE,OAAOsB,aAC3BhyE,KAAK0wE,OAAOqB,SACZ/xE,KAAKgxE,4BAAA,EAIbjwE,EAAArM,UAAA26E,KAAA,SAAKtuE,GACD,GAAuB,MAAnBf,KAAKk2D,YAAuBl2D,KAAKk2D,WAAWvJ,aAAhD,CAIA,IAAIzK,EAAqBliD,KAAKiyE,4BAA4BlxE,GAE1D,GAAImhD,IAAuBliD,KAAKswE,qBAAsB,CAElD,IAAI5hF,EAAcsR,KAAKk2D,WAAW5J,SAASpK,GAE3C,GAAmB,MAAfxzD,EAGAsR,KAAK2wE,iBAAmB5vE,MACrB,CACH,IAAIohD,EAAWzzD,EAAYk+D,mBAAmB7rD,GAC9Cf,KAAKywE,SAASpB,KAAKltB,EAAS4K,cAC5B/sD,KAAK0wE,OAAOrB,KAAKltB,EAAS0H,cAE1B7pD,KAAK4wE,yBAA2BzuB,EAAS4K,YAAA,MAE1C,CAEH,IAAIxS,EAAoBv6C,KAAKk2D,WAAW5J,SAASpK,GAExB,MAArB3H,GAEAv6C,KAAK2wE,iBAAmB5vE,EACxBf,KAAK6xE,iBACL7xE,KAAKywE,SAASpB,OACdrvE,KAAKywE,SAASrB,sBACdpvE,KAAK+wE,aAAa7uB,KAIdC,EAAW5H,EAAkBqS,mBAAmB7rD,GACpDf,KAAK6xE,iBACL7xE,KAAKywE,SAASpB,KAAKtuE,GACnBf,KAAKywE,SAASrB,sBACdpvE,KAAKwwE,SAAS1Y,iBACd93D,KAAKwwE,SAASD,cAAgBvwE,KAAKqwE,iBAAiB/jB,SAASpK,GAAoBquB,cACjFvwE,KAAK+wE,aAAa7uB,EAAoBC,EAAS0H,cAC/C7pD,KAAK4wE,yBAA2BzuB,EAAS4K,aACzC/sD,KAAKkyE,wBAAwBhwB,GAAA,CAIrCliD,KAAKgxE,2BAAA,GAGTjwE,EAAArM,UAAAu9E,4BAAA,SAA4BlxE,GAIxB,IAHA,IAAImhD,EAAWliD,KAAKqwE,iBAAiB/jB,SACjC59D,EAAMwzD,EAAS1zD,OAAS,EAEnB2zD,EAAI,EAAGA,EAAID,EAAS1zD,OAAQ2zD,IACjC,GAAIphD,EAAemhD,EAASC,GAAGouB,cAAe,CAC1C7hF,EAAMyzD,EAAI,EACV,MAGR,OAAOzzD,CAAA,EAGXqS,EAAArM,UAAAi9E,oBAAA,SAAoB5wE,EAAMmhD,GAA1B,IAAAxzD,EAAA,KACQyzD,EAAY,KACZ5H,EAAW,EAEf,GAAI2H,EAAY,EAEZliD,KAAKwwE,SAAS7Y,eAAe33D,KAAK0wE,QAClC1wE,KAAKwwE,SAASD,cAAgBvwE,KAAKqwE,iBAAiB/jB,SAAStsD,KAAKswE,sBAAsBC,cAExFh2B,EAAWv6C,KAAKwwE,SAAS3Y,YAAY92D,EAAMmhD,QACxC,IAAKC,EAAY6iB,GAAUvN,MAAM12D,IAAOhE,MAAO,CAClD,IAAI0lD,EAAUziD,KAAKwwE,SAAW,IAAIxL,GAAU7iB,EAAWniD,KAAKg1D,SAEvDh1D,KAAKywE,WACNzwE,KAAKywE,SAAW,IAAI/C,GAAW1tE,KAAKg1D,UAGxCvS,EAAQjqC,QAAUxY,KAAKmyE,kBAAkBjpD,KAAKlpB,MAC9CyiD,EAAQ+X,YAAcx6D,KAAKi1D,aAAa/rC,KAAKlpB,MAC7CyiD,EAAQgY,kBAAoBz6D,KAAKk1D,mBAAmBhsC,KAAKlpB,MACzDyiD,EAAQmY,mBAAqB56D,KAAKoyE,oBAAoBlpD,KAAKlpB,MAC3DyiD,EAAQoY,iBAAmB76D,KAAKqyE,kBAAkBnpD,KAAKlpB,MACvDyiD,EAAQsY,2BAA6B/6D,KAAKsyE,4BAA4BppD,KAAKlpB,MAC3EyiD,EAAQqY,iBAAmB96D,KAAKuyE,kBAAkBrpD,KAAKlpB,MAEvDA,KAAKywE,SAAS9Y,eAAe33D,KAAKwwE,UAClCxwE,KAAKwwE,SAAS7Y,eAAe33D,KAAK0wE,QAElC1wE,KAAKywE,SAAS+B,cAAgBxyE,KAAKyyE,6BAA6BvpD,KAAKlpB,MACrEA,KAAKywE,SAASiC,eAAiB1yE,KAAK2yE,8BAA8BzpD,KAAKlpB,MAEvEu6C,EAAWv6C,KAAKwwE,SAAS3Y,YAAY92D,EAAMmhD,EAAA,MACxC,IAAKC,EAAYhxC,EAAWsmD,MAAM12D,IAAOhE,MAAO,CAEnDiD,KAAKwwE,SAAW,IAAIr/D,EAAWgxC,EAAWniD,KAAKg1D,SAE1Ch1D,KAAKywE,WACNzwE,KAAKywE,SAAW,IAAI/C,GAAW1tE,KAAKg1D,UAGxC,IAAI3S,EAAMriD,KAAKqwE,iBACK,MAAhBhuB,EAAIqH,UAA0B7Q,MAAMwJ,EAAIqH,YACxC1pD,KAAKwwE,SAASoC,kBAAoBvwB,EAAIqH,UAEd,kBAAjBrH,EAAIiJ,WACXtrD,KAAKwwE,SAASqC,kBAAoBxwB,EAAIiJ,UAEd,kBAAjBjJ,EAAIkJ,WACXvrD,KAAKwwE,SAASsC,kBAAoBzwB,EAAIkJ,UAG1CvrD,KAAKwwE,SAASD,cAAgBluB,EAAIiK,SAAStsD,KAAKswE,sBAAsBC,cAEtEvwE,KAAKwwE,SAASh4D,QAAUxY,KAAKmyE,kBAAkBjpD,KAAKlpB,MACpDA,KAAKwwE,SAAShW,YAAcx6D,KAAKi1D,aAAa/rC,KAAKlpB,MACnDA,KAAKwwE,SAAS/V,kBAAoBz6D,KAAKk1D,mBAAmBhsC,KAAKlpB,MAC/DA,KAAKwwE,SAASuC,oBAAsB/yE,KAAKm1D,qBAAqBjsC,KAAKlpB,MAEnEA,KAAKywE,SAAS9Y,eAAe33D,KAAKwwE,SACpB7Y,eAAe33D,KAAK0wE,SAGlC1wE,KAAKywE,SAAS+B,cAAgBxyE,KAAKyyE,6BAA6BvpD,KAAKlpB,MACrEA,KAAKywE,SAASiC,eAAiB1yE,KAAK2yE,8BAA8BzpD,KAAKlpB,MAEvEu6C,EAAWv6C,KAAKwwE,SAAS3Y,YAAY92D,EAAMmhD,EAAA,MAE3CC,EAAY,KACZ19C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,4CAChBlnB,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKmjF,gBAAA,IAET7xE,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB++C,YAAapI,EAAA32C,EAAY2iD,mBAAoB,4CAElF7M,EAAW,EAGf,OAAOA,CAAA,EAGXx5C,EAAArM,UAAAugE,aAAA,SAAal0D,GAAb,IAAAmhD,EAAA,KAC2B,MAAnBliD,KAAKk2D,aAELl2D,KAAKk2D,WAAanmE,OAAOD,OAAO,CAAC,EAAGiR,GACpCf,KAAKk2D,WAAWzJ,eAAiB,KACjCzsD,KAAKk2D,WAAW5J,SAAW,GAC3BtsD,KAAKk2D,WAAW3J,aAAevsD,KAAKqwE,iBAAiB/jB,SAAS99D,OAC9DuB,OAAOkjF,eAAejzE,KAAKk2D,WAAY7T,EAAA59C,EAAU/P,YAGrD,IAAIhG,EAAcqB,OAAOD,OAAO,CAAC,EAAGiR,GACpChR,OAAOkjF,eAAevkF,EAAa2zD,EAAA59C,EAAU/P,WAC7CsL,KAAKk2D,WAAW5J,SAAStsD,KAAKswE,sBAAwB5hF,EAGtDsR,KAAKkyE,wBAAwBlyE,KAAKswE,sBAEL,MAAzBtwE,KAAK2wE,kBACL3oC,QAAQloB,UAAUJ,MAAK,WACnB,IAAI3e,EAASmhD,EAAKyuB,iBAClBzuB,EAAKyuB,iBAAmB,KACxBzuB,EAAKmtB,KAAKtuE,EAAA,KAKtBA,EAAArM,UAAAwgE,mBAAA,SAAmBn0D,GACff,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBq/C,iBAAkB/iD,EAAA,EAG3DA,EAAArM,UAAAygE,qBAAA,SAAqBp0D,GACjBf,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBs/C,mBAAoBhjD,EAAA,EAG7DA,EAAArM,UAAA09E,oBAAA,SAAoBrxE,GAChB,IAAImhD,EAAiBliD,KAAKywE,SAASf,mBACb,MAAlBxtB,IAE0B,MAA1BnhD,EAAmB0oD,MACnB1oD,EAAmB0oD,KAAOvH,GAGA,MAA1BnhD,EAAmByoD,MACnBzoD,EAAmByoD,KAAOtH,GAG9BliD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBu/C,2BAA4BjjD,GAAA,EAGrEA,EAAArM,UAAA29E,kBAAA,SAAkBtxE,GACd,IAAImhD,EAAiBliD,KAAKywE,SAASf,mBACb,MAAlBxtB,IAEc,MAAdnhD,EAAO0oD,MACP1oD,EAAO0oD,KAAOvH,GAGQ,MAAtBnhD,EAAOioE,cACPjoE,EAAOioE,aAAe9mB,GAG1BliD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBw/C,wBAAyBljD,GAAA,EAGlEA,EAAArM,UAAA49E,4BAAA,SAA4BvxE,GACxBf,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBy/C,4BAA6BnjD,EAAA,EAGtEA,EAAArM,UAAA69E,kBAAA,SAAkBxxE,GACd,IAAImhD,EAAiBliD,KAAKywE,SAASf,mBACb,MAAlBxtB,IAEoB,MAApBnhD,EAAa0oD,MACb1oD,EAAa0oD,KAAOvH,GAGQ,MAA5BnhD,EAAaioE,cACbjoE,EAAaioE,aAAe9mB,GAGR,MAApBnhD,EAAayoD,MACbzoD,EAAayoD,KAAOtH,GAGxBliD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB0/C,yBAA0BpjD,GAAA,EAGnEA,EAAArM,UAAA08E,YAAA,WACIpxE,KAAKywE,SAASrB,qBAAA,EAGlBruE,EAAArM,UAAA48E,cAAA,SAAcvwE,GACV,IACImhD,EADenhD,EACmB,EAElCmhD,EAAmBliD,KAAKqwE,iBAAiB/jB,SAAS99D,QAClDwR,KAAK6xE,iBACD7xE,KAAKywE,UACLzwE,KAAKywE,SAASd,sBAElB3vE,KAAK+wE,aAAa7uB,KAEdliD,KAAKywE,UACLzwE,KAAKywE,SAASd,sBAElB3vE,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBk/C,kBACrC3jD,KAAK8wE,6BAAA,EAIb/vE,EAAArM,UAAA88E,cAAA,SAAczwE,GACV,IAAImhD,EAAeliD,KAAK0wE,OAAOwC,UAC/BlzE,KAAKqwE,iBAAiB/jB,SAASpK,GAAcixB,cAAgBpyE,CAAA,EAGjEA,EAAArM,UAAAg9E,uBAAA,WACI1xE,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBm/C,oBAAA,EAGzC7iD,EAAArM,UAAAw8E,eAAA,SAAenwE,EAAMmhD,GACjBz9C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,uBAAuBnuD,EAAI,YAAYmhD,EAAK7zD,KAAI,WAAW6zD,EAAKkxB,KAChFpzE,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB8+C,SAAUxiD,EAAMmhD,GACrDliD,KAAK8wE,4BAAA,EAGT/vE,EAAArM,UAAAy9E,kBAAA,SAAkBpxE,EAAMmhD,GACpBz9C,EAAAA,EAAI1D,EAAEf,KAAKkvD,IAAK,0BAA0BnuD,EAAI,YAAYmhD,GAC1DliD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB++C,YAAaziD,EAAMmhD,EAAA,EAG5DnhD,EAAArM,UAAA+9E,6BAAA,SAA6B1xE,EAAMmhD,GAC/BliD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBg/C,aAAc1iD,EAAMmhD,EAAA,EAG7DnhD,EAAArM,UAAAi+E,8BAAA,SAA8B5xE,EAAMmhD,GAChC,GAA6B,MAAzBliD,KAAK2wE,mBAIT3wE,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBi/C,cAAe3iD,EAAMmhD,GAGrB,MAAjCliD,KAAK4wE,0BAA6C,UAAT7vE,GAAkB,CAC3D,IAAIrS,EAAawzD,EAAa/iD,KAAKirD,WAC/BjI,EAAYniD,KAAK4wE,yBACrB5wE,KAAK4wE,yBAA2B,KAG5BnuB,EAAAh+C,EAAQiiD,QAAUh4D,EAAWF,OAAS,GAAKE,EAAW,GAAGi7D,cAAgBxH,IACzEA,EAAYzzD,EAAW,GAAG+6D,KAI9BzpD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB4/C,oBAAqBlC,EAAA,GAIlEphD,EAAArM,UAAAs8E,0BAAA,WACoC,MAA5BhxE,KAAK6wE,sBACL7wE,KAAK6wE,oBAAsBjrB,KAAKytB,YAC5BrzE,KAAKszE,sBAAsBpqD,KAAKlpB,MACpCA,KAAKg1D,QAAQue,8BAAA,EAIrBxyE,EAAArM,UAAAo8E,2BAAA,WACQ9wE,KAAK6wE,sBACLjrB,KAAK4tB,cAAcxzE,KAAK6wE,qBACxB7wE,KAAK6wE,oBAAsB,OAInC9vE,EAAArM,UAAAw9E,wBAAA,SAAwBnxE,GACpB,IAAImhD,EAAcliD,KAAKk2D,WAAW5J,SAASvrD,GACvCrS,EAAaqB,OAAOD,OAAO,CAAC,EAAGoyD,GAEnCxzD,EAAWg7D,SAAW1pD,KAAKk2D,WAAWxM,SACtCh7D,EAAW69D,aAAevsD,KAAKk2D,WAAW3J,oBACnC79D,EAAW49D,gBACX59D,EAAW+9D,eAElBzsD,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkBo/C,WAAYn1D,EAAA,EAGrDqS,EAAArM,UAAA4+E,sBAAA,WACI,IAAIvyE,EAAO,CAAC,EAEZA,EAAKzS,IAAM0R,KAAK0wE,OAAO+C,WACvB1yE,EAAK2yE,YAAc1zE,KAAK0wE,OAAOgD,YAC3B3yE,EAAK2yE,cACL3yE,EAAKoyE,cAAgBnzE,KAAK0wE,OAAOiD,sBAGrC5yE,EAAK6yE,MAAQ5zE,KAAK0wE,OAAOmD,aACzB9yE,EAAK+yE,WAAa9zE,KAAK0wE,OAAOoD,WAC9B/yE,EAAKgzE,oBAAsB/zE,KAAKswE,qBAChCvvE,EAAKizE,kBAAoBh0E,KAAKqwE,iBAAiB/jB,SAAS99D,OAExDwR,KAAKiwE,SAAS75C,KAAK48C,GAAAvuE,EAAkB2/C,gBAAiBrjD,EAAA,EAG9DA,CAAA,CAreA,GAueemhD,EAAAz9C,EAAAurE,EAAA,4CC1aAvrE,EAzEf,WAEI,SAAA1D,IAEIf,KAAKi0E,iBAAmB,EACxBj0E,KAAKk0E,gBAAkB,EACvBl0E,KAAKm0E,eAAiB,EACtBn0E,KAAKo0E,YAAc,EACnBp0E,KAAKq0E,iBAAmB,EAGpBzuB,KAAK0uB,aAAe1uB,KAAK0uB,YAAYn/E,IACrC6K,KAAKu0E,KAAO3uB,KAAK0uB,YAAYn/E,IAAI+zB,KAAK08B,KAAK0uB,aAE3Ct0E,KAAKu0E,KAAOrsE,KAAK/S,GAAA,CAyD7B,OArDI4L,EAAArM,UAAAsxC,MAAA,WACIhmC,KAAKi0E,iBAAmBj0E,KAAKk0E,gBAAkB,EAC/Cl0E,KAAKo0E,YAAcp0E,KAAKm0E,eAAiB,EACzCn0E,KAAKq0E,iBAAmB,GAG5BtzE,EAAArM,UAAA8/E,SAAA,SAASzzE,GACyB,IAA1Bf,KAAKi0E,kBACLj0E,KAAKi0E,iBAAmBj0E,KAAKu0E,OAC7Bv0E,KAAKk0E,gBAAkBl0E,KAAKi0E,iBAC5Bj0E,KAAKm0E,gBAAkBpzE,EACvBf,KAAKo0E,aAAerzE,GACbf,KAAKu0E,OAASv0E,KAAKk0E,gBAAkB,KAC5Cl0E,KAAKm0E,gBAAkBpzE,EACvBf,KAAKo0E,aAAerzE,IAEpBf,KAAKq0E,iBAAmBr0E,KAAKm0E,eAC7Bn0E,KAAKm0E,eAAiBpzE,EACtBf,KAAKo0E,aAAerzE,EACpBf,KAAKk0E,gBAAkBl0E,KAAKu0E,OAAA,EAIpCxkF,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACIsL,KAAKw0E,SAAS,GAEd,IAAIzzE,GAAmBf,KAAKu0E,OAASv0E,KAAKk0E,iBAAmB,IAE7D,OADuB,GAAnBnzE,IAAsBA,EAAkB,GACpCf,KAAKm0E,eAAiBpzE,EAAmB,sCAGrDhR,OAAA6N,eAAImD,EAAArM,UAAA,iBAAc,KAAlB,WAGI,OAFAsL,KAAKw0E,SAAS,GAEgB,IAA1Bx0E,KAAKq0E,iBACEr0E,KAAKq0E,iBAAmB,KAE3Br0E,KAAKu0E,OAASv0E,KAAKk0E,iBAAmB,IAG/Bl0E,KAAKy0E,YAGL,mCAKnB1kF,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACI,IAAIqM,GAAmBf,KAAKu0E,OAASv0E,KAAKi0E,kBAAoB,IAC9D,OAAQj0E,KAAKo0E,YAAcrzE,EAAmB,sCAGtDA,CAAA,CAvEA,4UCsPesnD,EA5Of,SAAAtnD,GAeI,SAAAmhD,EAAYA,EAAaxzD,GAAzB,IAAAyzD,EACIphD,EAAA3E,KAAA,KAAM,wBAAsB,YAC5B+lD,EAAK+M,IAAM,oBAEX/M,EAAKuyB,aAAexyB,EACpBC,EAAK6S,QAAUtmE,EACfyzD,EAAKgD,YAAA,EAELhD,EAAKwyB,eAAA,EACLxyB,EAAKyyB,iBAAmB,KACxBzyB,EAAK0yB,eAAiB,KACtB1yB,EAAK2yB,gBAAkB,IAgN/B,OA1OgC3sB,EAAAjG,EAAAnhD,GAErBmhD,EAAA6yB,YAAP,WACI,IAII,IAAIh0E,EAAiBshD,EAAA59C,EAAQuiD,QAAU3E,EAAA59C,EAAQi8C,QAAQ4F,OAAS,MAC5DpE,GAAwBG,EAAA59C,EAAQuiD,QAASjmD,EAC7C,OAAQ6kD,KAAKovB,OAASpvB,KAAKqvB,gBAAkB/yB,CAAA,CAC/C,MAAOnhD,GACL,OAAO,IAkBfmhD,EAAAxtD,UAAA00B,QAAA,WACQppB,KAAKylD,aACLzlD,KAAKoe,QAETrd,EAAArM,UAAM00B,QAAOhtB,KAAC,KAAD,EAGjB8lD,EAAAxtD,UAAAgxD,KAAA,SAAK3kD,EAAYmhD,GAAjB,IAAAxzD,EAAA,KACIsR,KAAKk1E,YAAcn0E,EACnBf,KAAKm1E,OAASjzB,EAEd,IAAIC,EAAYphD,EAAWzS,IACvB0R,KAAKg1D,QAAQogB,oBAAkD,MAA5Br0E,EAAWoyE,gBAC9ChxB,EAAYphD,EAAWoyE,eAG3B,IAAI54B,EAAav6C,KAAK00E,aAAaxnB,UAAU/K,EAAWD,GAEpDz9C,EAAU,IAAImhD,KAAKyvB,QAEvB,GAAkC,iBAAvB96B,EAAW+6B,QAAsB,CACxC,IAAIjzB,EAAgB9H,EAAW+6B,QAC/B,IAAK,IAAIntB,KAAO9F,EACRA,EAAc5tD,eAAe0zD,IAC7B1jD,EAAQwmD,OAAO9C,EAAK9F,EAAc8F,GAAA,CAK9C,IAAIE,EAAS,CACTz1D,OAAQ,MACR0iF,QAAS7wE,EACTwS,KAAM,OACNgI,MAAO,UAGPi9B,eAAgB,8BAIpB,GAAoC,iBAAzBl8C,KAAKg1D,QAAQsgB,QACpB,IAAK,IAAIntB,KAAOnoD,KAAKg1D,QAAQsgB,QACzB7wE,EAAQwmD,OAAO9C,EAAKnoD,KAAKg1D,QAAQsgB,QAAQntB,KAAA,IAK7CpnD,EAAWovE,OAEX9nB,EAAOpxC,KAAO,eAIdlW,EAAWqvE,kBACX/nB,EAAOktB,YAAc,WAIrBx0E,EAAWm7C,iBACXmM,EAAOnM,eAAiBn7C,EAAWm7C,gBAGnC0J,KAAK5nC,kBACLhe,KAAK40E,iBAAmB,IAAIhvB,KAAK5nC,gBACjCqqC,EAAOpqC,OAASje,KAAK40E,iBAAiB32D,QAG1Cje,KAAKklD,QAAUzC,EAAAloB,EAAagqB,YAC5BqB,KAAKovB,MAAMz6B,EAAWjsD,IAAK+5D,GAAQ3oC,MAAK,SAAC3e,GACrC,GAAIrS,EAAKimF,cAGL,OAFAjmF,EAAKw2D,QAAUzC,EAAAloB,EAAa+pB,WAC5BvjD,EAAID,KAAK00E,SAGb,GAAIz0E,EAAI00E,IAAO10E,EAAIwe,QAAU,KAAOxe,EAAIwe,QAAU,IAAM,CACpD,GAAIxe,EAAIzS,MAAQisD,EAAWjsD,KACnBI,EAAK22D,eAAgB,CACrB,IAAInD,EAAgBxzD,EAAKgmF,aAAagB,oBAAoB30E,EAAIzS,KAC9DI,EAAK22D,eAAenD,EAAA,CAI5B,IAAIC,EAAephD,EAAIu0E,QAAQv1E,IAAI,kBAUnC,OAToB,MAAhBoiD,IACAzzD,EAAKmmF,eAAiBzuB,SAASjE,GACH,IAAxBzzD,EAAKmmF,gBACDnmF,EAAK02D,uBACL12D,EAAK02D,sBAAsB12D,EAAKmmF,iBAKrCnmF,EAAKinF,MAAMv5E,KAAK1N,EAAMqS,EAAID,KAAK80E,YAAA,CAGtC,GADAlnF,EAAKw2D,QAAUzC,EAAAloB,EAAakqB,QACxB/1D,EAAK62D,SAGL,MAAM,IAAIpL,EAAAA,EAAiB,yCAA2Cp5C,EAAIwe,OAAS,IAAMxe,EAAI80E,YAF7FnnF,EAAK62D,SAAS9C,EAAAz9C,EAAa6/C,yBAA0B,CAACx2D,KAAM0S,EAAIwe,OAAQ6zD,IAAKryE,EAAI80E,YAAA,IAK1F33E,OAAM,SAAC6C,GACN,IAAIrS,EAAKkmF,mBAAoBlmF,EAAKkmF,iBAAiB32D,OAAOC,QAA1D,CAKA,GADAxvB,EAAKw2D,QAAUzC,EAAAloB,EAAakqB,QACxB/1D,EAAK62D,SAGL,MAAMxkD,EAFNrS,EAAK62D,SAAS9C,EAAAz9C,EAAa4/C,UAAW,CAACv2D,MAAO,EAAG+kF,IAAKryE,EAAE3B,SAAA,MAOpE8iD,EAAAxtD,UAAA0pB,MAAA,WAGI,GAFApe,KAAK20E,eAAA,GAED30E,KAAKklD,UAAYzC,EAAAloB,EAAaiqB,aAAenC,EAAA59C,EAAQ+hD,SAEjDxmD,KAAK40E,iBACL,IACI50E,KAAK40E,iBAAiBx2D,OAAA,CACxB,MAAOrd,GAAA,GAKrBmhD,EAAAxtD,UAAAihF,MAAA,SAAM50E,GAAN,IAAAmhD,EAAA,KACI,OAAOnhD,EAAO+0E,OAAOp2D,MAAK,SAAChxB,GACvB,GAAIA,EAAO8kC,KAEP,GAA4B,OAAxB0uB,EAAK2yB,gBAA2B3yB,EAAK4yB,gBAAkB5yB,EAAK2yB,eAAgB,CAE5E3yB,EAAKgD,QAAUzC,EAAAloB,EAAakqB,OAC5B,IAAItC,EAAOM,EAAAz9C,EAAa+/C,UACpBxK,EAAO,CAAClsD,MAAO,EAAG+kF,IAAK,+BAC3B,IAAIlxB,EAAKqD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBI,EAAK64B,KAFhClxB,EAAKqD,SAASpD,EAAM5H,EAAA,MAMxB2H,EAAKgD,QAAUzC,EAAAloB,EAAamqB,UACxBxC,EAAKsD,aACLtD,EAAKsD,YAAYtD,EAAKizB,OAAOY,KAAM7zB,EAAKizB,OAAOY,KAAO7zB,EAAK4yB,gBAAkB,OAGlF,CACH,GAAI5yB,EAAK0yB,kBAAoB1yB,EAAK0yB,iBAAiB32D,OAAOC,QAEtD,YADAgkC,EAAKgD,QAAUzC,EAAAloB,EAAamqB,WAEzB,IAAI,IAAAxC,EAAKyyB,cAEZ,OADAzyB,EAAKgD,QAAUzC,EAAAloB,EAAamqB,UACrB3jD,EAAOy0E,SAGlBtzB,EAAKgD,QAAUzC,EAAAloB,EAAaiqB,WAE5B,IAAI//C,EAAQ/V,EAAO4E,MAAMs8D,OACrBvN,EAAYH,EAAKizB,OAAOY,KAAO7zB,EAAK4yB,gBACxC5yB,EAAK4yB,iBAAmBrwE,EAAM6qD,WAE1BpN,EAAKoD,gBACLpD,EAAKoD,eAAe7gD,EAAO49C,EAAWH,EAAK4yB,iBAG/C5yB,EAAKyzB,MAAM50E,EAAA,KAEhB7C,OAAM,SAAC6C,GACN,GAAImhD,EAAK0yB,kBAAoB1yB,EAAK0yB,iBAAiB32D,OAAOC,QACtDgkC,EAAKgD,QAAUzC,EAAAloB,EAAamqB,eAIhC,GAAe,KAAX3jD,EAAE1S,OAAeg0D,EAAA59C,EAAQuiD,OAA7B,CAOA9E,EAAKgD,QAAUzC,EAAAloB,EAAakqB,OAC5B,IAAI/1D,EAAO,EACPyzD,EAAO,KAYX,GAVgB,KAAXphD,EAAE1S,MAA6B,kBAAd0S,EAAE3B,WACK,OAAxB8iD,EAAK2yB,gBACmB,OAAxB3yB,EAAK2yB,gBAA2B3yB,EAAK4yB,gBAAkB5yB,EAAK2yB,iBAI7DnmF,EAAO+zD,EAAAz9C,EAAa4/C,UACpBzC,EAAO,CAAC9zD,KAAM0S,EAAE1S,KAAM+kF,IAAKryE,EAAE3B,WAJ7B1Q,EAAO+zD,EAAAz9C,EAAa+/C,UACpB5C,EAAO,CAAC9zD,KAAM0S,EAAE1S,KAAM+kF,IAAK,iCAM3BlxB,EAAKqD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBgI,EAAKixB,KAFhClxB,EAAKqD,SAAS72D,EAAMyzD,EAAA,MAOpCD,CAAA,CA1OA,CAAgCO,EAAAh+C,8UCqLjB29C,EA3Lf,SAAArhD,GAeI,SAAAmhD,EAAYA,EAAaxzD,GAAzB,IAAAyzD,EACIphD,EAAA3E,KAAA,KAAM,2BAAyB,YAC/B+lD,EAAK+M,IAAM,mBAEX/M,EAAKuyB,aAAexyB,EACpBC,EAAK6S,QAAUtmE,EACfyzD,EAAKgD,YAAA,EAELhD,EAAK6zB,KAAO,KACZ7zB,EAAKwyB,eAAA,EACLxyB,EAAK0yB,eAAiB,KACtB1yB,EAAK2yB,gBAAkB,IA+J/B,OAzL+BvsB,EAAArG,EAAAnhD,GAEpBmhD,EAAA6yB,YAAP,WACI,IACI,IAAIh0E,EAAM,IAAIk1E,eAId,OAFAl1E,EAAI2kD,KAAK,MAAO,0BAChB3kD,EAAIm1E,aAAe,0BACU,4BAArBn1E,EAAIm1E,YAAA,CACd,MAAOn1E,GAEL,OADAw5C,EAAA91C,EAAIw+C,EAAE,mBAAoBliD,EAAE3B,UAAA,CACrB,GAkBf8iD,EAAAxtD,UAAA00B,QAAA,WACQppB,KAAKylD,aACLzlD,KAAKoe,QAELpe,KAAKg2E,OACLh2E,KAAKg2E,KAAKG,mBAAqB,KAC/Bn2E,KAAKg2E,KAAKI,WAAa,KACvBp2E,KAAKg2E,KAAKK,UAAY,KACtBr2E,KAAKg2E,KAAK7tC,QAAU,KACpBnoC,KAAKg2E,KAAO,MAEhBj1E,EAAArM,UAAM00B,QAAOhtB,KAAC,KAAD,EAGjB8lD,EAAAxtD,UAAAgxD,KAAA,SAAK3kD,EAAYmhD,GACbliD,KAAKk1E,YAAcn0E,EACnBf,KAAKm1E,OAASjzB,EAEd,IAAIxzD,EAAYqS,EAAWzS,IACvB0R,KAAKg1D,QAAQogB,oBAAkD,MAA5Br0E,EAAWoyE,gBAC9CzkF,EAAYqS,EAAWoyE,eAG3B,IAAIhxB,EAAaniD,KAAK00E,aAAaxnB,UAAUx+D,EAAWwzD,GACxDliD,KAAKs2E,YAAcn0B,EAAW7zD,IAE9B,IAAIisD,EAAMv6C,KAAKg2E,KAAO,IAAIC,eAe1B,GAdA17B,EAAImL,KAAK,MAAOvD,EAAW7zD,KAAA,GAC3BisD,EAAI27B,aAAe,0BACnB37B,EAAI47B,mBAAqBn2E,KAAKu2E,oBAAoBrtD,KAAKlpB,MACvDu6C,EAAI67B,WAAap2E,KAAKw2E,YAAYttD,KAAKlpB,MACvCu6C,EAAI87B,UAAYr2E,KAAKy2E,WAAWvtD,KAAKlpB,MACrCu6C,EAAIpS,QAAUnoC,KAAK02E,YAAYxtD,KAAKlpB,MAKhCe,EAAWqvE,kBACX71B,EAAI61B,iBAAA,GAG0B,iBAAvBjuB,EAAWmzB,QAAsB,CACxC,IAAI7wE,EAAU09C,EAAWmzB,QAEzB,IAAK,IAAIjzB,KAAO59C,EACRA,EAAQhQ,eAAe4tD,IACvB9H,EAAIo8B,iBAAiBt0B,EAAK59C,EAAQ49C,GAAA,CAM9C,GAAoC,iBAAzBriD,KAAKg1D,QAAQsgB,QAGpB,IAAK,IAAIjzB,KAFL59C,EAAUzE,KAAKg1D,QAAQsgB,QAGnB7wE,EAAQhQ,eAAe4tD,IACvB9H,EAAIo8B,iBAAiBt0B,EAAK59C,EAAQ49C,IAK9CriD,KAAKklD,QAAUzC,EAAAloB,EAAagqB,YAC5BhK,EAAIq8B,MAAA,EAGR10B,EAAAxtD,UAAA0pB,MAAA,WACIpe,KAAK20E,eAAA,EACD30E,KAAKg2E,MACLh2E,KAAKg2E,KAAK53D,QAEdpe,KAAKklD,QAAUzC,EAAAloB,EAAamqB,SAAA,EAGhCxC,EAAAxtD,UAAA6hF,oBAAA,SAAoBx1E,GAChB,IAAImhD,EAAMnhD,EAAEkD,OAEZ,GAAuB,IAAnBi+C,EAAI1f,WAAkB,CACtB,GAAuB,MAAnB0f,EAAI20B,aAA4B30B,EAAI20B,cAAgB72E,KAAKs2E,aACrDt2E,KAAKqlD,eAAgB,CACrB,IAAI32D,EAAgBsR,KAAK00E,aAAagB,oBAAoBxzB,EAAI20B,aAC9D72E,KAAKqlD,eAAe32D,EAAA,CAI5B,GAAmB,IAAfwzD,EAAI3iC,SAAiB2iC,EAAI3iC,OAAS,KAAO2iC,EAAI3iC,OAAS,KAAM,CAE5D,GADAvf,KAAKklD,QAAUzC,EAAAloB,EAAakqB,QACxBzkD,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiB,wCAA0C+H,EAAI3iC,OAAS,IAAM2iC,EAAI2zB,YAF5F71E,KAAKulD,SAAS9C,EAAAz9C,EAAa6/C,yBAA0B,CAACx2D,KAAM6zD,EAAI3iC,OAAQ6zD,IAAKlxB,EAAI2zB,YAAA,MAKrF71E,KAAKklD,QAAUzC,EAAAloB,EAAaiqB,UAAA,GAKxCtC,EAAAxtD,UAAA8hF,YAAA,SAAYz1E,GACR,GAAIf,KAAKklD,UAAYzC,EAAAloB,EAAakqB,OAAlC,CAK4B,OAAxBzkD,KAAK60E,gBACW,OAAZ9zE,EAAE+1E,OAA8B,IAAZ/1E,EAAE+1E,QACtB92E,KAAK60E,eAAiB9zE,EAAE+1E,MACpB92E,KAAKolD,uBACLplD,KAAKolD,sBAAsBplD,KAAK60E,iBAK5C,IAAI3yB,EAAQnhD,EAAEkD,OAAO8yE,SACjBroF,EAAYsR,KAAKm1E,OAAOY,KAAO/1E,KAAK80E,gBACxC90E,KAAK80E,iBAAmB5yB,EAAMoN,WAE1BtvD,KAAKslD,gBACLtlD,KAAKslD,eAAepD,EAAOxzD,EAAWsR,KAAK80E,gBAAA,GAInD5yB,EAAAxtD,UAAA+hF,WAAA,SAAW11E,IAAA,IACHf,KAAK20E,cAGE30E,KAAKklD,UAAYzC,EAAAloB,EAAakqB,SAIzCzkD,KAAKklD,QAAUzC,EAAAloB,EAAamqB,UACxB1kD,KAAKwlD,aACLxlD,KAAKwlD,YAAYxlD,KAAKm1E,OAAOY,KAAM/1E,KAAKm1E,OAAOY,KAAO/1E,KAAK80E,gBAAkB,IAR7E90E,KAAK20E,eAAA,CAAgB,EAY7BzyB,EAAAxtD,UAAAgiF,YAAA,SAAY31E,GACRf,KAAKklD,QAAUzC,EAAAloB,EAAakqB,OAC5B,IAAIvC,EAAO,EACPxzD,EAAO,KAUX,GARIsR,KAAK60E,gBAAkB9zE,EAAEi2E,OAASh3E,KAAK60E,gBACvC3yB,EAAOO,EAAAz9C,EAAa+/C,UACpBr2D,EAAO,CAACL,MAAO,EAAG+kF,IAAK,uCAEvBlxB,EAAOO,EAAAz9C,EAAa4/C,UACpBl2D,EAAO,CAACL,MAAO,EAAG+kF,IAAKryE,EAAElB,YAAYlO,KAAO,IAAMoP,EAAEvP,QAGpDwO,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBzrD,EAAK0kF,KAFhCpzE,KAAKulD,SAASrD,EAAMxzD,EAAA,EAMhCwzD,CAAA,CAzLA,CAA+BO,EAAAh+C,8UCsVhB21C,EArVf,SAAAr5C,GAcI,SAAAmhD,EAAYA,EAAaxzD,GAAzB,IAAAyzD,EACIphD,EAAA3E,KAAA,KAAM,qBAAmB,YACzB+lD,EAAK+M,IAAM,cAEX/M,EAAKuyB,aAAexyB,EACpBC,EAAK6S,QAAUtmE,EACfyzD,EAAKgD,YAAA,EAELhD,EAAK80B,iBAAmB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE7E90B,EAAK+0B,oBAAsB,IAC3B/0B,EAAKg1B,wBAA0B,EAC/Bh1B,EAAKi1B,qBAAuB,EAE5Bj1B,EAAK6zB,KAAO,KACZ7zB,EAAKk1B,cAAgB,IAAI5yE,EAEzB09C,EAAKwyB,eAAA,EACLxyB,EAAKm1B,qBAAA,EACLn1B,EAAKo1B,sBAAA,EAELp1B,EAAKq1B,mBAAqB,KAC1Br1B,EAAKs1B,sBAAwB,KAC7Bt1B,EAAKu1B,qBAAuB,KAC5Bv1B,EAAKw1B,aAAe,KACpBx1B,EAAK0yB,eAAiB,KACtB1yB,EAAK2yB,gBAAkB,EACvB3yB,EAAKy1B,gBAAkB,IAyS/B,OAnV0Br9C,EAAA2nB,EAAAnhD,GAEfmhD,EAAA6yB,YAAP,WACI,IACI,IAAIh0E,EAAM,IAAIk1E,eAGd,OAFAl1E,EAAI2kD,KAAK,MAAO,0BAChB3kD,EAAIm1E,aAAe,cACU,gBAArBn1E,EAAIm1E,YAAA,CACd,MAAOn1E,GAEL,OADAw5C,EAAA91C,EAAIw+C,EAAE,cAAeliD,EAAE3B,UAAA,CAChB,GAmCf8iD,EAAAxtD,UAAA00B,QAAA,WACQppB,KAAKylD,aACLzlD,KAAKoe,QAELpe,KAAKg2E,OACLh2E,KAAKg2E,KAAKG,mBAAqB,KAC/Bn2E,KAAKg2E,KAAKI,WAAa,KACvBp2E,KAAKg2E,KAAK9tC,OAAS,KACnBloC,KAAKg2E,KAAK7tC,QAAU,KACpBnoC,KAAKg2E,KAAO,MAEhBj1E,EAAArM,UAAM00B,QAAOhtB,KAAC,KAAD,EAGjBrM,OAAA6N,eAAIskD,EAAAxtD,UAAA,eAAY,KAAhB,WACI,OAAOsL,KAAKq3E,cAAcQ,cAAA,kCAG9B31B,EAAAxtD,UAAAgxD,KAAA,SAAK3kD,EAAYmhD,GACbliD,KAAKk1E,YAAcn0E,EACnBf,KAAKm1E,OAASjzB,EACdliD,KAAKklD,QAAUzC,EAAAloB,EAAagqB,YAE5B,IAAI71D,GAAA,EAC6B,MAA7BsR,KAAKk1E,YAAYhF,UAAuD,IAA9BlwE,KAAKk1E,YAAYhF,WAC3DxhF,GAAA,EACAsR,KAAK23E,aAAe33E,KAAKk1E,YAAYhF,UAGpClwE,KAAKu3E,sBAAyB7oF,EAM/BsR,KAAK83E,iBAJL93E,KAAKs3E,qBAAA,EACLt3E,KAAK+3E,cAAc/3E,KAAKk1E,YAAa,CAACa,KAAM,EAAGiC,IAAK,MAO5D91B,EAAAxtD,UAAAojF,cAAA,WACI,IAAI/2E,EAAuC,KAA3Bf,KAAKk3E,oBAEjBh1B,EAAOliD,KAAKm1E,OAAOY,KAAO/1E,KAAK80E,gBAC/BpmF,EAAKwzD,EAAOnhD,EAEW,MAAvBf,KAAK60E,gBACDnmF,EAAKsR,KAAKm1E,OAAOY,MAAQ/1E,KAAK60E,iBAC9BnmF,EAAKsR,KAAKm1E,OAAOY,KAAO/1E,KAAK60E,eAAiB,GAItD70E,KAAK03E,qBAAuB,CAAC3B,KAAI7zB,EAAE81B,GAAEtpF,GACrCsR,KAAK+3E,cAAc/3E,KAAKk1E,YAAal1E,KAAK03E,qBAAA,EAG9Cx1B,EAAAxtD,UAAAqjF,cAAA,SAAch3E,EAAYmhD,GACtBliD,KAAK43E,gBAAkB,EAEvB,IAAIlpF,EAAYqS,EAAWzS,IACvB0R,KAAKg1D,QAAQogB,qBACqB,MAA9Bp1E,KAAKy3E,sBACL/oF,EAAYsR,KAAKy3E,sBACkB,MAA5B12E,EAAWoyE,gBAClBzkF,EAAYqS,EAAWoyE,gBAI/B,IAAIhxB,EAAaniD,KAAK00E,aAAaxnB,UAAUx+D,EAAWwzD,GACxDliD,KAAKw3E,mBAAqBr1B,EAAW7zD,IAErC,IAAIisD,EAAMv6C,KAAKg2E,KAAO,IAAIC,eAY1B,GAXA17B,EAAImL,KAAK,MAAOvD,EAAW7zD,KAAA,GAC3BisD,EAAI27B,aAAe,cACnB37B,EAAI47B,mBAAqBn2E,KAAKu2E,oBAAoBrtD,KAAKlpB,MACvDu6C,EAAI67B,WAAap2E,KAAKw2E,YAAYttD,KAAKlpB,MACvCu6C,EAAIrS,OAASloC,KAAKi4E,QAAQ/uD,KAAKlpB,MAC/Bu6C,EAAIpS,QAAUnoC,KAAK02E,YAAYxtD,KAAKlpB,MAEhCe,EAAWqvE,kBACX71B,EAAI61B,iBAAA,GAG0B,iBAAvBjuB,EAAWmzB,QAAsB,CACxC,IAAI7wE,EAAU09C,EAAWmzB,QAEzB,IAAK,IAAI7yB,KAAOh+C,EACRA,EAAQhQ,eAAeguD,IACvBlI,EAAIo8B,iBAAiBl0B,EAAKh+C,EAAQg+C,GAAA,CAM9C,GAAoC,iBAAzBziD,KAAKg1D,QAAQsgB,QAGpB,IAAK,IAAI7yB,KAFLh+C,EAAUzE,KAAKg1D,QAAQsgB,QAGnB7wE,EAAQhQ,eAAeguD,IACvBlI,EAAIo8B,iBAAiBl0B,EAAKh+C,EAAQg+C,IAK9ClI,EAAIq8B,MAAA,EAGR10B,EAAAxtD,UAAA0pB,MAAA,WACIpe,KAAK20E,eAAA,EACL30E,KAAK6xE,iBACL7xE,KAAKklD,QAAUzC,EAAAloB,EAAamqB,SAAA,EAGhCxC,EAAAxtD,UAAAm9E,eAAA,WACQ7xE,KAAKg2E,OACLh2E,KAAKg2E,KAAKG,mBAAqB,KAC/Bn2E,KAAKg2E,KAAKI,WAAa,KACvBp2E,KAAKg2E,KAAK9tC,OAAS,KACnBloC,KAAKg2E,KAAK7tC,QAAU,KACpBnoC,KAAKg2E,KAAK53D,QACVpe,KAAKg2E,KAAO,OAIpB9zB,EAAAxtD,UAAA6hF,oBAAA,SAAoBx1E,GAChB,IAAImhD,EAAMnhD,EAAEkD,OAEZ,GAAuB,IAAnBi+C,EAAI1f,WAAkB,CACtB,GAAuB,MAAnB0f,EAAI20B,YAA0B,CAC9B,IAAInoF,EAAgBsR,KAAK00E,aAAagB,oBAAoBxzB,EAAI20B,aAC1D30B,EAAI20B,cAAgB72E,KAAKw3E,oBAAsB9oF,IAAkBsR,KAAKy3E,wBACtEz3E,KAAKy3E,sBAAwB/oF,EACzBsR,KAAKqlD,gBACLrlD,KAAKqlD,eAAe32D,GAAA,CAKhC,GAAKwzD,EAAI3iC,QAAU,KAAO2iC,EAAI3iC,QAAU,IAAM,CAC1C,GAAIvf,KAAKs3E,oBACL,OAEJt3E,KAAKklD,QAAUzC,EAAAloB,EAAaiqB,UAAA,KACzB,CAEH,GADAxkD,KAAKklD,QAAUzC,EAAAloB,EAAakqB,QACxBzkD,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiB,mCAAqC+H,EAAI3iC,OAAS,IAAM2iC,EAAI2zB,YAFvF71E,KAAKulD,SAAS9C,EAAAz9C,EAAa6/C,yBAA0B,CAACx2D,KAAM6zD,EAAI3iC,OAAQ6zD,IAAKlxB,EAAI2zB,YAAA,IAQjG3zB,EAAAxtD,UAAA8hF,YAAA,SAAYz1E,GACR,GAAIf,KAAKklD,UAAYzC,EAAAloB,EAAakqB,OAAlC,CAKA,GAA4B,OAAxBzkD,KAAK60E,eAAyB,CAC9B,IAAI3yB,GAAA,EAEJ,GAAIliD,KAAKs3E,oBAAqB,CAC1Bt3E,KAAKs3E,qBAAA,EACLt3E,KAAKu3E,sBAAA,EACLr1B,GAAA,EAEA,IAAIxzD,EAAQqS,EAAE+1E,MACd92E,KAAK6xE,iBACQ,MAATnjF,EAA0B,IAAVA,IAChBsR,KAAK23E,aAAejpF,EAAA,CAW5B,IANwB,IAApBsR,KAAKm1E,OAAO6C,GACZh4E,KAAK60E,eAAiB70E,KAAK23E,aAAe33E,KAAKm1E,OAAOY,KAEtD/1E,KAAK60E,eAAiB70E,KAAKm1E,OAAO6C,GAAKh4E,KAAKm1E,OAAOY,KAAO,EAG1D7zB,EAEA,YADAliD,KAAK83E,gBAGL93E,KAAKolD,uBACLplD,KAAKolD,sBAAsBplD,KAAK60E,eAAA,CAIxC,IAAI1yB,EAAQphD,EAAEi2E,OAASh3E,KAAK43E,gBAC5B53E,KAAK43E,gBAAkB72E,EAAEi2E,OACzBh3E,KAAKq3E,cAAc7C,SAASryB,EAAA,GAGhCD,EAAAxtD,UAAAwjF,gBAAA,SAAgBn3E,GACZ,IAAImhD,EAAOliD,KAAKi3E,iBACZvoF,EAAOwzD,EAAK1zD,OAAS,EACrB2zD,EAAM,EACN5H,EAAS,EACT91C,EAAS/V,EAEb,GAAIqS,EAAQmhD,EAAK,GACb,OAAOA,EAAK,GAGhB,KAAO3H,GAAU91C,GAAQ,CAErB,IADA09C,EAAM5H,EAAS5jD,KAAKi0D,OAAOnmD,EAAS81C,GAAU,MAClC7rD,GAASqS,GAASmhD,EAAKC,IAAQphD,EAAQmhD,EAAKC,EAAM,GAC1D,OAAOD,EAAKC,GACLD,EAAKC,GAAOphD,EACnBw5C,EAAS4H,EAAM,EAEf19C,EAAS09C,EAAM,IAK3BD,EAAAxtD,UAAAujF,QAAA,SAAQl3E,GACJ,GAAIf,KAAKklD,UAAYzC,EAAAloB,EAAakqB,OAKlC,GAAIzkD,KAAKs3E,oBACLt3E,KAAKs3E,qBAAA,MADT,CAKAt3E,KAAK43E,gBAAkB,EACvB,IAAI11B,EAAOliD,KAAKq3E,cAAcQ,eAS9B,GARa,IAAT31B,IACAliD,KAAKo3E,uBACDp3E,KAAKo3E,sBAAwB,IAE7Bl1B,EAAOliD,KAAKq3E,cAAc5C,cAIrB,IAATvyB,EAAY,CACZ,IAAIxzD,EAAasR,KAAKk4E,gBAAgBh2B,GAClCliD,KAAKm3E,0BAA4BzoF,IACjCsR,KAAKm3E,wBAA0BzoF,EAC/BsR,KAAKk3E,oBAAsBxoF,EAAA,CAInC,IAAIyzD,EAAQphD,EAAEkD,OAAO8yE,SACjBx8B,EAAYv6C,KAAKm1E,OAAOY,KAAO/1E,KAAK80E,gBACxC90E,KAAK80E,iBAAmB3yB,EAAMmN,WAE9B,IAAI7qD,GAAA,EAEuB,MAAvBzE,KAAK60E,gBAA0B70E,KAAK80E,gBAAkB90E,KAAK60E,eAE3D70E,KAAK83E,gBAELrzE,GAAA,EAIAzE,KAAKslD,gBACLtlD,KAAKslD,eAAenD,EAAO5H,EAAWv6C,KAAK80E,iBAG3CrwE,IACAzE,KAAKklD,QAAUzC,EAAAloB,EAAamqB,UACxB1kD,KAAKwlD,aACLxlD,KAAKwlD,YAAYxlD,KAAKm1E,OAAOY,KAAM/1E,KAAKm1E,OAAOY,KAAO/1E,KAAK80E,gBAAkB,MAKzF5yB,EAAAxtD,UAAAgiF,YAAA,SAAY31E,GACRf,KAAKklD,QAAUzC,EAAAloB,EAAakqB,OAC5B,IAAIvC,EAAO,EACPxzD,EAAO,KAWX,GATIsR,KAAK60E,gBAAkB70E,KAAK80E,gBAAkB,GACvB90E,KAAK80E,gBAAkB90E,KAAK60E,gBACnD3yB,EAAOO,EAAAz9C,EAAa+/C,UACpBr2D,EAAO,CAACL,MAAO,EAAG+kF,IAAK,gCAEvBlxB,EAAOO,EAAAz9C,EAAa4/C,UACpBl2D,EAAO,CAACL,MAAO,EAAG+kF,IAAKryE,EAAElB,YAAYlO,KAAO,IAAMoP,EAAEvP,QAGpDwO,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBzrD,EAAK0kF,KAFhCpzE,KAAKulD,SAASrD,EAAMxzD,EAAA,EAMhCwzD,CAAA,CAnVA,CAA0BO,EAAAh+C,8UC8HX22C,EA/Hf,SAAAr6C,GAUI,SAAAmhD,IAAA,IAAAA,EACInhD,EAAA3E,KAAA,KAAM,qBAAmB,YACzB8lD,EAAKgN,IAAM,kBAEXhN,EAAKiD,YAAA,EAELjD,EAAKi2B,IAAM,KACXj2B,EAAKyyB,eAAA,EACLzyB,EAAK4yB,gBAAkB,IA2G/B,OA7H8B17E,EAAA8oD,EAAAnhD,GAEnBmhD,EAAA6yB,YAAP,WACI,IACI,YAAO,IAAQnvB,KAAKwyB,SAAA,CACtB,MAAOr3E,GACL,OAAO,IAefmhD,EAAAxtD,UAAA00B,QAAA,WACQppB,KAAKm4E,KACLn4E,KAAKoe,QAETrd,EAAArM,UAAM00B,QAAOhtB,KAAC,KAAD,EAGjB8lD,EAAAxtD,UAAAgxD,KAAA,SAAK3kD,GACD,IACI,IAAImhD,EAAKliD,KAAKm4E,IAAM,IAAIvyB,KAAKwyB,UAAUr3E,EAAWzS,KAClD4zD,EAAGm2B,WAAa,cAChBn2B,EAAGo2B,OAASt4E,KAAKu4E,iBAAiBrvD,KAAKlpB,MACvCkiD,EAAGs2B,QAAUx4E,KAAKy4E,kBAAkBvvD,KAAKlpB,MACzCkiD,EAAGw2B,UAAY14E,KAAK24E,oBAAoBzvD,KAAKlpB,MAC7CkiD,EAAG/Z,QAAUnoC,KAAK44E,kBAAkB1vD,KAAKlpB,MAEzCA,KAAKklD,QAAUzC,EAAAloB,EAAagqB,WAAA,CAC9B,MAAOxjD,GACLf,KAAKklD,QAAUzC,EAAAloB,EAAakqB,OAE5B,IAAI/1D,EAAO,CAACL,KAAM0S,EAAE1S,KAAM+kF,IAAKryE,EAAE3B,SAEjC,IAAIY,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBzrD,EAAK0kF,KAFhCpzE,KAAKulD,SAAS9C,EAAAz9C,EAAa4/C,UAAWl2D,EAAA,GAOlDwzD,EAAAxtD,UAAA0pB,MAAA,WACI,IAAIrd,EAAKf,KAAKm4E,KACVp3E,GAAyB,IAAlBA,EAAGyhC,YAAsC,IAAlBzhC,EAAGyhC,aACjCxiC,KAAK20E,eAAA,EACL5zE,EAAG83E,SAGP74E,KAAKm4E,IAAM,KACXn4E,KAAKklD,QAAUzC,EAAAloB,EAAamqB,SAAA,EAGhCxC,EAAAxtD,UAAA6jF,iBAAA,SAAiBx3E,GACbf,KAAKklD,QAAUzC,EAAAloB,EAAaiqB,UAAA,EAGhCtC,EAAAxtD,UAAA+jF,kBAAA,SAAkB13E,IAAA,IACVf,KAAK20E,eAKT30E,KAAKklD,QAAUzC,EAAAloB,EAAamqB,UAExB1kD,KAAKwlD,aACLxlD,KAAKwlD,YAAY,EAAGxlD,KAAK80E,gBAAkB,IAP3C90E,KAAK20E,eAAA,CAAgB,EAW7BzyB,EAAAxtD,UAAAikF,oBAAA,SAAoB53E,GAApB,IAAAmhD,EAAA,KACI,GAAInhD,EAAEpO,gBAAgBo7D,YAClB/tD,KAAK84E,qBAAqB/3E,EAAEpO,WACzB,GAAIoO,EAAEpO,gBAAgBomF,KAAM,CAC/B,IAAIrqF,EAAS,IAAIsqF,WACjBtqF,EAAOw5C,OAAS,WACZga,EAAK42B,qBAAqBpqF,EAAOw/B,OAAA,EAErCx/B,EAAOuqF,kBAAkBl4E,EAAEpO,KAAA,KACxB,CACHqN,KAAKklD,QAAUzC,EAAAloB,EAAakqB,OAC5B,IAAItC,EAAO,CAAC9zD,MAAO,EAAG+kF,IAAK,uCAAyCryE,EAAEpO,KAAKkN,YAAYlO,MAEvF,IAAIqO,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiBgI,EAAKixB,KAFhCpzE,KAAKulD,SAAS9C,EAAAz9C,EAAa4/C,UAAWzC,EAAA,GAOlDD,EAAAxtD,UAAAokF,qBAAA,SAAqB/3E,GACjB,IAAImhD,EAAQnhD,EACRrS,EAAYsR,KAAK80E,gBACrB90E,KAAK80E,iBAAmB5yB,EAAMoN,WAE1BtvD,KAAKslD,gBACLtlD,KAAKslD,eAAepD,EAAOxzD,EAAWsR,KAAK80E,gBAAA,EAInD5yB,EAAAxtD,UAAAkkF,kBAAA,SAAkB73E,GACdf,KAAKklD,QAAUzC,EAAAloB,EAAakqB,OAE5B,IAAIvC,EAAO,CACP7zD,KAAM0S,EAAE1S,KACR+kF,IAAKryE,EAAE3B,SAGX,IAAIY,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiB+H,EAAKkxB,KAFhCpzE,KAAKulD,SAAS9C,EAAAz9C,EAAa4/C,UAAW1C,EAAA,EAMlDA,CAAA,CA7HA,CAA8BO,EAAAh+C,GC4BfojD,EAjCf,WAEI,SAAA9mD,EAAYA,GACRf,KAAKk5E,WAAan4E,IAAA,CAAa,CA4BvC,OAzBIA,EAAArM,UAAAw4D,UAAA,SAAUnsD,EAAKmhD,GACX,IAAIxzD,EAAU,CAAC,EAEf,GAAmB,IAAfwzD,EAAM6zB,OAA4B,IAAd7zB,EAAM81B,GAAW,CACrC,IAAI71B,OAAA,EAEAA,GADc,IAAdD,EAAM81B,GACE,SAAS91B,EAAM6zB,KAAKr8E,WAAU,IAAIwoD,EAAM81B,GAAGt+E,WAE3C,SAASwoD,EAAM6zB,KAAKr8E,WAAU,IAE1ChL,EAAeyqF,MAAIh3B,CAAA,MACZniD,KAAKk5E,aACZxqF,EAAeyqF,MAAI,YAGvB,MAAO,CACH7qF,IAAKyS,EACLu0E,QAAS5mF,EAAA,EAIjBqS,EAAArM,UAAAghF,oBAAA,SAAoB30E,GAChB,OAAOA,CAAA,EAGfA,CAAA,CA/BA,GCkEesiD,EAlEf,WAEI,SAAAtiD,EAAYA,EAAYmhD,GACpBliD,KAAKo5E,WAAar4E,EAClBf,KAAKq5E,SAAWn3B,CAAA,CA4DxB,OAzDInhD,EAAArM,UAAAw4D,UAAA,SAAUnsD,EAASmhD,GACf,IAAIxzD,EAAMqS,EAEV,GAAmB,IAAfmhD,EAAM6zB,OAA4B,IAAd7zB,EAAM81B,GAAW,CACrC,IAAI71B,GAAA,GACsB,IAAtBzzD,EAAIwO,QAAQ,OACZxO,GAAO,IACPyzD,GAAA,GAGAA,IACAzzD,GAAO,KAGXA,GAAUsR,KAAKo5E,WAAU,IAAIl3B,EAAM6zB,KAAKr8E,YAEtB,IAAdwoD,EAAM81B,KACNtpF,GAAO,IAAIsR,KAAKq5E,SAAQ,IAAIn3B,EAAM81B,GAAGt+E,WAAA,CAI7C,MAAO,CACHpL,IAAKI,EACL4mF,QAAS,CAAC,EAAD,EAIjBv0E,EAAArM,UAAAghF,oBAAA,SAAoB30E,GAChB,IAAImhD,EAAUnhD,EAAUpC,MAAM,KAAK,GAC/BjQ,OAAA,EAEAyzD,EAAaphD,EAAU7D,QAAQ,MACf,IAAhBilD,IACAzzD,EAASqS,EAAUu4E,UAAUn3B,EAAa,IAG9C,IAAI5H,EAAe,GAEnB,GAAc,MAAV7rD,GAAuBA,EAAOF,OAAS,EAGvC,IAFA,IAAIiW,EAAQ/V,EAAOiQ,MAAM,KAEhB8jD,EAAI,EAAGA,EAAIh+C,EAAMjW,OAAQi0D,IAAK,CACnC,IAAIJ,EAAO59C,EAAMg+C,GAAG9jD,MAAM,KACtBw7C,EAAcsI,EAAI,EAElBJ,EAAK,KAAOriD,KAAKo5E,YAAc/2B,EAAK,KAAOriD,KAAKq5E,WAC5Cl/B,IACAI,GAAgB,KAEpBA,GAAgB91C,EAAMg+C,GAAA,CAKlC,OAAgC,IAAxBlI,EAAa/rD,OAAgB0zD,EAAUA,EAAU,IAAM3H,CAAA,EAGvEx5C,CAAA,CAhEA,GCuBAoQ,EAAA,WAEI,SAAApQ,EAAYA,EAAYmhD,EAAQxzD,GAC5BsR,KAAKkvD,IAAM,eAEXlvD,KAAKg1D,QAAU9S,EACfliD,KAAKu5E,WAAa7qF,EAElBsR,KAAKw5E,kBAAoB,MACM,MAA3Bt3B,EAAOu3B,kBAAiCv3B,EAAOu3B,iBAAmB,IAElEz5E,KAAKw5E,kBAAoBt3B,EAAOu3B,kBAGpCz5E,KAAK05E,WAAa,EAClB15E,KAAK25E,WAAa35E,KAAKw5E,kBACvBx5E,KAAK45E,YAAc,QACnB55E,KAAK65E,aAAe,IAAI9rB,YAAY/tD,KAAK45E,aACzC55E,KAAK85E,gBAAkB,EACvB95E,KAAK+5E,cAAA,GAAe,IAChB73B,EAAO83B,oBACPh6E,KAAK+5E,cAAA,GAGT/5E,KAAKi6E,QAAU,KACfj6E,KAAKk6E,aAAe,KACpBl6E,KAAK00E,aAAe,KAEpB10E,KAAKk1E,YAAcn0E,EACnBf,KAAKm6E,gBAAkB,iBAAiB99E,KAAK0E,EAAWzS,KACxD0R,KAAKo6E,gBAAkBr5E,EAAWmvE,SAAWnvE,EAAWmvE,SAAW,KACnElwE,KAAK23E,aAAe33E,KAAKo6E,gBACzBp6E,KAAKq6E,kBAAA,EACLr6E,KAAKs6E,cAAgB,KACrBt6E,KAAKu6E,eAAiB,KAEtBv6E,KAAKw6E,iBAAmB,EACxBx6E,KAAKq3E,cAAgB,IAAI5yE,EACzBzE,KAAKy6E,oBAAsB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAE9Fz6E,KAAK06E,yBAAA,EAEL16E,KAAK26E,SAAA,EACL36E,KAAK46E,YAAc,EAEnB56E,KAAKslD,eAAiB,KACtBtlD,KAAK66E,UAAY,KACjB76E,KAAKulD,SAAW,KAChBvlD,KAAKwlD,YAAc,KACnBxlD,KAAK86E,YAAc,KACnB96E,KAAK+6E,qBAAuB,KAE5B/6E,KAAKg7E,qBACLh7E,KAAKi7E,gBACLj7E,KAAKk7E,eAAA,CAqiBb,OAliBIn6E,EAAArM,UAAA00B,QAAA,WACQppB,KAAKi6E,QAAQx0B,aACbzlD,KAAKi6E,QAAQ77D,QAEjBpe,KAAKi6E,QAAQ7wD,UACbppB,KAAKi6E,QAAU,KACfj6E,KAAKk6E,aAAe,KACpBl6E,KAAKk1E,YAAc,KACnBl1E,KAAK65E,aAAe,KACpB75E,KAAK05E,WAAa15E,KAAK25E,WAAa35E,KAAK45E,YAAc55E,KAAK85E,gBAAkB,EAC9E95E,KAAKs6E,cAAgB,KACrBt6E,KAAKq3E,cAAgB,KAErBr3E,KAAK06E,yBAAA,EAEL16E,KAAKslD,eAAiB,KACtBtlD,KAAK66E,UAAY,KACjB76E,KAAKulD,SAAW,KAChBvlD,KAAKwlD,YAAc,KACnBxlD,KAAK86E,YAAc,KACnB96E,KAAK+6E,qBAAuB,KAE5B/6E,KAAKu5E,WAAa,MAGtBx4E,EAAArM,UAAA+wD,UAAA,WACI,OAAOzlD,KAAKi6E,SAAWj6E,KAAKi6E,QAAQx0B,cAAgBzlD,KAAK26E,OAAA,EAG7D55E,EAAArM,UAAAs9E,SAAA,WACI,OAAOhyE,KAAK26E,OAAA,EAGhB5qF,OAAA6N,eAAImD,EAAArM,UAAA,SAAM,KAAV,WACI,OAAOsL,KAAKi6E,QAAQ16D,MAAA,kCAGxBxvB,OAAA6N,eAAImD,EAAArM,UAAA,YAAS,KAAb,WACI,OAAOsL,KAAKu5E,UAAA,MAGhB,SAAcx4E,GACVf,KAAKu5E,WAAax4E,CAAA,kCAItBhR,OAAA6N,eAAImD,EAAArM,UAAA,gBAAa,KAAjB,WACI,OAAOsL,KAAKslD,cAAA,MAGhB,SAAkBvkD,GACdf,KAAKslD,eAAiBvkD,CAAA,kCAG1BhR,OAAA6N,eAAImD,EAAArM,UAAA,WAAQ,KAAZ,WACI,OAAOsL,KAAK66E,SAAA,MAGhB,SAAa95E,GACTf,KAAK66E,UAAY95E,CAAA,kCAIrBhR,OAAA6N,eAAImD,EAAArM,UAAA,UAAO,KAAX,WACI,OAAOsL,KAAKulD,QAAA,MAGhB,SAAYxkD,GACRf,KAAKulD,SAAWxkD,CAAA,kCAGpBhR,OAAA6N,eAAImD,EAAArM,UAAA,aAAU,KAAd,WACI,OAAOsL,KAAKwlD,WAAA,MAGhB,SAAezkD,GACXf,KAAKwlD,YAAczkD,CAAA,kCAGvBhR,OAAA6N,eAAImD,EAAArM,UAAA,aAAU,KAAd,WACI,OAAOsL,KAAK86E,WAAA,MAGhB,SAAe/5E,GACXf,KAAK86E,YAAc/5E,CAAA,kCAGvBhR,OAAA6N,eAAImD,EAAArM,UAAA,sBAAmB,KAAvB,WACI,OAAOsL,KAAK+6E,oBAAA,MAGhB,SAAwBh6E,GACpBf,KAAK+6E,qBAAuBh6E,CAAA,kCAGhChR,OAAA6N,eAAImD,EAAArM,UAAA,aAAU,KAAd,WACI,OAAOsL,KAAKk1E,YAAY5mF,GAAA,kCAG5ByB,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACI,OAA+B,MAAvBsL,KAAKu6E,gBAA4D,MAAlCv6E,KAAKk1E,YAAY/B,aAAA,kCAG5DpjF,OAAA6N,eAAImD,EAAArM,UAAA,uBAAoB,KAAxB,WACI,OAAOsL,KAAKu6E,gBAAkBv6E,KAAKk1E,YAAY/B,aAAA,kCAInDpjF,OAAA6N,eAAImD,EAAArM,UAAA,eAAY,KAAhB,WACI,OAAIsL,KAAKk6E,eAAiB9/B,EAEfp6C,KAAKi6E,QAAQpG,aAEjB7zE,KAAKq3E,cAAcQ,cAAA,kCAG9B9nF,OAAA6N,eAAImD,EAAArM,UAAA,aAAU,KAAd,WACI,OAAOsL,KAAKi6E,QAAQzoF,IAAA,kCAGxBuP,EAAArM,UAAAsmF,mBAAA,WACI,IAAIj6E,EAASf,KAAKg1D,QAElB,GAAwB,UAApBj0D,EAAOo6E,SACPn7E,KAAK00E,aAAe,IAAI7sB,EAAiB7nD,KAAKg1D,QAAQomB,yBACnD,GAAwB,UAApBr6E,EAAOo6E,SAAsB,CACpC,IAAIj5B,EAAanhD,EAAOs6E,gBAAkB,SACtC3sF,EAAWqS,EAAOu6E,cAAgB,OAEtCt7E,KAAK00E,aAAe,IAAIrxB,EAAiBnB,EAAYxzD,EAAA,KAClD,IAAwB,WAApBqS,EAAOo6E,SAMd,MAAM,IAAIhhC,EAAAn1C,EAAyB,+BAA+BjE,EAAOo6E,UALzE,GAAwC,mBAA7Bp6E,EAAOw6E,kBACd,MAAM,IAAIphC,EAAAn1C,EAAyB,sEAEvChF,KAAK00E,aAAe,IAAI3zE,EAAOw6E,iBAAA,GAMvCx6E,EAAArM,UAAAumF,cAAA,WACI,GAAiC,MAA7Bj7E,KAAKg1D,QAAQwmB,aACbx7E,KAAKk6E,aAAel6E,KAAKg1D,QAAQwmB,kBAC9B,GAAIx7E,KAAKm6E,gBACZn6E,KAAKk6E,aAAe9+B,OACjB,GAAIiN,EAAkB0sB,cACzB/0E,KAAKk6E,aAAe7xB,OACjB,GAAIjG,EAAiB2yB,cACxB/0E,KAAKk6E,aAAe93B,MACjB,KAAIhI,EAAY26B,cAGnB,MAAM,IAAI56B,EAAAA,EAAiB,mEAF3Bn6C,KAAKk6E,aAAe9/B,CAAA,GAM5Br5C,EAAArM,UAAAwmF,cAAA,WACIl7E,KAAKi6E,QAAU,IAAIj6E,KAAKk6E,aAAal6E,KAAK00E,aAAc10E,KAAKg1D,UAAA,IACzDh1D,KAAKi6E,QAAQwB,kBACbz7E,KAAK+5E,cAAA,GAET/5E,KAAKi6E,QAAQyB,qBAAuB17E,KAAKolD,sBAAsBl8B,KAAKlpB,MACpEA,KAAKi6E,QAAQ0B,cAAgB37E,KAAKqlD,eAAen8B,KAAKlpB,MACtDA,KAAKi6E,QAAQriB,cAAgB53D,KAAK47E,sBAAsB1yD,KAAKlpB,MAC7DA,KAAKi6E,QAAQ5I,WAAarxE,KAAK67E,kBAAkB3yD,KAAKlpB,MACtDA,KAAKi6E,QAAQzhE,QAAUxY,KAAK87E,eAAe5yD,KAAKlpB,KAAA,EAGpDe,EAAArM,UAAAgxD,KAAA,SAAK3kD,GACDf,KAAKs6E,cAAgB,CAACvE,KAAM,EAAGiC,IAAK,GAChCj3E,IACAf,KAAKs6E,cAAcvE,KAAOh1E,GAG9Bf,KAAKq3E,cAAcrxC,QACdjlC,IACDf,KAAKq6E,kBAAA,GAGTr6E,KAAKi6E,QAAQv0B,KAAK1lD,KAAKk1E,YAAanlF,OAAOD,OAAO,CAAC,EAAGkQ,KAAKs6E,eAAA,EAG/Dv5E,EAAArM,UAAA0pB,MAAA,WACIpe,KAAKi6E,QAAQ77D,QAETpe,KAAK26E,UACL36E,KAAK26E,SAAA,EACL36E,KAAK46E,YAAc,IAI3B75E,EAAArM,UAAAo9E,MAAA,WACQ9xE,KAAKylD,cACLzlD,KAAKi6E,QAAQ77D,QAEW,IAApBpe,KAAK05E,YACL15E,KAAK46E,YAAc56E,KAAK85E,gBACxB95E,KAAKs6E,cAActC,GAAKh4E,KAAK85E,gBAAkB,GAE/C95E,KAAK46E,YAAc56E,KAAKs6E,cAActC,GAAK,EAE/Ch4E,KAAK05E,WAAa,EAClB15E,KAAK85E,gBAAkB,EACvB95E,KAAK26E,SAAA,EAAU,EAIvB55E,EAAArM,UAAAq9E,OAAA,WACI,GAAI/xE,KAAK26E,QAAS,CACd36E,KAAK26E,SAAA,EACL,IAAI55E,EAAQf,KAAK46E,YACjB56E,KAAK46E,YAAc,EACnB56E,KAAK+7E,cAAch7E,GAAA,EAAO,GAIlCA,EAAArM,UAAA26E,KAAA,SAAKtuE,GACDf,KAAK26E,SAAA,EACL36E,KAAK05E,WAAa,EAClB15E,KAAK85E,gBAAkB,EACvB95E,KAAK+7E,cAAch7E,GAAA,EAAO,EAS9BA,EAAArM,UAAAqnF,cAAA,SAAch7E,EAAOmhD,GACbliD,KAAKi6E,QAAQx0B,aACbzlD,KAAKi6E,QAAQ77D,QAIjBpe,KAAKg8E,kBAAkB95B,GAEvBliD,KAAKi6E,QAAQ7wD,UACbppB,KAAKi6E,QAAU,KAEf,IAAIvrF,EAAe,CAACqnF,KAAMh1E,EAAOi3E,IAAK,GACtCh4E,KAAKs6E,cAAgB,CAACvE,KAAMrnF,EAAaqnF,KAAMiC,IAAK,GAEpDh4E,KAAKq3E,cAAcrxC,QACnBhmC,KAAK25E,WAAa35E,KAAKw5E,kBACvBx5E,KAAKk7E,gBACLl7E,KAAKi6E,QAAQv0B,KAAK1lD,KAAKk1E,YAAaxmF,GAEhCsR,KAAK66E,WACL76E,KAAK66E,WAAA,EAIb95E,EAAArM,UAAAunF,UAAA,SAAUl7E,GACN,IAAKA,GAAsB,iBAARA,GAAmC,IAAfA,EAAIvS,OACvC,MAAM,IAAI2rD,EAAAn1C,EAAyB,mCAGvChF,KAAKk1E,YAAY5mF,IAAMyS,CAAA,EAK3BA,EAAArM,UAAAwnF,cAAA,SAAcn7E,GAEV,IADA,IAAImhD,EAAgBliD,KAAK25E,WAClBz3B,EAAgB,QAAkBnhD,GACrCmhD,GAAiB,EAIrB,IADAA,GAAiB,WACKliD,KAAK45E,YAA3B,CAIA,IAAIlrF,EAAY,IAAIq/D,YAAY7L,GAEhC,GAAIliD,KAAK05E,WAAa,EAAG,CACrB,IAAIv3B,EAAgB,IAAIuM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK05E,YAC1C,IAAIhrB,WAAWhgE,EAAW,EAAGwzD,GACnCrkD,IAAIskD,EAAe,GAGrCniD,KAAK65E,aAAenrF,EACpBsR,KAAK45E,YAAc13B,CAAA,GAGvBnhD,EAAArM,UAAAwjF,gBAAA,SAAgBn3E,GACZ,IAAImhD,EAAOliD,KAAKy6E,oBACZ/rF,EAAOwzD,EAAK1zD,OAAS,EACrB2zD,EAAM,EACN5H,EAAS,EACT91C,EAAS/V,EAEb,GAAIqS,EAAQmhD,EAAK,GACb,OAAOA,EAAK,GAIhB,KAAO3H,GAAU91C,GAAQ,CAErB,IADA09C,EAAM5H,EAAS5jD,KAAKi0D,OAAOnmD,EAAS81C,GAAU,MAClC7rD,GAASqS,GAASmhD,EAAKC,IAAQphD,EAAQmhD,EAAKC,EAAM,GAC1D,OAAOD,EAAKC,GACLD,EAAKC,GAAOphD,EACnBw5C,EAAS4H,EAAM,EAEf19C,EAAS09C,EAAM,IAK3BphD,EAAArM,UAAAynF,iBAAA,SAAiBp7E,GACb,IAAImhD,EAAc,GAIdA,EAFAliD,KAAKg1D,QAAQ4Y,OAEC7sE,EAAa,EAEvBA,EAAa,IACCA,EACPA,GAAc,KAAOA,GAAc,KAC5BpK,KAAKi0D,MAAmB,IAAb7pD,GAEE,EAAbA,GAIJ,OACdmhD,EAAc,MAGlB,IAAIxzD,EAA2B,KAAdwzD,EAAqB,QAClCliD,KAAK45E,YAAclrF,GACnBsR,KAAKk8E,cAAcxtF,GAEvBsR,KAAK25E,WAA2B,KAAdz3B,CAAA,EAGtBnhD,EAAArM,UAAA0nF,gBAAA,SAAgBr7E,EAAQmhD,GAEpB,OADAliD,KAAKs6E,cAActC,GAAK91B,EAAYnhD,EAAOuuD,WAAa,EACjDtvD,KAAKslD,eAAevkD,EAAQmhD,EAAA,EAGvCnhD,EAAArM,UAAA2wD,eAAA,SAAetkD,GACXf,KAAKu6E,eAAiBx5E,EAClBf,KAAK86E,aACL96E,KAAK86E,YAAY/5E,EAAA,EAIzBA,EAAArM,UAAA0wD,sBAAA,SAAsBrkD,GACdA,GAAiBf,KAAKq6E,mBACtBr6E,KAAK23E,aAAe52E,EACpBf,KAAKq6E,kBAAA,EAAmB,EAIhCt5E,EAAArM,UAAAknF,sBAAA,SAAsB76E,EAAOmhD,EAAWxzD,GACpC,IAAKsR,KAAKslD,eACN,MAAM,IAAInL,EAAA11C,EAAsB,gEAEpC,IAAIzE,KAAK26E,QAAT,CAGI36E,KAAK06E,0BAEL16E,KAAK06E,yBAAA,EACD16E,KAAK+6E,sBACL/6E,KAAK+6E,wBAIb/6E,KAAKq3E,cAAc7C,SAASzzE,EAAMuuD,YAGlC,IAAInN,EAAOniD,KAAKq3E,cAAcQ,eAC9B,GAAa,IAAT11B,EAAY,CACZ,IAAI5H,EAAav6C,KAAKk4E,gBAAgB/1B,GAClCniD,KAAKw6E,mBAAqBjgC,IAC1Bv6C,KAAKw6E,iBAAmBjgC,EACxBv6C,KAAKm8E,iBAAiB5hC,GAAA,CAI9B,GAAKv6C,KAAK+5E,aAoCN,GAJwB,IAApB/5E,KAAK05E,YAA6C,IAAzB15E,KAAK85E,kBAE9B95E,KAAK85E,gBAAkB53B,GAEvBliD,KAAK05E,WAAa34E,EAAMuuD,YAActvD,KAAK25E,YAEvCt3B,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK25E,aAChD97E,IAAI,IAAI6wD,WAAW3tD,GAAQf,KAAK05E,YAC3C15E,KAAK05E,YAAc34E,EAAMuuD,gBAGzB,GADIjN,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,aACvD55E,KAAK05E,WAAa,EAAG,CAGrB,IAAIj1E,EAASzE,KAAK65E,aAAalgF,MAAM,EAAGqG,KAAK05E,aACzCvxB,EAAWnoD,KAAKo8E,gBAAgB33E,EAAQzE,KAAK85E,kBAClCr1E,EAAO6qD,WACdnH,EAAW,IACPE,EAAc,IAAIqG,WAAWjqD,EAAQ0jD,GACzC9F,EAAWxkD,IAAIwqD,EAAa,GAC5BroD,KAAK05E,WAAarxB,EAAYiH,WAC9BtvD,KAAK85E,iBAAmB3xB,IAG5BnoD,KAAK05E,WAAa,EAClB15E,KAAK85E,iBAAmB3xB,GAExBnoD,KAAK05E,WAAa34E,EAAMuuD,WAAatvD,KAAK45E,cAC1C55E,KAAKk8E,cAAcl8E,KAAK05E,WAAa34E,EAAMuuD,YAC3CjN,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,cAE3Dv3B,EAAWxkD,IAAI,IAAI6wD,WAAW3tD,GAAQf,KAAK05E,YAC3C15E,KAAK05E,YAAc34E,EAAMuuD,UAAA,MAGrBnH,EAAWnoD,KAAKo8E,gBAAgBr7E,EAAOmhD,IAC5BnhD,EAAMuuD,cACb7M,EAAS1hD,EAAMuuD,WAAanH,GACnBnoD,KAAK45E,cACd55E,KAAKk8E,cAAcz5B,GACnBJ,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,cAE3Dv3B,EAAWxkD,IAAI,IAAI6wD,WAAW3tD,EAAOonD,GAAW,GAChDnoD,KAAK05E,YAAcj3B,EACnBziD,KAAK85E,gBAAkB53B,EAAYiG,QA3E/C,GAAwB,IAApBnoD,KAAK05E,WAAkB,CAGvB,IAEQj3B,GAFJ0F,EAAWnoD,KAAKo8E,gBAAgBr7E,EAAOmhD,IAC5BnhD,EAAMuuD,cACb7M,EAAS1hD,EAAMuuD,WAAanH,GACnBnoD,KAAK45E,aACd55E,KAAKk8E,cAAcz5B,IAEnBJ,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,cAChD/7E,IAAI,IAAI6wD,WAAW3tD,EAAOonD,GAAW,GAChDnoD,KAAK05E,YAAcj3B,EACnBziD,KAAK85E,gBAAkB53B,EAAYiG,EAAA,KAEpC,CAKH,IAAI9F,EAGA8F,EACJ,GAPInoD,KAAK05E,WAAa34E,EAAMuuD,WAAatvD,KAAK45E,aAC1C55E,KAAKk8E,cAAcl8E,KAAK05E,WAAa34E,EAAMuuD,aAE3CjN,EAAa,IAAIqM,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,cAChD/7E,IAAI,IAAI6wD,WAAW3tD,GAAQf,KAAK05E,YAC3C15E,KAAK05E,YAAc34E,EAAMuuD,YACrBnH,EAAWnoD,KAAKo8E,gBAAgBp8E,KAAK65E,aAAalgF,MAAM,EAAGqG,KAAK05E,YAAa15E,KAAK85E,kBACvE95E,KAAK05E,YAAcvxB,EAAW,EAAG,CAC5C,IAAIE,EAAc,IAAIqG,WAAW1uD,KAAK65E,aAAc1xB,GACpD9F,EAAWxkD,IAAIwqD,EAAa,GAEhCroD,KAAK05E,YAAcvxB,EACnBnoD,KAAK85E,iBAAmB3xB,CAAA,IAsDpCpnD,EAAArM,UAAAsnF,kBAAA,SAAkBj7E,GACd,GAAIf,KAAK05E,WAAa,EAAG,CACrB,IAAIx3B,EAASliD,KAAK65E,aAAalgF,MAAM,EAAGqG,KAAK05E,YACzChrF,EAAWsR,KAAKo8E,gBAAgBl6B,EAAQliD,KAAK85E,iBAC7C33B,EAASD,EAAOoN,WAAa5gE,EAEjC,GAAIA,EAAWwzD,EAAOoN,WAAY,CAC9B,IAAIvuD,EAEG,CACH,GAAIrS,EAAW,EAAG,CACd,IAAI+V,EAAa,IAAIiqD,WAAW1uD,KAAK65E,aAAc,EAAG75E,KAAK45E,aACvDn3B,EAAc,IAAIiM,WAAWxM,EAAQxzD,GACzC+V,EAAW5G,IAAI4kD,EAAa,GAC5BziD,KAAK05E,WAAaj3B,EAAY6M,WAC9BtvD,KAAK85E,iBAAmBprF,CAAA,CAE5B,OAAO,EATP6rD,EAAA91C,EAAIw+C,EAAEjjD,KAAKkvD,IAAQ/M,EAAM,4DAcjC,OAFAniD,KAAK05E,WAAa,EAClB15E,KAAK85E,gBAAkB,EAChB33B,CAAA,CAEX,OAAO,GAGXphD,EAAArM,UAAAmnF,kBAAA,SAAkB96E,EAAMmhD,GAEpBliD,KAAKg8E,mBAAA,GAEDh8E,KAAKwlD,aACLxlD,KAAKwlD,YAAYxlD,KAAKu5E,WAAA,EAI9Bx4E,EAAArM,UAAAonF,eAAA,SAAe/6E,EAAMmhD,GAWjB,OAVA3H,EAAA91C,EAAI1D,EAAEf,KAAKkvD,IAAK,wBAAwBhN,EAAK7zD,KAAI,WAAW6zD,EAAKkxB,KAEjEpzE,KAAKg8E,mBAAA,GAEDh8E,KAAK06E,0BAEL16E,KAAK06E,yBAAA,EACL35E,EAAO0hD,EAAAz9C,EAAaggD,yBAGhBjkD,GACJ,KAAK0hD,EAAAz9C,EAAa+/C,UACd,IAAK/kD,KAAKg1D,QAAQ4Y,QAEV5tE,KAAK23E,aAAc,CACnB,IAAIjpF,EAAWsR,KAAKs6E,cAActC,GAAK,EAMvC,YALItpF,EAAWsR,KAAK23E,eAChBp9B,EAAA91C,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,wCAChBlvD,KAAK06E,yBAAA,EACL16E,KAAK+7E,cAAcrtF,GAAA,IAAU,CAOzCqS,EAAO0hD,EAAAz9C,EAAaggD,wBAGxB,KAAKvC,EAAAz9C,EAAaggD,wBAClB,KAAKvC,EAAAz9C,EAAa8/C,mBAClB,KAAKrC,EAAAz9C,EAAa6/C,yBAClB,KAAKpC,EAAAz9C,EAAa4/C,WAItB,IAAI5kD,KAAKulD,SAGL,MAAM,IAAIpL,EAAAA,EAAiB,gBAAkB+H,EAAKkxB,KAFlDpzE,KAAKulD,SAASxkD,EAAMmhD,EAAA,EAMhCnhD,CAAA,CA3lBA,GA6lBemhD,EAAAz9C,EAAA0M,CAAA,+BCpnBf,IAAAgxC,EAAA,oBAAAphD,IAAA,CAmCA,OAjCWA,EAAAs7E,QAAP,WAEItsF,OAAOkjF,eAAiBljF,OAAOkjF,gBAAkB,SAAUlyE,EAAKmhD,GAE5D,OADAnhD,EAAIu7E,UAAYp6B,EACTnhD,CAAA,EAIXhR,OAAOD,OAASC,OAAOD,QAAU,SAAUiR,GACvC,GAAI,MAAAA,EACA,MAAM,IAAIqnD,UAAU,8CAIxB,IADA,IAAIlG,EAASnyD,OAAOgR,GACXrS,EAAI,EAAGA,EAAIH,UAAUC,OAAQE,IAAK,CACvC,IAAIyzD,EAAS5zD,UAAUG,GACvB,GAAI,MAAAyzD,EACA,IAAK,IAAI5H,KAAO4H,EACRA,EAAO1tD,eAAe8lD,KACtB2H,EAAO3H,GAAO4H,EAAO5H,GAAA,CAKrC,OAAO2H,CAAA,EAIiB,mBAAjB0D,KAAK5d,SACZt5C,EAAQ,IAAe6tF,UAAA,EAInCx7E,CAAA,CAnCA,GAqCAohD,EAASk6B,UAEMn6B,EAAAz9C,EAAA09C,CAAA,kBCzDf,SAASA,EAAsBphD,GAErB,IAAImhD,EAAmB,CAAC,EAGxB,SAASxzD,EAAoByzD,GAG3B,GAAGD,EAAiBC,GAClB,OAAOD,EAAiBC,GAAUP,QAGpC,IAAIrH,EAAS2H,EAAiBC,GAAY,CACxCzzD,EAAGyzD,EACHC,GAAA,EACAR,QAAS,CAAC,GAUZ,OANA7gD,EAAQohD,GAAU/lD,KAAKm+C,EAAOqH,QAASrH,EAAQA,EAAOqH,QAASlzD,GAG/D6rD,EAAO6H,GAAA,EAGA7H,EAAOqH,OAAA,CAIhBlzD,EAAoB0sD,EAAIr6C,EAGxBrS,EAAoB6rC,EAAI2nB,EAGxBxzD,EAAoBA,EAAI,SAASqS,GAAS,OAAOA,CAAA,EAGjDrS,EAAoByrD,EAAI,SAASp5C,EAASmhD,EAAMC,GAC1CzzD,EAAoB2zD,EAAEthD,EAASmhD,IACjCnyD,OAAO6N,eAAemD,EAASmhD,EAAM,CACnC5jD,cAAA,EACA2B,YAAA,EACAF,IAAKoiD,GAAA,EAMXzzD,EAAoB6rD,EAAI,SAASx5C,GAC/BhR,OAAO6N,eAAemD,EAAS,aAAc,CAAEzN,OAAA,GAAO,EAIxD5E,EAAoByzD,EAAI,SAASphD,GAC/B,IAAImhD,EAASnhD,GAAUA,EAAOwhD,WAC5B,WAAwB,OAAOxhD,EAAgByhD,OAAA,EAC/C,WAA8B,OAAOzhD,CAAA,EAEvC,OADArS,EAAoByrD,EAAE+H,EAAQ,IAAKA,GAC5BA,CAAA,EAITxzD,EAAoB2zD,EAAI,SAASthD,EAAQmhD,GAAY,OAAOnyD,OAAO2E,UAAUD,eAAe2H,KAAK2E,EAAQmhD,EAAA,EAGzGxzD,EAAoB0K,EAAI,IAGxB1K,EAAoBs2E,GAAK,SAASjkE,GAA2B,MAApBs1B,QAAQja,MAAMrb,GAAYA,CAAA,EAE3E,IAAIohD,EAAIzzD,EAAoBA,EAAoB+zD,EAAI+5B,cACpD,OAAOr6B,EAAEK,SAAWL,CAAA,CAOtB,SAAS5H,EAAax5C,GACpB,OAAQA,EAAM,IAAIhC,QAAQ,uBAAwB,QAOpD,SAAS0F,EAAuB1D,EAASmhD,EAAQC,GAC/C,IAAI19C,EAAS,CAAC,EACdA,EAAO09C,GAAa,GAEpB,IAAIM,EAAWP,EAAOxoD,WAClB2oD,EAAmBI,EAAS1lD,MAAM,0CACtC,IAAKslD,EAAkB,OAAO59C,EAM9B,IALA,IAII01C,EAJAgO,EAAqB9F,EAAiB,GAGtCgG,EAAK,IAAItsD,OAAO,cAAgBw+C,EAAY4N,GArB3B,6DAqBmE,KAEhFhO,EAAQkO,EAAGtC,KAAKtD,IACL,kBAAbtI,EAAM,IACV11C,EAAO09C,GAAW9uD,KAAK8mD,EAAM,IAK/B,IADAkO,EAAK,IAAItsD,OAAO,MAAQw+C,EAAY4N,GAApB,kHAAwH,KAChIhO,EAAQkO,EAAGtC,KAAKtD,IACjB1hD,EAAQo5C,EAAM,MACjB11C,EAAO09C,GAAW9uD,KAAK8mD,EAAM,IAC7Bp5C,EAAQo5C,EAAM,IAAMzrD,EAAoByrD,EAAM,IAAIiB,GAEpD32C,EAAO01C,EAAM,IAAM11C,EAAO01C,EAAM,KAAO,GACvC11C,EAAO01C,EAAM,IAAI9mD,KAAK8mD,EAAM,IAK9B,IADA,IAjCiBoO,EAiCbnG,EAAOryD,OAAOyhB,KAAK/M,GACd81B,EAAI,EAAGA,EAAI6nB,EAAK5zD,OAAQ+rC,IAC/B,IAAK,IAAI6f,EAAI,EAAGA,EAAI31C,EAAO29C,EAAK7nB,IAAI/rC,OAAQ4rD,IAnC7BmO,EAoCC9jD,EAAO29C,EAAK7nB,IAAI6f,GAnC1BvB,MAAM,EAAI0P,KAoCZ9jD,EAAO29C,EAAK7nB,IAAI6f,GAAK,EAAI31C,EAAO29C,EAAK7nB,IAAI6f,IAK/C,OAAO31C,CAAA,CAGT,SAASg+C,EAAmB1hD,GAE1B,OADWhR,OAAOyhB,KAAKzQ,GACX07E,QAAO,SAAUv6B,EAAWxzD,GACtC,OAAOwzD,GAAanhD,EAAOrS,GAAKF,OAAS,OACxC,CAqCLuS,EAAO6gD,QAAU,SAAU7gD,EAAUmhD,GACnCA,EAAUA,GAAW,CAAC,EACtB,IAAI3H,EAAU,CACZmiC,KAAMhuF,EAAA0sD,GAGJiH,EAAkBH,EAAQy6B,IAAM,CAAED,KAAM3sF,OAAOyhB,KAAK+oC,EAAQmiC,OAxClE,SAA6B37E,EAASmhD,GAWpC,IAVA,IAAIxzD,EAAe,CACjBguF,KAAM,CAACx6B,IAELC,EAAkB,CACpBu6B,KAAM,IAEJniC,EAAc,CAChBmiC,KAAM,CAAC,GAGFj6B,EAAkB/zD,IAEvB,IADA,IAAI2zD,EAAStyD,OAAOyhB,KAAK9iB,GAChByrD,EAAI,EAAGA,EAAIkI,EAAO7zD,OAAQ2rD,IAAK,CACtC,IAAIgO,EAAY9F,EAAOlI,GAEnBkO,EADQ35D,EAAay5D,GACCh1D,MAE1B,GADAonD,EAAY4N,GAAa5N,EAAY4N,IAAc,CAAC,GAChD5N,EAAY4N,GAAWE,IAAmBtnD,EAAQonD,GAAWE,GAAjE,CACA9N,EAAY4N,GAAWE,IAAA,EACvBlG,EAAgBgG,GAAahG,EAAgBgG,IAAc,GAC3DhG,EAAgBgG,GAAW90D,KAAKg1D,GAGhC,IAFA,IAAIE,EAAa9jD,EAAsB1D,EAASA,EAAQonD,GAAWE,GAAgBF,GAC/E/F,EAAiBryD,OAAOyhB,KAAK+2C,GACxBhuB,EAAI,EAAGA,EAAI6nB,EAAe5zD,OAAQ+rC,IACzC7rC,EAAa0zD,EAAe7nB,IAAM7rC,EAAa0zD,EAAe7nB,KAAO,GACrE7rC,EAAa0zD,EAAe7nB,IAAM7rC,EAAa0zD,EAAe7nB,IAAIpN,OAAOo7B,EAAWnG,EAAe7nB,IAAA,EAKzG,OAAO4nB,CAAA,CA/BT,CAwC+F5H,EAASx5C,GAElGo5C,EAAM,GAEVpqD,OAAOyhB,KAAK6wC,GAAiBu6B,QAAO,SAAU77E,GAAK,MAAa,SAANA,CAAA,IAAgBsd,SAAQ,SAAUtd,GAE1F,IADA,IAAImhD,EAAc,EACXG,EAAgBthD,GAAQmhD,IAC7BA,IAEFG,EAAgBthD,GAAQ1N,KAAK6uD,GAC7B3H,EAAQx5C,GAAQmhD,GAAe,6FAC/B/H,EAAMA,EAAM,OAASp5C,EAAS,OAASohD,EAAqBzoD,WAAWqF,QAAQ,eAAgB4pE,KAAKC,UAAU1mB,IAAgB,MAAQG,EAAgBthD,GAAQwmB,KAAI,SAAU26B,GAAM,OAAYymB,KAAKC,UAAU1mB,GAAM,KAAO3H,EAAQx5C,GAAQmhD,GAAIxoD,UAAA,IAAc23B,KAAK,KAAO,WAG1Q8oB,EAAMA,EAAM,SAAWgI,EAAqBzoD,WAAWqF,QAAQ,eAAgB4pE,KAAKC,UAAU7nE,IAAa,MAAQshD,EAAgBq6B,KAAKn1D,KAAI,SAAUxmB,GAAM,OAAY4nE,KAAKC,UAAU7nE,GAAM,KAAOw5C,EAAQmiC,KAAK37E,GAAIrH,UAAA,IAAc23B,KAAK,KAAO,aAE/O,IAAI82B,EAAO,IAAI9uD,OAAO0/E,KAAK,CAAC5+B,GAAM,CAAE3oD,KAAM,oBAC1C,GAAI0wD,EAAQ26B,KAAQ,OAAO10B,EAE3B,IAEIE,GAFMhvD,OAAOyjF,KAAOzjF,OAAO0jF,WAAa1jF,OAAO2jF,QAAU3jF,OAAO4jF,OAEhDC,gBAAgB/0B,GAChCI,EAAS,IAAIlvD,OAAO8jF,OAAO90B,GAG/B,OAFAE,EAAO60B,UAAY/0B,EAEZE,CAAA,mBCrMTxnD,EAAO6gD,QAAUlzD,EAAQ,IAAe8zD,OAAA,4BCHxCN,EAAAxzD,GAQC,IAAkByzD,EAAAA,EAIX,WAAe,aAOvB,SAASphD,EAAWA,GAClB,MAAoB,mBAANA,CAAA,CAKhB,IASIohD,EARAhwD,MAAMC,QACGD,MAAMC,QAEN,SAAU2O,GACnB,MAA6C,mBAAtChR,OAAO2E,UAAUgF,SAAS0C,KAAK2E,EAAA,EAMtCw5C,EAAM,EACN91C,OAAA,EACAg+C,OAAA,EAEAJ,EAAO,SAActhD,EAAUmhD,GACjC9H,EAAMG,GAAOx5C,EACbq5C,EAAMG,EAAM,GAAK2H,EAEL,KADZ3H,GAAO,KAKDkI,EACFA,EAAkBrpD,GAElB61D,IAAA,EAaF9U,EAAkC,oBAAX9gD,OAAyBA,YAAA,EAChD8uD,EAAgBhO,GAAiB,CAAC,EAClCkO,EAA0BF,EAAck1B,kBAAoBl1B,EAAcm1B,uBAC1E/0B,EAAyB,oBAAT3C,WAAA,IAA+B1D,GAAyD,qBAA9B,CAAC,EAAExoD,SAAS0C,KAAK8lD,GAG3FE,EAAwC,oBAAtBm7B,mBAA8D,oBAAlBC,eAA2D,oBAAnBC,eA0C1G,SAASljD,IAGP,IAAIx5B,EAAmB+1B,WACvB,OAAO,WACL,OAAO/1B,EAAiB3H,EAAO,IAInC,IAAIghD,EAAQ,IAAIjoD,MAAM,KACtB,SAASiH,IACP,IAAK,IAAI2H,EAAI,EAAGA,EAAIw5C,EAAKx5C,GAAK,GAAG,EAChBq5C,EAAMr5C,IACXq5C,EAAMr5C,EAAI,IAIpBq5C,EAAMr5C,QAAA,EACNq5C,EAAMr5C,EAAI,QAAK,EAGjBw5C,EAAM,EAaR,IAzCMa,EAZAyM,EACAxE,EACAlyC,EAmDF89C,OAAA,EAcJ,SAASxvC,EAAK1e,EAAemhD,GAC3B,IAAIxzD,EAASsR,KAETmiD,EAAQ,IAAIniD,KAAKH,YAAY2wD,QAAA,IAE7BrO,EAAMrW,IACR+kB,EAAY1O,GAGd,IAAI5H,EAAS7rD,EAAOgvF,OAGpB,GAAInjC,EAAQ,CACV,IAAI91C,EAAWlW,UAAUgsD,EAAS,GAClC8H,GAAK,WACH,OAAOsO,EAAepW,EAAQ4H,EAAO19C,EAAU/V,EAAOivF,QAAA,SAGxDhjC,EAAUjsD,EAAQyzD,EAAOphD,EAAemhD,GAG1C,OAAOC,CAAA,CAkCT,SAASn9C,EAAUjE,GAIjB,GAAIA,GAA4B,iBAAXA,GAAuBA,EAAOlB,cAFjCG,KAGhB,OAAOe,EAGT,IAAImhD,EAAU,IANIliD,KAMYwwD,GAE9B,OADA5V,EAAQsH,EAASnhD,GACVmhD,CAAA,CA7ELqG,EACF0G,EAzEO,WACL,OAAO/M,EAAQ07B,SAASxkF,EAAA,EAyEjBivD,GAzDLR,EAAa,EACbxE,EAAW,IAAIgF,EAAwBjvD,GACvC+X,EAAOvQ,SAAS69B,eAAe,IACnC4kB,EAASw6B,QAAQ1sE,EAAM,CAAE2sE,eAAA,IAuDzB7uB,EArDO,WACL99C,EAAKxe,KAAOk1D,IAAeA,EAAa,IAqDjCzF,IA/CLhH,EAAU,IAAIqiC,gBACVM,MAAMrF,UAAYt/E,EA+C1B61D,EA9CO,WACL,OAAO7T,EAAQ4iC,MAAMC,YAAY,KA+CnChvB,OAAA,IADS9U,EAlBX,WACE,IACE,IAAIp5C,EAAQumD,SAAS,cAATA,GAA0Br5D,QAAQ,SAE9C,YAAO,KADPwW,EAAY1D,EAAMm9E,WAAan9E,EAAMo9E,cAvD9B,WACL15E,EAAUrL,EAAA,EAIPmhC,GAAA,CAoDL,MAAOx5B,GACP,OAAOw5B,GAAA,EANX,GAqBkBA,IAuElB,IAAIuR,EAAan1C,KAAK8C,SAASC,SAAS,IAAI4/E,UAAU,GAEtD,SAAS9oB,IAAA,CAiET,SAAS9lC,EAAoBw3B,EAASxzD,EAAeyzD,GAC/CzzD,EAAcmR,cAAgBqiD,EAAQriD,aAAesiD,IAAY1iC,GAAQ/wB,EAAcmR,YAAYigB,UAAY9a,EAfrH,SAA2BjE,EAASmhD,GAhDpB,IAiDVA,EAASw7B,OACXjtB,EAAQ1vD,EAASmhD,EAASy7B,SAjDf,IAkDFz7B,EAASw7B,OAClBjjC,EAAO15C,EAASmhD,EAASy7B,SAEzBhjC,EAAUuH,OAAA,GAAqB,SAAUA,GACvC,OAAOtH,EAAQ75C,EAASmhD,EAAA,IACvB,SAAUA,GACX,OAAOzH,EAAO15C,EAASmhD,EAAA,IAT7B,CAgBsBA,EAASxzD,QAAA,IAEvByzD,EACFsO,EAAQvO,EAASxzD,GACRqS,EAAWohD,GAjD1B,SAA+BphD,EAASmhD,EAAUxzD,GAChD2zD,GAAK,SAAUthD,GACb,IAAIohD,GAAA,EACA5H,EAXR,SAAiBx5C,EAASmhD,EAAOxzD,EAAoByzD,GACnD,IACEphD,EAAQ3E,KAAK8lD,EAAOxzD,EAAoByzD,EAAA,CACxC,MAAOphD,GACP,OAAOA,CAAA,EAJX,CAWwBrS,EAASwzD,GAAU,SAAUxzD,GAC3CyzD,IAGJA,GAAA,EACID,IAAaxzD,EACfksD,EAAQ75C,EAASrS,GAEjB+hE,EAAQ1vD,EAASrS,GAAA,IAElB,SAAUwzD,GACPC,IAGJA,GAAA,EAEA1H,EAAO15C,EAASmhD,GAAA,GACDnhD,EAAQq9E,SAEpBj8B,GAAU5H,IACb4H,GAAA,EACA1H,EAAO15C,EAASw5C,GAAA,GAEjBx5C,EAAA,CA1BL,CAkD4BmhD,EAASxzD,EAAeyzD,GAE9CsO,EAAQvO,EAASxzD,EAAA,CAKvB,SAASksD,EAAQ75C,EAASmhD,GACxB,GAAInhD,IAAYmhD,EACdzH,EAAO15C,EA1EF,IAAIqnD,UAAU,kDA2Ed,GAzSH7N,SADoB4H,EA0SID,GAxSf,OAANC,GAAwB,WAAT5H,GAA8B,aAATA,EAkTzCkW,EAAQ1vD,EAASmhD,OAViB,CAClC,IAAIxzD,OAAA,EACJ,IACEA,EAAUwzD,EAAMxiC,IAAA,CAChB,MAAOwiC,GAEP,YADAzH,EAAO15C,EAASmhD,EAAA,CAGlBx3B,EAAoB3pB,EAASmhD,EAAOxzD,EAAA,CAlTxC,IAA0ByzD,EACpB5H,CAAA,CAuTN,SAAS0I,EAAiBliD,GACpBA,EAAQs9E,UACVt9E,EAAQs9E,SAASt9E,EAAQ48E,SAG3BjtB,EAAQ3vD,EAAA,CAGV,SAAS0vD,EAAQ1vD,EAASmhD,QAAA,IACpBnhD,EAAQ28E,SAIZ38E,EAAQ48E,QAAUz7B,EAClBnhD,EAAQ28E,OA3GM,EA6GsB,IAAhC38E,EAAQu9E,aAAa9vF,QACvB6zD,EAAKqO,EAAS3vD,GAAA,CAIlB,SAAS05C,EAAO15C,EAASmhD,QAAA,IACnBnhD,EAAQ28E,SAGZ38E,EAAQ28E,OArHK,EAsHb38E,EAAQ48E,QAAUz7B,EAElBG,EAAKY,EAAkBliD,GAAA,CAGzB,SAAS45C,EAAU55C,EAAQmhD,EAAOxzD,EAAeyzD,GAC/C,IAAI5H,EAAex5C,EAAOu9E,aACtB75E,EAAS81C,EAAa/rD,OAG1BuS,EAAOs9E,SAAW,KAElB9jC,EAAa91C,GAAUy9C,EACvB3H,EAAa91C,EApIC,GAoIqB/V,EACnC6rD,EAAa91C,EApIA,GAoIqB09C,EAEnB,IAAX19C,GAAgB1D,EAAO28E,QACzBr7B,EAAKqO,EAAS3vD,EAAA,CAIlB,SAAS2vD,EAAQ3vD,GACf,IAAImhD,EAAcnhD,EAAQu9E,aACtB5vF,EAAUqS,EAAQ28E,OAEtB,GAA2B,IAAvBx7B,EAAY1zD,OAAhB,CAQA,IAJA,IAAI2zD,OAAA,EACA5H,OAAA,EACA91C,EAAS1D,EAAQ48E,QAEZl7B,EAAI,EAAGA,EAAIP,EAAY1zD,OAAQi0D,GAAK,EAC3CN,EAAQD,EAAYO,GACpBlI,EAAW2H,EAAYO,EAAI/zD,GAEvByzD,EACFwO,EAAejiE,EAASyzD,EAAO5H,EAAU91C,GAEzC81C,EAAS91C,GAIb1D,EAAQu9E,aAAa9vF,OAAS,GAGhC,SAASmiE,EAAezO,EAASxzD,EAASyzD,EAAU5H,GAClD,IAAI91C,EAAc1D,EAAWohD,GACzBM,OAAA,EACAJ,OAAA,EACAlI,GAAA,EAEJ,GAAI11C,EAAa,CACf,IACEg+C,EAAQN,EAAS5H,EAAA,CACjB,MAAOx5C,GACPo5C,GAAA,EACAkI,EAAQthD,CAAA,CAGV,GAAIrS,IAAY+zD,EAEd,YADAhI,EAAO/rD,EA7KJ,IAAI05D,UAAU,8DAiLnB3F,EAAQlI,OAAA,IAGN7rD,EAAQgvF,SAEDj5E,GAAe01C,EACxBS,EAAQlsD,EAAS+zD,IAAA,IACRtI,EACTM,EAAO/rD,EAAS2zD,GAjMJ,IAkMHH,EACTuO,EAAQ/hE,EAAS+zD,GAlMN,IAmMFP,GACTzH,EAAO/rD,EAAS+zD,GAAA,CAgBpB,IAAImO,EAAK,EAKT,SAASC,EAAY9vD,GACnBA,EAAQ+qC,GAAc8kB,IACtB7vD,EAAQ28E,YAAA,EACR38E,EAAQ48E,aAAA,EACR58E,EAAQu9E,aAAe,GAOzB,IAAI5iC,EAAa,WACf,SAAS36C,EAAWA,EAAamhD,GAC/BliD,KAAKu+E,qBAAuBx9E,EAC5Bf,KAAKw+E,QAAU,IAAIz9E,EAAYyvD,GAE1BxwD,KAAKw+E,QAAQ1yC,IAChB+kB,EAAY7wD,KAAKw+E,SAGfr8B,EAAQD,IACVliD,KAAKxR,OAAS0zD,EAAM1zD,OACpBwR,KAAKy+E,WAAav8B,EAAM1zD,OAExBwR,KAAK29E,QAAU,IAAIxrF,MAAM6N,KAAKxR,QAEV,IAAhBwR,KAAKxR,OACPiiE,EAAQzwD,KAAKw+E,QAASx+E,KAAK29E,UAE3B39E,KAAKxR,OAASwR,KAAKxR,QAAU,EAC7BwR,KAAK0+E,WAAWx8B,GACQ,IAApBliD,KAAKy+E,YACPhuB,EAAQzwD,KAAKw+E,QAASx+E,KAAK29E,WAI/BljC,EAAOz6C,KAAKw+E,QA5BT,IAAI9uF,MAAM,4CA0GjB,OA1EAqR,EAAWrM,UAAUgqF,WAAa,SAAoB39E,GACpD,IAAK,IAAImhD,EAAI,OAAG,IAAAliD,KAAK09E,QAAsBx7B,EAAInhD,EAAMvS,OAAQ0zD,IAC3DliD,KAAK2+E,WAAW59E,EAAMmhD,GAAIA,EAAA,EAI9BnhD,EAAWrM,UAAUiqF,WAAa,SAAoB59E,EAAOmhD,GAC3D,IAAIxzD,EAAIsR,KAAKu+E,qBACTp8B,EAAazzD,EAAEoxB,QAGnB,GAAIqiC,IAAen9C,EAAW,CAC5B,IAAIu1C,OAAA,EACA91C,OAAA,EACAg+C,GAAA,EACJ,IACElI,EAAQx5C,EAAM2e,IAAA,CACd,MAAO3e,GACP0hD,GAAA,EACAh+C,EAAQ1D,CAAA,CAGV,GAAIw5C,IAAU96B,QAAA,IAAQ1e,EAAM28E,OAC1B19E,KAAK4+E,WAAW79E,EAAM28E,OAAQx7B,EAAGnhD,EAAM48E,cAClC,GAAqB,mBAAVpjC,EAChBv6C,KAAKy+E,aACLz+E,KAAK29E,QAAQz7B,GAAKnhD,OACb,GAAIrS,IAAMuD,EAAW,CAC1B,IAAIowD,EAAU,IAAI3zD,EAAE8hE,GAChB/N,EACFhI,EAAO4H,EAAS59C,GAEhBimB,EAAoB23B,EAASthD,EAAOw5C,GAEtCv6C,KAAK6+E,cAAcx8B,EAASH,EAAA,MAE5BliD,KAAK6+E,cAAc,IAAInwF,GAAE,SAAUwzD,GACjC,OAAOA,EAAWnhD,EAAA,IAChBmhD,EAAA,MAGNliD,KAAK6+E,cAAc18B,EAAWphD,GAAQmhD,EAAA,EAI1CnhD,EAAWrM,UAAUkqF,WAAa,SAAoB79E,EAAOmhD,EAAGxzD,GAC9D,IAAIyzD,EAAUniD,KAAKw+E,aAAA,IAGfr8B,EAAQu7B,SACV19E,KAAKy+E,aAnTI,IAqTL19E,EACF05C,EAAO0H,EAASzzD,GAEhBsR,KAAK29E,QAAQz7B,GAAKxzD,GAIE,IAApBsR,KAAKy+E,YACPhuB,EAAQtO,EAASniD,KAAK29E,QAAA,EAI1B58E,EAAWrM,UAAUmqF,cAAgB,SAAuB99E,EAASmhD,GACnE,IAAIxzD,EAAasR,KAEjB26C,EAAU55C,OAAA,GAAoB,SAAUA,GACtC,OAAOrS,EAAWkwF,WAtUR,EAsU8B18B,EAAGnhD,EAAA,IAC1C,SAAUA,GACX,OAAOrS,EAAWkwF,WAvUT,EAuU8B18B,EAAGnhD,EAAA,KAIvCA,CAAA,CAvGQ,GA0Yb9O,EAAY,WACd,SAASiwD,EAAQnhD,GACff,KAAK8rC,GA1ZA8kB,IA2ZL5wD,KAAK29E,QAAU39E,KAAK09E,YAAA,EACpB19E,KAAKs+E,aAAe,GAEhB9tB,IAASzvD,IACS,mBAAbA,GAvHb,WACE,MAAM,IAAIqnD,UAAU,sFADtB,GAwHMpoD,gBAAgBkiD,EA9atB,SAA2BnhD,EAASmhD,GAClC,IACEA,GAAS,SAAwBA,GAC/BtH,EAAQ75C,EAASmhD,EAAA,IAChB,SAAuBA,GACxBzH,EAAO15C,EAASmhD,EAAA,IAElB,MAAOA,GACPzH,EAAO15C,EAASmhD,EAAA,EARpB,CA8akDliD,KAAMe,GApHxD,WACE,MAAM,IAAIqnD,UAAU,yHADtB,GAoHoE,CA6PlE,OA/DAlG,EAAQxtD,UAAUwJ,MAAQ,SAAgB6C,GACxC,OAAOf,KAAK0f,KAAK,KAAM3e,EAAA,EA2CzBmhD,EAAQxtD,UAAUoqF,QAAU,SAAkB58B,GAC5C,IACIxzD,EADUsR,KACYH,YAE1B,OAAIkB,EAAWmhD,GAHDliD,KAIG0f,MAAK,SAAU3e,GAC5B,OAAOrS,EAAYoxB,QAAQoiC,KAAYxiC,MAAK,WAC1C,OAAO3e,CAAA,OAER,SAAUA,GACX,OAAOrS,EAAYoxB,QAAQoiC,KAAYxiC,MAAK,WAC1C,MAAM3e,CAAA,OAVEf,KAeC0f,KAAKwiC,EAAUA,EAAA,EAGzBA,CAAA,CArQO,GAuThB,OA/CAjwD,EAAUyC,UAAUgrB,KAAOD,EAC3BxtB,EAAU0qF,IA1fV,SAAa57E,GACX,OAAO,IAAI26C,EAAW17C,KAAMe,GAASy9E,OAAA,EA0fvCvsF,EAAU8sF,KAtbV,SAAch+E,GAEZ,IAAImhD,EAAcliD,KAElB,OAAKmiD,EAAQphD,GAKJ,IAAImhD,GAAY,SAAUxzD,EAASyzD,GAExC,IADA,IAAI5H,EAASx5C,EAAQvS,OACZiW,EAAI,EAAGA,EAAI81C,EAAQ91C,IAC1By9C,EAAYpiC,QAAQ/e,EAAQ0D,IAAIib,KAAKhxB,EAASyzD,EAAA,IAP3C,IAAID,GAAY,SAAUnhD,EAAGmhD,GAClC,OAAOA,EAAO,IAAIkG,UAAU,wCAiblCn2D,EAAU6tB,QAAU9a,EACpB/S,EAAUg2C,OApYV,SAAkBlnC,GAEhB,IACImhD,EAAU,IADIliD,KACYwwD,GAE9B,OADA/V,EAAOyH,EAASnhD,GACTmhD,CAAA,EAgYTjwD,EAAU+sF,cA7iCV,SAAsBj+E,GACpB0hD,EAAoB1hD,CAAA,EA6iCtB9O,EAAUgtF,SA1iCV,SAAiBl+E,GACfshD,EAAOthD,CAAA,EA0iCT9O,EAAUitF,MAAQ78B,EAqClBpwD,EAAUsqF,SAlCV,WACE,IAAIx7E,OAAA,EAEJ,QAAI,IAAOrS,EACTqS,EAAQrS,OACH,GAAoB,oBAATk3D,KAChB7kD,EAAQ6kD,UAER,IACE7kD,EAAQumD,SAAS,cAATA,EAAA,CACR,MAAOvmD,GACP,MAAM,IAAIrR,MAAM,4EAIpB,IAAIwyD,EAAInhD,EAAMinC,QAEd,GAAIka,EAAG,CACL,IAAIC,EAAkB,KACtB,IACEA,EAAkBpyD,OAAO2E,UAAUgF,SAAS0C,KAAK8lD,EAAEpiC,UAAA,CACnD,MAAO/e,GAAA,CAIT,GAAwB,qBAApBohD,IAA2CD,EAAEi9B,KAC/C,OAIJp+E,EAAMinC,QAAU/1C,CAAA,EAKlBA,EAAU+1C,QAAU/1C,EAEbA,CAAA,EAtoCyD8O,EAAO6gD,QAAUO,GAAA,yCCRjF,IAOIzzD,EACAyzD,EARA5H,EAAUx5C,EAAO6gD,QAAU,CAAC,EAUhC,SAASn9C,IACL,MAAM,IAAI/U,MAAM,mCAEpB,SAAS+yD,IACL,MAAM,IAAI/yD,MAAM,qCAsBpB,SAAS2yD,EAAWthD,GAChB,GAAIrS,IAAqBooC,WAErB,OAAOA,WAAW/1B,EAAK,GAG3B,IAAKrS,IAAqB+V,IAAqB/V,IAAqBooC,WAEhE,OADApoC,EAAmBooC,WACZA,WAAW/1B,EAAK,GAE3B,IAEI,OAAOrS,EAAiBqS,EAAK,GAC/B,MAAMmhD,GACJ,IAEI,OAAOxzD,EAAiB0N,KAAK,KAAM2E,EAAK,GAC1C,MAAMmhD,GAEJ,OAAOxzD,EAAiB0N,KAAK4D,KAAMe,EAAK,MAvCnD,WACG,IAEQrS,EADsB,mBAAfooC,WACYA,WAEAryB,CAAA,CAEzB,MAAO1D,GACLrS,EAAmB+V,CAAA,CAEvB,IAEQ09C,EADwB,mBAAjB7U,aACcA,aAEAmV,CAAA,CAE3B,MAAO1hD,GACLohD,EAAqBM,CAAA,EAjB5B,GAwED,IAEItI,EAFAgO,EAAQ,GACRE,GAAA,EAEAE,GAAc,EAElB,SAASnG,IACAiG,GAAalO,IAGlBkO,GAAA,EACIlO,EAAa3rD,OACb25D,EAAQhO,EAAahtB,OAAOg7B,GAE5BI,GAAc,EAEdJ,EAAM35D,QACN+rC,IAAA,CAIR,SAASA,IACL,IAAI8tB,EAAJ,CAGA,IAAItnD,EAAUshD,EAAWD,GACzBiG,GAAA,EAGA,IADA,IAAInG,EAAMiG,EAAM35D,OACV0zD,GAAK,CAGP,IAFA/H,EAAegO,EACfA,EAAQ,KACCI,EAAarG,GACd/H,GACAA,EAAaoO,GAAY62B,MAGjC72B,GAAc,EACdrG,EAAMiG,EAAM35D,MAAA,CAEhB2rD,EAAe,KACfkO,GAAA,EAnEJ,SAAyBtnD,GACrB,GAAIohD,IAAuB7U,aAEvB,OAAOA,aAAavsC,GAGxB,IAAKohD,IAAuBM,IAAwBN,IAAuB7U,aAEvE,OADA6U,EAAqB7U,aACdA,aAAavsC,GAExB,IAEWohD,EAAmBphD,EAAA,CAC5B,MAAOmhD,GACL,IAEI,OAAOC,EAAmB/lD,KAAK,KAAM2E,EAAA,CACvC,MAAOmhD,GAGL,OAAOC,EAAmB/lD,KAAK4D,KAAMe,EAAA,GApBjD,CAoEoBA,EAAA,EAiBpB,SAASq5C,EAAKr5C,EAAKmhD,GACfliD,KAAKq/E,IAAMt+E,EACXf,KAAKwnB,MAAQ06B,CAAA,CAYjB,SAAS9oD,IAAA,CA5BTmhD,EAAQqjC,SAAW,SAAU78E,GACzB,IAAImhD,EAAO,IAAI/vD,MAAM5D,UAAUC,OAAS,GACxC,GAAID,UAAUC,OAAS,EACnB,IAAK,IAAIE,EAAI,EAAGA,EAAIH,UAAUC,OAAQE,IAClCwzD,EAAKxzD,EAAI,GAAKH,UAAUG,GAGhCy5D,EAAM90D,KAAK,IAAI+mD,EAAKr5C,EAAKmhD,IACJ,IAAjBiG,EAAM35D,QAAiB65D,GACvBhG,EAAW9nB,EAAA,EASnB6f,EAAK1lD,UAAU0qF,IAAM,WACjBp/E,KAAKq/E,IAAIljE,MAAM,KAAMnc,KAAKwnB,MAAA,EAE9B+yB,EAAQzd,MAAQ,UAChByd,EAAQyL,SAAA,EACRzL,EAAQ+kC,IAAM,CAAC,EACf/kC,EAAQglC,KAAO,GACfhlC,EAAQmG,QAAU,GAClBnG,EAAQilC,SAAW,CAAC,EAIpBjlC,EAAQuN,GAAK1uD,EACbmhD,EAAQyO,YAAc5vD,EACtBmhD,EAAQoN,KAAOvuD,EACfmhD,EAAQ4O,IAAM/vD,EACdmhD,EAAQqN,eAAiBxuD,EACzBmhD,EAAQ6O,mBAAqBhwD,EAC7BmhD,EAAQnkB,KAAOh9B,EACfmhD,EAAQ0O,gBAAkB7vD,EAC1BmhD,EAAQ2O,oBAAsB9vD,EAE9BmhD,EAAQ1qC,UAAY,SAAU9O,GAAQ,MAAO,IAE7Cw5C,EAAQklC,QAAU,SAAU1+E,GACxB,MAAM,IAAIrR,MAAM,qCAGpB6qD,EAAQmlC,IAAM,WAAc,MAAO,KACnCnlC,EAAQolC,MAAQ,SAAU5+E,GACtB,MAAM,IAAIrR,MAAM,mCAEpB6qD,EAAQqlC,MAAQ,WAAa,OAAO,kBCvLpC,IAAIlxF,EAGJA,EAAI,WACH,OAAOsR,IAAA,CADJ,GAIJ,IAECtR,EAAIA,GAAK,IAAI44D,SAAS,cAAb,GACR,MAAOvmD,GAEc,iBAAX1H,SAAqB3K,EAAI2K,OAAA,CAOrC0H,EAAO6gD,QAAUlzD,CAAA,+BCnBjBA,EAAA6rD,EAAA2H,GAAA,IAAAC,EAAAzzD,EAAA,GAAA6rD,EAAA7rD,EAAA,IAAA+V,EAAA/V,EAAA,IAAA+zD,EAAA/zD,EAAA,GAgPewzD,EAAAM,QA3MS,SAAUzhD,GAE9B,IACImhD,EAAa,KACbxzD,EA2LJ,SAA0BwzD,EAAMxzD,GAC5BqS,EAAKk9E,YAAY,CACb7K,IAAK,kBACLzgF,KAAM,CACFnB,KAAM0wD,EACN29B,OAAQnxF,IAAA,EAhMkBw6B,KAAKlpB,MA4D3C,SAASqiD,EAAcH,EAAMxzD,GACzB,IAAIyzD,EAAM,CACNixB,IAAK3wB,EAAAh+C,EAAkBg/C,aACvB9wD,KAAM,CACFnB,KAAM0wD,EACNvvD,KAAMjE,IAGdqS,EAAKk9E,YAAY97B,EAAK,CAACzzD,EAAYiE,MAAA,CAGvC,SAASwnD,EAAe+H,EAAMxzD,GAC1B,IAAIyzD,EAAM,CACNixB,IAAK3wB,EAAAh+C,EAAkBi/C,cACvB/wD,KAAM,CACFnB,KAAM0wD,EACNvvD,KAAMjE,IAGdqS,EAAKk9E,YAAY97B,EAAK,CAACzzD,EAAaiE,MAAA,CAGxC,SAASw1D,IACL,IAAIjG,EAAM,CACNkxB,IAAK3wB,EAAAh+C,EAAkBk/C,kBAE3B5iD,EAAKk9E,YAAY/7B,EAAA,CAGrB,SAASmG,IACL,IAAInG,EAAM,CACNkxB,IAAK3wB,EAAAh+C,EAAkBm/C,qBAE3B7iD,EAAKk9E,YAAY/7B,EAAA,CAGrB,SAASqG,EAAYrG,GACjB,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBo/C,WACvBlxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS0zD,EAAkBF,GACvB,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBq/C,iBACvBnxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS6rC,EAAoB2nB,GACzB,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBs/C,mBACvBpxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS0rD,EAA2B8H,GAChC,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBu/C,2BACvBrxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS0K,EAAyB8oD,GAC9B,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBw/C,wBACvBtxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS0sD,EAA2B8G,GAChC,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkBy/C,4BACvBvxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAASm5D,EAAwB3F,GAC7B,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkB0/C,yBACvBxxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAAS20D,EAAiBnB,GACtB,IAAIxzD,EAAM,CACN0kF,IAAK3wB,EAAAh+C,EAAkB2/C,gBACvBzxD,KAAMuvD,GAEVnhD,EAAKk9E,YAAYvvF,EAAA,CAGrB,SAASyiB,EAAU+wC,EAAMxzD,GACrBqS,EAAKk9E,YAAY,CACb7K,IAAK3wB,EAAAh+C,EAAkB8+C,SACvB5wD,KAAM,CACFnB,KAAM0wD,EACN/iD,KAAMzQ,IAAA,CAKlB,SAASugE,EAAa/M,EAAMxzD,GACxBqS,EAAKk9E,YAAY,CACb7K,IAAK3wB,EAAAh+C,EAAkB++C,YACvB7wD,KAAM,CACFnB,KAAM0wD,EACN/iD,KAAMzQ,IAAA,CAKlB,SAAS+wB,EAAqByiC,GAC1BnhD,EAAKk9E,YAAY,CACb7K,IAAK3wB,EAAAh+C,EAAkB4/C,oBACvB1xD,KAAMuvD,GAAA,CArLd3H,EAAA91C,EAAS43E,UAETt7E,EAAKuE,iBAAiB,WAAW,SAAUi1C,GACvC,OAAQA,EAAE5nD,KAAKmtF,KACX,IAAK,QACD59B,EAAa,IAAIz9C,EAAAA,EAAsB81C,EAAE5nD,KAAKotF,MAAM,GAAIxlC,EAAE5nD,KAAKotF,MAAM,KAC1Dj4B,GAAGrF,EAAAh+C,EAAkB8+C,SAAUpyC,EAAU+X,KAAKlpB,OACzDkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkB++C,YAAayL,EAAa/lC,KAAKlpB,OAC/DkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBg/C,aAAcpB,EAAcn5B,KAAKlpB,OACjEkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBi/C,cAAevJ,EAAejxB,KAAKlpB,OACnEkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBk/C,iBAAkBwE,EAAkBj/B,KAAKlpB,OACzEkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBm/C,oBAAqByE,EAAoBn/B,KAAKlpB,OAC9EkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBo/C,WAAY0E,EAAYr/B,KAAKlpB,OAC7DkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBq/C,iBAAkB1B,EAAkBl5B,KAAKlpB,OACzEkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBs/C,mBAAoBxpB,EAAoBrR,KAAKlpB,OAC7EkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBu/C,2BAA4B5J,EAA0BlxB,KAAKlpB,OAC3FkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBw/C,wBAAyB7qD,EAAwB8vB,KAAKlpB,OACtFkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkBy/C,4BAA6B9I,EAA2BlyB,KAAKlpB,OAC7FkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkB0/C,yBAA0B0D,EAAwB3+B,KAAKlpB,OACvFkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkB2/C,gBAAiBf,EAAiBn6B,KAAKlpB,OACvEkiD,EAAW4F,GAAGrF,EAAAh+C,EAAkB4/C,oBAAqB5kC,EAAqByJ,KAAKlpB,OAC/E,MACJ,IAAK,UACGkiD,IACAA,EAAW94B,UACX84B,EAAa,MAEjBnhD,EAAKk9E,YAAY,CAAC7K,IAAK,cACvB,MACJ,IAAK,QACDlxB,EAAWv8C,QACX,MACJ,IAAK,OACDu8C,EAAW0vB,OACX,MACJ,IAAK,OACD1vB,EAAWmtB,KAAK90B,EAAE5nD,KAAKotF,OACvB,MACJ,IAAK,QACD79B,EAAW4vB,QACX,MACJ,IAAK,SACD5vB,EAAW6vB,SACX,MACJ,IAAK,iBACD,IAAI/sE,EAASu1C,EAAE5nD,KAAKotF,MACpB59B,EAAA19C,EAAekpD,YAAY3oD,IAAA,IAEvBA,EAAO0oD,eACPvL,EAAA19C,EAAeopD,eAAen/D,GAE9ByzD,EAAA19C,EAAeqpD,kBAAkBp/D,GAAA,8DC5ExC+V,EAAgB,CACzBu7E,cAAA,EACAhG,mBAAA,EACAP,sBAAA,EAEA7L,QAAA,EAEAqS,0BAAA,EACAC,4BAA6B,IAC7BC,2BAA4B,GAE5BC,UAAA,EACAC,oBAAqB,IACrBC,wBAAyB,GACzBC,0BAAA,EAGAC,+BAAgC,IAChCC,+BAAgC,IAEhClN,6BAA8B,IAE9BtE,sBAAA,EAEAyR,cAAA,EACAvF,SAAU,QACVE,eAAgB,SAChBC,aAAc,OACdF,oBAAA,EACAG,uBAAA,EACAnG,oBAAA,EAGAE,aAAA,EACAkG,kBAAA,GAGG,SAAS/4B,IACZ,OAAO1yD,OAAOD,OAAO,CAAC,EAAG2U,EAAA,CCnC7B,IA8De49C,EA9Df,oBAAAthD,IAAA,CA4DA,OA1DWA,EAAA4/E,uBAAP,WACI,OAAOtnF,OAAOunF,aACPvnF,OAAOunF,YAAYC,gBAAgB,8CAGvC9/E,EAAA+/E,uBAAP,WACI,OAAOznF,OAAOunF,aACPvnF,OAAOunF,YAAYC,gBAAgB,wCAGvC9/E,EAAAggF,uBAAP,WACI,IAAIhgF,EAAQ,IAAIw5C,EAAA91C,EAAa,CAAC,EAAGg+C,KAC7BP,EAAanhD,EAAM+yE,WAEvB,OADA/yE,EAAMqoB,UACe,uBAAd84B,GAAqD,0BAAdA,CAAA,EAG3CnhD,EAAAigF,yBAAP,WACI,IAAIjgF,EAAQ,IAAIw5C,EAAA91C,EAAa,CAAC,EAAGg+C,KAC7BP,EAAanhD,EAAM+yE,WAEvB,OADA/yE,EAAMqoB,UACC84B,CAAA,EAGJnhD,EAAAkgF,2BAAP,SAAkC/+B,GACD,MAAzBnhD,EAASmgF,eACTngF,EAASmgF,aAAe7nF,OAAOuH,SAASwE,cAAc,UAE1D,IAAI1W,EAAUqS,EAASmgF,aAAaC,YAAYj/B,GAChD,MAAmB,aAAZxzD,GAAqC,SAAXA,CAAA,EAG9BqS,EAAAqgF,eAAP,WACI,IAAIl/B,EAAW,CACXm/B,aAAA,EACAC,iBAAA,EACAC,iBAAA,EACAC,iBAAA,EACAC,kBAAmB,GACnBC,uBAAA,EACAC,uBAAA,EACAC,uBAAA,EACAC,uBAAA,GAaJ,OAVA3/B,EAASm/B,YAActgF,EAAS4/E,yBAChCz+B,EAASs/B,gBAAkBzgF,EAASggF,yBACpC7+B,EAASu/B,kBAAoB1gF,EAASigF,2BACtC9+B,EAASo/B,gBAAkBp/B,EAASm/B,aAAen/B,EAASs/B,gBAC5Dt/B,EAASq/B,gBAAkBxgF,EAAS+/E,yBACpC5+B,EAASw/B,sBAAwB3gF,EAASkgF,2BAA2B,8CACrE/+B,EAASy/B,sBAAwB5gF,EAASkgF,2BAA2B,uCACrE/+B,EAAS0/B,sBAAwB7gF,EAASkgF,2BAA2B,sCACrE/+B,EAAS2/B,sBAAwB9gF,EAASkgF,2BAA2B,4BAE9D/+B,CAAA,EAGfnhD,CAAA,CA5DA,wCCWew5B,EAdM,CACjBunD,MAAO,QACPn+B,iBAAkB,mBAClBC,oBAAqB,sBACrBC,WAAY,aACZC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,2BAA4B,6BAC5BC,wBAAyB,0BACzBC,4BAA6B,8BAC7BC,yBAA0B,2BAC1BC,gBAAiB,iECmQN6K,EArQf,WAEI,SAAAluD,EAAYA,EAAiBmhD,GAIzB,GAHAliD,KAAKkvD,IAAM,aACXlvD,KAAKiwE,SAAW,IAAI5nB,EAAA5jD,EAEhBy9C,EAAO89B,cAAoC,oBAAb7C,OAC9B,IACIn9E,KAAK+hF,QAAU3oF,IAAoB,IACnC4G,KAAKgiF,mBAAA,EACLhiF,KAAK+hF,QAAQz8E,iBAAiB,UAAWtF,KAAKiiF,iBAAiB/4D,KAAKlpB,OACpEA,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,OAAQC,MAAO,CAACh/E,EAAiBmhD,KAChEliD,KAAKe,EAAI,CACLmhF,uBAAwBliF,KAAKmiF,wBAAwBj5D,KAAKlpB,OAE9Do7C,EAAA32C,EAAempD,iBAAiB5tD,KAAKe,EAAEmhF,wBACvCliF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,iBAAkBC,MAAO3kC,EAAA32C,EAAeyoD,aAAA,CACzE,MAAOx+D,GACL65D,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAK,6EAChBlvD,KAAK+hF,QAAU,KACf/hF,KAAKoiF,YAAc,IAAIv6B,EAAApjD,EAAsB1D,EAAiBmhD,EAAA,MAGlEliD,KAAKoiF,YAAc,IAAIv6B,EAAApjD,EAAsB1D,EAAiBmhD,GAGlE,GAAIliD,KAAKoiF,YAAa,CAClB,IAAI1zF,EAAMsR,KAAKoiF,YACf1zF,EAAIo5D,GAAGzE,EAAA5+C,EAAkB8+C,SAAUvjD,KAAKqiF,WAAWn5D,KAAKlpB,OACxDtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkB++C,YAAaxjD,KAAKsiF,cAAcp5D,KAAKlpB,OAC9DtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBg/C,aAAczjD,KAAK0uE,eAAexlD,KAAKlpB,OAChEtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBi/C,cAAe1jD,KAAK2uE,gBAAgBzlD,KAAKlpB,OAClEtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBk/C,iBAAkB3jD,KAAKuiF,mBAAmBr5D,KAAKlpB,OACxEtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBm/C,oBAAqB5jD,KAAK+6E,qBAAqB7xD,KAAKlpB,OAC7EtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBo/C,WAAY7jD,KAAKi1D,aAAa/rC,KAAKlpB,OAC5DtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBq/C,iBAAkB9jD,KAAKk1D,mBAAmBhsC,KAAKlpB,OACxEtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBs/C,mBAAoB/jD,KAAKm1D,qBAAqBjsC,KAAKlpB,OAC5EtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBu/C,2BAA4BhkD,KAAKwiF,2BAA2Bt5D,KAAKlpB,OAC1FtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBw/C,wBAAyBjkD,KAAKyiF,yBAAyBv5D,KAAKlpB,OACrFtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkBy/C,4BAA6BlkD,KAAKsyE,4BAA4BppD,KAAKlpB,OAC5FtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkB0/C,yBAA0BnkD,KAAK0iF,yBAAyBx5D,KAAKlpB,OACtFtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkB2/C,gBAAiBpkD,KAAK2iF,kBAAkBz5D,KAAKlpB,OACtEtR,EAAIo5D,GAAGzE,EAAA5+C,EAAkB4/C,oBAAqBrkD,KAAK4iF,sBAAsB15D,KAAKlpB,MAAA,EAyN1F,OArNIe,EAAArM,UAAA00B,QAAA,WACQppB,KAAK+hF,QACA/hF,KAAKgiF,oBACNhiF,KAAKgiF,mBAAA,EACLhiF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,YAC/B1kC,EAAA32C,EAAemjD,eAAe5nD,KAAKe,EAAEmhF,wBACrCliF,KAAKe,EAAI,OAGbf,KAAKoiF,YAAYh5D,UACjBppB,KAAKoiF,YAAc,MAEvBpiF,KAAKiwE,SAAS7mB,qBACdppD,KAAKiwE,SAAW,MAGpBlvE,EAAArM,UAAAozD,GAAA,SAAG/mD,EAAOmhD,GACNliD,KAAKiwE,SAASjnB,YAAYjoD,EAAOmhD,EAAA,EAGrCnhD,EAAArM,UAAAy0D,IAAA,SAAIpoD,EAAOmhD,GACPliD,KAAKiwE,SAASroB,eAAe7mD,EAAOmhD,EAAA,EAGxCnhD,EAAArM,UAAAmuF,UAAA,WACI,OAAuB,MAAhB7iF,KAAK+hF,OAAA,EAGhBhhF,EAAArM,UAAAgxD,KAAA,WACQ1lD,KAAK+hF,QACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,UAE/B9/E,KAAKoiF,YAAYz8E,OAAA,EAIzB5E,EAAArM,UAAAmkF,MAAA,WACQ74E,KAAK+hF,QACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,SAE/B9/E,KAAKoiF,YAAYxQ,MAAA,EAIzB7wE,EAAArM,UAAA26E,KAAA,SAAKtuE,GACGf,KAAK+hF,QACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,OAAQC,MAAOh/E,IAE9Cf,KAAKoiF,YAAY/S,KAAKtuE,EAAA,EAI9BA,EAAArM,UAAAo9E,MAAA,WACQ9xE,KAAK+hF,QACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,UAE/B9/E,KAAKoiF,YAAYtQ,OAAA,EAIzB/wE,EAAArM,UAAAq9E,OAAA,WACQ/xE,KAAK+hF,QACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,WAE/B9/E,KAAKoiF,YAAYrQ,QAAA,EAIzBhxE,EAAArM,UAAAg6E,eAAA,SAAe3tE,EAAMmhD,GAArB,IAAAxzD,EAAA,KAEIs5C,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKitB,EAAA5+C,EAAkBg/C,aAAc1iD,EAAMmhD,EAAA,KAIjEnhD,EAAArM,UAAAi6E,gBAAA,SAAgB5tE,EAAMmhD,GAAtB,IAAAxzD,EAAA,KACIs5C,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKitB,EAAA5+C,EAAkBi/C,cAAe3iD,EAAMmhD,EAAA,KAIlEnhD,EAAArM,UAAA6tF,mBAAA,eAAAxhF,EAAA,KACIinC,QAAQloB,UAAUJ,MAAK,WACnB3e,EAAKkvE,SAAS75C,KAAKitB,EAAA5+C,EAAkBk/C,iBAAA,KAI7C5iD,EAAArM,UAAAqmF,qBAAA,eAAAh6E,EAAA,KACIinC,QAAQloB,UAAUJ,MAAK,WACnB3e,EAAKkvE,SAAS75C,KAAKitB,EAAA5+C,EAAkBm/C,oBAAA,KAI7C7iD,EAAArM,UAAAugE,aAAA,SAAal0D,GAAb,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBo/C,WAAY9iD,EAAA,KAIzDA,EAAArM,UAAAwgE,mBAAA,SAAmBn0D,GAAnB,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBq/C,iBAAkB/iD,EAAA,KAI/DA,EAAArM,UAAAygE,qBAAA,SAAqBp0D,GAArB,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBs/C,mBAAoBhjD,EAAA,KAIjEA,EAAArM,UAAA8tF,2BAAA,SAA4BzhF,GAA5B,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBu/C,2BAA4BjjD,EAAA,KAIzEA,EAAArM,UAAA+tF,yBAAA,SAA0B1hF,GAA1B,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBw/C,wBAAyBljD,EAAA,KAItEA,EAAArM,UAAA49E,4BAAA,SAA4BvxE,GAA5B,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkBy/C,4BAA6BnjD,EAAA,KAI1EA,EAAArM,UAAAguF,yBAAA,SAAyB3hF,GAAzB,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkB0/C,yBAA0BpjD,EAAA,KAIvEA,EAAArM,UAAAiuF,kBAAA,SAAkB5hF,GAAlB,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkB2/C,gBAAiBrjD,EAAA,KAI9DA,EAAArM,UAAA2tF,WAAA,SAAWthF,EAAMmhD,GAAjB,IAAAxzD,EAAA,KACIs5C,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKitB,EAAA5+C,EAAkB8+C,SAAUxiD,EAAMmhD,EAAA,KAI7DnhD,EAAArM,UAAA4tF,cAAA,SAAcvhF,EAAMmhD,GAApB,IAAAxzD,EAAA,KACIs5C,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKitB,EAAA5+C,EAAkB++C,YAAaziD,EAAMmhD,EAAA,KAIhEnhD,EAAArM,UAAAkuF,sBAAA,SAAsB7hF,GAAtB,IAAAmhD,EAAA,KACIla,QAAQloB,UAAUJ,MAAK,WACnBwiC,EAAK+tB,SAAS75C,KAAKitB,EAAA5+C,EAAkB4/C,oBAAqBtjD,EAAA,KAIlEA,EAAArM,UAAAytF,wBAAA,SAAwBphF,GAChBf,KAAK+hF,SACL/hF,KAAK+hF,QAAQ9D,YAAY,CAAC6B,IAAK,iBAAkBC,MAAOh/E,GAAA,EAIhEA,EAAArM,UAAAutF,iBAAA,SAAiBlhF,GACb,IAAImhD,EAAUnhD,EAAEpO,KACZjE,EAAOwzD,EAAQvvD,KAEnB,GAAoB,cAAhBuvD,EAAQkxB,KAAuBpzE,KAAKgiF,kBAIpC,OAHAhiF,KAAKgiF,mBAAA,EACLhiF,KAAK+hF,QAAQe,iBACb9iF,KAAK+hF,QAAU,MAInB,OAAQ7/B,EAAQkxB,KACZ,KAAK/vB,EAAA5+C,EAAkBg/C,aACvB,KAAKJ,EAAA5+C,EAAkBi/C,cACnB1jD,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,IAAK1kF,EAAK8C,KAAM9C,EAAKiE,MAChD,MACJ,KAAK0wD,EAAA5+C,EAAkBk/C,iBACvB,KAAKN,EAAA5+C,EAAkBm/C,oBACnB5jD,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,KAC3B,MACJ,KAAK/vB,EAAA5+C,EAAkBo/C,WACnB9zD,OAAOkjF,eAAevkF,EAAMyiB,EAAA1M,EAAU/P,WACtCsL,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,IAAK1kF,GAChC,MACJ,KAAK20D,EAAA5+C,EAAkBq/C,iBACvB,KAAKT,EAAA5+C,EAAkBs/C,mBACvB,KAAKV,EAAA5+C,EAAkBu/C,2BACvB,KAAKX,EAAA5+C,EAAkBw/C,wBACvB,KAAKZ,EAAA5+C,EAAkBy/C,4BACvB,KAAKb,EAAA5+C,EAAkB0/C,yBACvB,KAAKd,EAAA5+C,EAAkB2/C,gBACnBpkD,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,IAAK1kF,GAChC,MACJ,KAAK20D,EAAA5+C,EAAkB8+C,SACvB,KAAKF,EAAA5+C,EAAkB++C,YACnBxjD,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,IAAK1kF,EAAK8C,KAAM9C,EAAKyQ,MAChD,MACJ,KAAKkkD,EAAA5+C,EAAkB4/C,oBACnBrkD,KAAKiwE,SAAS75C,KAAK8rB,EAAQkxB,IAAK1kF,GAChC,MACJ,IAAK,kBACD65D,EAAA9jD,EAAIo+C,QAAQzsB,KAAK,MAAO1nC,EAAK8C,KAAM9C,EAAKmxF,QAAA,EAOxD9+E,CAAA,CAnQA,GCFe0e,EAPG,CACdqiE,MAAO,QACPiB,YAAa,cACbC,WAAY,aACZC,YAAa,6BCogBFzyB,EAhgBf,WAEI,SAAAzvD,EAAYA,GACRf,KAAKkvD,IAAM,gBAEXlvD,KAAKg1D,QAAUj0D,EACff,KAAKiwE,SAAW,IAAI5nB,EAAA5jD,EAEhBzE,KAAKg1D,QAAQ4Y,QAAkD,MAAxC5tE,KAAKg1D,QAAQkuB,0BAEpCljF,KAAKg1D,QAAQkuB,yBAAA,GAGjBljF,KAAKe,EAAI,CACLoiF,aAAcnjF,KAAKojF,cAAcl6D,KAAKlpB,MACtCqjF,cAAerjF,KAAKsjF,eAAep6D,KAAKlpB,MACxCujF,cAAevjF,KAAKwjF,eAAet6D,KAAKlpB,MACxCyjF,oBAAqBzjF,KAAK0jF,qBAAqBx6D,KAAKlpB,MACpD2jF,wBAAyB3jF,KAAK4jF,yBAAyB16D,KAAKlpB,OAGhEA,KAAK6jF,aAAe,KACpB7jF,KAAK8jF,sBAAwB,KAC7B9jF,KAAK+jF,cAAgB,KAErB/jF,KAAKgkF,eAAA,EACLhkF,KAAKikF,gBAAA,EAELjkF,KAAKkkF,0BAAA,EACLlkF,KAAKmkF,sBAAwB,EAE7BnkF,KAAKokF,yBAA2B,GAChCpkF,KAAKqkF,WAAa,CACdC,MAAO,KACPC,MAAO,MAEXvkF,KAAKwkF,eAAiB,CAClBF,MAAO,KACPC,MAAO,MAEXvkF,KAAKykF,kBAAoB,CACrBH,MAAO,KACPC,MAAO,MAEXvkF,KAAK0kF,iBAAmB,CACpBJ,MAAO,GACPC,MAAO,IAEXvkF,KAAK2kF,qBAAuB,CACxBL,MAAO,GACPC,MAAO,IAEXvkF,KAAK4kF,SAAW,IAAI5/E,EAAAP,CAAA,CA0c5B,OAvcI1D,EAAArM,UAAA00B,QAAA,YACQppB,KAAK+jF,eAAiB/jF,KAAK6jF,eAC3B7jF,KAAK6kF,qBAET7kF,KAAKe,EAAI,KACTf,KAAKiwE,SAAS7mB,qBACdppD,KAAKiwE,SAAW,MAGpBlvE,EAAArM,UAAAozD,GAAA,SAAG/mD,EAAOmhD,GACNliD,KAAKiwE,SAASjnB,YAAYjoD,EAAOmhD,EAAA,EAGrCnhD,EAAArM,UAAAy0D,IAAA,SAAIpoD,EAAOmhD,GACPliD,KAAKiwE,SAASroB,eAAe7mD,EAAOmhD,EAAA,EAGxCnhD,EAAArM,UAAAowF,mBAAA,SAAmB/jF,GACf,GAAIf,KAAK6jF,aACL,MAAM,IAAI/3C,EAAArnC,EAAsB,yDAEpC,IAAIy9C,EAAKliD,KAAK6jF,aAAe,IAAIxqF,OAAOunF,YACxC1+B,EAAG58C,iBAAiB,aAActF,KAAKe,EAAEoiF,cACzCjhC,EAAG58C,iBAAiB,cAAetF,KAAKe,EAAEsiF,eAC1CnhC,EAAG58C,iBAAiB,cAAetF,KAAKe,EAAEwiF,eAE1CvjF,KAAK+jF,cAAgBhjF,EACrBf,KAAK8jF,sBAAwBzqF,OAAOyjF,IAAII,gBAAgBl9E,KAAK6jF,cAC7D9iF,EAAa2X,IAAM1Y,KAAK8jF,qBAAA,EAG5B/iF,EAAArM,UAAAmwF,mBAAA,WACI,GAAI7kF,KAAK6jF,aAAc,CACnB,IAAI9iF,EAAKf,KAAK6jF,aACd,IAAK,IAAI3hC,KAAQliD,KAAKwkF,eAAgB,CAElC,IAAI91F,EAAKsR,KAAK0kF,iBAAiBxiC,GAC/BxzD,EAAGq2C,OAAO,EAAGr2C,EAAGF,QAChBwR,KAAK0kF,iBAAiBxiC,GAAQ,KAC9BliD,KAAK2kF,qBAAqBziC,GAAQ,KAClCliD,KAAKykF,kBAAkBviC,GAAQ,KAG/B,IAAIC,EAAKniD,KAAKwkF,eAAetiC,GAC7B,GAAIC,EAAI,CACJ,GAAsB,WAAlBphD,EAAGyhC,WAAyB,CAE5B,IACIzhC,EAAGgkF,mBAAmB5iC,EAAA,CACxB,MAAOphD,GACLwnD,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAKnuD,EAAM3B,QAAA,CAE1B+iD,EAAG58C,oBAAoB,QAASvF,KAAKe,EAAE0iF,qBACvCthC,EAAG58C,oBAAoB,YAAavF,KAAKe,EAAE4iF,wBAAA,CAE/C3jF,KAAKqkF,WAAWniC,GAAQ,KACxBliD,KAAKwkF,eAAetiC,GAAQ,MAGpC,GAAsB,SAAlBnhD,EAAGyhC,WACH,IACIzhC,EAAGikF,aAAA,CACL,MAAOjkF,GACLwnD,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAKnuD,EAAM3B,QAAA,CAG9B2B,EAAGwE,oBAAoB,aAAcvF,KAAKe,EAAEoiF,cAC5CpiF,EAAGwE,oBAAoB,cAAevF,KAAKe,EAAEsiF,eAC7CtiF,EAAGwE,oBAAoB,cAAevF,KAAKe,EAAEwiF,eAC7CvjF,KAAKokF,yBAA2B,GAChCpkF,KAAKgkF,eAAA,EACLhkF,KAAK4kF,SAASn6B,QACdzqD,KAAK6jF,aAAe,KAGpB7jF,KAAK+jF,gBACL/jF,KAAK+jF,cAAcrrE,IAAM,GACzB1Y,KAAK+jF,cAAcznF,gBAAgB,OACnC0D,KAAK+jF,cAAgB,MAErB/jF,KAAK8jF,wBACLzqF,OAAOyjF,IAAImI,gBAAgBjlF,KAAK8jF,uBAChC9jF,KAAK8jF,sBAAwB,OAIrC/iF,EAAArM,UAAAwwF,kBAAA,SAAkBnkF,EAAamhD,GAC3B,IAAKliD,KAAK6jF,cAAiD,SAAjC7jF,KAAK6jF,aAAarhD,WAMxC,OAHAxiC,KAAKokF,yBAAyB/wF,KAAK0N,QAEnCf,KAAK0kF,iBAAiB3jF,EAAYvP,MAAM6B,KAAK0N,GAIjD,IAAIrS,EAAKqS,EACLohD,EAAW,GAAGzzD,EAAG2nD,UACjB3nD,EAAGqqE,OAASrqE,EAAGqqE,MAAMvqE,OAAS,IAC9B2zD,GAAY,WAAWzzD,EAAGqqE,OAG9B,IAAIxe,GAAA,EAKJ,GAHAgO,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,8CAAgD/M,GAChEniD,KAAKykF,kBAAkB/1F,EAAG8C,MAAQ9C,EAE9ByzD,IAAaniD,KAAKqkF,WAAW31F,EAAG8C,MAAO,CACvC,GAAKwO,KAAKqkF,WAAW31F,EAAG8C,MAYpB+2D,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,WAAWxgE,EAAG8C,KAAI,8BAA8BwO,KAAKqkF,WAAW31F,EAAG8C,MAAK,aAAa2wD,OAZ1E,CAC3B5H,GAAA,EACA,IACI,IAAI91C,EAAKzE,KAAKwkF,eAAe91F,EAAG8C,MAAQwO,KAAK6jF,aAAasB,gBAAgBhjC,GAC1E19C,EAAGa,iBAAiB,QAAStF,KAAKe,EAAE0iF,qBACpCh/E,EAAGa,iBAAiB,YAAatF,KAAKe,EAAE4iF,wBAAA,CAC1C,MAAO5iF,GAGL,OAFAwnD,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAKnuD,EAAM3B,cACtBY,KAAKiwE,SAAS75C,KAAK3W,EAAUqiE,MAAO,CAACzzF,KAAM0S,EAAM1S,KAAM+kF,IAAKryE,EAAM3B,SAAA,EAM1EY,KAAKqkF,WAAW31F,EAAG8C,MAAQ2wD,CAAA,CAG1BD,GAEDliD,KAAK0kF,iBAAiBh2F,EAAG8C,MAAM6B,KAAK3E,GAEnC6rD,GACGv6C,KAAKwkF,eAAe91F,EAAG8C,QAAUwO,KAAKwkF,eAAe91F,EAAG8C,MAAM4zF,UAC9DplF,KAAKqlF,oBAGTjjC,EAAA39C,EAAQiiD,QAA2B,eAAjBh4D,EAAG2nD,WAA8B3nD,EAAG+gF,cAAgB,IAGtEzvE,KAAKkkF,0BAAA,EACLlkF,KAAKmkF,sBAAwBz1F,EAAG+gF,cAAgB,IAChDzvE,KAAKslF,6BAAA,EAIbvkF,EAAArM,UAAA6wF,mBAAA,SAAmBxkF,GACf,IAAImhD,EAAKnhD,EACTf,KAAK0kF,iBAAiBxiC,EAAG1wD,MAAM6B,KAAK6uD,GAEhCliD,KAAKg1D,QAAQkuB,yBAA2BljF,KAAKwlF,4BAC7CxlF,KAAKylF,yBAGT,IAAI/2F,EAAKsR,KAAKwkF,eAAetiC,EAAG1wD,OAC5B9C,GAAOA,EAAG02F,UAAaplF,KAAK0lF,2BAC5B1lF,KAAKqlF,mBAAA,EAIbtkF,EAAArM,UAAA26E,KAAA,SAAKtuE,GAED,IAAK,IAAImhD,KAAQliD,KAAKwkF,eAClB,GAAKxkF,KAAKwkF,eAAetiC,GAAzB,CAKA,IAAIxzD,EAAKsR,KAAKwkF,eAAetiC,GAC7B,GAAqC,SAAjCliD,KAAK6jF,aAAarhD,WAClB,IAGI9zC,EAAG0vB,OAAA,CACL,MAAOrd,GACLwnD,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAKnuD,EAAM3B,QAAA,CAK9BY,KAAK4kF,SAASn6B,QAGd,IAAItI,EAAKniD,KAAK0kF,iBAAiBxiC,GAG/B,GAFAC,EAAGpd,OAAO,EAAGod,EAAG3zD,QAEqB,WAAjCwR,KAAK6jF,aAAarhD,WAAtB,CAMA,IAAK,IAAI+X,EAAI,EAAGA,EAAI7rD,EAAGi3F,SAASn3F,OAAQ+rD,IAAK,CACzC,IAAI91C,EAAQ/V,EAAGi3F,SAAShgF,MAAM40C,GAC1BkI,EAAM/zD,EAAGi3F,SAAS//E,IAAI20C,GAC1Bv6C,KAAK2kF,qBAAqBziC,GAAM7uD,KAAK,CAACsS,MAAKlB,EAAEmB,IAAG68C,GAAA,CAWpD,GAPK/zD,EAAG02F,UACJplF,KAAK4lF,kBAMLxjC,EAAA39C,EAAQiiD,OAAQ,CAChB,IAAIrE,EAAkBriD,KAAKykF,kBAAkBviC,GACzCG,IACAriD,KAAK0kF,iBAAiBxiC,GAAM7uD,KAAKgvD,GAC5B3zD,EAAG02F,UACJplF,KAAKqlF,oBAAA,KAOzBtkF,EAAArM,UAAAswF,YAAA,WACI,IAAIjkF,EAAKf,KAAK6jF,aACV3hC,EAAKliD,KAAKwkF,eACTzjF,GAAwB,SAAlBA,EAAGyhC,WAQV0f,EAAGoiC,OAASpiC,EAAGoiC,MAAMc,UAAYljC,EAAGqiC,OAASriC,EAAGqiC,MAAMa,SAGtDplF,KAAKikF,gBAAA,GAELjkF,KAAKikF,gBAAA,EAILljF,EAAGikF,eAhBCjkF,GAAwB,WAAlBA,EAAGyhC,YAA2BxiC,KAAK6lF,wBAGzC7lF,KAAKikF,gBAAA,EAAiB,EAiBlCljF,EAAArM,UAAAk4D,mBAAA,SAAmB7rD,GACf,OAAOf,KAAK4kF,SAASj6B,0BAA0B5pD,EAAA,EAGnDA,EAAArM,UAAA8wF,yBAAA,WACI,IAAKxlF,KAAKg1D,QAAQkuB,wBACd,OAAO,EAGX,IAAIniF,EAAcf,KAAK+jF,cAAc/rF,YAErC,IAAK,IAAIkqD,KAAQliD,KAAKwkF,eAAgB,CAClC,IAAI91F,EAAKsR,KAAKwkF,eAAetiC,GAC7B,GAAIxzD,EAAI,CACJ,IAAIyzD,EAAWzzD,EAAGi3F,SAClB,GAAIxjC,EAAS3zD,QAAU,GACfuS,EAAcohD,EAASx8C,MAAM,IAAM3F,KAAKg1D,QAAQwrB,+BAChD,OAAO,GAMvB,OAAO,GAGXz/E,EAAArM,UAAA+wF,uBAAA,WACI,IAAI1kF,EAAcf,KAAK+jF,cAAc/rF,YAErC,IAAK,IAAIkqD,KAAQliD,KAAKwkF,eAAgB,CAClC,IAAI91F,EAAKsR,KAAKwkF,eAAetiC,GAC7B,GAAIxzD,EAAI,CAIJ,IAHA,IAAIyzD,EAAWzzD,EAAGi3F,SACdprC,GAAA,EAEK91C,EAAI,EAAGA,EAAI09C,EAAS3zD,OAAQiW,IAAK,CACtC,IAAIg+C,EAAQN,EAASx8C,MAAMlB,GACvB49C,EAAMF,EAASv8C,IAAInB,GAEvB,GAAIg+C,GAAS1hD,GAAeA,EAAcshD,EAAM,GAC5C,GAAIthD,EAAc0hD,GAASziD,KAAKg1D,QAAQwrB,+BAAgC,CACpEjmC,GAAA,EACA,IAAIJ,EAAYp5C,EAAcf,KAAKg1D,QAAQyrB,+BAC3CzgF,KAAK2kF,qBAAqBziC,GAAM7uD,KAAK,CAACsS,MAAO88C,EAAO78C,IAAKu0C,GAAA,OAEtDkI,EAAMthD,IACbw5C,GAAA,EACAv6C,KAAK2kF,qBAAqBziC,GAAM7uD,KAAK,CAACsS,MAAO88C,EAAO78C,IAAKy8C,IAAA,CAI7D9H,IAAa7rD,EAAG02F,UAChBplF,KAAK4lF,iBAAA,IAMrB7kF,EAAArM,UAAA4wF,2BAAA,WACI,IAAIvkF,EAAKf,KAAKwkF,eACd,GAAsC,IAAlCxkF,KAAK+jF,cAAcvhD,YAAqD,SAAjCxiC,KAAK6jF,aAAarhD,cAGxDzhC,EAAGujF,OAASvjF,EAAGujF,MAAMc,UAAcrkF,EAAGwjF,OAASxjF,EAAGwjF,MAAMa,UAA7D,CAIA,IAAIljC,EAAUliD,KAAK6jF,aAAan6B,SAC5Bh7D,EAASsR,KAAKmkF,sBAEdz1F,EAAS,IAAMmqD,MAAMqJ,IAAYxzD,EAASwzD,KAC1CqG,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,oCAAoChN,EAAO,OAAOxzD,GAClEsR,KAAK6jF,aAAan6B,SAAWh7D,GAGjCsR,KAAKkkF,0BAAA,EACLlkF,KAAKmkF,sBAAwB,IAGjCpjF,EAAArM,UAAAkxF,gBAAA,WACI,IAAK,IAAI7kF,KAAQf,KAAK2kF,qBAClB,GAAK3kF,KAAKwkF,eAAezjF,KAASf,KAAKwkF,eAAezjF,GAAMqkF,SAK5D,IAFA,IAAIljC,EAAKliD,KAAKwkF,eAAezjF,GACzBrS,EAASsR,KAAK2kF,qBAAqB5jF,GAChCrS,EAAOF,SAAW0zD,EAAGkjC,UAAU,CAClC,IAAIjjC,EAAQzzD,EAAO6wD,QACnB2C,EAAG4jC,OAAO3jC,EAAMx8C,MAAOw8C,EAAMv8C,IAAA,GAKzC7E,EAAArM,UAAA2wF,kBAAA,WACI,IAAItkF,EAAkBf,KAAK0kF,iBAE3B,IAAK,IAAIxiC,KAAQnhD,EACb,GAAKf,KAAKwkF,eAAetiC,KAASliD,KAAKwkF,eAAetiC,GAAMkjC,UAIxDrkF,EAAgBmhD,GAAM1zD,OAAS,EAAG,CAClC,IAAIE,EAAUqS,EAAgBmhD,GAAM3C,QAEpC,GAAI7wD,EAAQqhF,gBAAiB,CAGzB,IAAI5tB,EAAgBniD,KAAKwkF,eAAetiC,GAAM6tB,gBAC1Cx1B,EAAe7rD,EAAQqhF,gBAAkB,IAEjCp5E,KAAK4yE,IAAIpnB,EAAgB5H,GACzB,KACRgO,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,0CAA0C/M,EAAa,OAAO5H,GAC9Ev6C,KAAKwkF,eAAetiC,GAAM6tB,gBAAkBx1B,UAEzC7rD,EAAQqhF,eAAA,CAGnB,IAAKrhF,EAAQiE,MAAoC,IAA5BjE,EAAQiE,KAAK28D,WAE9B,SAGJ,IACItvD,KAAKwkF,eAAetiC,GAAM6jC,aAAar3F,EAAQiE,MAC/CqN,KAAKgkF,eAAA,EACQ,UAAT9hC,GAAoBxzD,EAAQ+F,eAAe,SAC3CuL,KAAK4kF,SAASl6B,YAAYh8D,EAAQyQ,KAAKirD,WAAA,CAE7C,MAAOrpD,GACLf,KAAK0kF,iBAAiBxiC,GAAMpK,QAAQppD,GACjB,KAAfqS,EAAM1S,MAWD2R,KAAKgkF,eACNhkF,KAAKiwE,SAAS75C,KAAK3W,EAAUwjE,aAEjCjjF,KAAKgkF,eAAA,IAELz7B,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAKnuD,EAAM3B,SACtBY,KAAKiwE,SAAS75C,KAAK3W,EAAUqiE,MAAO,CAACzzF,KAAM0S,EAAM1S,KAAM+kF,IAAKryE,EAAM3B,UAAA,IAOtF2B,EAAArM,UAAA0uF,cAAA,WAII,GAHA76B,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,4BAChBlvD,KAAK6jF,aAAat+E,oBAAoB,aAAcvF,KAAKe,EAAEoiF,cAEvDnjF,KAAKokF,yBAAyB51F,OAAS,EAEvC,IADA,IAAIuS,EAAWf,KAAKokF,yBACbrjF,EAASvS,QAAQ,CACpB,IAAI0zD,EAAUnhD,EAASw+C,QACvBv/C,KAAKklF,kBAAkBhjC,GAAA,EAAS,CAIpCliD,KAAK6lF,uBACL7lF,KAAKqlF,oBAETrlF,KAAKiwE,SAAS75C,KAAK3W,EAAUsjE,YAAA,EAGjChiF,EAAArM,UAAA4uF,eAAA,WAEI/6B,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,8BAGpBnuD,EAAArM,UAAA8uF,eAAA,WAEIj7B,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,6BACZlvD,KAAK6jF,cAA0B,MAAV7jF,KAAKe,IAC1Bf,KAAK6jF,aAAat+E,oBAAoB,aAAcvF,KAAKe,EAAEoiF,cAC3DnjF,KAAK6jF,aAAat+E,oBAAoB,cAAevF,KAAKe,EAAEsiF,eAC5DrjF,KAAK6jF,aAAat+E,oBAAoB,cAAevF,KAAKe,EAAEwiF,eAAA,EAIpExiF,EAAArM,UAAAmxF,oBAAA,WACI,IAAI9kF,EAAKf,KAAK0kF,iBACd,OAAO3jF,EAAGujF,MAAM91F,OAAS,GAAKuS,EAAGwjF,MAAM/1F,OAAS,GAGpDuS,EAAArM,UAAAgxF,wBAAA,WACI,IAAI3kF,EAAMf,KAAK2kF,qBACf,OAAO5jF,EAAIujF,MAAM91F,OAAS,GAAKuS,EAAIwjF,MAAM/1F,OAAS,GAGtDuS,EAAArM,UAAAkvF,yBAAA,WACQ5jF,KAAKkkF,yBACLlkF,KAAKslF,6BACEtlF,KAAK0lF,0BACZ1lF,KAAK4lF,kBACE5lF,KAAK6lF,sBACZ7lF,KAAKqlF,oBACErlF,KAAKikF,gBACZjkF,KAAKglF,cAEThlF,KAAKiwE,SAAS75C,KAAK3W,EAAUujE,WAAA,EAGjCjiF,EAAArM,UAAAgvF,qBAAA,SAAqB3iF,GACjBwnD,EAAA9jD,EAAI1D,EAAEf,KAAKkvD,IAAK,uBAAuBnuD,EAAA,EAI/CA,CAAA,CA9fA,UCLa65C,EAAa,CACtBorC,cAAe,eACfC,YAAa,aACbC,YAAa,cAGJjjC,EAAe,CACxBkjC,kBAAmBhsC,EAAAn1C,EAAa4/C,UAChCwhC,4BAA6BjsC,EAAAn1C,EAAa6/C,yBAC1CwhC,gBAAiBlsC,EAAAn1C,EAAa8/C,mBAC9BwhC,gCAAiCnsC,EAAAn1C,EAAaggD,wBAE9CuhC,gBAAiB,gBAEjBC,mBAAoB97D,EAAAjmB,EAAY0iD,aAChCs/B,yBAA0B/7D,EAAAjmB,EAAY2iD,mBACtCs/B,wBAAyBh8D,EAAAjmB,EAAY4iD,mBC4lB1BoJ,EAnmBf,WAEI,SAAA1vD,EAAYA,EAAiBmhD,GACzBliD,KAAKkvD,IAAM,YACXlvD,KAAKilD,MAAQ,YACbjlD,KAAKiwE,SAAW,IAAI5nB,EAAA5jD,EAEpBzE,KAAKg1D,QAAUvS,IACO,iBAAXP,GACPnyD,OAAOD,OAAOkQ,KAAKg1D,QAAS9S,GAGhC,IAAIxzD,EAAgBqS,EAAgBvP,KAAKgL,cACzC,GAAsB,QAAlB9N,GACyB,WAAlBA,GACkB,SAAlBA,GACkB,QAAlBA,EACP,MAAM,IAAIo9C,EAAA9mC,EAAyB,qEAGnCjE,EAAgB6sE,SAChB5tE,KAAKg1D,QAAQ4Y,QAAA,GAGjB5tE,KAAKe,EAAI,CACL4lF,kBAAmB3mF,KAAK4mF,mBAAmB19D,KAAKlpB,MAChD6mF,WAAY7mF,KAAK8mF,YAAY59D,KAAKlpB,MAClC+mF,WAAY/mF,KAAKgnF,YAAY99D,KAAKlpB,MAClCinF,WAAYjnF,KAAKknF,YAAYh+D,KAAKlpB,MAClCmnF,YAAannF,KAAKonF,aAAal+D,KAAKlpB,OAGpC4lD,KAAK0uB,aAAe1uB,KAAK0uB,YAAYn/E,IACrC6K,KAAKu0E,KAAO3uB,KAAK0uB,YAAYn/E,IAAI+zB,KAAK08B,KAAK0uB,aAE3Ct0E,KAAKu0E,KAAOrsE,KAAK/S,IAGrB6K,KAAK2wE,iBAAmB,KACxB3wE,KAAKqnF,iBAAA,EACLrnF,KAAKsnF,iBAAmB,KACxBtnF,KAAKunF,iBAAmB,KAExBvnF,KAAKqwE,iBAAmBtvE,EACxBf,KAAK+jF,cAAgB,KACrB/jF,KAAKwnF,QAAU,KACfxnF,KAAKynF,YAAc,KAEnBznF,KAAK0nF,kBAAA,EACL1nF,KAAK2nF,iBAAA,EACL3nF,KAAK4nF,kBAAA,EAEL5nF,KAAKk2D,WAAa,KAClBl2D,KAAK6nF,gBAAkB,KAEvB,IAAI1lC,EAAoBC,EAAA39C,EAAQ+hD,SACRpE,EAAA39C,EAAQi8C,QAAQyF,MAAQ,IACE,KAA1B/D,EAAA39C,EAAQi8C,QAAQyF,OAAgB/D,EAAA39C,EAAQi8C,QAAQ6F,MAAQ,MAChFvmD,KAAK8nF,uBAAuB3lC,GAAoBC,EAAA39C,EAAQuiD,QAAU5E,EAAA39C,EAAQqiD,MAEtE9mD,KAAK8nF,sBACL9nF,KAAKg1D,QAAQ0rB,cAAA,EAAe,CAoiBxC,OAhiBI3/E,EAAArM,UAAA00B,QAAA,WACiC,MAAzBppB,KAAKunF,mBACLluF,OAAOm6E,cAAcxzE,KAAKunF,kBAC1BvnF,KAAKunF,iBAAmB,MAExBvnF,KAAKynF,aACLznF,KAAK+nF,SAEL/nF,KAAK+jF,eACL/jF,KAAK6kF,qBAET7kF,KAAKe,EAAI,KACTf,KAAKqwE,iBAAmB,KAExBrwE,KAAKiwE,SAAS7mB,qBACdppD,KAAKiwE,SAAW,MAGpBlvE,EAAArM,UAAAozD,GAAA,SAAG/mD,EAAOmhD,GAAV,IAAAxzD,EAAA,KACQqS,IAAUw5B,EAAaspB,WACA,MAAnB7jD,KAAKk2D,YACLluB,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKmE,EAAaspB,WAAYn1D,EAAKs5F,UAAA,IAGlDjnF,IAAUw5B,EAAa6pB,iBACF,MAAxBpkD,KAAK6nF,iBACL7/C,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKmE,EAAa6pB,gBAAiB11D,EAAKu5F,eAAA,IAIlEjoF,KAAKiwE,SAASjnB,YAAYjoD,EAAOmhD,EAAA,EAGrCnhD,EAAArM,UAAAy0D,IAAA,SAAIpoD,EAAOmhD,GACPliD,KAAKiwE,SAASroB,eAAe7mD,EAAOmhD,EAAA,EAGxCnhD,EAAArM,UAAAowF,mBAAA,SAAmB/jF,GAAnB,IAAAmhD,EAAA,KA6BI,GA5BAliD,KAAK+jF,cAAgBhjF,EACrBA,EAAauE,iBAAiB,iBAAkBtF,KAAKe,EAAE4lF,mBACvD5lF,EAAauE,iBAAiB,UAAWtF,KAAKe,EAAE8lF,YAChD9lF,EAAauE,iBAAiB,UAAWtF,KAAKe,EAAEgmF,YAChDhmF,EAAauE,iBAAiB,UAAWtF,KAAKe,EAAEkmF,YAChDlmF,EAAauE,iBAAiB,WAAYtF,KAAKe,EAAEomF,aAEjDnnF,KAAKwnF,QAAU,IAAIh3B,EAAcxwD,KAAKg1D,SAEtCh1D,KAAKwnF,QAAQ1/B,GAAGroC,EAAUujE,WAAYhjF,KAAKkoF,gBAAgBh/D,KAAKlpB,OAChEA,KAAKwnF,QAAQ1/B,GAAGroC,EAAUwjE,YAAajjF,KAAKmoF,iBAAiBj/D,KAAKlpB,OAClEA,KAAKwnF,QAAQ1/B,GAAGroC,EAAUsjE,aAAa,WACnC7gC,EAAKwlC,kBAAA,EACDxlC,EAAKylC,kBACLzlC,EAAKylC,iBAAA,EACLzlC,EAAKkmC,OAAA,IAGbpoF,KAAKwnF,QAAQ1/B,GAAGroC,EAAUqiE,OAAO,SAAC/gF,GAC9BmhD,EAAK+tB,SAAS75C,KAAKmE,EAAaunD,MACblnC,EAAWqrC,YACXhjC,EAAasjC,gBACbxlF,EAAA,IAIvBf,KAAKwnF,QAAQ1C,mBAAmB/jF,GAEH,MAAzBf,KAAK2wE,iBACL,IACI5vE,EAAa/I,YAAcgI,KAAK2wE,iBAChC3wE,KAAK2wE,iBAAmB,KAC1B,MAAO5vE,GAAA,GAOjBA,EAAArM,UAAAmwF,mBAAA,WACQ7kF,KAAK+jF,gBACL/jF,KAAKwnF,QAAQ3C,qBACb7kF,KAAK+jF,cAAcx+E,oBAAoB,iBAAkBvF,KAAKe,EAAE4lF,mBAChE3mF,KAAK+jF,cAAcx+E,oBAAoB,UAAWvF,KAAKe,EAAE8lF,YACzD7mF,KAAK+jF,cAAcx+E,oBAAoB,UAAWvF,KAAKe,EAAEgmF,YACzD/mF,KAAK+jF,cAAcx+E,oBAAoB,UAAWvF,KAAKe,EAAEkmF,YACzDjnF,KAAK+jF,cAAcx+E,oBAAoB,WAAYvF,KAAKe,EAAEomF,aAC1DnnF,KAAK+jF,cAAgB,MAErB/jF,KAAKwnF,UACLxnF,KAAKwnF,QAAQp+D,UACbppB,KAAKwnF,QAAU,OAIvBzmF,EAAArM,UAAA0zF,KAAA,eAAArnF,EAAA,KACI,IAAKf,KAAK+jF,cACN,MAAM,IAAIj4C,EAAArnC,EAAsB,oDAEpC,GAAIzE,KAAKynF,YACL,MAAM,IAAI37C,EAAArnC,EAAsB,iEAEhCzE,KAAK2nF,kBAIL3nF,KAAKg1D,QAAQurB,2BAAA,IAA4BvgF,KAAK0nF,iBAC9C1nF,KAAK2nF,iBAAA,GAIL3nF,KAAK+jF,cAAcvhD,WAAa,IAChCxiC,KAAKqnF,iBAAA,EAELrnF,KAAK+jF,cAAc/rF,YAAc,GAGrCgI,KAAKynF,YAAc,IAAIx4B,EAAWjvD,KAAKqwE,iBAAkBrwE,KAAKg1D,SAE9Dh1D,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBg/C,cAAc,SAACvB,EAAMxzD,GACvDqS,EAAKymF,QAAQtC,kBAAkBx2F,EAAA,IAEnCsR,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBi/C,eAAe,SAACxB,EAAMxzD,GAIxD,GAHAqS,EAAKymF,QAAQjC,mBAAmB72F,GAG5BqS,EAAKi0D,QAAQorB,WAAar/E,EAAKi0D,QAAQ4Y,OAAQ,CAC/C,IAAIzrB,EAAcphD,EAAKgjF,cAAc/rF,YACjCtJ,EAAGyQ,KAAK4qD,QAA6D,KAAlD5H,EAAcphD,EAAKi0D,QAAQqrB,sBACjB,MAAzBt/E,EAAKwmF,mBACLh/B,EAAA9jD,EAAI4+C,EAAEtiD,EAAKmuD,IAAK,iEAChBnuD,EAAKsnF,qBAAA,KAKrBroF,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBk/C,kBAAkB,WACpD5iD,EAAKymF,QAAQxC,cACbjkF,EAAKkvE,SAAS75C,KAAKmE,EAAaopB,iBAAA,IAEpC3jD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBm/C,qBAAqB,WACvD7iD,EAAKkvE,SAAS75C,KAAKmE,EAAaqpB,oBAAA,IAEpC5jD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkB8+C,UAAU,SAACrB,EAAQxzD,GACrDqS,EAAKkvE,SAAS75C,KAAKmE,EAAaunD,MAAOlnC,EAAWorC,cAAe9jC,EAAQxzD,EAAA,IAE7EsR,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkB++C,aAAa,SAACtB,EAAQxzD,GACxDqS,EAAKkvE,SAAS75C,KAAKmE,EAAaunD,MAAOlnC,EAAWqrC,YAAa/jC,EAAQ,CAAC7zD,MAAO,EAAG+kF,IAAK1kF,GAAA,IAE3FsR,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBo/C,YAAY,SAAC3B,GAC/CnhD,EAAKm1D,WAAahU,EAClBnhD,EAAKkvE,SAAS75C,KAAKmE,EAAaspB,WAAY9zD,OAAOD,OAAO,CAAC,EAAGoyD,GAAA,IAElEliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBq/C,kBAAkB,SAAC5B,GACrDnhD,EAAKkvE,SAAS75C,KAAKmE,EAAaupB,iBAAkB5B,EAAA,IAEtDliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBs/C,oBAAoB,SAAC7B,GACvDnhD,EAAKkvE,SAAS75C,KAAKmE,EAAawpB,mBAAoB7B,EAAA,IAExDliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBu/C,4BAA4B,SAAC9B,GAC/DnhD,EAAKkvE,SAAS75C,KAAKmE,EAAaypB,2BAA4B9B,EAAA,IAEhEliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBw/C,yBAAyB,SAAC/B,GAC5DnhD,EAAKkvE,SAAS75C,KAAKmE,EAAa0pB,wBAAyB/B,EAAA,IAE7DliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkBy/C,6BAA6B,SAAChC,GAChEnhD,EAAKkvE,SAAS75C,KAAKmE,EAAa2pB,4BAA6BhC,EAAA,IAEjEliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkB0/C,0BAA0B,SAACjC,GAC7DnhD,EAAKkvE,SAAS75C,KAAKmE,EAAa4pB,yBAA0BjC,EAAA,IAE9DliD,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkB2/C,iBAAiB,SAAClC,GACpDnhD,EAAK8mF,gBAAkB9mF,EAAKunF,oBAAoBpmC,GAChDnhD,EAAKkvE,SAAS75C,KAAKmE,EAAa6pB,gBAAiBr0D,OAAOD,OAAO,CAAC,EAAGiR,EAAK8mF,iBAAA,IAE5E7nF,KAAKynF,YAAY3/B,GAAGzE,EAAA5+C,EAAkB4/C,qBAAqB,SAACnC,GACpDnhD,EAAKgjF,gBAAkBhjF,EAAKi0D,QAAQ0rB,eACpC3/E,EAAKsmF,iBAAA,EACLtmF,EAAKgjF,cAAc/rF,YAAckqD,EAAe,QAIxDliD,KAAKynF,YAAY/hC,QAAA,EAGrB3kD,EAAArM,UAAAqzF,OAAA,WACQ/nF,KAAK+jF,eACL/jF,KAAK+jF,cAAcjS,QAEnB9xE,KAAKwnF,SACLxnF,KAAKwnF,QAAQnY,KAAK,GAElBrvE,KAAKynF,cACLznF,KAAKynF,YAAY5O,QACjB74E,KAAKynF,YAAYr+D,UACjBppB,KAAKynF,YAAc,OAI3B1mF,EAAArM,UAAA6zF,KAAA,WACI,OAAOvoF,KAAK+jF,cAAcwE,MAAA,EAG9BxnF,EAAArM,UAAAo9E,MAAA,WACI9xE,KAAK+jF,cAAcjS,OAAA,EAGvB/hF,OAAA6N,eAAImD,EAAArM,UAAA,OAAI,KAAR,WACI,OAAOsL,KAAKilD,KAAA,kCAGhBl1D,OAAA6N,eAAImD,EAAArM,UAAA,WAAQ,KAAZ,WACI,OAAOsL,KAAK+jF,cAAc4B,QAAA,kCAG9B51F,OAAA6N,eAAImD,EAAArM,UAAA,WAAQ,KAAZ,WACI,OAAOsL,KAAK+jF,cAAcr6B,QAAA,kCAG9B35D,OAAA6N,eAAImD,EAAArM,UAAA,SAAM,KAAV,WACI,OAAOsL,KAAK+jF,cAAcyE,MAAA,MAG9B,SAAWznF,GACPf,KAAK+jF,cAAcyE,OAASznF,CAAA,kCAGhChR,OAAA6N,eAAImD,EAAArM,UAAA,QAAK,KAAT,WACI,OAAOsL,KAAK+jF,cAAcnrC,KAAA,MAG9B,SAAU73C,GACNf,KAAK+jF,cAAcnrC,MAAQ73C,CAAA,kCAG/BhR,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACI,OAAIsL,KAAK+jF,cACE/jF,KAAK+jF,cAAc/rF,YAEvB,OAGX,SAAgB+I,GACRf,KAAK+jF,cACL/jF,KAAK+7E,cAAch7E,GAEnBf,KAAK2wE,iBAAmB5vE,CAAA,kCAIhChR,OAAA6N,eAAImD,EAAArM,UAAA,YAAS,KAAb,WACI,OAAO3E,OAAOD,OAAO,CAAC,EAAGkQ,KAAKk2D,WAAA,kCAGlCnmE,OAAA6N,eAAImD,EAAArM,UAAA,iBAAc,KAAlB,WAKI,OAJ4B,MAAxBsL,KAAK6nF,kBACL7nF,KAAK6nF,gBAAkB,CAAC,GAE5B7nF,KAAK6nF,gBAAkB7nF,KAAKsoF,oBAAoBtoF,KAAK6nF,iBAC9C93F,OAAOD,OAAO,CAAC,EAAGkQ,KAAK6nF,gBAAA,kCAGlC9mF,EAAArM,UAAA4zF,oBAAA,SAAoBvnF,GAGhB,GAFAA,EAAS0nF,WAAazoF,KAAKilD,QAErBjlD,KAAK+jF,yBAAyB2E,kBAChC,OAAO3nF,EAGX,IAAImhD,GAAA,EACAxzD,EAAU,EACVyzD,EAAU,EAEd,GAAIniD,KAAK+jF,cAAc4E,wBAAyB,CAC5C,IAAIpuC,EAAUv6C,KAAK+jF,cAAc4E,0BACjCj6F,EAAU6rD,EAAQquC,iBAClBzmC,EAAU5H,EAAQsuC,kBAAA,MACmC,MAA9C7oF,KAAK+jF,cAAc+E,yBAC1Bp6F,EAAUsR,KAAK+jF,cAAc+E,wBAC7B3mC,EAAUniD,KAAK+jF,cAAcgF,yBAE7B7mC,GAAA,EAQJ,OALIA,IACAnhD,EAASioF,cAAgBt6F,EACzBqS,EAASkoF,cAAgB9mC,GAGtBphD,CAAA,EAGXA,EAAArM,UAAAwzF,gBAAA,WACI,IAAInnF,EAAWf,KAAK+jF,cAAc4B,SAC9BzjC,EAAcliD,KAAK+jF,cAAc/rF,YAErC,GAAIgI,KAAKg1D,QAAQ4Y,QACN5tE,KAAKg1D,QAAQirB,0BACbl/E,EAASvS,OAAS,IACjBwR,KAAK+jF,cAAcmF,OAAQ,CACnC,IAAIx6F,EAAeqS,EAAS6E,IAAI7E,EAASvS,OAAS,GAClD,GAAIE,EAAesR,KAAKg1D,QAAQkrB,6BAExBxxF,EAAewzD,EAAcliD,KAAKg1D,QAAQkrB,4BAA6B,CAEvE,IAAI/9B,EAAczzD,EAAesR,KAAKg1D,QAAQmrB,2BAC9CngF,KAAKhI,YAAcmqD,CAAA,EAK/B,GAAKniD,KAAKg1D,QAAQorB,WAAYpgF,KAAKg1D,QAAQ4Y,OAA3C,CAOA,IAHA,IACIrzB,EAAkB,EAEb91C,EAAI,EAAGA,EAAI1D,EAASvS,OAAQiW,IAAK,CACtC,IAAIg+C,EAAQ1hD,EAAS4E,MAAMlB,GACvB49C,EAAMthD,EAAS6E,IAAInB,GACvB,GAAIg+C,GAASP,GAAeA,EAAcG,EAAK,CAE3C9H,EAAkB8H,EAClB,OAIJ9H,GAAmB2H,EAAcliD,KAAKg1D,QAAQqrB,qBAAgD,MAAzBrgF,KAAKunF,mBAC1Eh/B,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,iEAChBlvD,KAAKqoF,qBAAA,GAIbtnF,EAAArM,UAAAyzF,iBAAA,WACI5/B,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,sDACa,MAAzBlvD,KAAKunF,kBACLvnF,KAAKqoF,oBAAA,EAIbtnF,EAAArM,UAAA2zF,mBAAA,WACQroF,KAAKynF,cACLznF,KAAKynF,YAAY3V,QAEY,MAAzB9xE,KAAKunF,mBACLvnF,KAAKunF,iBAAmBluF,OAAOg6E,YAAYrzE,KAAKmpF,wBAAwBjgE,KAAKlpB,MAAO,QAKhGe,EAAArM,UAAAy0F,wBAAA,WAMI,IALA,IAAIpoF,EAAcf,KAAK+jF,cAAc/rF,YACjCkqD,EAAWliD,KAAK+jF,cAAc4B,SAE9Bj3F,GAAA,EAEKyzD,EAAI,EAAGA,EAAID,EAAS1zD,OAAQ2zD,IAAK,CACtC,IAAI5H,EAAO2H,EAASv8C,MAAMw8C,GACtB19C,EAAKy9C,EAASt8C,IAAIu8C,GACtB,GAAIphD,GAAew5C,GAAQx5C,EAAc0D,EAAI,CACrC1D,GAAe0D,EAAKzE,KAAKg1D,QAAQsrB,0BACjC5xF,GAAA,GAEJ,OAIJA,IACA2K,OAAOm6E,cAAcxzE,KAAKunF,kBAC1BvnF,KAAKunF,iBAAmB,KACpB74F,IACA65D,EAAA9jD,EAAI4+C,EAAErjD,KAAKkvD,IAAK,yCAChBlvD,KAAKynF,YAAY1V,UAAA,EAK7BhxE,EAAArM,UAAA00F,qBAAA,SAAqBroF,GAGjB,IAFA,IAAImhD,EAAWliD,KAAK+jF,cAAc4B,SAEzBj3F,EAAI,EAAGA,EAAIwzD,EAAS1zD,OAAQE,IAAK,CACtC,IAAIyzD,EAAOD,EAASv8C,MAAMjX,GACtB6rD,EAAK2H,EAASt8C,IAAIlX,GACtB,GAAIqS,GAAWohD,GAAQphD,EAAUw5C,EAC7B,OAAO,EAGf,OAAO,GAGXx5C,EAAArM,UAAAqnF,cAAA,SAAch7E,GACV,IAAImhD,EAAaliD,KAAKopF,qBAAqBroF,GAEvCrS,GAAA,EACAyzD,EAAsB,EAE1B,GAAIphD,EAAU,GAAOf,KAAK+jF,cAAc4B,SAASn3F,OAAS,EAAG,CACzD,IAAI+rD,EAAiBv6C,KAAK+jF,cAAc4B,SAAShgF,MAAM,IAClD40C,EAAiB,GAAOx5C,EAAUw5C,GAAmB6H,EAAA39C,EAAQiiD,UAC9Dh4D,GAAA,EAEAyzD,EAAsBC,EAAA39C,EAAQiiD,OAAS,GAAMnM,EAAA,CAIrD,GAAI7rD,EACAsR,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAAcmqD,OAC7B,GAAID,EAAY,CACpB,GAAKliD,KAAK8nF,oBAGH,CACH,IAAIrjF,EAAMzE,KAAKwnF,QAAQ56B,mBAAmBj2D,KAAKi0D,MAAgB,IAAV7pD,IACrDf,KAAKqnF,iBAAA,EAEDrnF,KAAK+jF,cAAc/rF,YADZ,MAAPyM,EACiCA,EAAI+kD,IAAM,IAEVzoD,CAAA,MARrCf,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAAc+I,EAUR,MAAzBf,KAAKunF,kBACLvnF,KAAKmpF,yBAAA,MAGoB,MAAzBnpF,KAAKunF,mBACLluF,OAAOm6E,cAAcxzE,KAAKunF,kBAC1BvnF,KAAKunF,iBAAmB,MAE5BvnF,KAAKwnF,QAAQnY,KAAKtuE,GAClBf,KAAKynF,YAAYpY,KAAK14E,KAAKi0D,MAAgB,IAAV7pD,IAG7Bf,KAAKg1D,QAAQ0rB,eACb1gF,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAAc+I,EAAA,EAK7CA,EAAArM,UAAA20F,kCAAA,WACI,GAAIrpF,KAAKsnF,iBACL,GAAItnF,KAAKsnF,iBAAiBgC,YAActpF,KAAKu0E,OAAS,IAAK,CACvD,IAAIxzE,EAASf,KAAK+jF,cAAc/rF,YAChCgI,KAAKsnF,iBAAmB,KACnBtnF,KAAKopF,qBAAqBroF,KACE,MAAzBf,KAAKunF,mBACLluF,OAAOi0C,aAAattC,KAAKunF,kBACzBvnF,KAAKunF,iBAAmB,MAI5BvnF,KAAKwnF,QAAQnY,KAAKtuE,GAClBf,KAAKynF,YAAYpY,KAAK14E,KAAKi0D,MAAe,IAAT7pD,IAE7Bf,KAAKg1D,QAAQ0rB,eACb1gF,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAAc+I,GAAA,MAIzC1H,OAAOy9B,WAAW92B,KAAKqpF,kCAAkCngE,KAAKlpB,MAAO,KAKjFe,EAAArM,UAAA60F,6BAAA,SAA6BxoF,GACzB,IAAImhD,EAAQliD,KAAK+jF,cACjB,GAAIhjF,IAAYf,KAAK4nF,kBAAoB1lC,EAAM1f,WAAa,EAAG,CAC3D,IAAI9zC,EAAWwzD,EAAMyjC,SACjBj3F,EAASF,OAAS,GAAK0zD,EAAMlqD,YAActJ,EAASiX,MAAM,KAC1D4iD,EAAA9jD,EAAIw+C,EAAEjjD,KAAKkvD,IAAK,2BAA2BhN,EAAMlqD,YAAW,aAAatJ,EAASiX,MAAM,IACxF3F,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAActJ,EAASiX,MAAM,GAChD3F,KAAK+jF,cAAcx+E,oBAAoB,WAAYvF,KAAKe,EAAEomF,aAAA,MAI9DnnF,KAAK+jF,cAAcx+E,oBAAoB,WAAYvF,KAAKe,EAAEomF,YAAA,EAIlEpmF,EAAArM,UAAAkyF,mBAAA,SAAmB7lF,GACc,MAAzBf,KAAK2wE,mBACL3wE,KAAK+jF,cAAc/rF,YAAcgI,KAAK2wE,iBACtC3wE,KAAK2wE,iBAAmB,OAIhC5vE,EAAArM,UAAAoyF,YAAA,SAAY/lF,GACR,IAAImhD,EAASliD,KAAK+jF,cAAc/rF,YAC5BtJ,EAAWsR,KAAK+jF,cAAc4B,SAElC,GAAI3lF,KAAKqnF,gBACLrnF,KAAKqnF,iBAAA,MADT,CAKA,GAAInlC,EAAS,GAAOxzD,EAASF,OAAS,EAAG,CAErC,IAAI2zD,EAAiBzzD,EAASiX,MAAM,GACpC,GAAKw8C,EAAiB,GAAOD,EAASC,GAAmBC,EAAA39C,EAAQiiD,OAI7D,OAHA1mD,KAAKqnF,iBAAA,OAELrnF,KAAK+jF,cAAc/rF,YAAcoqD,EAAA39C,EAAQiiD,OAAS,GAAMvE,EAAA,CAKhE,GAAIniD,KAAKopF,qBAAqBlnC,GAA9B,CACI,GAAIliD,KAAK8nF,oBAAqB,CAC1B,IAAIvtC,EAAMv6C,KAAKwnF,QAAQ56B,mBAAmBj2D,KAAKi0D,MAAe,IAAT1I,IAC1C,MAAP3H,IACAv6C,KAAKqnF,iBAAA,EACLrnF,KAAK+jF,cAAc/rF,YAAcuiD,EAAIiP,IAAM,KAGtB,MAAzBxpD,KAAKunF,kBACLvnF,KAAKmpF,yBAAA,MAKbnpF,KAAKsnF,iBAAmB,CACpBkC,UAAWtnC,EACXonC,WAAYtpF,KAAKu0E,QAErBl7E,OAAOy9B,WAAW92B,KAAKqpF,kCAAkCngE,KAAKlpB,MAAO,MAGzEe,EAAArM,UAAAsyF,YAAA,SAAYjmF,GACRf,KAAK4nF,kBAAA,EACL5nF,KAAK+jF,cAAcx+E,oBAAoB,UAAWvF,KAAKe,EAAEgmF,WAAA,EAG7DhmF,EAAArM,UAAAwyF,YAAA,SAAYnmF,GACRf,KAAKupF,8BAAA,EAA6B,EAGtCxoF,EAAArM,UAAA0yF,aAAA,SAAarmF,GACTf,KAAKupF,8BAAA,EAGbxoF,CAAA,CAjmBA,GCsOe05C,EA5Of,WAEI,SAAA15C,EAAYA,EAAiBmhD,GACzBliD,KAAKkvD,IAAM,eACXlvD,KAAKilD,MAAQ,eACbjlD,KAAKiwE,SAAW,IAAI5nB,EAAA5jD,EAEpBzE,KAAKg1D,QAAUvS,IACO,iBAAXP,GACPnyD,OAAOD,OAAOkQ,KAAKg1D,QAAS9S,GAGhC,IAAIxzD,EAAgBqS,EAAgBvP,KAAKgL,cAEzC,GAAsB,QAAlB9N,GACyB,WAAlBA,GACkB,SAAlBA,GACkB,QAAlBA,EACP,MAAM,IAAIo9C,EAAA9mC,EAAyB,0EAEvC,GAAIjE,EAAgBtM,eAAe,YAC/B,MAAM,IAAIq3C,EAAA9mC,EAAyB,gBAAgBjE,EAAgBvP,KAAI,yCAG3EwO,KAAKe,EAAI,CACL4lF,kBAAmB3mF,KAAK4mF,mBAAmB19D,KAAKlpB,OAGpDA,KAAK2wE,iBAAmB,KACxB3wE,KAAK6wE,oBAAsB,KAE3B7wE,KAAKqwE,iBAAmBtvE,EACxBf,KAAK+jF,cAAgB,KA0M7B,OAvMIhjF,EAAArM,UAAA00B,QAAA,WACQppB,KAAK+jF,gBACL/jF,KAAK+nF,SACL/nF,KAAK6kF,sBAET7kF,KAAKe,EAAI,KACTf,KAAKqwE,iBAAmB,KACxBrwE,KAAKiwE,SAAS7mB,qBACdppD,KAAKiwE,SAAW,MAGpBlvE,EAAArM,UAAAozD,GAAA,SAAG/mD,EAAOmhD,GAAV,IAAAxzD,EAAA,KACQqS,IAAUw5B,EAAaspB,WACG,MAAtB7jD,KAAK+jF,eAA2D,IAAlC/jF,KAAK+jF,cAAcvhD,YACjDwF,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKmE,EAAaspB,WAAYn1D,EAAKs5F,UAAA,IAGlDjnF,IAAUw5B,EAAa6pB,iBACJ,MAAtBpkD,KAAK+jF,eAA2D,IAAlC/jF,KAAK+jF,cAAcvhD,YACjDwF,QAAQloB,UAAUJ,MAAK,WACnBhxB,EAAKuhF,SAAS75C,KAAKmE,EAAa6pB,gBAAiB11D,EAAKu5F,eAAA,IAIlEjoF,KAAKiwE,SAASjnB,YAAYjoD,EAAOmhD,EAAA,EAGrCnhD,EAAArM,UAAAy0D,IAAA,SAAIpoD,EAAOmhD,GACPliD,KAAKiwE,SAASroB,eAAe7mD,EAAOmhD,EAAA,EAGxCnhD,EAAArM,UAAAowF,mBAAA,SAAmB/jF,GAIf,GAHAf,KAAK+jF,cAAgBhjF,EACrBA,EAAauE,iBAAiB,iBAAkBtF,KAAKe,EAAE4lF,mBAE1B,MAAzB3mF,KAAK2wE,iBACL,IACI5vE,EAAa/I,YAAcgI,KAAK2wE,iBAChC3wE,KAAK2wE,iBAAmB,KAC1B,MAAO5vE,GAAA,GAOjBA,EAAArM,UAAAmwF,mBAAA,WACQ7kF,KAAK+jF,gBACL/jF,KAAK+jF,cAAcrrE,IAAM,GACzB1Y,KAAK+jF,cAAcznF,gBAAgB,OACnC0D,KAAK+jF,cAAcx+E,oBAAoB,iBAAkBvF,KAAKe,EAAE4lF,mBAChE3mF,KAAK+jF,cAAgB,MAEO,MAA5B/jF,KAAK6wE,sBACLx3E,OAAOm6E,cAAcxzE,KAAK6wE,qBAC1B7wE,KAAK6wE,oBAAsB,OAInC9vE,EAAArM,UAAA0zF,KAAA,WACI,IAAKpoF,KAAK+jF,cACN,MAAM,IAAIj4C,EAAArnC,EAAsB,oDAEpCzE,KAAK+jF,cAAcrrE,IAAM1Y,KAAKqwE,iBAAiB/hF,IAE3C0R,KAAK+jF,cAAcvhD,WAAa,IAChCxiC,KAAK+jF,cAAc/rF,YAAc,GAGrCgI,KAAK+jF,cAAc17C,QAAU,OAC7BroC,KAAK+jF,cAAcqE,OACnBpoF,KAAK6wE,oBAAsBx3E,OAAOg6E,YAC9BrzE,KAAKszE,sBAAsBpqD,KAAKlpB,MACpCA,KAAKg1D,QAAQue,6BAAA,EAGjBxyE,EAAArM,UAAAqzF,OAAA,WACQ/nF,KAAK+jF,gBACL/jF,KAAK+jF,cAAcrrE,IAAM,GACzB1Y,KAAK+jF,cAAcznF,gBAAgB,QAEP,MAA5B0D,KAAK6wE,sBACLx3E,OAAOm6E,cAAcxzE,KAAK6wE,qBAC1B7wE,KAAK6wE,oBAAsB,OAInC9vE,EAAArM,UAAA6zF,KAAA,WACI,OAAOvoF,KAAK+jF,cAAcwE,MAAA,EAG9BxnF,EAAArM,UAAAo9E,MAAA,WACI9xE,KAAK+jF,cAAcjS,OAAA,EAGvB/hF,OAAA6N,eAAImD,EAAArM,UAAA,OAAI,KAAR,WACI,OAAOsL,KAAKilD,KAAA,kCAGhBl1D,OAAA6N,eAAImD,EAAArM,UAAA,WAAQ,KAAZ,WACI,OAAOsL,KAAK+jF,cAAc4B,QAAA,kCAG9B51F,OAAA6N,eAAImD,EAAArM,UAAA,WAAQ,KAAZ,WACI,OAAOsL,KAAK+jF,cAAcr6B,QAAA,kCAG9B35D,OAAA6N,eAAImD,EAAArM,UAAA,SAAM,KAAV,WACI,OAAOsL,KAAK+jF,cAAcyE,MAAA,MAG9B,SAAWznF,GACPf,KAAK+jF,cAAcyE,OAASznF,CAAA,kCAGhChR,OAAA6N,eAAImD,EAAArM,UAAA,QAAK,KAAT,WACI,OAAOsL,KAAK+jF,cAAcnrC,KAAA,MAG9B,SAAU73C,GACNf,KAAK+jF,cAAcnrC,MAAQ73C,CAAA,kCAG/BhR,OAAA6N,eAAImD,EAAArM,UAAA,cAAW,KAAf,WACI,OAAIsL,KAAK+jF,cACE/jF,KAAK+jF,cAAc/rF,YAEvB,OAGX,SAAgB+I,GACRf,KAAK+jF,cACL/jF,KAAK+jF,cAAc/rF,YAAc+I,EAEjCf,KAAK2wE,iBAAmB5vE,CAAA,kCAIhChR,OAAA6N,eAAImD,EAAArM,UAAA,YAAS,KAAb,WACI,IACIqM,EAAO,CACPsqD,UAFerrD,KAAK+jF,yBAAyB0F,iBAAoB,SAAW,UAEpDzpF,KAAKqwE,iBAAiB7+E,MASlD,OAPIwO,KAAK+jF,gBACLhjF,EAAK2oD,SAAW/yD,KAAKi0D,MAAoC,IAA9B5qD,KAAK+jF,cAAcr6B,UAC1C1pD,KAAK+jF,yBAAyB2E,mBAC9B3nF,EAAKwL,MAAQvM,KAAK+jF,cAAc2F,WAChC3oF,EAAKyL,OAASxM,KAAK+jF,cAAc4F,cAGlC5oF,CAAA,kCAGXhR,OAAA6N,eAAImD,EAAArM,UAAA,iBAAc,KAAlB,WACI,IAAIqM,EAAO,CACP0nF,WAAYzoF,KAAKilD,MACjB32D,IAAK0R,KAAKqwE,iBAAiB/hF,KAG/B,KAAM0R,KAAK+jF,yBAAyB2E,kBAChC,OAAO3nF,EAGX,IAAImhD,GAAA,EACAxzD,EAAU,EACVyzD,EAAU,EAEd,GAAIniD,KAAK+jF,cAAc4E,wBAAyB,CAC5C,IAAIpuC,EAAUv6C,KAAK+jF,cAAc4E,0BACjCj6F,EAAU6rD,EAAQquC,iBAClBzmC,EAAU5H,EAAQsuC,kBAAA,MACmC,MAA9C7oF,KAAK+jF,cAAc+E,yBAC1Bp6F,EAAUsR,KAAK+jF,cAAc+E,wBAC7B3mC,EAAUniD,KAAK+jF,cAAcgF,yBAE7B7mC,GAAA,EAQJ,OALIA,IACAnhD,EAAKioF,cAAgBt6F,EACrBqS,EAAKkoF,cAAgB9mC,GAGlBphD,CAAA,kCAGXA,EAAArM,UAAAkyF,mBAAA,SAAmB7lF,GACc,MAAzBf,KAAK2wE,mBACL3wE,KAAK+jF,cAAc/rF,YAAcgI,KAAK2wE,iBACtC3wE,KAAK2wE,iBAAmB,MAE5B3wE,KAAKiwE,SAAS75C,KAAKmE,EAAaspB,WAAY7jD,KAAKgoF,UAAA,EAGrDjnF,EAAArM,UAAA4+E,sBAAA,WACItzE,KAAKiwE,SAAS75C,KAAKmE,EAAa6pB,gBAAiBpkD,KAAKioF,eAAA,EAG9DlnF,CAAA,CA1OA,GCOAohD,EAAA19C,EAAS43E,UAqCT,IAAI1hC,EAAS,CAEbivC,aAnCA,SAAsB7oF,EAAiBmhD,GACnC,IAAIxzD,EAAMqS,EACV,GAAW,MAAPrS,GAA8B,iBAARA,EACtB,MAAM,IAAIo9C,EAAA9mC,EAAyB,iDAGvC,IAAKtW,EAAI+F,eAAe,QACpB,MAAM,IAAIq3C,EAAA9mC,EAAyB,oEAGvC,OAAQtW,EAAI8C,MACR,IAAK,MACL,IAAK,SACL,IAAK,OACL,IAAK,MACD,OAAO,IAAIi/D,EAAU/hE,EAAKwzD,GAC9B,QACI,OAAO,IAAIzH,EAAa/rD,EAAKwzD,GAAA,EAmBzC6yB,YAbA,WACI,OAAO1yB,EAASs+B,wBAAA,EAapBS,eAVA,WACI,OAAO/+B,EAAS++B,gBAAA,GAWpBzmC,EAAOkvC,WAAa1vC,EAAA11C,EACpBk2C,EAAOmvC,aAAe3vC,EAAA5f,EACtBogB,EAAOovC,aAAe5vC,EAAAn1C,EAEtB21C,EAAOqvC,OAASzvD,EAChBogB,EAAOsvC,WAAarvC,EACpBD,EAAOuvC,aAAejnC,EAEtBtI,EAAOwvC,UAAY15B,EACnB9V,EAAOyvC,aAAe3vC,EACtBE,EAAO0vC,eAAiBjvC,EAAA32C,EAExB1U,OAAO6N,eAAe+8C,EAAQ,UAAW,CACrC16C,YAAA,EACAF,IAAK,WAED,MAAO,WAIAmiD,EAAAM,QAAA7H,CAAA,8BCnFf,IAAIxqD,EAAqBF,OAAOC,IAAI,8BAClCE,EAAoBH,OAAOC,IAAI,gBAC/BG,EAAsBJ,OAAOC,IAAI,kBACjCI,EAAyBL,OAAOC,IAAI,qBACpCK,EAAsBN,OAAOC,IAAI,kBACjCO,EAAsBR,OAAOC,IAAI,kBACjCQ,EAAqBT,OAAOC,IAAI,iBAChCS,EAAyBV,OAAOC,IAAI,qBACpCU,EAAsBX,OAAOC,IAAI,kBACjCY,EAAkBb,OAAOC,IAAI,cAC7Ba,EAAkBd,OAAOC,IAAI,cAC7BgB,EAAwBjB,OAAOkB,SAQjC,IAAIm5F,EAAuB,CACvBC,UAAW,WACT,OAAO,CACT,EACAt1D,mBAAoB,WAAa,EACjCD,oBAAqB,WAAa,EAClCF,gBAAiB,WAAa,GAEhChlC,EAASC,OAAOD,OAChB06F,EAAc,CAAC,EACjB,SAAS7yE,EAAUnT,EAAOpQ,EAAS0kC,GACjC94B,KAAKwE,MAAQA,EACbxE,KAAK5L,QAAUA,EACf4L,KAAK+4B,KAAOyxD,EACZxqF,KAAK84B,QAAUA,GAAWwxD,CAC5B,CAgBA,SAASG,IAAkB,CAE3B,SAASC,EAAclmF,EAAOpQ,EAAS0kC,GACrC94B,KAAKwE,MAAQA,EACbxE,KAAK5L,QAAUA,EACf4L,KAAK+4B,KAAOyxD,EACZxqF,KAAK84B,QAAUA,GAAWwxD,CAC5B,CAtBA3yE,EAAUjjB,UAAUkjB,iBAAmB,CAAC,EACxCD,EAAUjjB,UAAU41B,SAAW,SAAUqgE,EAAcpoE,GACrD,GACE,kBAAoBooE,GACpB,oBAAsBA,GACtB,MAAQA,EAER,MAAMj7F,MACJ,0GAEJsQ,KAAK84B,QAAQhE,gBAAgB90B,KAAM2qF,EAAcpoE,EAAU,WAC7D,EACA5K,EAAUjjB,UAAUk2F,YAAc,SAAUroE,GAC1CviB,KAAK84B,QAAQ7D,mBAAmBj1B,KAAMuiB,EAAU,cAClD,EAEAkoE,EAAe/1F,UAAYijB,EAAUjjB,UAOrC,IAAIm2F,EAA0BH,EAAch2F,UAAY,IAAI+1F,EAC5DI,EAAuBhrF,YAAc6qF,EACrC56F,EAAO+6F,EAAwBlzE,EAAUjjB,WACzCm2F,EAAuBt1D,sBAAuB,EAC9C,IAAIrjC,EAAcC,MAAMC,QACtBC,EAAuB,CAAEizB,EAAG,KAAMwmB,EAAG,KAAMphB,EAAG,KAAMjL,EAAG,KAAMwxC,EAAG,MAChEx8D,EAAiB1E,OAAO2E,UAAUD,eACpC,SAASq2F,EAAat5F,EAAMsa,EAAK85C,EAAMrwC,EAAQ0C,EAAOzT,GAEpD,OADAohD,EAAOphD,EAAM4S,IACN,CACL3lB,SAAUtB,EACVqB,KAAMA,EACNsa,IAAKA,EACLsL,SAAK,IAAWwuC,EAAOA,EAAO,KAC9BphD,MAAOA,EAEX,CAWA,SAASumF,EAAeC,GACtB,MACE,kBAAoBA,GACpB,OAASA,GACTA,EAAOv5F,WAAatB,CAExB,CAUA,IAAI86F,EAA6B,OACjC,SAASC,EAAc7pF,EAAStO,GAC9B,MAAO,kBAAoBsO,GAAW,OAASA,GAAW,MAAQA,EAAQyK,IAX5E,SAAgBA,GACd,IAAIq/E,EAAgB,CAAE,IAAK,KAAM,IAAK,MACtC,MACE,IACAr/E,EAAI/M,QAAQ,SAAS,SAAUhC,GAC7B,OAAOouF,EAAcpuF,EACvB,GAEJ,CAIMquF,CAAO,GAAK/pF,EAAQyK,KACpB/Y,EAAM2G,SAAS,GACrB,CACA,SAAS6hB,IAAU,CAiCnB,SAAS8vE,EAAa/oF,EAAUklB,EAAO8jE,EAAeC,EAAWhpE,GAC/D,IAAI/wB,SAAc8Q,EACd,cAAgB9Q,GAAQ,YAAcA,IAAM8Q,EAAW,MAC3D,IApE0BkpF,EAAYC,EAoElCC,GAAiB,EACrB,GAAI,OAASppF,EAAUopF,GAAiB,OAEtC,OAAQl6F,GACN,IAAK,SACL,IAAK,SACL,IAAK,SACHk6F,GAAiB,EACjB,MACF,IAAK,SACH,OAAQppF,EAAS7Q,UACf,KAAKtB,EACL,KAAKC,EACHs7F,GAAiB,EACjB,MACF,KAAK36F,EACH,OAEEs6F,GADCK,EAAiBppF,EAAStQ,OAEVsQ,EAASvQ,UACxBy1B,EACA8jE,EACAC,EACAhpE,IAKd,GAAImpE,EACF,OACGnpE,EAAWA,EAASjgB,GACpBopF,EACC,KAAOH,EAAY,IAAML,EAAc5oF,EAAU,GAAKipF,EACxDr5F,EAAYqwB,IACN+oE,EAAgB,GAClB,MAAQI,IACLJ,EACCI,EAAe3sF,QAAQksF,EAA4B,OAAS,KAChEI,EAAa9oE,EAAUiF,EAAO8jE,EAAe,IAAI,SAAU/wD,GACzD,OAAOA,CACT,KACA,MAAQhY,IACPwoE,EAAexoE,KA9GEipE,EAgHdjpE,EAhH0BkpE,EAiH1BH,GACG,MAAQ/oE,EAASzW,KACjBxJ,GAAYA,EAASwJ,MAAQyW,EAASzW,IACnC,IACC,GAAKyW,EAASzW,KAAK/M,QAClBksF,EACA,OACE,KACRS,EAVHnpE,EA9GJuoE,EACLU,EAAWh6F,KACXi6F,OACA,EACA,EACA,EACAD,EAAWhnF,QAoHLgjB,EAAMn0B,KAAKkvB,IACf,EAEJmpE,EAAiB,EACjB,IA9LqBr6F,EA8LjBs6F,EAAiB,KAAOJ,EAAY,IAAMA,EAAY,IAC1D,GAAIr5F,EAAYoQ,GACd,IAAK,IAAI5T,EAAI,EAAGA,EAAI4T,EAAS9T,OAAQE,IAGhCg9F,GAAkBL,EAFpBE,EAAYjpF,EAAS5T,GAIlB84B,EACA8jE,EAJD95F,EAAOm6F,EAAiBT,EAAcK,EAAW78F,GAMhD6zB,QAEH,GAAoC,oBAA9B7zB,EAzMP,QADiB2C,EA0MQiR,IAzMC,kBAAoBjR,EAAsB,KAIjE,oBAHPA,EACGH,GAAyBG,EAAcH,IACxCG,EAAc,eAC6BA,EAAgB,MAsM3D,IACEiR,EAAW5T,EAAE0N,KAAKkG,GAAW5T,EAAI,IAC/B68F,EAAYjpF,EAAS0T,QAAQwd,MAK5Bk4D,GAAkBL,EAFpBE,EAAYA,EAAUj4F,MAInBk0B,EACA8jE,EAJD95F,EAAOm6F,EAAiBT,EAAcK,EAAW78F,KAMhD6zB,QAEH,GAAI,WAAa/wB,EAAM,CAC1B,GAAI,oBAAsB8Q,EAASod,KACjC,OAAO2rE,EA3Hb,SAAyB1rE,GACvB,OAAQA,EAASJ,QACf,IAAK,YACH,OAAOI,EAASrsB,MAClB,IAAK,WACH,MAAMqsB,EAASyB,OACjB,QACE,OACG,kBAAoBzB,EAASJ,OAC1BI,EAASD,KAAKnE,EAAQA,IACpBoE,EAASJ,OAAS,UACpBI,EAASD,MACP,SAAU4B,GACR,YAAc3B,EAASJ,SACnBI,EAASJ,OAAS,YACnBI,EAASrsB,MAAQguB,EACtB,IACA,SAAUlF,GACR,YAAcuD,EAASJ,SACnBI,EAASJ,OAAS,WAAcI,EAASyB,OAAShF,EACxD,KAENuD,EAASJ,QAET,IAAK,YACH,OAAOI,EAASrsB,MAClB,IAAK,WACH,MAAMqsB,EAASyB,QAGvB,MAAMzB,CACR,CA6FQisE,CAAgBtpF,GAChBklB,EACA8jE,EACAC,EACAhpE,GAGJ,MADAiF,EAAQzb,OAAOzJ,GACT5S,MACJ,mDACG,oBAAsB83B,EACnB,qBAAuBz3B,OAAOyhB,KAAKlP,GAAU+uB,KAAK,MAAQ,IAC1D7J,GACJ,4EAEN,CACA,OAAOkkE,CACT,CACA,SAASG,EAAYvpF,EAAUwpF,EAAM13F,GACnC,GAAI,MAAQkO,EAAU,OAAOA,EAC7B,IAAI4rB,EAAS,GACXmV,EAAQ,EAIV,OAHAgoD,EAAa/oF,EAAU4rB,EAAQ,GAAI,IAAI,SAAUt+B,GAC/C,OAAOk8F,EAAK1vF,KAAKhI,EAASxE,EAAOyzC,IACnC,IACOnV,CACT,CACA,SAAS69D,EAAgBzpE,GACvB,IAAK,IAAMA,EAAQ4iC,QAAS,CAC1B,IAAIxwB,EAAOpS,EAAQq7D,SACnBjpD,EAAOA,KACFhV,MACH,SAAUssE,GACJ,IAAM1pE,EAAQ4iC,UAAY,IAAM5iC,EAAQ4iC,UACzC5iC,EAAQ4iC,QAAU,EAAK5iC,EAAQq7D,QAAUqO,EAC9C,IACA,SAAU5vE,GACJ,IAAMkG,EAAQ4iC,UAAY,IAAM5iC,EAAQ4iC,UACzC5iC,EAAQ4iC,QAAU,EAAK5iC,EAAQq7D,QAAUvhE,EAC9C,KAED,IAAMkG,EAAQ4iC,UAAa5iC,EAAQ4iC,QAAU,EAAK5iC,EAAQq7D,QAAUjpD,EACvE,CACA,GAAI,IAAMpS,EAAQ4iC,QAAS,OAAO5iC,EAAQq7D,QAAQn7B,QAClD,MAAMlgC,EAAQq7D,OAChB,CACA,IAAI5nD,EACF,oBAAsBC,YAClBA,YACA,SAAU5Z,GACR,GACE,kBAAoB/iB,QACpB,oBAAsBA,OAAO48B,WAC7B,CACA,IAAI38B,EAAQ,IAAID,OAAO48B,WAAW,QAAS,CACzCluB,SAAS,EACTC,YAAY,EACZ5I,QACE,kBAAoBgd,GACpB,OAASA,GACT,kBAAoBA,EAAMhd,QACtB2M,OAAOqQ,EAAMhd,SACb2M,OAAOqQ,GACbA,MAAOA,IAET,IAAK/iB,OAAO68B,cAAc58B,GAAQ,MACpC,MAAO,GACL,kBAAoB68B,SACpB,oBAAsBA,QAAQC,KAG9B,YADAD,QAAQC,KAAK,oBAAqBha,GAGpCia,QAAQja,MAAMA,EAChB,EACN,SAAS8wB,IAAQ,CACjB0U,EAAQqqC,SAAW,CACjB1kE,IAAKskE,EACLxtE,QAAS,SAAU/b,EAAU4pF,EAAaC,GACxCN,EACEvpF,GACA,WACE4pF,EAAY/vE,MAAMnc,KAAMzR,UAC1B,GACA49F,EAEJ,EACA9oD,MAAO,SAAU/gC,GACf,IAAI6/C,EAAI,EAIR,OAHA0pC,EAAYvpF,GAAU,WACpB6/C,GACF,IACOA,CACT,EACAiqC,QAAS,SAAU9pF,GACjB,OACEupF,EAAYvpF,GAAU,SAAU1S,GAC9B,OAAOA,CACT,KAAM,EAEV,EACAy8F,KAAM,SAAU/pF,GACd,IAAKyoF,EAAezoF,GAClB,MAAM5S,MACJ,yEAEJ,OAAO4S,CACT,GAEFs/C,EAAQjqC,UAAYA,EACpBiqC,EAAQ0qC,SAAWj8F,EACnBuxD,EAAQ2qC,SAAWh8F,EACnBqxD,EAAQ8oC,cAAgBA,EACxB9oC,EAAQ4qC,WAAal8F,EACrBsxD,EAAQ6qC,SAAW77F,EACnBgxD,EAAQtvD,gEACND,EACFuvD,EAAQ8qC,mBAAqB,CAC3BpQ,UAAW,KACX/hD,EAAG,SAAUjT,GACX,OAAOj1B,EAAqBizB,EAAE+B,aAAaC,EAC7C,GAEFs6B,EAAQ3iC,MAAQ,SAAU5hB,GACxB,OAAO,WACL,OAAOA,EAAG8e,MAAM,KAAM5tB,UACxB,CACF,EACAqzD,EAAQ+qC,aAAe,SAAUtrF,EAASw3D,EAAQv2D,GAChD,GAAI,OAASjB,QAAW,IAAWA,EACjC,MAAM3R,MACJ,wDAA0D2R,EAAU,KAExE,IAAImD,EAAQ1U,EAAO,CAAC,EAAGuR,EAAQmD,OAC7BsH,EAAMzK,EAAQyK,IAEhB,GAAI,MAAQ+sD,EACV,IAAKhyD,UAAa,IAAWgyD,EAAOzhD,UAAgB,OACpD,IAAWyhD,EAAO/sD,MAAQA,EAAM,GAAK+sD,EAAO/sD,KAC5C+sD,GACGpkE,EAAe2H,KAAKy8D,EAAQhyD,IAC3B,QAAUA,GACV,WAAaA,GACb,aAAeA,GACd,QAAUA,QAAY,IAAWgyD,EAAOzhD,MACxC5S,EAAMqC,GAAYgyD,EAAOhyD,IAChC,IAAIA,EAAWtY,UAAUC,OAAS,EAClC,GAAI,IAAMqY,EAAUrC,EAAMlC,SAAWA,OAChC,GAAI,EAAIuE,EAAU,CACrB,IAAK,IAAI+lF,EAAaz6F,MAAM0U,GAAWnY,EAAI,EAAGA,EAAImY,EAAUnY,IAC1Dk+F,EAAWl+F,GAAKH,UAAUG,EAAI,GAChC8V,EAAMlC,SAAWsqF,CACnB,CACA,OAAO9B,EAAazpF,EAAQ7P,KAAMsa,OAAK,EAAQ,EAAQmM,EAAOzT,EAChE,EACAo9C,EAAQirC,cAAgB,SAAU55F,GAchC,OAbAA,EAAe,CACbxB,SAAUf,EACV8D,cAAevB,EACf0rB,eAAgB1rB,EAChB2rB,aAAc,EACdF,SAAU,KACVD,SAAU,OAECC,SAAWzrB,EACxBA,EAAawrB,SAAW,CACtBhtB,SAAUhB,EACVmB,SAAUqB,GAELA,CACT,EACA2uD,EAAQx8C,cAAgB,SAAU5T,EAAMqnE,EAAQv2D,GAC9C,IAAIuE,EACFrC,EAAQ,CAAC,EACTsH,EAAM,KACR,GAAI,MAAQ+sD,EACV,IAAKhyD,UAAa,IAAWgyD,EAAO/sD,MAAQA,EAAM,GAAK+sD,EAAO/sD,KAAM+sD,EAClEpkE,EAAe2H,KAAKy8D,EAAQhyD,IAC1B,QAAUA,GACV,WAAaA,GACb,aAAeA,IACdrC,EAAMqC,GAAYgyD,EAAOhyD,IAChC,IAAIimF,EAAiBv+F,UAAUC,OAAS,EACxC,GAAI,IAAMs+F,EAAgBtoF,EAAMlC,SAAWA,OACtC,GAAI,EAAIwqF,EAAgB,CAC3B,IAAK,IAAIF,EAAaz6F,MAAM26F,GAAiBp+F,EAAI,EAAGA,EAAIo+F,EAAgBp+F,IACtEk+F,EAAWl+F,GAAKH,UAAUG,EAAI,GAChC8V,EAAMlC,SAAWsqF,CACnB,CACA,GAAIp7F,GAAQA,EAAKqkC,aACf,IAAKhvB,KAAcimF,EAAiBt7F,EAAKqkC,kBACvC,IAAWrxB,EAAMqC,KACdrC,EAAMqC,GAAYimF,EAAejmF,IACxC,OAAOikF,EAAat5F,EAAMsa,OAAK,EAAQ,EAAQ,EAAMtH,EACvD,EACAo9C,EAAQmrC,UAAY,WAClB,MAAO,CAAE75F,QAAS,KACpB,EACA0uD,EAAQorC,WAAa,SAAUl7F,GAC7B,MAAO,CAAEL,SAAUd,EAAwBmB,OAAQA,EACrD,EACA8vD,EAAQmpC,eAAiBA,EACzBnpC,EAAQqrC,KAAO,SAAUv4D,GACvB,MAAO,CACLjjC,SAAUV,EACVgB,SAAU,CAAEmzD,SAAU,EAAGy4B,QAASjpD,GAClC1iC,MAAO+5F,EAEX,EACAnqC,EAAQsrC,KAAO,SAAU17F,EAAMymC,GAC7B,MAAO,CACLxmC,SAAUX,EACVU,KAAMA,EACNymC,aAAS,IAAWA,EAAU,KAAOA,EAEzC,EACA2pB,EAAQ/zB,gBAAkB,SAAUs/D,GAClC,IAAItiE,EAAiBx4B,EAAqBq4B,EACxCI,EAAoB,CAAC,EACvBz4B,EAAqBq4B,EAAII,EACzB,IACE,IAAI3jB,EAAcgmF,IAChBpiE,EAA0B14B,EAAqBotB,EACjD,OAASsL,GACPA,EAAwBD,EAAmB3jB,GAC7C,kBAAoBA,GAClB,OAASA,GACT,oBAAsBA,EAAYuY,MAClCvY,EAAYuY,KAAKwtB,EAAMnX,EAC3B,CAAE,MAAO3Z,GACP2Z,EAAkB3Z,EACpB,CAAE,QACA/pB,EAAqBq4B,EAAIG,CAC3B,CACF,EACA+2B,EAAQwrC,yBAA2B,WACjC,OAAO/6F,EAAqBizB,EAAEoL,iBAChC,EACAkxB,EAAQz6B,IAAM,SAAUC,GACtB,OAAO/0B,EAAqBizB,EAAE6B,IAAIC,EACpC,EACAw6B,EAAQpxB,eAAiB,SAAU39B,EAAQk3B,EAAcsjE,GACvD,OAAOh7F,EAAqBizB,EAAEkL,eAAe39B,EAAQk3B,EAAcsjE,EACrE,EACAzrC,EAAQnyB,YAAc,SAAUlN,EAAUiK,GACxC,OAAOn6B,EAAqBizB,EAAEmK,YAAYlN,EAAUiK,EACtD,EACAo1B,EAAQlyB,WAAa,SAAU49D,GAC7B,OAAOj7F,EAAqBizB,EAAEoK,WAAW49D,EAC3C,EACA1rC,EAAQ1xB,cAAgB,WAAa,EACrC0xB,EAAQzxB,iBAAmB,SAAU78B,EAAOm6B,GAC1C,OAAOp7B,EAAqBizB,EAAE6K,iBAAiB78B,EAAOm6B,EACxD,EACAm0B,EAAQjyB,UAAY,SAAUrD,EAAQC,EAAYxW,GAChD,IAAIsQ,EAAah0B,EAAqBizB,EACtC,GAAI,oBAAsBvP,EACxB,MAAMrmB,MACJ,kEAEJ,OAAO22B,EAAWsJ,UAAUrD,EAAQC,EACtC,EACAq1B,EAAQtxB,MAAQ,WACd,OAAOj+B,EAAqBizB,EAAEgL,OAChC,EACAsxB,EAAQhyB,oBAAsB,SAAUxY,EAAKkV,EAAQE,GACnD,OAAOn6B,EAAqBizB,EAAEsK,oBAAoBxY,EAAKkV,EAAQE,EACjE,EACAo1B,EAAQ9xB,mBAAqB,SAAUxD,EAAQE,GAC7C,OAAOn6B,EAAqBizB,EAAEwK,mBAAmBxD,EAAQE,EAC3D,EACAo1B,EAAQ/xB,gBAAkB,SAAUvD,EAAQE,GAC1C,OAAOn6B,EAAqBizB,EAAEuK,gBAAgBvD,EAAQE,EACxD,EACAo1B,EAAQ7xB,QAAU,SAAUzD,EAAQE,GAClC,OAAOn6B,EAAqBizB,EAAEyK,QAAQzD,EAAQE,EAChD,EACAo1B,EAAQnxB,cAAgB,SAAUvG,EAAatC,GAC7C,OAAOv1B,EAAqBizB,EAAEmL,cAAcvG,EAAatC,EAC3D,EACAg6B,EAAQ5xB,WAAa,SAAUpI,EAAS+I,EAAYC,GAClD,OAAOv+B,EAAqBizB,EAAE0K,WAAWpI,EAAS+I,EAAYC,EAChE,EACAgxB,EAAQ3xB,OAAS,SAAUxC,GACzB,OAAOp7B,EAAqBizB,EAAE2K,OAAOxC,EACvC,EACAm0B,EAAQr7B,SAAW,SAAUwD,GAC3B,OAAO13B,EAAqBizB,EAAEiB,SAASwD,EACzC,EACA63B,EAAQvxB,qBAAuB,SAC7B1H,EACAC,EACAC,GAEA,OAAOx2B,EAAqBizB,EAAE+K,qBAC5B1H,EACAC,EACAC,EAEJ,EACA+4B,EAAQxxB,cAAgB,WACtB,OAAO/9B,EAAqBizB,EAAE8K,eAChC,EACAwxB,EAAQlB,QAAU,sCC/hBlB,SAAS6sC,IAEP,GAC4C,qBAAnChsC,gCAC4C,oBAA5CA,+BAA+BgsC,SAcxC,IAEEhsC,+BAA+BgsC,SAASA,EAC1C,CAAE,MAAO92F,GAGP4/B,QAAQja,MAAM3lB,EAChB,CACF,CAKE82F,GACAtrC,EAAOL,QAAU,EAAjBK,+ECoEO,QAAAwO,mBCxET,IAAAr3D,ECMAo0F,EAC4D,mBAA3Bz9F,OAAA09F,iBAC7B19F,OAAA6N,eACA,SAASoH,EAAQu1B,EAAU4f,GAOrBn1C,GAAU7S,MAAAuC,WAAmBsQ,GAAUjV,OAAA2E,YAC3CsQ,EAAOu1B,GAAY4f,EAAA7mD,MARkB,ECI3Co6F,EAb2B,oBAAVr0F,GAAyBA,IAaP,UAXX,oBAAVs0F,GAAmC,MAAVA,EAAkBA,EAWtB,KChBd,SAAAC,IAEnBA,EAAqB,WAAW,EAE3BF,EAAAz9F,SACHy9F,EAAAz9F,OAA2B49F,EALC,CAehC,IAAAA,EAAuD,WACrD,IAAI7oF,EAAU,EAUd,OAJA,SAAgBu1B,GACd,MA9BoB,kBA+BSA,GAAmB,IAAOv1B,GAFxB,CAP+B,CAAX,YAoB1B8oF,IAC3BF,IACA,IAAI5oF,EAAiB0oF,EAAAz9F,OAAAkB,SAChB6T,IACHA,EAAiB0oF,EAAAz9F,OAAAkB,SACbu8F,EAAAz9F,OAAyB,aAGe,mBAAnCkC,MAAAuC,UAAgBsQ,IACzBwoF,EACIr7F,MAAAuC,UAAiBsQ,EAAgB,CAC/B1G,cAAc,EACdyvF,UAAU,EAKVz6F,MAAO,WACL,OAAO06F,EAAsB,KADb,IAO1BF,EAA6B,WAAW,CAxBF,CAkChB,SAAAE,EAAShpF,GAC/B,IAAIu1B,EAAQ,EACZ,OAAO0zD,GAA0B,WAC/B,OAAI1zD,EAAQv1B,EAAAxW,OACH,CACLglC,MAAM,EACNlgC,MAAO0R,EAAMu1B,MAGR,CAAC/G,MAAM,EAP0B,GAFN,CA0BZ,SAAAy6D,EAASjpF,GASnC,OARA8oF,KAEI9oF,EAAW,CAACgR,KAAMhR,IAKb0oF,EAAAz9F,OAAAkB,UAAqC,WAAa,OAAO,IAAT,EAChB6T,CATA,CC5FpB,SAAAu1C,EAASv1C,GAC9B8oF,IAGA,IAAIvzD,EAAqCv1B,EAAU/U,OAAAkB,UACnD,OAAOopC,EAAmBA,EAAAn+B,KAAsB4I,GAC5CgpF,EAA6ChpF,EANT,CCiBvB,SAAAkpF,EAASlpF,EAAQu1B,GAClC,GAAKA,EAAL,CAGA,IAFA,IAAI4f,EAAMuzC,EACN3sF,EAAQiE,EAAArG,MAAa,KAChBy7C,EAAI,EAAGA,EAAIr5C,EAAAvS,OAAe,EAAG4rD,IAAK,CACzC,IAAIyN,EAAM9mD,EAAMq5C,GACVyN,KAAO1N,IAAMA,EAAI0N,GAAO,IAC9B1N,EAAMA,EAAI0N,EAH+B,EAOvCA,EAAOttB,EADP6f,EAAOD,EADPp5C,EAAWA,EAAMA,EAAAvS,OAAe,OAGxB4rD,GAAgB,MAARyN,GACpB2lC,EACIrzC,EAAKp5C,EAAU,CAACzC,cAAc,EAAMyvF,UAAU,EAAMz6F,MAAOu0D,GAb/D,CAD8D,CCkDjB,SAAA3F,EAASl9C,GACtD,OArDqC,SAASA,GAC9C,SAASu1B,EAAqBA,GAC5B,OAAOv1B,EAAAgR,KAAeukB,EADa,CAIrC,SAAS4f,EAAqB5f,GAC5B,OAAOv1B,EAAA,MAAgBu1B,EADY,CAIrC,OAAO,IAAIyN,SAAQ,SAASjnC,EAASq5C,IACnC,SAASyN,EAAiD7iD,GACpDA,EAAAwuB,KACFzyB,EAAQiE,EAAA1R,OAIR00C,QAAAloB,QAAgB9a,EAAA1R,OAAhBosB,KACU6a,EAAsB4f,GADhCz6B,KAEUmoC,EAAuBzN,EAR6B,CAYlEyN,CAAsB7iD,EAAAgR,OAbqB,GATY,CAqDlDm4E,CAAqCnpF,IAD6B,CCpE3EkpF,EAAiB,WAMb,SAASlpF,GAmIW,SAAAu1B,EAASv1B,GAE7B,KAAAA,EArBS,EA4BT,KAAA6iD,OAAe,EAOf,KAAApjD,EAA2B,GAE3B,IAAI81B,EAAmB,KAAAA,IACvB,IACEv1B,EAASu1B,EAAAza,QAA0Bya,EAAA0N,OADjC,CAEF,MAAOma,GACP7nB,EAAA0N,OAAwBma,EADd,CArB2B,CArHzC,SAASjI,IAQP,KAAA11C,EAAc,IARS,CA2XzB,SAAS1D,EAAiBiE,GACxB,OAAIA,aAAqBu1B,EAChBv1B,EAEA,IAAIu1B,GAAgB,SAASA,GAClCA,EAAQv1B,EAD2C,GAJpB,CApYrC,GAAIA,EACF,OAAOA,EAgCTm1C,EAAAzlD,UAAAsQ,EAAuC,SAASA,GAC3B,MAAf,KAAAP,IAEF,KAAAA,EAAc,GACd,KAAA21C,KAEF,KAAA31C,EAAApR,KAAiB2R,EANgC,EAcnDm1C,EAAAzlD,UAAA0lD,EAA6C,WAC3C,IAAIp1C,EAAO,KACX,KAAAu1B,GAA0B,WAAav1B,EAAAmjD,GAAF,GAFiB,EAQxD,IAAI/N,EAAmBszC,EAAA52D,WASvBqjB,EAAAzlD,UAAA6lC,EAA+C,SAASv1B,GACtDo1C,EAAiBp1C,EAAG,EADqC,EAS3Dm1C,EAAAzlD,UAAAyzD,EAAwC,WACtC,KAAO,KAAA1jD,GAAe,KAAAA,EAAAjW,QAAoB,CACxC,IAA+BwW,EAAiB,KAAAP,EAGhD,KAAAA,EAAc,GACd,IAAK,IAAI81B,EAAI,EAAGA,EAAIv1B,EAAAxW,SAAyB+rC,EAAG,CAC9C,IAAI4f,EAA+Bn1C,EAAeu1B,GAClDv1B,EAAeu1B,GAAK,KACpB,IACE4f,GADE,CAEF,MAAOiB,GACP,KAAAyM,EAAiBzM,EADH,CAL8B,CALR,CAiB1C,KAAA32C,EAAc,IAlBmC,EAyBnD01C,EAAAzlD,UAAAmzD,EAAsC,SAAS7iD,GAC7C,KAAAu1B,GAA0B,WAAa,MAAMv1B,CAAR,GADmB,EAkE1Du1B,EAAA7lC,UAAA6lC,EAAoD,WAQlD,SAASv1B,EAAcA,GACrB,OAAO,SAASjE,GACTo5C,IACHA,GAAgB,EAChBn1C,EAAA5I,KAAYm+B,EAAax5B,GAHV,CADU,CAP/B,IAAIw5B,EAAc,KACd4f,GAAgB,EAcpB,MAAO,CACLr6B,QAAS9a,EAAc,KAAAq9C,GACvBpa,OAAQjjC,EAAc,KAAAo1C,GAlBqC,EA2B/D7f,EAAA7lC,UAAA2tD,EAAuC,SAASr9C,GAC9C,GAAIA,IAAU,KACZ,KAAAo1C,EAAa,IAAIgO,UAAU,4CACtB,GAAIpjD,aAAiBu1B,EAC1B,KAAA8oB,EAA2Dr+C,OADtD,CAoCgBP,EACvB,cAnCoBO,GAoClB,IAAK,SACH,IAAAm1C,EAAgB,MArCAn1C,EAqChB,MAAAP,EACF,IAAK,WACH01C,GAAO,QAAP11C,EACF,QACE01C,GAAO,EAzCAA,EACT,KAAAiB,EAAqDp2C,GAErD,KAAAmjD,EAAcnjD,EALT,CAH8C,EAkBvDu1B,EAAA7lC,UAAA0mD,EAAoD,SAASp2C,GAC3D,IAAIu1B,OAAa,EAEjB,IACEA,EAAav1B,EAAA0a,IADX,CAEF,MAAO0iC,GAEP,YADA,KAAAhI,EAAagI,EADC,CAIS,mBAAd7nB,EACT,KAAAogB,EAA2BpgB,EAAsCv1B,GAEjE,KAAAmjD,EAAcnjD,EAZgD,EAsClEu1B,EAAA7lC,UAAA0lD,EAAoC,SAASp1C,GAC3C,KAAAtW,EAvIU,EAuI0BsW,EADe,EAUrDu1B,EAAA7lC,UAAAyzD,EAAqC,SAASnjD,GAC5C,KAAAtW,EApJW,EAoJ0BsW,EADc,EAWrDu1B,EAAA7lC,UAAAhG,EAAoC,SAASsW,EAAcu1B,GACzD,GAlKS,GAkKL,KAAAv1B,EACF,MAAUtV,MACN,iBAAmBsV,EAAe,KAAOu1B,EACzC,sCAAwC,KAAAv1B,GAE9C,KAAAA,EAAcA,EACd,KAAA6iD,EAAettB,EACf,KAAA6nB,GARwE,EAW1E7nB,EAAA7lC,UAAA0tD,EAAuD,WACrD,GAAgC,MAA5B,KAAA39C,EAAkC,CACpC,IAAK,IAAIO,EAAI,EAAGA,EAAI,KAAAP,EAAAjW,SAAmCwW,EACrD6iD,EAAA7iD,EAA2B,KAAAP,EAAyBO,IAEtD,KAAAP,EAA2B,IAJS,CAD0B,MAc9DojD,EAAgB,IAAI1N,EA0KxB,OAnKA5f,EAAA7lC,UAAA2uD,EAAiD,SAASr+C,GACxD,IAAIu1B,EAAU,KAAAA,IAGdv1B,EAAAopF,GAAyB7zD,EAAAza,QAAiBya,EAAA0N,OAJuB,EAgBnE1N,EAAA7lC,UAAAimD,EAAkD,SAC9C31C,EAAYu1B,GACd,IAAI4f,EAAU,KAAA5f,IAGd,IACEv1B,EAAA5I,KAAgBm+B,EAAU4f,EAAAr6B,QAAiBq6B,EAAAlS,OADzC,CAEF,MAAOmT,GACPjB,EAAAlS,OAAemT,EADD,CANQ,EAY1B7gB,EAAA7lC,UAAAgrB,KAAiC,SAAS1a,EAAam1C,GAOrD,SAASp5C,EAAeiE,EAAQu1B,GAG9B,MAAqB,mBAAVv1B,EACF,SAASu1B,GACd,IACE6f,EAAap1C,EAAOu1B,GADlB,CAEF,MAAOogB,GACPkN,EAAYlN,EADE,CAHC,EAQZpgB,CAZ+B,CAN1C,IAAI6f,EACAyN,EACAM,EAAe,IAAI5tB,GAAgB,SAASv1B,EAASu1B,GACvD6f,EAAep1C,EACf6iD,EAActtB,CAFiD,IAuBjE,OAHA,KAAA6zD,GACIrtF,EAAeiE,EAAao1C,GAC5Br5C,EAAeo5C,EAAY0N,IACxBM,CA1B0D,EA8BnE5tB,EAAA7lC,UAAA,MAAkC,SAASsQ,GACzC,OAAO,KAAA0a,UAAU,EAAW1a,EADyB,EAKvDu1B,EAAA7lC,UAAA05F,GAA6C,SACzCppF,EAAau1B,GAEf,SAAS4f,IACP,OAAQp5C,EAAAiE,GACN,KAnQO,EAoQLA,EAAYjE,EAAA8mD,GACZ,WAlQI,EAoQJttB,EAAWx5B,EAAA8mD,GACX,MACF,QACE,MAAUn4D,MAAM,qBAAuBqR,EAAAiE,GATzB,CADpB,IAA4BjE,EAAc,KAaV,MAA5B,KAAA0D,EAEFojD,EAAA7iD,EAA2Bm1C,GAE3B,KAAA11C,EAAApR,KAA8B8mD,EAlBL,EAgC7B5f,EAAAza,QAA6B/e,EAG7Bw5B,EAAA0N,OAA4B,SAASjjC,GACnC,OAAO,IAAIu1B,GAAgB,SAASA,EAAS4f,GAC3CA,EAAOn1C,EAD4C,GADN,EAOjDu1B,EAAAwkD,KAA0B,SAAS/5E,GACjC,OAAO,IAAIu1B,GAAgB,SAASA,EAAS4f,GAE3C,IADA,IAAIC,EAAWG,EAAqBv1C,GACA6iD,EAAUzN,EAAApkC,QACxC6xC,EAAAr0B,KACDq0B,EAAUzN,EAAApkC,OAObjV,EAAiB8mD,EAAAv0D,OAAjB86F,GAAiD7zD,EAAS4f,EAXT,GADD,EAkBtD5f,EAAAoiD,IAAyB,SAAS33E,GAChC,IAAIm1C,EAAWI,EAAqBv1C,GACLo1C,EAAUD,EAAAnkC,OAEzC,OAAIokC,EAAA5mB,KACKzyB,EAAiB,IAEjB,IAAIw5B,GAAgB,SAASv1B,EAAYu1B,GAI9C,SAASstB,EAAYttB,GACnB,OAAO,SAAS4f,GACdgO,EAAa5tB,GAAK4f,EAEK,KADvBsW,GAEEzrD,EAAWmjD,EAJY,CADL,CAHxB,IAAIA,EAAe,GACfsI,EAAkB,EAYtB,GACEtI,EAAA90D,UAAkB,GAClBo9D,IAMA1vD,EAAiBq5C,EAAA9mD,OAAjB86F,GAEQvmC,EAAYM,EAAA35D,OAAsB,GAAI+rC,GAC9C6f,EAAUD,EAAAnkC,cACFokC,EAAA5mB,KA1B+C,GAPV,EAsC9C+G,CApdmB,IChB5B2zD,EAAiB,6BAA6B,SAASlpF,GACrD,OAAIA,GASW,SAASA,GACtB,OAAO,KAAA0a,MACH,SAAS6a,GAEP,OADcyN,QAAAloB,QAAgB9a,KACvB0a,MAAa,WAAc,OAAO6a,CAAT,GAFlB,IAIhB,SAASA,GAEP,OADcyN,QAAAloB,QAAgB9a,KACvB0a,MAAa,WAAc,MAAM6a,CAAR,GAFjB,GANY,CAVwB,ICW7D,ICgByB8zD,EDhBzBC,EACmD,mBAAjBv+F,OAAAu8B,OAC9Bv8B,OAAAu8B,OACA,SAAStnB,GAEI,SAAAu1B,IAAW,CAEtB,OADAA,EAAA7lC,UAAiBsQ,EACV,IAAIu1B,CAJO,ECaC,GAAiC,mBAAzBxqC,OAAAkjF,eAC7Bob,EAAAt+F,OAAAkjF,mBADqB,CAErB,IAAAsb,EAvByC9pF,EAAA,CAC3C,IACI+pF,EAAI,GACR,IACEA,EAAAlS,UAHM,CAAC5oB,IAAG,GAIV66B,EAAOC,EAAA96B,GAAP,MAAAjvD,CAFE,CAGF,MAAOO,IAAG,CAGZupF,GAAO,CAToC,CAuBzCF,EAAAE,EAAA,SAAAvpF,EAAAu1B,GAAA,GAAAv1B,EAAAs3E,UAAA/hD,EAAAv1B,EAAAs3E,YAAA/hD,EAAA,UAAA6tB,UAAApjD,EAAA,6BAAAA,CAAA,MAFqB,CAAzB,IAAAypF,EAAyBJ,ECuFG,SAAAK,IAQ1B,KAAA7mC,GAAkB,EASlB,KAAAttB,EAAyB,KAQzB,KAAAkoB,OAAmB,EASnB,KAAA0O,EAAmB,EAqBnB,KAAAnsD,EAXA,KAAAo1C,EAAqB,EA4CrB,KAAA1rD,EAvBA,KAAA+V,EAAyB,IAjEY,CAmGM,SAAAkqF,EAAA3pF,GAC3C,GAAIA,EAAA6iD,EACF,MAAM,IAAIO,UAAU,gCAEtBpjD,EAAA6iD,GAAkB,CAJoC,CAoDX,SAAA+mC,EAAA5pF,EAASu1B,GACpDv1B,EAAAP,EAAyB,CAACoqF,GAAWt0D,EAAGu0D,IAAa,GACrD9pF,EA3BAmsD,EA2BAnsD,EA3BmBo1C,GA2BnBp1C,EA3ByCA,CAyBc,CA2Cb,SAAAujD,EAAAvjD,EAASu1B,EAAO4f,GAE1D,OADAn1C,EAAAmsD,EAAmBhX,EACZ,CAAC7mD,MAAOinC,EAF0D,CAkD3B,SAAA8oB,EAAAr+C,GAC9CA,EAAAmsD,EAAmB,CADsC,CAaC,SAAA49B,EAAA/pF,EACxDu1B,EAAc4f,GAChBn1C,EAAAo1C,EAAqB7f,OACC,GAAlB4f,IACFn1C,EAAAA,EAAuBm1C,EAHO,CAeoB,SAAA60C,EAAAhqF,EAASu1B,GAC7Dv1B,EAAAo1C,EAAqB,EACrBp1C,EAAAA,EAAuBu1B,GAAkB,CAFoC,CAc3B,SAAA00D,EAAAjqF,EAChDu1B,GACFv1B,EAAAmsD,EAAmB52B,EACnBv1B,EAAAo1C,EAAqC,CAFR,CAcuB,SAAA80C,EAAAlqF,GAEpDA,EAAAo1C,EAA8C,EAChC,IAAI7f,EACoCv1B,EAAAP,EAADoqF,GAGrD,OADA7pF,EAAAP,EAAyB,KAClB81B,CANkB,CAmB6B,SAAA40D,EAAAnqF,GAGpDA,EAAAtW,EAAwB,CAACsW,EAAAP,GAO3BO,EAAAo1C,EAAyC,EACzCp1C,EAAAA,EAA6C,CAVS,CAuBA,SAAAoqF,EAAApqF,EACpDu1B,GAiDY,IAAI4f,EAIbn1C,EAAAtW,EAADq2C,OAA+C,GAAG,IACpCoV,EAAmBn1C,EAAAP,EACjCO,EAAAP,GAA0B01C,GAExBA,EAAA20C,GACK9pF,EAvRXmsD,EAuRWnsD,EAvRQo1C,GAuRRp1C,EAvR8BA,OAyTR,GAA3Bm1C,EAAArO,GACA9mC,EAAAA,EAAuBm1C,EAAArO,GACzB9mC,EAAAmsD,EAAmBhX,EAAArO,EACnB9mC,EAAAP,EAAyB,MAEzBO,EAAAmsD,EAAmBnsD,EAAAA,EAGrBA,EAAAmsD,EAAmB52B,CApGQ,CAwLH,SAAA80D,EAASrqF,GAMnC,KAAAP,EAAgB,IAAIiqF,EAOpB,KAAA1pF,EAAgBA,CAb4B,CA+FM,SAAAsqF,EAAAtqF,EAChDu1B,EAAQ4f,EAAOp5C,GACjB,IACgB,IAAIq5C,EAAS7f,EAAAn+B,KACU4I,EAAAP,EAAA81B,EACjC4f,GAtoBN,KAuoBkDC,aAvoB5BrqD,QAGtB,MAAM,IAAIq4D,UAAU,mBAooB8BhO,EApoBA,qBAqoBhD,IAAKA,EAAA5mB,KAEH,OADAxuB,EAAAP,EAxgBJojD,GAAkB,EAygBPzN,EAIK,IAAIyN,EAAczN,EAAA9mD,KAX9B,CAYF,MAAO60D,GAGP,OAFAnjD,EAAAP,EAAA81B,EAAkC,KAClCq0D,EAAA5pF,EAAAP,EAAqB0jD,GACdonC,EAAAvqF,EAHG,CAOZ,OAFAA,EAAAP,EAAA81B,EAAkC,KAClCx5B,EAAA3E,KAAgB4I,EAAAP,EAAeojD,GACxB0nC,EAAAvqF,EApBsB,CA+BiB,SAAAuqF,EAAAvqF,GAC9C,KAAOA,EAAAP,EAAA0sD,GACL,IACgB,IAAI52B,EAAav1B,EAAAA,EAAcA,EAAAP,GAC7C,GAAI81B,EAEF,OADAv1B,EAAAP,EAriBNojD,GAAkB,EAsiBL,CAACv0D,MAAOinC,EAAAjnC,MAAkBkgC,MAAM,EAJvC,CAMF,MAAO2mB,GACPn1C,EAAAP,EAAAg+C,OAA4B,EAC5BmsC,EAAA5pF,EAAAP,EAAqB01C,EAFX,CAOd,GADAn1C,EAAAP,EA9iBAojD,GAAkB,EA+iBd7iD,EAAAP,EAAAA,EAAiC,CAGnC,GAFkB81B,EAAmBv1B,EAAAP,EAAAA,EACrCO,EAAAP,EAAAA,EAAkC,KAC9B81B,EAAAu0D,GACF,MAAMv0D,EAAAs0D,GAER,MAAO,CAACv7F,MAAOinC,EAAA,OAAyB/G,MAAM,EANX,CAQrC,MAAO,CAAClgC,WAAyB,EAAYkgC,MAAM,EAvBM,CAsC5B,SAAAg8D,EAASxqF,GAEtC,KAAAgR,KAAY,SAASukB,GACnB,OA5IFo0D,EA4IS3pF,EA5ITP,GA4ISO,EA3ILP,EAAA81B,EACFA,EAAO+0D,EA0IAtqF,EAAAA,EAzIHP,EAAA81B,EAAAvkB,KAyIgBukB,EAAbv1B,EAzI0CP,EAAA0jD,IAyI1CnjD,EAvITP,EAAA0jD,EAuIsB5tB,GAtItBA,EAAOg1D,EAsIEvqF,IAAAu1B,CADuB,EAKhC,WAAa,SAASA,GACpB,OApGFo0D,EAoGS3pF,EApGTP,GAoGSO,EAnGLP,EAAA81B,EACFA,EAAO+0D,EAkGAtqF,EAAAA,EAjGHP,EAAA81B,EAAA,MAiGiBA,EAAdv1B,EAhGHP,EAAA0jD,IAENymC,EA8FS5pF,EA9FTP,EA8FuB81B,GA7FvBA,EAAOg1D,EA6FEvqF,IAAAu1B,CADwB,EAKjC,YAAc,SAASA,GACrB,OApI0C,SAAAv1B,EAASu1B,GACrDo0D,EAAA3pF,EAAAP,GACc,IAAI01C,EAAmBn1C,EAAAP,EAAA81B,EACrC,OAAI4f,EAOKm1C,EAAAtqF,EAJC,WAAYm1C,EAAmBA,EAAA,OACA,SAASn1C,GACP,MAAO,CAAC1R,MAAO0R,EAAGwuB,MAAM,EADd,EAGT+G,EAAOv1B,EAAAP,EAAA,SAEnDO,EAAAP,EAAA,OAAqB81B,GACdg1D,EAAAvqF,GAbqD,CAoInDyqF,CAAAzqF,EAAeu1B,EADM,EAI9BuzD,IAGA,KAAK79F,OAAAkB,UAAmB,WACtB,OAAO,IAD0B,CAnBW,CAqCZ,SAAAggB,EAASnM,EAAWu1B,GAStD,OAF0Bi1D,EAAD96F,UACrBsQ,EAAAtQ,UACG,IAAI86F,EACP,IAAIH,EAA0B90D,GAV6B,CCr0BrC,SAAAm1D,EAAS1qF,GACnC,KAAIA,aAAoB7S,OAAxB,CAGS6S,EAAAu1C,EAAAv1C,GCET,IAFA,IAAIu1B,EACA4f,EAAM,KACD5f,EAAIv1B,EAAAgR,QAALwd,MACN2mB,EAAA9mD,KAASknC,EAAAjnC,OAEX0R,EAAOm1C,CDRP,QAAAn1C,CAD6C,CELhC,SAAA2qF,EAAS3qF,EAAKu1B,GAC3B,OAAOxqC,OAAA2E,UAAAD,eAAA2H,KAAqC4I,EAAKu1B,EADhB,CCUZ,SAAAq1D,EAAS5qF,EAAOu1B,EAAU4f,GAC3Cn1C,aAAiB+G,SACnB/G,EAAoC+G,OAAO/G,IAG7C,IADA,IAAIjE,EAAMiE,EAAAxW,OACD4rD,EAAI,EAAGA,EAAIr5C,EAAKq5C,IAAK,CAC5B,IAAIyN,EAAQ7iD,EAAMo1C,GAClB,GAAI7f,EAAAn+B,KAAc+9C,EAAS0N,EAAOzN,EAAGp1C,GAAQ,MAAO,CAAC6qF,GAAGz1C,EAAGqZ,GAAG5L,EAFlC,CAI9B,MAAO,CAACgoC,IAAI,EAAGp8B,QAAG,EATsC,CCPhC,SAAAq8B,EAAS9qF,EAASu1B,EAAK4f,GAC/C,GAAe,MAAXn1C,EACF,MAAM,IAAIojD,UACN,yCAA2CjO,EAC3C,kCAEN,GAAI5f,aAAex+B,OACjB,MAAM,IAAIqsD,UACN,sCAAwCjO,EACxC,qCAEN,OAAOn1C,EAAU,EAXoC,CLoPvD0pF,EAAAh6F,UAAAyzD,EAA4C,SAASnjD,GACnD,KAAAy9C,EAAmBz9C,CADuC,EA0B5D0pF,EAAAh6F,UAAA,OAA6C,SAASsQ,GACpD,KAAAP,EAAyB,CAAC,OAA8BO,GACxD,KAAAmsD,EAAmB,KAAAnsD,CAFwC,EAsE7D0pF,EAAAh6F,UAAAo3C,EAA6C,SAAS9mC,GACpD,KAAAmsD,EAAmBnsD,CAD8C,EMxVnEkpF,EAAiB,WAMb,SAASlpF,GAoFW,SAAAu1B,EAASv1B,GAI7B,GAFA,KAAAP,GAAYojD,GAAUlxD,KAAA8C,SAAgB,GAA3BC,WAEPsL,EAAc,CAChB4oF,IACAE,IACI9oF,EAAOu1C,EAAqBv1C,GAEhC,IADA,IAAIu1B,IACKA,EAAQv1B,EAAAgR,QAATwd,MACF+G,EAAOA,EAAAjnC,MACX,KAAAuK,IAA6B08B,EAAK,GAA2BA,EAAK,GAPpD,CAJyB,CApD7C,SAAS4f,EAAOn1C,GACT2qF,EAAa3qF,EAAQo1C,IAOxBozC,EAAuBxoF,EAAQo1C,EAAM,CAAC9mD,MAN5B,IAFU,CAiBxB,SAASyN,EAAMiE,GACb,IAAIu1B,EAAOxqC,OAAOiV,GACdu1B,IACFxqC,OAAOiV,GAAQ,SAASA,GAEtB,OADAm1C,EAAOn1C,GACAu1B,EAAKv1B,EAFkB,EAHf,CA1BnB,GAlBF,WACE,IAAKA,IAAkBjV,OAAAggG,KAAa,OAAO,EAC3C,IACE,IAAIx1D,EAAIxqC,OAAAggG,KAAY,IAChB51C,EAAIpqD,OAAAggG,KAAY,IAChBhvF,EAAM,IACNiE,EAAe,CAAC,CAACu1B,EAAG,GAAI,CAAC4f,EAAG,KAChC,OAAkB,GAAdp5C,EAAAhB,IAAQw6B,IAAyB,GAAdx5B,EAAAhB,IAAQo6C,KAC/Bp5C,EAAA,OAAWw5B,GACXx5B,EAAAlD,IAAQs8C,EAAG,IACHp5C,EAAAqC,IAAQm3B,IAAoB,GAAdx5B,EAAAhB,IAAQo6C,GAR5B,CASF,MAAOiB,GACP,OAAO,CADK,CAXQ,CAAxB,GAkBsB,OAAOp2C,MAGzBo1C,EAAO,kBAAoBzjD,KAAA8C,SAgC/BsH,EAAM,UACNA,EAAM,qBACNA,EAAM,QAKN,IAAI8mD,EAAQ,EAuEZ,OAnCAttB,EAAA7lC,UAAAmJ,IAAgC,SAASmH,EAAKu1B,GAE5C,GADA4f,EAAOn1C,IACF2qF,EAAa3qF,EAAKo1C,GAQrB,MAAU1qD,MAAM,qBAAuBsV,GAGzC,OADAA,EAAIo1C,GAAM,KAAA31C,GAAY81B,EACf,IAb4C,EAiBrDA,EAAA7lC,UAAAqL,IAAgC,SAASiF,GACvC,OAAO2qF,EAAa3qF,EAAKo1C,GAAQp1C,EAAIo1C,GAAM,KAAA31C,QAAY,CADX,EAK9C81B,EAAA7lC,UAAA0O,IAAgC,SAAS4B,GACvC,OAAO2qF,EAAa3qF,EAAKo1C,IAASu1C,EAAa3qF,EAAIo1C,GAAO,KAAA31C,EADd,EAK9C81B,EAAA7lC,UAAA,OAAmC,SAASsQ,GAC1C,SAAK2qF,EAAa3qF,EAAKo1C,KAClBu1C,EAAa3qF,EAAIo1C,GAAO,KAAA31C,YAGfO,EAAIo1C,GAAM,KAAA31C,EALuB,EAQ1C81B,CAxImB,MCgBX,OAMb,SAASv1B,GAkQM,SAAAu1B,IACf,IAAIv1B,EAAoD,GAExD,OADAA,EAAAiqF,GAAgBjqF,EAAAgR,KAAYhR,EAAA2/B,KAAY3/B,CAFd,CAxBT,SAAAm1C,EAASn1C,EAAKu1B,GAC/B,IAAI4f,EAAQn1C,EAAAP,EACZ,OAAOwpF,GAA0B,WAC/B,GAAI9zC,EAAO,CACT,KAAOA,EAAAxV,MAAc3/B,EAAAP,GACnB01C,EAAQA,EAAA80C,GAEV,KAAO90C,EAAAnkC,MAAcmkC,EAAAxV,MAEnB,OADAwV,EAAQA,EAAAnkC,KACD,CAACwd,MAAM,EAAOlgC,MAAOinC,EAAK4f,IAEnCA,EAAQ,IARC,CAUX,MAAO,CAAC3mB,MAAM,EAAMlgC,WAAO,EAXe,GAFP,CAvBnB,SAAAyN,EAASiE,EAAKu1B,GAkE5B,IAAA4f,EAjEW5f,UAAAA,EAkEH,UAAR4f,GAA4B,YAARA,EAEjB0N,EAAAzkD,IApEQm3B,GAyEb4f,EAAO0N,EAAA9nD,IAzEMw6B,IAqEP4f,EAAK,MAAQgO,EACjBN,EAAAhqD,IAtEW08B,EAsEI4f,IAMnBA,EAAO,KA5EQ5f,EACf,IAAIx5B,EAAOiE,EAAAA,EAAUm1C,GACrB,GAAIp5C,GAAQ4uF,EAAa3qF,EAAAA,EAAWm1C,GAClC,IAAK,IAAIC,EAAQ,EAAGA,EAAQr5C,EAAAvS,OAAa4rD,IAAS,CAChD,IAAIqW,EAAQ1vD,EAAKq5C,GACjB,GAAK7f,IAAQA,GAAOk2B,EAAA3kD,MAAc2kD,EAAA3kD,KAAcyuB,IAAQk2B,EAAA3kD,IACtD,MAAO,CAAC0uB,GAAI2f,EAAIl9B,KAAMlc,EAAMhO,MAAOqnD,EAAOiB,EAAOoV,EAHH,CAOpD,MAAO,CAACj2B,GAAI2f,EAAIl9B,KAAMlc,EAAMhO,OAAQ,EAAGsoD,OAAO,EAXT,CAjJrB,SAAAjB,EAASp1C,GAazB,GAXA,KAAAA,EAAa,GAGb,KAAAP,EAAa81B,IAMb,KAAAjT,KAAY,EAERtiB,EAAc,CACZA,EAAOu1C,EAAqBv1C,GAEhC,IADA,IAAIm1C,IACKA,EAAQn1C,EAAAgR,QAATwd,MACF2mB,EACoDA,EAAD7mD,MACvD,KAAAuK,IAA6Bs8C,EAAK,GAA2BA,EAAK,GANpD,CAbqB,CAvBvC,GApCF,WACE,IACKn1C,GACmB,mBAAbA,IACNA,EAAAtQ,UAAAs7F,SACqB,mBAAfjgG,OAAAggG,KACT,OAAO,EAGT,IAEE,IAAIx1D,EAAMxqC,OAAAggG,KAAY,CAAC99F,EAAG,IACtBkoD,EAAM,IAAIn1C,EAAUu1C,EAAqB,CAAC,CAAChgB,EAAK,QACpD,GAAoB,KAAhB4f,EAAAp6C,IAAQw6B,IAA2B,GAAZ4f,EAAA7yB,MAAiB6yB,EAAAp6C,IAAQ,CAAC9N,EAAG,KACpDkoD,EAAAt8C,IAAQ,CAAC5L,EAAG,GAAI,MAAQkoD,GAAmB,GAAZA,EAAA7yB,KACjC,OAAO,EAET,IAA6BvmB,EAAOo5C,EAAA61C,UAChC51C,EAAOr5C,EAAAiV,OACX,OAAIokC,EAAA5mB,MAAa4mB,EAAA9mD,MAAW,IAAMinC,GAAwB,KAAjB6f,EAAA9mD,MAAW,OAGpD8mD,EAAOr5C,EAAAiV,QACHwd,MAAgC,GAAnB4mB,EAAA9mD,MAAW,GAAXrB,GACI,KAAjBmoD,EAAA9mD,MAAW,KAAcyN,EAAAiV,OAAAwd,KAf3B,CAmBF,MAAOs/B,GACP,OAAO,CADK,CA5BQ,CAAxB,GAoCsB,OAAO9tD,EAI7B4oF,IACAE,IAIA,IAAIjmC,EAAQ,IAAIxyC,QAwChB+kC,EAAA1lD,UAAAmJ,IAA4B,SAASmH,EAAKu1B,GACxC,IAAI4f,EAAIp5C,EAAc,KAAMiE,GAmB5B,OAlBKm1C,EAAAl9B,OACHk9B,EAAAl9B,KAAU,KAAAjY,EAAWm1C,EAAA3f,IAAQ,IAE1B2f,EAAAkB,EAaHlB,EAAAkB,EAAA/nD,MAAgBinC,GAZhB4f,EAAAkB,EAAU,CACRrlC,KAAM,KAAAvR,EACNwqF,GAAU,KAAAxqF,EAAAwqF,GACVtqD,KAAM,KAAAlgC,EACNqH,IAAK9G,EACL1R,MAAOinC,GAET4f,EAAAl9B,KAAA5pB,KAAY8mD,EAAAkB,GACZ,KAAA52C,EAAAwqF,GAAAj5E,KAA2BmkC,EAAAkB,EAC3B,KAAA52C,EAAAwqF,GAAsB90C,EAAAkB,EACtB,KAAA/zB,QAIK,IApBwC,EAyBjD8yB,EAAA1lD,UAAA,OAA+B,SAASsQ,GAEtC,UADIA,EAAIjE,EAAc,KAAMiE,IACxBq2C,IAAWr2C,EAAAiY,QACbjY,EAAAiY,KAAA8nB,OAAc//B,EAAAjS,MAAS,GAClBiS,EAAAiY,KAAAzuB,eAAsB,KAAAwW,EAAWA,EAAAw1B,IACtCx1B,EAAAq2C,EAAA4zC,GAAAj5E,KAAwBhR,EAAAq2C,EAAArlC,KACxBhR,EAAAq2C,EAAArlC,KAAAi5E,GAAwBjqF,EAAAq2C,EAAA4zC,GACxBjqF,EAAAq2C,EAAA1W,KAAe,KACf,KAAArd,QACO,EATkC,EAgB7C8yB,EAAA1lD,UAAA+1D,MAA8B,WAC5B,KAAAzlD,EAAa,GACb,KAAAP,EAAa,KAAAA,EAAAwqF,GAAsB10D,IACnC,KAAAjT,KAAY,CAH2B,EAQzC8yB,EAAA1lD,UAAA0O,IAA4B,SAAS4B,GACnC,QAAUjE,EAAc,KAAMiE,GAApBq2C,CAD8B,EAM1CjB,EAAA1lD,UAAAqL,IAA4B,SAASiF,GAGnC,OAFIA,EAAQjE,EAAc,KAAMiE,GAApBq2C,IAGYr2C,EAAA1R,KAJgB,EAS1C8mD,EAAA1lD,UAAAs7F,QAAgC,WAC9B,OAAO71C,EAAa,MAA2C,SACtBn1C,GACvC,MAAQ,CAACA,EAAA8G,IAAW9G,EAAA1R,MAD0B,GAFP,EAS3C8mD,EAAA1lD,UAAA8c,KAA6B,WAC3B,OAAO2oC,EAAa,MAA2B,SACNn1C,GACvC,OAAOA,EAAA8G,GADuC,GAFV,EASxCsuC,EAAA1lD,UAAAu7F,OAA+B,WAC7B,OAAO91C,EAAa,MAA6B,SACRn1C,GACvC,OAAOA,EAAA1R,KADuC,GAFR,EAS1C8mD,EAAA1lD,UAAA2pB,QAAgC,SAASrZ,EAAUu1B,GAGjD,IAFA,IACIx5B,EADAo5C,EAAO,KAAA61C,YAEFjvF,EAAOo5C,EAAAnkC,QAARwd,MACFzyB,EAAQA,EAAAzN,MACZ0R,EAAA5I,KACsBm+B,EACIx5B,EAAM,GACRA,EAAM,GAC1B,KATwD,EAc9Cq5C,EAAA1lD,UAAuBzE,OAAAkB,UACrCipD,EAAA1lD,UAAAs7F,QAuEJ,IAAI7nC,EAAW,EAuBf,OAAO/N,CApSe,MC7BP,OAMb,SAASp1C,GA+DO,SAAAu1B,EAASv1B,GAGzB,GADA,KAAAP,EAAY,IAAIxJ,IACZ+J,EAAc,CACZA,EAAOu1C,EAAqBv1C,GAEhC,IADA,IAAIu1B,IACKA,EAAQv1B,EAAAgR,QAATwd,MAEN,KAAA73B,IADmD4+B,EAADjnC,MAJpC,CAWlB,KAAAg0B,KAAY,KAAA7iB,EAAA6iB,IAd2B,CApBvC,OApCF,WACE,IACKtiB,GACmB,mBAAbA,IACNA,EAAAtQ,UAAAs7F,SACqB,mBAAfjgG,OAAAggG,KACT,OAAO,EAGT,IAEE,IAAIx1D,EAAQxqC,OAAAggG,KAAY,CAAC99F,EAAG,IACxB8O,EAAM,IAAIiE,EAAUu1C,EAAqB,CAAChgB,KAC9C,IAAKx5B,EAAAqC,IAAQm3B,IAAsB,GAAZx5B,EAAAumB,MAAiBvmB,EAAApF,IAAQ4+B,IAAUx5B,GAC1C,GAAZA,EAAAumB,MAAiBvmB,EAAApF,IAAQ,CAAC1J,EAAG,KAAO8O,GAAmB,GAAZA,EAAAumB,KAC7C,OAAO,EAET,IAAI8yB,EAAOr5C,EAAAivF,UACPnoC,EAAOzN,EAAApkC,OACX,OAAI6xC,EAAAr0B,MAAaq0B,EAAAv0D,MAAW,IAAMinC,GAASstB,EAAAv0D,MAAW,IAAMinC,MAG5DstB,EAAOzN,EAAApkC,QACHwd,MAAaq0B,EAAAv0D,MAAW,IAAMinC,GAA4B,GAAnBstB,EAAAv0D,MAAW,GAAXrB,GACvC41D,EAAAv0D,MAAW,IAAMu0D,EAAAv0D,MAAW,IAGzB8mD,EAAApkC,OAAAwd,KAlBL,CAmBF,MAAO20B,GACP,OAAO,CADK,CA5BQ,CAAxB,GAoC6BnjD,GAI7B4oF,IACAE,IAkCAvzD,EAAA7lC,UAAAiH,IAA4B,SAASqJ,GAGnC,OAFA,KAAAP,EAAA5G,IAAcmH,EAAOA,GACrB,KAAAsiB,KAAY,KAAA7iB,EAAA6iB,KACL,IAHmC,EAQ5CiT,EAAA7lC,UAAA,OAA+B,SAASsQ,GAGtC,OAFIA,EAAS,KAAAP,EAAA,OAAiBO,GAC9B,KAAAsiB,KAAY,KAAA7iB,EAAA6iB,KACLtiB,CAHsC,EAQ/Cu1B,EAAA7lC,UAAA+1D,MAA8B,WAC5B,KAAAhmD,EAAAgmD,QACA,KAAAnjC,KAAY,CAF2B,EAOzCiT,EAAA7lC,UAAA0O,IAA4B,SAAS4B,GACnC,OAAO,KAAAP,EAAArB,IAAc4B,EADqB,EAM5Cu1B,EAAA7lC,UAAAs7F,QAAgC,WAC9B,OAAO,KAAAvrF,EAAAurF,SADkC,EAM3Cz1D,EAAA7lC,UAAAu7F,OAA+B,WAC7B,OAAO,KAAAxrF,EAAAwrF,QADiC,EAM1C11D,EAAA7lC,UAAA8c,KAA6B+oB,EAAA7lC,UAAAu7F,SAGXv7F,UAAuBzE,OAAAkB,UACrCopC,EAAA7lC,UAAAu7F,OAIJ11D,EAAA7lC,UAAA2pB,QAAgC,SAASrZ,EAAUu1B,GACjD,IAAI4f,EAAM,KACV,KAAA11C,EAAA4Z,SAAkB,SAAStd,GACzB,OAAOiE,EAAA5I,KAAgCm+B,EAAcx5B,EAAOA,EAAOo5C,EADnC,GAF4B,EAQzD5f,EA3Ie,ICTxB2zD,EAAiB,6BAA6B,SAASlpF,GACrD,OAAIA,GAaW,SAASA,EAAUm1C,GAChC,OAAOy1C,EAAqB,KAAM5qF,EAAUm1C,GAArC01C,EADsC,CAdY,ICA7D3B,EAAiB,wBAAwB,SAASlpF,GAChD,OAAIA,GAQW,WACb,gBCCiCA,EAAOu1B,GAC1CuzD,IAEI9oF,aAAiB+G,SAAgB/G,GAAQ,IAC7C,IAAIm1C,EAAI,EACJp5C,EAAO,CACTiV,KAAM,WACJ,GAAImkC,EAAIn1C,EAAAxW,OAAc,CACpB,IAAI4rD,EAAQD,IACZ,MAAO,CAAC7mD,MAAOinC,EAAU6f,EAAOp1C,EAAMo1C,IAAS5mB,MAAM,EAFjC,CAKtB,OADAzyB,EAAAiV,KAAY,WAAa,MAAO,CAACwd,MAAM,EAAMlgC,WAAO,EAA7B,EAChByN,EAAAiV,MANQ,GAUnB,OADAjV,EAAK9Q,OAAAkB,UAAmB,WAAa,OAAO4P,CAAT,EAC5BA,CAhB8C,CDD5CmvF,CAA0B,MAAM,SAASlrF,GAAK,OAAOA,CAAT,GAD3B,CAT4B,IEDxDkpF,EAAiB,aAAa,SAASlpF,GACrC,OAAIA,GAeW,SAASA,EAAMm1C,GAC5B,OAAIn1C,IAASm1C,EAEM,IAATn1C,GAAgB,EAAIA,IAAS,EAA2Bm1C,EAGxDn1C,IAASA,GAAUm1C,IAAUA,CANJ,CAhBM,MCC5B,4BAA4B,SAASn1C,GACpD,OAAIA,GAcW,SAASA,EAAem1C,GACrC,IAAI5f,EAAQ,KACRA,aAAiBxuB,SACnBwuB,EAAoCxuB,OAAOwuB,IAE7C,IAAI6f,EAAM7f,EAAA/rC,OACNq5D,EAAI1N,GAAiB,EAIzB,IAHQ,EAAJ0N,IACFA,EAAIlxD,KAAAw5F,IAAStoC,EAAIzN,EAAK,IAEjByN,EAAIzN,EAAKyN,IAAK,CACnB,IAAIM,EAAU5tB,EAAMstB,GACpB,GAAIM,IAAYnjD,GAAiBjV,OAAAmhB,GAAUi3C,EAASnjD,GAClD,OAAO,CAHU,CAMrB,OAAO,CAhB6C,CAfI,ICA5DkpF,EAAiB,6BAA6B,SAASlpF,GACrD,OAAIA,GAYW,SAASA,EAAcm1C,GAGpC,OAA4D,IAD/C21C,EAAwB,KAAM9qF,EAAc,YAClD9H,QAAe8H,EAAcm1C,GAAgB,EAHF,CAbO,ICA7D+zC,EAAiB,cAAc,SAASlpF,GACtC,OAAIA,GAoBW,SAASA,EAAWm1C,EAAWp5C,GAC5C+sF,IACA3zC,EAAyB,MAAbA,EAAoBA,EAAY,SAASn1C,GAAK,OAAOA,CAAT,EACxD,IAAIu1B,EAAS,GAETstB,EAAqC7iD,EAAW/U,OAAAkB,UACpD,GAA+B,mBAApB02D,EAGT,IAFA7iD,EAAY6iD,EAAAzrD,KAAsB4I,KAEzB6iD,EAAO7iD,EAAAgR,QAARwd,MACN+G,EAAAlnC,KACI8mD,EAAA/9C,KAAiC2E,EAAc8mD,EAAAv0D,YAEhD,CACDu0D,EAAM7iD,EAAAxW,OACV,IAAK,IAAI25D,EAAI,EAAGA,EAAIN,EAAKM,IACvB5tB,EAAAlnC,KACI8mD,EAAA/9C,KAAiC2E,EAAciE,EAAUmjD,IAJ1D,CAOP,OAAO5tB,CApBkD,CArBf,MCA7B,+BAA+B,SAASv1B,GACvD,OAAIA,GAYW,SAASA,EAAcm1C,GAUpC,IARA,IAAI5f,EAASu1D,EAAwB,KAAM9qF,EAAc,cAErDo1C,EAAS7f,EAAA/rC,OACTq5D,EAAY7iD,EAAAxW,OACZ25D,EAAIxxD,KAAAw5F,IACJ,EACAx5F,KAAAm6C,IAAgD,EAAhBqJ,EAAmB5f,EAAA/rC,SACnDiiE,EAAI,EACDA,EAAI5I,GAAaM,EAAI/N,GAC1B,GAAI7f,EAAO4tB,MAAQnjD,EAAayrD,KAAM,OAAO,EAE/C,OAAOA,GAAK5I,CAbsC,CAbS,ICA/DqmC,EAAiB,wBAAwB,SAASlpF,GAChD,OAAIA,GAaW,SAASA,EAAUm1C,GAChC,OAAOy1C,EAAqB,KAAM5qF,EAAUm1C,GAArCsZ,EADsC,CAdO,I5B2BxD,IAAA28B,EAAcpwF,cA4sBMoxD,EAASpsD,EAAYu1B,GAtoBvC,IAgBS6f,EAhBLD,EAuoBan1C,EAvoBLrG,MAAW,KACnBoC,EAA0BqvF,EAKxBj2C,EAAM,KAAMp5C,IAAQA,EAAAsvF,YACxBtvF,EAAAsvF,WAAe,OAASl2C,EAAM,IAShC,KAAeA,EAAA3rD,SAAiB4rD,EAAOD,EAAAoF,UAChCpF,EAAA3rD,aAjCQ,IAupBc+rC,EAlnBzBx5B,EADSA,EAAIq5C,GACPr5C,EAAIq5C,GAEJr5C,EAAIq5C,GAAQ,CAAC,EAJnBr5C,EAAIq5C,GAonBqB7f,CADoC,CAsCnD,SAAA+1D,EAAStrF,EAAWu1B,GAElC,SAAS4f,IAAY,CACrBA,EAAAzlD,UAAqB6lC,EAAA7lC,UACrBsQ,EAAAurF,GAAwBh2D,EAAA7lC,UACxBsQ,EAAAtQ,UAAsB,IAAIylD,EAE1Bn1C,EAAAtQ,UAAAmL,YAAkCmF,EAmBlCA,EAAAwrF,GAAiB,SAASxrF,EAAIm1C,EAAY0N,GAExC,OAAOttB,EAAA7lC,UAAqBylD,GAArBh+B,MAAuCnX,EADnC7S,MAAAuC,UAAAiF,MAAAyC,KAA2B7N,UAAW,GADC,CA1BN,C6BjwB/B,SAAAkiG,EAASzrF,GAOxBhF,KAAAu6B,EAAc5jC,KAAA+5F,IAAS/5F,KAAAT,IAAS,IAAO8O,GAMvChF,KAAAgF,EAHAhF,KAAAyE,EAAiB,CAViB,CAuBF,SAAAksF,EAAA3rF,EAASu1B,EAAQ4f,GACjD,IAAIp5C,EAAWpK,KAAAguE,IAAS3/D,EAAAu1B,EAAaA,GACjC4f,EAAcA,GAAS,EAAIp5C,GAAYA,EAAWiE,EAAAP,EAEjDo0C,MAAMsB,KACTn1C,EAAAP,EAAiB01C,EACjBn1C,EAAAA,GAAqBu1B,EANiC,CAcnB,SAAAq2D,EAAA5rF,GAErC,OAAOA,EAAAP,GADU,EAAI9N,KAAAguE,IAAS3/D,EAAAu1B,EAAav1B,EAAAA,GADK,CCtCf,SAAA6rF,IAMjC7wF,KAAAgF,EAAa,IAAIyrF,EAAe,GAOhCzwF,KAAAu6B,EAAa,IAAIk2D,EAAe,GAMhCzwF,KAAAyE,EAAqB,CAnBuB,CC2BtB,SAAAqsF,IAAY,CASb,SAAAC,IAAY,CAUjB,SAAAC,IAAY,C/B6Y9BZ,EAAA3rF,GAA8B,E8B/W9BosF,EAAAn8F,UAAAu8F,qBACI,SAASjsF,GACX,OA/CsB,MA+ClBhF,KAAAyE,EACKO,EAKFrO,KAAAm6C,IAAS8/C,EAAA5wF,KAAAgF,GAA0B4rF,EAAA5wF,KAAAu6B,GAPd,ECwB1BlhC,EAAAg9B,SAAkBh9B,EAAAg9B,QAAAngC,IAAAgzB,OACpB6nE,EAAuB16D,QAAA0sB,KAAA75B,KAAkBmN,SACzCy6D,EAAwBz6D,QAAAja,MAAA8M,KAAmBmN,UC3C7C,IAAA66D,EAA0B,kHC5Bf,SAAAC,EAASnsF,GAElB,IAAIu1B,EACAv1B,aAAemsF,GACjBC,EAAApxF,KAAegF,EAmPVqsF,IAlPLrxF,KAgSF8wF,GAhSmB9rF,EAqRZ8rF,GApRL9wF,KA4TFwuF,GA5TiBxpF,EAiTVwpF,GAhTL8C,EAAAtxF,KAAagF,EA6URusF,IA5ULvxF,KA2XFiuF,GA3XejpF,EAgXRipF,GA/WLuD,EAAAxxF,KAAkBgF,EA4bbP,EA5baue,SAClBhjB,KA8cF4vF,GA9cmB5qF,EAmcZ4qF,IAlcI5qF,IAAQu1B,EAAyBxuB,OAAO/G,GDqE/CjI,MAAUm0F,KCjEZE,EAAApxF,KAAeu6B,EDqCT,ICrCoD,IAAI,GAC9Dv6B,KAqRF8wF,GAA0BW,GArRPl3D,EDqCR,ICrCsD,IAC/Dv6B,KAiTFwuF,GAAwBiD,GAjTPl3D,EDqCT,ICrCoD,IAiTD,GAhTzD+2D,EAAAtxF,KAAau6B,EDqCT,ICpCJv6B,KAgXFiuF,GAAsBwD,GAhXPl3D,EDqCT,ICrCkD,IAgXD,GA/WrDi3D,EAAAxxF,KAAkBu6B,EDqCR,ICrCuD,IAAI,GACrEv6B,KAmcF4vF,GAA0B6B,GAncPl3D,EDqCT,ICrCsD,KAE9Dv6B,KAAAyE,EAAkB,IAAIitF,GAAmB,KAvBpB,CAiQM,SAAAN,EAAApsF,EAASu1B,EAAW4f,GACjDn1C,EAAAqsF,GAAel3C,EAASs3C,GAAwBl3D,GAAW,GACvDA,EAIAv1B,EAAAqsF,KACFrsF,EAAAqsF,GAAersF,EAAAqsF,GAAAtyF,QAAqB,KAAM,IAPa,CA4F9B,SAAAuyF,EAAAtsF,EAASu1B,GACpC,GAAIA,EAAS,CAEX,GADAA,EAAUmtB,OAAOntB,GACbse,MAAMte,IAAsB,EAAVA,EACpB,MAAM7qC,MAAM,mBAAqB6qC,GAEnCv1B,EAAAusF,GAAah3D,CALF,MAOXv1B,EAAAusF,GAAa,IAR8B,CAkEb,SAAAC,EAAAxsF,EAASu1B,EAAW4f,GAChD5f,aAAqBm3D,GACvB1sF,EAAAP,EAAkB81B,GAEb4f,IAGH5f,EAAYo3D,GAA6Bp3D,EACAq3D,KAE3C5sF,EAAAP,EAAkB,IAAIitF,GAAmBn3D,GAViB,CAmIpC,SAAAk3D,GAASzsF,EAAKu1B,GAEtC,OAAKv1B,EAIEu1B,EAAmBs3D,UAAU7sF,GAAO8sF,mBAAmB9sF,GAHrD,EAH+C,CAsB3B,SAAA2sF,GAAS3sF,EAAeu1B,EACnD4f,GACF,MjCyGqB,iBiCzGHn1C,GACZA,EAAU+sF,UAAU/sF,GAAVjG,QACFw7B,EAAOy3D,IACf73C,IAGFn1C,EAAyCA,EA2BtCjG,QAA4B,uBAAwB,QAzBlDiG,GAEF,IAXiB,CAqBH,SAAAgtF,GAAShtF,GAE9B,MAAO,MADHA,EAAIA,EAAA7D,WAAc,KACF,EAAK,IAAZzH,SAA0B,KAAW,GAAJsL,GAADtL,SAAmB,GAF9B,EA7iBpCN,EAAA+3F,EAAAz8F,WAAA28F,GAA6B,GAQ7Bj4F,EAAA03F,GAA+B,GAQ/B13F,EAAAo1F,GAA6B,GAQ7Bp1F,EAAAm4F,GAA2B,KAQ3Bn4F,EAAA60F,GAA2B,GAgB3B70F,EAAAw2F,GAA+B,KAO/Bl2F,SAA8B,WAC5B,IAAIsL,EAAM,GAENu1B,EAASv6B,KA4JNqxF,GArJP,GANI92D,GACFv1B,EAAA3R,KAASs+F,GACLp3D,EAAQ03D,IAA0C,GAAO,KAG3D13D,EAASv6B,KAsNNwuF,GArNK,CACVxpF,EAAA3R,KAAS,MAET,IAAI8mD,EAAWn6C,KAqLV8wF,GApLD32C,GACFn1C,EAAA3R,KAASs+F,GACLx3C,EAAU83C,IAA0C,GAAO,KAGjEjtF,EAAA3R,KAAwC5E,mBAAmB8rC,GAgftDx7B,QAA4B,uBAAwB,QA7e7C,OADRw7B,EAAOv6B,KAuONuxF,KArOHvsF,EAAA3R,KAAS,IAAK0Y,OAAOwuB,GAbb,CAwCZ,OAvBIA,EAAOv6B,KAqQJiuF,MAnQDjuF,KAuNGwuF,IAvNmC,KAAlBj0D,EAAA23D,OAAY,IAClCltF,EAAA3R,KAAS,KAEX2R,EAAA3R,KAASs+F,GACLp3D,EACkB,KAAlBA,EAAA23D,OAAY,GACRC,GACAC,IACJ,MAGF73D,EAAQv6B,KAoTLyE,EAAA/K,aAlTLsL,EAAA3R,KAAS,IAAKknC,IAGZA,EAAWv6B,KAwUR4vF,KAtUL5qF,EAAA3R,KAAS,IAAKs+F,GACVp3D,EAAU83D,KAETrtF,EAAAqsB,KAAS,GAlDuB,IAuEzCvR,QAA6B,SAAS9a,GAEpC,IAAIu1B,EAAcv6B,KAAAgjB,QACU,SAAxBuX,EAAA82D,KAEF92D,EAAc,IAAI42D,GAMpB,IAAIh3C,IAAan1C,EAwGRqsF,GAtGLl3C,EACFi3C,EAAA72D,EAAsBv1B,EA0EjBqsF,IAxELl3C,IAAan1C,EAgIN8rF,GA7HL32C,EACF5f,EAkHFu2D,GAlH0B9rF,EAuGnB8rF,GArGL32C,IAAan1C,EAuJNwpF,GApJLr0C,EACF5f,EAyIFi0D,GAzIwBxpF,EA8HjBwpF,GA5HLr0C,EAqLmB,MArLNn1C,EAqLRusF,GAlLP,IAAIxwF,EAAOiE,EA0LJipF,GAzLP,GAAI9zC,EACFm3C,EAAA/2D,EAAoBv1B,EAoJfusF,SAjJL,GADAp3C,IAAan1C,EA0MNipF,GAzMS,CAEd,GAAsB,KAAlBltF,EAAAmxF,OAAY,GAEd,GAAIlyF,KAqIDwuF,KArIsBxuF,KAqMtBiuF,GAnMDltF,EAAO,IAAMA,MACR,CAEL,IAAIq5C,EAAiB7f,EA4KtB0zD,GA5KsBqE,YAAkC,MAChC,GAAnBl4C,IACFr5C,EAAOw5B,EA0KV0zD,GA1KUsE,OAA6B,EAAGn4C,EAAiB,GAAKr5C,EAJ1D,CAySb,GAAY,MAjS0BA,GAiSV,KAjSUA,EAkSpCA,EAAO,QAEF,IAA2B,GApSIA,EAoS3B7D,QAAa,QACU,GArSI6D,EAqS3B7D,QAAa,MADjB,CAODk9C,EAA4C,GA3SZr5C,EA2ShBuxF,YAAiB,IAAK,GACtCvxF,EA5SgCA,EA4SrBpC,MAAW,KAG1B,IAFA,IAAIkpD,EAAM,GAEDM,EAAM,EAAGA,EAAMpnD,EAAAvS,QAAmB,CACzC,IAAIiiE,EAAU1vD,EAASonD,KAER,KAAXsI,EACErW,GAAgB+N,GAAOpnD,EAAAvS,QACzBq5D,EAAAx0D,KAAS,IAES,MAAXo9D,IACQ,EAAb5I,EAAAr5D,QAAgC,GAAdq5D,EAAAr5D,QAA6B,IAAVq5D,EAAI,KAC3CA,EAAA10D,MAEEinD,GAAgB+N,GAAOpnD,EAAAvS,QACzBq5D,EAAAx0D,KAAS,MAGXw0D,EAAAx0D,KAASo9D,GACTrW,GAAe,EAhBwB,CAoB3Cr5C,EAAO8mD,EAAAx2B,KAAS,IA/BX,CAnTW,CAmClB,OAhBI8oB,EACF5f,EA4KF0zD,GA5KsBltF,EAEpBo5C,EA2LoC,KA3LvBn1C,EA2LRP,EAAA/K,WAxLHygD,EACFq3C,EAAAj3D,EAAyBv1B,EAwOpBP,EAxOoBue,SAEzBm3B,IAAan1C,EAmQN4qF,GAhQLz1C,IACF5f,EAqPFq1D,GArP0B5qF,EA0OnB4qF,IAvOAr1D,CAvE0C,EA+EnDnhC,EAAA4pB,MAA2B,WACzB,OAAO,IAAImuE,EAASnxF,KADgB,EAuXtC,IAAAiyF,GAA2C,YAS3CG,GAAuC,UAQvCD,GAAuC,SAQvCP,GAAgC,UAQhCS,GAAmC,KAkBd,SAAAX,GAAS1sF,GAM5BhF,KAAAyE,EAAqBO,GAAS,IANU,CCxrBxC,SAAAusF,GAAYvsF,GAEVhF,KAAAgF,EAAeA,EAGfhF,KAAAyE,EAAsB,IALJ,CCOpB,SAAAisD,GAAY1rD,GAOVhF,KAAAgF,EAAeA,EAGfhF,KAAAyE,EAAe,IAVG,CCFF,SAAA+tF,GAASxtF,EAAYu1B,GAIvC,IAAI4f,EAwGG,CACLs4C,YAAa,EACbC,UAAW,IACXC,cAAe,EACfC,WAAY,GACZC,QAAS,GAvGX7yF,KAAAtR,EAA+C,MAA1BsW,EAAAytF,YACjBt4C,EAAAs4C,YAAuBztF,EAAAytF,YAQ3BzyF,KAAAo6C,EAA2C,MAAxBp1C,EAAA0tF,UACfv4C,EAAAu4C,UAAqB1tF,EAAA0tF,UAQzB1yF,KAAAmoD,EAA6C,MAAzBnjD,EAAA4tF,WAChBz4C,EAAAy4C,WAAsB5tF,EAAA4tF,WAQ1B5yF,KAAA6nD,EAAmD,MAA5B7iD,EAAA2tF,cACnBx4C,EAAAw4C,cAAyB3tF,EAAA2tF,cAK7B3yF,KAAAyE,EAAoB,EAGpBzE,KAAAgF,EAA0BhF,KAAAo6C,GAG1Bp6C,KAAAu6B,OAjDuC,IAAAA,GAAAA,KA0DrCv6B,KAAAyE,EAAoB,EA1DoC,CAmEtB,SAAAquF,GAAA9tF,GAAiB,OAAAk9C,GAAA,SAAA/H,IASrD,IAAMp5C,EAYAq5C,EArB+C,OAAAjpC,EAAAgpC,GAAA,SAAAA,GAAA,OAAAA,EAAAgX,GAAA,OACrD,GADqDnsD,EACjDP,GADiDO,EAC5BtW,EACvB,KAFmDsW,EAE/Cu1B,EAGF,OAAA4f,EAAA,OAAOnS,QAAAC,UAL0CjjC,EA8ErDP,EAAoB,EA9EiCO,EA+ErDA,EA/EqDA,EA+E3Bo1C,CAtEpB,CAGN,OAHMr5C,EAT+CiE,EAS9BP,EAT8BO,EAUrDP,IAEsB,GAAlB1D,EAEFo5C,EAAA,UAOIC,EArB+Cp1C,EAsBjDA,GA8CY,GANmB,EAAhBrO,KAAA8C,SAAuB,GA9DWuL,EAsBxBmjD,GAE7BI,EAAApO,EAAM,IAAInS,SAAQ,SAAChjC,GAmEL,IAAI0rD,GAlEuB1rD,GAmEzC4rD,EAnE0BxW,EAmEE,IApEG,IAA/B,IAxBqD,OAAAp1C,EA6BrDA,GA7BqDA,EA6B1B6iD,EA7B0BxE,EAAAlJ,GAAA,OCpEpC,SAAAM,GAASz1C,EAAUu1B,EAAU4f,EAAMp5C,GAAA,QAAAq5C,EAAA,GAAAyN,EAAA,EAAAA,EAAAt5D,UAAAC,SAAAq5D,EAAAzN,EAAAyN,EAAA,GAAAt5D,UAAAs5D,GAKpD7nD,KAAA+yF,SAAgB/tF,EAKhBhF,KAAAgzF,SAAgBz4D,EAKhBv6B,KAAA3R,KAAY8rD,EAKZn6C,KAAArN,KApBgEynD,EAyBhEp6C,KAAAizF,SAAe,CAzBiD,CCJvC,SAAAjiC,KACzB,IAAIhsD,EACAu1B,EAkBE4f,EAPU,IAAInS,SAAQ,SAASmS,EAASC,GAC5Cp1C,EAAiBm1C,EACjB5f,EAAgB6f,CAFoC,IAWtD,OAHAD,EAAAr6B,QAAwB9a,EACxBm1C,EAAAlS,OAAuB1N,EAEhB4f,CAxB6B,CCepC,SAAA70B,GAAYtgB,EAASu1B,GAEnBv6B,KAAAw+E,QAAex5E,EAGfhF,KAAAkzF,GAAgB34D,EAGhBv6B,KAAAyE,GAAgB,CARY,CAiB9B,SAAO0uF,GAAOnuF,GACZ,OAAO,IAAIsgB,GACP0iB,QAAAC,OAAejjC,IACf,WAAM,OAAAgjC,QAAAloB,SAAA,GAHS,CAWrB,SAAOszE,KACL,IAAMpuF,EAAIgjC,QAAAC,OAAe,IAAIwS,GFwEnB,EA4BF,EA4jBW,OEzpBnB,OADAz1C,EAAA,OAAQ,WAAO,IACR,IAAIsgB,GAA8BtgB,GAAG,WAAM,OAAAgjC,QAAAloB,SAAA,GARnC,CAkBjB,SAAOuzE,GAAUruF,GACf,OAAO,IAAIsgB,GACP0iB,QAAAloB,QAAgB9a,IAChB,WAAM,OAAAgjC,QAAAloB,SAAA,GAHY,UAcjBwzE,GAAatuF,GAClB,OAAO,IAAIsgB,GACPtgB,GAGA,WAAM,OAAAA,EAAA,OAAc,WAAO,GAArB,GALiB,CAwB7B,SAAOuuF,GAAIvuF,GACT,OAAO,IAAIsgB,GACP0iB,QAAA20C,IAAY33E,EAAAuiB,KAAe,SAACviB,GAAO,OAAAA,EAAAw5E,OAAA,MACnC,WAAM,OAAAx2C,QAAA20C,IAAY33E,EAAAuiB,KAAe,SAACviB,GAAO,OAAAA,EAAAoZ,OAAA,IAAnC,GAHW,UAsGhBo1E,GAAmBxuF,EAAUu1B,EAAO4f,GACzC,IACE,IAAIp5C,EAAMiE,EAASu1B,GAEnB,OAAIx5B,GAAOA,EAAAy9E,SAAez9E,EAAAqd,OAKxB+7B,EAAAr6B,QAAmB/e,EAAAy9E,SAIZ,WAAM,OAAAz9E,EAAAqd,OAAA,IAGb+7B,EAAAr6B,QAAmB/e,GAGZ,WAAM,OAAAinC,QAAAloB,QAAgB/e,GAAhB2e,MAA0B,WAAO,IAAjC,OAA0C,WAAO,GAAjD,EAlBb,CAoBF,MAAO06B,GAIP,OADAD,EAAAlS,OAAkBmS,GACX,WAAM,OAAApS,QAAAloB,SAAA,CAJK,CArBiC,CC1MlC,SAAA6wC,GAAS3rD,EAAMu1B,GAEpC,IAAK,IAAI4f,KAF2B5f,OAAA,IAAAA,EAAO,CAAC,EAARA,EAGlCv6B,KAAKm6C,GAAO5f,EAAK4f,GAcnBn6C,KAAAkH,iBAHAlH,KAAAgI,WAHAhI,KAAA+H,SAAe,EAef/H,KAAAiI,UAAiB5O,EAAAi7E,aAAsBj7E,EAAAi7E,YAAAn/E,IACnCkE,EAAAi7E,YAAAn/E,MAA2B+S,KAAA/S,MAG/B6K,KAAAxO,KAAYwT,EAGZhF,KAAAmI,WAAiB,EAMjBnI,KAAAiE,OAHAjE,KAAAgH,cAAqB,KAUrBhH,KAAAyE,GAAe,CA9CgC,CCH3B,SAAAgvF,KAEpBzzF,KAAAyE,EAAY,CAAC,CAFkB,CCSJ,SAAA0uD,KAI3BnzD,KAAA0zF,GAAkB,IAAID,GAMtBzzF,KAAA2zF,GAAsB3zF,IAVgB,CCJtC,SAAO4zF,GAAY5uF,GACjB,IAAIm1C,EAAc,IAAI9+C,IAkDtB,OA/CY,SAAAk/B,EAASv1B,GACnB,cAAeA,GACb,IAAK,YACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACH,OAAOA,EAET,QAQE,IANKA,GAKDA,EAAA4qD,QAAc5qD,EAAA4qD,OAAA/vD,aAA0BkuD,YAE1C,OAAO/oD,EAGT,GAAIm1C,EAAA/2C,IAAgB4B,GAClB,OAAO,KAGT,IAAMjE,EAAUiE,EAAAnF,aAAmB1N,MACnC,GAAI6S,EAAAnF,aAAmB9P,SAAWgR,EAChC,OAAO,KAGTo5C,EAAAx+C,IAAgBqJ,GAChB,IAESmjD,EAFLN,EAAM9mD,EAAU,GAAK,CAAC,EAE1B,IAASonD,KAAQnjD,EACf6iD,EAAIM,GAAQ5tB,EAAMv1B,EAAImjD,IAQxB,OAHIpnD,IACF8mD,EAAAr5D,OAAawW,EAAAxW,QAERq5D,EA3Ca,CA+CnBttB,CAAMv1B,EAnDS,CCGY,SAAA6uF,GAAS7uF,EAAGu1B,GAEhD,QAAiB,kBAANv1B,GAA+B,kBAANu1B,IAAkBse,MAAM7zC,KAAM6zC,MAAMte,KAGjEv1B,IAAMu1B,CALsC,CAetB,SAAAu5D,GAAS9uF,EAAOu1B,GAC7C,IAAI4f,EAAQn1C,EAAA9H,QAAcq9B,IACb,EAAT4f,GACFn1C,EAAA+/B,OAAaoV,EAAO,EAHgC,CAmChB,SAAA45C,GAAS/uF,EAAGu1B,EAAG4f,GAIrD,GAHKA,IACHA,EAAY05C,IAEV7uF,EAAAxW,QAAY+rC,EAAA/rC,OACd,OAAO,EAGL+rC,EAAOA,EAAA5gC,QACX,QAAAoH,EAAA,GAAAq5C,GAAAp1C,EAAAu1C,EAAmBv1C,IAAnBgR,QAAAokC,EAAA5mB,KAAAzyB,EAAA,CAAAizF,KAAAjzF,EAAAizF,MAAA55C,EAAAp1C,EAAAgR,OAAsB,CAEpB,GAFSjV,EAAAizF,KAAX55C,EAAA9mD,MACQ8mD,EAAM7f,EAAA05D,UAAe,SAAAjvF,GAAA,gBAACu1B,GAAU,OAAA4f,EAAUn1C,EAAAgvF,KAAMz5D,EAAhB,CAAX,EAAAx5B,KACf,GAARq5C,EACF,OAAO,EAIT7f,EAAK6f,GAAO7f,EAAKA,EAAA/rC,OAAc,GAC/B+rC,EAAApnC,KARoB,CAWtB,OAAsB,GAAfonC,EAAA/rC,MApByD,CCvDhE,SAAA0lG,KAEEl0F,KAAAyE,EAAmB,EAFP,CAWd,SAAA0vF,GAAAnvF,EAAOu1B,GACLv1B,EAAAP,EAAApR,KAAsBknC,EAAA,SAAkB,WACtCu5D,GAFc9uF,EAEeP,EAAkB81B,EADH,IAD9B,CCoBS,SAAAw4B,GAAS/tD,GACpCmuD,GAAA/2D,KAAgC4D,MAGhCA,KAAAo6C,GAAkB,EAGlBp6C,KAAA6nD,EAAyB,IAAIqsC,GAG7Bl0F,KAAAyE,EAAuB,IAAIpJ,IAG3B2E,KAAAgF,EAAwB,IAAI3J,IAG5B2E,KAAAu6B,EAA0Bv1B,GAAqB,IAhBQ,Eb6sBzD5L,EAAAs4F,GAAAh9F,WAAA0/F,GAAuC,KAQvCh7F,EAAAi7F,GAAsC,OAkBtC14F,IAAmC,SAASqJ,EAAKu1B,GA7D/C,IA8DAv6B,KA9DKo0F,KA8DLp0F,KA7DEo0F,GAAe,CAAC,EA6DlBp0F,KA5DEq0F,GAAc,EA4DhBr0F,KA1DMyE,GAEF,IADA,IAAI01C,EAyDRn6C,KAzDgByE,EAAA9F,MAAyB,KAC5BoC,EAAI,EAAGA,EAAIo5C,EAAA3rD,OAAcuS,IAAK,CACrC,IAAIq5C,EAAgBD,EAAMp5C,GAAN7D,QAAiB,KAEjC2qD,EAAQ,KACZ,GAAqB,GAAjBzN,EAAoB,CACtB,IAAA+N,EAAOhO,EAAMp5C,GAANu4E,UAAmB,EAAGl/B,GAC7ByN,EAAQ1N,EAAMp5C,GAANu4E,UAAmBl/B,EAAgB,EAFrB,MAItB+N,EAAOhO,EAAMp5C,GAEfonD,EAAO2pC,mBAAmB3pC,EAAAppD,QAAa,MAAO,MAC9C8oD,EAAQA,GAAS,GA6CvB7nD,KA5CMrE,IAASwsD,EAAM2pC,mBAAmBjqC,EAAA9oD,QAAc,MAAO,MAZlB,CAkE3C,OARAiB,KAAAyE,EAAqB,MAEjB01C,EAASn6C,KAAAo0F,GAAA3/F,eAA4BuQ,IAAQhF,KAAAo0F,GAAapvF,MAE5DhF,KAAAo0F,GAAapvF,GAAQm1C,EAAS,IAEhCA,EAAA9mD,KAAYknC,GACZv6B,KAAAq0F,KACOr0F,IAX+C,IAmBxDtG,SAAwC,WACtC,GAAIsG,KAAAyE,EACF,OAAOzE,KAAAyE,EAGT,IAAKzE,KAAAo0F,GACH,MAAO,GAGT,IAES75D,EAFLv1B,EAAK,GAET,IAASu1B,KAAOv6B,KAAAo0F,GAGd,IAFA,IAAIj6C,EAAa1rD,mBAAmB8rC,GAChCx5B,EAAMf,KAAAo0F,GAAa75D,GACd6f,EAAI,EAAGA,EAAIr5C,EAAAvS,OAAY4rD,IAAK,CACnC,IAAIyN,EAAQ1N,EAGG,KAAXp5C,EAAIq5C,KACNyN,GAAS,IAAMp5D,mBAAmBsS,EAAIq5C,KAExCp1C,EAAA3R,KAAQw0D,EAP2B,CAWvC,OAAO7nD,KAAAyE,EAAqBO,EAAAqsB,KAAQ,IAzBa,EAyCnDj4B,EAAA4pB,MAAqC,WACnC,IAAIhe,EAAK,IAAI0sF,GAEb,GADA1sF,EAAAP,EAAmBzE,KAAAyE,EACfzE,KAAAo0F,GAAc,CAChB,IACSj6C,EADL5f,EAAW,CAAC,EAChB,IAAS4f,KAAOn6C,KAAAo0F,GACd75D,EAAS4f,GAAOn6C,KAAAo0F,GAAaj6C,GAAbhtB,SAElBnoB,EAAAovF,GAAa75D,EACbv1B,EAAAqvF,GAAYr0F,KAAAq0F,EANI,CAQlB,OAAOrvF,CAXuC,EClzB9CusF,GAAA78F,UAAAk8D,EAAA,SAAU5rD,GAAgB,IAAAu1B,EAAA,KAGxBv6B,KAAA4xE,OAIA,IAAIz3B,GAAQ,EACRp5C,EAAY,KAkBhB,OAhBAf,KAAAyE,EAAsB,WACpBpL,EAAAi0C,aAAoBvsC,GACpBo5C,GAAQ,CAFkB,EAc5Bp5C,EAAY1H,EAAAy9B,YANG,WACTqjB,GACF5f,EAAAv1B,GAFiB,GAMkC,IAAjBA,GAE/BhF,IA1BiB,EAiC1BuxF,GAAA78F,UAAAk9E,KAAA,WACM5xE,KAAAyE,IACFzE,KAAAyE,IACAzE,KAAAyE,EAAsB,KAHnB,ECjDT2sD,EAAA,mBAAAV,IA2BEA,GAAAh8D,UAAA4/F,GAAA,WAIE,OAHAt0F,KAAA4xE,OACA5xE,KAAAgF,IAEOhF,IAJC,EAAV0wD,GAAAh8D,UnCgtBA6/F,QmChtBA7jC,GAAAh8D,UAAA4/F,GAeA5jC,GAAAh8D,UAAAk8D,EAAA,SAAU5rD,GAAS,IAAAu1B,EAAA,KAOjB,OANAv6B,KAAA4xE,OAEA5xE,KAAAyE,EAAe,IAAI8sF,IAAuB,WACxCh3D,EAAAv1B,GAD8C,IAAjC4rD,EAEF5rD,GAENhF,IAPU,EAAnB0wD,GAAAh8D,UnCisBA8/F,UmCjsBA9jC,GAAAh8D,UAAAk8D,EAiBAF,GAAAh8D,UAAA46F,GAAA,SAAUtqF,GAAS,IAAAu1B,EAAA,KAUjB,OATAv6B,KAAA4xE,OAEA5xE,KAAAyE,EAAe,IAAI8sF,IAAuB,WAGxCh3D,EAAA91B,EAAAmsD,EAAuB5rD,GACvBu1B,EAAAv1B,GAJ8C,IAAjC4rD,EAKF5rD,GAENhF,IAVU,EAAnB0wD,GAAAh8D,UnCgrBA+/F,UmChrBA/jC,GAAAh8D,UAAA46F,GAmBA5+B,GAAAh8D,UAAAk9E,KAAA,WACM5xE,KAAAyE,IACFzE,KAAAyE,EAAAmtE,OACA5xE,KAAAyE,EAAe,KAHZ,KAAP/P,UnC6pBAk9E,KmC7pBAlhB,GAAAh8D,UAAAk9E,KEzEFxgB,EAAA,mBAAA3W,IA2EAA,GAAA/lD,UAAAgF,SAAsC,WACpC,MAAO,oBAAsBivE,KAAAC,UAAe5oE,KAAM,KAAM,KADT,EAsBjDy6C,GrCqoBEi6C,SqCroB0B,CAQ1BC,YAAe,EAOfC,SAAY,GAQdn6C,GrC8mBEo6C,SqC9mB0B,CAE1BC,QAAW,EAGXC,KAAQ,EAGRC,MAAS,EAGTC,SAAY,EAGZC,UAAa,EAGbC,IAAO,EAGPC,OAAU,EAGVC,KAAQ,EAGRC,QAAW,MrColBXC,KqC5kBsB,CAKtBC,mBAAsB,IAYtBC,gBAAmB,KAQnBC,WAAc,KAQdC,QAAW,KAMXC,mBAAsB,KAMtBC,0BAA6B,KAM7BC,qBAAwB,KAMxBC,sBAAyB,KAMzBC,mBAAsB,KAMtBC,wBAA2B,KAI3BC,oBAAuB,IAGvBC,iBAAoB,KAQpBC,0BAA6B,KAG7BC,aAAgB,KAOhBC,YAAe,KAOfC,iBAAoB,KAKpBC,gBAAmB,KAQnBC,iCAAoC,KAOpCC,0BAA6B,IAO7BC,oBAAuB,KAMvBC,cAAiB,KAMjBC,6BAAgC,KAMhCC,wBAA2B,KAM3BC,2BAA8B,KAG9BC,4BAA+B,KAM/BC,0BAA6B,KAM7BC,iCAAoC,KAMpCC,6BAAgC,KAMhCC,0BAA6B,KAO7BC,8BAAiC,KAMjCC,yCAA4C,KAM5CC,8BAAiC,KAMjCC,8BAAiC,KAMjCC,6BAAgC,KAQhCC,YAAe,KASfC,qBAAwB,KAKxBC,mBAAsB,KAatBC,8BAAiC,IAGjCC,iBAAoB,KAMpBC,qBAAwB,KAGxBC,0BAA6B,KAG7BC,kBAAqB,KAKrBC,uBAA0B,KAG1BC,2BAA8B,KAG9BC,uBAA0B,KAM1BC,0BAA6B,KAG7BC,oCAAuC,KAGvCC,yBAA4B,KAO5BC,kBAAqB,KAiBrBC,2BAA8B,KAQ9BC,WAAc,KAKdC,4BAA+B,KAM/BC,gBAAmB,KAKnBC,+BAAkC,KAOlCC,iCAAoC,KAQpCC,uCAA0C,KAM1CC,8BAAiC,KAQjCC,iCAAoC,KAOpCC,+BAAkC,KAOlCC,yBAA4B,KAM5BC,2BAA8B,KAM9BC,6BAAgC,KAKhCC,+BAAkC,KAKlCC,uBAA0B,KAO1BC,uCAA0C,KAe1CC,+BAAkC,KAKlCC,wCAA2C,KAK3CC,qCAAwC,KAiBxCC,uBAA0B,KAO1BC,0BAA6B,IAc7BC,wCAA2C,KAO3CC,qBAAwB,KAQxBC,0BAA6B,KAO7BC,2BAA8B,KAM9BC,yBAA4B,KAS5BC,mCAAsC,KAOtCC,uBAA0B,KAO1BC,0BAA6B,KAQ7BC,mCAAsC,KAStCC,wBAA2B,KAK3BC,wBAA2B,KAM3BC,QAAW,KAOXC,iBAAoB,IAMpBC,kBAAqB,KAOrBC,iBAAoB,KASpBC,qBAAwB,IAKxBC,kBAAqB,KAKrBC,gBAAmB,KAOnBC,sBAAyB,KAMzBC,sBAAyB,KAMzBC,0BAA6B,KAO7BC,8BAAiC,KAMjCC,6BAAgC,KAOhCC,sBAAyB,IAUzBC,iBAAoB,KAMpBC,6BAAgC,KAMhCC,yBAA4B,KAM5BC,sBAAyB,KAOzBC,0BAA6B,KAM7BC,0BAA6B,KAQ7BC,yBAA4B,KAO5BC,+BAAkC,KASlCC,gCAAmC,KAKnCC,cAAiB,KAKjBC,qBAAwB,MC3zB1BhrC,GAAAt8D,UAAAorB,QAA6C,WAAiB,EAI9DkxC,GAAAt8D,UAAAuzC,OAA4C,WAAkB,EChC9DmpB,EAAA,gCAAA9rC,IA+BEA,GvC0sBA22E,OuC1sBA9I,GAWA7tE,GvC+rBApH,QuC/rBAk1E,GAkBA9tE,GvC6qBA42E,UuC7qBA7I,GAcA/tE,GvC+pBA62E,auC/pBA7I,GAYAhuE,GAAA5wB,UAAA0pB,MAAA,WAEE,OADApe,KAAAyE,GAAgB,EACTzE,KAAAkzF,IAFD,EAAR5tE,GAAA5wB,UvCmpBA0pB,MuCnpBAkH,GAAA5wB,UAAA0pB,MAYAkH,GvCuoBAq3D,IuCvoBA4W,GAUAjuE,GAAA5wB,UAAA,iBAAQsQ,GAEN,OADAhF,KAAAw+E,QAAA9+D,MAAkB,WAAW,OAAA1a,GAAQ,EAAR,IAAe,WAAO,OAAAA,GAAQ,EAAR,IAC5ChF,IAFQ,EAAjBslB,GAAA5wB,UvC6nBA,QuC7nBA4wB,GAAA5wB,UAAA,WAuBAA,UAAAo8D,EAAA,SAAM9rD,EAAWu1B,GAIH,SAAA4f,IAKV,OAJAC,EAAAnS,OAAkB,IAAIwS,GFrBd,EA4BF,EA4jBW,OE/jBV15C,EAAAqd,OALS,CAJM,IAAArd,EAAA,KACpBq5C,EAAa,IAAI4W,GAgDrB,OArCAhxD,KAAAw+E,QAAA9+D,MAAkB,SAAC6a,GACbx5B,EAAA0D,EAIF21C,EAAAnS,OAAkB,IAAIwS,GFjChB,EA4BF,EA4jBW,OEhjBZz1C,EAQLm1C,EAAQq5C,GACJxuF,EAAWu1B,EAAO6f,GAPpBA,EAAAt6B,QAAmBya,EAdM,IAsB1B,SAACv1B,GAGGu1B,EAQL4f,EAAQq5C,GACJj5D,EAASv1B,EAAGo1C,GAPdA,EAAAnS,OAAkBjjC,EALZ,IAeH,IAAIsgB,GACP80B,GAGA,WAAM,OAAAD,GAAA,GArDc,EAA1B70B,GAAA5wB,UvCsmBA0nG,MuCtmBA92E,GAAA5wB,UAAAo8D,EC9EFH,GAAAj8D,UAAA2S,eAAgD,WAC1CrH,KAAAgI,aACFhI,KAAAkH,kBAAwB,EAF+B,EAY3DypD,GAAAj8D,UAAA2nG,yBAA0D,WACxDr8F,KAAAyE,GAAe,CADoD,EAUrEksD,GAAAj8D,UAAA4S,gBAAiD,WAAY,GCrE7DlO,EAAAq6F,GAAA/+F,WAAArB,KAAqC,SAAS2R,EAAKu1B,GAC7Cv6B,KAAAyE,EAAAhQ,eAAyBuQ,GAC3BhF,KAAAyE,EAAUO,GAAV3R,KAAoBknC,GAEpBv6B,KAAAyE,EAAUO,GAAO,CAACu1B,EAJoC,EAc1DnhC,EAAA2G,IAAoC,SAASiF,GAI3C,OAHIA,EAAOhF,KAAAyE,EAAUO,IAGPA,EAAArL,QAAe,IAJmB,EAYlDP,EAAAkjG,OAAuC,WACrC,IACS/hE,EADLv1B,EAAO,GACX,IAASu1B,KAAOv6B,KAAAyE,EACdO,EAAA3R,KAAA8oB,MAAgBnX,EAAMhF,KAAAyE,EAAU81B,IAElC,OAAOv1B,CALyC,EAclD5L,EAAA0sF,OAAuC,SAAS9gF,EAAKu1B,GACnD,IAAI4f,EAAOn6C,KAAAyE,EAAUO,GACrB,GAAKm1C,EACL,IAAK,IAAIp5C,EAAI,EAAGA,EAAIo5C,EAAA3rD,SAAeuS,EAC7Bo5C,EAAKp5C,IAAMw5B,IACb4f,EAAApV,OAAYhkC,EAAG,KACbA,EANoD,EAuB5D3H,EAAAilB,QAAwC,SAASrZ,GAC/C,IAAK,IAAIu1B,KAAOv6B,KAAAyE,EACdO,EAASu1B,EAAKv6B,KAAAyE,EAAU81B,GAF+B,ECjC3D44B,GAAAz+D,UAAA4Q,iBACI,SAASN,EAAMu1B,GACjBv6B,KAAA0zF,GAAArgG,KAAqB2R,EAAMu1B,EADS,EAetC44B,GAAAz+D,UAAA6Q,oBACI,SAASP,EAAMu1B,GACjBv6B,KAAA0zF,GAAA5N,OAAuB9gF,EAAMu1B,EADO,EAatC44B,GAAAz+D,UAAAwhC,cAAqD,SAASlxB,GAU5D,IAJA,IAAMu1B,EAAYv6B,KAAA0zF,GAAA3zF,IAAoBiF,EAAAxT,OAAe,GAI5C2oD,EAAI,EAAGA,EAAI5f,EAAA/rC,SAAoB2rD,EAAG,CAEzCn1C,EAAAf,OAAejE,KAAA2zF,GACf3uF,EAAAgC,cAAsBhH,KAAA2zF,GAEtB,IAAI5yF,EAAWw5B,EAAU4f,GACzB,IAGMp5C,EAAAw7F,YACFx7F,EAAAw7F,YAAqBv3F,GAErBjE,EAAA3E,KAAc4D,KAAMgF,EANpB,CAQF,MAAOo1C,GAAY,CASrB,GAAIp1C,EAAAP,EACF,KAxBuC,CA4B3C,OAAOO,EAAAkC,gBAtC4D,EGlDnEgtF,GAAAx/F,UAAA00B,QAAA,WACE,IAAIpkB,EAAU,GAWd,OAVAhF,KAAAyE,EAAA4Z,SAAyB,SAACkc,GAGxBA,EAAAikD,QAAA,OAAiB,WAAO,IAGxBx5E,EAAA3R,KAAaknC,EAAAnc,QANkB,IASjCpe,KAAAyE,EAAmB,GACZujC,QAAA20C,IAAY33E,EAZX,ECgCZsrF,EAAcv9B,GAA4BI,IAnB1C/B,EAAA,6BAAA2B,IA4BA,IAAAypC,GAAyC,CACvCvH,SAAY,EACZwH,QAAW,EACXC,QAAW,EACXC,IAAO,EACPC,OAAU,GALZ7pC,G9CgrBE8pC,Y8ChrBFL,GAiBAzpC,G9C+pBE+pC,e8C/pB0C,CAC1CC,SAAY,EACZC,UAAa,EACbC,YAAe,GAsBjB,IAAAC,GAAsC,CAAC,EAgCnC,SAAAC,GAASn4F,EAAQu1B,EAAQ4f,GAG3BA,EACIA,GA1DW,EA2Df,IAAIp5C,EAAWm8F,GAAoCl4F,KAC9CjE,GAAYo5C,GAAYp5C,EAAAk+C,YAC3Bi+C,GAAoCl4F,GAAU,CAC5Ci6C,SAAU9E,EACVijD,GAAQ7iE,GATyB,UAiHE8iE,GAASr4F,EAAMu1B,GACtD,MAAO,CACL+iE,KAAMt4F,EACNpS,OAAQ,MACRkO,KAAM,KACNw0E,QAAS,CAAC,EACVioB,2BAA2B,EAC3BC,gBAAiBjjE,EACjBkjE,mBAAoB,KAR6C,CAyLxB,SAAAC,GAAA14F,EACzCu1B,EAAM4f,EAASp5C,EAASq5C,EAAOyN,EAAWM,GAC5C,IAAIsI,EAAM,IAAI0gC,EAASh3C,EAAAmjD,KAAaljD,IAChCgI,EAASqO,Eb1JN4gC,Ga4JHj2C,GAAc,EACbgH,IASHgvC,EAAA3gC,EAHArO,GAJAA,EA6IKn2C,SAAA0xF,UAzIIhkG,MAAa,GAAI,IAI1BwgD,EAAAmjD,KAAaljD,GAASqW,EAAA/2D,YAIxB,IAgBIo5D,EAhBA3Q,GADAC,EAAS86C,GAAoC96C,IAC3BA,EAAAg7C,GAAgB,KACtC,OAAKj7C,EAaDmxC,GAA2CR,GAAA/xF,IAG3B+vD,GAAuB,WACzC,OArCgE9rD,EAqC5Do1C,EACKg5C,MAGTtgC,EAAc5qD,KAAA/S,MAGPgtD,EAAOhI,EAAAmjD,KAAaljD,GACtBD,EACA5f,GAEA,SAAC4f,EAAMp5C,EAAOq5C,GAhD6Cp1C,EAiDrDu1B,GApaF,GAoa6BA,IAjD0Bv1B,EAkDvDu1B,EAAwB4f,EAAMp5C,GAC9Bq6C,GAAc,EACd+M,EAyHT1jD,EAzHuC21C,EAJE,IAZM,IAA7B0W,GAmBX,SAAC9rD,GASR,YARuB,GAAnBA,EAAA44F,SACF54F,EAAA44F,OAAkB11F,KAAA/S,MAAa29D,GAEJ,CAC3BikB,SAAU/xE,EACV64F,GAAaziD,EANM,IAUpB,SAACqV,GACF,GAAIA,GT2Ne,MS3NNA,EAAApiE,KAEX,MAAMoiE,EAGR,GAvEgEzrD,EAuE5Do1C,EACF,OAAOg5C,KAGT,GAAI3iC,GT7YS,GS6YAA,EAAAsiC,SAUX,OArF8D/tF,EAgF9DkxB,cADY,IAAIy6B,GAAqB,QAAS,CAACv0C,MAD3Bq0C,aAAiBhW,GAAmBgW,EAAQ,QAKhErW,GAASA,EAAQ,GAAKD,EAAAmjD,KAAA9uG,OAEfkvG,GArFuD14F,EAqF5Cu1B,EAAM4f,EAASp5C,EAASq5C,EADSqW,EAEjCtI,GAKpB,MAAMsI,GAAS5I,CA1BH,IA5CLsrC,GACH,IAAI14C,GTjVE,EAUD,EAqCW,ISsSZgW,GA1BwD,CAoKlE,SAAAqtC,KAEE99F,KAAAyE,EAAoB,CAFR,CA6Cd,SAAAkvF,GAAY3uF,EAASu1B,EAAS4f,GAC5B70B,GAAAlpB,KAAA,KAAM4I,EAASu1B,GAGfv6B,KAAAgF,EAAuBm1C,CAJ2B,CA7ftD4Y,G9CumBEgrC,e8CvmBFZ,GAsBApqC,G9CilBEirC,iB8CjlB4C,SAASh5F,UAC9Ck4F,GAAoCl4F,EADkB,EAY/D+tD,GAAAr+D,UAAAupG,GAA6D,SAASj5F,GACpEhF,KAAAyE,EAAA9I,IAAyBqJ,EADmD,EAA9E+tD,GAAAr+D,U9CqkBEwpG,sB8CrkBFnrC,GAAAr+D,UAAAupG,MAWAvpG,UAAAypG,GACI,SAASn5F,GACXhF,KAAAyE,EAAA,OAA4BO,EADT,EADrB+tD,GAAAr+D,U9C0jBE0pG,wB8C1jBFrrC,GAAAr+D,UAAAypG,GAWAprC,GAAAr+D,UAAA2pG,GAA8D,WAC5Dr+F,KAAAyE,EAAAgmD,OADuE,EAAzEsI,GAAAr+D,U9C+iBE4pG,uB8C/iBFvrC,GAAAr+D,UAAA2pG,GAYAtrC,GAAAr+D,UAAA6pG,GAA8D,SAASv5F,GACrEhF,KAAAgF,EAAArJ,IAA0BqJ,EADmD,EAA/E+tD,GAAAr+D,U9CmiBE8pG,uB8CniBFzrC,GAAAr+D,UAAA6pG,GAWAxrC,GAAAr+D,UAAA+pG,GACI,SAASz5F,GACXhF,KAAAgF,EAAA,OAA6BA,EADV,EADrB+tD,GAAAr+D,U9CwhBEgqG,yB8CxhBF3rC,GAAAr+D,UAAA+pG,GAWA1rC,GAAAr+D,UAAAiqG,GAA+D,WAC7D3+F,KAAAgF,EAAAylD,OADwE,EAA1EsI,GAAAr+D,U9C6gBEkqG,wB8C7gBF7rC,GAAAr+D,UAAAiqG,GAyCA5rC,GAAAr+D,UAAA00B,QAA+C,WAI7C,OAHAppB,KAAAo6C,GAAkB,EAClBp6C,KAAAyE,EAAAgmD,QACAzqD,KAAAgF,EAAAylD,QACOzqD,KAAA6nD,EAAAz+B,SAJiD,EAA1D2pC,GAAAr+D,U9CoeE00B,Q8CpeF2pC,GAAAr+D,UAAA00B,WAgBA10B,UAAAmqG,QAA+C,SAAS75F,EAAMu1B,GAAS,IAAA4f,EAAA,KAE/Dp5C,EACF,IAAI+8F,GAGR,GAAI99F,KAAAo6C,EAAiB,CACnB,IAAMA,EAAIpS,QAAAC,OAAe,IAAIwS,GTzKnB,EA4BF,EA4jBW,OSxanB,OADAL,EAAA,OAAQ,WAAO,IACR,IAAIu5C,GACPv5C,GAAG,WAAM,OAAApS,QAAAloB,SAAA,GAAmB/e,EATb,CAqBrBw5B,EAAA3nC,OAAiB2nC,EAAA3nC,QAAkB,MACnC2nC,EAAA+6C,QAAkB/6C,EAAA+6C,SAAmB,CAAC,EACtC/6C,EAAAijE,gBAA0BjjE,EAAAijE,gBACtB5J,GAAwBr5D,EAAAijE,iBVnMrB,CACL/K,YAAa,EACbC,UAAW,IACXC,cAAe,EACfC,WAAY,GACZC,QAAS,GUgMXt4D,EAAA+iE,KAAe1J,GAAwBr5D,EAAA+iE,MAGnCljD,WA2DgDp1C,EAASu1B,EAAM4f,GAGnE,IAFA,IAAIp5C,EAAkBsyF,QAAwC,GAE9Dj5C,EAAA,GAAAyN,GAAA7iD,EAAAu1C,EAA4Bv1C,EAAAP,IAA5BuR,QAAA6xC,EAAAr0B,KAAA4mB,EAAA,CAAA0kD,GAAA1kD,EAAA0kD,IAAAj3C,EAAA7iD,EAAAgR,OAAWokC,EAAA0kD,GAAXj3C,EAAAv0D,MAEEyN,EACIA,EAAA+vD,EAAsB,SAAA9rD,GAAA,kBAAM,OAAAA,EAAA85F,GAAcvkE,EAAM4f,EAApB,CAAN,EAAAC,IAK5B,OAAOr5C,EAAA+vD,OAAsB,GAAW,SAAC9rD,GACvC,GAAIA,GT4Ue,MS5UVA,EAAA3W,KAEP,MAAM2W,EAGR,MAAM,IAAIy1C,GTjRA,EAUD,EAmFa,KSuL0Bz1C,EATH,GAX6B,CA3D/C+5F,CAAA/+F,KAAoBgF,EAAMu1B,GACvD,IAAIstB,EAAmBzN,EAAA0W,GACnB,WAAM,OAgGH4sC,GAhGGvjD,EAA2Bn1C,EAAMu1B,EA6F7B,IAAIi4D,GA7FyBj4D,EA8FvCijE,iBAAyC,GACjC,EACqD,KAhGbz8F,EAA1C,IACNonD,EAA0BN,EAAAiJ,GAC1B,SAACv2B,GACG,OA4NN,SAAAv1B,EAASu1B,EAAM4f,GAEjB,IADA,IAAIp5C,EAAkBsyF,QAAwC,GAC9Dj5C,GAAAp1C,EAAAu1C,EAA6Bv1C,EAAAA,IAA7BgR,QAAAokC,EAAA5mB,KAAA4mB,EAAAp1C,EAAAgR,OAEEjV,EAAkBA,EAAA+vD,EAFpB1W,EAAA9mD,MAGI41B,KAAoB,KAAMqR,EAAM4f,EAAA48B,WAGpC,OAAOh2E,EAAA+vD,GAAsB,WAC3B,OAAO3W,CAD0B,IAEhC,SAACn1C,GAIF,GAAIA,GToKe,MSpKVA,EAAA3W,KAEP,MAAM2W,EAIR,IAAIu1B,ET1bM,ES+bV,MAJIv1B,aAAay1C,KACflgB,EAAWv1B,EAAA+tF,UAGP,IAAIt4C,GACNlgB,ETtbK,EAyFc,KS+V0Bv1B,EAlBzC,GAV+B,CA5NjCopF,CAAAj0C,EAAqBn1C,EAAMu1B,EAA3B,IAGJk2B,EAAyBvoD,KAAA/S,MACzBitD,EAAkB,EACtBhI,EAAAokC,QAAA9+D,MAAoC,WAClC0iC,EAAkBl6C,KAAA/S,MAAas7D,CADS,IAEvC,WAAO,IAEV,IAAIrV,EAA0B,EAmC9B,OAlCAyM,EAAA22B,QAAA9+D,MAA8B,WAC5B07B,EAA0BlzC,KAAA/S,KADQ,IAEjC,WAAO,IAEJilD,EAAY+N,EAAA2I,GAA8B,SAACv2B,GAC/C,IAAMx5B,EAAmBmH,KAAA/S,MAAaimD,EAChChB,EAAW7f,EAAAw8C,SASjB,OARA38B,EAAAwjD,QAAmBx7C,EACnBhI,EAAAwjD,QAAmB78F,EACdw5B,EAAAsjE,KACD1jD,EAAA5f,GACC6f,EAAA4kD,WAvRI,GAwRLh6F,GACFm1C,EAAA5f,EAAwB6f,EAAAwjD,OAAiBxjD,EAAAznD,KAAA28D,YAEpClV,CAXmE,IAYzE,SAACp1C,GAQF,MALIA,IAEFA,EAAA+tF,STzOQ,GS4OJ/tF,CARE,IAcJo1C,EACF,IAAIu5C,GAA0Cv5C,EAAAokC,QAC9CpkC,EAAA84C,GAAoBnyF,GACxBozF,GAAAn0F,KAAA6nD,EAA8BzN,GACvBA,CApF8D,EAAvE2Y,GAAAr+D,U9CodEmqG,Q8CpdF9rC,GAAAr+D,UAAAmqG,QAyTA9rC,G9C2JEksC,uB8C3JFnB,GAiCI,IAAAoB,GAAAvL,GCnlBF,GAFAuL,GAAAxqG,UAAsB45F,EDqlBNhpE,GCrlB2B5wB,cAC1BA,UAAAmL,YAAkCq/F,GAC/CzQ,EAGmBA,EACNyQ,GD+kBD55E,SC3kBd,IAAK,IAAI+uE,MD2kBK/uE,GC1kBZ,GAAS,aAAL+uE,GAIJ,GAAItkG,OAAA09F,iBAAyB,CAC3B,IAAI0R,GAAapvG,OAAAsO,yBDqkBPinB,GCrkBmD+uE,IACzD8K,IACFpvG,OAAA6N,eAAsBshG,GAAW7K,GAAG8K,GAHX,MAO3BD,GAAU7K,ID+jBA/uE,GC/jBgB+uE,ICnDT,SAAA+K,KAAA,CCKvB,SAAAxkD,KAKE56C,KAAAyE,EAAmB,IAAIgvF,EALX,UAqId4L,GAAYr6F,EAAQu1B,EAAM4f,EAAUp5C,GAElCf,KAAAiE,OAAce,EAGdhF,KAAAxO,KAAY+oC,EAGZv6B,KAAAme,SAAgBg8B,EAGhBn6C,KAAAyE,EA+BF,SAAuBO,EAAQu1B,GAC7B,QAAa,GAATA,EACF,OAAO,EACF,GAAoB,kBAATA,EAChB,OAAOA,EAMP,IAAM4f,EAAU,IAAI9+C,IAAI,CAAC,UAAW,YAQpC,OAPatL,OAAAyhB,KAAY+oB,GAAZqiD,QAA0B,SAAC53E,GAAM,OAACm1C,EAAA/2C,IAAY4B,EAAb,IAwBlD,SAA0BA,GAExB,IAAIu1B,EAAW+kE,GACf,QAAgB,GAAZ/kE,EAAuB,CACzBA,GAAW,EACX,IACE,IAAM4f,EAAU,CAAC,EAIXp5C,EAAO,CACXhB,IAAK,WAEH,OADAw6B,GAAW,GACJ,CAFE,GAKbxqC,OAAA6N,eAAsBu8C,EAAS,UAAWp5C,GAC1ChR,OAAA6N,eAAsBu8C,EAAS,UAAWp5C,GAEpCA,EAAO,WAAO,EACpBiE,EAAAM,iBAAwB,OAAQvE,EAAMo5C,GACtCn1C,EAAAO,oBAA2B,OAAQxE,EAAMo5C,EAhBvC,CAiBF,MAAOC,GACP7f,GAAW,CADD,CAGZ+kE,GAAmD/kE,CAtB1B,CAwB3B,OAAOA,IAAY,CA3Ba,CAlB1BglE,CAAoDv6F,GAE/Cu1B,EAEAA,EAAAwb,UAAoB,CArBK,CA9BhCypD,CAAiDx6F,EAAQjE,GAE7Df,KAAAiE,OAAAqB,iBAA6Bi1B,EAAM4f,EAAUn6C,KAAAyE,EAdF,CFlF7Cy6F,GAAA3O,GD0jBgBjrE,GC1jBQ5wB,UDyjB1Bq+D,G9C2HE0sC,e8C3HF9L,GP5gBSA,GvCuoBPhX,IuCvoBO4W,GAxBAI,GvC+pBPwI,auC/pBO7I,GAdAK,GvC6qBPuI,UuC7qBO7I,GAlBAM,GvC+rBPz1E,QuC/rBOk1E,GAXAO,GvC0sBPsI,OuC1sBO9I,GSlCT/hC,EAAA,yBAAAguC,IAMEA,GAAA1qG,UAAAgrG,QAAA,WAAW,ECFbtuC,EAAA,0BAAAxW,IAeEA,GAAAlmD,UAAAgrG,QAAA,WACE1/F,KAAA4wF,KACA5wF,KAAAyE,EAAmB,IAFX,EAAVm2C,GAAAlmD,UjDytBAgrG,QiDztBA9kD,GAAAlmD,UAAAgrG,QAiBA9kD,GAAAlmD,UAAAuuD,EAAA,SAAOj+C,EAAQu1B,EAAM4f,EAAUp5C,GACxBf,KAAAyE,IAICO,EACF,IAAIq6F,GAAiCr6F,EAAQu1B,EAAM4f,EAAUp5C,GACjEf,KAAAyE,EAAApR,KAAsBknC,EAAMv1B,GAPU,EAAxC41C,GAAAlmD,UjDwsBAirG,OiDxsBA/kD,GAAAlmD,UAAAuuD,EAuBArI,GAAAlmD,UAAAs5F,GAAA,SAAWhpF,EAAQu1B,EAAM4f,EAAUp5C,GAAS,IAAA8mD,EAAA,KAQ1C7nD,KAAAijD,EAAYj+C,EAAQu1B,GANP,SAAA6f,EAACr5C,GAEZ8mD,EAAA+3C,GAAc56F,EAAQu1B,EAAM6f,GAE5BD,EAASp5C,EAJa,GAMQA,EARU,EAA5C65C,GAAAlmD,UjDirBAmrG,WiDjrBAjlD,GAAAlmD,UAAAs5F,MAmBAt5F,UAAAkrG,GAAA,SAAS56F,EAAQu1B,EAAM4f,GACrB,GAAKn6C,KAAAyE,EAML,IAFA,IAAM1D,EAAOf,KAAAyE,EAAA1E,IAAqBw6B,IAAS,GAE3C6f,GAAAr5C,EAAAw5C,EAAsBx5C,IAAtBiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,QAAWokC,EAAXA,EAAA9mD,OACM2Q,QAAkBe,GAChBm1C,GAAYC,EAAAj8B,UAAqBg8B,IACnCC,EAAAwlD,KACA5/F,KAAAyE,EAAAqhF,OAAwBvrD,EAAM6f,GAXL,EAAjCQ,GAAAlmD,UjD8pBAorG,SiD9pBAllD,GAAAlmD,UAAAkrG,GAsBAhlD,GAAAlmD,UAAAk8F,GAAA,WACE,GAAK5wF,KAAAyE,EAAL,CAMA,IAFA,IAAMO,EAAOhF,KAAAyE,EAAA63F,SAEb/hE,GAAAv1B,EAAAu1C,EAAsBv1C,IAAtBgR,QAAAukB,EAAA/G,KAAA+G,EAAAv1B,EAAAgR,OAAAukB,EAAAjnC,MACEssG,KAGF5/F,KAAAyE,ER9CFA,EAAY,CAAC,CQoCX,CADU,EAAZm2C,GAAAlmD,UjDwoBAqrG,UiDxoBAnlD,GAAAlmD,UAAAk8F,GA6DAyO,GAAA3qG,UAAAkrG,GAAA,WAEE5/F,KAAAiE,OAAAsB,oBAAgCvF,KAAAxO,KAAWwO,KAAAme,SAAene,KAAAyE,GAG1DzE,KAAAme,SADAne,KAAAiE,OAAc,KAEdjE,KAAAyE,GAAe,CANN,EAAX46F,GAAA3qG,UjD2kBAorG,SiD3kBAT,GAAA3qG,UAAAkrG,GAsFF,IAAAN,QAAmD,ECvOjD,SAAOU,GAAMh7F,EAAUu1B,GACrB,IAD2B,IAC3B4f,EAAAI,EAAgBv1C,GAAhBjE,EAAAo5C,EAAAnkC,QAAAjV,EAAAyyB,KAAAzyB,EAAAo5C,EAAAnkC,OACE,IAAKukB,EADPx5B,EAAAzN,OACkB,OAAO,EAEzB,OAAO,CAJoB,CCbH,SAAA2sG,GAASj7F,GACnC,IAAMu1B,EAAM,IAAIt/B,IAKhB,OAJAlL,OAAAyhB,KAAYxM,GAAZqZ,SAA4B,SAAC87B,GAC3B5f,EAAA18B,IAAQs8C,EAAKn1C,EAAOm1C,GADe,IAI9B5f,CANoC,CAed,SAAA2lE,GAASl7F,GACtC,IAAMu1B,EAAM,CAAC,EAKb,OAJAv1B,EAAAqZ,SAAY,SAACrZ,EAAOjE,GAClBw5B,EAAIx5B,GAAOiE,CADe,IAIrBu1B,CANoC,CCd3C,SAAO4lE,GAAYn7F,EAAUu1B,GAC3B,IAAI4f,EAAen1C,EAInB,OAHIu1B,IACF4f,GAAgB,aAAe5f,EAAS,KAEnC4f,CAL4B,CAwDrC,SAAOimD,GAAep7F,GAGpB,IAAMu1B,GAFAv1B,EAAQA,EAAArG,MAAkB,MAEb,GAMnB,OAJAqG,EAAA7R,MAIO,CAAConC,EAHQv1B,EAAAqsB,KAAW,KANM,CAuBrC,IAAAgvE,IAAiD,IAAIplG,KAAJ4C,IAC1C,SAAU,UADgCA,IAE1C,YAAa,aAF6BA,IAG1C,YAAa,WAH6BA,IAI1C,QAAS,SAJiCA,IAK1C,SAAU,UALgCA,IAM1C,gBAAiB,YClFtB,SAAOyiG,KASL,SALKjnG,EAAAunF,cAKAA,YAAAC,gBATsB,CAsB7B,SAAO0f,GAAkBv7F,GAEvB,MAAsC,KAkHlCsvF,KAICkM,KACHA,GAAiC,IAAI9vC,IAAiB,WACpD4jC,GAA+B,IAD2B,MAK9DA,GACI1zF,SAAAgkC,cAAuB,UAAYhkC,SAAAgkC,cAAuB,YAG5D0vD,GACI1zF,SAAAwE,cAAuB,UAG7Bo7F,GAAA5vC,EAAwD,GACjD0jC,KArIAnT,YAAkBn8E,EAFQ,CAkGnC,SAAOy7F,GAAmBz7F,GAExB,OADkB6gD,UAAAC,WAAuB,IAClCjnD,SAAmBmG,EAFG,CA0CjC,IAAAw7F,GAA4C,KAG5ClM,GAA0C,KCjKR,SAAAoM,GAAS17F,GACzC,IAAKA,EAAM,MAAO,GAIF,MAFZA,EAAQ,IAAI0pD,WAAW1pD,IAEjB,IAA0B,KAAZA,EAAM,IAA0B,KAAZA,EAAM,KAChDA,EAAQA,EAAA2qD,SAAe,IAIrB3qD,EAAO27F,GAAoC37F,GAK3CA,EAAUomF,OAAOpmF,GAIrB,IACE,OAAO8sF,mBAAmB9sF,EADxB,CAEF,MAAOu1B,GACP,MAAM,IAAIkgB,GjBqFA,EAaJ,EAoHQ,KiBvNJ,CArBmC,UAyCdmmD,GAAS57F,EAAMu1B,EAAc4f,GAC9D,IAAKn1C,EAAM,MAAO,GAElB,IAAKm1C,GAAkC,GAAvBn1C,EAAAsqD,WAAkB,EAEhC,MAAM,IAAI7U,GjB6DA,EAaJ,EAoHQ,MiBvLhB,GAAIz1C,aAAgB+oD,YAClB,IAAAhtD,EAASiE,OAKLm1C,EAAO,IAAIuU,WAAW1pD,EAAAsqD,aAC1BzxD,IAAS,IAAI6wD,WAAW1pD,IACxBjE,EAASo5C,EAAAyV,OAIP5qD,EAASrO,KAAAi0D,MAAW5lD,EAAAsqD,WAAkB,GACtCnV,EAAM,IAAI0mD,YAAY77F,GACtBjE,EAAW,IAAIitD,SAASjtD,GAC5B,IAAK,IAAIq5C,EAAI,EAAGA,EAAIp1C,EAAQo1C,IAC1BD,EAAIC,GAAKr5C,EAAA0tD,UAAuB,EAAJrU,EAAO7f,GAErC,OAAOomE,GAAoCxmD,EA9B4B,UA2C5B2mD,GAAS97F,GAGpD,IAAIu1B,EAAQ,IAAIm0B,WAAW1pD,GAC3B,GAAgB,KAAZu1B,EAAM,IAA0B,KAAZA,EAAM,IAA0B,KAAZA,EAAM,GAChD,OAAOmmE,GAAqBnmE,GACvB,GAAgB,KAAZA,EAAM,IAA0B,KAAZA,EAAM,GACnC,OAAOqmE,GAAsBrmE,EAAAo1B,SAAe,IAAI,GAC3C,GAAgB,KAAZp1B,EAAM,IAA0B,KAAZA,EAAM,GACnC,OAAOqmE,GAAsBrmE,EAAAo1B,SAAe,IAAI,GAGlD,IAAIxV,EAAW,SAASn1C,EAAKu1B,GAE3B,OAAOv1B,EAAAsqD,YAAkB/0B,GAAgB,IAAVv1B,EAAIu1B,IAAwB,KAAVv1B,EAAIu1B,EAFvB,EAAjBrR,KAGR,KAAMqR,GAGb,GAAgB,GAAZA,EAAM,IAAuB,GAAZA,EAAM,GACzB,OAAOqmE,GAAsB57F,GAAM,GAC9B,GAAgB,GAAZu1B,EAAM,IAAuB,GAAZA,EAAM,GAChC,OAAOqmE,GAAsB57F,GAAM,GAC9B,GAAIm1C,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,GAC3D,OAAOumD,GAAqB17F,GAG9B,MAAM,IAAIy1C,GjBHE,EAaJ,EAiHqB,KiBrJ6B,UAwC5BsmD,GAAS/7F,GAMnCA,EAAUvW,mBAAmBuW,GAM7BA,EAAOg8F,SAASh8F,GAGpB,IADA,IAAIu1B,EAAS,IAAIm0B,WAAW1pD,EAAAxW,QACnB2rD,EAAI,EAAGA,EAAIn1C,EAAAxW,SAAe2rD,EACjC5f,EAAO4f,GAAKn1C,EAAA7D,WAAgBg5C,GAE9B,OAAO5f,EAAAq1B,MAlBqC,CA8Bb,SAAA8jC,GAAS1uF,EAAKu1B,GAG7C,IAFA,IAAM4f,EAAS,IAAIuU,WAAwB,EAAb1pD,EAAAxW,QACxBuS,EAAO,IAAIitD,SAAS7T,EAAAyV,QACjBxV,EAAI,EAAGA,EAAIp1C,EAAAxW,SAAc4rD,EAEhCr5C,EAAAkgG,UAAmC,EAAJ7mD,EADjBp1C,EAAA7D,WAAei5C,GACgB7f,GAE/C,OAAO4f,EAAAyV,MAPoD,UAqBvB+wC,GAAS37F,GAG7C,IAAKk8F,GAkBH,IAjBA,IAAM3mE,EAAoB,SAACv1B,GACzB,IAME,OAFY0qF,EAHG,IAAIhhC,WAAW1pD,KAKvB,CANL,CAOF,MAAO6iD,GACP,OAAO,CADO,CARkB,EAiBpC1N,EAAA,CAAS7yB,KAAO,OAAkB,EAAP6yB,EAAA7yB,MAA3B6yB,EAAA,CAAA7yB,KAAA6yB,EAAA7yB,OAAqCA,MAAQ,EAC3C,GAAIiT,EAAkB4f,EAAA7yB,MAAO,CAC3B45E,GAA2C,SAAAl8F,GAAA,gBAACu1B,GAE1C,IADA,IAAI4f,EAAM,GACDp5C,EAAI,EAAGA,EAAIw5B,EAAA/rC,OAAeuS,GAAKiE,EAAAsiB,KAEtC6yB,GAAOpuC,OAAAC,aAAAmQ,MAAApQ,OAAA2jF,EADUn1D,EAAAo1B,SAAgB5uD,EAAGA,EAAIiE,EAAAsiB,QAG1C,OAAO6yB,CAN8C,CAAZ,EAAAA,GAQ3C,KAT2B,CAiBjC,OAAO+mD,GAAyCl8F,EAvCI,CA/KtDosD,EAAA,kCAAAsvC,IAyCAtvC,EAAA,mCAAAwvC,IA2CAxvC,EAAA,6CAAA0vC,IAwCA1vC,EAAA,gCAAA2vC,IA8BA3vC,EAAA,iCAAAsiC,IAiEA,IAAAwN,GAA2C,KC5NL,SAAAC,GAASn8F,EAAKu1B,GAElD,IAAI4f,EAAQwmD,GAAoC37F,GAGhD,OAFAu1B,OAAsB,GAAXA,GAA+BA,EACtC4f,EAAS9gD,EAAA+nG,KAAYjnD,GAAZp7C,QAA2B,MAAO,KAAlCA,QAA+C,MAAO,KAC5Dw7B,EAAU4f,EAASA,EAAAp7C,QAAe,MAAO,GALW,CAgBrB,SAAAsiG,GAASr8F,GAE3CA,EAAQ3L,EAAAioG,KAAYt8F,EAAAjG,QAAY,KAAM,KAAlBA,QAA+B,KAAM,MAE7D,IADA,IAAIw7B,EAAS,IAAIm0B,WAAW1pD,EAAAxW,QACnB2rD,EAAI,EAAGA,EAAIn1C,EAAAxW,SAAgB2rD,EAClC5f,EAAO4f,GAAKn1C,EAAA7D,WAAiBg5C,GAE/B,OAAO5f,CAP6C,CAiBjB,SAAAgnE,GAASv8F,GAE5C,IADA,IAAIu1B,EAAM,IAAIm0B,WAAW1pD,EAAAxW,OAAa,GAC7B2rD,EAAI,EAAGA,EAAIn1C,EAAAxW,OAAY2rD,GAAK,EACnC5f,EAAI4f,EAAI,GAAK9gD,EAAA+sD,SAAgBphD,EAAAutF,OAAWp4C,EAAG,GAAI,IAEjD,OAAO5f,CAL0C,CAehB,SAAAinE,GAASx8F,GAE1C,IADA,IAAIu1B,EAAM,GACD4f,EAAI,EAAGA,EAAIn1C,EAAAxW,SAAc2rD,EAAG,CACnC,IAAIp5C,EAAQiE,EAAIm1C,GAAJzgD,SAAgB,IACR,GAAhBqH,EAAAvS,SAAmBuS,EAAQ,IAAMA,GACrCw5B,GAAOx5B,CAH4B,CAKrC,OAAOw5B,CAPwC,CAkBd,SAAAknE,GAASz8F,EAAMu1B,GAChD,IAAKv1B,IAASu1B,EAAM,OAAO,EAE3B,IADKv1B,IAASu1B,GACVv1B,EAAAxW,QAAe+rC,EAAA/rC,OAAa,OAAO,EACvC,IAAK,IAAI2rD,EAAI,EAAGA,EAAIn1C,EAAAxW,SAAe2rD,EACjC,GAAIn1C,EAAKm1C,IAAM5f,EAAK4f,GAAI,OAAO,EAEjC,OAAO,CAP+C,UAiBpBunD,GAAS18F,GAAA,QAAAu1B,EAAA,GAAA4f,EAAA,EAAAA,EAAA5rD,UAAAC,SAAA2rD,EAAA5f,EAAA4f,GAAA5rD,UAAA4rD,GAE3C,IAAK,IAAIp5C,EADLo5C,EAAc,EACFp5C,EAFuCw5B,EAEnC/rC,SAAkBuS,EACpCo5C,GAHqD5f,EAG9Bx5B,GAARvS,OAGb2rD,EAAS,IAAIuU,WAAWvU,GAE5B,IAAK,IAAIC,EADLr5C,EAAS,EACGq5C,EARuC7f,EAQnC/rC,SAAkB4rD,EACpCD,EAAAt8C,IATqD08B,EASlC6f,GAAIr5C,GACvBA,GAVqDw5B,EAUnC6f,GAAR5rD,OAEZ,OAAO2rD,CAZgD,CC9EjC,SAAAwnD,GAAS38F,GAAiB,IAAAu1B,EAAA,KAEhDv6B,KAAA26C,EAAwB31C,EAGxBhF,KAAAqjD,EAAuB,IAAIhoD,IAM3B2E,KAAAo7C,EAHAp7C,KAAAmoD,EAAkB,KAMlBnoD,KAAA6wD,GAAoB,EAGpB7wD,KAAAyE,EAAuB,KAGvBzE,KAAAtR,EAAqB,IAAIksD,GAMzB56C,KAAAgF,EAAuB,IAAI/J,IAG3B+E,KAAAqiD,EAA0B,GAG1BriD,KAAAoiD,EAA0B,IAAI4O,GAG9BhxD,KAAAo6C,EAAe,KAGfp6C,KAAA6nD,EAAgB,SAAC1N,GACf5f,EAAA6nB,EAAAna,OAA+BkS,GAC/Bn1C,EAAAwT,QAAwB2hC,EAFD,EAWzBn6C,KAAAsuF,GAAyB,IAAIrzF,IAQ7B+E,KAAA0qB,EAAkC,IAAIzvB,IAGtC+E,KAAA07C,EACI,IAAIgV,IAAiB,WAAM,OAu3C0B,SAAA1rD,GACzD,IAAMu1B,EAAav1B,EAAAspF,GACbn0C,EAAYn1C,EAAA0lB,EAGlByvB,EAAAsQ,QACAlwB,EAAAlc,SAAmB,SAACrZ,EAAQu1B,GAAU,OAAA4f,EAAAt8C,IAAc08B,EAAOv1B,EAArB,IAIhCu1B,EAAWpoC,MAAA4jF,KAAW57B,EAAA81C,UACT11D,EAAA/rC,QACA+rC,EAAAqnE,OAAe,SAAC58F,GAAW,MAAU,WAAVA,CAAA,KAG5CA,EAAA6iD,EAAc,IAAIpN,GnB51CR,EAyBL,EAkjBI,OmBuxBXz1C,EAAA21C,EAAAwlD,GAAkCD,GAA6B/lD,GArBK,CAv3CrC0nD,CAAAtnE,EAAA,IAU/Bv6B,KAAAu6B,GAAqB,EASrBv6B,KAAAqzD,EAAkC,IAAIrC,GAGtChxD,KAAAy6C,GAA8B,EAG9Bz6C,KAAAgxD,EAA8B,GAG9BhxD,KAAA8hG,IAA4B,EAG5B9hG,KAAAgzD,EAAwB,IAAItC,IAAiB,YAukDG,SAAA1rD,GAChDA,EAAAA,EAAAqZ,SAA6B,SAACkc,EAAU4f,GACtC,IAAIp5C,EAAUw5B,EAAAwnE,GACV3nD,EAAUD,EAAA6nD,WACVnpD,MAAMuB,KACRA,EAAUvQ,KAGRuQ,GAAWr5C,IAR0CiE,EASvD21C,EAAAsnD,oBAA0C9nD,EAAA+nD,UAAmB9nD,GAC7D7f,EAAAwnE,GAAyB3nD,EATuB,GADO,CAtkDzD+nD,CAAA5nE,EADiD,IAA3B+0D,GAEI,GAI5BtvF,KAAAoiD,EAAA,OADa,WAAO,GAjG4B,CA0RA,SAAAggD,GAAAp9F,EAC9Cu1B,EAAU4f,GAIZ,OAHAn1C,EAAAq9C,EAA0BlI,EAC1Bn1C,EAAAy1C,EAAyD,EAA3BN,EAAA3rD,OAEvB6zG,GAAAr9F,EAAWu1B,EAJa,CA4DO,SAAA8nE,GAAAr9F,EAASu1B,GAI/C,IAAM4f,EAAa5f,EAAA+nE,MAAc,SAACt9F,GAAM,OAAoB,EAApBA,EAAAu9F,SAAA/zG,MAAA,IASxC,IAAK2rD,EAAY,CACf,IAAMp5C,EAAUk/F,GAA0Bj7F,EAAAo1C,EAAAooD,UAg2CN,SAASx9F,EAAUu1B,GACzD,IAAM4f,EAAW,GAEjB5f,EAAAlc,SAAmB,SAACrZ,EAAKu1B,GACvB4f,EAAA9mD,KAAc,CACZovG,UAAWloE,EACXmoE,iBAAkB19F,EAClB29F,+BAA+B,EAC/BC,yBAAyB,EACzBC,gBAAiB,GACjBC,gBAAiB,GACjBC,kBAAmB,KACnBC,SAAU,GACVC,OAAQ,IAV2B,IAcvC,IAjBqE,IAiBrEliG,EAAAw5C,EAAsBv1C,GAAtBo1C,EAAAr5C,EAAAiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,OAAAokC,EAAA9mD,MACEivG,SAAmBpoD,CAlBgD,CA/1CnE+oD,CAAsC3oE,EAAUx5B,EAFjC,CAQjB,IAAMq5C,EA2iB6C,SAAAp1C,GAEnD,GADMA,EAAYi7F,GAA0Bj7F,EAAAo1C,EAAA+oD,WACtB,GAAlBn+F,EAAAsiB,KAAuB,OAAO,KAIlC,IAAIiT,EAAO,GACP4f,EAAS,GAEbn1C,EAAAqZ,SAAkB,SAACrZ,EAAQjE,GACzB,IAAIq5C,EAAQmnD,GAAwBxgG,GAChC8mD,EAAM05C,GAAwBv8F,GAC9Bo1C,EAAS,CACXgpD,IAAK,MACLC,IAAKlC,GAAyB/mD,GAAO,GACrCqW,EAAG0wC,GAAyBt5C,GAAK,IAGnCttB,EAAAlnC,KAAU+mD,GACVD,EAAA9mD,KAAY+mD,EAAAipD,IAV0B,IAcpCr+F,EAAU2jE,KAAAC,UADD,CAACp3D,KAAM+oB,IAMpB,IAAIx5B,EAAc4nE,KAAAC,UAAe,CAAC06B,KAAQnpD,IAI1C,OAFIp5C,EAAY,CAAC,CAACiiG,SADH,IAAIt0C,WAAWqyC,GAAmBhgG,IACXwiG,aAAc,WAE7C,CACLd,UAAW,kBACXC,iBAAkB,gCAAkCrpG,EAAA+nG,KAAYp8F,GAChE29F,+BAA+B,EAC/BC,yBAAyB,EACzBC,gBAAiB,GACjBC,gBAAiB,GACjBC,kBAAmB,KACnBC,SAAUjiG,EACVkiG,OAAQ,GAzCoD,CA3iBtCO,CAAAx+F,GACxB,GAAIo1C,EAAiB,KACnByN,EAAAtN,EAAsBhgB,GAAtB,IAAAx5B,EAAA8mD,EAAA7xC,QAAAjV,EAAAyyB,KAAAzyB,EAAA8mD,EAAA7xC,OAAAjV,EAAAzN,MACEivG,SAAmB,CAACnoD,EAFH,CAOrB,IAAAr5C,GAAAq5C,EAAAG,EAAsBhgB,IAAtBvkB,QAAAjV,EAAAyyB,KAAAzyB,EAAAq5C,EAAApkC,OACE,IAAA6xC,GAAA9mD,EAAAw5C,EADFx5C,EAAAzN,MACqBivG,WAAnBvsF,QAAA6xC,EAAAr0B,KAAAq0B,EAAA9mD,EAAAiV,OACEytF,GADF57C,EAAAv0D,MAGM2sG,GAA0Bj7F,EAAAo1C,EAAAooD,SAC1BvC,GAA0Bj7F,EAAAo1C,EAAAspD,UAAyB,CAAC,IAU5D,OALM3iG,WA8S6DiE,EACjEu1B,GAIF,IADA,IAAM4f,EAAa,IAAI9+C,IACvB0F,EAAAw5C,EAAsBhgB,GAAtB6f,EAAAr5C,EAAAiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,OAAgC,KAC9B6xC,EAAAtN,EADFH,EAAA9mD,MACqBivG,UAAnB,IAAAnoD,EAAAyN,EAAA7xC,QAAAokC,EAAA5mB,KAAA4mB,EAAAyN,EAAA7xC,OACEmkC,EAAAx+C,IADFy+C,EAAA9mD,MAD8B,CAOhC,IAAAyN,EAAAw5C,EAAmBJ,GAAnBC,EAAAr5C,EAAAiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,OACEytF,GADFrpD,EAAA9mD,MAGM2sG,GAA0Bj7F,EAAAo1C,EAAAooD,SAC1BvC,GAA0Bj7F,EAAAo1C,EAAAspD,UAAyB,CAAC,IAGpD77C,EACF7iD,EAAAy1C,EAA8B,WAAa,WAC/C,IAAM0N,EACFnjD,EAAAy1C,EAA8B,CAAC,sBAAwB,CAAC,aAK5D,IAHM15C,EAAU,IAAI9F,IAGpBk/C,EAAAI,EAAmBJ,GAAnBC,EAAAD,EAAAnkC,QAAAokC,EAAA5mB,KAAA4mB,EAAAD,EAAAnkC,OAAWokC,EAAXA,EAAA9mD,MAcEyN,EAAAlD,IAAYu8C,EAAAqoD,UAbG,CAEbkB,kBAAmB,GACnBC,kBAAmB,GACnBC,sBAAuB,WACvBC,gBAAiBj8C,EACjBk8C,aAAc57C,EACd67C,MAAO5pD,EAAAqoD,UACPF,SAAU,KASd,IAAApoD,EAAAI,EAAsBhgB,GAAtB6f,EAAAD,EAAAnkC,QAAAokC,EAAA5mB,KAAA4mB,EAAAD,EAAAnkC,OAAgC,CAExB6xC,GAFGzN,EAAXA,EAAA9mD,OAEgBixF,MAERp8B,EAAQ/N,EAAAkqC,MAGd,IAAM7zB,EACF5I,EACAs4C,GAAiCt4C,EAAAwD,SAAgBxD,EAAAo8C,QACjD,GAEE7hD,EACF+F,EACAg4C,GAAiCh4C,EAAAkD,SAAgBlD,EAAA87C,QACjD,GAGJ7oD,EAAAb,EAAmBH,EAAAmoD,UAAnB,IAAAnoD,EAAAgB,EAAAplC,QAAAokC,EAAA5mB,KAAA4mB,EAAAgB,EAAAplC,OAAqC,CAA1BokC,EAAXA,EAAA9mD,MACE,IAAM6uD,EAASphD,EAAAhB,IAAYq6C,EAAAqoD,WAK3BtgD,EAAAogD,SAAAlvG,KAAqB+mD,GAEjBA,EAAAuoD,gCACFxgD,EAAA0hD,sBAA+B,YAG7BzpD,EAAAwoD,0BACFzgD,EAAA2hD,gBAAyB,YAGvBj8C,GAOF1F,EAAAwhD,kBAAAtwG,KALmB,CACjB6wG,WAAY9pD,EAAAyoD,iBAAwB,GACpCsB,YAAa1zC,IAMbtI,GAOFhG,EAAAyhD,kBAAAvwG,KALmB,CACjB6wG,WAAY9pD,EAAA0oD,iBAAwB,GACpCqB,YAAa/hD,GA9BkB,CAlBP,CAwDhC,OAAOrhD,CApGK,CA/SeqjG,CAAAp/F,EAAwCu1B,GAK9Dx5B,EAAAumB,MAMCvmB,EAAIsjG,GAAAr/F,EAAqBjE,GAUxBo5C,EACAp5C,EACAA,EAAA,OAAQ,WAAO,MAhBpBiE,EAAA6rD,GAAoB,EACb7oB,QAAAloB,UA/CgD,CAkIJ,SAAAwkF,GAAAt/F,GAAiB,OAAAk9C,GAAA,SAAA/H,IAe3D,IAAAp5C,EAf2D,OAAAoQ,EAAAgpC,GAAA,SAAAA,GAAA,OAAAA,EAAAgX,GAAA,OAItE,KAJsEnsD,EAIlEmjD,GAJkEnjD,EAKlEP,GALkEO,EAMlEP,EAAAs+F,mBANkE/9F,EAOlEP,EAAAs+F,kBAAAv0G,QAHJ,CAAA2rD,EAAArO,EAAA,SAKsB,OADhBijD,EAAA50C,EAAA,GACgBoO,EAAApO,EATgDn1C,EAS1CmjD,EAAAo8C,qBAT0Cv/F,EAU9DP,EAAAs+F,mBADc,GATgD,OAQhE9T,EAAA90C,EAAA,SARgE,OAgBlE,OADOp5C,EAAAmuF,EAAA/0C,GACPA,EAAA,OAAOnS,QAAAC,OAAe,IAAIwS,GnBlYlB,EAyBL,EAyfuB,KmB5IxB15C,EAAA3B,WApBgE,OAsEzB,SAAAolG,GAAAx/F,GAE7C,IAAIu1B,EAAYv1B,EAAAP,EAAuBO,EAAAP,EAAAu+F,SAAgC,GAiBvE,OAhBAzoE,EAAAlc,SAAkB,SAACkc,GACjB,OAAOkqE,GAJ+Cz/F,EAIlBu1B,EAAAgpE,aACAhpE,EAAAyoE,SAFE,IAMxCh+F,EAAAq9C,EAAAhkC,SAAgC,SAACkc,GAC/B,OAAOmqE,GAV+C1/F,EAUtBu1B,EADa,IAM1CA,EAAA/rC,QAAqBwW,EAAAq9C,EAAA7zD,QACxBwW,EAAAo9C,EAAAtiC,UAGK9a,EAAAo9C,CAnBiD,CA8BZ,SAAAuiD,GAAA3/F,EAASu1B,EAAc4f,GAQnE,IADA,IAAMp5C,EAAYiE,EAAAA,EAAAirF,SAClB71C,GAAAr5C,EAAAw5C,EAAuBx5C,IAAvBiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,OACE,GAAIyrF,GAAsBtnD,EAD5BC,EAAA9mD,MACsC0vG,UAElC,OAIJyB,GAAAz/F,EAA6Bu1B,EAAc4f,EAfkC,CAsCjC,SAAAyqD,GAAA5/F,EAASu1B,GAMrD,QHhlBSkmE,GAAuC,UGolBzCz7F,EAAAq+C,EAAAjgD,IAAyBm3B,EAVkC,CAmBpB,SAAAukE,GAAA95F,GAK9C,OAHMA,ENnoBN,SAAWA,EAAUu1B,GAEnB,IADA,IAAM4f,EAAQ,GACdp5C,EAAAw5C,EAAgBv1C,GAAhBo1C,EAAAr5C,EAAAiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,OAA4BmkC,EAAA9mD,KAAWknC,EAAvC6f,EAAA9mD,QACA,OAAO6mD,CAHqB,CMmoBlB0qD,CADN7/F,EAAWA,EAAAA,EAAAwM,QAC8B,SAACxM,GAAM,OAAAA,EAAAk9F,SAAA,IAG/C/vG,MAAA4jF,KAAW/wE,EALuC,CAsKT,SAAAq/F,GAAAr/F,EAASu1B,GACzD,GAA+B,GAA3BA,EAAAjT,MAAgCiT,EAAAn3B,IAAuB,IACzD,OAAO4kC,QAAAC,OAAe,IAAIwS,GnBvrBhB,EAyBL,EAqdsB,MmBiN7B,IAV6E,IAU7EN,EAAAI,EAAqBhgB,EAAA01D,UAArBlvF,EAAAo5C,EAAAnkC,QAAAjV,EAAAyyB,KAAAzyB,EAAAo5C,EAAAnkC,OACyC,IAD9BjV,EAAXA,EAAAzN,OACMqwG,kBAAAn1G,eACKuS,EAAA4iG,kBAE8B,GAAnC5iG,EAAA6iG,kBAAAp1G,eACKuS,EAAA6iG,kBAMX,IAAIxpD,EADAD,EAAa,IAAI6W,GA4FrB,MApFA,EAAC,GAAM,GAAP3yC,QAAsB,SAASrZ,GAAyB,IAAAm1C,EAAA,KACtD5f,EAAAlc,SAA2B,SAACkc,EAAQx5B,GACXw5B,EAAAgoE,SAAAD,MAAqB,SAASt9F,GACnD,QAASA,EAAA09F,gBADgD,KAGnC19F,IAExBo1C,EAAIA,EAAA,MAAQ,WACV,IAAIp6C,KAAAu6B,EACJ,OAAOsrB,UAAAi/C,4BAAsC/jG,EAAW,CAACw5B,GAFpC,EAAXrR,KAGLixB,IATyC,GADI,EAAlCjxB,KAYflkB,IASPo1C,KAPIA,EAAA,OAAQ,WACV,OAAOpS,QAAAC,OAAe,IAAIwS,GnBhuBhB,EAyBL,EAmeoC,MmBmOzB,KAOd/6B,KAAO,SAAS1a,GAClB,GAAIhF,KAAAu6B,EAAsB,OAAOyN,QAAAC,SAKjCjoC,KAAAqjD,EAAAoH,QAGA,IAAMtQ,EAAan1C,EAAA+/F,mBAEbhkG,EAAYo5C,EAAAypD,mBAAgC,GAElDxpD,EAAAG,EAHkBJ,EAAAwpD,mBAAgC,IAGlD,IAAAxpD,EAAAC,EAAApkC,QAAAmkC,EAAA3mB,KAAA2mB,EAAAC,EAAApkC,OACEhW,KAAAqjD,EAAA1nD,IADFw+C,EAAA7mD,MAC2B6wG,aAG3B,IAAAhqD,GAAAp5C,EAAAw5C,EAAkBx5C,IAAlBiV,QAAAmkC,EAAA3mB,KAAA2mB,EAAAp5C,EAAAiV,OACEhW,KAAAqjD,EAAA1nD,IADFw+C,EAAA7mD,MAC2B6wG,aAOvBpjG,EAAAiE,EAAAy9F,UAk4BFroD,EAAiB,GAGrB,IAAIyN,EAAc,GAGd1F,EAAY,GAGZ2Q,EAAS,GAx4BX,OAu7BA,SAAS9tD,EAAUu1B,EAAgB4f,EAAap5C,EAAWq5C,GAa7Dp1C,EAAAqZ,SAAiB,SAACrZ,GA6BhB,GAxBKu1B,EAAA17B,SAAwBmG,EAAA09F,mBAC3BnoE,EAAAlnC,KAAoB2R,EAAA09F,kBAIlB19F,EAAA+9F,oBACY5oD,EAAAmoD,MACV,SAAC/nE,GAAS,OAAAknE,GAAsBlnE,EAAMv1B,EAAA+9F,kBAA5B,KAEZ5oD,EAAA9mD,KAAiB2R,EAAA+9F,oBAKjB/9F,EAAAg+F,UACFh+F,EAAAg+F,SAAA3kF,SAAyB,SAACrZ,GACVjE,EAAAuhG,MACV,SAAC/nE,GAAa,SAAsBA,EA/BxCyqE,OA+BwCzqE,EA/B7ByqE,OA+BuChgG,EA/B5BggG,QA+BkBzqE,EA1BrCgpE,cA0B+Cv+F,EA1B7Bu+F,cAClB9B,GAyBqClnE,EAzBJyoE,SAyBch+F,EAzBFg+F,SAyB9B,KAEhBjiG,EAAA1N,KAAe2R,EAJ4B,IAS7CA,EAAAi+F,OACF,IAAK,IAAIp7C,EAAI,EAAGA,EAAI7iD,EAAAi+F,OAAAz0G,SAAyBq5D,EACtCzN,EAAAv7C,SAAgBmG,EAAAi+F,OAAep7C,KAClCzN,EAAA/mD,KAAY2R,EAAAi+F,OAAep7C,GAhCL,GAbuC,CA7CrEo9C,EA54BM9qD,EAAA5f,EAAAx6B,IAAuBiF,EAAAy9F,YA64BzBF,SAAiBnoD,EAAgByN,EAAa1F,EAAW2Q,GA/4B3D9yD,KAAAyE,EAi6BK,CACLg+F,UAAW1hG,EACX2hG,iBAAkBtoD,EAAe,GACjCuoD,8BAAgE,YAAhCxoD,EAAA0pD,sBAChCjB,wBAAoD,YAA1BzoD,EAAA2pD,gBAC1BjB,gBATE1oD,EAAAwpD,kBAA2BxpD,EAAAwpD,kBAAyB,GAAzBO,WAAyC,GAUtEpB,gBARE3oD,EAAAypD,kBAA2BzpD,EAAAypD,kBAAyB,GAAzBM,WAAyC,GAStEnB,kBAAmBl7C,EAAY,GAC/Bm7C,SAAU7gD,EACV8gD,OAAQnwC,GAt6BH9yD,KAAAyE,EAAAi+F,iBAQE19F,EAAAkgG,kBAPEl9D,QAAAC,OAAe,IAAIwS,GnBnwBlB,EAyBL,EAuiBoB,KmBuMnBz6C,KAAAyE,EAAAg+F,WAjCkC,EAA/Bv5E,KAqCJlkB,IArCH0a,KAqCe,SAAS1a,GAC1B,GAAIhF,KAAAu6B,EAAsB,OAAOyN,QAAAC,SAIjCjoC,KAAAmoD,EAAkBnjD,EAClBhF,KAAA6wD,GAAoB,CANiB,EAApB3nC,KAOZlkB,IA5CH,MA4CgB,SAASA,GAC3B,IAAIhF,KAAAu6B,EAKJ,OAFAv6B,KAAAyE,EAAuB,KACvBzE,KAAAqjD,EAAAoH,QACIzlD,aAAqBy1C,GAChBzS,QAAAC,OAAejjC,GAIjBgjC,QAAAC,OAAe,IAAIwS,GnB7xBhB,EAyBL,EA0eiB,KmB8RlBz1C,EAAA5F,SAfkC,EAApB8pB,KAgBblkB,IAEPm1C,EAAAlS,SACOmS,CAhHsE,CA8KzB,SAAAsqD,GAAA1/F,EAASu1B,GAE7D,IAEE,IAAA4f,EAAUn1C,EAAAmjD,EAAAg9C,cAA8B,qBAFtC,CAGF,MAAOt9C,GACP,IAAI9mD,EAAQ,IAAI05C,GnBz2BN,EAyBL,EA+fqB,KmBqVtBoN,EAAAzoD,SAEJ,OADA4F,EAAA6iD,EAAc9mD,GACPinC,QAAAC,OAAelnC,EAPJ,CAUpBiE,EAAAtW,EAAAu0D,EAA0B9I,EAAS,UAE3Bn1C,EAAAogG,GAAAl8E,KAA4BlkB,IACpCA,EAAAtW,EAAAu0D,EAA0B9I,EAAS,oBAC/Bn1C,EAAAqgG,GAAAn8E,KAA+BlkB,IAEnC,IAAMo1C,EAAW,CACf4oD,SAAU,KACVhsB,QAAQ,EACR+qB,GAAel4D,IACf+kD,GAAe,MAIjB,OAFA5pF,EAAAA,EAAAnH,IAAyBs8C,EAASC,GAE3BD,EAAAiuC,KAAa7tD,GAAb7a,KAA6B,SAAS1a,GAC3C,OAAIhF,KAAAu6B,EAA6ByN,QAAAC,SAG5BjjC,GAYLo1C,EAAA48B,QAAkB,EACdsuB,GAAAtlG,OACFA,KAAAoiD,EAAAtiC,UAGKq6B,IAhBLn6C,KAAAgF,EAAA,OAA4Bm1C,QAE5Bn6C,KAAA6nD,EAAc,IAAIpN,GnBv4BV,EAyBL,EA4iBoB,OmB2T2B,EAAlBvxB,KAsB7BlkB,GAAO,SAASA,GACjBhF,KAAAu6B,IAEJv6B,KAAAgF,EAAA,OAA4Bm1C,GAE5Bn6C,KAAA6nD,EAAc,IAAIpN,GnB35BR,EAyBL,EA+fqB,KmBuYtBz1C,EAAA5F,UATwB,EAAhB8pB,KAUPlkB,GA7DiE,CAuEtE,SAAAy/F,GAAAz/F,EAASu1B,EAAc4f,GAEzB,IAGI,IAAAp5C,EAFEiE,EAAAy1C,EAEQz1C,EAAAmjD,EAAAg9C,cAA8B,sBAG9BngG,EAAAmjD,EAAAg9C,eANV,CAQF,MAAO/qD,GAMP,YALAp1C,EAAA6iD,EAAc,IAAIpN,GnBr7BR,EAyBL,EA+fqB,KmBiatBL,EAAAh7C,SALc,CASpB4F,EAAAtW,EAAAu0D,EAA0BliD,EAAS,UAE3BiE,EAAAogG,GAAAl8E,KAA4BlkB,IACpCA,EAAAtW,EAAAu0D,EAA0BliD,EAAS,oBAC/BiE,EAAAqgG,GAAAn8E,KAA+BlkB,IAQnCA,EAAAA,EAAAnH,IAAyBkD,EANR,CACfiiG,SAAU7oD,EACV68B,QAAQ,EACR+qB,GAAel4D,IACf+kD,GAAe,OAIjB7tF,EAAAwkG,gBAAwBhrE,EAAc4f,EAAAyV,QAAtC,OAA6D,SAACr1B,GAC5D,IAlCiCv1B,EAkC7Bu1B,EAAJ,CAKA,GAvCiCv1B,EAoCjCA,EAAA,OAA4BjE,GAGxBw5B,EAAAirE,WAAmBjrE,EAAAirE,UAAAC,WAA4B,CACjD,IAAAtrD,EAAW5f,EAAAirE,UAAAC,WACI,EAAXtrD,IACFA,GAAYxjD,KAAAguE,IAAS,EAAG,KAE1BxqB,EAAW,KAAOA,EAAAzgD,SAAkB,GALa,CAvClBsL,EA+CjC6iD,EAAc,IAAIpN,GnBz9BR,EAyBL,EAwgB+B,KmB4bhClgB,EAAAn7B,QAAem7B,EAAO4f,GAjB1B,CADsE,GAjCrC,UAoFiB4nD,GAAA/8F,EAASu1B,GAE7D,IAAI4f,EAAU5f,EAAAt2B,OAGRlD,EAAWiE,EAAAA,EAAAjF,IAAyBo6C,GAEtCC,EAAMp1C,EAAAP,EAAAi+F,iBACJ76C,EAAiB7iD,EAAAo1C,EAAAspD,SAAsB1+F,EAAAP,EAAAg+F,WACpB,6BAArBloE,EAAAmrE,aAAoD79C,GACpDA,EAAA89C,0BACFvrD,EAAMyN,EAAA89C,0BAIJvrD,EAAUijD,GACV,CAACjjD,GAAMp1C,EAAAo1C,EAAAojD,kBACX18F,KAAey5B,EAAAn7B,QACfg7C,EAAAxnD,OAAiB,OACjBwnD,EAAAqjD,mBAA6BljE,EAAAmrE,YAGS,2BAAlC1gG,EAAAP,EAAAg+F,WACkC,4BAAlCz9F,EAAAP,EAAAg+F,WA6EoD,SAASz9F,GAuBjE,IAAIu1B,EAAMqmE,GACN57F,EAAAlE,MAAc,GAAyB,GAC3C,GAAKy5B,EAAA17B,SAAa,uBAAlB,CAcA,IADA,IAAIs7C,GAHA5f,GAAM,IAAIqrE,WAAJC,gBAAgCtrE,EAAK,oBAGjCmK,qBAAyB,cAC9B3jC,EAAI,EAAGA,EAAIo5C,EAAA3rD,SAAkBuS,EAIpCiE,EAAAswE,QAHWn7B,EAAQp5C,GAAR6jC,cAAyB,QAGpBriC,aAFJ43C,EAAQp5C,GAAR6jC,cAAyB,SAEDriC,YAQtCyC,EAAAlE,KACIugG,GALY9mE,EAAAqK,cAAkB,aAKQriC,aAAtCqtD,MA3BJ,MAME5qD,EAAAswE,QAAgB,gBAAkB,yBA/BsC,CA5ExEwwB,CAA6B1rD,GAE3Bp1C,EAAAP,EAAAg+F,UAAAx1B,WAA0C,kBAwIS,SAASjoE,GAGhE,IAAMu1B,EAAkB,IAAIm0B,WAAW1pD,EAAAlE,MAEjCy5B,EAAS,OADO4mE,GAAoC5mE,GAE1Dv1B,EAAAswE,QAAgB,gBAAkB,oCAClCtwE,EAAAlE,KAAeigG,GAA8BxmE,EAP4B,CAvIvEC,CAA4B4f,GAG9Bp1C,EAAA21C,EAAAi3C,GAAAiN,QVnlCW,EUmlC0CzkD,GAArDokC,QAAA9+D,KACU,SAAS1a,GACb,OAAIhF,KAAAu6B,EAA6ByN,QAAAC,eAE7BxjC,EAAAg+F,UAAAx1B,WAA0C,kBAmJG,SAASjoE,GAUhE,IAEE,IAAAu1B,EAAemmE,GAAgC17F,EAAArS,KAF7C,CAGF,MAAOwnD,GAEP,MAFc,CAMhB5f,EAAeA,EAAAt9B,OAGmB,UAA9Bs9B,EAAAg4D,OAAoB,EAAG,IACK,WAA5Bh4D,EAAAg4D,QAAqB,KACvBh4D,EAAeA,EAAA5gC,MAAmB,GAAI,IAIxC,IAEE4gC,EADuBouC,KAAAo9B,MAAWxrE,GACnByrE,GAFb,CAGF,MAAO7rD,GAAQ,CAMjBn1C,EAAArS,KAAgB0uG,GAAsC9mE,GAAtCq1B,MArC0D,CAlJlEq2C,CAA4BjhG,GAIvBm1C,EAAApkC,OAAe/Q,EAAArS,MAAf+sB,KAAmC,WAAW,IAAA1a,EAAA,KAEnDhF,KAAA26C,EAAAurD,QADY,IAAIv1C,GAAqB,qBAGjC5vD,IACEA,EAAA6tF,IACF7tF,EAAA6tF,GAAA9uE,UAKY,IAAI4wC,IAAiB,WACjC3vD,EAAAi2E,QAAkB,EACdsuB,GAAAtgG,IACFA,EAAAo9C,EAAAtiC,SAHqC,IAOzC8wC,EACmBu1C,IAnB8B,EAAXj9E,KAqBnClpB,OA7BgB,EAAnBkpB,KA8BClkB,GAAO,SAASA,GAEjBhF,KAAAu6B,IAKAv1B,EAAW,IAAIy1C,GnBlkCb,EAyBL,EA+gBmB,KmB8hBhBz1C,GACJhF,KAAA6nD,EAAc7iD,GACVjE,GAAYA,EAAA6tF,IACd7tF,EAAA6tF,GAAA3mD,OAA8BjjC,GAdJ,EAAhBkkB,KAgBPlkB,IA/CX,MA+CwB,SAASA,GAEvBhF,KAAAu6B,IAGAv1B,EAAW,IAAIy1C,GnBhlCb,EAyBL,EAshBsB,KmBqiBnBz1C,EAAA5F,SACJY,KAAA6nD,EAAc7iD,GACVjE,GAAYA,EAAA6tF,IACd7tF,EAAA6tF,GAAA3mD,OAA8BjjC,GAZE,EAAhBkkB,KAcblkB,GA3FyD,CA8XjC,SAAAohG,KAenC,IAAI7rE,EAAyB,CAC3B,CAAC4pE,YAAa,mCACd,CAACA,YAAa,6BAaVhqD,EAAU,CAPI,CAClBypD,kBAAmBrpE,EACnBupE,gBAAiB,WACjBC,aAAc,CAAC,uBANC,CAChBH,kBAAmBrpE,IAYfx5B,EAAU,IAAI9F,IAmCpB,OADMs/B,EA/De,qJAAA57B,MAAA,KA+DP4oB,KAAmB,SAACgT,GAAc,OAhC7B,SAAOv1B,GAAc,OAAAk9C,GAAA,SAAAiG,IAEpC,IAAM5tB,EAQF6f,EACAgB,EAXgC,OAAAjqC,EAAAg3C,GAAA,SAAAA,GAAA,OAAAA,EAAAgJ,GAAA,OAErB,OADb49B,EAAA5mC,EAAA,GACaI,EAAAJ,EAAMtC,UAAAi/C,4BACjB9/F,EAAWm1C,GADA,GAFqB,OAuBpC,OArBM5f,EAAS4tB,EAAA1F,EASXrH,KADAhB,EAAe7f,EAAAwqE,mBAAAhB,eAEf3pD,EAAAv7C,SAAsB,sBH99CrB4hG,GAAuC,aGq+C1CrlD,GAAkB,GAGpBr6C,EAAAlD,IAAYmH,EAAW,CAAC8+F,gBAAiB1oD,IACzCmN,EAAAJ,EAAM5tB,EAAA2qE,kBAAN,GAvBoC,OAClCjW,EAAA9mC,EAAA,SADkC,OAwB7B+mC,EAAA/mC,GAGPpnD,EAAAlD,IAAYmH,EAAW,MA3Baq+C,EAAA8E,GAAA,OAgCQnjD,CAAWu1B,EAAX,IACzCyN,QAAA20C,IAAYpiD,GAAZ7a,MAAwB,WAAM,OAAAwgF,GAA6Bn/F,EAA7B,GApES,CA6FE,SAAAslG,GAAArhG,EAASu1B,GAEzD,IAAM4f,EAAQ5f,EAAAgqD,MAERxjF,EAAQw5B,EAAA+pD,MASd,GAPInqC,GAASA,EAAAmsD,YAIN1B,GAAA5/F,EAHoBm7F,GACrBhmD,EAAAkR,SAAgBlR,EAAA8pD,UAKlBljG,GAASA,EAAAulG,YAIN1B,GAAA5/F,EAHoBm7F,GACrBp/F,EAAAsqD,SAAgBtqD,EAAAkjG,SAEuB,OAAO,EAGpD,IAAM7pD,EAAYp1C,EAAAy9F,YAClB,OAAkC,GAA3BloE,EAAAgoE,SAAA/zG,QACH+rC,EAAAgoE,SAAAD,MAAsB,SAACt9F,GAAY,OAAAA,EAAAy9F,WAAqBroD,CAArB,GAtB2B,CAmD1B,SAAAmsD,GAASvhG,EAAOu1B,GACxD,IAAKv1B,EAAAxW,OAAc,OAAO+rC,EAC1B,IAAKA,EAAA/rC,OAAc,OAAOwW,EAI1B,IAFA,IAAIm1C,EAAa,GAERp5C,EAAI,EAAGA,EAAIiE,EAAAxW,OAAcuS,IAChC,IAAK,IAAIq5C,EAAI,EAAGA,EAAI7f,EAAA/rC,OAAc4rD,IAGhC,GAAIp1C,EAAMjE,GAAN0hG,WAAsBloE,EAAM6f,GAANqoD,UAAoB,CAC5C,IAAI56C,EAAO7iD,EAAMjE,GACbq5C,EAAO7f,EAAM6f,GACjB,IAAI+N,EAAW,GAEfA,GADAA,EAAWA,EAAAh7B,OAAgB06B,EAAAm7C,UAAiB,KACjC71E,OAAgBitB,EAAA4oD,UAAiB,IAC5C,IAAIvyC,EAAS,GAEbA,GADAA,EAASA,EAAAtjC,OAAc06B,EAAAo7C,SACd91E,OAAcitB,EAAA6oD,QAcvB9oD,EAAA9mD,KAbgB,CACdovG,UAAW56C,EAAA46C,UACXC,iBAAkB76C,EAAA66C,kBAAyBtoD,EAAAsoD,iBAC3CC,8BAA+B96C,EAAA86C,+BAC3BvoD,EAAAuoD,8BACJC,wBAAyB/6C,EAAA+6C,yBACrBxoD,EAAAwoD,wBACJE,gBAAiBj7C,EAAAi7C,iBAAwB1oD,EAAA0oD,gBACzCD,gBAAiBh7C,EAAAg7C,iBAAwBzoD,EAAAyoD,gBACzCE,kBAAmBl7C,EAAAk7C,mBAA0B3oD,EAAA2oD,kBAC7CC,SAAU76C,EACV86C,OAAQxyC,IAGV,KAvB4C,CA4BlD,OAAOtW,CAtCwD,CAoET,SAAAmrD,GAAAtgG,GAEtD,OAAOg7F,GADDh7F,EAAYA,EAAAA,EAAAirF,UAC2B,SAACjrF,GAAS,OAAAA,EAAAgyE,MAAA,GAFU,CA0KpB,SAAAysB,GAC3Cz+F,EAASu1B,EAAS4f,IACfn1C,EAAAy9F,WAmBoB,mBAArBz9F,EAAAy9F,WAA0Cz9F,EAAA09F,mBAInCnoE,EAAAjT,OAGHiT,EAASA,EAAAx6B,IAAYiF,EAAAy9F,YAAsB,GACjDz9F,EAAA09F,iBAA2BnoE,GAMxBv1B,EAAAi+F,SACHj+F,EAAAi+F,OAAiB,KAGb9oD,EAAiBA,EAAAp6C,IAAoBiF,EAAAy9F,cAEpCz9F,EAAA29F,gCACH39F,EAAA29F,8BACIxoD,EAAAwoD,+BAGD39F,EAAA49F,0BACH59F,EAAA49F,wBAAkCzoD,EAAAyoD,yBAG/B59F,EAAA89F,kBACH99F,EAAA89F,gBAA0B3oD,EAAA2oD,iBAGvB99F,EAAA69F,kBACH79F,EAAA69F,gBAA0B1oD,EAAA0oD,iBAGvB79F,EAAA+9F,oBACH/9F,EAAA+9F,kBAA4B5oD,EAAA4oD,oBAW5B1pG,EAAA8lF,MAAe9lF,EAAA8lF,KAAAqnB,cACQ,2BAArBxhG,EAAAy9F,YACFz9F,EAAAy9F,UAAoB,4BAvEa,CDv2DvCrxC,EAAA,sCAAA+vC,IAgBA/vC,EAAA,wCAAAiwC,IAiBAjwC,EAAA,qCAAAmwC,IAeAnwC,EAAA,mCAAAowC,IAkBApwC,EAAA,mCAAAqwC,IAiBArwC,EAAA,oCAAAswC,KC8EAtoG,EAAAuoG,GAAAjtG,WAAA00B,QAA0C,WAAiB,IAAApkB,EAAA,YAAAk9C,GAAA,SAAA/H,IAAA,OAAAhpC,EAAAgpC,GAAA,SAAAA,GAAA,OAAAA,EAAAgX,GAAA,OAGzD,OAAInsD,EAAAu1B,EACHguB,EAAApO,EAAMn1C,EAAAquD,EAAN,IAECruD,EAAAu1B,GAAqB,EACrBguB,EAAApO,WAY0Cn1C,GAAiB,OAAAk9C,GAAA,SAAA/H,IAmB7D,IAAMp5C,EAnBuD,OAAAoQ,EAAAgpC,GAAA,SAAAA,GAAA,OAAAA,EAAAgX,GAAA,OAuB7D,OAvB6DnsD,EAG7DtW,EAAAgxG,UAH6D16F,EAI7DtW,EAAqB,KAJwCsW,EAQ7Do9C,EAAAna,SAR6DjjC,EAY7DguD,EAAA4e,OAZ6D5sE,EAa7DguD,EAAwB,KAbqChuD,EAe7D02C,EAAAk2B,OAf6D5sE,EAgB7D02C,EAAuB,KAGjB36C,EAAe5O,MAAA4jF,KAnBwC/wE,EAmB7BA,EAAAwM,QAnB6BxM,EAoB7DA,EAAAylD,QAGAlC,EAAApO,EAAMnS,QAAA20C,IAAY57E,EAAAwmB,KAAiB,SAACviB,GAClC,OAAOgjC,QAAAloB,UAAAJ,MAAuB,WAAY,OAAAwiC,GAAA,SAAAuO,IAAA,OAAAt/C,EAAAs/C,GAAA,SAAAtW,GAAA,OAAAA,EAAAgX,GAAA,OAItC,OADE49B,EAAA50C,EAAA,GACFoO,EAAApO,EA8uD8B,SAAen1C,GAAS,OAAAk9C,GAAA,SAAA/H,IAG5D,IAAMp5C,EAHsD,OAAAoQ,EAAAgpC,GAAA,SAAAA,GAAA,OAAAA,EAAAgX,GAAA,OASnC,OANnBpwD,EAAU,IAAIinC,SAAQ,SAAChjC,GACb,IAAI0rD,GAAiB1rD,GACnC4rD,EAAgB61C,GAFuB,IAMhBl+C,EAAApO,EAAMnS,QAAA+2C,KAAa,CACxC/5E,EAAA6zE,QAAAn5D,MAAqB,WAAM,YAC3B3e,EAAA2e,MAAa,WAAM,cAFE,GATmC,OAAA2jC,EAAAlJ,GAAA,OA9uDhDusD,CAAoC1hG,GAA1C,GAJsC,OAGpCiqF,EAAA90C,EAAA,SAHoC,OAK/B+0C,EAAA/0C,GAL+BkJ,EAAAlJ,GAAA,SADI,KAAhD,GAvB6D,OAqC7D,IArC6Dn1C,EAqCzDo2C,EAAJ,CAAAjB,EAAArO,EAAA,SAII,OADEijD,EAAA50C,EAAA,GACFoO,EAAApO,EAzCyDn1C,EAyCnDo2C,EAAAurD,aAAyB,MAA/B,GAzCyD,OAwCvD1X,EAAA90C,EAAA,SAxCuD,OA0ClD+0C,EAAA/0C,GA1CkD,OAAAn1C,EA8C3Do2C,EAAc,KA9C6C,OAAAp2C,EAkD7DP,EAAuB,KAlDsCO,EAmD7Dq+C,EAAAoH,QAnD6DzlD,EAoD7DmjD,EAAkB,KApD2CnjD,EAqD7Dq9C,EAA0B,GArDmCr9C,EAsD7Do1C,EAAe,KAtD8Cp1C,EAuD7D6iD,EAAgB,KAvD6C7iD,EAwD7D21C,EAAwB,KAxDqC0I,EAAAlJ,GAAA,OAZrDysD,CAAA5hG,GAAN,IAPuD,OAQvDA,EAAAquD,EAAAvzC,UAHKq6B,EAAArO,EAAA,GALkD,QAqF3D1yC,EAAAytG,UAA4C,SAAS7hG,GACnDhF,KAAAo6C,EAAep1C,CAD4C,EA6K7D5L,EAAAg6F,GAAyC,SAASpuF,GAAO,IAAAu1B,EAAA,KACvD,IAAKv6B,KAAAmoD,EAgBH,OANAnoD,KAAAtR,EAAAs/F,GAA8BhpF,EAAO,aAAa,WAChDu1B,EAAAstB,EAAc,IAAIpN,GnBnUV,EAyBL,EA8hB+B,MmBrPyB,IAMtDzS,QAAAloB,UAGT9f,KAAAo7C,EAAcp2C,EAEdhF,KAAAtR,EAAAs/F,GAA8BhuF,KAAAo7C,EAAa,QAAQ,WA2nCnD,IAAK,IAAIp2C,EAAI,EAAGA,EA3nCyCu1B,EA2nCrCy2B,EAAAxiE,OAAoCwW,IACtD+8F,GA5nCuDxnE,EAAAA,EA4nC9By2B,EAA4BhsD,IA5nCEu1B,EA+nCzDunE,IAA4B,EA/nC6BvnE,EAgoCzDy2B,EAA8B,EAhoC2B,IAGzDhsD,GADIA,EAAehF,KAAAo7C,EAAAurD,aAAyB3mG,KAAAmoD,IAC7B,OAAmB,SAASnjD,GACzC,OAAOgjC,QAAAC,OAAe,IAAIwS,GnBjVhB,EAyBL,EAkfsB,KmBtLvBz1C,EAAA5F,SALgD,IAQtD,IAAI+6C,EAAuBmqD,GAAAtkG,MAE3B,OAAOgoC,QAAA20C,IAAY,CAAC33E,EAAcm1C,IAA3Bz6B,MAAuD,WAC5D,GAAI6a,EAAAA,EAAsB,OAAOyN,QAAAC,SAEjCu8D,GAAAjqE,GACKA,EAAA91B,EAAAu+F,SAAAx0G,QACA+rC,EAAA8nB,EAAA7zD,QAKH+rC,EAAA7rC,EAAAu0D,EAA0B1oB,EAAA6gB,EAAa,aAF5B,SAACp2C,GACR,OAAA2/F,GAAApqE,EAAiBv1B,EAAAu+F,aAAgB,IAAI70C,WAAW1pD,EAAAg+F,UAAhD,GAT4D,IAA7D,OAYE,SAACh+F,GACR,IAAIu1B,EAAAA,EACJ,OAAOyN,QAAAC,OAAejjC,EAFJ,GA/CmC,EAyLzD5L,EAAAqpG,UAA4C,WAC1C,OAAOziG,KAAAyE,EAAuBzE,KAAAyE,EAAAg+F,UAAiC,EADV,EA4CvDrpG,EAAAomG,GAAgD,WAK9C,IAHA,IAAIx6F,EAAM6kC,IAEJtP,EAAWv6B,KAAAgF,EAAAwM,OACjB2oC,GAAA5f,EAAAggB,EAAsBhgB,IAAtBvkB,QAAAmkC,EAAA3mB,KAAA2mB,EAAA5f,EAAAvkB,OAAWmkC,EAAXA,EAAA7mD,MACOulD,MAAMsB,EAAA6nD,cACTh9F,EAAMrO,KAAAm6C,IAAS9rC,EAAKm1C,EAAA6nD,aAIxB,OAAOh9F,CAXkD,EA0c3D5L,EAAAgsG,GAAoD,SAASpgG,GACvDhF,KAaIo6C,EAAA0sD,gCAbJ9mG,KAcIo7C,EAAA8tC,SAdJlpF,KAc2B8hG,GAb7B9hG,KAAAgxD,EAAA39D,KAAiC2R,GAEjC+8F,GAAA/hG,KAAyBgF,EAJuC,EA2PpE5L,EAAAisG,GAAuD,SAASrgG,GACxDA,EAA0CA,EAAAf,OAGhD,IAAMs2B,EAAQv6B,KAAAgF,EAAAjF,IAAyBiF,GAEnCm1C,GAAiB,EADFn1C,EAAA+hG,YAGnB1oF,QAAqB,SAASrZ,EAAQjE,GAKpC,GAAoB,iBAATA,EAAmB,CAC5B,IAAIq5C,EAAMr5C,EACVA,EAAmCiE,EACnCA,EAA+Bo1C,CAHH,CAe9B,GAAsC,2BAAlCp6C,KAAAyE,EAAAg+F,WACoB,IAApB1hG,EAAAuuD,aH1zCGmxC,GAAuC,SG2zCV,CAGlC,IAAI54C,GADAzN,EAAW,IAAI4T,SAASjtD,IAChB6tD,UAAmB,GAAG,GAC9BxM,EAAQhI,EAAAqU,UAAmB,GAAG,GAC9BrT,EAAQhB,EAAAqU,UAAmB,GAAG,GAElCrU,EAAAgjB,UAAmB,EAAGvV,GAAO,GAC7BzN,EAAA6mD,UAAmB,EAAG7+C,GAAO,GAC7BhI,EAAA6mD,UAAmB,EAAG7lD,GAAO,EATK,CAiBE,2BAAlCp7C,KAAAyE,EAAAg+F,WACU,kBAAVz9F,IACFA,EAAS,UAGG,kBAAVA,IACFu1B,EAAAy8C,QAAe,GAWH,WAAVhyE,IACFm1C,GAAiB,GAGfC,EAAWonD,GAAiC,IAAI9yC,WAAW3tD,SAE/DutF,GAAAzwF,IAA2Bu8C,EAAUp1C,EA9DM,EAAxBkkB,KA+DdlpB,OAKP,IAAIe,EAAoBiE,EAAAg9F,WAAqB95F,KAAA/S,OACrB,EAApB4L,GAA0Bo5C,GAAsC,IAApBp5C,IAG1Cw5B,IAAUA,EAAAq0D,KAEZ5uF,KAAAgF,EAAA,OAA4BA,GAC5BA,EAAA6zE,QAAA,OAAsB,WAAO,KAI5BysB,GAAAtlG,QAMLA,KAAAoiD,EAAAtiC,UAOA9f,KAAA07C,EAAAkV,EACmBo2C,IArGkD,EA0oBvE,IAAAP,GAAuC,EAQvCN,GAA8C,EAO9Ca,GAA+C,GCh9D7C,SAAAC,KAEEjnG,KAAAyE,EAAyB,IAAIyiG,MAAAC,IAAAC,cAG7BpnG,KAAA6nD,EAAsB,GAMtB7nD,KAAAo6C,EAAmB,CAAC,CAXR,CAmEd,SAAAitD,KAAe,CC3EuB,SAAAC,GAAStiG,GAG/C,OAFKA,GAEW,GAAZA,EAAAxW,QAAyC,KAAxBwW,EAAAY,IAAM,GAAKZ,EAAAW,MAAQ,GAAkB,KACnDX,EAAAxW,OAAWwW,EAAAY,IAAMZ,EAAAxW,OAAW,GAAK,IAJU,CAmBX,SAAA+4G,GAASviG,EAAGu1B,EAAM4f,GAKzD,OALyDA,OAAA,IAAAA,EAAgB,EAAhBA,KACpDn1C,IAAMA,EAAAxW,QAEK,GAAZwW,EAAAxW,QAAyC,KAAxBwW,EAAAY,IAAM,GAAKZ,EAAAW,MAAQ,IAEpC40B,EAAOv1B,EAAAY,IAAMZ,EAAAxW,OAAW,KAKpB+rC,EAAO4f,GAAiBn1C,EAAAW,MAAQ,EAVoC,CAwBhC,SAAA6hG,GAASxiG,EAAGu1B,GAGxD,IAFKv1B,IAAMA,EAAAxW,QAEK,GAAZwW,EAAAxW,QAAyC,KAAxBwW,EAAAY,IAAM,GAAKZ,EAAAW,MAAQ,GAAW,OAAO,EAU1D,IADA,IAAIw0C,EAAS,EACJp5C,EAAIiE,EAAAxW,OAAW,EAAQ,GAALuS,GAAUiE,EAAAY,IAAM7E,GAAKw5B,IAAQx5B,EACtDo5C,GAAUn1C,EAAAY,IAAM7E,GAAKpK,KAAAw5F,IAASnrF,EAAAW,MAAQ5E,GAAIw5B,GAG5C,OAAO4f,CAjBuD,CA6DlB,SAAAstD,GAASziG,GACrD,IAAKA,EAAG,MAAO,GAEf,IADA,IAAIu1B,EAAM,GACD4f,EAAI,EAAGA,EAAIn1C,EAAAxW,OAAU2rD,IAC5B5f,EAAAlnC,KAAS,CAACsS,MAAOX,EAAAW,MAAQw0C,GAAIv0C,IAAKZ,EAAAY,IAAMu0C,KAE1C,OAAO5f,CANiD,CD/ExD0sE,GAAAvyG,UAAAk8B,KAAA,SAAK5rB,GACH,IAAMu1B,EAAQ2sE,MAAAC,IAAA1vC,MAERzyD,EAAY,IAAI0pD,WAAW1pD,GACjChF,KAAA6nD,EAAsBttB,EAAAmtE,cAAoB1iG,GAC1ChF,KAAAo6C,EAAmB7f,EAAAk+B,UAAgBzzD,GACnChF,KAAAyE,EAAAmsB,MANS,EAYXq2E,GAAAvyG,UAAAsQ,EAAA,SAAUA,EAAMu1B,GACd,IAAM4f,EAAe,IAAIuU,WAAW1pD,IAC9Bm1C,EAAan6C,KAAAyE,EAAAshG,MACb5rD,EAAcn6C,KAAA6nD,EAAqB7nD,KAAAo6C,KACvBD,EAAAwtD,UAChBptE,EAAW4f,EAAAwtD,UAKb3nG,KAAAyE,EAAAmjG,qBAV0B,EAgB5BX,GAAAvyG,UAAA6lC,EAAA,WACEv6B,KAAAyE,EAAAojG,oBADM,EA2BRR,GAAA3yG,UAAAk8B,KAAA,WAAY,EAKZy2E,GAAA3yG,UAAAsQ,EAAA,WAA6B,EAK7BqiG,GAAA3yG,UAAA6lC,EAAA,WAAS,EE7Hc,IAAAs0D,GAAA,CAqBHiZ,GAA6B,SAAS9iG,EAAOu1B,GACjE,OAAOv1B,EAAAy3E,OAAa,SAASz3E,EAAUu1B,EAAS6f,GAC9C,OAAO7f,EAAA,MAAcv1B,EAAAkkB,KAAc,KAAMkxB,GADW,EAAlClxB,KAEb,KAAMqR,GAAWyN,QAAAC,SAHmD,EAgBvD24D,GAAiB,SAAS57F,EAAKu1B,GACnD,OAAOv1B,EAAAmoB,OAAWoN,EADuC,EAQrC0lE,GAAO,WAAY,EAUnB8H,GAAY,SAAS/iG,GACzC,OAAgB,MAATA,CADyC,GCnCL,SAAAgjG,GAAShjG,EAAUu1B,GAE9D,GAA2B,GAAvBA,EAAA/rC,OACF,OAAOwW,EAGT,IAAIm1C,EACA5f,EAAAhT,KAAiB,SAASviB,GAAO,OAAO,IAAImsF,EAASnsF,EAAtB,IAGnC,OAAOA,EAAAuiB,KAAa,SAASviB,GAAO,OAAO,IAAImsF,EAASnsF,EAAtB,IAA3BuiB,KACA,SAASviB,GAAQ,OAAOm1C,EAAA5yB,IAAmBviB,EAAA8a,QAAAoJ,KAAkBlkB,GAA9C,IADfy3E,OATYoS,GAWT+R,GAA2B,IAF9Br5E,KAGA,SAASviB,GAAO,OAAOA,EAAAtL,UAAT,GAbuD,CAwB/B,SAAAuuG,GAASjjG,EAAWu1B,GACjE,MAAO,CACLkoE,UAAWz9F,EACX09F,iBAAkB,GAClBC,+BAA+B,EAC/BC,yBAAyB,EACzBC,gBAAiB,GACjBC,gBAAiB,GACjBC,kBAAmB,KACnBC,SAAUzoE,GAAY,GACtB0oE,OAAQ,GAViE,CAkB7E,IAAAiF,GAA6C,CAC3C1Y,GAAO,QACPsD,GAAO,QACPqV,GAAM,OACNC,GAAa,eAqBfC,GAA+D,EAAI,GCrE1C,SAAAxY,KAEvB7vF,KAAAyE,EAAsB,IAAIyiG,MAAAC,IAAAmB,WAAqB,CAC7CC,wBAA0B,IAI5BvoG,KAAAgF,EAAwB,KAGxBhF,KAAA6nD,EAAuB,GAGvB7nD,KAAAu6B,EAAiB,GAGjBv6B,KAAAo6C,GAAsB,EAEtBp6C,KAAAyE,EAAAqjD,GAAuB,OAAQ9nD,KAAAtR,EAAAw6B,KAAwBlpB,OAEvDA,KAAAyE,EAAAqjD,GAAuB,OAAQ9nD,KAAAmoD,EAAAj/B,KAA0BlpB,MApBvB,CAwCC,SAAAwoG,GAASxjG,EAAUu1B,GACtD,SAAKlhC,EAAA6tG,OAoBwD,QApBFliG,EAoBpDxI,cAAAmC,MAA6B,KAAK,GAAlCA,MAA2C,KAAK,MAhBnD47B,EACKqmD,YAAAC,gBAFa4nB,GAE+BluE,EAAav1B,IAG3D47E,YAAAC,gBALe4nB,GDEf,QCIuCzjG,KAC1C47E,YAAAC,gBAPkB4nB,GDCf,QCM4DzjG,IAXA,CA+B5B,SAAAyjG,GAASzjG,EAAau1B,GAE7D,IAAI4f,EAAc5f,EAAAx7B,QAAmB,QAAS,OD3BvC,SC4BHiG,IACFm1C,EAAcA,EAAAp7C,QAAoB,QAAS,UAS7C,IAAIgC,EAAQ,2BAAAglD,KAAgC5L,GAC5C,GAAIp5C,EAAO,CACT,IAAIq5C,EAAiB,QAEjByN,EAAU9mD,EAAM,GAYhBonD,EAAQT,OAAO3mD,EAAM,IAGzBq5C,GAde,MAAXyN,EACFzN,EAAkB,OACE,MAAXyN,EACTzN,EAAkB,OAIlBA,EAAkB,SAOD+N,GAAS,GAAVzuD,SAAsB,IACxC0gD,IAA2B,GAAR+N,GAADzuD,SAAuB,IAEzCygD,EAAcA,EAAAp7C,QAAoBgC,EAAM,GAAIq5C,EArBnC,CAwBX,OAAOD,CAtCkE,CC1E1D,SAAA20C,GAAS9pF,EAAWu1B,EAAS4f,GAO5Cn6C,KAAA0oG,UAAiB1jG,EAMjBhF,KAAA2oG,UAAiBC,GAMjB5oG,KAAA6oG,QAAetuE,EAMfv6B,KAAAsiB,QAAe63B,EAMfn6C,KAAA8oG,OAAc,IAAIC,GAMlB/oG,KAAAgpG,SAAgB,KAMhBhpG,KAAAipG,cAAqB/V,GAMrBlzF,KAAAsnB,KAAY,IAMZtnB,KAAAkpG,UAAiBC,GAMjBnpG,KAAAopG,YAAmBC,GAMnBrpG,KAAAspG,mBAA0BC,GAM1BvpG,KAAAwpG,KAAY,KAMZxpG,KAAAypG,WAAkB,GAOlBzpG,KAAA0pG,UAAiBC,GAOjB3pG,KAAA4pG,aAAoBC,GAwBpB7pG,KAAA8pG,SANA9pG,KAAA+pG,gBANA/pG,KAAAgqG,gBANAhqG,KAAA6O,MAAa,GAwBb7O,KAAAiqG,WAAkB5E,GAMlBrlG,KAAAkqG,UAAiBC,GAMjBnqG,KAAAoqG,WAAkB,GAMlBpqG,KAAAqqG,eAAsB,GAMtBrqG,KAAAsqG,UAAgB,EAMhBtqG,KAAAw6B,GAAU,EAzJ2C,CD8BvDq1D,GAAAn7F,UAAA00B,QAA2C,WAGzC,OAFAppB,KAAAyE,EAAA8lG,UACAvqG,KAAAyE,EAAsB,KACfujC,QAAAloB,SAH6C,EAgItD+vE,GAAAn7F,UAAAhG,EAAiD,SAASsW,GACxDhF,KAAAu6B,EAAiBv1B,EAAA2iG,SACjB,IAAIptE,EAAkB,IAAIm0B,WAAW1pD,EAAArS,KAAA28D,WACjCtqD,EAAAwlG,YAAAl7C,YACJ/0B,EAAA18B,IAAoBmH,EAAAwlG,YAAqB,GACzCjwE,EAAA18B,IAAoBmH,EAAArS,KAAcqS,EAAAwlG,YAAAl7C,YAClCtvD,KAAA6nD,EAAAx0D,KAA0BknC,EANuC,EAenEs1D,GAAAn7F,UAAAyzD,EAAmD,WACjD,IAAInjD,EAAS,CACXrS,KAAM+uG,GAAAvlF,MAAwC,KAAMnc,KAAA6nD,GACpD8/C,SAAU3nG,KAAAu6B,GAGZv6B,KAAAgF,EAAA8a,QAA8B9a,GAC9BhF,KAAAo6C,GAAsB,CAPsC,EC7K9DgX,EAAA,iBAAA09B,QAqKEoE,GAAQ,OAJVpE,G9DukBEma,c8DvkB6B,CAC7BwB,KAAQ,YACRC,MAAS,aACTC,OAAU,SACVC,KAAQ1X,IAWR,IAAAiW,GAAU,SAHZ/D,GAA2B,CACzBqF,KAAQ,OACRC,MAAS,QACTC,OAAUxB,GACV0B,MAAS,QACTC,IAAO,OALThc,G9D2jBEoa,U8D3jBF9D,GAmBE,IAAAyE,GAAS,QAHXkB,GAA8B,CAC5BC,OAAU,SACVL,OAAU,SACVM,MAASpB,IAHX/a,G9D2iBE8a,a8D3iBFmB,GAYE,IAAAnC,GAA4B,MAD9B9Z,G9DgiBE6Z,U8DhiByB,CACzBuC,yBAA4BtC,GAC5BuC,yBAA4B,OAS5B,IAAA9B,GAA4B,gBAD9Bva,G9DshBEsa,Y8DthB2B,CAC3BgC,yBAA4B/B,GAC5BgC,uBAA0B,cAC1BC,uBAA0B,mBAS1B/B,GAAe,EADjBza,G9D2gBEwa,mB8D3gBkC,CAClCiC,YAAehC,GACfiC,WAAc,GAUd,IAAA7B,GAAS,QAFX8B,GAA2B,CACzBd,OAAU,SACVE,MAASlB,GACTmB,IAAO,OAHThc,G9DigBE4a,U8DjgBF+B,GAcE,IAAApG,GAAU,IADZvW,G9DofEmb,W8Dpf0B,CAC1ByB,OAAUrG,GACVsG,KAAQ,KASR,IAAAxB,GAAU,SADZyB,GAA2B,CACzBF,OAAUvB,GACV0B,OAAU,SACVC,QAAW,oBAuBU/C,KAOrB/oG,KAAAw6B,GAAU,GAwBVx6B,KAAA+rG,cANA/rG,KAAAgsG,cANAhsG,KAAAisG,gBANAjsG,KAAAksG,gBAAuB,EA8BvBlsG,KAAAwM,OANAxM,KAAAuM,MAAa,IAwBbvM,KAAAmsG,oBANAnsG,KAAAosG,WANApsG,KAAAqsG,YAAmBC,GAkBnBtsG,KAAAusG,OAAcC,EAnEkB,CA1BlC1d,G9D0eEob,U8D1eF0B,GAWA9c,G9D+dEub,e8D/d8B,CAC9BoC,UAAa,YACbC,aAAgB,cAChBC,SAAY,YAYdv7C,EAAA,uBAAA23C,IA6EE,IAAAuD,GAAc,EAFhBvD,G9DqYE1uC,M8DrY2B,CAC3BuyC,GAAM,EACNpB,WAAcc,GACdO,MAAS,GAST,IAAAL,GAAQ,GC7Wc,SAAAM,GAAS9nG,GAE/BhF,KAAA6nD,EAAe,KAGf7nD,KAAAu6B,EAAkBv1B,EAMlBhF,KAAAo6C,EAHAp6C,KAAAo7C,EAAwB,EAMxBp7C,KAAAmoD,EAAwBte,IAMxB7pC,KAAAgF,EAHAhF,KAAAyE,EAAoB,KAMpBzE,KAAAoiD,EAAgC,GAYhCpiD,KAAAtR,EAA0B,IAAIuM,GAnCY,CD4W5C8tG,G9D0XEgE,W8D1XgC,CAChCC,KAAQR,GACRS,GAAM,MCtUR,IAAAC,GAAmC,CAAC,EA0BI,SAAAC,GAASnoG,GAK/C,SAJIkoG,GAAiCloG,IAIjC3L,EAAA6tG,OXmByC,uBWlBzCliG,EANqD,CAsCd,SAAAooG,GAAApoG,EAASu1B,GXdP,uBWiBzCA,IAQJv1B,EAAA6iD,EAAe,IAJDqlD,GAAiC3yE,GAPe,UAiQD8yE,GAAAroG,EAC3Du1B,EAAgB4f,EAAWp5C,EAASq5C,GAItC,IAHA,IAAMyN,EAAkB1N,EAAY,IAAMp5C,EACpConD,EAAc,IAAIltD,IAExBw1D,GAAAl2B,EAAAggB,EAAsBhgB,IAAtBvkB,QAAAy6C,EAAAj9B,KAAAi9B,EAAAl2B,EAAAvkB,OAAsC,CAAtC,IAAWosC,EAAXqO,EAAAn9D,MACQm9D,EAAKrO,EAAAkrD,OACNnlD,EAAA/kD,IAAgBqtD,IACnBtI,EAAAtqD,IAAgB4yD,EAAI,IAAIx1D,KAErBktD,EAAApoD,IAAgB0wD,GAAhBrtD,IAAwBykD,IAC3BM,EAAApoD,IAAgB0wD,GAAhB5yD,IAAwBgqD,EAAiB,IAK3CzF,EAAAsmD,WAAqBtuD,EACrBgI,EAAAymD,SAAmBzuD,EAGfgI,EAAAsmD,WAAqB1jG,EAAAo1C,GACrBgI,EAAAsmD,UAAoB1jG,EAAAmjD,IAKlB/F,EAAM,IAAI0sC,GACZ1sC,EAAAsmD,UAAmBtmD,EAAAymD,QAAiBzmD,EAAA3/C,MACxC0lD,EAAApoD,IAAgB0wD,GAAhB1wD,IAAwB8nD,GAAxBx0D,KAA8C+uD,GAC1CqO,GAAMzrD,EAAAo9C,GACRp9C,EAAAu1B,EAAA0wB,OAAuB,CAAC7I,IAzBU,CA6BtC,IAAAyF,GAAAzN,EAAAG,EAAiB4N,EAAA32C,SAAjBwE,QAAA6xC,EAAAr0B,KAAAq0B,EAAAzN,EAAApkC,OAIE,IAJS6xC,EAAXA,EAAAv0D,MACO0R,EAAAtW,EAAA0U,IAA4BykD,IAC/B7iD,EAAAtW,EAAAmP,IAA4BgqD,EAAI,IAAI5sD,KAEtCw1D,GAAAl2B,EAAAggB,EAA8B4N,EAAApoD,IAAgB8nD,GAAhBr2C,SAA9BwE,QAAAy6C,EAAAj9B,KAAAi9B,EAAAl2B,EAAAvkB,OAAWy6C,EAAXA,EAAAn9D,MACQ8uD,EAAO+F,EAAApoD,IAAgB8nD,GAAhB9nD,IAAwB0wD,GACrCzrD,EAAAtW,EAAAqR,IAA4B8nD,GAA5BhqD,IAAoC4yD,EAAiBrO,GAKvDp9C,EAAAP,EADuB,MAArBO,EAAAP,EACkB9N,KAAAw5F,IAASh2C,EAAWn1C,EAAAo1C,GAEpBzjD,KAAAm6C,IAChB9rC,EAAAP,EAAmB9N,KAAAw5F,IAASh2C,EAAWn1C,EAAAo1C,IAG7Cp1C,EAAAA,EAAkBrO,KAAAw5F,IACdnrF,EAAAA,EAAiBrO,KAAAm6C,IAAS/vC,EAASiE,EAAAmjD,GAnDqB,CCrV9B,SAAA8oB,GAC5BjsE,EAAOu1B,EAAqB4f,GAE9Bn6C,KAAAo6C,EAAcp1C,EAGdhF,KAAA6nD,EAAsB1N,EAItBn6C,KAAAgF,EAAsB,CAAC,EAGvBhF,KAAAyE,EAAmB,KAMnBzE,KAAAu6B,EAAe,CAAC,EAGhBv6B,KAAAtR,EAAqB,IAAIksD,GAGzB56C,KAAAqjD,GAAkB,EAGlBrjD,KAAAoiD,EAAoB,CAAC,EAGrBpiD,KAAAo7C,EAAsB7gB,EAMqBv1B,EAH3ChF,KAAAqiD,EAAwB,IAAI2O,GA2BxBz2B,EAAc,IAAIqmD,YAxBF5gF,KA2BpBtR,EAAAs/F,GAA8BzzD,EAAa,aAAcv1B,EAAA8a,SA3BrC9f,KA4BpBo6C,EAAA1hC,IAAkBkxD,GAA8CrvC,GA5BhEv6B,KAAAmoD,EA8BO5tB,CAlEsC,CD0B/C62B,EAAA,wCAAuC,SAASpsD,EAAUu1B,GACxD2yE,GAAiCloG,GAAYu1B,CADmB,IASlE62B,EAAA,0CAAyC,SAASpsD,UACzCkoG,GAAiCloG,EADkB,IAwB5D8nG,GAAAp4G,UAAA00B,QAA0C,WAKxC,OAHAppB,KAAAu6B,EADAv6B,KAAA6nD,EAAe,KAEf7nD,KAAAtR,EAAA+7D,QAEOziB,QAAAloB,SAL4C,EA6CrDgtF,GAAAp4G,UAAAytG,GAA+C,SAASn9F,GAWtD,IAEE,OADchF,KAAA6nD,EAAA0lD,WAAwB,IAAI7+C,WAAW1pD,GAR5C,CACTwoG,YAAa,EACbC,aAAc,KACdC,WAAY,IAMG,GAARhF,SAFL,CAGF,MAAOvuD,GAGP,MAAM,IAAIM,G1B/BA,EAaJ,EA+I4B,K0BzH9BN,EAPc,CAd0C,EAsFhE2yD,GAAAp4G,UAAAoxF,OAAyC,SAAS9gF,EAAWu1B,GAE3D,OAAOyN,QAAAloB,UAAAJ,KAAuB,YACxB1f,KAAAu6B,IAAmBv6B,KAAAu6B,EAAAurD,OAAuB9gF,EAAWu1B,IAC9B,MAArBv6B,KAAAyE,GAQE81B,GAAWv6B,KAAAyE,GAAqBO,GAAahF,KAAAgF,IAEtCA,GAAahF,KAAAyE,GACb81B,GAAWv6B,KAAAgF,EAEpBhF,KAAAyE,EAAoBzE,KAAAgF,EAAkB,KAC7BA,GAAahF,KAAAyE,GACb81B,EAAUv6B,KAAAgF,EAEnBhF,KAAAyE,EAAoB81B,EACXv1B,EAAYhF,KAAAyE,GACZ81B,GAAWv6B,KAAAgF,IAEpBhF,KAAAgF,EAAkBA,GAvBe,EAAXkkB,KA+BvBlpB,MAjC6D,EAyGtE8sG,GAAAp4G,UAAAi5G,GAA6C,SAAS3oG,GACpDhF,KAAAu6B,EAAA0wB,OAAuBjmD,EADmC,EAA5D8nG,GAAAp4G,U/DyaEk5G,W+DzaFd,GAAAp4G,UAAAi5G,MAgBAj5G,UAAA+rG,GACI,SAASz7F,EAAIu1B,GACfv6B,KAAAoiD,EAAgCp9C,EAEhC,IAAMm1C,EAAcn6C,KAAAtR,EAAAqR,IAA4BiF,GAChD,GAAIm1C,EACF,IADe,IACfp5C,EAAAw5C,EAA8BJ,EAAA3oC,QAA9B4oC,EAAAr5C,EAAAiV,QAAAokC,EAAA5mB,KAAA4mB,EAAAr5C,EAAAiV,QAEMokC,EAAOD,EAAAp6C,IAFbq6C,EAAA9mD,UAII8mD,EAAOA,EAAAwiC,QAAY,SAAC53E,GAAM,OAAAA,EAAA6jG,SAAatuE,CAAb,IAC1Bv6B,KAAAu6B,EAAA0wB,OAAuB7Q,GAVC,EADhC0yD,GAAAp4G,U/DyZEm5G,2B+DzZFf,GAAAp4G,UAAA+rG,GCxQA,IAAA72B,GAAgDvwE,EAAAyjF,IAAAI,gBA4CE,SAAA5pB,GAAStuD,GACzD,IAAIu1B,EAAe4lE,GACfn7F,EAAAqmD,SAAiBrmD,EAAAi/F,QACjB9pD,EZvGJ,SAAuBn1C,GACrB,IAAMu1B,EAAa,CAACv1B,EAAAqmD,UAUpB,OAR2Bg1C,GAC3BhiF,SAA2B,SAAC87B,EAASp5C,GACnC,IAAMq5C,EAAQp1C,EAAOjE,GACjBq5C,GACF7f,EAAAlnC,KAAgB8mD,EAAU,KAAOC,EAAQ,IAHM,IAO5C7f,EAAAlJ,KAAgB,IAXM,CYuGRy8E,CAAqC9oG,GAC5D,OAAOmoG,GAAsC5yE,IACzCqmD,YAAAC,gBAA4B1mC,IAC5BquD,GAAmCjuE,EAAcv1B,EAAAxT,KANY,CAkNd,SAAAwhF,GAAAhuE,EAASu1B,GACvDv1B,EAAAP,IACHO,EAAAP,EAAmB,IAAIqoG,GAAsB9nG,EAAA6iD,IAE/CulD,GAAApoG,EAAAP,EAA4B81B,EAJ0C,CAuBlB,SAAAwzE,GAAA/oG,EAASu1B,GAE7D,GJ5SM,QI4SFA,EACK,IAAA4f,EAAAn1C,EAAAP,ED7EFA,OL5QP01C,IM2VOA,EAAAozB,GAAAvoE,EAAAu1B,KN3VS,GAAZ4f,EAAA3rD,QAAyC,KAAxB2rD,EAAAv0C,IAAM,GAAKu0C,EAAAx0C,MAAQ,GAAkB,KAE1C,GAAZw0C,EAAA3rD,QAA8B,EAAb2rD,EAAAx0C,MAAQ,GAAe,EACrCw0C,EAAA3rD,OAAW2rD,EAAAx0C,MAAQ,GAAK,KMqV/B,OAAAw0C,CAF0E,CAgBxB,SAAAsZ,GAAAzuD,EAASu1B,GAE3D,MJ5TM,QI4TFA,EACKv1B,EAAAP,EDpFFO,ECsFAsiG,GAAsC/5B,GAAAvoE,EAAkBu1B,GALS,CAmFnB,SAAAgzC,GAAAvoE,EAASu1B,GAC9D,IACE,OAAOv1B,EAAAA,EAAoBu1B,GAApBorD,QADL,CAEF,MAAOxrC,GAOP,OAAO,IAPW,CAHuD,CA8BzE,SAAA6zD,GAAAhpG,EAASu1B,EAAa4f,EAAMp5C,EAAWq5C,EAASyN,GAGlD,MJ9aM,QI8aFttB,WD/TFv1B,EAASu1B,EAAQ4f,EAAWp5C,GAI9B,OAAOinC,QAAAloB,UAAAJ,KAAuB,WAE5B,GAAK1f,KAAA6nD,GAAiB7nD,KAAAu6B,EAEtB,GAAiB,MAAb4f,GAAgC,MAAXp5C,EACvBf,KAAA6nD,EAAAomD,UAAuB,IAAIv/C,WAAWn0B,QADxC,CAMA,IAAIv1B,EAAO,CACTwoG,YAAaxtG,KAAAo7C,EACbqyD,aAActzD,EACduzD,WAAY3sG,GAKViE,EADUhF,KAAA6nD,EAAA0lD,WAAwB,IAAI7+C,WAAWn0B,GAASv1B,GAC3C43E,OAAe,SAAS53E,GACzC,OAAOA,EAAA0jG,WAAiB1oG,KAAAo6C,GACjBp1C,EAAA0jG,UAAgB1oG,KAAAmoD,CAFuB,EAAdj/B,KAG3BlpB,OAEPA,KAAAu6B,EAAA0wB,OAAuBjmD,GAME,MAArBhF,KAAAyE,IACFzE,KAAAyE,EAAoB9N,KAAAw5F,IAASh2C,EAAWn6C,KAAAo6C,IAS1Cp6C,KAAAgF,EAAkBrO,KAAAm6C,IAAS/vC,EAASf,KAAAmoD,EAnCpC,CAJuC,EAAXj/B,KAwCvBlkB,GA5CgC,CCgU9B8hE,CAAA9hE,EAAAP,EAA8B01C,EAAMp5C,EAAWq5C,GAC7Cp1C,EAAAo9C,EAAkB7nB,GHxWa,SAAAv1B,EAASu1B,GAGnDv1B,EAAAo1C,GAAsB,EACtBp1C,EAAAA,EAAwB,IAAIgsD,GAC5BhsD,EAAA6iD,EAAuB,GACvB7iD,EAAAu1B,EAAiB,GAEjB,IAAI4f,EAAY,IAAIuU,WAAWn0B,GAe/B,OAdAv1B,EAAAP,EAAApR,KAAyB8mD,GACzBn1C,EAAAP,EAAAypG,QAOIlpG,EAAAo1C,GACFp1C,EAAAA,EAAAijC,OAA6B,IAAIwS,GxB1BvB,EAgBH,EAkQa,OwBnPfz1C,EAAAA,CAvBkD,CGyWhDmpG,CAAAnpG,EAAAo9C,EAAkB7nB,GAAsB4f,GAAxCz6B,KACH,SAAS1a,GAcP,OAXKhF,KAAAyE,GACHuuE,GAAAhzE,KAAgB,YAIdgF,EAAA2iG,UAGF0F,GAAArtG,KAAAyE,EACIO,EAAA2iG,SAAyB5mG,EAAWq5C,EAFpCp6C,KAAAgF,EAAAs/E,MAAAvU,iBAICrC,GAAA1tE,KAAuBu6B,EAC1Bv6B,KAAAszD,GAAApqC,KAAkBlpB,KAAMu6B,EAAav1B,EAAArS,KAAAi9D,QAflB,EAAzB1mC,KAgBOlkB,KACF6iD,GAAqBxuD,EAAA6tG,QACzBliG,EAAAP,GACHuuE,GAAAhuE,EAAgB,YAID,MAAbjE,GAAgC,MAAXq5C,EACvBp1C,EAAAo2C,EAAAxqB,KAAyBupB,GAEzBn1C,EAAAo2C,EAAAp2C,EAA8Bm1C,GAAM,SAAC5f,GAC/BA,EAAA/rC,QAGF6+G,GArC6DroG,EAqC7DP,EACI81B,EAAUx5B,EAAWq5C,EAtCoCp1C,EAoCzDA,EAAAs/E,MAAAvU,gBAH0C,KAS7CrC,GAAA1oE,EACHu1B,EACAv1B,EAAAsuD,GAAApqC,KAAkBlkB,EAAMu1B,EAAa4f,IA5C0B,CAgGvB,SAAAi0D,GAAAppG,EAASu1B,GAEvD,MJ7gBM,QI6gBFA,EACGv1B,EAAAP,GAYLO,EAAAo2C,EAAA7gB,IAEOv1B,EAAAP,EAAAqhF,OAAwB,EAAGj8C,MAbzB7B,QAAAloB,UAgBJ4tD,GAAA1oE,EACHu1B,EACAv1B,EAAAguE,GAAA9pD,KAAkBlkB,EAAMu1B,EAAa,EAAGv1B,EAAAmjD,EAAAuB,UAtBwB,CA6TlE,SAAAgkB,GAAA1oE,EAASu1B,EAAa4f,GACxB,GAAIn1C,EAAAq+C,EAAiB,OAAOrb,QAAAC,SAQ5B,GANIkS,EAAY,CACdx0C,MAAOw0C,EACP/gD,EAAG,IAAI43D,IAEThsD,EAAAu1B,EAAaA,GAAblnC,KAA+B8mD,GAES,GAApCn1C,EAAAu1B,EAAaA,GAAb/rC,OACF,IACE2rD,EAAAx0C,OADE,CAEF,MAAO5E,GACe,sBAAlBA,EAAApP,KACFwoD,EAAA/gD,EAAA6uC,OAAmB,IAAIwS,G3BtxBjB,EAgBH,EA6Pe,K2B6gBdlgB,IAEJ4f,EAAA/gD,EAAA6uC,OAAmB,IAAIwS,G3B5xBjB,EAgBH,EA4OuB,K2BoiBtB15C,IAENivE,GAAAhrE,EAAmBu1B,EAdD,CAiBtB,OAAO4f,EAAA/gD,CA7BwB,CA0C7B,SAAA4rE,GAAAhgE,EAASu1B,GACX,GAAIv1B,EAAAq+C,EAAiB,OAAOrb,QAAAC,SAE5B,IAKSlnC,EALLo5C,EAAa,GAKjB,IAASp5C,KAAeiE,EAAAA,EAAqB,CAC3C,IAAIo1C,EAAQ,IAAI4W,GACZnJ,EAAY,CACdliD,MAAO,SAASX,GAASA,EAAA8a,SAAF,EAAhBoJ,KAA0C,KAAMkxB,GACvDhhD,EAAGghD,GAGLp1C,EAAAu1B,EAAax5B,GAAb1N,KAA+Bw0D,GAC/B1N,EAAA9mD,KAAgB+mD,GAEwB,GAApCp1C,EAAAu1B,EAAax5B,GAAbvS,QACFq5D,EAAAliD,OAXyC,CAiB7C,OAAOqiC,QAAA20C,IAAYxiC,GAAZz6B,KAA6B,WAYlC,IACE6a,GADE,CAEF,MAAO6nB,GACP,IAAAp9C,EAAMgjC,QAAAC,OAAe,IAAIwS,G3B11BjB,EAgBH,EA4OuB,K2BkmBxB2H,GALc,CASpB,IAAK,IAAIjI,KAAen6C,KAAAgF,EACtBgrE,GAAAhwE,KAAmBm6C,GAGrB,OAAOn1C,CA3BsC,EAAXkkB,KA4B7BlkB,GAAO,SAASA,GAoBrB,MAAMA,CApBsB,EAAhBkkB,KAqBPlkB,GA1ES,CAmFsC,SAAAgrE,GAAAhrE,EAASu1B,GAE/Dv1B,EAAAu1B,EAAaA,GAAbglB,QAEA,IAAIpF,EAAOn1C,EAAAu1B,EAAaA,GAAa,GACrC,GAAI4f,EACF,IACEA,EAAAx0C,OADE,CAEF,MAAO5E,GACPo5C,EAAA/gD,EAAA6uC,OAAc,IAAIwS,G3B94BV,EAgBH,EA4OuB,K2BspBxB15C,IACJivE,GAAAhrE,EAAmBu1B,EAND,CARsD,CC58B5E,SAAOozE,GAAsB3oG,EAASu1B,GAgBpC,OAXAv1B,EAAU02C,GAAwB12C,GAClCu1B,EAAUmhB,GAAwBnhB,GAKyBv1B,EAiTxCrG,MAAa,KA5SP,IAHkC47B,EA+SxC57B,MAAa,KA5SiB,EAhBJ,CAwC/C,SAAOg1D,GAAW3uD,EAAgBu1B,GAKhCv1B,EAAiB02C,GAAwB12C,GACzCu1B,EAAgBmhB,GAAwBnhB,GAKxC,IAAM4f,EAC+Bn1C,EAwQlBrG,MAAa,KAtQ1BoC,EAC+Bw5B,EAqQlB57B,MAAa,KAnQhC,OAAOw7C,EAAyB,IAAMp5C,EAAwB,IACpB,GAAnCo5C,EAAA3rD,QACkC,GAAlCuS,EAAAvS,MAnBwC,CA+EjD,SAAOktD,GAAU12C,GAGf,IAAMu1B,EAAav1B,EAAArG,MAAa,KAiBhC,OAbIqG,EAAWu1B,EAAW,IAAM,GAC5BA,EAASA,EAAW,IAAM,GAI9Bv1B,EAAWA,EAAAxI,cACXwI,EAAWokE,GAAArpE,IAA0BiF,IAAaA,GAKlDu1B,EAASA,EAAAsa,eAGF7vC,EAAW,IAAMu1B,EACjBv1B,CAtBgB,CAsGzB,SAAOwuD,GAAoBxuD,GAUzB,OAAIA,EAAAqpG,SACK3yD,GAAwB12C,EAAAqpG,UAG7BrpG,EAAAu/E,OAAiBv/E,EAAAu/E,MAAA8pB,SACZ3yD,GAAwB12C,EAAAu/E,MAAA8pB,UAG7BrpG,EAAAs/E,OAAiBt/E,EAAAs/E,MAAA+pB,SACZ3yD,GAAwB12C,EAAAs/E,MAAA+pB,UAI1B,KAvB2B,CAkCpC,SAAO7/B,GAAkBxpE,EAAQu1B,GAO/B,IAHA,IAAM4f,EAAauB,GAAwB12C,GAErCjE,EAAkB,IAAI1F,IAC5B++C,EAAAG,EAAqBhgB,GAArBstB,EAAAzN,EAAApkC,QAAA6xC,EAAAr0B,KAAAq0B,EAAAzN,EAAApkC,OACEjV,EAAApF,IAAoB+/C,GADtBmM,EAAAv0D,QAOA,IAAAu0D,GAAAzN,EAAAG,EAAqBx5C,IAArBiV,QAAA6xC,EAAAr0B,KAAAq0B,EAAAzN,EAAApkC,OACE,IADS6xC,EAAXA,EAAAv0D,QACgB6mD,EACZ,OAAO0N,EAOX,IAAAA,GAAAzN,EAAAG,EAAqBx5C,IAArBiV,QAAA6xC,EAAAr0B,KAAAq0B,EAAAzN,EAAApkC,OACE,GAAI29C,GADK9L,EAAXA,EAAAv0D,MACuC6mD,GACnC,OAAO0N,EAOX,IAAAA,GAAAzN,EAAAG,EAAqBx5C,IAArBiV,QAAA6xC,EAAAr0B,KAAAq0B,EAAAzN,EAAApkC,OAAsC,CACN,IAAAmyC,EADrBN,EAAXA,EAAAv0D,MACwCm9D,EAAAtW,EAAtC,GAvMFgO,EAAUzM,GAAwByM,GAClCsI,EAAU/U,GAAwB+U,GAK5BtI,EAAqDA,EA6NxCxpD,MAAa,KA3N1B8xD,EAAqDA,EA2NxC9xD,MAAa,KAzNG,GAA5BwpD,EAAA35D,QAC4B,GAA5BiiE,EAAAjiE,QACA25D,EAAkB,IAAMsI,EAAkB,GA4L7C,OAAO5I,CAF2B,CAStC,IAAAA,GAAA9mD,EAAAw5C,EAAqBx5C,IAArBiV,QAAA6xC,EAAAr0B,KAAAq0B,EAAA9mD,EAAAiV,OACE,GAAI29C,GAAyBxZ,EADpBC,EAAXyN,EAAAv0D,OAEI,OAAO8mD,EAKX,OAAO,IAhDqC,ED5GhDhhD,EAAA63E,GAAAv8E,WAAA00B,QAAkD,WAAW,IAAApkB,EAAA,KAE3DhF,KAAAqjD,GAAkB,EAElB,IAESlJ,EAFL5f,EAAU,GAEd,IAAS4f,KAAen6C,KAAAu6B,EAAc,CAEpC,IAAIx5B,EAAIf,KAAAu6B,EAAa4f,GACjBC,EAAar5C,EAAE,GAWnB,IARAf,KAAAu6B,EAAa4f,GAAep5C,EAAApH,MAAQ,EAAG,GAGnCygD,GACF7f,EAAAlnC,KAAa+mD,EAAAhhD,EAAA,MAfEy1F,GAeiBoR,KAIzB7lD,EAAI,EAAGA,EAAIr5C,EAAAvS,SAAY4rD,EAC9Br5C,EAAEq5C,GAAFhhD,EAAA6uC,QAfkC,CA0BtC,IAAK,IAAI4f,KAPL7nD,KAAAyE,GACF81B,EAAAlnC,KAAa2M,KAAAyE,EAAA2kB,WAEXppB,KAAA6nD,GACFttB,EAAAlnC,KAAa2M,KAAA6nD,EAAAz+B,WAGSppB,KAAAoiD,EACtB7nB,EAAAlnC,KAAa2M,KAAAoiD,EAAkByF,GAAlBz+B,WAGf,OAAO4e,QAAA20C,IAAYpiD,GAAZ7a,MAA0B,WAC3B1a,EAAAtW,IACFsW,EAAAtW,EAAAgxG,UACA16F,EAAAtW,EAAqB,MAGnBsW,EAAAo1C,IAEFp1C,EAAAo1C,EAAA99C,gBAA4B,OAC5B0I,EAAAo1C,EAAAguC,OACApjF,EAAAo1C,EAAc,MAGhBp1C,EAAAmjD,EAAoB,KACpBnjD,EAAAP,EAAmB,KACnBO,EAAA6iD,EAAsB,KACtB7iD,EAAAA,EAAsB,CAAC,EACvBA,EAAAo9C,EAAoB,CAAC,EACrBp9C,EAAAo2C,EAAsB,KAQtBp2C,EAAAu1B,EAAe,CAAC,CA1BqB,GApCoB,IA+F7D3J,KAA+C,SAC3C5rB,EAAeu1B,GAAiB,IAAA4f,EAAA,YAAA+H,GAAA,SAAA9H,IAClC,IAAMyN,EAD4B,OAAA12C,EAAAipC,GAAA,SAAAA,GAAA,OAAAA,EAAA+W,GAAA,OAGlC,OAFMtJ,EAAcqgD,GAEpB3/C,EAAAnO,EAAMD,EAAAkI,EAAN,GAHkC,OAKlCr9C,EAAAqZ,SAAsB,SAACrZ,EAAQo1C,GAK7B,IAAI+N,EAAWg4C,GACXn7F,EAAAqmD,SAAiBrmD,EAAAi/F,QACjB7pD,GAAeyN,EAAAsgD,GACjBn1B,GAAA74B,EAAgBgO,KAEX5tB,GAAoBqmD,YAAAC,gBAA4B14B,KACjDqgD,GAAmCrgD,EAAU/N,KAC/CD,EAAAiI,EAAkBhI,GAAe,IAAIy1C,GACrC1nC,EACIsgD,GAAuCruD,EAAa+N,IAEtDA,EAAehO,EAAAgO,EAAAg9B,gBAAkCh9B,GACrDhO,EAAAzrD,EAAAu0D,EACIkF,EAAc,QACdhO,EAAAm0D,GAAAplF,KAAmBixB,EAAMC,IAC7BD,EAAAzrD,EAAAu0D,EACIkF,EAAc,YACdhO,EAAAo0D,GAAArlF,KAAuBixB,EAAMC,IACjCD,EAAAn1C,EAAoBo1C,GAAe+N,EACnChO,EAAA5f,EAAa6f,GAAe,GAxBe,IALbiJ,EAAAjJ,GAAA,QAuIpChhD,EAAAsoG,GAA0D,SAAS18F,GASjE,GALAA,EAAA8xE,MADwB2wB,GACKznG,KAAAo6C,EAAAurC,UAC7B3gF,EAAAu/E,MAFwBkjB,GAEKl6B,GAAAvtE,KJzXtB,UI0XPgF,EAAAs/E,MAHwBmjB,GAGKl6B,GAAAvtE,KJ3XtB,UI4XPgF,EAAAvC,KAAY,GAERzC,KAAAyE,EAAkB,CACpB,IAAM81B,EAAQv6B,KAAAyE,ED7JTA,EC8JC01C,EAAMn6C,KAAAyE,EDrJPO,ECuJQ,MAATu1B,GAAwB,MAAP4f,GACnBn1C,EAAAvC,KAAApP,KAAe,CAACsS,MAAO40B,EAAO30B,IAAKu0C,GALjB,CATiD,EAkHzE/gD,EAAAqnG,GACI,SAASz7F,GAEX,IAAMu1B,EAAqBk5B,GAAAzzD,KJ1epB,UI0e6C,EACpDA,KAAAyE,EAAAg8F,GAA4Cz7F,EAAIu1B,EAHjC,IAejBurD,OACI,SAAS9gF,EAAau1B,EAAW4f,GAMnC,MJ5fM,QI4fFn1C,EACKhF,KAAAyE,EAAAqhF,OAAwBvrD,EAAW4f,GAErCuzB,GAAA1tE,KACHgF,EACAhF,KAAAgzE,GAAA9pD,KAAkBlpB,KAAMgF,EAAau1B,EAAW4f,GAXR,EAsD9C/gD,EAAA80G,MAAgD,SAASlpG,GAIvD,MJhjBM,QIgjBFA,EAEKgjC,QAAAloB,UAEF4tD,GAAA1tE,KACHgF,EACAhF,KAAAwuG,GAAAtlF,KAAiBlpB,KAAMgF,GAVyC,EAkEtE5L,EAAA4rF,YAAsD,SAAShgF,GAC7D,OAAOggE,GAAAhlE,KAA+B,WAIhCgF,EACFhF,KAAAmoD,EAAA68B,YAA8BhgF,GAE9BhF,KAAAmoD,EAAA68B,aAP6C,EAAX97D,KAS/BlpB,MAV8D,EAuBvE5G,EAAAq1G,GAAsD,SAASzpG,GAM7D,OAAOggE,GAAAhlE,KAA+B,WACpCA,KAAAmoD,EAAAuB,SAA6B1kD,CADkB,EAAXkkB,KAE/BlpB,MARgE,EAiBzE5G,EAAA65D,EAAsD,WACpD,OAAOjzD,KAAAmoD,EAAAuB,QADwD,EAYjEtwD,EAAAk6D,GACI,SAAStuD,EAAau1B,GAExBv6B,KAAAgF,EAAoBA,GAApB+gF,aAA8CxrD,EAFhB,IAahCy4C,GACI,SAAShuE,EAAau1B,EAAW4f,GAC/BA,GAAW5f,EAGbv6B,KAAAuuG,GAAkBvpG,GAKpBhF,KAAAgF,EAAoBA,GAApB8gF,OAAwCvrD,EAAW4f,EATP,EAoB9C/gD,EAAA4rE,GAAiD,SAAShgE,GAExD,IAAIu1B,EAAoBv6B,KAAAgF,EAAoBA,GAApB0pG,kBACpBv0D,EAAkBn6C,KAAAgF,EAAoBA,GAApB2pG,gBAItB3uG,KAAAgF,EAAoBA,GAApBoZ,QAGApe,KAAAgF,EAAoBA,GAApB0pG,kBAAqDn0E,EACrDv6B,KAAAgF,EAAoBA,GAApB2pG,gBAAmDx0D,EAGnDn6C,KAAAuuG,GAAkBvpG,EAdmD,EAyBvE5L,EAAAo1G,GAAiD,SAASxpG,GAOxDhF,KAAAo6C,EAAApiD,aAA2B,KAG3BgI,KAAAuuG,GAAkBvpG,EAVmD,EAoBvE5L,EAAAw1G,GACI,SAAS5pG,EAAau1B,GAGF,EAAlBA,IAEFA,GAAmB,MAGrBv6B,KAAAgF,EAAoBA,GAApB+qE,gBAAmDx1C,EAGnDv6B,KAAAuuG,GAAkBvpG,EAXuB,EAsB3C5L,EAAAy1G,GACI,SAAS7pG,EAAau1B,EAAmB4f,GAI3Cn6C,KAAAgF,EAAoBA,GAApB0pG,kBAAqD,EACrD1uG,KAAAgF,EAAoBA,GAApB2pG,gBAAmDx0D,EACnDn6C,KAAAgF,EAAoBA,GAApB0pG,kBAAqDn0E,EAGrDv6B,KAAAuuG,GAAkBvpG,EAT0C,IAkB9DspG,GACI,SAAStpG,GACKhF,KAAAu6B,EAAav1B,GAAa,GAK1C5L,EAAA6uC,OAAmB,IAAIwS,G3BnuBX,EAgBH,EAsOwB,K2B4etBz6C,KAAAo6C,EAAAh+B,MAAoBpc,KAAAo6C,EAAAh+B,MAAA/tB,KAAyB,GALzB,EAuBjC+K,EAAAm1G,GAAuD,SAASvpG,GAC9D,IAAIu1B,EAAYv6B,KAAAu6B,EAAav1B,GAAa,GAErCu1B,IAGLA,EAAAnhC,EAAA0mB,UACAkwD,GAAAhwE,KAAmBgF,GAPwD,ECze7E,IAAAokE,GAAmC,IAAInuE,IAAI,CACzC,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MAAO,CAAC,MAAO,MACpE,CAAC,MAA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","sources":["../node_modules/react-dom/cjs/react-dom-client.production.js","../node_modules/react/index.js","../mpegts/webpack/universalModuleDefinition","../mpegts/webpack/bootstrap","../mpegts/src/utils/logger.js","../mpegts/src/core/transmuxing-events.js","../mpegts/src/io/loader.js","../mpegts/src/utils/exception.js","../mpegts/src/utils/browser.js","../mpegts/src/demux/demux-errors.js","../mpegts/node_modules/events/events.js","../mpegts/src/core/media-segment-info.js","../mpegts/src/core/media-info.js","../mpegts/src/utils/logging-control.js","../mpegts/src/utils/utf8-conv.js","../mpegts/src/demux/amf-parser.js","../mpegts/src/demux/pat-pmt-pes.ts","../mpegts/src/demux/exp-golomb.js","../mpegts/src/demux/sps-parser.js","../mpegts/src/demux/h265-parser.js","../mpegts/src/demux/flv-demuxer.js","../mpegts/src/demux/base-demuxer.ts","../mpegts/src/demux/h264.ts","../mpegts/src/demux/mpeg4-audio.ts","../mpegts/src/demux/scte35.ts","../mpegts/src/demux/aac.ts","../mpegts/src/demux/pes-private-data.ts","../mpegts/src/demux/h265.ts","../mpegts/src/demux/ts-demuxer.ts","../mpegts/src/remux/mp4-generator.js","../mpegts/src/remux/aac-silent.js","../mpegts/src/remux/mp4-remuxer.js","../mpegts/src/core/transmuxing-controller.js","../mpegts/src/io/speed-sampler.js","../mpegts/src/io/fetch-stream-loader.js","../mpegts/src/io/xhr-moz-chunked-loader.js","../mpegts/src/io/xhr-range-loader.js","../mpegts/src/io/websocket-loader.js","../mpegts/src/io/range-seek-handler.js","../mpegts/src/io/param-seek-handler.js","../mpegts/src/io/io-controller.js","../mpegts/src/utils/polyfill.js","../mpegts/node_modules/webworkify-webpack/index.js","../mpegts/src/index.js","../mpegts/node_modules/es6-promise/dist/es6-promise.js","../mpegts/node_modules/process/browser.js","../mpegts/(webpack)/buildin/global.js","../mpegts/src/core/transmuxing-worker.js","../mpegts/src/config.js","../mpegts/src/core/features.js","../mpegts/src/player/player-events.js","../mpegts/src/core/transmuxer.js","../mpegts/src/core/mse-events.js","../mpegts/src/core/mse-controller.js","../mpegts/src/player/player-errors.js","../mpegts/src/player/mse-player.js","../mpegts/src/player/native-player.js","../mpegts/src/mpegts.js","../node_modules/react/cjs/react.production.js","../node_modules/react-dom/client.js","../node_modules/shaka-player/lib/util/dom_utils.js","../node_modules/shaka-player/third_party/closure/goog/base.js","../ [synthetic:util/defineproperty] ","../ [synthetic:util/global] ","../ [synthetic:es6/symbol] ","../ [synthetic:es6/util/makeiterator] ","../ [synthetic:util/polyfill] ","../ [synthetic:es6/execute_async_generator] ","../ [synthetic:es6/promise/promise] ","../ [synthetic:es6/promise/finally] ","../ [synthetic:util/objectcreate] ","../ [synthetic:es6/util/setprototypeof] ","../ [synthetic:es6/generator_engine] ","../ [synthetic:es6/util/arrayfromiterable] ","../ [synthetic:es6/util/arrayfromiterator] ","../ [synthetic:util/owns] ","../ [synthetic:util/findinternal] ","../ [synthetic:util/checkstringargs] ","../ [synthetic:es6/weakmap] ","../ [synthetic:es6/map] ","../ [synthetic:es6/set] ","../ [synthetic:es6/array/findindex] ","../ [synthetic:es6/array/keys] ","../ [synthetic:es6/util/iteratorfromarray] ","../ [synthetic:es6/object/is] ","../ [synthetic:es6/array/includes] ","../ [synthetic:es6/string/includes] ","../ [synthetic:es6/array/from] ","../ [synthetic:es6/string/startswith] ","../ [synthetic:es6/array/find] ","../node_modules/shaka-player/lib/abr/ewma.js","../node_modules/shaka-player/lib/abr/ewma_bandwidth_estimator.js","../node_modules/shaka-player/lib/debug/log.js","../node_modules/shaka-player/third_party/closure/goog/uri/utils.js","../node_modules/shaka-player/third_party/closure/goog/uri/uri.js","../node_modules/shaka-player/lib/util/delayed_tick.js","../node_modules/shaka-player/lib/util/timer.js","../node_modules/shaka-player/lib/net/backoff.js","../node_modules/shaka-player/lib/util/error.js","../node_modules/shaka-player/lib/util/public_promise.js","../node_modules/shaka-player/lib/util/abortable_operation.js","../node_modules/shaka-player/lib/util/fake_event.js","../node_modules/shaka-player/lib/util/multi_map.js","../node_modules/shaka-player/lib/util/fake_event_target.js","../node_modules/shaka-player/lib/util/object_utils.js","../node_modules/shaka-player/lib/util/array_utils.js","../node_modules/shaka-player/lib/util/operation_manager.js","../node_modules/shaka-player/lib/net/networking_engine.js","../ [synthetic:es6/util/inherits] ","../node_modules/shaka-player/lib/util/i_releasable.js","../node_modules/shaka-player/lib/util/event_manager.js","../node_modules/shaka-player/lib/util/iterables.js","../node_modules/shaka-player/lib/util/map_utils.js","../node_modules/shaka-player/lib/util/mime_utils.js","../node_modules/shaka-player/lib/util/platform.js","../node_modules/shaka-player/lib/util/string_utils.js","../node_modules/shaka-player/lib/util/uint8array_utils.js","../node_modules/shaka-player/lib/media/drm_engine.js","../node_modules/shaka-player/lib/media/closed_caption_parser.js","../node_modules/shaka-player/lib/media/time_ranges_utils.js","../node_modules/shaka-player/lib/util/functional.js","../node_modules/shaka-player/lib/util/manifest_parser_utils.js","../node_modules/shaka-player/lib/media/transmuxer.js","../node_modules/shaka-player/lib/text/cue.js","../node_modules/shaka-player/lib/text/text_engine.js","../node_modules/shaka-player/lib/media/media_source_engine.js","../node_modules/shaka-player/lib/util/language_utils.js","../node_modules/shaka-player/lib/util/stream_utils.js","../node_modules/shaka-player/lib/abr/simple_abr_manager.js","../node_modules/shaka-player/lib/deprecate/version.js","../node_modules/shaka-player/lib/deprecate/deprecate.js","../node_modules/shaka-player/lib/cast/cast_proxy.js","../node_modules/shaka-player/lib/deprecate/enforcer.js","../node_modules/shaka-player/lib/cast/cast_utils.js","../node_modules/shaka-player/lib/cast/cast_sender.js","../node_modules/shaka-player/lib/cast/cast_receiver.js","../node_modules/shaka-player/lib/util/xml_utils.js","../node_modules/shaka-player/lib/dash/content_protection.js","../node_modules/shaka-player/lib/dash/mpd_utils.js","../node_modules/shaka-player/lib/media/segment_reference.js","../node_modules/shaka-player/lib/util/data_view_reader.js","../node_modules/shaka-player/lib/util/ebml_parser.js","../node_modules/shaka-player/lib/util/mp4_parser.js","../node_modules/shaka-player/lib/media/mp4_segment_index_parser.js","../node_modules/shaka-player/lib/media/segment_index.js","../node_modules/shaka-player/lib/media/webm_segment_index_parser.js","../node_modules/shaka-player/lib/dash/segment_base.js","../node_modules/shaka-player/lib/dash/segment_list.js","../node_modules/shaka-player/lib/dash/segment_template.js","../node_modules/shaka-player/lib/media/manifest_parser.js","../node_modules/shaka-player/lib/media/presentation_timeline.js","../node_modules/shaka-player/lib/util/networking.js","../node_modules/shaka-player/lib/dash/dash_parser.js","../node_modules/shaka-player/lib/hls/hls_classes.js","../node_modules/shaka-player/lib/hls/hls_utils.js","../node_modules/shaka-player/lib/util/text_parser.js","../node_modules/shaka-player/lib/hls/manifest_text_parser.js","../node_modules/shaka-player/lib/net/data_uri_plugin.js","../node_modules/shaka-player/lib/hls/hls_parser.js","../node_modules/shaka-player/lib/media/active_stream_map.js","../node_modules/shaka-player/lib/media/adaptation_set.js","../node_modules/shaka-player/lib/media/adaptation_set_criteria.js","../node_modules/shaka-player/lib/media/buffering_observer.js","../node_modules/shaka-player/lib/media/stall_detector.js","../node_modules/shaka-player/lib/media/gap_jumping_controller.js","../node_modules/shaka-player/lib/media/playhead_observer.js","../node_modules/shaka-player/lib/util/periods.js","../node_modules/shaka-player/lib/media/period_observer.js","../node_modules/shaka-player/lib/media/play_rate_controller.js","../node_modules/shaka-player/lib/media/video_wrapper.js","../node_modules/shaka-player/lib/media/playhead.js","../node_modules/shaka-player/lib/media/region_timeline.js","../node_modules/shaka-player/lib/media/region_observer.js","../node_modules/shaka-player/lib/media/streaming_engine.js","../node_modules/shaka-player/lib/net/http_plugin_utils.js","../node_modules/shaka-player/lib/net/http_fetch_plugin.js","../node_modules/shaka-player/lib/net/http_xhr_plugin.js","../node_modules/shaka-player/lib/offline/download_progress_estimator.js","../node_modules/shaka-player/lib/offline/download_manager.js","../node_modules/shaka-player/lib/offline/indexeddb/db_operation.js","../node_modules/shaka-player/lib/offline/indexeddb/db_connection.js","../node_modules/shaka-player/lib/offline/indexeddb/eme_session_storage_cell.js","../node_modules/shaka-player/lib/offline/storage_muxer.js","../node_modules/shaka-player/lib/offline/indexeddb/storage_mechanism.js","../node_modules/shaka-player/lib/offline/indexeddb/v1_storage_cell.js","../node_modules/shaka-player/lib/offline/indexeddb/v2_storage_cell.js","../node_modules/shaka-player/lib/offline/offline_uri.js","../node_modules/shaka-player/lib/offline/manifest_converter.js","../node_modules/shaka-player/lib/offline/offline_manifest_parser.js","../node_modules/shaka-player/lib/offline/offline_scheme.js","../node_modules/shaka-player/lib/offline/session_deleter.js","../node_modules/shaka-player/lib/routing/walker.js","../node_modules/shaka-player/lib/player.js","../node_modules/shaka-player/lib/text/simple_text_displayer.js","../node_modules/shaka-player/lib/util/config_utils.js","../node_modules/shaka-player/lib/util/player_configuration.js","../node_modules/shaka-player/lib/util/state_history.js","../node_modules/shaka-player/lib/util/switch_history.js","../node_modules/shaka-player/lib/util/stats.js","../node_modules/shaka-player/lib/offline/stored_content_utils.js","../node_modules/shaka-player/lib/offline/stream_bandwidth_estimator.js","../node_modules/shaka-player/lib/util/destroyer.js","../node_modules/shaka-player/lib/util/manifest_filter.js","../node_modules/shaka-player/lib/offline/storage.js","../node_modules/shaka-player/lib/polyfill/all.js","../node_modules/shaka-player/lib/polyfill/patchedmediakeys_apple.js","../node_modules/shaka-player/lib/polyfill/patchedmediakeys_ms.js","../node_modules/shaka-player/lib/polyfill/fullscreen.js","../node_modules/shaka-player/lib/polyfill/input_event.js","../node_modules/shaka-player/lib/polyfill/mediasource.js","../node_modules/shaka-player/lib/util/pssh.js","../node_modules/shaka-player/lib/polyfill/patchedmediakeys_nop.js","../node_modules/shaka-player/lib/polyfill/indexed_db.js","../node_modules/shaka-player/lib/polyfill/languages.js","../node_modules/shaka-player/lib/polyfill/mathround.js","../node_modules/shaka-player/lib/polyfill/patchedmediakeys_webkit.js","../node_modules/shaka-player/lib/polyfill/pip_webkit.js","../node_modules/shaka-player/lib/polyfill/videoplaybackquality.js","../node_modules/shaka-player/lib/polyfill/vttcue.js","../node_modules/shaka-player/lib/text/ttml_text_parser.js","../node_modules/shaka-player/lib/polyfill/video_play_promise.js","../node_modules/shaka-player/lib/text/mp4_ttml_parser.js","../node_modules/shaka-player/lib/text/vtt_text_parser.js","../node_modules/shaka-player/lib/text/mp4_vtt_parser.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","utils/polyfills.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/LoginScreen.js","services/iptvApi.js","utils/scrollUtils.js","components/Home.js","components/Sidebar.js","components/Channels.js","components/MoviePreview.js","components/Movies.js","components/SeriesDetailsPage.js","components/Series.js","config/apiConfig.js","components/Search.js","components/VideoPlayer.js","App.js","serviceWorkerRegistration.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$0 = parentA.child; child$0; ) {\n        if (child$0 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$0 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$0 = child$0.sibling;\n      }\n      if (!didFindChild) {\n        for (child$0 = parentB.child; child$0; ) {\n          if (child$0 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$0 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$0 = child$0.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar assign = Object.assign,\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nvar REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.view_transition\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  switch (nextRootInstance.nodeType) {\n    case 9:\n    case 11:\n      fiber = (fiber = nextRootInstance.documentElement)\n        ? (fiber = fiber.namespaceURI)\n          ? getOwnHostContext(fiber)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = nextRootInstance.tagName),\n        (nextRootInstance = nextRootInstance.namespaceURI))\n      )\n        (nextRootInstance = getOwnHostContext(nextRootInstance)),\n          (fiber = getChildHostContextProd(nextRootInstance, fiber));\n      else\n        switch (fiber) {\n          case \"svg\":\n            fiber = 1;\n            break;\n          case \"math\":\n            fiber = 2;\n            break;\n          default:\n            fiber = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, fiber);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 256,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n      return 128;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194048;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes, rootHasPendingCommit) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes;\n  root = root.warmLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : rootHasPendingCommit ||\n              ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n              0 !== rootHasPendingCommit &&\n                (nextLanes = getHighestPriorityLanes(rootHasPendingCommit)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : rootHasPendingCommit ||\n            ((rootHasPendingCommit = pendingLanes & ~root),\n            0 !== rootHasPendingCommit &&\n              (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (rootHasPendingCommit = wipLanes & -wipLanes),\n        suspendedLanes >= rootHasPendingCommit ||\n          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n    case 64:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$5 = 31 - clz32(remainingLanes),\n      lane = 1 << index$5;\n    entanglements[index$5] = 0;\n    expirationTimes[index$5] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$5];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$5] = null, index$5 = 0;\n        index$5 < hiddenUpdatesForLane.length;\n        index$5++\n      ) {\n        var update = hiddenUpdatesForLane[index$5];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194090);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$6 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$6;\n    (lane & entangledLanes) | (root[index$6] & entangledLanes) &&\n      (root[index$6] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydrationByLane(lane) {\n  switch (lane) {\n    case 2:\n      lane = 1;\n      break;\n    case 8:\n      lane = 4;\n      break;\n    case 32:\n      lane = 16;\n      break;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      lane = 128;\n      break;\n    case 268435456:\n      lane = 134217728;\n      break;\n    default:\n      lane = 0;\n  }\n  return lane;\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$8 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$9) {\n                control = x$9;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$10) {\n              control = x$10;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return describeNativeComponentFrame(fiber.type, !1);\n    case 11:\n      return describeNativeComponentFrame(fiber.type.render, !1);\n    case 1:\n      return describeNativeComponentFrame(fiber.type, !0);\n    case 31:\n      return describeBuiltInComponentFrame(\"Activity\");\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$282;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_417 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_417) {\n      var element$jscomp$inline_418 = document.createElement(\"div\");\n      element$jscomp$inline_418.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_417 =\n        \"function\" === typeof element$jscomp$inline_418.oninput;\n    }\n    JSCompiler_inline_result$jscomp$282 = isSupported$jscomp$inline_417;\n  } else JSCompiler_inline_result$jscomp$282 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$282 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nsimpleEventPluginEvents.push(\"scrollEnd\");\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  return 3 === sourceFiber.tag\n    ? ((parent = sourceFiber.stateNode),\n      isHidden &&\n        null !== update &&\n        ((isHidden = 31 - clz32(lane)),\n        (sourceFiber = parent.hiddenUpdates),\n        (alternate = sourceFiber[isHidden]),\n        null === alternate\n          ? (sourceFiber[isHidden] = [update])\n          : alternate.push(update),\n        (update.lane = lane | 536870912)),\n      parent)\n    : null;\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {};\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 65011712;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 65011714;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_ACTIVITY_TYPE:\n        return (\n          (type = createFiberImplClass(31, pendingProps, key, mode)),\n          (type.elementType = REACT_ACTIVITY_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      case 27:\n      case 3:\n        rootOrSingletonContext = !0;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var tag = fiber.tag,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n    if ((JSCompiler_temp = 5 === tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (tag = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === tag) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            tag--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              tag++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    27 === tag\n      ? ((tag = nextHydratableInstance),\n        isSingletonScope(fiber.type)\n          ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n            (previousHydratableOnEnteringScopedSingleton = null),\n            (nextHydratableInstance = fiber))\n          : (nextHydratableInstance = tag))\n      : (nextHydratableInstance = hydrationParentFiber\n          ? getNextHydratable(fiber.stateNode.nextSibling)\n          : null);\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction upgradeHydrationErrorsToRecoverable() {\n  var queuedErrors = hydrationErrors;\n  null !== queuedErrors &&\n    (null === workInProgressRootRecoverableErrors\n      ? (workInProgressRootRecoverableErrors = queuedErrors)\n      : workInProgressRootRecoverableErrors.push.apply(\n          workInProgressRootRecoverableErrors,\n          queuedErrors\n        ),\n    (hydrationErrors = null));\n  return queuedErrors;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber$1 = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber$1 = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber$1, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  SuspenseActionException = Error(formatProdErrorMessage(542)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw (\n        ((thenableState = thenable.reason),\n        checkIfUseWrappedInAsyncCatch(thenableState),\n        thenableState)\n      );\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction checkIfUseWrappedInAsyncCatch(rejectedReason) {\n  if (\n    rejectedReason === SuspenseException ||\n    rejectedReason === SuspenseActionException\n  )\n    throw Error(formatProdErrorMessage(483));\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nvar currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter$1 = 0,\n  thenableState$1 = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter$1 = 0;\n  thenableState$1 = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n    thenableIndexCounter$1 = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter$1 = localIdCounter = 0;\n  thenableState$1 = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nfunction createFunctionComponentUpdateQueue() {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n}\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  thenable = trackUsedThenable(thenableState$1, thenable, index);\n  index = currentlyRenderingFiber;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$32 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$32 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$32 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$32 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n  updateEffectImpl(2048, 8, create, [subscribe]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 124) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$38) {\n      onActionError(actionQueue, node, error$38);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  if (\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n  )\n    try {\n      var state = useThenable(currentStateHook);\n    } catch (x) {\n      if (x === SuspenseException) throw SuspenseActionException;\n      throw x;\n    }\n  else state = currentStateHook;\n  currentStateHook = updateWorkInProgressHook();\n  var actionQueue = currentStateHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== currentStateHook.memoizedState &&\n    ((currentlyRenderingFiber.flags |= 2048),\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      actionStateActionEffect.bind(null, actionQueue, action),\n      null\n    ));\n  return [state, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushSimpleEffect(tag, inst, create, createDeps) {\n  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };\n  inst = currentlyRenderingFiber.updateQueue;\n  null === inst &&\n    ((inst = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = inst));\n  create = inst.lastEffect;\n  null === create\n    ? (inst.lastEffect = tag.next = tag)\n    : ((createDeps = create.next),\n      (create.next = tag),\n      (tag.next = createDeps),\n      (inst.lastEffect = tag));\n  return tag;\n}\nfunction createEffectInstance() {\n  return { destroy: void 0, resource: void 0 };\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n  var hook = mountWorkInProgressHook();\n  createDeps = void 0 === createDeps ? null : createDeps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushSimpleEffect(\n    1 | hookFlags,\n    createEffectInstance(),\n    create,\n    createDeps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n    : ((currentlyRenderingFiber.flags |= fiberFlags),\n      (hook.memoizedState = pushSimpleEffect(\n        1 | hookFlags,\n        inst,\n        create,\n        deps\n      )));\n}\nfunction mountEffect(create, createDeps) {\n  mountEffectImpl(8390656, 8, create, createDeps);\n}\nfunction updateEffect(create, createDeps) {\n  updateEffectImpl(2048, 8, create, createDeps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$41 = enqueueUpdate(provider, fiber, lane);\n        null !== root$41 &&\n          (scheduleUpdateOnFiber(root$41, provider, lane),\n          entangleTransitions(root$41, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (null !== alternate && alternate === currentlyRenderingFiber)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194048)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n    readContext: readContext,\n    use: use,\n    useCallback: throwInvalidHookError,\n    useContext: throwInvalidHookError,\n    useEffect: throwInvalidHookError,\n    useImperativeHandle: throwInvalidHookError,\n    useLayoutEffect: throwInvalidHookError,\n    useInsertionEffect: throwInvalidHookError,\n    useMemo: throwInvalidHookError,\n    useReducer: throwInvalidHookError,\n    useRef: throwInvalidHookError,\n    useState: throwInvalidHookError,\n    useDebugValue: throwInvalidHookError,\n    useDeferredValue: throwInvalidHookError,\n    useTransition: throwInvalidHookError,\n    useSyncExternalStore: throwInvalidHookError,\n    useId: throwInvalidHookError,\n    useHostTransitionStatus: throwInvalidHookError,\n    useFormState: throwInvalidHookError,\n    useActionState: throwInvalidHookError,\n    useOptimistic: throwInvalidHookError,\n    useMemoCache: throwInvalidHookError,\n    useCacheRefresh: throwInvalidHookError\n  },\n  HooksDispatcherOnMount = {\n    readContext: readContext,\n    use: use,\n    useCallback: function (callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    },\n    useContext: readContext,\n    useEffect: mountEffect,\n    useImperativeHandle: function (ref, create, deps) {\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      mountEffectImpl(\n        4194308,\n        4,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    },\n    useLayoutEffect: function (create, deps) {\n      return mountEffectImpl(4194308, 4, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      mountEffectImpl(4, 2, create, deps);\n    },\n    useMemo: function (nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    },\n    useReducer: function (reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    },\n    useRef: function (initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    },\n    useState: function (initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    },\n    useTransition: function () {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(formatProdErrorMessage(407));\n        getServerSnapshot = getServerSnapshot();\n      } else {\n        getServerSnapshot = getSnapshot();\n        if (null === workInProgressRoot)\n          throw Error(formatProdErrorMessage(349));\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      hook.memoizedState = getServerSnapshot;\n      var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n        subscribe\n      ]);\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        9,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          inst,\n          getServerSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return getServerSnapshot;\n    },\n    useId: function () {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var JSCompiler_inline_result = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        JSCompiler_inline_result =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + JSCompiler_inline_result;\n        identifierPrefix =\n          \"\\u00ab\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n        JSCompiler_inline_result = localIdCounter++;\n        0 < JSCompiler_inline_result &&\n          (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (JSCompiler_inline_result = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" +\n            identifierPrefix +\n            \"r\" +\n            JSCompiler_inline_result.toString(32) +\n            \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    },\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: mountActionState,\n    useActionState: mountActionState,\n    useOptimistic: function (passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: function () {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n  },\n  HooksDispatcherOnUpdate = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: updateReducer,\n    useRef: updateRef,\n    useState: function () {\n      return updateReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    },\n    useTransition: function () {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: updateActionState,\n    useActionState: updateActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  HooksDispatcherOnRerender = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: rerenderReducer,\n    useRef: updateRef,\n    useState: function () {\n      return rerenderReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    },\n    useTransition: function () {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: rerenderActionState,\n    useActionState: rerenderActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  thenableState = null,\n  thenableIndexCounter = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 67108866;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 67108866);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException || x === SuspenseActionException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state ||\n          \"$?\" === state.data ||\n          isSuspenseInstanceFallback(state))\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$73 in Component)\n      void 0 === newProps[propName$73] &&\n        (newProps[propName$73] = Component[propName$73]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$74) {\n    setTimeout(function () {\n      throw e$74;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$75) {\n    setTimeout(function () {\n      throw e$75;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    prevState = null !== current ? current.memoizedState : null;\n  if (\"hidden\" === nextProps.mode) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (prevState = 0; null !== nextChildren; )\n          (prevState =\n            prevState | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = prevState & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 4194816);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 4194816;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0,\n  hydrationErrors: null\n};\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912,\n                hydrationErrors: null\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          isSuspenseInstanceFallback(nextInstance)\n            ? (workInProgress.lanes = 32)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      isSuspenseInstanceFallback(nextInstance))\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (\n        null !== JSCompiler_temp &&\n        ((nextProps = renderLanes & -renderLanes),\n        (nextProps =\n          0 !== (nextProps & 42)\n            ? 1\n            : getBumpedLaneForHydrationByLane(nextProps)),\n        (nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps),\n        0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n      )\n        throw (\n          ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n          enqueueConcurrentRenderForLane(current, nextProps),\n          scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n          SelectiveHydrationException)\n        );\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 192),\n          (workInProgress.child = current.child),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 65011712),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  offscreenProps = createFiberImplClass(22, offscreenProps, null, mode);\n  offscreenProps.lanes = 0;\n  offscreenProps.stateNode = {\n    _visibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null\n  };\n  return offscreenProps;\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        lazyComponent = workInProgress.pendingProps;\n        var prevState = workInProgress.memoizedState;\n        init = prevState.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        lazyComponent = nextState.cache;\n        pushProvider(workInProgress, CacheContext, lazyComponent);\n        lazyComponent !== prevState.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        lazyComponent = nextState.element;\n        if (prevState.isDehydrated)\n          if (\n            ((prevState = {\n              element: lazyComponent,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = prevState),\n            (workInProgress.memoizedState = prevState),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else if (lazyComponent !== init) {\n            init = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(init);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else {\n            current = workInProgress.stateNode.containerInfo;\n            switch (current.nodeType) {\n              case 9:\n                current = current.body;\n                break;\n              default:\n                current =\n                  \"HTML\" === current.nodeName\n                    ? current.ownerDocument.body\n                    : current;\n            }\n            nextHydratableInstance = getNextHydratable(current.firstChild);\n            hydrationParentFiber = workInProgress;\n            isHydrating = !0;\n            hydrationErrors = null;\n            rootOrSingletonContext = !0;\n            renderLanes = mountChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            );\n            for (workInProgress.child = renderLanes; renderLanes; )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n          }\n        else {\n          resetHydrationState();\n          if (lazyComponent === init) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(\n            current,\n            workInProgress,\n            lazyComponent,\n            renderLanes\n          );\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (init = nextHydratableInstance),\n          isSingletonScope(workInProgress.type)\n            ? ((previousHydratableOnEnteringScopedSingleton = init),\n              (nextHydratableInstance = getNextHydratable(\n                lazyComponent.firstChild\n              )))\n            : (nextHydratableInstance = init)),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        markRef(current, workInProgress),\n        null === current && (workInProgress.flags |= 4194304),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      prevState = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = prevState.children;\n      shouldSetTextContent(init, prevState)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 31:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        (renderLanes = workInProgress.mode),\n        (lazyComponent = {\n          mode: lazyComponent.mode,\n          children: lazyComponent.children\n        }),\n        null === current\n          ? ((renderLanes = mountWorkInProgressOffscreenFiber(\n              lazyComponent,\n              renderLanes\n            )),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes))\n          : ((renderLanes = createWorkInProgress(current.child, lazyComponent)),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes)),\n        workInProgress\n      );\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (prevState = createCache()),\n              (init.pooledCache = prevState),\n              prevState.refCount++,\n              null !== prevState && (init.pooledCacheLanes |= renderLanes),\n              (init = prevState)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (prevState = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = prevState.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194048) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$113 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$113 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$113\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$113.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags & 65011712),\n        (subtreeFlags |= child$114.flags & 65011712),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  else\n    for (child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags),\n        (subtreeFlags |= child$114.flags),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 31:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            upgradeHydrationErrorsToRecoverable());\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          (type = upgradeHydrationErrorsToRecoverable()),\n            null !== current &&\n              null !== current.memoizedState &&\n              (current.memoizedState.hydrationErrors = type),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$127 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$127 = newProps.memoizedState.cachePool.pool);\n        cache$127 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$127 = type.rendering;\n      if (null === cache$127)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$127 = findFirstSuspended(current);\n              if (null !== cache$127) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$127.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$127)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$127.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$127.sibling = workInProgress.child),\n            (workInProgress.child = cache$127))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$127)\n              : (workInProgress.child = cache$127),\n            (type.last = cache$127));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n    case 30:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,\n              destroy_ = destroy;\n            try {\n              destroy_();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = current.stateNode;\n          break;\n        case 30:\n          instanceToUse = current.stateNode;\n          break;\n        default:\n          instanceToUse = current.stateNode;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$143) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$143);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n    ) {\n      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? (9 === parent.nodeType\n            ? parent.body\n            : \"HTML\" === parent.nodeName\n              ? parent.ownerDocument.body\n              : parent\n          ).insertBefore(node, before)\n        : ((before =\n            9 === parent.nodeType\n              ? parent.body\n              : \"HTML\" === parent.nodeName\n                ? parent.ownerDocument.body\n                : parent),\n          before.appendChild(node),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (\n    4 !== tag &&\n    (27 === tag &&\n      isSingletonScope(node.type) &&\n      ((parent = node.stateNode), (before = null)),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (\n    4 !== tag &&\n    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nfunction commitHostSingletonAcquisition(finishedWork) {\n  var singleton = finishedWork.stateNode,\n    props = finishedWork.memoizedProps;\n  try {\n    for (\n      var type = finishedWork.type, attributes = singleton.attributes;\n      attributes.length;\n\n    )\n      singleton.removeAttributeNode(attributes[0]);\n    setInitialProperties(singleton, type, props);\n    singleton[internalInstanceKey] = finishedWork;\n    singleton[internalPropsKey] = props;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$142) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$142\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (\n        flags & 64 &&\n        ((finishedRoot = finishedWork.updateQueue), null !== finishedRoot)\n      ) {\n        current = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              current = finishedWork.child.stateNode;\n              break;\n            case 1:\n              current = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(finishedRoot, current);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 27:\n      null === current &&\n        flags & 4 &&\n        commitHostSingletonAcquisition(finishedWork);\n    case 26:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      flags & 64 &&\n        ((finishedRoot = finishedWork.memoizedState),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.dehydrated),\n          null !== finishedRoot &&\n            ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n              null,\n              finishedWork\n            )),\n            registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n      break;\n    case 22:\n      flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!flags) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        prevProps = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = flags;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevProps;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      break;\n    case 30:\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      isSingletonScope(deletedFiber.type) &&\n        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      releaseSingletonInstance(deletedFiber.stateNode);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (9 === hostParent.nodeType\n              ? hostParent.body\n              : \"HTML\" === hostParent.nodeName\n                ? hostParent.ownerDocument.body\n                : hostParent\n            ).removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((finishedRoot = hostParent),\n            clearSuspenseBoundary(\n              9 === finishedRoot.nodeType\n                ? finishedRoot.body\n                : \"HTML\" === finishedRoot.nodeName\n                  ? finishedRoot.ownerDocument.body\n                  : finishedRoot,\n              deletedFiber.stateNode\n            ),\n            retryIfBlockedOn(finishedRoot))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n            if (isSingletonScope(parent.type)) {\n              hostParent = parent.stateNode;\n              hostParentIsContainer = !1;\n              break a;\n            }\n            break;\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href || \"\" === current.href\n                              ? null\n                              : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      null !== current &&\n        flags & 4 &&\n        commitHostUpdate(\n          finishedWork,\n          finishedWork.memoizedProps,\n          current.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      hoistableRoot = null !== finishedWork.memoizedState;\n      var wasHidden = null !== current && null !== current.memoizedState,\n        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 8192)\n        a: for (\n          root = finishedWork.stateNode,\n            root._visibility = hoistableRoot\n              ? root._visibility & -2\n              : root._visibility | 1,\n            hoistableRoot &&\n              (null === current ||\n                wasHidden ||\n                offscreenSubtreeIsHidden ||\n                offscreenSubtreeWasHidden ||\n                recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n            current = null,\n            root = finishedWork;\n          ;\n\n        ) {\n          if (5 === root.tag || 26 === root.tag) {\n            if (null === current) {\n              wasHidden = current = root;\n              try {\n                if (((currentResource = wasHidden.stateNode), hoistableRoot))\n                  (maybeNodes = currentResource.style),\n                    \"function\" === typeof maybeNodes.setProperty\n                      ? maybeNodes.setProperty(\"display\", \"none\", \"important\")\n                      : (maybeNodes.display = \"none\");\n                else {\n                  i = wasHidden.stateNode;\n                  var styleProp = wasHidden.memoizedProps.style,\n                    display =\n                      void 0 !== styleProp &&\n                      null !== styleProp &&\n                      styleProp.hasOwnProperty(\"display\")\n                        ? styleProp.display\n                        : null;\n                  i.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              wasHidden = root;\n              try {\n                wasHidden.stateNode.nodeValue = hoistableRoot\n                  ? \"\"\n                  : wasHidden.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 30:\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber) throw Error(formatProdErrorMessage(160));\n      switch (hostParentFiber.tag) {\n        case 27:\n          var parent = hostParentFiber.stateNode,\n            before = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before, parent);\n          break;\n        case 5:\n          var parent$144 = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (setTextContent(parent$144, \"\"), (hostParentFiber.flags &= -33));\n          var before$145 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before$145, parent$144);\n          break;\n        case 3:\n        case 4:\n          var parent$146 = hostParentFiber.stateNode.containerInfo,\n            before$147 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            before$147,\n            parent$146\n          );\n          break;\n        default:\n          throw Error(formatProdErrorMessage(161));\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 27:\n        releaseSingletonInstance(finishedWork.stateNode);\n      case 26:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 30:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 27:\n        commitHostSingletonAcquisition(finishedWork);\n      case 26:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 30:\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 1:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 13:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      id = finishedWork.alternate;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 && commitOffscreenPassiveMountEffects(id, finishedWork);\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 2\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 2 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 2 &&\n          ((i._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  pendingEffectsStatus = 0,\n  pendingEffectsRoot = null,\n  pendingFinishedWork = null,\n  pendingEffectsLanes = 0,\n  pendingEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  pendingRecoverableErrors = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 124) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                (null === workInProgressRootRecoverableErrors\n                  ? (workInProgressRootRecoverableErrors = renderWasConcurrent)\n                  : workInProgressRootRecoverableErrors.push.apply(\n                      workInProgressRootRecoverableErrors,\n                      renderWasConcurrent\n                    ));\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        renderWasConcurrent = exitStatus;\n        switch (renderWasConcurrent) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194048) !== lanes) break;\n          case 6:\n            markRootSuspended(\n              shouldTimeSlice,\n              lanes,\n              workInProgressDeferredLane,\n              !workInProgressRootDidSkipSuspendedSiblings\n            );\n            break a;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        if (\n          (lanes & 62914560) === lanes &&\n          ((exitStatus = globalMostRecentFallbackTime + 300 - now()),\n          10 < exitStatus)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              renderWasConcurrent,\n              2,\n              -0,\n              0\n            ),\n            exitStatus\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          renderWasConcurrent,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  exitStatus,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  root.timeoutHandle = -1;\n  suspendedCommitReason = finishedWork.subtreeFlags;\n  if (\n    suspendedCommitReason & 8192 ||\n    16785408 === (suspendedCommitReason & 16785408)\n  )\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (suspendedCommitReason = waitForCommitToBeReady()),\n      null !== suspendedCommitReason)\n    ) {\n      root.cancelPendingCommit = suspendedCommitReason(\n        commitRoot.bind(\n          null,\n          root,\n          finishedWork,\n          lanes,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          exitStatus,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    finishedWork,\n    lanes,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$4 = 31 - clz32(lanes),\n      lane = 1 << index$4;\n    didAttemptEntireTree[index$4] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber$1 = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState = null),\n        (thenableIndexCounter = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$2 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$2;\n      lanes |= root[index$2];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException || thrownValue === SuspenseActionException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194048) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 9:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$167) {\n      handleThrow(root, thrownValue$167);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n          case 9:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              (2 !== workInProgressSuspendedReason &&\n                9 !== workInProgressSuspendedReason) ||\n                workInProgressRoot !== root ||\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrentByScheduler();\n      break;\n    } catch (thrownValue$169) {\n      handleThrow(root, thrownValue$169);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrentByScheduler() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState = null;\n  thenableIndexCounter = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason ||\n        9 === suspendedReason ||\n        3 === suspendedReason ||\n        6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  finishedWork,\n  lanes,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  root.cancelPendingCommit = null;\n  do flushPendingEffects();\n  while (0 !== pendingEffectsStatus);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  if (null !== finishedWork) {\n    if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n    didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;\n    didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n    markRootFinished(\n      root,\n      lanes,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    );\n    root === workInProgressRoot &&\n      ((workInProgress = workInProgressRoot = null),\n      (workInProgressRootRenderLanes = 0));\n    pendingFinishedWork = finishedWork;\n    pendingEffectsRoot = root;\n    pendingEffectsLanes = lanes;\n    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n    pendingPassiveTransitions = transitions;\n    pendingRecoverableErrors = recoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? ((root.callbackNode = null),\n        (root.callbackPriority = 0),\n        scheduleCallback$1(NormalPriority$1, function () {\n          flushPassiveEffects(!0);\n          return null;\n        }))\n      : ((root.callbackNode = null), (root.callbackPriority = 0));\n    recoverableErrors = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n      recoverableErrors = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      transitions = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      spawnedLane = executionContext;\n      executionContext |= 4;\n      try {\n        commitBeforeMutationEffects(root, finishedWork, lanes);\n      } finally {\n        (executionContext = spawnedLane),\n          (ReactDOMSharedInternals.p = transitions),\n          (ReactSharedInternals.T = recoverableErrors);\n      }\n    }\n    pendingEffectsStatus = 1;\n    flushMutationEffects();\n    flushLayoutEffects();\n    flushSpawnedWork();\n  }\n}\nfunction flushMutationEffects() {\n  if (1 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {\n      rootMutationHasEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitMutationEffectsOnFiber(finishedWork, root);\n        var priorSelectionInformation = selectionInformation,\n          curFocusedElem = getActiveElementDeep(root.containerInfo),\n          priorFocusedElem = priorSelectionInformation.focusedElem,\n          priorSelectionRange = priorSelectionInformation.selectionRange;\n        if (\n          curFocusedElem !== priorFocusedElem &&\n          priorFocusedElem &&\n          priorFocusedElem.ownerDocument &&\n          containsNode(\n            priorFocusedElem.ownerDocument.documentElement,\n            priorFocusedElem\n          )\n        ) {\n          if (\n            null !== priorSelectionRange &&\n            hasSelectionCapabilities(priorFocusedElem)\n          ) {\n            var start = priorSelectionRange.start,\n              end = priorSelectionRange.end;\n            void 0 === end && (end = start);\n            if (\"selectionStart\" in priorFocusedElem)\n              (priorFocusedElem.selectionStart = start),\n                (priorFocusedElem.selectionEnd = Math.min(\n                  end,\n                  priorFocusedElem.value.length\n                ));\n            else {\n              var doc = priorFocusedElem.ownerDocument || document,\n                win = (doc && doc.defaultView) || window;\n              if (win.getSelection) {\n                var selection = win.getSelection(),\n                  length = priorFocusedElem.textContent.length,\n                  start$jscomp$0 = Math.min(priorSelectionRange.start, length),\n                  end$jscomp$0 =\n                    void 0 === priorSelectionRange.end\n                      ? start$jscomp$0\n                      : Math.min(priorSelectionRange.end, length);\n                !selection.extend &&\n                  start$jscomp$0 > end$jscomp$0 &&\n                  ((curFocusedElem = end$jscomp$0),\n                  (end$jscomp$0 = start$jscomp$0),\n                  (start$jscomp$0 = curFocusedElem));\n                var startMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    start$jscomp$0\n                  ),\n                  endMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    end$jscomp$0\n                  );\n                if (\n                  startMarker &&\n                  endMarker &&\n                  (1 !== selection.rangeCount ||\n                    selection.anchorNode !== startMarker.node ||\n                    selection.anchorOffset !== startMarker.offset ||\n                    selection.focusNode !== endMarker.node ||\n                    selection.focusOffset !== endMarker.offset)\n                ) {\n                  var range = doc.createRange();\n                  range.setStart(startMarker.node, startMarker.offset);\n                  selection.removeAllRanges();\n                  start$jscomp$0 > end$jscomp$0\n                    ? (selection.addRange(range),\n                      selection.extend(endMarker.node, endMarker.offset))\n                    : (range.setEnd(endMarker.node, endMarker.offset),\n                      selection.addRange(range));\n                }\n              }\n            }\n          }\n          doc = [];\n          for (\n            selection = priorFocusedElem;\n            (selection = selection.parentNode);\n\n          )\n            1 === selection.nodeType &&\n              doc.push({\n                element: selection,\n                left: selection.scrollLeft,\n                top: selection.scrollTop\n              });\n          \"function\" === typeof priorFocusedElem.focus &&\n            priorFocusedElem.focus();\n          for (\n            priorFocusedElem = 0;\n            priorFocusedElem < doc.length;\n            priorFocusedElem++\n          ) {\n            var info = doc[priorFocusedElem];\n            info.element.scrollLeft = info.left;\n            info.element.scrollTop = info.top;\n          }\n        }\n        _enabled = !!eventsEnabled;\n        selectionInformation = eventsEnabled = null;\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootMutationHasEffect);\n      }\n    }\n    root.current = finishedWork;\n    pendingEffectsStatus = 2;\n  }\n}\nfunction flushLayoutEffects() {\n  if (2 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n    if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n      rootHasLayoutEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootHasLayoutEffect);\n      }\n    }\n    pendingEffectsStatus = 3;\n  }\n}\nfunction flushSpawnedWork() {\n  if (4 === pendingEffectsStatus || 3 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    requestPaint();\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      lanes = pendingEffectsLanes,\n      recoverableErrors = pendingRecoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? (pendingEffectsStatus = 5)\n      : ((pendingEffectsStatus = 0),\n        (pendingFinishedWork = pendingEffectsRoot = null),\n        releaseRootPooledCache(root, root.pendingLanes));\n    var remainingLanes = root.pendingLanes;\n    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n    lanesToEventPriority(lanes);\n    finishedWork = finishedWork.stateNode;\n    if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n      try {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          finishedWork,\n          void 0,\n          128 === (finishedWork.current.flags & 128)\n        );\n      } catch (err) {}\n    if (null !== recoverableErrors) {\n      finishedWork = ReactSharedInternals.T;\n      remainingLanes = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      ReactSharedInternals.T = null;\n      try {\n        for (\n          var onRecoverableError = root.onRecoverableError, i = 0;\n          i < recoverableErrors.length;\n          i++\n        ) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError.value, {\n            componentStack: recoverableError.stack\n          });\n        }\n      } finally {\n        (ReactSharedInternals.T = finishedWork),\n          (ReactDOMSharedInternals.p = remainingLanes);\n      }\n    }\n    0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n    ensureRootIsScheduled(root);\n    remainingLanes = root.pendingLanes;\n    0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n      ? root === rootWithNestedUpdates\n        ? nestedUpdateCount++\n        : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n      : (nestedUpdateCount = 0);\n    flushSyncWorkAcrossRoots_impl(0, !1);\n  }\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPendingEffects(wasDelayedCommit) {\n  flushMutationEffects();\n  flushLayoutEffects();\n  flushSpawnedWork();\n  return flushPassiveEffects(wasDelayedCommit);\n}\nfunction flushPassiveEffects() {\n  if (5 !== pendingEffectsStatus) return !1;\n  var root = pendingEffectsRoot,\n    remainingLanes = pendingEffectsRemainingLanes;\n  pendingEffectsRemainingLanes = 0;\n  var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n    prevTransition = ReactSharedInternals.T,\n    previousPriority = ReactDOMSharedInternals.p;\n  try {\n    ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n    ReactSharedInternals.T = null;\n    renderPriority = pendingPassiveTransitions;\n    pendingPassiveTransitions = null;\n    var root$jscomp$0 = pendingEffectsRoot,\n      lanes = pendingEffectsLanes;\n    pendingEffectsStatus = 0;\n    pendingFinishedWork = pendingEffectsRoot = null;\n    pendingEffectsLanes = 0;\n    if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(331));\n    var prevExecutionContext = executionContext;\n    executionContext |= 4;\n    commitPassiveUnmountOnFiber(root$jscomp$0.current);\n    commitPassiveMountOnFiber(\n      root$jscomp$0,\n      root$jscomp$0.current,\n      lanes,\n      renderPriority\n    );\n    executionContext = prevExecutionContext;\n    flushSyncWorkAcrossRoots_impl(0, !1);\n    if (\n      injectedHook &&\n      \"function\" === typeof injectedHook.onPostCommitFiberRoot\n    )\n      try {\n        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n      } catch (err) {}\n    return !0;\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition),\n      releaseRootPooledCache(root, remainingLanes);\n  }\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$174 = firstScheduledRoot; null !== root$174; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$174.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$174.suspendedLanes,\n                pingedLanes = root$174.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326741\n                  ? (JSCompiler_inline_result & 201326741) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$174,\n                root$174 === workInProgressRoot ? JSCompiler_inline_result : 0,\n                null !== root$174.cancelPendingCommit ||\n                  -1 !== root$174.timeoutHandle\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$174, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n        root$174 = root$174.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInImmediateTask() {\n  processRootScheduleInMicrotask();\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$3 = 31 - clz32(lanes),\n      lane = 1 << index$3,\n      expirationTime = expirationTimes[index$3];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$3] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  if (0 !== pendingEffectsStatus && 5 !== pendingEffectsStatus)\n    return (root.callbackNode = null), (root.callbackPriority = 0), null;\n  var originalCallbackNode = root.callbackNode;\n  if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPendingEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateRootScheduleTask() {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(\n          ImmediatePriority,\n          processRootScheduleInImmediateTask\n        )\n      : processRootScheduleInMicrotask();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1528 = 0;\n  i$jscomp$inline_1528 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1528++\n) {\n  var eventName$jscomp$inline_1529 =\n      simpleEventPluginEvents[i$jscomp$inline_1528],\n    domEventName$jscomp$inline_1530 =\n      eventName$jscomp$inline_1529.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1531 =\n      eventName$jscomp$inline_1529[0].toUpperCase() +\n      eventName$jscomp$inline_1529.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1530,\n    \"on\" + capitalizedEvent$jscomp$inline_1531\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (container === targetContainer) break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (\n              (3 === grandTag || 4 === grandTag) &&\n              nodeTag.stateNode.containerInfo === targetContainer\n            )\n              return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    if (3 === targetFiber.tag) return listeners;\n    targetFiber = targetFiber.return;\n  }\n  return [];\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$188 = props[hasSrc];\n          if (null != propValue$188)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$188;\n                break;\n              case \"type\":\n                propValue = propValue$188;\n                break;\n              case \"checked\":\n                checked = propValue$188;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$188;\n                break;\n              case \"value\":\n                propKey = propValue$188;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$188;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$188)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$188, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$188 in props)\n          props.hasOwnProperty(propValue$188) &&\n            ((hasSrc = props[propValue$188]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$188,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$205 in nextProps) {\n        var propKey = nextProps[propKey$205];\n        lastProp = lastProps[propKey$205];\n        if (\n          nextProps.hasOwnProperty(propKey$205) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$205) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$205,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$205 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$205 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$205\n        ? updateOptions(domElement, !!lastProps, propKey$205, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$205 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$205 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$205, propKey);\n      return;\n    case \"option\":\n      for (var propKey$221 in lastProps)\n        if (\n          ((propKey$205 = lastProps[propKey$221]),\n          lastProps.hasOwnProperty(propKey$221) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$221))\n        )\n          switch (propKey$221) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$221,\n                null,\n                nextProps,\n                propKey$205\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$205 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$205 &&\n                \"function\" !== typeof propKey$205 &&\n                \"symbol\" !== typeof propKey$205;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$226 in lastProps)\n        (propKey$205 = lastProps[propKey$226]),\n          lastProps.hasOwnProperty(propKey$226) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$226) &&\n            setProp(domElement, tag, propKey$226, null, nextProps, propKey$205);\n      for (checked in nextProps)\n        if (\n          ((propKey$205 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$205)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$231 in lastProps)\n          (propKey$205 = lastProps[propKey$231]),\n            lastProps.hasOwnProperty(propKey$231) &&\n              void 0 !== propKey$205 &&\n              !nextProps.hasOwnProperty(propKey$231) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$231,\n                void 0,\n                nextProps,\n                propKey$205\n              );\n        for (defaultChecked in nextProps)\n          (propKey$205 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$205 === propKey ||\n              (void 0 === propKey$205 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$236 in lastProps)\n    (propKey$205 = lastProps[propKey$236]),\n      lastProps.hasOwnProperty(propKey$236) &&\n        null != propKey$205 &&\n        !nextProps.hasOwnProperty(propKey$236) &&\n        setProp(domElement, tag, propKey$236, null, nextProps, propKey$205);\n  for (lastProp in nextProps)\n    (propKey$205 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$205 === propKey ||\n        (null == propKey$205 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$205, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction isSingletonScope(type) {\n  return \"head\" === type;\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    possiblePreambleContribution = 0,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (\n          0 < possiblePreambleContribution &&\n          8 > possiblePreambleContribution\n        ) {\n          node = possiblePreambleContribution;\n          var ownerDocument = parentInstance.ownerDocument;\n          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);\n          node & 2 && releaseSingletonInstance(ownerDocument.body);\n          if (node & 4)\n            for (\n              node = ownerDocument.head,\n                releaseSingletonInstance(node),\n                ownerDocument = node.firstChild;\n              ownerDocument;\n\n            ) {\n              var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                nodeName = ownerDocument.nodeName;\n              ownerDocument[internalHoistableMarker] ||\n                \"SCRIPT\" === nodeName ||\n                \"STYLE\" === nodeName ||\n                (\"LINK\" === nodeName &&\n                  \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                node.removeChild(ownerDocument);\n              ownerDocument = nextNode$jscomp$0;\n            }\n        }\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else\n        \"$\" === node || \"$?\" === node || \"$!\" === node\n          ? depth++\n          : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n    else possiblePreambleContribution = 0;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href || \"\" === anyProps.href\n                ? null\n                : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return (\n    \"$!\" === instance.data ||\n    (\"$?\" === instance.data && \"complete\" === instance.ownerDocument.readyState)\n  );\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  var ownerDocument = instance.ownerDocument;\n  if (\"$?\" !== instance.data || \"complete\" === ownerDocument.readyState)\n    callback();\n  else {\n    var listener = function () {\n      callback();\n      ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n    };\n    ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n    instance._reactRetry = listener;\n  }\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nvar previousHydratableOnEnteringScopedSingleton = null;\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nfunction releaseSingletonInstance(instance) {\n  for (var attributes = instance.attributes; attributes.length; )\n    instance.removeAttributeNode(attributes[0]);\n  detachDeletedInstance(instance);\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : 9 === container.nodeType\n      ? container\n      : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$244 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$245 = styles$244.get(type);\n        resource$245 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$245 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$244.set(type, resource$245),\n          (styles$244 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$244._p &&\n            ((resource$245.instance = styles$244),\n            (resource$245.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$244 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$245.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$245;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$250 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$250)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$250),\n            markNodeAsHoistable(instance$250),\n            instance$250\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$250 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$250);\n        var linkInstance = instance$250;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$250, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$250, props.precedence, hoistableRoot);\n        return (resource.instance = instance$250);\n      case \"script\":\n        instance$250 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$250)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$250)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane();\n              lane = getBumpedLaneForHydrationByLane(lane);\n              var root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1785 = React.version;\nif (\n  \"19.1.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1785\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1785,\n      \"19.1.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2256 = {\n  bundleType: 0,\n  version: \"19.1.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  reconcilerVersion: \"19.1.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2257 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2257.isDisabled &&\n    hook$jscomp$inline_2257.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2257.inject(\n        internals$jscomp$inline_2256\n      )),\n        (injectedHook = hook$jscomp$inline_2257);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  options = isStrictMode;\n  initialChildren.current.lanes = options;\n  markRootUpdated$1(initialChildren, options);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mpegts\"] = factory();\n\telse\n\t\troot[\"mpegts\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\n\nclass Log {\n\n    static e(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'error', str);\n        }\n\n        if (!Log.ENABLE_ERROR) {\n            return;\n        }\n\n        if (console.error) {\n            console.error(str);\n        } else if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static i(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'info', str);\n        }\n\n        if (!Log.ENABLE_INFO) {\n            return;\n        }\n\n        if (console.info) {\n            console.info(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static w(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'warn', str);\n        }\n\n        if (!Log.ENABLE_WARN) {\n            return;\n        }\n\n        if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static d(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'debug', str);\n        }\n\n        if (!Log.ENABLE_DEBUG) {\n            return;\n        }\n\n        if (console.debug) {\n            console.debug(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static v(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'verbose', str);\n        }\n\n        if (!Log.ENABLE_VERBOSE) {\n            return;\n        }\n\n        console.log(str);\n    }\n\n}\n\nLog.GLOBAL_TAG = 'mpegts.js';\nLog.FORCE_GLOBAL_TAG = false;\nLog.ENABLE_ERROR = true;\nLog.ENABLE_INFO = true;\nLog.ENABLE_WARN = true;\nLog.ENABLE_DEBUG = true;\nLog.ENABLE_VERBOSE = true;\n\nLog.ENABLE_CALLBACK = false;\n\nLog.emitter = new EventEmitter();\n\nexport default Log;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TransmuxingEvents = {\n    IO_ERROR: 'io_error',\n    DEMUX_ERROR: 'demux_error',\n    INIT_SEGMENT: 'init_segment',\n    MEDIA_SEGMENT: 'media_segment',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    METADATA_ARRIVED: 'metadata_arrived',\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\n    TIMED_ID3_METADATA_ARRIVED: 'timed_id3_metadata_arrived',\n    SCTE35_METADATA_ARRIVED: 'scte35_metadata_arrived',\n    PES_PRIVATE_DATA_DESCRIPTOR: 'pes_private_data_descriptor',\n    PES_PRIVATE_DATA_ARRIVED: 'pes_private_data_arrived',\n    STATISTICS_INFO: 'statistics_info',\n    RECOMMEND_SEEKPOINT: 'recommend_seekpoint'\n};\n\nexport default TransmuxingEvents;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NotImplementedException} from '../utils/exception.js';\n\nexport const LoaderStatus = {\n    kIdle: 0,\n    kConnecting: 1,\n    kBuffering: 2,\n    kError: 3,\n    kComplete: 4\n};\n\nexport const LoaderErrors = {\n    OK: 'OK',\n    EXCEPTION: 'Exception',\n    HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\n    CONNECTING_TIMEOUT: 'ConnectingTimeout',\n    EARLY_EOF: 'EarlyEof',\n    UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\n};\n\n/* Loader has callbacks which have following prototypes:\n *     function onContentLengthKnown(contentLength: number): void\n *     function onURLRedirect(url: string): void\n *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void\n *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void\n *     function onComplete(rangeFrom: number, rangeTo: number): void\n */\nexport class BaseLoader {\n\n    constructor(typeName) {\n        this._type = typeName || 'undefined';\n        this._status = LoaderStatus.kIdle;\n        this._needStash = false;\n        // callbacks\n        this._onContentLengthKnown = null;\n        this._onURLRedirect = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    destroy() {\n        this._status = LoaderStatus.kIdle;\n        this._onContentLengthKnown = null;\n        this._onURLRedirect = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    isWorking() {\n        return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    get needStashBuffer() {\n        return this._needStash;\n    }\n\n    get onContentLengthKnown() {\n        return this._onContentLengthKnown;\n    }\n\n    set onContentLengthKnown(callback) {\n        this._onContentLengthKnown = callback;\n    }\n\n    get onURLRedirect() {\n        return this._onURLRedirect;\n    }\n\n    set onURLRedirect(callback) {\n        this._onURLRedirect = callback;\n    }\n\n    get onDataArrival() {\n        return this._onDataArrival;\n    }\n\n    set onDataArrival(callback) {\n        this._onDataArrival = callback;\n    }\n\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    get onComplete() {\n        return this._onComplete;\n    }\n\n    set onComplete(callback) {\n        this._onComplete = callback;\n    }\n\n    // pure virtual\n    open(dataSource, range) {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n    abort() {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n\n}","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RuntimeException {\n\n    constructor(message) {\n        this._message = message;\n    }\n\n    get name() {\n        return 'RuntimeException';\n    }\n\n    get message() {\n        return this._message;\n    }\n\n    toString() {\n        return this.name + ': ' + this.message;\n    }\n\n}\n\nexport class IllegalStateException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'IllegalStateException';\n    }\n\n}\n\nexport class InvalidArgumentException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'InvalidArgumentException';\n    }\n\n}\n\nexport class NotImplementedException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'NotImplementedException';\n    }\n\n}\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet Browser = {};\n\nfunction detect() {\n    // modified from jquery-browser-plugin\n\n    let ua = self.navigator.userAgent.toLowerCase();\n\n    let match = /(edge)\\/([\\w.]+)/.exec(ua) ||\n        /(opr)[\\/]([\\w.]+)/.exec(ua) ||\n        /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(iemobile)[\\/]([\\w.]+)/.exec(ua) ||\n        /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(msie) ([\\w.]+)/.exec(ua) ||\n        ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua) ||\n        ua.indexOf('compatible') < 0 && /(firefox)[ \\/]([\\w.]+)/.exec(ua) ||\n        [];\n\n    let platform_match = /(ipad)/.exec(ua) ||\n        /(ipod)/.exec(ua) ||\n        /(windows phone)/.exec(ua) ||\n        /(iphone)/.exec(ua) ||\n        /(kindle)/.exec(ua) ||\n        /(android)/.exec(ua) ||\n        /(windows)/.exec(ua) ||\n        /(mac)/.exec(ua) ||\n        /(linux)/.exec(ua) ||\n        /(cros)/.exec(ua) ||\n        [];\n\n    let matched = {\n        browser: match[5] || match[3] || match[1] || '',\n        version: match[2] || match[4] || '0',\n        majorVersion: match[4] || match[2] || '0',\n        platform: platform_match[0] || ''\n    };\n\n    let browser = {};\n    if (matched.browser) {\n        browser[matched.browser] = true;\n\n        let versionArray = matched.majorVersion.split('.');\n        browser.version = {\n            major: parseInt(matched.majorVersion, 10),\n            string: matched.version\n        };\n        if (versionArray.length > 1) {\n            browser.version.minor = parseInt(versionArray[1], 10);\n        }\n        if (versionArray.length > 2) {\n            browser.version.build = parseInt(versionArray[2], 10);\n        }\n    }\n\n    if (matched.platform) {\n        browser[matched.platform] = true;\n    }\n\n    if (browser.chrome || browser.opr || browser.safari) {\n        browser.webkit = true;\n    }\n\n    // MSIE. IE11 has 'rv' identifer\n    if (browser.rv || browser.iemobile) {\n        if (browser.rv) {\n            delete browser.rv;\n        }\n        let msie = 'msie';\n        matched.browser = msie;\n        browser[msie] = true;\n    }\n\n    // Microsoft Edge\n    if (browser.edge) {\n        delete browser.edge;\n        let msedge = 'msedge';\n        matched.browser = msedge;\n        browser[msedge] = true;\n    }\n\n    // Opera 15+\n    if (browser.opr) {\n        let opera = 'opera';\n        matched.browser = opera;\n        browser[opera] = true;\n    }\n\n    // Stock android browsers are marked as Safari\n    if (browser.safari && browser.android) {\n        let android = 'android';\n        matched.browser = android;\n        browser[android] = true;\n    }\n\n    browser.name = matched.browser;\n    browser.platform = matched.platform;\n\n    for (let key in Browser) {\n        if (Browser.hasOwnProperty(key)) {\n            delete Browser[key];\n        }\n    }\n    Object.assign(Browser, browser);\n}\n\ndetect();\n\nexport default Browser;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DemuxErrors = {\n    OK: 'OK',\n    FORMAT_ERROR: 'FormatError',\n    FORMAT_UNSUPPORTED: 'FormatUnsupported',\n    CODEC_UNSUPPORTED: 'CodecUnsupported'\n};\n\nexport default DemuxErrors;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Represents an media sample (audio / video)\nexport class SampleInfo {\n\n    constructor(dts, pts, duration, originalDts, isSync) {\n        this.dts = dts;\n        this.pts = pts;\n        this.duration = duration;\n        this.originalDts = originalDts;\n        this.isSyncPoint = isSync;\n        this.fileposition = null;\n    }\n\n}\n\n// Media Segment concept is defined in Media Source Extensions spec.\n// Particularly in ISO BMFF format, an Media Segment contains a moof box followed by a mdat box.\nexport class MediaSegmentInfo {\n\n    constructor() {\n        this.beginDts = 0;\n        this.endDts = 0;\n        this.beginPts = 0;\n        this.endPts = 0;\n        this.originalBeginDts = 0;\n        this.originalEndDts = 0;\n        this.syncPoints = [];     // SampleInfo[n], for video IDR frames only\n        this.firstSample = null;  // SampleInfo\n        this.lastSample = null;   // SampleInfo\n    }\n\n    appendSyncPoint(sampleInfo) {  // also called Random Access Point\n        sampleInfo.isSyncPoint = true;\n        this.syncPoints.push(sampleInfo);\n    }\n\n}\n\n// Ordered list for recording video IDR frames, sorted by originalDts\nexport class IDRSampleList {\n\n    constructor() {\n        this._list = [];\n    }\n\n    clear() {\n        this._list = [];\n    }\n\n    appendArray(syncPoints) {\n        let list = this._list;\n\n        if (syncPoints.length === 0) {\n            return;\n        }\n\n        if (list.length > 0 && syncPoints[0].originalDts < list[list.length - 1].originalDts) {\n            this.clear();\n        }\n\n        Array.prototype.push.apply(list, syncPoints);\n    }\n\n    getLastSyncPointBeforeDts(dts) {\n        if (this._list.length == 0) {\n            return null;\n        }\n\n        let list = this._list;\n        let idx = 0;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (dts < list[0].dts) {\n            idx = 0;\n            lbound = ubound + 1;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (dts >= list[mid].dts && dts < list[mid + 1].dts)) {\n                idx = mid;\n                break;\n            } else if (list[mid].dts < dts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n        return this._list[idx];\n    }\n\n}\n\n// Data structure for recording information of media segments in single track.\nexport class MediaSegmentInfoList {\n\n    constructor(type) {\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1;  // cached last insert location\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get length() {\n        return this._list.length;\n    }\n\n    isEmpty() {\n        return this._list.length === 0;\n    }\n\n    clear() {\n        this._list = [];\n        this._lastAppendLocation = -1;\n    }\n\n    _searchNearestSegmentBefore(originalBeginDts) {\n        let list = this._list;\n        if (list.length === 0) {\n            return -2;\n        }\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        let idx = 0;\n\n        if (originalBeginDts < list[0].originalBeginDts) {\n            idx = -1;\n            return idx;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (originalBeginDts > list[mid].lastSample.originalDts &&\n                                (originalBeginDts < list[mid + 1].originalBeginDts))) {\n                idx = mid;\n                break;\n            } else if (list[mid].originalBeginDts < originalBeginDts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n        return idx;\n    }\n\n    _searchNearestSegmentAfter(originalBeginDts) {\n        return this._searchNearestSegmentBefore(originalBeginDts) + 1;\n    }\n\n    append(mediaSegmentInfo) {\n        let list = this._list;\n        let msi = mediaSegmentInfo;\n        let lastAppendIdx = this._lastAppendLocation;\n        let insertIdx = 0;\n\n        if (lastAppendIdx !== -1 && lastAppendIdx < list.length &&\n                                    msi.originalBeginDts >= list[lastAppendIdx].lastSample.originalDts &&\n                                    ((lastAppendIdx === list.length - 1) ||\n                                    (lastAppendIdx < list.length - 1 &&\n                                    msi.originalBeginDts < list[lastAppendIdx + 1].originalBeginDts))) {\n            insertIdx = lastAppendIdx + 1;  // use cached location idx\n        } else {\n            if (list.length > 0) {\n                insertIdx = this._searchNearestSegmentBefore(msi.originalBeginDts) + 1;\n            }\n        }\n\n        this._lastAppendLocation = insertIdx;\n        this._list.splice(insertIdx, 0, msi);\n    }\n\n    getLastSegmentBefore(originalBeginDts) {\n        let idx = this._searchNearestSegmentBefore(originalBeginDts);\n        if (idx >= 0) {\n            return this._list[idx];\n        } else {  // -1\n            return null;\n        }\n    }\n\n    getLastSampleBefore(originalBeginDts) {\n        let segment = this.getLastSegmentBefore(originalBeginDts);\n        if (segment != null) {\n            return segment.lastSample;\n        } else {\n            return null;\n        }\n    }\n\n    getLastSyncPointBefore(originalBeginDts) {\n        let segmentIdx = this._searchNearestSegmentBefore(originalBeginDts);\n        let syncPoints = this._list[segmentIdx].syncPoints;\n        while (syncPoints.length === 0 && segmentIdx > 0) {\n            segmentIdx--;\n            syncPoints = this._list[segmentIdx].syncPoints;\n        }\n        if (syncPoints.length > 0) {\n            return syncPoints[syncPoints.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n}","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass MediaInfo {\n\n    constructor() {\n        this.mimeType = null;\n        this.duration = null;\n\n        this.hasAudio = null;\n        this.hasVideo = null;\n        this.audioCodec = null;\n        this.videoCodec = null;\n        this.audioDataRate = null;\n        this.videoDataRate = null;\n\n        this.audioSampleRate = null;\n        this.audioChannelCount = null;\n\n        this.width = null;\n        this.height = null;\n        this.fps = null;\n        this.profile = null;\n        this.level = null;\n        this.refFrames = null;\n        this.chromaFormat = null;\n        this.sarNum = null;\n        this.sarDen = null;\n\n        this.metadata = null;\n        this.segments = null;  // MediaInfo[]\n        this.segmentCount = null;\n        this.hasKeyframesIndex = null;\n        this.keyframesIndex = null;\n    }\n\n    isComplete() {\n        let audioInfoComplete = (this.hasAudio === false) ||\n                                (this.hasAudio === true &&\n                                 this.audioCodec != null &&\n                                 this.audioSampleRate != null &&\n                                 this.audioChannelCount != null);\n\n        let videoInfoComplete = (this.hasVideo === false) ||\n                                (this.hasVideo === true &&\n                                 this.videoCodec != null &&\n                                 this.width != null &&\n                                 this.height != null &&\n                                 this.fps != null &&\n                                 this.profile != null &&\n                                 this.level != null &&\n                                 this.refFrames != null &&\n                                 this.chromaFormat != null &&\n                                 this.sarNum != null &&\n                                 this.sarDen != null);\n\n        // keyframesIndex may not be present\n        return this.mimeType != null &&\n               audioInfoComplete &&\n               videoInfoComplete;\n    }\n\n    isSeekable() {\n        return this.hasKeyframesIndex === true;\n    }\n\n    getNearestKeyframe(milliseconds) {\n        if (this.keyframesIndex == null) {\n            return null;\n        }\n\n        let table = this.keyframesIndex;\n        let keyframeIdx = this._search(table.times, milliseconds);\n\n        return {\n            index: keyframeIdx,\n            milliseconds: table.times[keyframeIdx],\n            fileposition: table.filepositions[keyframeIdx]\n        };\n    }\n\n    _search(list, value) {\n        let idx = 0;\n\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (value < list[0]) {\n            idx = 0;\n            lbound = ubound + 1;  // skip search\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n                idx = mid;\n                break;\n            } else if (list[mid] < value) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n\n        return idx;\n    }\n\n}\n\nexport default MediaInfo;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from './logger.js';\n\nclass LoggingControl {\n\n    static get forceGlobalTag() {\n        return Log.FORCE_GLOBAL_TAG;\n    }\n\n    static set forceGlobalTag(enable) {\n        Log.FORCE_GLOBAL_TAG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get globalTag() {\n        return Log.GLOBAL_TAG;\n    }\n\n    static set globalTag(tag) {\n        Log.GLOBAL_TAG = tag;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableAll() {\n        return Log.ENABLE_VERBOSE\n            && Log.ENABLE_DEBUG\n            && Log.ENABLE_INFO\n            && Log.ENABLE_WARN\n            && Log.ENABLE_ERROR;\n    }\n\n    static set enableAll(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        Log.ENABLE_DEBUG = enable;\n        Log.ENABLE_INFO = enable;\n        Log.ENABLE_WARN = enable;\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableDebug() {\n        return Log.ENABLE_DEBUG;\n    }\n\n    static set enableDebug(enable) {\n        Log.ENABLE_DEBUG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableVerbose() {\n        return Log.ENABLE_VERBOSE;\n    }\n\n    static set enableVerbose(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableInfo() {\n        return Log.ENABLE_INFO;\n    }\n\n    static set enableInfo(enable) {\n        Log.ENABLE_INFO = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableWarn() {\n        return Log.ENABLE_WARN;\n    }\n\n    static set enableWarn(enable) {\n        Log.ENABLE_WARN = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableError() {\n        return Log.ENABLE_ERROR;\n    }\n\n    static set enableError(enable) {\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static getConfig() {\n        return {\n            globalTag: Log.GLOBAL_TAG,\n            forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n            enableVerbose: Log.ENABLE_VERBOSE,\n            enableDebug: Log.ENABLE_DEBUG,\n            enableInfo: Log.ENABLE_INFO,\n            enableWarn: Log.ENABLE_WARN,\n            enableError: Log.ENABLE_ERROR,\n            enableCallback: Log.ENABLE_CALLBACK\n        };\n    }\n\n    static applyConfig(config) {\n        Log.GLOBAL_TAG = config.globalTag;\n        Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n        Log.ENABLE_VERBOSE = config.enableVerbose;\n        Log.ENABLE_DEBUG = config.enableDebug;\n        Log.ENABLE_INFO = config.enableInfo;\n        Log.ENABLE_WARN = config.enableWarn;\n        Log.ENABLE_ERROR = config.enableError;\n        Log.ENABLE_CALLBACK = config.enableCallback;\n    }\n\n    static _notifyChange() {\n        let emitter = LoggingControl.emitter;\n\n        if (emitter.listenerCount('change') > 0) {\n            let config = LoggingControl.getConfig();\n            emitter.emit('change', config);\n        }\n    }\n\n    static registerListener(listener) {\n        LoggingControl.emitter.addListener('change', listener);\n    }\n\n    static removeListener(listener) {\n        LoggingControl.emitter.removeListener('change', listener);\n    }\n\n    static addLogListener(listener) {\n        Log.emitter.addListener('log', listener);\n        if (Log.emitter.listenerCount('log') > 0) {\n            Log.ENABLE_CALLBACK = true;\n            LoggingControl._notifyChange();\n        }\n    }\n\n    static removeLogListener(listener) {\n        Log.emitter.removeListener('log', listener);\n        if (Log.emitter.listenerCount('log') === 0) {\n            Log.ENABLE_CALLBACK = false;\n            LoggingControl._notifyChange();\n        }\n    }\n\n}\n\nLoggingControl.emitter = new EventEmitter();\n\nexport default LoggingControl;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * This file is derived from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction checkContinuation(uint8array, start, checkLength) {\n    let array = uint8array;\n    if (start + checkLength < array.length) {\n        while (checkLength--) {\n            if ((array[++start] & 0xC0) !== 0x80)\n                return false;\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction decodeUTF8(uint8array) {\n    let out = [];\n    let input = uint8array;\n    let i = 0;\n    let length = uint8array.length;\n\n    while (i < length) {\n        if (input[i] < 0x80) {\n            out.push(String.fromCharCode(input[i]));\n            ++i;\n            continue;\n        } else if (input[i] < 0xC0) {\n            // fallthrough\n        } else if (input[i] < 0xE0) {\n            if (checkContinuation(input, i, 1)) {\n                let ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F);\n                if (ucs4 >= 0x80) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 2;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF0) {\n            if (checkContinuation(input, i, 2)) {\n                let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n                if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 3;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF8) {\n            if (checkContinuation(input, i, 3)) {\n                let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12\n                         | (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F);\n                if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n                    ucs4 -= 0x10000;\n                    out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800));\n                    out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00));\n                    i += 4;\n                    continue;\n                }\n            }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n    }\n\n    return out.join('');\n}\n\nexport default decodeUTF8;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport decodeUTF8 from '../utils/utf8-conv.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\nlet le = (function () {\n    let buf = new ArrayBuffer(2);\n    (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\n    return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\n})();\n\nclass AMF {\n\n    static parseScriptData(arrayBuffer, dataOffset, dataSize) {\n        let data = {};\n\n        try {\n            let name = AMF.parseValue(arrayBuffer, dataOffset, dataSize);\n            let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n\n            data[name.data] = value.data;\n        } catch (e) {\n            Log.e('AMF', e.toString());\n        }\n\n        return data;\n    }\n\n    static parseObject(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 3) {\n            throw new IllegalStateException('Data not enough when parse ScriptDataObject');\n        }\n        let name = AMF.parseString(arrayBuffer, dataOffset, dataSize);\n        let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n        let isObjectEnd = value.objectEnd;\n\n        return {\n            data: {\n                name: name.data,\n                value: value.data\n            },\n            size: name.size + value.size,\n            objectEnd: isObjectEnd\n        };\n    }\n\n    static parseVariable(arrayBuffer, dataOffset, dataSize) {\n        return AMF.parseObject(arrayBuffer, dataOffset, dataSize);\n    }\n\n    static parseString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 2) {\n            throw new IllegalStateException('Data not enough when parse String');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let length = v.getUint16(0, !le);\n\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 2, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 2 + length\n        };\n    }\n\n    static parseLongString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 4) {\n            throw new IllegalStateException('Data not enough when parse LongString');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let length = v.getUint32(0, !le);\n\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 4, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 4 + length\n        };\n    }\n\n    static parseDate(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 10) {\n            throw new IllegalStateException('Data size invalid when parse Date');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let timestamp = v.getFloat64(0, !le);\n        let localTimeOffset = v.getInt16(8, !le);\n        timestamp += localTimeOffset * 60 * 1000;  // get UTC time\n\n        return {\n            data: new Date(timestamp),\n            size: 8 + 2\n        };\n    }\n\n    static parseValue(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 1) {\n            throw new IllegalStateException('Data not enough when parse Value');\n        }\n\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let offset = 1;\n        let type = v.getUint8(0);\n        let value;\n        let objectEnd = false;\n\n        try {\n            switch (type) {\n                case 0:  // Number(Double) type\n                    value = v.getFloat64(1, !le);\n                    offset += 8;\n                    break;\n                case 1: {  // Boolean type\n                    let b = v.getUint8(1);\n                    value = b ? true : false;\n                    offset += 1;\n                    break;\n                }\n                case 2: {  // String type\n                    let amfstr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = amfstr.data;\n                    offset += amfstr.size;\n                    break;\n                }\n                case 3: { // Object(s) type\n                    value = {};\n                    let terminal = 0;  // workaround for malformed Objects which has missing ScriptDataObjectEnd\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                        terminal = 3;\n                    }\n                    while (offset < dataSize - 4) {  // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n                        let amfobj = AMF.parseObject(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\n                        if (amfobj.objectEnd)\n                            break;\n                        value[amfobj.data.name] = amfobj.data.value;\n                        offset += amfobj.size;\n                    }\n                    if (offset <= dataSize - 3) {\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\n                        if (marker === 9) {\n                            offset += 3;\n                        }\n                    }\n                    break;\n                }\n                case 8: { // ECMA array type (Mixed array)\n                    value = {};\n                    offset += 4;  // ECMAArrayLength(UI32)\n                    let terminal = 0;  // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                        terminal = 3;\n                    }\n                    while (offset < dataSize - 8) {  // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n                        let amfvar = AMF.parseVariable(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\n                        if (amfvar.objectEnd)\n                            break;\n                        value[amfvar.data.name] = amfvar.data.value;\n                        offset += amfvar.size;\n                    }\n                    if (offset <= dataSize - 3) {\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\n                        if (marker === 9) {\n                            offset += 3;\n                        }\n                    }\n                    break;\n                }\n                case 9:  // ScriptDataObjectEnd\n                    value = undefined;\n                    offset = 1;\n                    objectEnd = true;\n                    break;\n                case 10: {  // Strict array type\n                    // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\n                    value = [];\n                    let strictArrayLength = v.getUint32(1, !le);\n                    offset += 4;\n                    for (let i = 0; i < strictArrayLength; i++) {\n                        let val = AMF.parseValue(arrayBuffer, dataOffset + offset, dataSize - offset);\n                        value.push(val.data);\n                        offset += val.size;\n                    }\n                    break;\n                }\n                case 11: {  // Date type\n                    let date = AMF.parseDate(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = date.data;\n                    offset += date.size;\n                    break;\n                }\n                case 12: {  // Long string type\n                    let amfLongStr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = amfLongStr.data;\n                    offset += amfLongStr.size;\n                    break;\n                }\n                default:\n                    // ignore and skip\n                    offset = dataSize;\n                    Log.w('AMF', 'Unsupported AMF value type ' + type);\n            }\n        } catch (e) {\n            Log.e('AMF', e.toString());\n        }\n\n        return {\n            data: value,\n            size: offset,\n            objectEnd: objectEnd\n        };\n    }\n\n}\n\nexport default AMF;","interface ProgramToPMTPIDMap {\n    [program: number]: number;\n}\n\nexport class PAT {\n    version_number: number;\n    network_pid: number;\n    // program_number -> pmt_pid\n    program_pmt_pid: ProgramToPMTPIDMap = {};\n}\n\nexport enum StreamType {\n    kMPEG1Audio = 0x03,\n    kMPEG2Audio = 0x04,\n    kPESPrivateData = 0x06,\n    kADTSAAC = 0x0F,\n    kID3 = 0x15,\n    kSCTE35 = 0x86,\n    kH264 = 0x1b,\n    kH265 = 0x24\n}\n\ninterface PIDToStreamTypeMap {\n    [pid: number]: StreamType;\n}\n\nexport class PMT {\n    program_number: number;\n    version_number: number;\n    pcr_pid: number;\n    // pid -> stream_type\n    pid_stream_type: PIDToStreamTypeMap = {};\n\n    common_pids: {\n        h264: number | undefined,\n        h265: number | undefined;\n        adts_aac: number | undefined\n    } = {\n        h264: undefined,\n        h265: undefined,\n        adts_aac: undefined\n    };\n\n    pes_private_data_pids: {\n        [pid: number]: boolean\n    } = {};\n\n    timed_id3_pids: {\n        [pid: number]: boolean\n    } = {};\n\n    scte_35_pids: {\n        [pid: number]: boolean\n    } = {};\n}\n\nexport interface ProgramToPMTMap {\n    [program: number]: PMT;\n}\n\nexport class PESData {\n    pid: number;\n    data: Uint8Array;\n    stream_type: StreamType;\n    file_position: number;\n    random_access_indicator: number;\n}\n\nexport class SectionData {\n    pid: number;\n    data: Uint8Array;\n    file_position: number;\n    random_access_indicator: number;\n}\n\nexport class SliceQueue {\n    slices: Uint8Array[] = [];\n    total_length: number = 0;\n    expected_length: number = 0;\n    file_position: number = 0;\n    random_access_indicator: 0;\n}\n\nexport interface PIDToSliceQueues {\n    [pid: number]: SliceQueue;\n}\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\n\n// Exponential-Golomb buffer decoder\nclass ExpGolomb {\n\n    constructor(uint8array) {\n        this.TAG = 'ExpGolomb';\n\n        this._buffer = uint8array;\n        this._buffer_index = 0;\n        this._total_bytes = uint8array.byteLength;\n        this._total_bits = uint8array.byteLength * 8;\n        this._current_word = 0;\n        this._current_word_bits_left = 0;\n    }\n\n    destroy() {\n        this._buffer = null;\n    }\n\n    _fillCurrentWord() {\n        let buffer_bytes_left = this._total_bytes - this._buffer_index;\n        if (buffer_bytes_left <= 0)\n            throw new IllegalStateException('ExpGolomb: _fillCurrentWord() but no bytes available');\n\n        let bytes_read = Math.min(4, buffer_bytes_left);\n        let word = new Uint8Array(4);\n        word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\n        this._current_word = new DataView(word.buffer).getUint32(0, false);\n\n        this._buffer_index += bytes_read;\n        this._current_word_bits_left = bytes_read * 8;\n    }\n\n    readBits(bits) {\n        if (bits > 32)\n            throw new InvalidArgumentException('ExpGolomb: readBits() bits exceeded max 32bits!');\n\n        if (bits <= this._current_word_bits_left) {\n            let result = this._current_word >>> (32 - bits);\n            this._current_word <<= bits;\n            this._current_word_bits_left -= bits;\n            return result;\n        }\n\n        let result = this._current_word_bits_left ? this._current_word : 0;\n        result = result >>> (32 - this._current_word_bits_left);\n        let bits_need_left = bits - this._current_word_bits_left;\n\n        this._fillCurrentWord();\n        let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\n\n        let result2 = this._current_word >>> (32 - bits_read_next);\n        this._current_word <<= bits_read_next;\n        this._current_word_bits_left -= bits_read_next;\n\n        result = (result << bits_read_next) | result2;\n        return result;\n    }\n\n    readBool() {\n        return this.readBits(1) === 1;\n    }\n\n    readByte() {\n        return this.readBits(8);\n    }\n\n    _skipLeadingZero() {\n        let zero_count;\n        for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\n            if (0 !== (this._current_word & (0x80000000 >>> zero_count))) {\n                this._current_word <<= zero_count;\n                this._current_word_bits_left -= zero_count;\n                return zero_count;\n            }\n        }\n        this._fillCurrentWord();\n        return zero_count + this._skipLeadingZero();\n    }\n\n    readUEG() {  // unsigned exponential golomb\n        let leading_zeros = this._skipLeadingZero();\n        return this.readBits(leading_zeros + 1) - 1;\n    }\n\n    readSEG() {  // signed exponential golomb\n        let value = this.readUEG();\n        if (value & 0x01) {\n            return (value + 1) >>> 1;\n        } else {\n            return -1 * (value >>> 1);\n        }\n    }\n\n}\n\nexport default ExpGolomb;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpGolomb from './exp-golomb.js';\n\nclass SPSParser {\n\n    static _ebsp2rbsp(uint8array) {\n        let src = uint8array;\n        let src_length = src.byteLength;\n        let dst = new Uint8Array(src_length);\n        let dst_idx = 0;\n\n        for (let i = 0; i < src_length; i++) {\n            if (i >= 2) {\n                // Unescape: Skip 0x03 after 00 00\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                    continue;\n                }\n            }\n            dst[dst_idx] = src[i];\n            dst_idx++;\n        }\n\n        return new Uint8Array(dst.buffer, 0, dst_idx);\n    }\n\n    static parseSPS(uint8array) {\n        let codec_array = uint8array.subarray(1, 4);\n        let codec_mimetype = 'avc1.';\n        for (let j = 0; j < 3; j++) {\n            let h = codec_array[j].toString(16);\n            if (h.length < 2) {\n                h = '0' + h;\n            }\n            codec_mimetype += h;\n        }\n\n        let rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        gb.readByte();\n        let profile_idc = gb.readByte();  // profile_idc\n        gb.readByte();  // constraint_set_flags[5] + reserved_zero[3]\n        let level_idc = gb.readByte();  // level_idc\n        gb.readUEG();  // seq_parameter_set_id\n\n        let profile_string = SPSParser.getProfileString(profile_idc);\n        let level_string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc = 1;\n        let chroma_format = 420;\n        let chroma_format_table = [0, 420, 422, 444];\n        let bit_depth_luma = 8;\n        let bit_depth_chroma = 8;\n\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);  // separate_colour_plane_flag\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth_luma = gb.readUEG() + 8;  // bit_depth_luma_minus8\n            bit_depth_chroma = gb.readUEG() + 8;  // bit_depth_chroma_minus8\n            gb.readBits(1);  // qpprime_y_zero_transform_bypass_flag\n            if (gb.readBool()) {  // seq_scaling_matrix_present_flag\n                let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {  // seq_scaling_list_present_flag\n                        if (i < 6) {\n                            SPSParser._skipScalingList(gb, 16);\n                        } else {\n                            SPSParser._skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG();  // log2_max_frame_num_minus4\n        let pic_order_cnt_type = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();  // log2_max_pic_order_cnt_lsb_minus_4\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);  // delta_pic_order_always_zero_flag\n            gb.readSEG();  // offset_for_non_ref_pic\n            gb.readSEG();  // offset_for_top_to_bottom_field\n            let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();  // offset_for_ref_frame\n            }\n        }\n        let ref_frames = gb.readUEG();  // max_num_ref_frames\n        gb.readBits(1);  // gaps_in_frame_num_value_allowed_flag\n\n        let pic_width_in_mbs_minus1 = gb.readUEG();\n        let pic_height_in_map_units_minus1 = gb.readUEG();\n\n        let frame_mbs_only_flag = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1);  // mb_adaptive_frame_field_flag\n        }\n        gb.readBits(1);  // direct_8x8_inference_flag\n\n        let frame_crop_left_offset = 0;\n        let frame_crop_right_offset = 0;\n        let frame_crop_top_offset = 0;\n        let frame_crop_bottom_offset = 0;\n\n        let frame_cropping_flag = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width = 1, sar_height = 1;\n        let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\n\n        let vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                let aspect_ratio_idc = gb.readByte();\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {  // overscan_info_present_flag\n                gb.readBool();  // overscan_appropriate_flag\n            }\n            if (gb.readBool()) {  // video_signal_type_present_flag\n                gb.readBits(4);  // video_format & video_full_range_flag\n                if (gb.readBool()) {  // colour_description_present_flag\n                    gb.readBits(24);  // colour_primaries & transfer_characteristics & matrix_coefficients\n                }\n            }\n            if (gb.readBool()) {  // chroma_loc_info_present_flag\n                gb.readUEG();  // chroma_sample_loc_type_top_field\n                gb.readUEG();  // chroma_sample_loc_type_bottom_field\n            }\n            if (gb.readBool()) {  // timing_info_present_flag\n                let num_units_in_tick = gb.readBits(32);\n                let time_scale = gb.readBits(32);\n                fps_fixed = gb.readBool();  // fixed_frame_rate_flag\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x = 0, crop_unit_y = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            let sub_wc = (chroma_format_idc === 3) ? 1 : 2;\n            let sub_hc = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        let present_width = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return {\n            codec_mimetype,\n            profile_idc,\n            level_idc,\n            profile_string,  // baseline, high, high10, ...\n            level_string,  // 3, 3.1, 4, 4.1, 5, 5.1, ...\n            chroma_format_idc,\n            bit_depth: bit_depth_luma,  // 8bit, 10bit, ...\n            bit_depth_luma,\n            bit_depth_chroma,\n            ref_frames,\n            chroma_format,  // 4:2:0, 4:2:2, ...\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps: fps,\n                fps_den: fps_den,\n                fps_num: fps_num\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: present_width,\n                height: codec_height\n            }\n        };\n    }\n\n    static _skipScalingList(gb, count) {\n        let last_scale = 8, next_scale = 8;\n        let delta_scale = 0;\n        for (let i = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\n        }\n    }\n\n    static getProfileString(profile_idc) {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    static getLevelString(level_idc) {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    static getChromaFormatString(chroma) {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n}\n\nexport default SPSParser;","/*\n * Copyright (C) 2022 もにょてっく. All Rights Reserved.\n *\n * @author もにょ〜ん <monyone.teihen@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpGolomb from './exp-golomb.js';\n\nclass H265NaluParser {\n\n    static _ebsp2rbsp(uint8array) {\n        let src = uint8array;\n        let src_length = src.byteLength;\n        let dst = new Uint8Array(src_length);\n        let dst_idx = 0;\n\n        for (let i = 0; i < src_length; i++) {\n            if (i >= 2) {\n                // Unescape: Skip 0x03 after 00 00\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                    continue;\n                }\n            }\n            dst[dst_idx] = src[i];\n            dst_idx++;\n        }\n\n        return new Uint8Array(dst.buffer, 0, dst_idx);\n    }\n\n    static parseVPS(uint8array) {\n        let rbsp = H265NaluParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        /* remove NALu Header */\n        gb.readByte();\n        gb.readByte();\n\n        // VPS\n        let video_parameter_set_id = gb.readBits(4);\n        gb.readBits(2);\n        let max_layers_minus1 = gb.readBits(6);\n        let max_sub_layers_minus1 = gb.readBits(3);\n        let temporal_id_nesting_flag = gb.readBool();\n        // and more ...\n\n        return {\n            num_temporal_layers: max_sub_layers_minus1 + 1,\n            temporal_id_nested: temporal_id_nesting_flag\n        }\n    }\n\n    static parseSPS(uint8array) {\n        let rbsp = H265NaluParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        /* remove NALu Header */\n        gb.readByte();\n        gb.readByte();\n\n        let left_offset = 0, right_offset = 0, top_offset = 0, bottom_offset = 0;\n\n        // SPS\n        let video_paramter_set_id = gb.readBits(4);\n        let max_sub_layers_minus1 = gb.readBits(3);\n        let temporal_id_nesting_flag = gb.readBool();\n\n        // profile_tier_level begin\n        let general_profile_space = gb.readBits(2);\n        let general_tier_flag = gb.readBool();\n        let general_profile_idc = gb.readBits(5);\n        let general_profile_compatibility_flags_1 = gb.readByte();\n        let general_profile_compatibility_flags_2 = gb.readByte();\n        let general_profile_compatibility_flags_3 = gb.readByte();\n        let general_profile_compatibility_flags_4 = gb.readByte();\n        let general_constraint_indicator_flags_1 = gb.readByte();\n        let general_constraint_indicator_flags_2 = gb.readByte();\n        let general_constraint_indicator_flags_3 = gb.readByte();\n        let general_constraint_indicator_flags_4 = gb.readByte();\n        let general_constraint_indicator_flags_5 = gb.readByte();\n        let general_constraint_indicator_flags_6 = gb.readByte();\n        let general_level_idc = gb.readByte();\n        let sub_layer_profile_present_flag = [];\n        let sub_layer_level_present_flag = [];\n        for (let i = 0; i < max_sub_layers_minus1; i++) {\n            sub_layer_profile_present_flag.push(gb.readBool());\n            sub_layer_level_present_flag.push(gb.readBool());\n        }\n        if (max_sub_layers_minus1 > 0) {\n            for (let i = max_sub_layers_minus1; i < 8; i++) { gb.readBits(2); }\n        }\n        for (let i = 0; i < max_sub_layers_minus1; i++) {\n            if (sub_layer_profile_present_flag[i]) {\n                gb.readByte(); // sub_layer_profile_space, sub_layer_tier_flag, sub_layer_profile_idc\n                gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); // sub_layer_profile_compatibility_flag\n                gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte();\n            }\n            if (sub_layer_profile_present_flag[i]) {\n                gb.readByte();\n            }\n        }\n        // profile_tier_level end\n\n        let seq_parameter_set_id = gb.readUEG();\n        let chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc == 3) {\n            gb.readBits(1);  // separate_colour_plane_flag\n        }\n        let pic_width_in_luma_samples = gb.readUEG();\n        let pic_height_in_luma_samples = gb.readUEG();\n        let conformance_window_flag = gb.readBool();\n        if (conformance_window_flag) {\n            left_offset += gb.readUEG();\n            right_offset += gb.readUEG();\n            top_offset += gb.readUEG();\n            bottom_offset += gb.readUEG();\n        }\n        let bit_depth_luma_minus8 = gb.readUEG();\n        let bit_depth_chroma_minus8 = gb.readUEG();\n        let log2_max_pic_order_cnt_lsb_minus4 = gb.readUEG();\n        let sub_layer_ordering_info_present_flag = gb.readBool();\n        for (let i = sub_layer_ordering_info_present_flag ? 0 : max_sub_layers_minus1; i <= max_sub_layers_minus1; i++) {\n            gb.readUEG(); // max_dec_pic_buffering_minus1[i]\n            gb.readUEG(); // max_num_reorder_pics[i]\n            gb.readUEG(); // max_latency_increase_plus1[i]\n        }\n        let log2_min_luma_coding_block_size_minus3 = gb.readUEG();\n        let log2_diff_max_min_luma_coding_block_size = gb.readUEG();\n        let log2_min_transform_block_size_minus2 = gb.readUEG();\n        let log2_diff_max_min_transform_block_size = gb.readUEG();\n        let max_transform_hierarchy_depth_inter = gb.readUEG();\n        let max_transform_hierarchy_depth_intra = gb.readUEG();\n        let scaling_list_enabled_flag = gb.readBool();\n        if (scaling_list_enabled_flag) {\n            let sps_scaling_list_data_present_flag = gb.readBool();\n            if (sps_scaling_list_data_present_flag) {\n                for (let sizeId = 0; sizeId < 4; sizeId++) {\n                    for(let matrixId = 0; matrixId < ((sizeId === 3) ? 2 : 6); matrixId++){\n                        let scaling_list_pred_mode_flag = gb.readBool();\n                        if (!scaling_list_pred_mode_flag) {\n                            gb.readUEG(); // scaling_list_pred_matrix_id_delta\n                        } else {\n                            let coefNum = Math.min(64, (1 << (4 + (sizeId << 1))));\n                            if (sizeId > 1) { gb.readSEG() }\n                            for (let i = 0; i < coefNum; i++) { gb.readSEG(); }\n                        }\n                    }\n                }\n            }\n        }\n        let amp_enabled_flag = gb.readBool();\n        let sample_adaptive_offset_enabled_flag = gb.readBool();\n        let pcm_enabled_flag = gb.readBool();\n        if (pcm_enabled_flag) {\n            gb.readByte();\n            gb.readUEG();\n            gb.readUEG();\n            gb.readBool();\n        }\n        let num_short_term_ref_pic_sets = gb.readUEG();\n        let num_delta_pocs = 0;\n        for (let i = 0; i < num_short_term_ref_pic_sets; i++) {\n            let inter_ref_pic_set_prediction_flag = false;\n            if (i !== 0) { inter_ref_pic_set_prediction_flag = gb.readBool(); }\n            if (inter_ref_pic_set_prediction_flag) {\n                if (i === num_short_term_ref_pic_sets) { gb.readUEG(); }\n                gb.readBool();\n                gb.readUEG();\n                let next_num_delta_pocs = 0;\n                for (let j = 0; j <= num_delta_pocs; j++) {\n                    let used_by_curr_pic_flag = gb.readBool();\n                    let use_delta_flag = false;\n                    if (!used_by_curr_pic_flag) {\n                        use_delta_flag = gb.readBool();\n                    }\n                    if (used_by_curr_pic_flag || use_delta_flag) {\n                        next_num_delta_pocs++;\n                    }\n                }\n                num_delta_pocs = next_num_delta_pocs;\n            } else {\n                let num_negative_pics = gb.readUEG();\n                let num_positive_pics = gb.readUEG();\n                num_delta_pocs = num_negative_pics + num_positive_pics;\n                for (let j = 0; j < num_negative_pics; j++) {\n                    gb.readUEG();\n                    gb.readBool();\n                }\n                for (let j = 0; j < num_positive_pics; j++) {\n                    gb.readUEG();\n                    gb.readBool();\n                }\n            }\n        }\n        let long_term_ref_pics_present_flag = gb.readBool();\n        if (long_term_ref_pics_present_flag) {\n            let num_long_term_ref_pics_sps = gb.readUEG();\n            for (let i = 0; i < num_long_term_ref_pics_sps; i++) {\n                for (let j = 0; j < (log2_max_pic_order_cnt_lsb_minus4 + 4); j++) { gb.readBits(1); }\n                gb.readBits(1);\n            }\n        }\n        //*\n        let default_display_window_flag = false; // for calc offset\n        let min_spatial_segmentation_idc = 0; // for hvcC\n        let sar_width = 1, sar_height = 1;\n        let fps_fixed = false, fps_den = 1, fps_num = 1;\n        //*/\n        let sps_temporal_mvp_enabled_flag = gb.readBool();\n        let strong_intra_smoothing_enabled_flag = gb.readBool();\n        let vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            let aspect_ratio_info_present_flag = gb.readBool();\n            if (aspect_ratio_info_present_flag) {\n                let aspect_ratio_idc = gb.readByte();\n\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readBits(16);\n                    sar_height = gb.readBits(16);\n                }\n            }\n            let overscan_info_present_flag = gb.readBool();\n            if (overscan_info_present_flag) {\n                gb.readBool();\n            }\n            let video_signal_type_present_flag = gb.readBool();\n            if (video_signal_type_present_flag) {\n                gb.readBits(3);\n                gb.readBool();\n                let colour_description_present_flag = gb.readBool();\n                if (colour_description_present_flag) {\n                    gb.readByte();\n                    gb.readByte();\n                    gb.readByte();\n                }\n            }\n            let chroma_loc_info_present_flag = gb.readBool();\n            if (chroma_loc_info_present_flag) {\n                gb.readUEG();\n                gb.readUEG();\n            }\n            let neutral_chroma_indication_flag = gb.readBool();\n            let field_seq_flag = gb.readBool();\n            let frame_field_info_present_flag = gb.readBool();\n            default_display_window_flag = gb.readBool();\n            if (default_display_window_flag) {\n                left_offset += gb.readUEG();\n                right_offset += gb.readUEG();\n                top_offset += gb.readUEG();\n                bottom_offset += gb.readUEG();\n            }\n            let vui_timing_info_present_flag = gb.readBool();\n            if (vui_timing_info_present_flag) {\n                fps_den = gb.readBits(32);\n                fps_num = gb.readBits(32);\n                let vui_poc_proportional_to_timing_flag = gb.readBool();\n                if (vui_poc_proportional_to_timing_flag) {\n                    gb.readUEG();\n                    let vui_hrd_parameters_present_flag = gb.readBool();\n                    if (vui_hrd_parameters_present_flag) {\n                        let commonInfPresentFlag = 1;\n                        let nal_hrd_parameters_present_flag = false;\n                        let vcl_hrd_parameters_present_flag = false;\n                        if (commonInfPresentFlag) {\n                            nal_hrd_parameters_present_flag = gb.readBool();\n                            vcl_hrd_parameters_present_flag = gb.readBool();\n                            if( nal_hrd_parameters_present_flag || vcl_hrd_parameters_present_flag ){\n                                let sub_pic_hrd_params_present_flag = gb.readBool();\n                                if (sub_pic_hrd_params_present_flag) {\n                                    gb.readByte();\n                                    gb.readBits(5);\n                                    gb.readBool();\n                                    gb.readBits(5);\n                                }\n                                let bit_rate_scale = gb.readBits(4);\n                                let cpb_size_scale = gb.readBits(4);\n                                if (sub_pic_hrd_params_present_flag) {\n                                    gb.readBits(4);\n                                }\n                                gb.readBits(5);\n                                gb.readBits(5);\n                                gb.readBits(5);\n                            }\n                        }\n                        for (let i = 0; i <= max_sub_layers_minus1; i++) {\n                            let fixed_pic_rate_general_flag = gb.readBool();\n                            fps_fixed = fixed_pic_rate_general_flag;\n                            let fixed_pic_rate_within_cvs_flag = false;\n                            let cpbCnt = 1;\n                            if (!fixed_pic_rate_general_flag) {\n                                fixed_pic_rate_within_cvs_flag = gb.readBool();\n                            }\n                            let low_delay_hrd_flag = false;\n                            if (fixed_pic_rate_within_cvs_flag) {\n                                gb.readSEG();\n                            } else {\n                                low_delay_hrd_flag = gb.readBool();\n                            }\n                            if (!low_delay_hrd_flag) {\n                                cpbcnt = gb.readUEG() + 1;\n                            }\n                            if (nal_hrd_parameters_present_flag) {\n                                for (let j = 0; j < cpbCnt; j++) {\n                                    gb.readUEG(); gb.readUEG();\n                                    if (sub_pic_hrd_params_present_flag) {\n                                        gb.readUEG(); gb.readUEG();\n                                    }\n                                }\n                            }\n                            if (vcl_hrd_parameters_present_flag) {\n                                for (let j = 0; j < cpbCnt; j++) {\n                                    gb.readUEG(); gb.readUEG();\n                                    if (sub_pic_hrd_params_present_flag) {\n                                        gb.readUEG(); gb.readUEG();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            let bitstream_restriction_flag = gb.readBool();\n            if (bitstream_restriction_flag) {\n                let tiles_fixed_structure_flag = gb.readBool()\n                let motion_vectors_over_pic_boundaries_flag = gb.readBool()\n                let restricted_ref_pic_lists_flag = gb.readBool();\n                min_spatial_segmentation_idc = gb.readUEG();\n                let max_bytes_per_pic_denom = gb.readUEG();\n                let max_bits_per_min_cu_denom = gb.readUEG();\n                let log2_max_mv_length_horizontal = gb.readUEG();\n                let log2_max_mv_length_vertical = gb.readUEG();\n            }\n        }\n        let sps_extension_flag = gb.readBool(); // ignore...\n\n        // for meta data\n        let codec_mimetype = `hvc1.${general_profile_idc}.1.L${general_level_idc}.B0`;\n        let codec_width = pic_width_in_luma_samples;\n        let codec_height = pic_height_in_luma_samples;\n        let sar_scale = 1;\n        if (sar_width !== 1 && sar_height !== 1) {\n            sar_scale = sar_width / sar_height;\n        }\n\n        gb.destroy();\n        gb = null;\n\n        return {\n            codec_mimetype,\n            level_string: H265NaluParser.getLevelString(general_level_idc),\n            profile_idc: general_profile_idc,\n            bit_depth: bit_depth_luma_minus8 + 8,\n            ref_frames: 1, // FIXME!!!\n            chroma_format: chroma_format_idc,\n            chroma_format_string: H265NaluParser.getChromaFormatString(chroma_format_idc),\n\n            general_level_idc,\n            general_profile_space,\n            general_tier_flag,\n            general_profile_idc,\n            general_profile_compatibility_flags_1,\n            general_profile_compatibility_flags_2,\n            general_profile_compatibility_flags_3,\n            general_profile_compatibility_flags_4,\n            general_constraint_indicator_flags_1,\n            general_constraint_indicator_flags_2,\n            general_constraint_indicator_flags_3,\n            general_constraint_indicator_flags_4,\n            general_constraint_indicator_flags_5,\n            general_constraint_indicator_flags_6,\n            min_spatial_segmentation_idc,\n            constant_frame_rate: 0 /* FIXME!! fps_fixed ? 1 : 0? */,\n            chroma_format_idc,\n            bit_depth_luma_minus8,\n            bit_depth_chroma_minus8,\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps: fps_num / fps_den,\n                fps_den: fps_den,\n                fps_num: fps_num,\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: codec_width * sar_scale,\n                height: codec_height\n            }\n        };\n    }\n\n    static parsePPS(uint8array) {\n        let rbsp = H265NaluParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        /* remove NALu Header */\n        gb.readByte();\n        gb.readByte();\n\n        let pic_parameter_set_id = gb.readUEG();\n        let seq_parameter_set_id = gb.readUEG();\n        let dependent_slice_segments_enabled_flag = gb.readBool();\n        let output_flag_present_flag = gb.readBool();\n        let num_extra_slice_header_bits = gb.readBits(3);\n        let sign_data_hiding_enabled_flag = gb.readBool();\n        let cabac_init_present_flag = gb.readBool();\n        let num_ref_idx_l0_default_active_minus1 = gb.readUEG();\n        let num_ref_idx_l1_default_active_minus1 = gb.readUEG();\n        let init_qp_minus26 = gb.readSEG();\n        let constrained_intra_pred_flag = gb.readBool();\n        let transform_skip_enabled_flag = gb.readBool();\n        let cu_qp_delta_enabled_flag = gb.readBool();\n        if (cu_qp_delta_enabled_flag) {\n            let diff_cu_qp_delta_depth = gb.readUEG();\n        }\n        let cb_qp_offset = gb.readSEG();\n        let cr_qp_offset = gb.readSEG();\n        let pps_slice_chroma_qp_offsets_present_flag = gb.readBool();\n        let weighted_pred_flag = gb.readBool();\n        let weighted_bipred_flag = gb.readBool();\n        let transquant_bypass_enabled_flag = gb.readBool();\n        let tiles_enabled_flag = gb.readBool();\n        let entropy_coding_sync_enabled_flag = gb.readBool();\n        // and more ...\n\n        // needs hvcC\n        let parallelismType = 1; // slice-based parallel decoding\n        if (entropy_coding_sync_enabled_flag && tiles_enabled_flag) {\n            parallelismType = 0; // mixed-type parallel decoding\n        } else if (entropy_coding_sync_enabled_flag) {\n            parallelismType = 3; // wavefront-based parallel decoding\n        } else if (tiles_enabled_flag) {\n            parallelismType = 2; // tile-based parallel decoding\n        }\n\n        return {\n            parallelismType\n        }\n    }\n\n    static getChromaFormatString(chroma_idc) {\n        switch (chroma_idc) {\n            case 0: return '4:0:0';\n            case 1: return '4:2:0';\n            case 2: return '4:2:2';\n            case 3: return '4:4:4';\n            default: return 'Unknown';\n        }\n    }\n\n    static getProfileString(profile_idc) {\n        switch (profile_idc) {\n            case 1: return 'Main';\n            case 2: return 'Main10';\n            case 3: return 'MainSP';\n            case 4: return 'Rext';\n            case 9: return 'SCC';\n            default: return 'Unknown';\n        }\n    }\n\n    static getLevelString(level_idc) {\n        return (level_idc / 30).toFixed(1);\n    }\n}\n\nexport default H265NaluParser;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport AMF from './amf-parser.js';\nimport SPSParser from './sps-parser.js';\nimport DemuxErrors from './demux-errors.js';\nimport MediaInfo from '../core/media-info.js';\nimport {IllegalStateException} from '../utils/exception.js';\nimport H265Parser from './h265-parser.js';\n\nfunction Swap16(src) {\n    return (((src >>> 8) & 0xFF) |\n            ((src & 0xFF) << 8));\n}\n\nfunction Swap32(src) {\n    return (((src & 0xFF000000) >>> 24) |\n            ((src & 0x00FF0000) >>> 8)  |\n            ((src & 0x0000FF00) << 8)   |\n            ((src & 0x000000FF) << 24));\n}\n\nfunction ReadBig32(array, index) {\n    return ((array[index] << 24)     |\n            (array[index + 1] << 16) |\n            (array[index + 2] << 8)  |\n            (array[index + 3]));\n}\n\n\nclass FLVDemuxer {\n\n    constructor(probeData, config) {\n        this.TAG = 'FLVDemuxer';\n\n        this._config = config;\n\n        this._onError = null;\n        this._onMediaInfo = null;\n        this._onMetaDataArrived = null;\n        this._onScriptDataArrived = null;\n        this._onTrackMetadata = null;\n        this._onDataAvailable = null;\n\n        this._dataOffset = probeData.dataOffset;\n        this._firstParse = true;\n        this._dispatch = false;\n\n        this._hasAudio = probeData.hasAudioTrack;\n        this._hasVideo = probeData.hasVideoTrack;\n\n        this._hasAudioFlagOverrided = false;\n        this._hasVideoFlagOverrided = false;\n\n        this._audioInitialMetadataDispatched = false;\n        this._videoInitialMetadataDispatched = false;\n\n        this._mediaInfo = new MediaInfo();\n        this._mediaInfo.hasAudio = this._hasAudio;\n        this._mediaInfo.hasVideo = this._hasVideo;\n        this._metadata = null;\n        this._audioMetadata = null;\n        this._videoMetadata = null;\n\n        this._naluLengthSize = 4;\n        this._timestampBase = 0;  // int32, in milliseconds\n        this._timescale = 1000;\n        this._duration = 0;  // int32, in milliseconds\n        this._durationOverrided = false;\n        this._referenceFrameRate = {\n            fixed: true,\n            fps: 23.976,\n            fps_num: 23976,\n            fps_den: 1000\n        };\n\n        this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48000];\n\n        this._mpegSamplingRates = [\n            96000, 88200, 64000, 48000, 44100, 32000,\n            24000, 22050, 16000, 12000, 11025, 8000, 7350\n        ];\n\n        this._mpegAudioV10SampleRateTable = [44100, 48000, 32000, 0];\n        this._mpegAudioV20SampleRateTable = [22050, 24000, 16000, 0];\n        this._mpegAudioV25SampleRateTable = [11025, 12000, 8000,  0];\n\n        this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1];\n        this._mpegAudioL2BitRateTable = [0, 32, 48, 56,  64,  80,  96, 112, 128, 160, 192, 224, 256, 320, 384, -1];\n        this._mpegAudioL3BitRateTable = [0, 32, 40, 48,  56,  64,  80,  96, 112, 128, 160, 192, 224, 256, 320, -1];\n\n        this._videoTrack = {type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0};\n        this._audioTrack = {type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0};\n\n        this._littleEndian = (function () {\n            let buf = new ArrayBuffer(2);\n            (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\n            return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\n        })();\n    }\n\n    destroy() {\n        this._mediaInfo = null;\n        this._metadata = null;\n        this._audioMetadata = null;\n        this._videoMetadata = null;\n        this._videoTrack = null;\n        this._audioTrack = null;\n\n        this._onError = null;\n        this._onMediaInfo = null;\n        this._onMetaDataArrived = null;\n        this._onScriptDataArrived = null;\n        this._onTrackMetadata = null;\n        this._onDataAvailable = null;\n    }\n\n    static probe(buffer) {\n        let data = new Uint8Array(buffer);\n        let mismatch = {match: false};\n\n        if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n            return mismatch;\n        }\n\n        let hasAudio = ((data[4] & 4) >>> 2) !== 0;\n        let hasVideo = (data[4] & 1) !== 0;\n\n        let offset = ReadBig32(data, 5);\n\n        if (offset < 9) {\n            return mismatch;\n        }\n\n        return {\n            match: true,\n            consumed: offset,\n            dataOffset: offset,\n            hasAudioTrack: hasAudio,\n            hasVideoTrack: hasVideo\n        };\n    }\n\n    bindDataSource(loader) {\n        loader.onDataArrival = this.parseChunks.bind(this);\n        return this;\n    }\n\n    // prototype: function(type: string, metadata: any): void\n    get onTrackMetadata() {\n        return this._onTrackMetadata;\n    }\n\n    set onTrackMetadata(callback) {\n        this._onTrackMetadata = callback;\n    }\n\n    // prototype: function(mediaInfo: MediaInfo): void\n    get onMediaInfo() {\n        return this._onMediaInfo;\n    }\n\n    set onMediaInfo(callback) {\n        this._onMediaInfo = callback;\n    }\n\n    get onMetaDataArrived() {\n        return this._onMetaDataArrived;\n    }\n\n    set onMetaDataArrived(callback) {\n        this._onMetaDataArrived = callback;\n    }\n\n    get onScriptDataArrived() {\n        return this._onScriptDataArrived;\n    }\n\n    set onScriptDataArrived(callback) {\n        this._onScriptDataArrived = callback;\n    }\n\n    // prototype: function(type: number, info: string): void\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    // prototype: function(videoTrack: any, audioTrack: any): void\n    get onDataAvailable() {\n        return this._onDataAvailable;\n    }\n\n    set onDataAvailable(callback) {\n        this._onDataAvailable = callback;\n    }\n\n    // timestamp base for output samples, must be in milliseconds\n    get timestampBase() {\n        return this._timestampBase;\n    }\n\n    set timestampBase(base) {\n        this._timestampBase = base;\n    }\n\n    get overridedDuration() {\n        return this._duration;\n    }\n\n    // Force-override media duration. Must be in milliseconds, int32\n    set overridedDuration(duration) {\n        this._durationOverrided = true;\n        this._duration = duration;\n        this._mediaInfo.duration = duration;\n    }\n\n    // Force-override audio track present flag, boolean\n    set overridedHasAudio(hasAudio) {\n        this._hasAudioFlagOverrided = true;\n        this._hasAudio = hasAudio;\n        this._mediaInfo.hasAudio = hasAudio;\n    }\n\n    // Force-override video track present flag, boolean\n    set overridedHasVideo(hasVideo) {\n        this._hasVideoFlagOverrided = true;\n        this._hasVideo = hasVideo;\n        this._mediaInfo.hasVideo = hasVideo;\n    }\n\n    resetMediaInfo() {\n        this._mediaInfo = new MediaInfo();\n    }\n\n    _isInitialMetadataDispatched() {\n        if (this._hasAudio && this._hasVideo) {  // both audio & video\n            return this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched;\n        }\n        if (this._hasAudio && !this._hasVideo) {  // audio only\n            return this._audioInitialMetadataDispatched;\n        }\n        if (!this._hasAudio && this._hasVideo) {  // video only\n            return this._videoInitialMetadataDispatched;\n        }\n        return false;\n    }\n\n    // function parseChunks(chunk: ArrayBuffer, byteStart: number): number;\n    parseChunks(chunk, byteStart) {\n        if (!this._onError || !this._onMediaInfo || !this._onTrackMetadata || !this._onDataAvailable) {\n            throw new IllegalStateException('Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');\n        }\n\n        let offset = 0;\n        let le = this._littleEndian;\n\n        if (byteStart === 0) {  // buffer with FLV header\n            if (chunk.byteLength > 13) {\n                let probeData = FLVDemuxer.probe(chunk);\n                offset = probeData.dataOffset;\n            } else {\n                return 0;\n            }\n        }\n\n        if (this._firstParse) {  // handle PreviousTagSize0 before Tag1\n            this._firstParse = false;\n            if (byteStart + offset !== this._dataOffset) {\n                Log.w(this.TAG, 'First time parsing but chunk byteStart invalid!');\n            }\n\n            let v = new DataView(chunk, offset);\n            let prevTagSize0 = v.getUint32(0, !le);\n            if (prevTagSize0 !== 0) {\n                Log.w(this.TAG, 'PrevTagSize0 !== 0 !!!');\n            }\n            offset += 4;\n        }\n\n        while (offset < chunk.byteLength) {\n            this._dispatch = true;\n\n            let v = new DataView(chunk, offset);\n\n            if (offset + 11 + 4 > chunk.byteLength) {\n                // data not enough for parsing an flv tag\n                break;\n            }\n\n            let tagType = v.getUint8(0);\n            let dataSize = v.getUint32(0, !le) & 0x00FFFFFF;\n\n            if (offset + 11 + dataSize + 4 > chunk.byteLength) {\n                // data not enough for parsing actual data body\n                break;\n            }\n\n            if (tagType !== 8 && tagType !== 9 && tagType !== 18) {\n                Log.w(this.TAG, `Unsupported tag type ${tagType}, skipped`);\n                // consume the whole tag (skip it)\n                offset += 11 + dataSize + 4;\n                continue;\n            }\n\n            let ts2 = v.getUint8(4);\n            let ts1 = v.getUint8(5);\n            let ts0 = v.getUint8(6);\n            let ts3 = v.getUint8(7);\n\n            let timestamp = ts0 | (ts1 << 8) | (ts2 << 16) | (ts3 << 24);\n\n            let streamId = v.getUint32(7, !le) & 0x00FFFFFF;\n            if (streamId !== 0) {\n                Log.w(this.TAG, 'Meet tag which has StreamID != 0!');\n            }\n\n            let dataOffset = offset + 11;\n\n            switch (tagType) {\n                case 8:  // Audio\n                    this._parseAudioData(chunk, dataOffset, dataSize, timestamp);\n                    break;\n                case 9:  // Video\n                    this._parseVideoData(chunk, dataOffset, dataSize, timestamp, byteStart + offset);\n                    break;\n                case 18:  // ScriptDataObject\n                    this._parseScriptData(chunk, dataOffset, dataSize);\n                    break;\n            }\n\n            let prevTagSize = v.getUint32(11 + dataSize, !le);\n            if (prevTagSize !== 11 + dataSize) {\n                Log.w(this.TAG, `Invalid PrevTagSize ${prevTagSize}`);\n            }\n\n            offset += 11 + dataSize + 4;  // tagBody + dataSize + prevTagSize\n        }\n\n        // dispatch parsed frames to consumer (typically, the remuxer)\n        if (this._isInitialMetadataDispatched()) {\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\n            }\n        }\n\n        return offset;  // consumed bytes, just equals latest offset index\n    }\n\n    _parseScriptData(arrayBuffer, dataOffset, dataSize) {\n        let scriptData = AMF.parseScriptData(arrayBuffer, dataOffset, dataSize);\n\n        if (scriptData.hasOwnProperty('onMetaData')) {\n            if (scriptData.onMetaData == null || typeof scriptData.onMetaData !== 'object') {\n                Log.w(this.TAG, 'Invalid onMetaData structure!');\n                return;\n            }\n            if (this._metadata) {\n                Log.w(this.TAG, 'Found another onMetaData tag!');\n            }\n            this._metadata = scriptData;\n            let onMetaData = this._metadata.onMetaData;\n\n            if (this._onMetaDataArrived) {\n                this._onMetaDataArrived(Object.assign({}, onMetaData));\n            }\n\n            if (typeof onMetaData.hasAudio === 'boolean') {  // hasAudio\n                if (this._hasAudioFlagOverrided === false) {\n                    this._hasAudio = onMetaData.hasAudio;\n                    this._mediaInfo.hasAudio = this._hasAudio;\n                }\n            }\n            if (typeof onMetaData.hasVideo === 'boolean') {  // hasVideo\n                if (this._hasVideoFlagOverrided === false) {\n                    this._hasVideo = onMetaData.hasVideo;\n                    this._mediaInfo.hasVideo = this._hasVideo;\n                }\n            }\n            if (typeof onMetaData.audiodatarate === 'number') {  // audiodatarate\n                this._mediaInfo.audioDataRate = onMetaData.audiodatarate;\n            }\n            if (typeof onMetaData.videodatarate === 'number') {  // videodatarate\n                this._mediaInfo.videoDataRate = onMetaData.videodatarate;\n            }\n            if (typeof onMetaData.width === 'number') {  // width\n                this._mediaInfo.width = onMetaData.width;\n            }\n            if (typeof onMetaData.height === 'number') {  // height\n                this._mediaInfo.height = onMetaData.height;\n            }\n            if (typeof onMetaData.duration === 'number') {  // duration\n                if (!this._durationOverrided) {\n                    let duration = Math.floor(onMetaData.duration * this._timescale);\n                    this._duration = duration;\n                    this._mediaInfo.duration = duration;\n                }\n            } else {\n                this._mediaInfo.duration = 0;\n            }\n            if (typeof onMetaData.framerate === 'number') {  // framerate\n                let fps_num = Math.floor(onMetaData.framerate * 1000);\n                if (fps_num > 0) {\n                    let fps = fps_num / 1000;\n                    this._referenceFrameRate.fixed = true;\n                    this._referenceFrameRate.fps = fps;\n                    this._referenceFrameRate.fps_num = fps_num;\n                    this._referenceFrameRate.fps_den = 1000;\n                    this._mediaInfo.fps = fps;\n                }\n            }\n            if (typeof onMetaData.keyframes === 'object') {  // keyframes\n                this._mediaInfo.hasKeyframesIndex = true;\n                let keyframes = onMetaData.keyframes;\n                this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(keyframes);\n                onMetaData.keyframes = null;  // keyframes has been extracted, remove it\n            } else {\n                this._mediaInfo.hasKeyframesIndex = false;\n            }\n            this._dispatch = false;\n            this._mediaInfo.metadata = onMetaData;\n            Log.v(this.TAG, 'Parsed onMetaData');\n            if (this._mediaInfo.isComplete()) {\n                this._onMediaInfo(this._mediaInfo);\n            }\n        }\n\n        if (Object.keys(scriptData).length > 0) {\n            if (this._onScriptDataArrived) {\n                this._onScriptDataArrived(Object.assign({}, scriptData));\n            }\n        }\n    }\n\n    _parseKeyframesIndex(keyframes) {\n        let times = [];\n        let filepositions = [];\n\n        // ignore first keyframe which is actually AVC/HEVC Sequence Header (AVCDecoderConfigurationRecord or HEVCDecoderConfigurationRecord)\n        for (let i = 1; i < keyframes.times.length; i++) {\n            let time = this._timestampBase + Math.floor(keyframes.times[i] * 1000);\n            times.push(time);\n            filepositions.push(keyframes.filepositions[i]);\n        }\n\n        return {\n            times: times,\n            filepositions: filepositions\n        };\n    }\n\n    _parseAudioData(arrayBuffer, dataOffset, dataSize, tagTimestamp) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid audio packet, missing SoundData payload!');\n            return;\n        }\n\n        if (this._hasAudioFlagOverrided === true && this._hasAudio === false) {\n            // If hasAudio: false indicated explicitly in MediaDataSource,\n            // Ignore all the audio packets\n            return;\n        }\n\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let soundSpec = v.getUint8(0);\n\n        let soundFormat = soundSpec >>> 4;\n        if (soundFormat !== 2 && soundFormat !== 10) {  // MP3 or AAC\n            this._onError(DemuxErrors.CODEC_UNSUPPORTED, 'Flv: Unsupported audio codec idx: ' + soundFormat);\n            return;\n        }\n\n        let soundRate = 0;\n        let soundRateIndex = (soundSpec & 12) >>> 2;\n        if (soundRateIndex >= 0 && soundRateIndex <= 4) {\n            soundRate = this._flvSoundRateTable[soundRateIndex];\n        } else {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid audio sample rate idx: ' + soundRateIndex);\n            return;\n        }\n\n        let soundSize = (soundSpec & 2) >>> 1;  // unused\n        let soundType = (soundSpec & 1);\n\n\n        let meta = this._audioMetadata;\n        let track = this._audioTrack;\n\n        if (!meta) {\n            if (this._hasAudio === false && this._hasAudioFlagOverrided === false) {\n                this._hasAudio = true;\n                this._mediaInfo.hasAudio = true;\n            }\n\n            // initial metadata\n            meta = this._audioMetadata = {};\n            meta.type = 'audio';\n            meta.id = track.id;\n            meta.timescale = this._timescale;\n            meta.duration = this._duration;\n            meta.audioSampleRate = soundRate;\n            meta.channelCount = (soundType === 0 ? 1 : 2);\n        }\n\n        if (soundFormat === 10) {  // AAC\n            let aacData = this._parseAACAudioData(arrayBuffer, dataOffset + 1, dataSize - 1);\n            if (aacData == undefined) {\n                return;\n            }\n\n            if (aacData.packetType === 0) {  // AAC sequence header (AudioSpecificConfig)\n                if (meta.config) {\n                    Log.w(this.TAG, 'Found another AudioSpecificConfig!');\n                }\n                let misc = aacData.data;\n                meta.audioSampleRate = misc.samplingRate;\n                meta.channelCount = misc.channelCount;\n                meta.codec = misc.codec;\n                meta.originalCodec = misc.originalCodec;\n                meta.config = misc.config;\n                // The decode result of an aac sample is 1024 PCM samples\n                meta.refSampleDuration = 1024 / meta.audioSampleRate * meta.timescale;\n                Log.v(this.TAG, 'Parsed AudioSpecificConfig');\n\n                if (this._isInitialMetadataDispatched()) {\n                    // Non-initial metadata, force dispatch (or flush) parsed frames to remuxer\n                    if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                        this._onDataAvailable(this._audioTrack, this._videoTrack);\n                    }\n                } else {\n                    this._audioInitialMetadataDispatched = true;\n                }\n                // then notify new metadata\n                this._dispatch = false;\n                this._onTrackMetadata('audio', meta);\n\n                let mi = this._mediaInfo;\n                mi.audioCodec = meta.originalCodec;\n                mi.audioSampleRate = meta.audioSampleRate;\n                mi.audioChannelCount = meta.channelCount;\n                if (mi.hasVideo) {\n                    if (mi.videoCodec != null) {\n                        mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                    }\n                } else {\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.audioCodec + '\"';\n                }\n                if (mi.isComplete()) {\n                    this._onMediaInfo(mi);\n                }\n            } else if (aacData.packetType === 1) {  // AAC raw frame data\n                let dts = this._timestampBase + tagTimestamp;\n                let aacSample = {unit: aacData.data, length: aacData.data.byteLength, dts: dts, pts: dts};\n                track.samples.push(aacSample);\n                track.length += aacData.data.length;\n            } else {\n                Log.e(this.TAG, `Flv: Unsupported AAC data type ${aacData.packetType}`);\n            }\n        } else if (soundFormat === 2) {  // MP3\n            if (!meta.codec) {\n                // We need metadata for mp3 audio track, extract info from frame header\n                let misc = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, true);\n                if (misc == undefined) {\n                    return;\n                }\n                meta.audioSampleRate = misc.samplingRate;\n                meta.channelCount = misc.channelCount;\n                meta.codec = misc.codec;\n                meta.originalCodec = misc.originalCodec;\n                // The decode result of an mp3 sample is 1152 PCM samples\n                meta.refSampleDuration = 1152 / meta.audioSampleRate * meta.timescale;\n                Log.v(this.TAG, 'Parsed MPEG Audio Frame Header');\n\n                this._audioInitialMetadataDispatched = true;\n                this._onTrackMetadata('audio', meta);\n\n                let mi = this._mediaInfo;\n                mi.audioCodec = meta.codec;\n                mi.audioSampleRate = meta.audioSampleRate;\n                mi.audioChannelCount = meta.channelCount;\n                mi.audioDataRate = misc.bitRate;\n                if (mi.hasVideo) {\n                    if (mi.videoCodec != null) {\n                        mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                    }\n                } else {\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.audioCodec + '\"';\n                }\n                if (mi.isComplete()) {\n                    this._onMediaInfo(mi);\n                }\n            }\n\n            // This packet is always a valid audio packet, extract it\n            let data = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, false);\n            if (data == undefined) {\n                return;\n            }\n            let dts = this._timestampBase + tagTimestamp;\n            let mp3Sample = {unit: data, length: data.byteLength, dts: dts, pts: dts};\n            track.samples.push(mp3Sample);\n            track.length += data.length;\n        }\n    }\n\n    _parseAACAudioData(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid AAC packet, missing AACPacketType or/and Data!');\n            return;\n        }\n\n        let result = {};\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\n\n        result.packetType = array[0];\n\n        if (array[0] === 0) {\n            result.data = this._parseAACAudioSpecificConfig(arrayBuffer, dataOffset + 1, dataSize - 1);\n        } else {\n            result.data = array.subarray(1);\n        }\n\n        return result;\n    }\n\n    _parseAACAudioSpecificConfig(arrayBuffer, dataOffset, dataSize) {\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\n        let config = null;\n\n        /* Audio Object Type:\n           0: Null\n           1: AAC Main\n           2: AAC LC\n           3: AAC SSR (Scalable Sample Rate)\n           4: AAC LTP (Long Term Prediction)\n           5: HE-AAC / SBR (Spectral Band Replication)\n           6: AAC Scalable\n        */\n\n        let audioObjectType = 0;\n        let originalAudioObjectType = 0;\n        let audioExtensionObjectType = null;\n        let samplingIndex = 0;\n        let extensionSamplingIndex = null;\n\n        // 5 bits\n        audioObjectType = originalAudioObjectType = array[0] >>> 3;\n        // 4 bits\n        samplingIndex = ((array[0] & 0x07) << 1) | (array[1] >>> 7);\n        if (samplingIndex < 0 || samplingIndex >= this._mpegSamplingRates.length) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid sampling frequency index!');\n            return;\n        }\n\n        let samplingFrequence = this._mpegSamplingRates[samplingIndex];\n\n        // 4 bits\n        let channelConfig = (array[1] & 0x78) >>> 3;\n        if (channelConfig < 0 || channelConfig >= 8) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid channel configuration');\n            return;\n        }\n\n        if (audioObjectType === 5) {  // HE-AAC?\n            // 4 bits\n            extensionSamplingIndex = ((array[1] & 0x07) << 1) | (array[2] >>> 7);\n            // 5 bits\n            audioExtensionObjectType = (array[2] & 0x7C) >>> 2;\n        }\n\n        // workarounds for various browsers\n        let userAgent = self.navigator.userAgent.toLowerCase();\n\n        if (userAgent.indexOf('firefox') !== -1) {\n            // firefox: use SBR (HE-AAC) if freq less than 24kHz\n            if (samplingIndex >= 6) {\n                audioObjectType = 5;\n                config = new Array(4);\n                extensionSamplingIndex = samplingIndex - 3;\n            } else {  // use LC-AAC\n                audioObjectType = 2;\n                config = new Array(2);\n                extensionSamplingIndex = samplingIndex;\n            }\n        } else if (userAgent.indexOf('android') !== -1) {\n            // android: always use LC-AAC\n            audioObjectType = 2;\n            config = new Array(2);\n            extensionSamplingIndex = samplingIndex;\n        } else {\n            // for other browsers, e.g. chrome...\n            // Always use HE-AAC to make it easier to switch aac codec profile\n            audioObjectType = 5;\n            extensionSamplingIndex = samplingIndex;\n            config = new Array(4);\n\n            if (samplingIndex >= 6) {\n                extensionSamplingIndex = samplingIndex - 3;\n            } else if (channelConfig === 1) {  // Mono channel\n                audioObjectType = 2;\n                config = new Array(2);\n                extensionSamplingIndex = samplingIndex;\n            }\n        }\n\n        config[0]  = audioObjectType << 3;\n        config[0] |= (samplingIndex & 0x0F) >>> 1;\n        config[1]  = (samplingIndex & 0x0F) << 7;\n        config[1] |= (channelConfig & 0x0F) << 3;\n        if (audioObjectType === 5) {\n            config[1] |= ((extensionSamplingIndex & 0x0F) >>> 1);\n            config[2]  = (extensionSamplingIndex & 0x01) << 7;\n            // extended audio object type: force to 2 (LC-AAC)\n            config[2] |= (2 << 2);\n            config[3]  = 0;\n        }\n\n        return {\n            config: config,\n            samplingRate: samplingFrequence,\n            channelCount: channelConfig,\n            codec: 'mp4a.40.' + audioObjectType,\n            originalCodec: 'mp4a.40.' + originalAudioObjectType\n        };\n    }\n\n    _parseMP3AudioData(arrayBuffer, dataOffset, dataSize, requestHeader) {\n        if (dataSize < 4) {\n            Log.w(this.TAG, 'Flv: Invalid MP3 packet, header missing!');\n            return;\n        }\n\n        let le = this._littleEndian;\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\n        let result = null;\n\n        if (requestHeader) {\n            if (array[0] !== 0xFF) {\n                return;\n            }\n            let ver = (array[1] >>> 3) & 0x03;\n            let layer = (array[1] & 0x06) >> 1;\n\n            let bitrate_index = (array[2] & 0xF0) >>> 4;\n            let sampling_freq_index = (array[2] & 0x0C) >>> 2;\n\n            let channel_mode = (array[3] >>> 6) & 0x03;\n            let channel_count = channel_mode !== 3 ? 2 : 1;\n\n            let sample_rate = 0;\n            let bit_rate = 0;\n            let object_type = 34;  // Layer-3, listed in MPEG-4 Audio Object Types\n\n            let codec = 'mp3';\n\n            switch (ver) {\n                case 0:  // MPEG 2.5\n                    sample_rate = this._mpegAudioV25SampleRateTable[sampling_freq_index];\n                    break;\n                case 2:  // MPEG 2\n                    sample_rate = this._mpegAudioV20SampleRateTable[sampling_freq_index];\n                    break;\n                case 3:  // MPEG 1\n                    sample_rate = this._mpegAudioV10SampleRateTable[sampling_freq_index];\n                    break;\n            }\n\n            switch (layer) {\n                case 1:  // Layer 3\n                    object_type = 34;\n                    if (bitrate_index < this._mpegAudioL3BitRateTable.length) {\n                        bit_rate = this._mpegAudioL3BitRateTable[bitrate_index];\n                    }\n                    break;\n                case 2:  // Layer 2\n                    object_type = 33;\n                    if (bitrate_index < this._mpegAudioL2BitRateTable.length) {\n                        bit_rate = this._mpegAudioL2BitRateTable[bitrate_index];\n                    }\n                    break;\n                case 3:  // Layer 1\n                    object_type = 32;\n                    if (bitrate_index < this._mpegAudioL1BitRateTable.length) {\n                        bit_rate = this._mpegAudioL1BitRateTable[bitrate_index];\n                    }\n                    break;\n            }\n\n            result = {\n                bitRate: bit_rate,\n                samplingRate: sample_rate,\n                channelCount: channel_count,\n                codec: codec,\n                originalCodec: codec\n            };\n        } else {\n            result = array;\n        }\n\n        return result;\n    }\n\n    _parseVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid video packet, missing VideoData payload!');\n            return;\n        }\n\n        if (this._hasVideoFlagOverrided === true && this._hasVideo === false) {\n            // If hasVideo: false indicated explicitly in MediaDataSource,\n            // Ignore all the video packets\n            return;\n        }\n\n        let spec = (new Uint8Array(arrayBuffer, dataOffset, dataSize))[0];\n\n        let frameType = (spec & 240) >>> 4;\n        let codecId = spec & 15;\n\n        if (codecId === 7) { // AVC\n            this._parseAVCVideoPacket(arrayBuffer, dataOffset + 1, dataSize - 1, tagTimestamp, tagPosition, frameType);\n        } else if (codecId === 12) { // HEVC\n            this._parseHEVCVideoPacket(arrayBuffer, dataOffset + 1, dataSize - 1, tagTimestamp, tagPosition, frameType);\n        } else {\n            this._onError(DemuxErrors.CODEC_UNSUPPORTED, `Flv: Unsupported codec in video frame: ${codecId}`);\n            return;\n        }\n    }\n\n    _parseAVCVideoPacket(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType) {\n        if (dataSize < 4) {\n            Log.w(this.TAG, 'Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime');\n            return;\n        }\n\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let packetType = v.getUint8(0);\n        let cts_unsigned = v.getUint32(0, !le) & 0x00FFFFFF;\n        let cts = (cts_unsigned << 8) >> 8;  // convert to 24-bit signed int\n\n        if (packetType === 0) {  // AVCDecoderConfigurationRecord\n            this._parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset + 4, dataSize - 4);\n        } else if (packetType === 1) {  // One or more Nalus\n            this._parseAVCVideoData(arrayBuffer, dataOffset + 4, dataSize - 4, tagTimestamp, tagPosition, frameType, cts);\n        } else if (packetType === 2) {\n            // empty, AVC end of sequence\n        } else {\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid video packet type ${packetType}`);\n            return;\n        }\n    }\n\n    _parseHEVCVideoPacket(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType) {\n        if (dataSize < 4) {\n            Log.w(this.TAG, 'Flv: Invalid HEVC packet, missing HEVCPacketType or/and CompositionTime');\n            return;\n        }\n\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let packetType = v.getUint8(0);\n        let cts_unsigned = v.getUint32(0, !le) & 0x00FFFFFF;\n        let cts = (cts_unsigned << 8) >> 8;  // convert to 24-bit signed int\n\n        if (packetType === 0) {  // HEVCDecoderConfigurationRecord\n            this._parseHEVCDecoderConfigurationRecord(arrayBuffer, dataOffset + 4, dataSize - 4);\n        } else if (packetType === 1) {  // One or more Nalus\n            this._parseHEVCVideoData(arrayBuffer, dataOffset + 4, dataSize - 4, tagTimestamp, tagPosition, frameType, cts);\n        } else if (packetType === 2) {\n            // empty, HEVC end of sequence\n        } else {\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid video packet type ${packetType}`);\n            return;\n        }\n    }\n\n    _parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 7) {\n            Log.w(this.TAG, 'Flv: Invalid AVCDecoderConfigurationRecord, lack of data!');\n            return;\n        }\n\n        let meta = this._videoMetadata;\n        let track = this._videoTrack;\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        if (!meta) {\n            if (this._hasVideo === false && this._hasVideoFlagOverrided === false) {\n                this._hasVideo = true;\n                this._mediaInfo.hasVideo = true;\n            }\n\n            meta = this._videoMetadata = {};\n            meta.type = 'video';\n            meta.id = track.id;\n            meta.timescale = this._timescale;\n            meta.duration = this._duration;\n        } else {\n            if (typeof meta.avcc !== 'undefined') {\n                Log.w(this.TAG, 'Found another AVCDecoderConfigurationRecord!');\n            }\n        }\n\n        let version = v.getUint8(0);  // configurationVersion\n        let avcProfile = v.getUint8(1);  // avcProfileIndication\n        let profileCompatibility = v.getUint8(2);  // profile_compatibility\n        let avcLevel = v.getUint8(3);  // AVCLevelIndication\n\n        if (version !== 1 || avcProfile === 0) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');\n            return;\n        }\n\n        this._naluLengthSize = (v.getUint8(4) & 3) + 1;  // lengthSizeMinusOne\n        if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {  // holy shit!!!\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`);\n            return;\n        }\n\n        let spsCount = v.getUint8(5) & 31;  // numOfSequenceParameterSets\n        if (spsCount === 0) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No SPS');\n            return;\n        } else if (spsCount > 1) {\n            Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${spsCount}`);\n        }\n\n        let offset = 6;\n\n        for (let i = 0; i < spsCount; i++) {\n            let len = v.getUint16(offset, !le);  // sequenceParameterSetLength\n            offset += 2;\n\n            if (len === 0) {\n                continue;\n            }\n\n            // Notice: Nalu without startcode header (00 00 00 01)\n            let sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\n            offset += len;\n\n            let config = SPSParser.parseSPS(sps);\n            if (i !== 0) {\n                // ignore other sps's config\n                continue;\n            }\n\n            meta.codecWidth = config.codec_size.width;\n            meta.codecHeight = config.codec_size.height;\n            meta.presentWidth = config.present_size.width;\n            meta.presentHeight = config.present_size.height;\n\n            meta.profile = config.profile_string;\n            meta.level = config.level_string;\n            meta.bitDepth = config.bit_depth;\n            meta.chromaFormat = config.chroma_format;\n            meta.sarRatio = config.sar_ratio;\n            meta.frameRate = config.frame_rate;\n\n            if (config.frame_rate.fixed === false ||\n                config.frame_rate.fps_num === 0 ||\n                config.frame_rate.fps_den === 0) {\n                meta.frameRate = this._referenceFrameRate;\n            }\n\n            let fps_den = meta.frameRate.fps_den;\n            let fps_num = meta.frameRate.fps_num;\n            meta.refSampleDuration = meta.timescale * (fps_den / fps_num);\n\n            let codecArray = sps.subarray(1, 4);\n            let codecString = 'avc1.';\n            for (let j = 0; j < 3; j++) {\n                let h = codecArray[j].toString(16);\n                if (h.length < 2) {\n                    h = '0' + h;\n                }\n                codecString += h;\n            }\n            meta.codec = codecString;\n\n            let mi = this._mediaInfo;\n            mi.width = meta.codecWidth;\n            mi.height = meta.codecHeight;\n            mi.fps = meta.frameRate.fps;\n            mi.profile = meta.profile;\n            mi.level = meta.level;\n            mi.refFrames = config.ref_frames;\n            mi.chromaFormat = config.chroma_format_string;\n            mi.sarNum = meta.sarRatio.width;\n            mi.sarDen = meta.sarRatio.height;\n            mi.videoCodec = codecString;\n\n            if (mi.hasAudio) {\n                if (mi.audioCodec != null) {\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                }\n            } else {\n                mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + '\"';\n            }\n            if (mi.isComplete()) {\n                this._onMediaInfo(mi);\n            }\n        }\n\n        let ppsCount = v.getUint8(offset);  // numOfPictureParameterSets\n        if (ppsCount === 0) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No PPS');\n            return;\n        } else if (ppsCount > 1) {\n            Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${ppsCount}`);\n        }\n\n        offset++;\n\n        for (let i = 0; i < ppsCount; i++) {\n            let len = v.getUint16(offset, !le);  // pictureParameterSetLength\n            offset += 2;\n\n            if (len === 0) {\n                continue;\n            }\n\n            // pps is useless for extracting video information\n            offset += len;\n        }\n\n        meta.avcc = new Uint8Array(dataSize);\n        meta.avcc.set(new Uint8Array(arrayBuffer, dataOffset, dataSize), 0);\n        Log.v(this.TAG, 'Parsed AVCDecoderConfigurationRecord');\n\n        if (this._isInitialMetadataDispatched()) {\n            // flush parsed frames\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\n            }\n        } else {\n            this._videoInitialMetadataDispatched = true;\n        }\n        // notify new metadata\n        this._dispatch = false;\n        this._onTrackMetadata('video', meta);\n    }\n\n    _parseHEVCDecoderConfigurationRecord(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 22) {\n            Log.w(this.TAG, 'Flv: Invalid HEVCDecoderConfigurationRecord, lack of data!');\n            return;\n        }\n\n        let meta = this._videoMetadata;\n        let track = this._videoTrack;\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        if (!meta) {\n            if (this._hasVideo === false && this._hasVideoFlagOverrided === false) {\n                this._hasVideo = true;\n                this._mediaInfo.hasVideo = true;\n            }\n\n            meta = this._videoMetadata = {};\n            meta.type = 'video';\n            meta.id = track.id;\n            meta.timescale = this._timescale;\n            meta.duration = this._duration;\n        } else {\n            if (typeof meta.hvcc !== 'undefined') {\n                Log.w(this.TAG, 'Found another HEVCDecoderConfigurationRecord!');\n            }\n        }\n\n        let version = v.getUint8(0);  // configurationVersion\n        let hevcProfile = v.getUint8(1) & 0x1F;  // hevcProfileIndication\n\n        if (version !== 1 || hevcProfile === 0) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid HEVCDecoderConfigurationRecord');\n            return;\n        }\n\n        this._naluLengthSize = (v.getUint8(21) & 3) + 1;  // lengthSizeMinusOne\n        if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {  // holy shit!!!\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`);\n            return;\n        }\n\n        let numOfArrays = v.getUint8(22);\n        for (let i = 0, offset = 23; i < numOfArrays; i++) {\n            let nalUnitType = v.getUint8(offset + 0) & 0x3F;\n            let numNalus = v.getUint16(offset + 1, !le);\n\n            offset += 3;\n            for (let j = 0; j < numNalus; j++) {\n                let len = v.getUint16(offset + 0, !le);\n                if (j !== 0) {\n                    offset += 2 + len;\n                    continue;\n                }\n\n                if (nalUnitType === 33) {\n                    offset += 2;\n                    let sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\n\n                    let config = H265Parser.parseSPS(sps);\n                    meta.codecWidth = config.codec_size.width;\n                    meta.codecHeight = config.codec_size.height;\n                    meta.presentWidth = config.present_size.width;\n                    meta.presentHeight = config.present_size.height;\n\n                    meta.profile = config.profile_string;\n                    meta.level = config.level_string;\n                    meta.bitDepth = config.bit_depth;\n                    meta.chromaFormat = config.chroma_format;\n                    meta.sarRatio = config.sar_ratio;\n                    meta.frameRate = config.frame_rate;\n\n                    if (config.frame_rate.fixed === false ||\n                        config.frame_rate.fps_num === 0 ||\n                        config.frame_rate.fps_den === 0) {\n                        meta.frameRate = this._referenceFrameRate;\n                    }\n\n                    let fps_den = meta.frameRate.fps_den;\n                    let fps_num = meta.frameRate.fps_num;\n                    meta.refSampleDuration = meta.timescale * (fps_den / fps_num);\n                    meta.codec = config.codec_mimetype;\n\n                    let mi = this._mediaInfo;\n                    mi.width = meta.codecWidth;\n                    mi.height = meta.codecHeight;\n                    mi.fps = meta.frameRate.fps;\n                    mi.profile = meta.profile;\n                    mi.level = meta.level;\n                    mi.refFrames = config.ref_frames;\n                    mi.chromaFormat = config.chroma_format_string;\n                    mi.sarNum = meta.sarRatio.width;\n                    mi.sarDen = meta.sarRatio.height;\n                    mi.videoCodec = config.codec_mimetype;\n\n                    if (mi.hasAudio) {\n                        if (mi.audioCodec != null) {\n                            mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                        }\n                    } else {\n                        mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + '\"';\n                    }\n                    if (mi.isComplete()) {\n                        this._onMediaInfo(mi);\n                    }\n\n                    offset += len;\n                } else {\n                    offset += 2 + len;\n                }\n            }\n        }\n\n        meta.hvcc = new Uint8Array(dataSize);\n        meta.hvcc.set(new Uint8Array(arrayBuffer, dataOffset, dataSize), 0);\n        Log.v(this.TAG, 'Parsed HEVCDecoderConfigurationRecord');\n\n        if (this._isInitialMetadataDispatched()) {\n            // flush parsed frames\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\n            }\n        } else {\n            this._videoInitialMetadataDispatched = true;\n        }\n        // notify new metadata\n        this._dispatch = false;\n        this._onTrackMetadata('video', meta);\n    }\n\n    _parseAVCVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType, cts) {\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let units = [], length = 0;\n\n        let offset = 0;\n        const lengthSize = this._naluLengthSize;\n        let dts = this._timestampBase + tagTimestamp;\n        let keyframe = (frameType === 1);  // from FLV Frame Type constants\n\n        while (offset < dataSize) {\n            if (offset + 4 >= dataSize) {\n                Log.w(this.TAG, `Malformed Nalu near timestamp ${dts}, offset = ${offset}, dataSize = ${dataSize}`);\n                break;  // data not enough for next Nalu\n            }\n            // Nalu with length-header (AVC1)\n            let naluSize = v.getUint32(offset, !le);  // Big-Endian read\n            if (lengthSize === 3) {\n                naluSize >>>= 8;\n            }\n            if (naluSize > dataSize - lengthSize) {\n                Log.w(this.TAG, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);\n                return;\n            }\n\n            let unitType = v.getUint8(offset + lengthSize) & 0x1F;\n\n            if (unitType === 5) {  // IDR\n                keyframe = true;\n            }\n\n            let data = new Uint8Array(arrayBuffer, dataOffset + offset, lengthSize + naluSize);\n            let unit = {type: unitType, data: data};\n            units.push(unit);\n            length += data.byteLength;\n\n            offset += lengthSize + naluSize;\n        }\n\n        if (units.length) {\n            let track = this._videoTrack;\n            let avcSample = {\n                units: units,\n                length: length,\n                isKeyframe: keyframe,\n                dts: dts,\n                cts: cts,\n                pts: (dts + cts)\n            };\n            if (keyframe) {\n                avcSample.fileposition = tagPosition;\n            }\n            track.samples.push(avcSample);\n            track.length += length;\n        }\n    }\n\n    _parseHEVCVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType, cts) {\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let units = [], length = 0;\n\n        let offset = 0;\n        const lengthSize = this._naluLengthSize;\n        let dts = this._timestampBase + tagTimestamp;\n        let keyframe = (frameType === 1);  // from FLV Frame Type constants\n\n        while (offset < dataSize) {\n            if (offset + 4 >= dataSize) {\n                Log.w(this.TAG, `Malformed Nalu near timestamp ${dts}, offset = ${offset}, dataSize = ${dataSize}`);\n                break;  // data not enough for next Nalu\n            }\n            // Nalu with length-header (HVC1)\n            let naluSize = v.getUint32(offset, !le);  // Big-Endian read\n            if (lengthSize === 3) {\n                naluSize >>>= 8;\n            }\n            if (naluSize > dataSize - lengthSize) {\n                Log.w(this.TAG, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);\n                return;\n            }\n\n            let unitType = v.getUint8(offset + lengthSize) & 0x1F;\n\n            if (unitType === 19 || unitType === 20) {  // IDR\n                keyframe = true;\n            }\n\n            let data = new Uint8Array(arrayBuffer, dataOffset + offset, lengthSize + naluSize);\n            let unit = {type: unitType, data: data};\n            units.push(unit);\n            length += data.byteLength;\n\n            offset += lengthSize + naluSize;\n        }\n\n        if (units.length) {\n            let track = this._videoTrack;\n            let hevcSample = {\n                units: units,\n                length: length,\n                isKeyframe: keyframe,\n                dts: dts,\n                cts: cts,\n                pts: (dts + cts)\n            };\n            if (keyframe) {\n                hevcSample.fileposition = tagPosition;\n            }\n            track.samples.push(hevcSample);\n            track.length += length;\n        }\n    }\n\n}\n\nexport default FLVDemuxer;","import MediaInfo from '../core/media-info';\nimport { PESPrivateData, PESPrivateDataDescriptor } from './pes-private-data';\nimport { SCTE35Data } from './scte35';\n\ntype OnErrorCallback = (type: string, info: string) => void;\ntype OnMediaInfoCallback = (mediaInfo: MediaInfo) => void;\ntype OnMetaDataArrivedCallback = (metadata: any) => void;\ntype OnTrackMetadataCallback = (type: string, metadata: any) => void;\ntype OnDataAvailableCallback = (videoTrack: any, audioTrack: any) => void;\ntype OnTimedID3MetadataCallback = (timed_id3_data: PESPrivateData) => void;\ntype OnSCTE35MetadataCallback = (scte35_data: SCTE35Data) => void;\ntype OnPESPrivateDataCallback = (private_data: PESPrivateData) => void;\ntype OnPESPrivateDataDescriptorCallback = (private_data_descriptor: PESPrivateDataDescriptor) => void;\n\nexport default abstract class BaseDemuxer {\n\n    public onError: OnErrorCallback;\n    public onMediaInfo: OnMediaInfoCallback;\n    public onMetaDataArrived: OnMetaDataArrivedCallback;\n    public onTrackMetadata: OnTrackMetadataCallback;\n    public onDataAvailable: OnDataAvailableCallback;\n    public onTimedID3Metadata: OnTimedID3MetadataCallback;\n    public onSCTE35Metadata: OnSCTE35MetadataCallback;\n    public onPESPrivateData: OnPESPrivateDataCallback;\n    public onPESPrivateDataDescriptor: OnPESPrivateDataDescriptorCallback;\n\n    public constructor() {}\n\n    public destroy(): void {\n        this.onError = null;\n        this.onMediaInfo = null;\n        this.onMetaDataArrived = null;\n        this.onTrackMetadata = null;\n        this.onDataAvailable = null;\n        this.onTimedID3Metadata = null;\n        this.onSCTE35Metadata = null;\n        this.onPESPrivateData = null;\n        this.onPESPrivateDataDescriptor = null;\n    }\n\n    abstract parseChunks(chunk: ArrayBuffer, byteStart: number): number;\n\n}\n","import Log from \"../utils/logger\";\n\nexport enum H264NaluType {\n    kUnspecified = 0,\n    kSliceNonIDR,\n    kSliceDPA,\n    kSliceDPB,\n    kSliceDPC,\n    kSliceIDR,\n    kSliceSEI,\n    kSliceSPS,\n    kSlicePPS,\n    kSliceAUD,\n    kEndOfSequence,\n    kEndOfStream,\n    kFiller,\n    kSPSExt,\n    kReserved0\n}\n\nexport class H264NaluPayload {\n    type: H264NaluType;\n    data: Uint8Array;\n}\n\nexport class H264NaluAVC1 {\n    type: H264NaluType;\n    data: Uint8Array;\n\n    constructor(nalu: H264NaluPayload) {\n        let nalu_size = nalu.data.byteLength;\n\n        this.type = nalu.type;\n        this.data = new Uint8Array(4 + nalu_size);  // 4 byte length-header + nalu payload\n\n        let v = new DataView(this.data.buffer);\n        // Fill 4 byte length-header\n        v.setUint32(0, nalu_size);\n        // Copy payload\n        this.data.set(nalu.data, 4);\n    }\n}\n\nexport class H264AnnexBParser {\n\n    private readonly TAG: string = \"H264AnnexBParser\";\n\n    private data_: Uint8Array;\n    private current_startcode_offset_: number = 0;\n    private eof_flag_: boolean = false;\n\n    public constructor(data: Uint8Array) {\n        this.data_ = data;\n        this.current_startcode_offset_ = this.findNextStartCodeOffset(0);\n        if (this.eof_flag_) {\n            Log.e(this.TAG, \"Could not find H264 startcode until payload end!\");\n        }\n    }\n\n    private findNextStartCodeOffset(start_offset: number) {\n        let i = start_offset;\n        let data = this.data_;\n\n        while (true) {\n            if (i + 3 >= data.byteLength) {\n                this.eof_flag_ = true;\n                return data.byteLength;\n            }\n\n            // search 00 00 00 01 or 00 00 01\n            let uint32 = (data[i + 0] << 24)\n                        | (data[i + 1] << 16)\n                        | (data[i + 2] << 8)\n                        | (data[i + 3]);\n            let uint24 = (data[i + 0] << 16)\n                        | (data[i + 1] << 8)\n                        | (data[i + 2]);\n            if (uint32 === 0x00000001 || uint24 === 0x000001) {\n                return i;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    public readNextNaluPayload(): H264NaluPayload | null {\n        let data = this.data_;\n        let nalu_payload: H264NaluPayload = null;\n\n        while (nalu_payload == null) {\n            if (this.eof_flag_) {\n                break;\n            }\n            // offset pointed to start code\n            let startcode_offset = this.current_startcode_offset_;\n\n            // nalu payload start offset\n            let offset = startcode_offset;\n            let u32 = (data[offset] << 24) | (data[offset + 1] << 16) | (data[offset + 2] << 8) | (data[offset + 3]);\n            if (u32 === 0x00000001) {\n                offset += 4;\n            } else {\n                offset += 3;\n            }\n\n            let nalu_type: H264NaluType = data[offset] & 0x1F;\n            let forbidden_bit = (data[offset] & 0x80) >>> 7;\n\n            let next_startcode_offset = this.findNextStartCodeOffset(offset);\n            this.current_startcode_offset_ = next_startcode_offset;\n\n            if (nalu_type >= H264NaluType.kReserved0) {\n                continue;\n            }\n            if (forbidden_bit !== 0) {\n                // Log.e(this.TAG, `forbidden_bit near offset ${offset} should be 0 but has value ${forbidden_bit}`);\n                continue;\n            }\n\n            let payload_data = data.subarray(offset, next_startcode_offset);\n\n            nalu_payload = new H264NaluPayload();\n            nalu_payload.type = nalu_type;\n            nalu_payload.data = payload_data;\n        }\n\n        return nalu_payload;\n    }\n\n}\n\n\nexport class AVCDecoderConfigurationRecord {\n\n    private data: Uint8Array;\n\n    // sps, pps: require Nalu without 4 byte length-header\n    public constructor(sps: Uint8Array, pps: Uint8Array, sps_details: any) {\n        let length = 6 + 2 + sps.byteLength + 1 + 2 + pps.byteLength;\n        let need_extra_fields = false;\n\n        if (sps[3] !== 66 && sps[3] !== 77 && sps[3] !== 88) {\n            need_extra_fields = true;\n            length += 4;\n        }\n\n        let data = this.data = new Uint8Array(length);\n\n        data[0] = 0x01;    // configurationVersion\n        data[1] = sps[1];  // AVCProfileIndication\n        data[2] = sps[2];  // profile_compatibility\n        data[3] = sps[3];  // AVCLevelIndication\n        data[4] = 0xFF;    // 111111 + lengthSizeMinusOne(3)\n\n        data[5] = 0xE0 | 0x01  // 111 + numOfSequenceParameterSets\n\n        let sps_length = sps.byteLength;\n        data[6] = sps_length >>> 8;  // sequenceParameterSetLength\n        data[7] = sps_length & 0xFF;\n\n        let offset = 8;\n        data.set(sps, 8);\n        offset += sps_length;\n\n        data[offset] = 1;  // numOfPictureParameterSets\n\n        let pps_length = pps.byteLength;\n        data[offset + 1] = pps_length >>> 8;  // pictureParameterSetLength\n        data[offset + 2] = pps_length & 0xFF;\n\n        data.set(pps, offset + 3);\n        offset += 3 + pps_length;\n\n        if (need_extra_fields) {\n            data[offset] = 0xFC | sps_details.chroma_format_idc;\n            data[offset + 1] = 0xF8 | (sps_details.bit_depth_luma - 8);\n            data[offset + 2] = 0xF8 | (sps_details.bit_depth_chroma - 8);\n            data[offset + 3] = 0x00;  // number of sps ext\n            offset += 4;\n        }\n    }\n\n    public getData() {\n        return this.data;\n    }\n\n}\n","export enum MPEG4AudioObjectTypes {\n    kNull = 0,\n    kAACMain,\n    kAAC_LC,   // LC-AAC\n    kAAC_SSR,\n    kAAC_LTP,\n    kAAC_SBR,  // HE-AAC\n    kAAC_Scalable,\n\n    kLayer1 = 32,\n    kLayer2,\n    kLayer3,   // MP3\n}\n\nexport enum MPEG4SamplingFrequencyIndex {\n    k96000Hz = 0,\n    k88200Hz,\n    k64000Hz,\n    k48000Hz,\n    k44100Hz,\n    k32000Hz,\n    k24000Hz,\n    k22050Hz,\n    k16000Hz,\n    k12000Hz,\n    k11025Hz,\n    k8000Hz,\n    k7350Hz,\n}\n\nexport const MPEG4SamplingFrequencies = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350,\n];\n","import ExpGolomb from './exp-golomb.js';\n\nexport type SCTE35Data = {\n    splice_command_type: SCTE35CommandType.kSpliceInsert\n    pts?: number,\n    nearest_pts?: number\n    auto_return?: boolean\n    duraiton?: number,\n    detail: SCTE35Detail\n    data: Uint8Array\n} | {\n    splice_command_type: SCTE35CommandType.kTimeSignal\n    pts?: number,\n    nearest_pts?: number\n    detail: SCTE35Detail\n    data: Uint8Array\n} | {\n    splice_command_type: SCTE35CommandType.kSpliceNull | SCTE35CommandType.kBandwidthReservation | SCTE35CommandType.kSpliceSchedule | SCTE35CommandType.kPrivateCommand\n    pts: undefined,\n    nearest_pts?: number\n    detail: SCTE35Detail\n    data: Uint8Array\n}\n\ntype SCTE35Detail = {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kSpliceNull\n    splice_command: SpliceNull\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[]\n    E_CRC32?: number\n    CRC32: number\n} | {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kSpliceSchedule\n    splice_command: SpliceSchedule\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[]\n    E_CRC32?: number\n    CRC32: number\n} | {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kSpliceInsert\n    splice_command: SpliceInsert\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[]\n    E_CRC32?: number\n    CRC32: number\n} | {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kTimeSignal\n    splice_command: TimeSignal\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[]\n    E_CRC32?: number\n    CRC32: number\n} | {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kBandwidthReservation\n    splice_command: BandwidthReservation\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[]\n    E_CRC32?: number\n    CRC32: number\n} | {\n    table_id: number\n    section_syntax_indicator: boolean\n    private_indicator: boolean\n    section_length: number\n    protocol_version: number\n    encrypted_packet: boolean\n    encryption_algorithm: number\n    pts_adjustment: number\n    cw_index: number\n    tier: number\n    splice_command_length: number\n    splice_command_type: SCTE35CommandType.kPrivateCommand\n    splice_command: PrivateCommand\n    descriptor_loop_length: number\n    splice_descriptors: SpliceDescriptor[],\n    E_CRC32?: number\n    CRC32: number\n};\n\nexport enum SCTE35CommandType {\n    kSpliceNull = 0x0,\n    kSpliceSchedule = 0x4,\n    kSpliceInsert = 0x5,\n    kTimeSignal = 0x6,\n    kBandwidthReservation = 0x07,\n    kPrivateCommand = 0xff\n}\n\ntype SpliceTime = {\n    time_specified_flag: boolean,\n    pts_time?: number\n}\n\nconst parseSpliceTime = (reader: ExpGolomb): SpliceTime => {\n    const time_specified_flag = reader.readBool()\n\n    if (!time_specified_flag) {\n        reader.readBits(7);\n        return { time_specified_flag }\n    } else {\n        reader.readBits(6)\n        const pts_time = reader.readBits(31) * 4 + reader.readBits(2);\n        return {\n            time_specified_flag,\n            pts_time\n        }\n    }\n}\n\ntype BreakDuration = {\n    auto_return: boolean,\n    duration: number\n}\nconst parseBreakDuration = (reader: ExpGolomb): BreakDuration => {\n    const auto_return = reader.readBool();\n    reader.readBits(6);\n    const duration = reader.readBits(31) * 4 + reader.readBits(2);\n    return {\n        auto_return,\n        duration\n    };\n}\n\ntype SpliceInsertComponent = {\n    component_tag: number,\n    splice_time?: SpliceTime\n}\nconst parseSpliceInsertComponent = (splice_immediate_flag: boolean, reader: ExpGolomb): SpliceInsertComponent => {\n    const component_tag = reader.readBits(8);\n    if (splice_immediate_flag) {\n        return { component_tag };\n    }\n\n    const splice_time = parseSpliceTime(reader);\n    return {\n        component_tag,\n        splice_time\n    };\n}\ntype SpliceScheduleEventComponent = {\n    component_tag: number,\n    utc_splice_time: number\n}\nconst parseSpliceScheduleEventComponent = (reader: ExpGolomb): SpliceScheduleEventComponent => {\n    const component_tag = reader.readBits(8);\n    const utc_splice_time = reader.readBits(32);\n    return {\n        component_tag,\n        utc_splice_time\n    };\n}\n\ntype SpliceScheduleEvent = {\n    splice_event_id: number,\n    splice_event_cancel_indicator: boolean,\n    out_of_network_indicator?: boolean,\n    program_splice_flag?: boolean,\n    duration_flag?: boolean,\n    utc_splice_time?: number,\n    component_count?: number,\n    components?: SpliceScheduleEventComponent[]\n    break_duration?: BreakDuration,\n    unique_program_id?: number\n    avail_num?: number,\n    avails_expected?: number\n}\nconst parseSpliceScheduleEvent = (reader: ExpGolomb): SpliceScheduleEvent => {\n    const splice_event_id = reader.readBits(32);\n    const splice_event_cancel_indicator = reader.readBool();\n    reader.readBits(7);\n\n    const spliceScheduleEvent: SpliceScheduleEvent = {\n        splice_event_id,\n        splice_event_cancel_indicator\n    }\n\n    if (splice_event_cancel_indicator) {\n        return spliceScheduleEvent;\n    }\n\n    spliceScheduleEvent.out_of_network_indicator = reader.readBool()\n    spliceScheduleEvent.program_splice_flag = reader.readBool()\n    spliceScheduleEvent.duration_flag = reader.readBool()\n    reader.readBits(5)\n\n    if (spliceScheduleEvent.program_splice_flag) {\n        spliceScheduleEvent.utc_splice_time = reader.readBits(32);\n    } else {\n        spliceScheduleEvent.component_count = reader.readBits(8);\n        spliceScheduleEvent.components = [];\n        for (let i = 0; i < spliceScheduleEvent.component_count; i++) {\n            spliceScheduleEvent.components.push(parseSpliceScheduleEventComponent(reader));\n        }\n    }\n\n    if (spliceScheduleEvent.duration_flag) {\n        spliceScheduleEvent.break_duration = parseBreakDuration(reader);\n    }\n\n    spliceScheduleEvent.unique_program_id = reader.readBits(16);\n    spliceScheduleEvent.avail_num = reader.readBits(8);\n    spliceScheduleEvent.avails_expected = reader.readBits(8);\n\n    return spliceScheduleEvent;\n}\n\ntype SpliceNull = {}\ntype SpliceSchedule = {\n    splice_count: number,\n    events: SpliceScheduleEvent[],\n}\ntype SpliceInsert = {\n    splice_event_id: number,\n    splice_event_cancel_indicator: boolean,\n    out_of_network_indicator?: boolean,\n    program_splice_flag?: boolean,\n    duration_flag?: boolean,\n    splice_immediate_flag?: boolean,\n    splice_time?: SpliceTime,\n    component_count?: number,\n    components?: SpliceInsertComponent[],\n    break_duration?: BreakDuration,\n    unique_program_id?: number,\n    avail_num?: number,\n    avails_expected?: number\n}\ntype TimeSignal = {\n    splice_time: SpliceTime\n}\ntype BandwidthReservation = {}\ntype PrivateCommand = {\n    identifier: string,\n    private_data: ArrayBuffer\n}\n\ntype SpliceCommand = SpliceNull | SpliceSchedule | SpliceInsert | TimeSignal | BandwidthReservation | PrivateCommand\n\nconst parseSpliceNull = (): SpliceNull => {\n    return {};\n};\nconst parseSpliceSchedule = (reader: ExpGolomb): SpliceSchedule => {\n    const splice_count = reader.readBits(8)\n    const events: SpliceScheduleEvent[] = [];\n    for (let i = 0; i < splice_count; i++) {\n        events.push(parseSpliceScheduleEvent(reader));\n    }\n    return {\n        splice_count,\n        events\n    };\n}\nconst parseSpliceInsert = (reader: ExpGolomb): SpliceInsert => {\n    const splice_event_id = reader.readBits(32);\n    const splice_event_cancel_indicator = reader.readBool();\n    reader.readBits(7);\n\n    const spliceInsert: SpliceInsert = {\n        splice_event_id,\n        splice_event_cancel_indicator\n    }\n\n    if (splice_event_cancel_indicator) {\n        return spliceInsert;\n    }\n\n    spliceInsert.out_of_network_indicator = reader.readBool()\n    spliceInsert.program_splice_flag = reader.readBool()\n    spliceInsert.duration_flag = reader.readBool()\n    spliceInsert.splice_immediate_flag = reader.readBool()\n    reader.readBits(4)\n\n    if (spliceInsert.program_splice_flag && !spliceInsert.splice_immediate_flag) {\n        spliceInsert.splice_time = parseSpliceTime(reader);\n    }\n    if (!spliceInsert.program_splice_flag) {\n        spliceInsert.component_count = reader.readBits(8)\n        spliceInsert.components = [];\n        for (let i = 0; i < spliceInsert.component_count; i++) {\n            spliceInsert.components.push(parseSpliceInsertComponent(spliceInsert.splice_immediate_flag, reader));\n        }\n    }\n\n    if (spliceInsert.duration_flag) {\n        spliceInsert.break_duration = parseBreakDuration(reader);\n    }\n\n    spliceInsert.unique_program_id = reader.readBits(16);\n    spliceInsert.avail_num = reader.readBits(8);\n    spliceInsert.avails_expected = reader.readBits(8);\n\n    return spliceInsert;\n}\nconst parseTimeSignal = (reader: ExpGolomb): TimeSignal => {\n    return {\n        splice_time: parseSpliceTime(reader)\n    };\n}\nconst parseBandwidthReservation = (): BandwidthReservation => {\n    return {};\n}\nconst parsePrivateCommand = (splice_command_length: number, reader: ExpGolomb): PrivateCommand => {\n    const identifier = String.fromCharCode(reader.readBits(8), reader.readBits(8), reader.readBits(8), reader.readBits(8))\n    const data = new Uint8Array(splice_command_length - 4);\n    for (let i = 0; i < splice_command_length - 4; i++) {\n        data[i] = reader.readBits(8);\n    }\n\n    return {\n        identifier,\n        private_data: data.buffer\n    }\n}\n\ntype Descriptor = {\n    descriptor_tag: number,\n    descriptor_length: number,\n    identifier: string\n}\ntype AvailDescriptor = Descriptor & {\n    provider_avail_id: number\n}\nconst parseAvailDescriptor = (descriptor_tag: number, descriptor_length: number, identifier: string, reader: ExpGolomb): AvailDescriptor => {\n    const provider_avail_id = reader.readBits(32);\n\n    return {\n        descriptor_tag,\n        descriptor_length,\n        identifier,\n        provider_avail_id\n    }\n}\ntype DTMFDescriptor = Descriptor & {\n    preroll: number,\n    dtmf_count: number,\n    DTMF_char: string\n}\nconst parseDTMFDescriptor = (descriptor_tag: number, descriptor_length: number, identifier: string, reader: ExpGolomb): DTMFDescriptor => {\n    const preroll = reader.readBits(8);\n    const dtmf_count = reader.readBits(3);\n    reader.readBits(5);\n    let DTMF_char = '';\n    for (let i = 0; i < dtmf_count; i++) {\n        DTMF_char += String.fromCharCode(reader.readBits(8));\n    }\n\n    return {\n        descriptor_tag,\n        descriptor_length,\n        identifier,\n        preroll,\n        dtmf_count,\n        DTMF_char\n    };\n}\ntype SegmentationDescriptorComponent = {\n    component_tag: number,\n    pts_offset: number\n}\nconst parseSegmentationDescriptorComponent = (reader: ExpGolomb): SegmentationDescriptorComponent => {\n    const component_tag = reader.readBits(8);\n    reader.readBits(7)\n    const pts_offset = reader.readBits(31) * 4 + reader.readBits(2);\n    return {\n        component_tag,\n        pts_offset\n    };\n}\ntype SegmentationDescriptor = Descriptor & {\n    segmentation_event_id: number,\n    segmentation_event_cancel_indicator: boolean,\n    program_segmentation_flag?: boolean,\n    segmentation_duration_flag?: boolean\n    delivery_not_restricted_flag?: boolean\n    web_delivery_allowed_flag?: boolean\n    no_regional_blackout_flag?: boolean,\n    archive_allowed_flag?: boolean,\n    device_restrictions?: number\n    component_count?: number,\n    components?: any[]\n    segmentation_duration?: number\n    segmentation_upid_type?: number,\n    segmentation_upid_length?: number,\n    segmentation_upid?: ArrayBuffer,\n    segmentation_type_id?: number,\n    segment_num?: number,\n    segments_expected?: number,\n    sub_segment_num?: number,\n    sub_segments_expected?: number\n}\nconst parseSegmentationDescriptor = (descriptor_tag: number, descriptor_length: number, identifier: string, reader: ExpGolomb): SegmentationDescriptor => {\n    const segmentation_event_id = reader.readBits(32);\n    const segmentation_event_cancel_indicator = reader.readBool();\n    reader.readBits(7);\n\n    const segmentationDescriptor: SegmentationDescriptor = {\n        descriptor_tag,\n        descriptor_length,\n        identifier,\n        segmentation_event_id,\n        segmentation_event_cancel_indicator\n    }\n\n    if (segmentation_event_cancel_indicator) {\n        return segmentationDescriptor;\n    }\n\n    segmentationDescriptor.program_segmentation_flag = reader.readBool();\n    segmentationDescriptor.segmentation_duration_flag = reader.readBool();\n    segmentationDescriptor.delivery_not_restricted_flag = reader.readBool();\n\n    if (!segmentationDescriptor.delivery_not_restricted_flag) {\n        segmentationDescriptor.web_delivery_allowed_flag = reader.readBool();\n        segmentationDescriptor.no_regional_blackout_flag = reader.readBool();\n        segmentationDescriptor.archive_allowed_flag = reader.readBool();\n        segmentationDescriptor.device_restrictions = reader.readBits(2);\n    } else {\n        reader.readBits(5);\n    }\n\n    if (!segmentationDescriptor.program_segmentation_flag) {\n        segmentationDescriptor.component_count = reader.readBits(8);\n        segmentationDescriptor.components = [];\n        for (let i = 0; i < segmentationDescriptor.component_count; i++) {\n            segmentationDescriptor.components.push(parseSegmentationDescriptorComponent(reader));\n        }\n    }\n\n    if (segmentationDescriptor.segmentation_duration_flag) {\n        segmentationDescriptor.segmentation_duration = reader.readBits(40);\n    }\n\n    segmentationDescriptor.segmentation_upid_type = reader.readBits(8);\n    segmentationDescriptor.segmentation_upid_length = reader.readBits(8);\n    {\n        const upid = new Uint8Array(segmentationDescriptor.segmentation_upid_length)\n        for (let i = 0; i < segmentationDescriptor.segmentation_upid_length; i++) {\n            upid[i] = reader.readBits(8);\n        }\n        segmentationDescriptor.segmentation_upid = upid.buffer;\n    }\n    segmentationDescriptor.segmentation_type_id = reader.readBits(8);\n    segmentationDescriptor.segment_num = reader.readBits(8);\n    segmentationDescriptor.segments_expected = reader.readBits(8);\n    if (\n        segmentationDescriptor.segmentation_type_id === 0x34 ||\n        segmentationDescriptor.segmentation_type_id === 0x36 ||\n        segmentationDescriptor.segmentation_type_id === 0x38 ||\n        segmentationDescriptor.segmentation_type_id === 0x3A\n    ) {\n        segmentationDescriptor.sub_segment_num = reader.readBits(8);\n        segmentationDescriptor.sub_segments_expected = reader.readBits(8);\n    }\n\n    return segmentationDescriptor;\n}\ntype TimeDescriptor = Descriptor & {\n    TAI_seconds: number,\n    TAI_ns: number,\n    UTC_offset: number\n}\nconst parseTimeDescriptor = (descriptor_tag: number, descriptor_length: number, identifier: string, reader: ExpGolomb): TimeDescriptor => {\n    const TAI_seconds = reader.readBits(48);\n    const TAI_ns = reader.readBits(32);\n    const UTC_offset = reader.readBits(16);\n\n    return {\n        descriptor_tag,\n        descriptor_length,\n        identifier,\n        TAI_seconds,\n        TAI_ns,\n        UTC_offset\n    };\n}\ntype AudioDescriptorComponent = {\n    component_tag: number,\n    ISO_code: string\n    Bit_Stream_Mode: number\n    Num_Channels: number,\n    Full_Srvc_Audio: boolean\n}\nconst parseAudioDescriptorComponent = (reader: ExpGolomb): AudioDescriptorComponent => {\n    const component_tag = reader.readBits(8)\n    const ISO_code = String.fromCharCode(reader.readBits(8), reader.readBits(8), reader.readBits(8));\n    const Bit_Stream_Mode = reader.readBits(3);\n    const Num_Channels = reader.readBits(4);\n    const Full_Srvc_Audio = reader.readBool();\n\n    return {\n        component_tag,\n        ISO_code,\n        Bit_Stream_Mode,\n        Num_Channels,\n        Full_Srvc_Audio\n    };\n}\ntype AudioDescriptor = Descriptor & {\n    audio_count: number,\n    components: AudioDescriptorComponent[]\n}\nconst parseAudioDescriptor = (descriptor_tag: number, descriptor_length: number, identifier: string, reader: ExpGolomb): AudioDescriptor => {\n    const audio_count = reader.readBits(4);\n    const components: AudioDescriptorComponent[] = [];\n    for (let i = 0; i < audio_count; i++) {\n        components.push(parseAudioDescriptorComponent(reader));\n    }\n\n    return {\n        descriptor_tag,\n        descriptor_length,\n        identifier,\n        audio_count,\n        components\n    };\n}\n\ntype SpliceDescriptor = AvailDescriptor | DTMFDescriptor | SegmentationDescriptor | TimeDescriptor | AudioDescriptor;\n\nexport const readSCTE35 = (data: Uint8Array): SCTE35Data => {\n    const reader = new ExpGolomb(data);\n\n    const table_id = reader.readBits(8);\n    const section_syntax_indicator = reader.readBool();\n    const private_indicator = reader.readBool();\n    reader.readBits(2);\n    const section_length = reader.readBits(12);\n    const protocol_version = reader.readBits(8);\n    const encrypted_packet = reader.readBool();\n    const encryption_algorithm = reader.readBits(6);\n    const pts_adjustment = reader.readBits(31) * 4 + reader.readBits(2);\n    const cw_index = reader.readBits(8);\n    const tier = reader.readBits(12);\n    const splice_command_length = reader.readBits(12)\n    const splice_command_type = reader.readBits(8)\n\n    let splice_command: SpliceCommand | null = null;\n    if (splice_command_type === SCTE35CommandType.kSpliceNull) {\n        splice_command = parseSpliceNull();\n    } else if (splice_command_type === SCTE35CommandType.kSpliceSchedule) {\n        splice_command = parseSpliceSchedule(reader);\n    } else if (splice_command_type === SCTE35CommandType.kSpliceInsert) {\n        splice_command = parseSpliceInsert(reader);\n    } else if (splice_command_type === SCTE35CommandType.kTimeSignal) {\n        splice_command = parseTimeSignal(reader);\n    } else if (splice_command_type === SCTE35CommandType.kBandwidthReservation) {\n        splice_command = parseBandwidthReservation();\n    } else if (splice_command_type === SCTE35CommandType.kPrivateCommand) {\n        splice_command = parsePrivateCommand(splice_command_length, reader)\n    } else {\n        reader.readBits(splice_command_length * 8);\n    }\n\n    const splice_descriptors: SpliceDescriptor[] = [];\n\n    const descriptor_loop_length = reader.readBits(16);\n    for (let length = 0; length < descriptor_loop_length;) {\n        const descriptor_tag = reader.readBits(8);\n        const descriptor_length = reader.readBits(8);\n        const identifier = String.fromCharCode(reader.readBits(8), reader.readBits(8), reader.readBits(8), reader.readBits(8));\n\n        if (descriptor_tag === 0x00) {\n            splice_descriptors.push(parseAvailDescriptor(descriptor_tag, descriptor_length, identifier, reader));\n        } else if (descriptor_tag === 0x01) {\n            splice_descriptors.push(parseDTMFDescriptor(descriptor_tag, descriptor_length, identifier, reader));\n        } else if (descriptor_tag === 0x02) {\n            splice_descriptors.push(parseSegmentationDescriptor(descriptor_tag, descriptor_length, identifier, reader));\n        } else if (descriptor_tag === 0x03) {\n            splice_descriptors.push(parseTimeDescriptor(descriptor_tag, descriptor_length, identifier, reader));\n        } else if (descriptor_tag === 0x04) {\n            splice_descriptors.push(parseAudioDescriptor(descriptor_tag, descriptor_length, identifier, reader));\n        } else {\n            reader.readBits((descriptor_length - 4) * 8);\n        }\n\n        length += 2 + descriptor_length;\n    }\n\n    const E_CRC32 = encrypted_packet ? reader.readBits(32) : undefined;\n    const CRC32 = reader.readBits(32);\n\n    const detail = {\n        table_id,\n        section_syntax_indicator,\n        private_indicator,\n        section_length,\n        protocol_version,\n        encrypted_packet,\n        encryption_algorithm,\n        pts_adjustment,\n        cw_index,\n        tier,\n        splice_command_length,\n        splice_command_type,\n        splice_command,\n        descriptor_loop_length,\n        splice_descriptors,\n        E_CRC32,\n        CRC32\n    };\n\n    if (splice_command_type === SCTE35CommandType.kSpliceInsert) {\n        const spliceInsert = splice_command as SpliceInsert;\n\n        if (spliceInsert.splice_event_cancel_indicator) {\n            return {\n                splice_command_type,\n                detail,\n                data\n            }\n        } else if (spliceInsert.program_splice_flag && !spliceInsert.splice_immediate_flag) {\n            const auto_return = spliceInsert.duration_flag ? spliceInsert.break_duration.auto_return : undefined;\n            const duraiton = spliceInsert.duration_flag ? spliceInsert.break_duration.duration / 90 : undefined;\n\n            if (spliceInsert.splice_time.time_specified_flag) {\n                return {\n                    splice_command_type,\n                    pts: (pts_adjustment + spliceInsert.splice_time.pts_time) % (2 ** 33),\n                    auto_return,\n                    duraiton,\n                    detail,\n                    data\n                }\n            } else {\n                return {\n                    splice_command_type,\n                    auto_return,\n                    duraiton,\n                    detail,\n                    data\n                }                       \n            }\n        } else {\n            const auto_return = spliceInsert.duration_flag ? spliceInsert.break_duration.auto_return : undefined;\n            const duraiton = spliceInsert.duration_flag ? spliceInsert.break_duration.duration / 90 : undefined;\n\n            return {\n                splice_command_type,\n                auto_return,\n                duraiton,\n                detail,\n                data\n            }\n        }\n    } else if (splice_command_type === SCTE35CommandType.kTimeSignal) {\n        const timeSignal = splice_command as TimeSignal;\n\n        if (timeSignal.splice_time.time_specified_flag) {\n            return {\n                splice_command_type,\n                pts: (pts_adjustment + timeSignal.splice_time.pts_time) % (2 ** 33),\n                detail,\n                data\n            }\n        } else {\n            return {\n                splice_command_type,\n                detail,\n                data\n            }\n        }\n    } else {\n        return {\n            splice_command_type,\n            detail,\n            data\n        }\n    }\n}","import Log from \"../utils/logger\";\nimport { MPEG4AudioObjectTypes, MPEG4SamplingFrequencies, MPEG4SamplingFrequencyIndex } from \"./mpeg4-audio\";\n\nexport class AACFrame {\n    audio_object_type: MPEG4AudioObjectTypes;\n    sampling_freq_index: MPEG4SamplingFrequencyIndex;\n    sampling_frequency: number;\n    channel_config: number;\n\n    data: Uint8Array;\n}\n\nexport class AACADTSParser {\n\n    private readonly TAG: string = \"AACADTSParser\";\n\n    private data_: Uint8Array;\n    private current_syncword_offset_: number;\n    private eof_flag_: boolean;\n    private has_last_incomplete_data: boolean;\n\n    public constructor(data: Uint8Array) {\n        this.data_ = data;\n        this.current_syncword_offset_ = this.findNextSyncwordOffset(0);\n        if (this.eof_flag_) {\n            Log.e(this.TAG, `Could not found ADTS syncword until payload end`);\n        }\n    }\n\n    private findNextSyncwordOffset(syncword_offset: number): number {\n        let i = syncword_offset;\n        let data = this.data_;\n\n        while (true) {\n            if (i + 7 >= data.byteLength) {\n                this.eof_flag_ = true;\n                return data.byteLength;\n            }\n\n            // search 12-bit 0xFFF syncword\n            let syncword = ((data[i + 0] << 8) | data[i + 1]) >>> 4;\n            if (syncword === 0xFFF) {\n                return i;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    public readNextAACFrame(): AACFrame | null {\n        let data = this.data_;\n        let aac_frame: AACFrame = null;\n\n        while (aac_frame == null) {\n            if (this.eof_flag_) {\n                break;\n            }\n\n            let syncword_offset = this.current_syncword_offset_;\n            let offset = syncword_offset;\n\n            // adts_fixed_header()\n            // syncword 0xFFF: 12-bit\n            let ID = (data[offset + 1] & 0x08) >>> 3;\n            let layer = (data[offset + 1] & 0x06) >>> 1;\n            let protection_absent = data[offset + 1] & 0x01;\n            let profile = (data[offset + 2] & 0xC0) >>> 6;\n            let sampling_frequency_index = (data[offset + 2] & 0x3C) >>> 2;\n            let channel_configuration = ((data[offset + 2] & 0x01) << 2)\n                                        | ((data[offset + 3] & 0xC0) >>> 6);\n\n            // adts_variable_header()\n            let aac_frame_length = ((data[offset + 3] & 0x03) << 11)\n                                    | (data[offset + 4] << 3)\n                                    | ((data[offset + 5] & 0xE0) >>> 5);\n            let number_of_raw_data_blocks_in_frame = data[offset + 6] & 0x03;\n\n            if (offset + aac_frame_length > this.data_.byteLength) {\n                // data not enough for extracting last sample\n                this.eof_flag_ = true;\n                this.has_last_incomplete_data = true;\n                break;\n            }\n\n            let adts_header_length = (protection_absent === 1) ? 7 : 9;\n            let adts_frame_payload_length = aac_frame_length - adts_header_length;\n\n            offset += adts_header_length;\n\n            let next_syncword_offset = this.findNextSyncwordOffset(offset + adts_frame_payload_length);\n            this.current_syncword_offset_ = next_syncword_offset;\n\n            if ((ID !== 0 && ID !== 1) || layer !== 0) {\n                // invalid adts frame ?\n                continue;\n            }\n\n            let frame_data = data.subarray(offset, offset + adts_frame_payload_length);\n\n            aac_frame = new AACFrame();\n            aac_frame.audio_object_type = (profile + 1) as MPEG4AudioObjectTypes;\n            aac_frame.sampling_freq_index = sampling_frequency_index as MPEG4SamplingFrequencyIndex;\n            aac_frame.sampling_frequency = MPEG4SamplingFrequencies[sampling_frequency_index];\n            aac_frame.channel_config = channel_configuration;\n            aac_frame.data = frame_data;\n        }\n\n        return aac_frame;\n    }\n\n    public hasIncompleteData(): boolean {\n        return this.has_last_incomplete_data;\n    }\n\n    public getIncompleteData(): Uint8Array {\n        if (!this.has_last_incomplete_data) {\n            return null;\n        }\n\n        return this.data_.subarray(this.current_syncword_offset_);\n    }\n}\n\nexport class AudioSpecificConfig {\n\n    public config: Array<number>;\n    public sampling_rate: number;\n    public channel_count: number;\n    public codec_mimetype: string;\n    public original_codec_mimetype: string;\n\n    public constructor(frame: AACFrame) {\n        let config: Array<number> = null;\n\n        let original_audio_object_type = frame.audio_object_type;\n        let audio_object_type = frame.audio_object_type;\n        let sampling_index = frame.sampling_freq_index;\n        let channel_config = frame.channel_config;\n        let extension_sampling_index = 0;\n\n        let userAgent = navigator.userAgent.toLowerCase();\n\n        if (userAgent.indexOf('firefox') !== -1) {\n            // firefox: use SBR (HE-AAC) if freq less than 24kHz\n            if (sampling_index >= 6) {\n                audio_object_type = 5;\n                config = new Array(4);\n                extension_sampling_index = sampling_index - 3;\n            } else {  // use LC-AAC\n                audio_object_type = 2;\n                config = new Array(2);\n                extension_sampling_index = sampling_index;\n            }\n        } else if (userAgent.indexOf('android') !== -1) {\n            // android: always use LC-AAC\n            audio_object_type = 2;\n            config = new Array(2);\n            extension_sampling_index = sampling_index;\n        } else {\n            // for other browsers, e.g. chrome...\n            // Always use HE-AAC to make it easier to switch aac codec profile\n            audio_object_type = 5;\n            extension_sampling_index = sampling_index;\n            config = new Array(4);\n\n            if (sampling_index >= 6) {\n                extension_sampling_index = sampling_index - 3;\n            } else if (channel_config === 1) {  // Mono channel\n                audio_object_type = 2;\n                config = new Array(2);\n                extension_sampling_index = sampling_index;\n            }\n        }\n\n        config[0]  = audio_object_type << 3;\n        config[0] |= (sampling_index & 0x0F) >>> 1;\n        config[1]  = (sampling_index & 0x0F) << 7;\n        config[1] |= (channel_config & 0x0F) << 3;\n        if (audio_object_type === 5) {\n            config[1] |= ((extension_sampling_index & 0x0F) >>> 1);\n            config[2]  = (extension_sampling_index & 0x01) << 7;\n            // extended audio object type: force to 2 (LC-AAC)\n            config[2] |= (2 << 2);\n            config[3]  = 0;\n        }\n\n        this.config = config;\n        this.sampling_rate = MPEG4SamplingFrequencies[sampling_index];\n        this.channel_count = channel_config;\n        this.codec_mimetype = 'mp4a.40.' + audio_object_type;\n        this.original_codec_mimetype = 'mp4a.40.' + original_audio_object_type;\n    }\n\n}\n","// ISO/IEC 13818-1 PES packets containing private data (stream_type=0x06)\nexport class PESPrivateData {\n    pid: number;\n    stream_id: number;\n    pts?: number;\n    dts?: number;\n    nearest_pts?: number;\n    data: Uint8Array;\n    len: number;\n}\n\nexport class PESPrivateDataDescriptor {\n    pid: number;\n    stream_type: number;\n    descriptor: Uint8Array;\n}\n","import Log from \"../utils/logger\";\n\nexport enum H265NaluType {\n    kSliceIDR_W_RADL = 19,\n    kSliceIDR_N_LP = 20,\n    kSliceVPS = 32,\n    kSliceSPS = 33,\n    kSlicePPS = 34,\n    kSliceAUD = 35,\n}\n\nexport class H265NaluPayload {\n    type: H265NaluType;\n    data: Uint8Array;\n}\n\nexport class H265NaluHVC1 {\n    type: H265NaluType;\n    data: Uint8Array;\n\n    constructor(nalu: H265NaluPayload) {\n        let nalu_size = nalu.data.byteLength;\n\n        this.type = nalu.type;\n        this.data = new Uint8Array(4 + nalu_size);  // 4 byte length-header + nalu payload\n\n        let v = new DataView(this.data.buffer);\n        // Fill 4 byte length-header\n        v.setUint32(0, nalu_size);\n        // Copy payload\n        this.data.set(nalu.data, 4);\n    }\n}\n\nexport class H265AnnexBParser {\n\n    private readonly TAG: string = \"H265AnnexBParser\";\n\n    private data_: Uint8Array;\n    private current_startcode_offset_: number = 0;\n    private eof_flag_: boolean = false;\n\n    public constructor(data: Uint8Array) {\n        this.data_ = data;\n        this.current_startcode_offset_ = this.findNextStartCodeOffset(0);\n        if (this.eof_flag_) {\n            Log.e(this.TAG, \"Could not find H265 startcode until payload end!\");\n        }\n    }\n\n    private findNextStartCodeOffset(start_offset: number) {\n        let i = start_offset;\n        let data = this.data_;\n\n        while (true) {\n            if (i + 3 >= data.byteLength) {\n                this.eof_flag_ = true;\n                return data.byteLength;\n            }\n\n            // search 00 00 00 01 or 00 00 01\n            let uint32 = (data[i + 0] << 24)\n                        | (data[i + 1] << 16)\n                        | (data[i + 2] << 8)\n                        | (data[i + 3]);\n            let uint24 = (data[i + 0] << 16)\n                        | (data[i + 1] << 8)\n                        | (data[i + 2]);\n            if (uint32 === 0x00000001 || uint24 === 0x000001) {\n                return i;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    public readNextNaluPayload(): H265NaluPayload | null {\n        let data = this.data_;\n        let nalu_payload: H265NaluPayload = null;\n\n        while (nalu_payload == null) {\n            if (this.eof_flag_) {\n                break;\n            }\n            // offset pointed to start code\n            let startcode_offset = this.current_startcode_offset_;\n\n            // nalu payload start offset\n            let offset = startcode_offset;\n            let u32 = (data[offset] << 24) | (data[offset + 1] << 16) | (data[offset + 2] << 8) | (data[offset + 3]);\n            if (u32 === 0x00000001) {\n                offset += 4;\n            } else {\n                offset += 3;\n            }\n\n            let nalu_type: H265NaluType = (data[offset] >> 1) & 0x3F;\n            let forbidden_bit = (data[offset] & 0x80) >>> 7;\n\n            let next_startcode_offset = this.findNextStartCodeOffset(offset);\n            this.current_startcode_offset_ = next_startcode_offset;\n\n            if (forbidden_bit !== 0) {\n                // Log.e(this.TAG, `forbidden_bit near offset ${offset} should be 0 but has value ${forbidden_bit}`);\n                continue;\n            }\n\n            let payload_data = data.subarray(offset, next_startcode_offset);\n\n            nalu_payload = new H265NaluPayload();\n            nalu_payload.type = nalu_type;\n            nalu_payload.data = payload_data;\n        }\n\n        return nalu_payload;\n    }\n\n}\n\nexport type HEVCDecoderConfigurationRecordType = {\n    configurationVersion: 1;\n} & VPSHEVCDecoderConfigurationRecordType & SPSHEVCDecoderConfigurationRecordType & PPSHEVCDecoderConfigurationRecordType;\n\nexport type VPSHEVCDecoderConfigurationRecordType = {\n    num_temporal_layers: number;\n    temporal_id_nested: boolean;\n}\n\nexport type SPSHEVCDecoderConfigurationRecordType = {\n    general_profile_space: number;\n    general_tier_flag: number;\n    general_profile_idc: number;\n    general_profile_compatibility_flags_1: number;\n    general_profile_compatibility_flags_2: number;\n    general_profile_compatibility_flags_3: number;\n    general_profile_compatibility_flags_4: number;\n    general_constraint_indicator_flags_1: number;\n    general_constraint_indicator_flags_2: number;\n    general_constraint_indicator_flags_3: number;\n    general_constraint_indicator_flags_4: number;\n    general_constraint_indicator_flags_5: number;\n    general_constraint_indicator_flags_6: number;\n    constant_frame_rate: number;\n    min_spatial_segmentation_idc: number;\n    chroma_format_idc: number,\n    bit_depth_luma_minus8: number,\n    bit_depth_chroma_minus8: number,\n}\n\nexport type PPSHEVCDecoderConfigurationRecordType = {\n    parallelismType: number;\n}\n\nexport class HEVCDecoderConfigurationRecord {\n\n    private data: Uint8Array;\n\n    // sps, pps: require Nalu without 4 byte length-header\n    public constructor(vps: Uint8Array, sps: Uint8Array, pps: Uint8Array, detail: HEVCDecoderConfigurationRecordType) {\n        let length = 23 + (3 + 2 + vps.byteLength) + (3 + 2 + sps.byteLength) + (3 + 2 + pps.byteLength);\n        let data = this.data = new Uint8Array(length);\n\n        data[0] = 0x01; // configurationVersion\n        data[1] = ((detail.general_profile_space & 0x03) << 6) | ((detail.general_tier_flag ? 1 : 0) << 5) | ((detail.general_profile_idc & 0x1F));\n        data[2] = detail.general_profile_compatibility_flags_1;\n        data[3] = detail.general_profile_compatibility_flags_2;\n        data[4] = detail.general_profile_compatibility_flags_3;\n        data[5] = detail.general_profile_compatibility_flags_4;\n        data[6] = detail.general_constraint_indicator_flags_1;\n        data[7] = detail.general_constraint_indicator_flags_2;\n        data[8] = detail.general_constraint_indicator_flags_3;\n        data[9] = detail.general_constraint_indicator_flags_4;\n        data[10] = detail.general_constraint_indicator_flags_5;\n        data[11] = detail.general_constraint_indicator_flags_6;\n        data[12] = 0x3C;\n        data[13] = 0xF0 | ((detail.min_spatial_segmentation_idc & 0x0F00) >> 8)\n        data[14] = (detail.min_spatial_segmentation_idc & 0xFF);\n        data[15] = 0xFC | (detail.parallelismType & 0x03);\n        data[16] = 0xFC | (detail.chroma_format_idc & 0x03);\n        data[17] = 0xF8 | (detail.bit_depth_luma_minus8 & 0x07);\n        data[18] = 0xF8 | (detail.bit_depth_chroma_minus8 & 0x07);\n        data[19] = 0;\n        data[20] = 0;\n        data[21] = ((detail.constant_frame_rate & 0x03) << 6) | ((detail.num_temporal_layers & 0x07) << 3) | ((detail.temporal_id_nested ? 1 : 0) << 2) | 3;\n        data[22] = 3;\n        data[23 + 0 + 0] = 0x80 | H265NaluType.kSliceVPS;\n        data[23 + 0 + 1] = 0;\n        data[23 + 0 + 2] = 1;\n        data[23 + 0 + 3] = (vps.byteLength & 0xFF00) >> 8;\n        data[23 + 0 + 4] = (vps.byteLength & 0x00FF) >> 0;\n        data.set(vps, 23 + 0 + 5);\n        data[23 + (5 + vps.byteLength) + 0] = 0x80 | H265NaluType.kSliceSPS;\n        data[23 + (5 + vps.byteLength) + 1] = 0;\n        data[23 + (5 + vps.byteLength) + 2] = 1;\n        data[23 + (5 + vps.byteLength) + 3] = (sps.byteLength & 0xFF00) >> 8;\n        data[23 + (5 + vps.byteLength) + 4] = (sps.byteLength & 0x00FF) >> 0;\n        data.set(sps, 23 + (5 + vps.byteLength) + 5);\n        data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 0] = 0x80 | H265NaluType.kSlicePPS;\n        data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 1] = 0;\n        data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 2] = 1;\n        data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 3] = (pps.byteLength & 0xFF00) >> 8;\n        data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 4] = (pps.byteLength & 0x00FF) >> 0;\n        data.set(pps, 23 + (5 + vps.byteLength + 5 + sps.byteLength) + 5);\n    }\n\n    public getData() {\n        return this.data;\n    }\n\n}\n","/*\n * Copyright (C) 2021 magicxqq. All Rights Reserved.\n *\n * @author magicxqq <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger';\nimport DemuxErrors from './demux-errors';\nimport MediaInfo from '../core/media-info';\nimport {IllegalStateException} from '../utils/exception';\nimport BaseDemuxer from './base-demuxer';\nimport { PAT, PESData, SectionData, SliceQueue, PIDToSliceQueues, PMT, ProgramToPMTMap, StreamType } from './pat-pmt-pes';\nimport { AVCDecoderConfigurationRecord, H264AnnexBParser, H264NaluAVC1, H264NaluPayload, H264NaluType } from './h264';\nimport SPSParser from './sps-parser';\nimport { AACADTSParser, AACFrame, AudioSpecificConfig } from './aac';\nimport { MPEG4AudioObjectTypes, MPEG4SamplingFrequencyIndex } from './mpeg4-audio';\nimport { PESPrivateData, PESPrivateDataDescriptor } from './pes-private-data';\nimport { readSCTE35, SCTE35Data } from './scte35';\nimport { H265AnnexBParser, H265NaluHVC1, H265NaluPayload, H265NaluType, HEVCDecoderConfigurationRecord } from './h265';\nimport H265Parser from './h265-parser';\n\nclass TSDemuxer extends BaseDemuxer {\n\n    private readonly TAG: string = 'TSDemuxer';\n\n    private config_: any;\n    private ts_packet_size_: number;\n    private sync_offset_: number;\n    private first_parse_: boolean = true;\n\n    private media_info_ = new MediaInfo();\n\n    private timescale_ = 90;\n    private duration_ = 0;\n\n    private pat_: PAT;\n    private current_program_: number;\n    private current_pmt_pid_: number = -1;\n    private pmt_: PMT;\n    private program_pmt_map_: ProgramToPMTMap = {};\n\n    private pes_slice_queues_: PIDToSliceQueues = {};\n    private section_slice_queues_: PIDToSliceQueues = {};\n\n    private video_metadata_: {\n        vps: H265NaluHVC1 | undefined,\n        sps: H264NaluAVC1 | H265NaluHVC1 | undefined,\n        pps: H264NaluAVC1 | H265NaluHVC1 | undefined,\n        details: any\n    } = {\n        vps: undefined,\n        sps: undefined,\n        pps: undefined,\n        details: undefined\n    };\n\n    private audio_metadata_: {\n        audio_object_type: MPEG4AudioObjectTypes;\n        sampling_freq_index: MPEG4SamplingFrequencyIndex;\n        sampling_frequency: number;\n        channel_config: number;\n    } = {\n        audio_object_type: undefined,\n        sampling_freq_index: undefined,\n        sampling_frequency: undefined,\n        channel_config: undefined\n    };\n\n    private aac_last_sample_pts_: number = undefined;\n    private aac_last_incomplete_data_: Uint8Array = null;\n\n    private has_video_ = false;\n    private has_audio_ = false;\n    private video_init_segment_dispatched_ = false;\n    private audio_init_segment_dispatched_ = false;\n    private video_metadata_changed_ = false;\n    private audio_metadata_changed_ = false;\n\n    private video_track_ = {type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0};\n    private audio_track_ = {type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0};\n\n    public constructor(probe_data: any, config: any) {\n        super();\n\n        this.ts_packet_size_ = probe_data.ts_packet_size;\n        this.sync_offset_ = probe_data.sync_offset;\n        this.config_ = config;\n    }\n\n    public destroy() {\n        this.media_info_ = null;\n        this.pes_slice_queues_ = null;\n        this.section_slice_queues_ = null;\n\n        this.video_metadata_ = null;\n        this.audio_metadata_ = null;\n        this.aac_last_incomplete_data_ = null;\n\n        this.video_track_ = null;\n        this.audio_track_ = null;\n\n        super.destroy();\n    }\n\n    public static probe(buffer: ArrayBuffer) {\n        let data = new Uint8Array(buffer);\n        let sync_offset = -1;\n        let ts_packet_size = 188;\n\n        if (data.byteLength <= 3 * ts_packet_size) {\n            Log.e('TSDemuxer', `Probe data ${data.byteLength} bytes is too few for judging MPEG-TS stream format!`);\n            return {match: false};\n        }\n\n        while (sync_offset === -1) {\n            let scan_window = Math.min(1000, data.byteLength - 3 * ts_packet_size);\n\n            for (let i = 0; i < scan_window; ) {\n                // sync_byte should all be 0x47\n                if (data[i] === 0x47\n                        && data[i + ts_packet_size] === 0x47\n                        && data[i + 2 * ts_packet_size] === 0x47) {\n                    sync_offset = i;\n                    break;\n                } else {\n                    i++;\n                }\n            }\n\n            // find sync_offset failed in previous ts_packet_size\n            if (sync_offset === -1) {\n                if (ts_packet_size === 188) {\n                    // try 192 packet size (BDAV, etc.)\n                    ts_packet_size = 192;\n                } else if (ts_packet_size === 192) {\n                    // try 204 packet size (European DVB, etc.)\n                    ts_packet_size = 204;\n                } else {\n                    // 192, 204 also failed, exit\n                    break;\n                }\n            }\n        }\n\n        if (sync_offset === -1) {\n            // both 188, 192, 204 failed, Non MPEG-TS\n            return {match: false};\n        }\n\n        if (ts_packet_size === 192 && sync_offset >= 4) {\n            Log.v('TSDemuxer', `ts_packet_size = 192, m2ts mode`);\n            sync_offset -= 4;\n        } else if (ts_packet_size === 204) {\n            Log.v('TSDemuxer', `ts_packet_size = 204, RS encoded MPEG2-TS stream`);\n        }\n\n        return {\n            match: true,\n            consumed: 0,\n            ts_packet_size,\n            sync_offset\n        };\n    }\n\n    public bindDataSource(loader) {\n        loader.onDataArrival = this.parseChunks.bind(this);\n        return this;\n    }\n\n    public resetMediaInfo() {\n        this.media_info_ = new MediaInfo();\n    }\n\n    public parseChunks(chunk: ArrayBuffer, byte_start: number): number {\n        if (!this.onError\n                || !this.onMediaInfo\n                || !this.onTrackMetadata\n                || !this.onDataAvailable) {\n            throw new IllegalStateException('onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');\n        }\n\n        let offset = 0;\n\n        if (this.first_parse_) {\n            this.first_parse_ = false;\n            offset = this.sync_offset_;\n        }\n\n        while (offset + this.ts_packet_size_ <= chunk.byteLength) {\n            let file_position = byte_start + offset;\n\n            if (this.ts_packet_size_ === 192) {\n                // skip ATS field (2-bits copy-control + 30-bits timestamp) for m2ts\n                offset += 4;\n            }\n\n            let data = new Uint8Array(chunk, offset, 188);\n\n            let sync_byte = data[0];\n            if (sync_byte !== 0x47) {\n                Log.e(this.TAG, `sync_byte = ${sync_byte}, not 0x47`);\n                break;\n            }\n\n            let payload_unit_start_indicator = (data[1] & 0x40) >>> 6;\n            let transport_priority = (data[1] & 0x20) >>> 5;\n            let pid = ((data[1] & 0x1F) << 8) | data[2];\n            let adaptation_field_control = (data[3] & 0x30) >>> 4;\n            let continuity_conunter = (data[3] & 0x0F);\n\n            let adaptation_field_info: {\n                discontinuity_indicator?: number,\n                random_access_indicator?: number,\n                elementary_stream_priority_indicator?: number\n            } = {};\n            let ts_payload_start_index = 4;\n\n            if (adaptation_field_control == 0x02 || adaptation_field_control == 0x03) {\n                let adaptation_field_length = data[4];\n                if (5 + adaptation_field_length === 188) {\n                    // TS packet only has adaption field, jump to next\n                    offset += 188;\n                    if (this.ts_packet_size_ === 204) {\n                        // skip parity word (16 bytes) for RS encoded TS\n                        offset += 16;\n                    }\n                    continue;\n                } else {\n                    // parse leading adaptation_field if has payload\n                    if (adaptation_field_length > 0) {\n                        adaptation_field_info = this.parseAdaptationField(chunk,\n                                                                          offset + 4,\n                                                                          1 + adaptation_field_length);\n                    }\n                    ts_payload_start_index = 4 + 1 + adaptation_field_length;\n                }\n            }\n\n            if (adaptation_field_control == 0x01 || adaptation_field_control == 0x03) {\n                if (pid === 0 || pid === this.current_pmt_pid_ || (this.pmt_ != undefined && this.pmt_.pid_stream_type[pid] === StreamType.kSCTE35)) {  // PAT(pid === 0) or PMT or SCTE35\n                    let ts_payload_length = 188 - ts_payload_start_index;\n\n                    this.handleSectionSlice(chunk,\n                                            offset + ts_payload_start_index,\n                                            ts_payload_length,\n                                            {\n                                                pid,\n                                                file_position,\n                                                payload_unit_start_indicator,\n                                                continuity_conunter,\n                                                random_access_indicator: adaptation_field_info.random_access_indicator\n                                            });\n                } else if (this.pmt_ != undefined && this.pmt_.pid_stream_type[pid] != undefined) {\n                    // PES\n                    let ts_payload_length = 188 - ts_payload_start_index;\n                    let stream_type = this.pmt_.pid_stream_type[pid];\n\n                    // process PES only for known common_pids\n                    if (pid === this.pmt_.common_pids.h264\n                            || pid === this.pmt_.common_pids.h265\n                            || pid === this.pmt_.common_pids.adts_aac\n                            || this.pmt_.pes_private_data_pids[pid] === true\n                            || this.pmt_.timed_id3_pids[pid] === true) {\n                        this.handlePESSlice(chunk,\n                                            offset + ts_payload_start_index,\n                                            ts_payload_length,\n                                            {\n                                                pid,\n                                                stream_type,\n                                                file_position,\n                                                payload_unit_start_indicator,\n                                                continuity_conunter,\n                                                random_access_indicator: adaptation_field_info.random_access_indicator\n                                            });\n                    }\n                }\n            }\n\n            offset += 188;\n\n            if (this.ts_packet_size_ === 204) {\n                // skip parity word (16 bytes) for RS encoded TS\n                offset += 16;\n            }\n        }\n\n        // dispatch parsed frames to the remuxer (consumer)\n        this.dispatchAudioVideoMediaSegment();\n\n        return offset;  // consumed bytes\n    }\n\n    private parseAdaptationField(buffer: ArrayBuffer, offset: number, length: number): {\n        discontinuity_indicator?: number,\n        random_access_indicator?: number,\n        elementary_stream_priority_indicator?: number\n    } {\n        let data = new Uint8Array(buffer, offset, length);\n\n        let adaptation_field_length = data[0];\n        if (adaptation_field_length > 0) {\n            if (adaptation_field_length > 183) {\n                Log.w(this.TAG, `Illegal adaptation_field_length: ${adaptation_field_length}`);\n                return {};\n            }\n\n            let discontinuity_indicator: number = (data[1] & 0x80) >>> 7;\n            let random_access_indicator: number = (data[1] & 0x40) >>> 6;\n            let elementary_stream_priority_indicator: number = (data[1] & 0x20) >>> 5;\n\n            return {\n                discontinuity_indicator,\n                random_access_indicator,\n                elementary_stream_priority_indicator\n            };\n        }\n\n        return {};\n    }\n\n    private handleSectionSlice(buffer: ArrayBuffer, offset: number, length: number, misc: any): void {\n        let data = new Uint8Array(buffer, offset, length);\n        let slice_queue = this.section_slice_queues_[misc.pid];\n\n        if (misc.payload_unit_start_indicator) {\n            let pointer_field = data[0];\n\n            if (slice_queue != undefined && slice_queue.total_length !== 0) {\n                let remain_section = new Uint8Array(buffer, offset + 1, Math.min(length, pointer_field));\n                slice_queue.slices.push(remain_section);\n                slice_queue.total_length += remain_section.byteLength;\n\n                if (slice_queue.total_length === slice_queue.expected_length) {\n                    this.emitSectionSlices(slice_queue, misc);\n                } else {\n                    this.clearSlices(slice_queue, misc);\n                }\n            }\n\n            for (let i = 1 + pointer_field; i < data.byteLength; ){\n                let table_id = data[i + 0];\n                if (table_id === 0xFF) { break; }\n\n                let section_length = ((data[i + 1] & 0x0F) << 8) | data[i + 2];\n\n                this.section_slice_queues_[misc.pid] = new SliceQueue();\n                slice_queue = this.section_slice_queues_[misc.pid];\n\n                slice_queue.expected_length = section_length + 3;\n                slice_queue.file_position = misc.file_position;\n                slice_queue.random_access_indicator = misc.random_access_indicator;\n\n                let remain_section = new Uint8Array(buffer, offset + i, Math.min(length - i, slice_queue.expected_length - slice_queue.total_length));\n                slice_queue.slices.push(remain_section);\n                slice_queue.total_length += remain_section.byteLength;\n\n                if (slice_queue.total_length === slice_queue.expected_length) {\n                    this.emitSectionSlices(slice_queue, misc);\n                } else if (slice_queue.total_length >= slice_queue.expected_length) {\n                    this.clearSlices(slice_queue, misc);\n                }\n\n                i += remain_section.byteLength;\n            }\n        } else if (slice_queue != undefined && slice_queue.total_length !== 0) {\n            let remain_section = new Uint8Array(buffer, offset, Math.min(length, slice_queue.expected_length - slice_queue.total_length));\n            slice_queue.slices.push(remain_section);\n            slice_queue.total_length += remain_section.byteLength;\n\n            if (slice_queue.total_length === slice_queue.expected_length) {\n                this.emitSectionSlices(slice_queue, misc);\n            } else if (slice_queue.total_length >= slice_queue.expected_length) {\n                this.clearSlices(slice_queue, misc);\n            }\n        }\n    }\n\n    private handlePESSlice(buffer: ArrayBuffer, offset: number, length: number, misc: any): void {\n        let data = new Uint8Array(buffer, offset, length);\n\n        let packet_start_code_prefix = (data[0] << 16) | (data[1] << 8) | (data[2]);\n        let stream_id = data[3];\n        let PES_packet_length = (data[4] << 8) | data[5];\n\n        if (misc.payload_unit_start_indicator) {\n            if (packet_start_code_prefix !== 1) {\n                Log.e(this.TAG, `handlePESSlice: packet_start_code_prefix should be 1 but with value ${packet_start_code_prefix}`);\n                return;\n            }\n\n            // handle queued PES slices:\n            // Merge into a big Uint8Array then call parsePES()\n            let slice_queue = this.pes_slice_queues_[misc.pid];\n            if (slice_queue) {\n                if (slice_queue.expected_length === 0 || slice_queue.expected_length === slice_queue.total_length) {\n                    this.emitPESSlices(slice_queue, misc);\n                } else {\n                    this.clearSlices(slice_queue, misc);\n                }\n            }\n\n            // Make a new PES queue for new PES slices\n            this.pes_slice_queues_[misc.pid] = new SliceQueue();\n            this.pes_slice_queues_[misc.pid].file_position = misc.file_position;\n            this.pes_slice_queues_[misc.pid].random_access_indicator = misc.random_access_indicator;\n        }\n\n        if (this.pes_slice_queues_[misc.pid] == undefined) {\n            // ignore PES slices without [PES slice that has payload_unit_start_indicator]\n            return;\n        }\n\n        // push subsequent PES slices into pes_queue\n        let slice_queue = this.pes_slice_queues_[misc.pid];\n        slice_queue.slices.push(data);\n        if (misc.payload_unit_start_indicator) {\n            slice_queue.expected_length = PES_packet_length === 0 ? 0 : PES_packet_length + 6;\n        }\n        slice_queue.total_length += data.byteLength;\n\n        if (slice_queue.expected_length > 0 && slice_queue.expected_length === slice_queue.total_length) {\n            this.emitPESSlices(slice_queue, misc);\n        } else if (slice_queue.expected_length > 0 && slice_queue.expected_length < slice_queue.total_length) {\n            this.clearSlices(slice_queue, misc);\n        }\n    }\n\n    private emitSectionSlices(slice_queue: SliceQueue, misc: any): void {\n        let data = new Uint8Array(slice_queue.total_length);\n        for (let i = 0, offset = 0; i < slice_queue.slices.length; i++) {\n            let slice = slice_queue.slices[i];\n            data.set(slice, offset);\n            offset += slice.byteLength;\n        }\n        slice_queue.slices = [];\n        slice_queue.expected_length = -1;\n        slice_queue.total_length = 0;\n\n        let section_data = new SectionData();\n        section_data.pid = misc.pid;\n        section_data.data = data;\n        section_data.file_position = slice_queue.file_position;\n        section_data.random_access_indicator = slice_queue.random_access_indicator;\n        this.parseSection(section_data);\n    }\n\n    private emitPESSlices(slice_queue: SliceQueue, misc: any): void {\n        let data = new Uint8Array(slice_queue.total_length);\n        for (let i = 0, offset = 0; i < slice_queue.slices.length; i++) {\n            let slice = slice_queue.slices[i];\n            data.set(slice, offset);\n            offset += slice.byteLength;\n        }\n        slice_queue.slices = [];\n        slice_queue.expected_length = -1;\n        slice_queue.total_length = 0;\n\n        let pes_data = new PESData();\n        pes_data.pid = misc.pid;\n        pes_data.data = data;\n        pes_data.stream_type = misc.stream_type;\n        pes_data.file_position = slice_queue.file_position;\n        pes_data.random_access_indicator = slice_queue.random_access_indicator;\n        this.parsePES(pes_data);\n    }\n\n    private clearSlices(slice_queue: SliceQueue, misc: any): void {\n        slice_queue.slices = [];\n        slice_queue.expected_length = -1;\n        slice_queue.total_length = 0;\n    }\n\n    private parseSection(section_data: SectionData): void {\n        let data = section_data.data;\n        let pid = section_data.pid;\n\n        if (pid === 0x00) {\n            this.parsePAT(data);\n        } else if (pid === this.current_pmt_pid_) {\n            this.parsePMT(data);\n        } else if (this.pmt_ != undefined && this.pmt_.scte_35_pids[pid]) {\n            this.parseSCTE35(data);\n        }\n    }\n\n    private parsePES(pes_data: PESData): void {\n        let data = pes_data.data;\n        let packet_start_code_prefix = (data[0] << 16) | (data[1] << 8) | (data[2]);\n        let stream_id = data[3];\n        let PES_packet_length = (data[4] << 8) | data[5];\n\n        if (packet_start_code_prefix !== 1) {\n            Log.e(this.TAG, `parsePES: packet_start_code_prefix should be 1 but with value ${packet_start_code_prefix}`);\n            return;\n        }\n\n        if (stream_id !== 0xBC  // program_stream_map\n                && stream_id !== 0xBE  // padding_stream\n                && stream_id !== 0xBF  // private_stream_2\n                && stream_id !== 0xF0  // ECM\n                && stream_id !== 0xF1  // EMM\n                && stream_id !== 0xFF  // program_stream_directory\n                && stream_id !== 0xF2  // DSMCC\n                && stream_id !== 0xF8) {\n            let PES_scrambling_control = (data[6] & 0x30) >>> 4;\n            let PTS_DTS_flags = (data[7] & 0xC0) >>> 6;\n            let PES_header_data_length = data[8];\n\n            let pts: number | undefined;\n            let dts: number | undefined;\n\n            if (PTS_DTS_flags === 0x02 || PTS_DTS_flags === 0x03) {\n                pts = (data[9] & 0x0E) * 536870912 + // 1 << 29\n                      (data[10] & 0xFF) * 4194304 + // 1 << 22\n                      (data[11] & 0xFE) * 16384 + // 1 << 14\n                      (data[12] & 0xFF) * 128 + // 1 << 7\n                      (data[13] & 0xFE) / 2;\n\n                if (PTS_DTS_flags === 0x03) {\n                    dts = (data[14] & 0x0E) * 536870912 + // 1 << 29\n                          (data[15] & 0xFF) * 4194304 + // 1 << 22\n                          (data[16] & 0xFE) * 16384 + // 1 << 14\n                          (data[17] & 0xFF) * 128 + // 1 << 7\n                          (data[18] & 0xFE) / 2;\n                } else {\n                    dts = pts;\n                }\n            }\n\n            let payload_start_index = 6 + 3 + PES_header_data_length;\n            let payload_length: number;\n\n            if (PES_packet_length !== 0) {\n                if (PES_packet_length < 3 + PES_header_data_length) {\n                    Log.v(this.TAG, `Malformed PES: PES_packet_length < 3 + PES_header_data_length`);\n                    return;\n                }\n                payload_length = PES_packet_length - 3 - PES_header_data_length;\n            } else {  // PES_packet_length === 0\n                payload_length = data.byteLength - payload_start_index;\n            }\n\n            let payload = data.subarray(payload_start_index, payload_start_index + payload_length);\n\n            switch (pes_data.stream_type) {\n                case StreamType.kMPEG1Audio:\n                case StreamType.kMPEG2Audio:\n                    break;\n                case StreamType.kPESPrivateData:\n                    this.parsePESPrivateDataPayload(payload, pts, dts, pes_data.pid, stream_id);\n                    break;\n                case StreamType.kADTSAAC:\n                    this.parseAACPayload(payload, pts);\n                    break;\n                case StreamType.kID3:\n                    this.parseTimedID3MetadataPayload(payload, pts, dts, pes_data.pid, stream_id);\n                    break;\n                case StreamType.kH264:\n                    this.parseH264Payload(payload, pts, dts, pes_data.file_position, pes_data.random_access_indicator);\n                    break;\n                case StreamType.kH265:\n                    this.parseH265Payload(payload, pts, dts, pes_data.file_position, pes_data.random_access_indicator);\n                    break;\n                default:\n                    break;\n            }\n        } else if (stream_id === 0xBC  // program_stream_map\n                       || stream_id === 0xBF  // private_stream_2\n                       || stream_id === 0xF0  // ECM\n                       || stream_id === 0xF1  // EMM\n                       || stream_id === 0xFF  // program_stream_directory\n                       || stream_id === 0xF2  // DSMCC_stream\n                       || stream_id === 0xF8) {  // ITU-T Rec. H.222.1 type E stream\n            if (pes_data.stream_type === StreamType.kPESPrivateData) {\n                let payload_start_index = 6;\n                let payload_length: number;\n\n                if (PES_packet_length !== 0) {\n                    payload_length = PES_packet_length;\n                } else {  // PES_packet_length === 0\n                    payload_length = data.byteLength - payload_start_index;\n                }\n\n                let payload = data.subarray(payload_start_index, payload_start_index + payload_length);\n                this.parsePESPrivateDataPayload(payload, undefined, undefined, pes_data.pid, stream_id);\n            }\n        }\n    }\n\n    private parsePAT(data: Uint8Array): void {\n        let table_id = data[0];\n        if (table_id !== 0x00) {\n            Log.e(this.TAG, `parsePAT: table_id ${table_id} is not corresponded to PAT!`);\n            return;\n        }\n\n        let section_length = ((data[1] & 0x0F) << 8) | data[2];\n\n        let transport_stream_id = (data[3] << 8) | data[4];\n        let version_number = (data[5] & 0x3E) >>> 1;\n        let current_next_indicator = data[5] & 0x01;\n        let section_number = data[6];\n        let last_section_number = data[7];\n\n        let pat: PAT = null;\n\n        if (current_next_indicator === 1 && section_number === 0) {\n            pat = new PAT();\n            pat.version_number = version_number;\n        } else {\n            pat = this.pat_;\n            if (pat == undefined) {\n                return;\n            }\n        }\n\n        let program_start_index = 8;\n        let program_bytes = section_length - 5 - 4;  // section_length - (headers + crc)\n        let first_program_number = -1;\n        let first_pmt_pid = -1;\n\n        for (let i = program_start_index; i < program_start_index + program_bytes; i += 4) {\n            let program_number = (data[i] << 8) | data[i + 1];\n            let pid = ((data[i + 2] & 0x1F) << 8) | data[i + 3];\n\n            if (program_number === 0) {\n                // network_PID\n                pat.network_pid = pid;\n            } else {\n                // program_map_PID\n                pat.program_pmt_pid[program_number] = pid;\n\n                if (first_program_number === -1) {\n                    first_program_number = program_number;\n                }\n\n                if (first_pmt_pid === -1) {\n                    first_pmt_pid = pid;\n                }\n            }\n        }\n\n        // Currently we only deal with first appeared PMT pid\n        if (current_next_indicator === 1 && section_number === 0) {\n            if (this.pat_ == undefined) {\n                Log.v(this.TAG, `Parsed first PAT: ${JSON.stringify(pat)}`);\n            }\n            this.pat_ = pat;\n            this.current_program_ = first_program_number;\n            this.current_pmt_pid_ = first_pmt_pid;\n        }\n    }\n\n    private parsePMT(data: Uint8Array): void {\n        let table_id = data[0];\n        if (table_id !== 0x02) {\n            Log.e(this.TAG, `parsePMT: table_id ${table_id} is not corresponded to PMT!`);\n            return;\n        }\n\n        let section_length = ((data[1] & 0x0F) << 8) | data[2];\n\n        let program_number = (data[3] << 8) | data[4];\n        let version_number = (data[5] & 0x3E) >>> 1;\n        let current_next_indicator = data[5] & 0x01;\n        let section_number = data[6];\n        let last_section_number = data[7];\n\n        let pmt: PMT = null;\n\n        if (current_next_indicator === 1 && section_number === 0) {\n            pmt = new PMT();\n            pmt.program_number = program_number;\n            pmt.version_number = version_number;\n            this.program_pmt_map_[program_number] = pmt;\n        } else {\n            pmt = this.program_pmt_map_[program_number];\n            if (pmt == undefined) {\n                return;\n            }\n        }\n\n        let PCR_PID = ((data[8] & 0x1F) << 8) | data[9];\n        let program_info_length = ((data[10] & 0x0F) << 8) | data[11];\n\n        let info_start_index = 12 + program_info_length;\n        let info_bytes = section_length - 9 - program_info_length - 4;\n\n        for (let i = info_start_index; i < info_start_index + info_bytes; ) {\n            let stream_type = data[i] as StreamType;\n            let elementary_PID = ((data[i + 1] & 0x1F) << 8) | data[i + 2];\n            let ES_info_length = ((data[i + 3] & 0x0F) << 8) | data[i + 4];\n\n            pmt.pid_stream_type[elementary_PID] = stream_type;\n\n            if (stream_type === StreamType.kH264 && !pmt.common_pids.h264 && !pmt.common_pids.h265) {\n                pmt.common_pids.h264 = elementary_PID;\n            } else if (stream_type === StreamType.kH265 && !pmt.common_pids.h264 && !pmt.common_pids.h265) {\n                pmt.common_pids.h265 = elementary_PID;\n            } else if (stream_type === StreamType.kADTSAAC && !pmt.common_pids.adts_aac) {\n                pmt.common_pids.adts_aac = elementary_PID;\n            } else if (stream_type === StreamType.kPESPrivateData) {\n                pmt.pes_private_data_pids[elementary_PID] = true;\n                if (ES_info_length > 0) {\n                    // provide descriptor for PES private data via callback\n                    let descriptor = data.subarray(i + 5, i + 5 + ES_info_length);\n                    this.dispatchPESPrivateDataDescriptor(elementary_PID, stream_type, descriptor);\n                }\n            } else if (stream_type === StreamType.kID3) {\n                pmt.timed_id3_pids[elementary_PID] = true;\n            } else if (stream_type === StreamType.kSCTE35) {\n                pmt.scte_35_pids[elementary_PID] = true;\n            }\n\n            i += 5 + ES_info_length;\n        }\n\n        if (program_number === this.current_program_) {\n            if (this.pmt_ == undefined) {\n                Log.v(this.TAG, `Parsed first PMT: ${JSON.stringify(pmt)}`);\n            }\n            this.pmt_ = pmt;\n            if (pmt.common_pids.h264 || pmt.common_pids.h265) {\n                this.has_video_ = true;\n            }\n            if (pmt.common_pids.adts_aac) {\n                this.has_audio_ = true;\n            }\n        }\n    }\n\n    private parseSCTE35(data: Uint8Array): void {\n        const scte35 = readSCTE35(data);\n\n        if (scte35.pts != undefined) {\n            let pts_ms = Math.floor(scte35.pts / this.timescale_);\n            scte35.pts = pts_ms;\n        } else {\n            scte35.nearest_pts = this.aac_last_sample_pts_;\n        }\n\n        if (this.onSCTE35Metadata) {\n            this.onSCTE35Metadata(scte35);\n        }\n    }\n\n    private parseH264Payload(data: Uint8Array, pts: number, dts: number, file_position: number, random_access_indicator: number) {\n        let annexb_parser = new H264AnnexBParser(data);\n        let nalu_payload: H264NaluPayload = null;\n        let units: {type: H264NaluType, data: Uint8Array}[] = [];\n        let length = 0;\n        let keyframe = false;\n\n        while ((nalu_payload = annexb_parser.readNextNaluPayload()) != null) {\n            let nalu_avc1 = new H264NaluAVC1(nalu_payload);\n\n            if (nalu_avc1.type === H264NaluType.kSliceSPS) {\n                // Notice: parseSPS requires Nalu without startcode or length-header\n                let details = SPSParser.parseSPS(nalu_payload.data);\n                if (!this.video_init_segment_dispatched_) {\n                    this.video_metadata_.sps = nalu_avc1;\n                    this.video_metadata_.details = details;\n                } else if (this.detectVideoMetadataChange(nalu_avc1, details) === true) {\n                    Log.v(this.TAG, `H264: Critical h264 metadata has been changed, attempt to re-generate InitSegment`);\n                    this.video_metadata_changed_ = true;\n                    this.video_metadata_ = {vps: undefined, sps: nalu_avc1, pps: undefined, details: details};\n                }\n            } else if (nalu_avc1.type === H264NaluType.kSlicePPS) {\n                if (!this.video_init_segment_dispatched_ || this.video_metadata_changed_) {\n                    this.video_metadata_.pps = nalu_avc1;\n                    if (this.video_metadata_.sps && this.video_metadata_.pps) {\n                        if (this.video_metadata_changed_) {\n                            // flush stashed frames before changing codec metadata\n                            this.dispatchVideoMediaSegment();\n                        }\n                        // notify new codec metadata (maybe changed)\n                        this.dispatchVideoInitSegment();\n                    }\n                }\n            } else if (nalu_avc1.type === H264NaluType.kSliceIDR) {\n                keyframe = true;\n            } else if (nalu_avc1.type === H264NaluType.kSliceNonIDR && random_access_indicator === 1) {\n                // For open-gop stream, use random_access_indicator to identify keyframe\n                keyframe = true;\n            }\n\n            // Push samples to remuxer only if initialization metadata has been dispatched\n            if (this.video_init_segment_dispatched_) {\n                units.push(nalu_avc1);\n                length += nalu_avc1.data.byteLength;\n            }\n        }\n\n        let pts_ms = Math.floor(pts / this.timescale_);\n        let dts_ms = Math.floor(dts / this.timescale_);\n\n        if (units.length) {\n            let track = this.video_track_;\n            let avc_sample = {\n                units,\n                length,\n                isKeyframe: keyframe,\n                dts: dts_ms,\n                pts: pts_ms,\n                cts: pts_ms - dts_ms,\n                file_position\n            };\n            track.samples.push(avc_sample);\n            track.length += length;\n        }\n    }\n\n    private parseH265Payload(data: Uint8Array, pts: number, dts: number, file_position: number, random_access_indicator: number) {\n        let annexb_parser = new H265AnnexBParser(data);\n        let nalu_payload: H265NaluPayload = null;\n        let units: {type: H265NaluType, data: Uint8Array}[] = [];\n        let length = 0;\n        let keyframe = false;\n\n        while ((nalu_payload = annexb_parser.readNextNaluPayload()) != null) {\n            let nalu_hvc1 = new H265NaluHVC1(nalu_payload);\n\n            if (nalu_hvc1.type === H265NaluType.kSliceVPS) {\n                if (!this.video_init_segment_dispatched_) {\n                    let details = H265Parser.parseVPS(nalu_payload.data);\n                    this.video_metadata_.vps = nalu_hvc1;\n                    this.video_metadata_.details = {\n                        ... this.video_metadata_.details,\n                        ... details\n                    };\n                }\n            } else if (nalu_hvc1.type === H265NaluType.kSliceSPS) {\n                let details = H265Parser.parseSPS(nalu_payload.data);\n                if (!this.video_init_segment_dispatched_) {\n                    this.video_metadata_.sps = nalu_hvc1;\n                    this.video_metadata_.details = {\n                        ... this.video_metadata_.details,\n                        ... details\n                    };\n                } else if (this.detectVideoMetadataChange(nalu_hvc1, details) === true) {\n                    Log.v(this.TAG, `H265: Critical h265 metadata has been changed, attempt to re-generate InitSegment`);\n                    this.video_metadata_changed_ = true;\n                    this.video_metadata_ = { vps: undefined, sps: nalu_hvc1, pps: undefined, details: details};\n                }\n            } else if (nalu_hvc1.type === H265NaluType.kSlicePPS) {\n                if (!this.video_init_segment_dispatched_ || this.video_metadata_changed_) {\n                    let details = H265Parser.parsePPS(nalu_payload.data);\n                    this.video_metadata_.pps = nalu_hvc1;\n                    this.video_metadata_.details = {\n                        ... this.video_metadata_.details,\n                        ... details\n                    };\n\n                    if (this.video_metadata_.vps && this.video_metadata_.sps && this.video_metadata_.pps) {\n                        if (this.video_metadata_changed_) {\n                            // flush stashed frames before changing codec metadata\n                            this.dispatchVideoMediaSegment();\n                        }\n                        // notify new codec metadata (maybe changed)\n                        this.dispatchVideoInitSegment();\n                    }\n                }\n            } else if (nalu_hvc1.type === H265NaluType.kSliceIDR_W_RADL || nalu_hvc1.type === H265NaluType.kSliceIDR_N_LP) {\n                keyframe = true;\n            }\n\n            // Push samples to remuxer only if initialization metadata has been dispatched\n            if (this.video_init_segment_dispatched_) {\n                units.push(nalu_hvc1);\n                length += nalu_hvc1.data.byteLength;\n            }\n        }\n\n        let pts_ms = Math.floor(pts / this.timescale_);\n        let dts_ms = Math.floor(dts / this.timescale_);\n\n        if (units.length) {\n            let track = this.video_track_;\n            let hvc_sample = {\n                units,\n                length,\n                isKeyframe: keyframe,\n                dts: dts_ms,\n                pts: pts_ms,\n                cts: pts_ms - dts_ms,\n                file_position\n            };\n            track.samples.push(hvc_sample);\n            track.length += length;\n        }\n    }\n\n    private detectVideoMetadataChange(new_sps: H264NaluAVC1 | H265NaluHVC1, new_details: any): boolean {\n        if (new_details.codec_mimetype !== this.video_metadata_.details.codec_mimetype) {\n            Log.v(this.TAG, `Video: Codec mimeType changed from ` +\n                            `${this.video_metadata_.details.codec_mimetype} to ${new_details.codec_mimetype}`);\n            return true;\n        }\n\n        if (new_details.codec_size.width !== this.video_metadata_.details.codec_size.width\n            || new_details.codec_size.height !== this.video_metadata_.details.codec_size.height) {\n            let old_size = this.video_metadata_.details.codec_size;\n            let new_size = new_details.codec_size;\n            Log.v(this.TAG, `Video: Coded Resolution changed from ` +\n                            `${old_size.width}x${old_size.height} to ${new_size.width}x${new_size.height}`);\n            return true;\n        }\n\n        if (new_details.present_size.width !== this.video_metadata_.details.present_size.width) {\n            Log.v(this.TAG, `Video: Present resolution width changed from ` +\n                            `${this.video_metadata_.details.present_size.width} to ${new_details.present_size.width}`);\n            return true;\n        }\n\n        return false;\n    }\n\n    private isInitSegmentDispatched(): boolean {\n        if (this.has_video_ && this.has_audio_) {  // both video & audio\n            return this.video_init_segment_dispatched_ && this.audio_init_segment_dispatched_;\n        }\n        if (this.has_video_ && !this.has_audio_) {  // video only\n            return this.video_init_segment_dispatched_;\n        }\n        if (!this.has_video_ && this.has_audio_) {  // audio only\n            return this.audio_init_segment_dispatched_;\n        }\n        return false;\n    }\n\n    private dispatchVideoInitSegment() {\n        let details = this.video_metadata_.details;\n        let meta: any = {};\n\n        meta.type = 'video';\n        meta.id = this.video_track_.id;\n        meta.timescale = 1000;\n        meta.duration = this.duration_;\n\n        meta.codecWidth = details.codec_size.width;\n        meta.codecHeight = details.codec_size.height;\n        meta.presentWidth = details.present_size.width;\n        meta.presentHeight = details.present_size.height;\n\n        meta.profile = details.profile_string;\n        meta.level = details.level_string;\n        meta.bitDepth = details.bit_depth;\n        meta.chromaFormat = details.chroma_format;\n        meta.sarRatio = details.sar_ratio;\n        meta.frameRate = details.frame_rate;\n\n        let fps_den = meta.frameRate.fps_den;\n        let fps_num = meta.frameRate.fps_num;\n        meta.refSampleDuration = 1000 * (fps_den / fps_num);\n\n        meta.codec = details.codec_mimetype;\n\n        if (this.video_metadata_.vps) {\n            let vps_without_header = this.video_metadata_.vps.data.subarray(4);\n            let sps_without_header = this.video_metadata_.sps.data.subarray(4);\n            let pps_without_header = this.video_metadata_.pps.data.subarray(4);\n            let hvcc = new HEVCDecoderConfigurationRecord(vps_without_header, sps_without_header, pps_without_header, details);\n            meta.hvcc = hvcc.getData();\n\n            if (this.video_init_segment_dispatched_ == false) {\n                Log.v(this.TAG, `Generated first HEVCDecoderConfigurationRecord for mimeType: ${meta.codec}`);\n            }\n        } else {\n            let sps_without_header = this.video_metadata_.sps.data.subarray(4);\n            let pps_without_header = this.video_metadata_.pps.data.subarray(4);\n            let avcc = new AVCDecoderConfigurationRecord(sps_without_header, pps_without_header, details);\n            meta.avcc = avcc.getData();\n\n            if (this.video_init_segment_dispatched_ == false) {\n                Log.v(this.TAG, `Generated first AVCDecoderConfigurationRecord for mimeType: ${meta.codec}`);\n            }\n        }\n        this.onTrackMetadata('video', meta);\n        this.video_init_segment_dispatched_ = true;\n        this.video_metadata_changed_ = false;\n\n        // notify new MediaInfo\n        let mi = this.media_info_;\n        mi.hasVideo = true;\n        mi.width = meta.codecWidth;\n        mi.height = meta.codecHeight;\n        mi.fps = meta.frameRate.fps;\n        mi.profile = meta.profile;\n        mi.level = meta.level;\n        mi.refFrames = details.ref_frames;\n        mi.chromaFormat = details.chroma_format_string;\n        mi.sarNum = meta.sarRatio.width;\n        mi.sarDen = meta.sarRatio.height;\n        mi.videoCodec = meta.codec;\n\n        if (mi.hasAudio && mi.audioCodec) {\n            mi.mimeType = `video/mp2t; codecs=\"${mi.videoCodec},${mi.audioCodec}\"`;\n        } else {\n            mi.mimeType = `video/mp2t; codecs=\"${mi.videoCodec}\"`;\n        }\n\n        if (mi.isComplete()) {\n            this.onMediaInfo(mi);\n        }\n    }\n\n    private dispatchVideoMediaSegment() {\n        if (this.isInitSegmentDispatched()) {\n            if (this.video_track_.length) {\n                this.onDataAvailable(null, this.video_track_);\n            }\n        }\n    }\n\n    private dispatchAudioMediaSegment() {\n        if (this.isInitSegmentDispatched()) {\n            if (this.audio_track_.length) {\n                this.onDataAvailable(this.audio_track_, null);\n            }\n        }\n    }\n\n    private dispatchAudioVideoMediaSegment() {\n        if (this.isInitSegmentDispatched()) {\n            if (this.audio_track_.length || this.video_track_.length) {\n                this.onDataAvailable(this.audio_track_, this.video_track_);\n            }\n        }\n    }\n\n    private parseAACPayload(data: Uint8Array, pts: number) {\n        if (this.has_video_ && !this.video_init_segment_dispatched_) {\n            // If first video IDR frame hasn't been detected,\n            // Wait for first IDR frame and video init segment being dispatched\n            return;\n        }\n\n        if (this.aac_last_incomplete_data_) {\n            let buf = new Uint8Array(data.byteLength + this.aac_last_incomplete_data_.byteLength);\n            buf.set(this.aac_last_incomplete_data_, 0);\n            buf.set(data, this.aac_last_incomplete_data_.byteLength);\n            data = buf;\n        }\n\n        let ref_sample_duration: number;\n        let base_pts_ms: number;\n\n        if (pts != undefined) {\n            base_pts_ms = pts / this.timescale_;\n        } else if (this.aac_last_sample_pts_ != undefined) {\n            ref_sample_duration = 1024 / this.audio_metadata_.sampling_frequency * 1000;\n            base_pts_ms = this.aac_last_sample_pts_ + ref_sample_duration;\n        } else {\n            Log.w(this.TAG, `AAC: Unknown pts`);\n            return;\n        }\n\n        if (this.aac_last_incomplete_data_ && this.aac_last_sample_pts_) {\n            ref_sample_duration = 1024 / this.audio_metadata_.sampling_frequency * 1000;\n            let new_pts_ms = this.aac_last_sample_pts_ + ref_sample_duration;\n\n            if (Math.abs(new_pts_ms - base_pts_ms) > 1) {\n                Log.w(this.TAG, `AAC: Detected pts overlapped, ` +\n                                `expected: ${new_pts_ms}ms, PES pts: ${base_pts_ms}ms`);\n                base_pts_ms = new_pts_ms;\n            }\n        }\n\n        let adts_parser = new AACADTSParser(data);\n        let aac_frame: AACFrame = null;\n        let sample_pts_ms = base_pts_ms;\n        let last_sample_pts_ms: number;\n\n        while ((aac_frame = adts_parser.readNextAACFrame()) != null) {\n            ref_sample_duration = 1024 / aac_frame.sampling_frequency * 1000;\n\n            if (this.audio_init_segment_dispatched_ == false) {\n                this.audio_metadata_.audio_object_type = aac_frame.audio_object_type;\n                this.audio_metadata_.sampling_freq_index = aac_frame.sampling_freq_index;\n                this.audio_metadata_.sampling_frequency = aac_frame.sampling_frequency;\n                this.audio_metadata_.channel_config = aac_frame.channel_config;\n                this.dispatchAudioInitSegment(aac_frame);\n            } else if (this.detectAudioMetadataChange(aac_frame)) {\n                // flush stashed frames before notify new AudioSpecificConfig\n                this.dispatchAudioMediaSegment();\n                // notify new AAC AudioSpecificConfig\n                this.dispatchAudioInitSegment(aac_frame);\n            }\n\n            last_sample_pts_ms = sample_pts_ms;\n            let sample_pts_ms_int = Math.floor(sample_pts_ms);\n\n            let aac_sample = {\n                unit: aac_frame.data,\n                length: aac_frame.data.byteLength,\n                pts: sample_pts_ms_int,\n                dts: sample_pts_ms_int\n            };\n            this.audio_track_.samples.push(aac_sample);\n            this.audio_track_.length += aac_frame.data.byteLength;\n\n            sample_pts_ms += ref_sample_duration;\n        }\n\n        if (adts_parser.hasIncompleteData()) {\n            this.aac_last_incomplete_data_ = adts_parser.getIncompleteData();\n        }\n\n        if (last_sample_pts_ms) {\n            this.aac_last_sample_pts_ = last_sample_pts_ms;\n        }\n    }\n\n    private detectAudioMetadataChange(frame: AACFrame): boolean {\n        if (frame.audio_object_type !== this.audio_metadata_.audio_object_type) {\n            Log.v(this.TAG, `AAC: AudioObjectType changed from ` +\n                            `${this.audio_metadata_.audio_object_type} to ${frame.audio_object_type}`);\n            return true;\n        }\n\n        if (frame.sampling_freq_index !== this.audio_metadata_.sampling_freq_index) {\n            Log.v(this.TAG, `AAC: SamplingFrequencyIndex changed from ` +\n                            `${this.audio_metadata_.sampling_freq_index} to ${frame.sampling_freq_index}`);\n            return true;\n        }\n\n        if (frame.channel_config !== this.audio_metadata_.channel_config) {\n            Log.v(this.TAG, `AAC: Channel configuration changed from ` +\n                            `${this.audio_metadata_.channel_config} to ${frame.channel_config}`);\n            return true;\n        }\n\n        return false;\n    }\n\n    private dispatchAudioInitSegment(aac_frame: AACFrame) {\n        let audio_specific_config = new AudioSpecificConfig(aac_frame);\n        let meta: any = {};\n\n        meta.type = 'audio';\n        meta.id = this.audio_track_.id;\n        meta.timescale = 1000;\n        meta.duration = this.duration_;\n\n        meta.audioSampleRate = audio_specific_config.sampling_rate;\n        meta.channelCount = audio_specific_config.channel_count;\n        meta.codec = audio_specific_config.codec_mimetype;\n        meta.originalCodec = audio_specific_config.original_codec_mimetype;\n        meta.config = audio_specific_config.config;\n\n        meta.refSampleDuration = 1024 / meta.audioSampleRate * meta.timescale;\n\n        if (this.audio_init_segment_dispatched_ == false) {\n            Log.v(this.TAG, `Generated first AudioSpecificConfig for mimeType: ${meta.codec}`);\n        }\n\n        this.onTrackMetadata('audio', meta);\n        this.audio_init_segment_dispatched_ = true;\n        this.video_metadata_changed_ = false;\n\n        // notify new MediaInfo\n        let mi = this.media_info_;\n        mi.hasAudio = true;\n        mi.audioCodec = meta.originalCodec;\n        mi.audioSampleRate = meta.audioSampleRate;\n        mi.audioChannelCount = meta.channelCount;\n\n        if (mi.hasVideo && mi.videoCodec) {\n            mi.mimeType = `video/mp2t; codecs=\"${mi.videoCodec},${mi.audioCodec}\"`;\n        } else {\n            mi.mimeType = `video/mp2t; codecs=\"${mi.audioCodec}\"`;\n        }\n\n        if (mi.isComplete()) {\n            this.onMediaInfo(mi);\n        }\n    }\n\n    private dispatchPESPrivateDataDescriptor(pid: number, stream_type: number, descriptor: Uint8Array) {\n        let desc = new PESPrivateDataDescriptor();\n        desc.pid = pid;\n        desc.stream_type = stream_type;\n        desc.descriptor = descriptor;\n\n        if (this.onPESPrivateDataDescriptor) {\n            this.onPESPrivateDataDescriptor(desc);\n        }\n    }\n\n    private parsePESPrivateDataPayload(data: Uint8Array, pts: number, dts: number, pid: number, stream_id: number) {\n        let private_data = new PESPrivateData();\n\n        private_data.pid = pid;\n        private_data.stream_id = stream_id;\n        private_data.len = data.byteLength;\n        private_data.data = data;\n\n        if (pts != undefined) {\n            let pts_ms = Math.floor(pts / this.timescale_);\n            private_data.pts = pts_ms;\n        } else {\n            private_data.nearest_pts = this.aac_last_sample_pts_;\n        }\n\n        if (dts != undefined) {\n            let dts_ms = Math.floor(dts / this.timescale_);\n            private_data.dts = dts_ms;\n        }\n\n        if (this.onPESPrivateData) {\n            this.onPESPrivateData(private_data);\n        }\n    }\n\n    private parseTimedID3MetadataPayload(data: Uint8Array, pts: number, dts: number, pid: number, stream_id: number) {\n        let timed_id3_metadata = new PESPrivateData();\n\n        timed_id3_metadata.pid = pid;\n        timed_id3_metadata.stream_id = stream_id;\n        timed_id3_metadata.len = data.byteLength;\n        timed_id3_metadata.data = data;\n\n        if (pts != undefined) {\n            let pts_ms = Math.floor(pts / this.timescale_);\n            timed_id3_metadata.pts = pts_ms;\n        } \n\n        if (dts != undefined) {\n            let dts_ms = Math.floor(dts / this.timescale_);\n            timed_id3_metadata.dts = dts_ms;\n        }\n\n        if (this.onTimedID3Metadata) {\n            this.onTimedID3Metadata(timed_id3_metadata);\n        }\n    }\n}\n\nexport default TSDemuxer;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * This file is derived from dailymotion's hls.js library (hls.js/src/remux/mp4-generator.js)\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//  MP4 boxes generator for ISO BMFF (ISO Base Media File Format, defined in ISO/IEC 14496-12)\nclass MP4 {\n\n    static init() {\n        MP4.types = {\n            avc1: [], avcC: [], btrt: [], dinf: [],\n            dref: [], esds: [], ftyp: [], hdlr: [],\n            hvc1: [], hvcC: [],\n            mdat: [], mdhd: [], mdia: [], mfhd: [],\n            minf: [], moof: [], moov: [], mp4a: [],\n            mvex: [], mvhd: [], sdtp: [], stbl: [],\n            stco: [], stsc: [], stsd: [], stsz: [],\n            stts: [], tfdt: [], tfhd: [], traf: [],\n            trak: [], trun: [], trex: [], tkhd: [],\n            vmhd: [], smhd: [], '.mp3': []\n        };\n\n        for (let name in MP4.types) {\n            if (MP4.types.hasOwnProperty(name)) {\n                MP4.types[name] = [\n                    name.charCodeAt(0),\n                    name.charCodeAt(1),\n                    name.charCodeAt(2),\n                    name.charCodeAt(3)\n                ];\n            }\n        }\n\n        let constants = MP4.constants = {};\n\n        constants.FTYP = new Uint8Array([\n            0x69, 0x73, 0x6F, 0x6D,  // major_brand: isom\n            0x0,  0x0,  0x0,  0x1,   // minor_version: 0x01\n            0x69, 0x73, 0x6F, 0x6D,  // isom\n            0x61, 0x76, 0x63, 0x31   // avc1\n        ]);\n\n        constants.STSD_PREFIX = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x01   // entry_count\n        ]);\n\n        constants.STTS = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00   // entry_count\n        ]);\n\n        constants.STSC = constants.STCO = constants.STTS;\n\n        constants.STSZ = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // sample_size\n            0x00, 0x00, 0x00, 0x00   // sample_count\n        ]);\n\n        constants.HDLR_VIDEO = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\n            0x76, 0x69, 0x64, 0x65,  // handler_type: 'vide'\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x56, 0x69, 0x64, 0x65,\n            0x6F, 0x48, 0x61, 0x6E,\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: VideoHandler\n        ]);\n\n        constants.HDLR_AUDIO = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\n            0x73, 0x6F, 0x75, 0x6E,  // handler_type: 'soun'\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x53, 0x6F, 0x75, 0x6E,\n            0x64, 0x48, 0x61, 0x6E,\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: SoundHandler\n        ]);\n\n        constants.DREF = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x01,  // entry_count\n            0x00, 0x00, 0x00, 0x0C,  // entry_size\n            0x75, 0x72, 0x6C, 0x20,  // type 'url '\n            0x00, 0x00, 0x00, 0x01   // version(0) + flags\n        ]);\n\n        // Sound media header\n        constants.SMHD = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00   // balance(2) + reserved(2)\n        ]);\n\n        // video media header\n        constants.VMHD = new Uint8Array([\n            0x00, 0x00, 0x00, 0x01,  // version(0) + flags\n            0x00, 0x00,              // graphicsmode: 2 bytes\n            0x00, 0x00, 0x00, 0x00,  // opcolor: 3 * 2 bytes\n            0x00, 0x00\n        ]);\n    }\n\n    // Generate a box\n    static box(type) {\n        let size = 8;\n        let result = null;\n        let datas = Array.prototype.slice.call(arguments, 1);\n        let arrayCount = datas.length;\n\n        for (let i = 0; i < arrayCount; i++) {\n            size += datas[i].byteLength;\n        }\n\n        result = new Uint8Array(size);\n        result[0] = (size >>> 24) & 0xFF;  // size\n        result[1] = (size >>> 16) & 0xFF;\n        result[2] = (size >>>  8) & 0xFF;\n        result[3] = (size) & 0xFF;\n\n        result.set(type, 4);  // type\n\n        let offset = 8;\n        for (let i = 0; i < arrayCount; i++) {  // data body\n            result.set(datas[i], offset);\n            offset += datas[i].byteLength;\n        }\n\n        return result;\n    }\n\n    // emit ftyp & moov\n    static generateInitSegment(meta) {\n        let ftyp = MP4.box(MP4.types.ftyp, MP4.constants.FTYP);\n        let moov = MP4.moov(meta);\n\n        let result = new Uint8Array(ftyp.byteLength + moov.byteLength);\n        result.set(ftyp, 0);\n        result.set(moov, ftyp.byteLength);\n        return result;\n    }\n\n    // Movie metadata box\n    static moov(meta) {\n        let mvhd = MP4.mvhd(meta.timescale, meta.duration);\n        let trak = MP4.trak(meta);\n        let mvex = MP4.mvex(meta);\n        return MP4.box(MP4.types.moov, mvhd, trak, mvex);\n    }\n\n    // Movie header box\n    static mvhd(timescale, duration) {\n        return MP4.box(MP4.types.mvhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\n            (timescale >>> 16) & 0xFF,\n            (timescale >>>  8) & 0xFF,\n            (timescale) & 0xFF,\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x00, 0x01, 0x00, 0x00,  // Preferred rate: 1.0\n            0x01, 0x00, 0x00, 0x00,  // PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 + 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\n            0x00, 0x00, 0x00, 0x00,  // ----begin pre_defined 6 * 4 bytes----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,  // ----end pre_defined 6 * 4 bytes----\n            0xFF, 0xFF, 0xFF, 0xFF   // next_track_ID\n        ]));\n    }\n\n    // Track box\n    static trak(meta) {\n        return MP4.box(MP4.types.trak, MP4.tkhd(meta), MP4.mdia(meta));\n    }\n\n    // Track header box\n    static tkhd(meta) {\n        let trackId = meta.id, duration = meta.duration;\n        let width = meta.presentWidth, height = meta.presentHeight;\n\n        return MP4.box(MP4.types.tkhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x07,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (trackId >>> 24) & 0xFF,  // track_ID: 4 bytes\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF,\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\n            (duration >>> 24) & 0xFF, // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,  // layer(2bytes) + alternate_group(2bytes)\n            0x00, 0x00, 0x00, 0x00,  // volume(2bytes) + reserved(2bytes)\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\n            (width >>> 8) & 0xFF,    // width and height\n            (width) & 0xFF,\n            0x00, 0x00,\n            (height >>> 8) & 0xFF,\n            (height) & 0xFF,\n            0x00, 0x00\n        ]));\n    }\n\n    // Media Box\n    static mdia(meta) {\n        return MP4.box(MP4.types.mdia, MP4.mdhd(meta), MP4.hdlr(meta), MP4.minf(meta));\n    }\n\n    // Media header box\n    static mdhd(meta) {\n        let timescale = meta.timescale;\n        let duration = meta.duration;\n        return MP4.box(MP4.types.mdhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\n            (timescale >>> 16) & 0xFF,\n            (timescale >>>  8) & 0xFF,\n            (timescale) & 0xFF,\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x55, 0xC4,             // language: und (undetermined)\n            0x00, 0x00              // pre_defined = 0\n        ]));\n    }\n\n    // Media handler reference box\n    static hdlr(meta) {\n        let data = null;\n        if (meta.type === 'audio') {\n            data = MP4.constants.HDLR_AUDIO;\n        } else {\n            data = MP4.constants.HDLR_VIDEO;\n        }\n        return MP4.box(MP4.types.hdlr, data);\n    }\n\n    // Media infomation box\n    static minf(meta) {\n        let xmhd = null;\n        if (meta.type === 'audio') {\n            xmhd = MP4.box(MP4.types.smhd, MP4.constants.SMHD);\n        } else {\n            xmhd = MP4.box(MP4.types.vmhd, MP4.constants.VMHD);\n        }\n        return MP4.box(MP4.types.minf, xmhd, MP4.dinf(), MP4.stbl(meta));\n    }\n\n    // Data infomation box\n    static dinf() {\n        let result = MP4.box(MP4.types.dinf,\n            MP4.box(MP4.types.dref, MP4.constants.DREF)\n        );\n        return result;\n    }\n\n    // Sample table box\n    static stbl(meta) {\n        let result = MP4.box(MP4.types.stbl,  // type: stbl\n            MP4.stsd(meta),  // Sample Description Table\n            MP4.box(MP4.types.stts, MP4.constants.STTS),  // Time-To-Sample\n            MP4.box(MP4.types.stsc, MP4.constants.STSC),  // Sample-To-Chunk\n            MP4.box(MP4.types.stsz, MP4.constants.STSZ),  // Sample size\n            MP4.box(MP4.types.stco, MP4.constants.STCO)   // Chunk offset\n        ); \n        return result; \n    }\n\n    // Sample description box\n    static stsd(meta) {\n        if (meta.type === 'audio') {\n            if (meta.codec === 'mp3') {\n                return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp3(meta));\n            }\n            // else: aac -> mp4a\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp4a(meta));\n        } else if (meta.type === 'video' && meta.codec.startsWith('hvc1')) {\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.hvc1(meta));\n        } else {\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.avc1(meta));\n        }\n    }\n\n    static mp3(meta) {\n        let channelCount = meta.channelCount;\n        let sampleRate = meta.audioSampleRate;\n\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, channelCount,      // channelCount(2)\n            0x00, 0x10,              // sampleSize(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            (sampleRate >>> 8) & 0xFF,  // Audio sample rate\n            (sampleRate) & 0xFF,\n            0x00, 0x00\n        ]);\n\n        return MP4.box(MP4.types['.mp3'], data);\n    }\n\n    static mp4a(meta) {\n        let channelCount = meta.channelCount;\n        let sampleRate = meta.audioSampleRate;\n\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, channelCount,      // channelCount(2)\n            0x00, 0x10,              // sampleSize(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            (sampleRate >>> 8) & 0xFF,  // Audio sample rate\n            (sampleRate) & 0xFF,\n            0x00, 0x00\n        ]);\n\n        return MP4.box(MP4.types.mp4a, data, MP4.esds(meta));\n    }\n\n    static esds(meta) {\n        let config = meta.config || [];\n        let configSize = config.length;\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version 0 + flags\n\n            0x03,                    // descriptor_type\n            0x17 + configSize,       // length3\n            0x00, 0x01,              // es_id\n            0x00,                    // stream_priority\n\n            0x04,                    // descriptor_type\n            0x0F + configSize,       // length\n            0x40,                    // codec: mpeg4_audio\n            0x15,                    // stream_type: Audio\n            0x00, 0x00, 0x00,        // buffer_size\n            0x00, 0x00, 0x00, 0x00,  // maxBitrate\n            0x00, 0x00, 0x00, 0x00,  // avgBitrate\n\n            0x05                     // descriptor_type\n        ].concat([\n            configSize\n        ]).concat(\n            config\n        ).concat([\n            0x06, 0x01, 0x02         // GASpecificConfig\n        ]));\n        return MP4.box(MP4.types.esds, data);\n    }\n\n    static avc1(meta) {\n        let avcc = meta.avcc;\n        let width = meta.codecWidth, height = meta.codecHeight;\n\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined(2) + reserved(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            (width >>> 8) & 0xFF,    // width: 2 bytes\n            (width) & 0xFF,\n            (height >>> 8) & 0xFF,   // height: 2 bytes\n            (height) & 0xFF,\n            0x00, 0x48, 0x00, 0x00,  // horizresolution: 4 bytes\n            0x00, 0x48, 0x00, 0x00,  // vertresolution: 4 bytes\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\n            0x00, 0x01,              // frame_count\n            0x0A,                    // strlen\n            0x78, 0x71, 0x71, 0x2F,  // compressorname: 32 bytes\n            0x66, 0x6C, 0x76, 0x2E,\n            0x6A, 0x73, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00,\n            0x00, 0x18,              // depth\n            0xFF, 0xFF               // pre_defined = -1\n        ]);\n        return MP4.box(MP4.types.avc1, data, MP4.box(MP4.types.avcC, avcc));\n    }\n\n    static hvc1(meta) {\n        let hvcc = meta.hvcc;\n        let width = meta.codecWidth, height = meta.codecHeight;\n\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined(2) + reserved(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            (width >>> 8) & 0xFF,    // width: 2 bytes\n            (width) & 0xFF,\n            (height >>> 8) & 0xFF,   // height: 2 bytes\n            (height) & 0xFF,\n            0x00, 0x48, 0x00, 0x00,  // horizresolution: 4 bytes\n            0x00, 0x48, 0x00, 0x00,  // vertresolution: 4 bytes\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\n            0x00, 0x01,              // frame_count\n            0x0A,                    // strlen\n            0x78, 0x71, 0x71, 0x2F,  // compressorname: 32 bytes\n            0x66, 0x6C, 0x76, 0x2E,\n            0x6A, 0x73, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00,\n            0x00, 0x18,              // depth\n            0xFF, 0xFF               // pre_defined = -1\n        ]);\n        return MP4.box(MP4.types.hvc1, data, MP4.box(MP4.types.hvcC, hvcc));\n    }\n\n    // Movie Extends box\n    static mvex(meta) {\n        return MP4.box(MP4.types.mvex, MP4.trex(meta));\n    }\n\n    // Track Extends box\n    static trex(meta) {\n        let trackId = meta.id;\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            (trackId >>> 24) & 0xFF, // track_ID\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF,\n            0x00, 0x00, 0x00, 0x01,  // default_sample_description_index\n            0x00, 0x00, 0x00, 0x00,  // default_sample_duration\n            0x00, 0x00, 0x00, 0x00,  // default_sample_size\n            0x00, 0x01, 0x00, 0x01   // default_sample_flags\n        ]);\n        return MP4.box(MP4.types.trex, data);\n    }\n\n    // Movie fragment box\n    static moof(track, baseMediaDecodeTime) {\n        return MP4.box(MP4.types.moof, MP4.mfhd(track.sequenceNumber), MP4.traf(track, baseMediaDecodeTime));\n    }\n\n    static mfhd(sequenceNumber) {\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,\n            (sequenceNumber >>> 24) & 0xFF,  // sequence_number: int32\n            (sequenceNumber >>> 16) & 0xFF,\n            (sequenceNumber >>>  8) & 0xFF,\n            (sequenceNumber) & 0xFF\n        ]);\n        return MP4.box(MP4.types.mfhd, data);\n    }\n\n    // Track fragment box\n    static traf(track, baseMediaDecodeTime) {\n        let trackId = track.id;\n\n        // Track fragment header box\n        let tfhd = MP4.box(MP4.types.tfhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\n            (trackId >>> 24) & 0xFF, // track_ID\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF\n        ]));\n        // Track Fragment Decode Time\n        let tfdt = MP4.box(MP4.types.tfdt, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\n            (baseMediaDecodeTime >>> 24) & 0xFF,  // baseMediaDecodeTime: int32\n            (baseMediaDecodeTime >>> 16) & 0xFF,\n            (baseMediaDecodeTime >>>  8) & 0xFF,\n            (baseMediaDecodeTime) & 0xFF\n        ]));\n        let sdtp = MP4.sdtp(track);\n        let trun = MP4.trun(track, sdtp.byteLength + 16 + 16 + 8 + 16 + 8 + 8);\n\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun, sdtp);\n    }\n\n    // Sample Dependency Type box\n    static sdtp(track) {\n        let samples = track.samples || [];\n        let sampleCount = samples.length;\n        let data = new Uint8Array(4 + sampleCount);\n        // 0~4 bytes: version(0) & flags\n        for (let i = 0; i < sampleCount; i++) {\n            let flags = samples[i].flags;\n            data[i + 4] = (flags.isLeading << 6)    // is_leading: 2 (bit)\n                        | (flags.dependsOn << 4)    // sample_depends_on\n                        | (flags.isDependedOn << 2) // sample_is_depended_on\n                        | (flags.hasRedundancy);    // sample_has_redundancy\n        }\n        return MP4.box(MP4.types.sdtp, data);\n    }\n\n    // Track fragment run box\n    static trun(track, offset) {\n        let samples = track.samples || [];\n        let sampleCount = samples.length;\n        let dataSize = 12 + 16 * sampleCount;\n        let data = new Uint8Array(dataSize);\n        offset += 8 + dataSize;\n\n        data.set([\n            0x00, 0x00, 0x0F, 0x01,      // version(0) & flags\n            (sampleCount >>> 24) & 0xFF, // sample_count\n            (sampleCount >>> 16) & 0xFF,\n            (sampleCount >>>  8) & 0xFF,\n            (sampleCount) & 0xFF,\n            (offset >>> 24) & 0xFF,      // data_offset\n            (offset >>> 16) & 0xFF,\n            (offset >>>  8) & 0xFF,\n            (offset) & 0xFF\n        ], 0);\n\n        for (let i = 0; i < sampleCount; i++) {\n            let duration = samples[i].duration;\n            let size = samples[i].size;\n            let flags = samples[i].flags;\n            let cts = samples[i].cts;\n            data.set([\n                (duration >>> 24) & 0xFF,  // sample_duration\n                (duration >>> 16) & 0xFF,\n                (duration >>>  8) & 0xFF,\n                (duration) & 0xFF,\n                (size >>> 24) & 0xFF,      // sample_size\n                (size >>> 16) & 0xFF,\n                (size >>>  8) & 0xFF,\n                (size) & 0xFF,\n                (flags.isLeading << 2) | flags.dependsOn,  // sample_flags\n                (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n                0x00, 0x00,                // sample_degradation_priority\n                (cts >>> 24) & 0xFF,       // sample_composition_time_offset\n                (cts >>> 16) & 0xFF,\n                (cts >>>  8) & 0xFF,\n                (cts) & 0xFF\n            ], 12 + 16 * i);\n        }\n        return MP4.box(MP4.types.trun, data);\n    }\n\n    static mdat(data) {\n        return MP4.box(MP4.types.mdat, data);\n    }\n\n}\n\nMP4.init();\n\nexport default MP4;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * This file is modified from dailymotion's hls.js library (hls.js/src/helper/aac.js)\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass AAC {\n\n    static getSilentFrame(codec, channelCount) {\n        if (codec === 'mp4a.40.2') {\n            // handle LC-AAC\n            if (channelCount === 1) {\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n            } else if (channelCount === 2) {\n                return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n            } else if (channelCount === 3) {\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n            } else if (channelCount === 4) {\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n            } else if (channelCount === 5) {\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n            } else if (channelCount === 6) {\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n            }\n        } else {\n            // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n            if (channelCount === 1) {\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n            } else if (channelCount === 2) {\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n            } else if (channelCount === 3) {\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n            }\n        }\n        return null;\n    }\n\n}\n\nexport default AAC;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport MP4 from './mp4-generator.js';\nimport AAC from './aac-silent.js';\nimport Browser from '../utils/browser.js';\nimport { SampleInfo, MediaSegmentInfo, MediaSegmentInfoList } from '../core/media-segment-info.js';\nimport { IllegalStateException } from '../utils/exception.js';\n\n\n// Fragmented mp4 remuxer\nclass MP4Remuxer {\n\n    constructor(config) {\n        this.TAG = 'MP4Remuxer';\n\n        this._config = config;\n        this._isLive = (config.isLive === true) ? true : false;\n\n        this._dtsBase = -1;\n        this._dtsBaseInited = false;\n        this._audioDtsBase = Infinity;\n        this._videoDtsBase = Infinity;\n        this._audioNextDts = undefined;\n        this._videoNextDts = undefined;\n        this._audioStashedLastSample = null;\n        this._videoStashedLastSample = null;\n\n        this._audioMeta = null;\n        this._videoMeta = null;\n\n        this._audioSegmentInfoList = new MediaSegmentInfoList('audio');\n        this._videoSegmentInfoList = new MediaSegmentInfoList('video');\n\n        this._onInitSegment = null;\n        this._onMediaSegment = null;\n\n        // Workaround for chrome < 50: Always force first sample as a Random Access Point in media segment\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\n        this._forceFirstIDR = (Browser.chrome &&\n                              (Browser.version.major < 50 ||\n                              (Browser.version.major === 50 && Browser.version.build < 2661))) ? true : false;\n\n        // Workaround for IE11/Edge: Fill silent aac frame after keyframe-seeking\n        // Make audio beginDts equals with video beginDts, in order to fix seek freeze\n        this._fillSilentAfterSeek = (Browser.msedge || Browser.msie);\n\n        // While only FireFox supports 'audio/mp4, codecs=\"mp3\"', use 'audio/mpeg' for chrome, safari, ...\n        this._mp3UseMpegAudio = !Browser.firefox;\n\n        this._fillAudioTimestampGap = this._config.fixAudioTimestampGap;\n    }\n\n    destroy() {\n        this._dtsBase = -1;\n        this._dtsBaseInited = false;\n        this._audioMeta = null;\n        this._videoMeta = null;\n        this._audioSegmentInfoList.clear();\n        this._audioSegmentInfoList = null;\n        this._videoSegmentInfoList.clear();\n        this._videoSegmentInfoList = null;\n        this._onInitSegment = null;\n        this._onMediaSegment = null;\n    }\n\n    bindDataSource(producer) {\n        producer.onDataAvailable = this.remux.bind(this);\n        producer.onTrackMetadata = this._onTrackMetadataReceived.bind(this);\n        return this;\n    }\n\n    /* prototype: function onInitSegment(type: string, initSegment: ArrayBuffer): void\n       InitSegment: {\n           type: string,\n           data: ArrayBuffer,\n           codec: string,\n           container: string\n       }\n    */\n    get onInitSegment() {\n        return this._onInitSegment;\n    }\n\n    set onInitSegment(callback) {\n        this._onInitSegment = callback;\n    }\n\n    /* prototype: function onMediaSegment(type: string, mediaSegment: MediaSegment): void\n       MediaSegment: {\n           type: string,\n           data: ArrayBuffer,\n           sampleCount: int32\n           info: MediaSegmentInfo\n       }\n    */\n    get onMediaSegment() {\n        return this._onMediaSegment;\n    }\n\n    set onMediaSegment(callback) {\n        this._onMediaSegment = callback;\n    }\n\n    insertDiscontinuity() {\n        this._audioNextDts = this._videoNextDts = undefined;\n    }\n\n    seek(originalDts) {\n        this._audioStashedLastSample = null;\n        this._videoStashedLastSample = null;\n        this._videoSegmentInfoList.clear();\n        this._audioSegmentInfoList.clear();\n    }\n\n    remux(audioTrack, videoTrack) {\n        if (!this._onMediaSegment) {\n            throw new IllegalStateException('MP4Remuxer: onMediaSegment callback must be specificed!');\n        }\n        if (!this._dtsBaseInited) {\n            this._calculateDtsBase(audioTrack, videoTrack);\n        }\n        if (videoTrack) {\n            this._remuxVideo(videoTrack);\n        }\n        if (audioTrack) {\n            this._remuxAudio(audioTrack);\n        }\n    }\n\n    _onTrackMetadataReceived(type, metadata) {\n        let metabox = null;\n\n        let container = 'mp4';\n        let codec = metadata.codec;\n\n        if (type === 'audio') {\n            this._audioMeta = metadata;\n            if (metadata.codec === 'mp3' && this._mp3UseMpegAudio) {\n                // 'audio/mpeg' for MP3 audio track\n                container = 'mpeg';\n                codec = '';\n                metabox = new Uint8Array();\n            } else {\n                // 'audio/mp4, codecs=\"codec\"'\n                metabox = MP4.generateInitSegment(metadata);\n            }\n        } else if (type === 'video') {\n            this._videoMeta = metadata;\n            metabox = MP4.generateInitSegment(metadata);\n        } else {\n            return;\n        }\n\n        // dispatch metabox (Initialization Segment)\n        if (!this._onInitSegment) {\n            throw new IllegalStateException('MP4Remuxer: onInitSegment callback must be specified!');\n        }\n        this._onInitSegment(type, {\n            type: type,\n            data: metabox.buffer,\n            codec: codec,\n            container: `${type}/${container}`,\n            mediaDuration: metadata.duration  // in timescale 1000 (milliseconds)\n        });\n    }\n\n    _calculateDtsBase(audioTrack, videoTrack) {\n        if (this._dtsBaseInited) {\n            return;\n        }\n\n        if (audioTrack && audioTrack.samples && audioTrack.samples.length) {\n            this._audioDtsBase = audioTrack.samples[0].dts;\n        }\n        if (videoTrack && videoTrack.samples && videoTrack.samples.length) {\n            this._videoDtsBase = videoTrack.samples[0].dts;\n        }\n\n        this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase);\n        this._dtsBaseInited = true;\n    }\n\n    getTimestampBase() {\n        if (!this._dtsBaseInited) {\n            return undefined;\n        }\n        return this._dtsBase;\n    }\n\n    flushStashedSamples() {\n        let videoSample = this._videoStashedLastSample;\n        let audioSample = this._audioStashedLastSample;\n\n        let videoTrack = {\n            type: 'video',\n            id: 1,\n            sequenceNumber: 0,\n            samples: [],\n            length: 0\n        };\n\n        if (videoSample != null) {\n            videoTrack.samples.push(videoSample);\n            videoTrack.length = videoSample.length;\n        }\n\n        let audioTrack = {\n            type: 'audio',\n            id: 2,\n            sequenceNumber: 0,\n            samples: [],\n            length: 0\n        };\n\n        if (audioSample != null) {\n            audioTrack.samples.push(audioSample);\n            audioTrack.length = audioSample.length;\n        }\n\n        this._videoStashedLastSample = null;\n        this._audioStashedLastSample = null;\n\n        this._remuxVideo(videoTrack, true);\n        this._remuxAudio(audioTrack, true);\n    }\n\n    _remuxAudio(audioTrack, force) {\n        if (this._audioMeta == null) {\n            return;\n        }\n\n        let track = audioTrack;\n        let samples = track.samples;\n        let dtsCorrection = undefined;\n        let firstDts = -1, lastDts = -1, lastPts = -1;\n        let refSampleDuration = this._audioMeta.refSampleDuration;\n\n        let mpegRawTrack = this._audioMeta.codec === 'mp3' && this._mp3UseMpegAudio;\n        let firstSegmentAfterSeek = this._dtsBaseInited && this._audioNextDts === undefined;\n\n        let insertPrefixSilentFrame = false;\n\n        if (!samples || samples.length === 0) {\n            return;\n        }\n        if (samples.length === 1 && !force) {\n            // If [sample count in current batch] === 1 && (force != true)\n            // Ignore and keep in demuxer's queue\n            return;\n        }  // else if (force === true) do remux\n\n        let offset = 0;\n        let mdatbox = null;\n        let mdatBytes = 0;\n\n        // calculate initial mdat size\n        if (mpegRawTrack) {\n            // for raw mpeg buffer\n            offset = 0;\n            mdatBytes = track.length;\n        } else {\n            // for fmp4 mdat box\n            offset = 8;  // size + type\n            mdatBytes = 8 + track.length;\n        }\n\n\n        let lastSample = null;\n\n        // Pop the lastSample and waiting for stash\n        if (samples.length > 1) {\n            lastSample = samples.pop();\n            mdatBytes -= lastSample.length;\n        }\n\n        // Insert [stashed lastSample in the previous batch] to the front\n        if (this._audioStashedLastSample != null) {\n            let sample = this._audioStashedLastSample;\n            this._audioStashedLastSample = null;\n            samples.unshift(sample);\n            mdatBytes += sample.length;\n        }\n\n        // Stash the lastSample of current batch, waiting for next batch\n        if (lastSample != null) {\n            this._audioStashedLastSample = lastSample;\n        }\n\n\n        let firstSampleOriginalDts = samples[0].dts - this._dtsBase;\n\n        // calculate dtsCorrection\n        if (this._audioNextDts) {\n            dtsCorrection = firstSampleOriginalDts - this._audioNextDts;\n        } else {  // this._audioNextDts == undefined\n            if (this._audioSegmentInfoList.isEmpty()) {\n                dtsCorrection = 0;\n                if (this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty()) {\n                    if (this._audioMeta.originalCodec !== 'mp3') {\n                        insertPrefixSilentFrame = true;\n                    }\n                }\n            } else {\n                let lastSample = this._audioSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);\n                if (lastSample != null) {\n                    let distance = (firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration));\n                    if (distance <= 3) {\n                        distance = 0;\n                    }\n                    let expectedDts = lastSample.dts + lastSample.duration + distance;\n                    dtsCorrection = firstSampleOriginalDts - expectedDts;\n                } else { // lastSample == null, cannot found\n                    dtsCorrection = 0;\n                }\n            }\n        }\n\n        if (insertPrefixSilentFrame) {\n            // align audio segment beginDts to match with current video segment's beginDts\n            let firstSampleDts = firstSampleOriginalDts - dtsCorrection;\n            let videoSegment = this._videoSegmentInfoList.getLastSegmentBefore(firstSampleOriginalDts);\n            if (videoSegment != null && videoSegment.beginDts < firstSampleDts) {\n                let silentUnit = AAC.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);\n                if (silentUnit) {\n                    let dts = videoSegment.beginDts;\n                    let silentFrameDuration = firstSampleDts - videoSegment.beginDts;\n                    Log.v(this.TAG, `InsertPrefixSilentAudio: dts: ${dts}, duration: ${silentFrameDuration}`);\n                    samples.unshift({ unit: silentUnit, dts: dts, pts: dts });\n                    mdatBytes += silentUnit.byteLength;\n                }  // silentUnit == null: Cannot generate, skip\n            } else {\n                insertPrefixSilentFrame = false;\n            }\n        }\n\n        let mp4Samples = [];\n\n        // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples\n        for (let i = 0; i < samples.length; i++) {\n            let sample = samples[i];\n            let unit = sample.unit;\n            let originalDts = sample.dts - this._dtsBase;\n            let dts = originalDts;\n            let needFillSilentFrames = false;\n            let silentFrames = null;\n            let sampleDuration = 0;\n\n            if (originalDts < -0.001) {\n                continue; //pass the first sample with the invalid dts\n            }\n\n            if (this._audioMeta.codec !== 'mp3') {\n                // for AAC codec, we need to keep dts increase based on refSampleDuration\n                let curRefDts = originalDts;\n                const maxAudioFramesDrift = 3;\n                if (this._audioNextDts) {\n                    curRefDts = this._audioNextDts;\n                }\n\n                dtsCorrection = originalDts - curRefDts;\n                if (dtsCorrection <= -maxAudioFramesDrift * refSampleDuration) {\n                    // If we're overlapping by more than maxAudioFramesDrift number of frame, drop this sample\n                    Log.w(this.TAG, `Dropping 1 audio frame (originalDts: ${originalDts} ms ,curRefDts: ${curRefDts} ms)  due to dtsCorrection: ${dtsCorrection} ms overlap.`);\n                    continue;\n                }\n                else if (dtsCorrection >= maxAudioFramesDrift * refSampleDuration && this._fillAudioTimestampGap && !Browser.safari) {\n                    // Silent frame generation, if large timestamp gap detected && config.fixAudioTimestampGap\n                    needFillSilentFrames = true;\n                    // We need to insert silent frames to fill timestamp gap\n                    let frameCount = Math.floor(dtsCorrection / refSampleDuration);\n                    Log.w(this.TAG, 'Large audio timestamp gap detected, may cause AV sync to drift. ' +\n                        'Silent frames will be generated to avoid unsync.\\n' +\n                        `originalDts: ${originalDts} ms, curRefDts: ${curRefDts} ms, ` +\n                        `dtsCorrection: ${Math.round(dtsCorrection)} ms, generate: ${frameCount} frames`);\n\n\n                    dts = Math.floor(curRefDts);\n                    sampleDuration = Math.floor(curRefDts + refSampleDuration) - dts;\n\n                    let silentUnit = AAC.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);\n                    if (silentUnit == null) {\n                        Log.w(this.TAG, 'Unable to generate silent frame for ' +\n                            `${this._audioMeta.originalCodec} with ${this._audioMeta.channelCount} channels, repeat last frame`);\n                        // Repeat last frame\n                        silentUnit = unit;\n                    }\n                    silentFrames = [];\n\n                    for (let j = 0; j < frameCount; j++) {\n                        curRefDts = curRefDts + refSampleDuration;\n                        let intDts = Math.floor(curRefDts);  // change to integer\n                        let intDuration = Math.floor(curRefDts + refSampleDuration) - intDts;\n                        let frame = {\n                            dts: intDts,\n                            pts: intDts,\n                            cts: 0,\n                            unit: silentUnit,\n                            size: silentUnit.byteLength,\n                            duration: intDuration,  // wait for next sample\n                            originalDts: originalDts,\n                            flags: {\n                                isLeading: 0,\n                                dependsOn: 1,\n                                isDependedOn: 0,\n                                hasRedundancy: 0\n                            }\n                        };\n                        silentFrames.push(frame);\n                        mdatBytes += frame.size;;\n\n                    }\n\n                    this._audioNextDts = curRefDts + refSampleDuration;\n\n                } else {\n\n                    dts = Math.floor(curRefDts);\n                    sampleDuration = Math.floor(curRefDts + refSampleDuration) - dts;\n                    this._audioNextDts = curRefDts + refSampleDuration;\n\n                }\n            } else {\n                // keep the original dts calculate algorithm for mp3\n                dts = originalDts - dtsCorrection;\n\n\n                if (i !== samples.length - 1) {\n                    let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;\n                    sampleDuration = nextDts - dts;\n                } else {  // the last sample\n                    if (lastSample != null) {  // use stashed sample's dts to calculate sample duration\n                        let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;\n                        sampleDuration = nextDts - dts;\n                    } else if (mp4Samples.length >= 1) {  // use second last sample duration\n                        sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n                    } else {  // the only one sample, use reference sample duration\n                        sampleDuration = Math.floor(refSampleDuration);\n                    }\n                }\n                this._audioNextDts = dts + sampleDuration;\n            }\n\n            if (firstDts === -1) {\n                firstDts = dts;\n            }\n            mp4Samples.push({\n                dts: dts,\n                pts: dts,\n                cts: 0,\n                unit: sample.unit,\n                size: sample.unit.byteLength,\n                duration: sampleDuration,\n                originalDts: originalDts,\n                flags: {\n                    isLeading: 0,\n                    dependsOn: 1,\n                    isDependedOn: 0,\n                    hasRedundancy: 0\n                }\n            });\n\n            if (needFillSilentFrames) {\n                // Silent frames should be inserted after wrong-duration frame\n                mp4Samples.push.apply(mp4Samples, silentFrames);\n            }\n        }\n\n        if (mp4Samples.length === 0) {\n            //no samples need to remux\n            track.samples = [];\n            track.length = 0;\n            return;\n        }\n\n        // allocate mdatbox\n        if (mpegRawTrack) {\n            // allocate for raw mpeg buffer\n            mdatbox = new Uint8Array(mdatBytes);\n        } else {\n            // allocate for fmp4 mdat box\n            mdatbox = new Uint8Array(mdatBytes);\n            // size field\n            mdatbox[0] = (mdatBytes >>> 24) & 0xFF;\n            mdatbox[1] = (mdatBytes >>> 16) & 0xFF;\n            mdatbox[2] = (mdatBytes >>>  8) & 0xFF;\n            mdatbox[3] = (mdatBytes) & 0xFF;\n            // type field (fourCC)\n            mdatbox.set(MP4.types.mdat, 4);\n        }\n\n        // Write samples into mdatbox\n        for (let i = 0; i < mp4Samples.length; i++) {\n            let unit = mp4Samples[i].unit;\n            mdatbox.set(unit, offset);\n            offset += unit.byteLength;\n        }\n\n        let latest = mp4Samples[mp4Samples.length - 1];\n        lastDts = latest.dts + latest.duration;\n        //this._audioNextDts = lastDts;\n\n        // fill media segment info & add to info list\n        let info = new MediaSegmentInfo();\n        info.beginDts = firstDts;\n        info.endDts = lastDts;\n        info.beginPts = firstDts;\n        info.endPts = lastDts;\n        info.originalBeginDts = mp4Samples[0].originalDts;\n        info.originalEndDts = latest.originalDts + latest.duration;\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\n                                          mp4Samples[0].pts,\n                                          mp4Samples[0].duration,\n                                          mp4Samples[0].originalDts,\n                                          false);\n        info.lastSample = new SampleInfo(latest.dts,\n                                         latest.pts,\n                                         latest.duration,\n                                         latest.originalDts,\n                                         false);\n        if (!this._isLive) {\n            this._audioSegmentInfoList.append(info);\n        }\n\n        track.samples = mp4Samples;\n        track.sequenceNumber++;\n\n        let moofbox = null;\n\n        if (mpegRawTrack) {\n            // Generate empty buffer, because useless for raw mpeg\n            moofbox = new Uint8Array();\n        } else {\n            // Generate moof for fmp4 segment\n            moofbox = MP4.moof(track, firstDts);\n        }\n\n        track.samples = [];\n        track.length = 0;\n\n        let segment = {\n            type: 'audio',\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\n            sampleCount: mp4Samples.length,\n            info: info\n        };\n\n        if (mpegRawTrack && firstSegmentAfterSeek) {\n            // For MPEG audio stream in MSE, if seeking occurred, before appending new buffer\n            // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.\n            segment.timestampOffset = firstDts;\n        }\n\n        this._onMediaSegment('audio', segment);\n    }\n\n    _remuxVideo(videoTrack, force) {\n        if (this._videoMeta == null) {\n            return;\n        }\n\n        let track = videoTrack;\n        let samples = track.samples;\n        let dtsCorrection = undefined;\n        let firstDts = -1, lastDts = -1;\n        let firstPts = -1, lastPts = -1;\n\n        if (!samples || samples.length === 0) {\n            return;\n        }\n        if (samples.length === 1 && !force) {\n            // If [sample count in current batch] === 1 && (force != true)\n            // Ignore and keep in demuxer's queue\n            return;\n        }  // else if (force === true) do remux\n\n        let offset = 8;\n        let mdatbox = null;\n        let mdatBytes = 8 + videoTrack.length;\n\n\n        let lastSample = null;\n\n        // Pop the lastSample and waiting for stash\n        if (samples.length > 1) {\n            lastSample = samples.pop();\n            mdatBytes -= lastSample.length;\n        }\n\n        // Insert [stashed lastSample in the previous batch] to the front\n        if (this._videoStashedLastSample != null) {\n            let sample = this._videoStashedLastSample;\n            this._videoStashedLastSample = null;\n            samples.unshift(sample);\n            mdatBytes += sample.length;\n        }\n\n        // Stash the lastSample of current batch, waiting for next batch\n        if (lastSample != null) {\n            this._videoStashedLastSample = lastSample;\n        }\n\n\n        let firstSampleOriginalDts = samples[0].dts - this._dtsBase;\n\n        // calculate dtsCorrection\n        if (this._videoNextDts) {\n            dtsCorrection = firstSampleOriginalDts - this._videoNextDts;\n        } else {  // this._videoNextDts == undefined\n            if (this._videoSegmentInfoList.isEmpty()) {\n                dtsCorrection = 0;\n            } else {\n                let lastSample = this._videoSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);\n                if (lastSample != null) {\n                    let distance = (firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration));\n                    if (distance <= 3) {\n                        distance = 0;\n                    }\n                    let expectedDts = lastSample.dts + lastSample.duration + distance;\n                    dtsCorrection = firstSampleOriginalDts - expectedDts;\n                } else { // lastSample == null, cannot found\n                    dtsCorrection = 0;\n                }\n            }\n        }\n\n        let info = new MediaSegmentInfo();\n        let mp4Samples = [];\n\n        // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples\n        for (let i = 0; i < samples.length; i++) {\n            let sample = samples[i];\n            let originalDts = sample.dts - this._dtsBase;\n            let isKeyframe = sample.isKeyframe;\n            let dts = originalDts - dtsCorrection;\n            let cts = sample.cts;\n            let pts = dts + cts;\n\n            if (firstDts === -1) {\n                firstDts = dts;\n                firstPts = pts;\n            }\n\n            let sampleDuration = 0;\n\n            if (i !== samples.length - 1) {\n                let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;\n                sampleDuration = nextDts - dts;\n            } else {  // the last sample\n                if (lastSample != null) {  // use stashed sample's dts to calculate sample duration\n                    let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;\n                    sampleDuration = nextDts - dts;\n                } else if (mp4Samples.length >= 1) {  // use second last sample duration\n                    sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n                } else {  // the only one sample, use reference sample duration\n                    sampleDuration = Math.floor(this._videoMeta.refSampleDuration);\n                }\n            }\n\n            if (isKeyframe) {\n                let syncPoint = new SampleInfo(dts, pts, sampleDuration, sample.dts, true);\n                syncPoint.fileposition = sample.fileposition;\n                info.appendSyncPoint(syncPoint);\n            }\n\n            mp4Samples.push({\n                dts: dts,\n                pts: pts,\n                cts: cts,\n                units: sample.units,\n                size: sample.length,\n                isKeyframe: isKeyframe,\n                duration: sampleDuration,\n                originalDts: originalDts,\n                flags: {\n                    isLeading: 0,\n                    dependsOn: isKeyframe ? 2 : 1,\n                    isDependedOn: isKeyframe ? 1 : 0,\n                    hasRedundancy: 0,\n                    isNonSync: isKeyframe ? 0 : 1\n                }\n            });\n        }\n\n        // allocate mdatbox\n        mdatbox = new Uint8Array(mdatBytes);\n        mdatbox[0] = (mdatBytes >>> 24) & 0xFF;\n        mdatbox[1] = (mdatBytes >>> 16) & 0xFF;\n        mdatbox[2] = (mdatBytes >>>  8) & 0xFF;\n        mdatbox[3] = (mdatBytes) & 0xFF;\n        mdatbox.set(MP4.types.mdat, 4);\n\n        // Write samples into mdatbox\n        for (let i = 0; i < mp4Samples.length; i++) {\n            let units = mp4Samples[i].units;\n            while (units.length) {\n                let unit = units.shift();\n                let data = unit.data;\n                mdatbox.set(data, offset);\n                offset += data.byteLength;\n            }\n        }\n\n        let latest = mp4Samples[mp4Samples.length - 1];\n        lastDts = latest.dts + latest.duration;\n        lastPts = latest.pts + latest.duration;\n        this._videoNextDts = lastDts;\n\n        // fill media segment info & add to info list\n        info.beginDts = firstDts;\n        info.endDts = lastDts;\n        info.beginPts = firstPts;\n        info.endPts = lastPts;\n        info.originalBeginDts = mp4Samples[0].originalDts;\n        info.originalEndDts = latest.originalDts + latest.duration;\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\n                                          mp4Samples[0].pts,\n                                          mp4Samples[0].duration,\n                                          mp4Samples[0].originalDts,\n                                          mp4Samples[0].isKeyframe);\n        info.lastSample = new SampleInfo(latest.dts,\n                                         latest.pts,\n                                         latest.duration,\n                                         latest.originalDts,\n                                         latest.isKeyframe);\n        if (!this._isLive) {\n            this._videoSegmentInfoList.append(info);\n        }\n\n        track.samples = mp4Samples;\n        track.sequenceNumber++;\n\n        // workaround for chrome < 50: force first sample as a random access point\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\n        if (this._forceFirstIDR) {\n            let flags = mp4Samples[0].flags;\n            flags.dependsOn = 2;\n            flags.isNonSync = 0;\n        }\n\n        let moofbox = MP4.moof(track, firstDts);\n        track.samples = [];\n        track.length = 0;\n\n        this._onMediaSegment('video', {\n            type: 'video',\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\n            sampleCount: mp4Samples.length,\n            info: info\n        });\n    }\n\n    _mergeBoxes(moof, mdat) {\n        let result = new Uint8Array(moof.byteLength + mdat.byteLength);\n        result.set(moof, 0);\n        result.set(mdat, moof.byteLength);\n        return result;\n    }\n\n}\n\nexport default MP4Remuxer;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport MediaInfo from './media-info.js';\nimport FLVDemuxer from '../demux/flv-demuxer.js';\nimport TSDemuxer from '../demux/ts-demuxer';\nimport MP4Remuxer from '../remux/mp4-remuxer.js';\nimport DemuxErrors from '../demux/demux-errors.js';\nimport IOController from '../io/io-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\nimport {LoaderStatus, LoaderErrors} from '../io/loader.js';\n\n// Transmuxing (IO, Demuxing, Remuxing) controller, with multipart support\nclass TransmuxingController {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = 'TransmuxingController';\n        this._emitter = new EventEmitter();\n\n        this._config = config;\n\n        // treat single part media as multipart media, which has only one segment\n        if (!mediaDataSource.segments) {\n            mediaDataSource.segments = [{\n                duration: mediaDataSource.duration,\n                filesize: mediaDataSource.filesize,\n                url: mediaDataSource.url\n            }];\n        }\n\n        // fill in default IO params if not exists\n        if (typeof mediaDataSource.cors !== 'boolean') {\n            mediaDataSource.cors = true;\n        }\n        if (typeof mediaDataSource.withCredentials !== 'boolean') {\n            mediaDataSource.withCredentials = false;\n        }\n\n        this._mediaDataSource = mediaDataSource;\n        this._currentSegmentIndex = 0;\n        let totalDuration = 0;\n\n        this._mediaDataSource.segments.forEach((segment) => {\n            // timestampBase for each segment, and calculate total duration\n            segment.timestampBase = totalDuration;\n            totalDuration += segment.duration;\n            // params needed by IOController\n            segment.cors = mediaDataSource.cors;\n            segment.withCredentials = mediaDataSource.withCredentials;\n            // referrer policy control, if exist\n            if (config.referrerPolicy) {\n                segment.referrerPolicy = config.referrerPolicy;\n            }\n        });\n\n        if (!isNaN(totalDuration) && this._mediaDataSource.duration !== totalDuration) {\n            this._mediaDataSource.duration = totalDuration;\n        }\n\n        this._mediaInfo = null;\n        this._demuxer = null;\n        this._remuxer = null;\n        this._ioctl = null;\n\n        this._pendingSeekTime = null;\n        this._pendingResolveSeekPoint = null;\n\n        this._statisticsReporter = null;\n    }\n\n    destroy() {\n        this._mediaInfo = null;\n        this._mediaDataSource = null;\n\n        if (this._statisticsReporter) {\n            this._disableStatisticsReporter();\n        }\n        if (this._ioctl) {\n            this._ioctl.destroy();\n            this._ioctl = null;\n        }\n        if (this._demuxer) {\n            this._demuxer.destroy();\n            this._demuxer = null;\n        }\n        if (this._remuxer) {\n            this._remuxer.destroy();\n            this._remuxer = null;\n        }\n\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    start() {\n        this._loadSegment(0);\n        this._enableStatisticsReporter();\n    }\n\n    _loadSegment(segmentIndex, optionalFrom) {\n        this._currentSegmentIndex = segmentIndex;\n        let dataSource = this._mediaDataSource.segments[segmentIndex];\n\n        let ioctl = this._ioctl = new IOController(dataSource, this._config, segmentIndex);\n        ioctl.onError = this._onIOException.bind(this);\n        ioctl.onSeeked = this._onIOSeeked.bind(this);\n        ioctl.onComplete = this._onIOComplete.bind(this);\n        ioctl.onRedirect = this._onIORedirect.bind(this);\n        ioctl.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this);\n\n        if (optionalFrom) {\n            this._demuxer.bindDataSource(this._ioctl);\n        } else {\n            ioctl.onDataArrival = this._onInitChunkArrival.bind(this);\n        }\n\n        ioctl.open(optionalFrom);\n    }\n\n    stop() {\n        this._internalAbort();\n        this._disableStatisticsReporter();\n    }\n\n    _internalAbort() {\n        if (this._ioctl) {\n            this._ioctl.destroy();\n            this._ioctl = null;\n        }\n    }\n\n    pause() {  // take a rest\n        if (this._ioctl && this._ioctl.isWorking()) {\n            this._ioctl.pause();\n            this._disableStatisticsReporter();\n        }\n    }\n\n    resume() {\n        if (this._ioctl && this._ioctl.isPaused()) {\n            this._ioctl.resume();\n            this._enableStatisticsReporter();\n        }\n    }\n\n    seek(milliseconds) {\n        if (this._mediaInfo == null || !this._mediaInfo.isSeekable()) {\n            return;\n        }\n\n        let targetSegmentIndex = this._searchSegmentIndexContains(milliseconds);\n\n        if (targetSegmentIndex === this._currentSegmentIndex) {\n            // intra-segment seeking\n            let segmentInfo = this._mediaInfo.segments[targetSegmentIndex];\n\n            if (segmentInfo == undefined) {\n                // current segment loading started, but mediainfo hasn't received yet\n                // wait for the metadata loaded, then seek to expected position\n                this._pendingSeekTime = milliseconds;\n            } else {\n                let keyframe = segmentInfo.getNearestKeyframe(milliseconds);\n                this._remuxer.seek(keyframe.milliseconds);\n                this._ioctl.seek(keyframe.fileposition);\n                // Will be resolved in _onRemuxerMediaSegmentArrival()\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\n            }\n        } else {\n            // cross-segment seeking\n            let targetSegmentInfo = this._mediaInfo.segments[targetSegmentIndex];\n\n            if (targetSegmentInfo == undefined) {\n                // target segment hasn't been loaded. We need metadata then seek to expected time\n                this._pendingSeekTime = milliseconds;\n                this._internalAbort();\n                this._remuxer.seek();\n                this._remuxer.insertDiscontinuity();\n                this._loadSegment(targetSegmentIndex);\n                // Here we wait for the metadata loaded, then seek to expected position\n            } else {\n                // We have target segment's metadata, direct seek to target position\n                let keyframe = targetSegmentInfo.getNearestKeyframe(milliseconds);\n                this._internalAbort();\n                this._remuxer.seek(milliseconds);\n                this._remuxer.insertDiscontinuity();\n                this._demuxer.resetMediaInfo();\n                this._demuxer.timestampBase = this._mediaDataSource.segments[targetSegmentIndex].timestampBase;\n                this._loadSegment(targetSegmentIndex, keyframe.fileposition);\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\n                this._reportSegmentMediaInfo(targetSegmentIndex);\n            }\n        }\n\n        this._enableStatisticsReporter();\n    }\n\n    _searchSegmentIndexContains(milliseconds) {\n        let segments = this._mediaDataSource.segments;\n        let idx = segments.length - 1;\n\n        for (let i = 0; i < segments.length; i++) {\n            if (milliseconds < segments[i].timestampBase) {\n                idx = i - 1;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    _onInitChunkArrival(data, byteStart) {\n        let probeData = null;\n        let consumed = 0;\n\n        if (byteStart > 0) {\n            // IOController seeked immediately after opened, byteStart > 0 callback may received\n            this._demuxer.bindDataSource(this._ioctl);\n            this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase;\n\n            consumed = this._demuxer.parseChunks(data, byteStart);\n        } else if ((probeData = TSDemuxer.probe(data)).match) {\n            let demuxer = this._demuxer = new TSDemuxer(probeData, this._config);\n\n            if (!this._remuxer) {\n                this._remuxer = new MP4Remuxer(this._config);\n            }\n\n            demuxer.onError = this._onDemuxException.bind(this);\n            demuxer.onMediaInfo = this._onMediaInfo.bind(this);\n            demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this);\n            demuxer.onTimedID3Metadata = this._onTimedID3Metadata.bind(this);\n            demuxer.onSCTE35Metadata = this._onSCTE35Metadata.bind(this);\n            demuxer.onPESPrivateDataDescriptor = this._onPESPrivateDataDescriptor.bind(this);\n            demuxer.onPESPrivateData = this._onPESPrivateData.bind(this);\n\n            this._remuxer.bindDataSource(this._demuxer);\n            this._demuxer.bindDataSource(this._ioctl);\n\n            this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this);\n            this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this);\n\n            consumed = this._demuxer.parseChunks(data, byteStart);\n        } else if ((probeData = FLVDemuxer.probe(data)).match) {\n            // Always create new FLVDemuxer\n            this._demuxer = new FLVDemuxer(probeData, this._config);\n\n            if (!this._remuxer) {\n                this._remuxer = new MP4Remuxer(this._config);\n            }\n\n            let mds = this._mediaDataSource;\n            if (mds.duration != undefined && !isNaN(mds.duration)) {\n                this._demuxer.overridedDuration = mds.duration;\n            }\n            if (typeof mds.hasAudio === 'boolean') {\n                this._demuxer.overridedHasAudio = mds.hasAudio;\n            }\n            if (typeof mds.hasVideo === 'boolean') {\n                this._demuxer.overridedHasVideo = mds.hasVideo;\n            }\n\n            this._demuxer.timestampBase = mds.segments[this._currentSegmentIndex].timestampBase;\n\n            this._demuxer.onError = this._onDemuxException.bind(this);\n            this._demuxer.onMediaInfo = this._onMediaInfo.bind(this);\n            this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this);\n            this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this);\n\n            this._remuxer.bindDataSource(this._demuxer\n                         .bindDataSource(this._ioctl\n            ));\n\n            this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this);\n            this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this);\n\n            consumed = this._demuxer.parseChunks(data, byteStart);\n        } else {\n            probeData = null;\n            Log.e(this.TAG, 'Non MPEG-TS/FLV, Unsupported media type!');\n            Promise.resolve().then(() => {\n                this._internalAbort();\n            });\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, DemuxErrors.FORMAT_UNSUPPORTED, 'Non MPEG-TS/FLV, Unsupported media type!');\n\n            consumed = 0;\n        }\n\n        return consumed;\n    }\n\n    _onMediaInfo(mediaInfo) {\n        if (this._mediaInfo == null) {\n            // Store first segment's mediainfo as global mediaInfo\n            this._mediaInfo = Object.assign({}, mediaInfo);\n            this._mediaInfo.keyframesIndex = null;\n            this._mediaInfo.segments = [];\n            this._mediaInfo.segmentCount = this._mediaDataSource.segments.length;\n            Object.setPrototypeOf(this._mediaInfo, MediaInfo.prototype);\n        }\n\n        let segmentInfo = Object.assign({}, mediaInfo);\n        Object.setPrototypeOf(segmentInfo, MediaInfo.prototype);\n        this._mediaInfo.segments[this._currentSegmentIndex] = segmentInfo;\n\n        // notify mediaInfo update\n        this._reportSegmentMediaInfo(this._currentSegmentIndex);\n\n        if (this._pendingSeekTime != null) {\n            Promise.resolve().then(() => {\n                let target = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n                this.seek(target);\n            });\n        }\n    }\n\n    _onMetaDataArrived(metadata) {\n        this._emitter.emit(TransmuxingEvents.METADATA_ARRIVED, metadata);\n    }\n\n    _onScriptDataArrived(data) {\n        this._emitter.emit(TransmuxingEvents.SCRIPTDATA_ARRIVED, data);\n    }\n\n    _onTimedID3Metadata(timed_id3_metadata) {\n        let timestamp_base = this._remuxer.getTimestampBase();\n        if (timestamp_base == undefined) { return; }\n\n        if (timed_id3_metadata.pts != undefined) {\n            timed_id3_metadata.pts -= timestamp_base;\n        }\n\n        if (timed_id3_metadata.dts != undefined) {\n            timed_id3_metadata.dts -= timestamp_base;\n        }\n\n        this._emitter.emit(TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED, timed_id3_metadata);\n    }\n\n    _onSCTE35Metadata(scte35) {\n        let timestamp_base = this._remuxer.getTimestampBase();\n        if (timestamp_base == undefined) { return; }\n\n        if (scte35.pts != undefined) {\n            scte35.pts -= timestamp_base;\n        }\n\n        if (scte35.nearest_pts != undefined) {\n            scte35.nearest_pts -= timestamp_base;\n        }\n\n        this._emitter.emit(TransmuxingEvents.SCTE35_METADATA_ARRIVED, scte35);\n    }\n\n    _onPESPrivateDataDescriptor(descriptor) {\n        this._emitter.emit(TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR, descriptor);\n    }\n\n    _onPESPrivateData(private_data) {\n        let timestamp_base = this._remuxer.getTimestampBase();\n        if (timestamp_base == undefined) { return; }\n\n        if (private_data.pts != undefined) {\n            private_data.pts -= timestamp_base;\n        }\n\n        if (private_data.nearest_pts != undefined) {\n            private_data.nearest_pts -= timestamp_base;\n        }\n\n        if (private_data.dts != undefined) {\n            private_data.dts -= timestamp_base;\n        }\n\n        this._emitter.emit(TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED, private_data);\n    }\n\n    _onIOSeeked() {\n        this._remuxer.insertDiscontinuity();\n    }\n\n    _onIOComplete(extraData) {\n        let segmentIndex = extraData;\n        let nextSegmentIndex = segmentIndex + 1;\n\n        if (nextSegmentIndex < this._mediaDataSource.segments.length) {\n            this._internalAbort();\n            if (this._remuxer) {\n                this._remuxer.flushStashedSamples();\n            }\n            this._loadSegment(nextSegmentIndex);\n        } else {\n            if (this._remuxer) {\n                this._remuxer.flushStashedSamples();\n            }\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\n            this._disableStatisticsReporter();\n        }\n    }\n\n    _onIORedirect(redirectedURL) {\n        let segmentIndex = this._ioctl.extraData;\n        this._mediaDataSource.segments[segmentIndex].redirectedURL = redirectedURL;\n    }\n\n    _onIORecoveredEarlyEof() {\n        this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\n    }\n\n    _onIOException(type, info) {\n        Log.e(this.TAG, `IOException: type = ${type}, code = ${info.code}, msg = ${info.msg}`);\n        this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\n        this._disableStatisticsReporter();\n    }\n\n    _onDemuxException(type, info) {\n        Log.e(this.TAG, `DemuxException: type = ${type}, info = ${info}`);\n        this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\n    }\n\n    _onRemuxerInitSegmentArrival(type, initSegment) {\n        this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\n    }\n\n    _onRemuxerMediaSegmentArrival(type, mediaSegment) {\n        if (this._pendingSeekTime != null) {\n            // Media segments after new-segment cross-seeking should be dropped.\n            return;\n        }\n        this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\n\n        // Resolve pending seekPoint\n        if (this._pendingResolveSeekPoint != null && type === 'video') {\n            let syncPoints = mediaSegment.info.syncPoints;\n            let seekpoint = this._pendingResolveSeekPoint;\n            this._pendingResolveSeekPoint = null;\n\n            // Safari: Pass PTS for recommend_seekpoint\n            if (Browser.safari && syncPoints.length > 0 && syncPoints[0].originalDts === seekpoint) {\n                seekpoint = syncPoints[0].pts;\n            }\n            // else: use original DTS (keyframe.milliseconds)\n\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, seekpoint);\n        }\n    }\n\n    _enableStatisticsReporter() {\n        if (this._statisticsReporter == null) {\n            this._statisticsReporter = self.setInterval(\n                this._reportStatisticsInfo.bind(this),\n            this._config.statisticsInfoReportInterval);\n        }\n    }\n\n    _disableStatisticsReporter() {\n        if (this._statisticsReporter) {\n            self.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n    }\n\n    _reportSegmentMediaInfo(segmentIndex) {\n        let segmentInfo = this._mediaInfo.segments[segmentIndex];\n        let exportInfo = Object.assign({}, segmentInfo);\n\n        exportInfo.duration = this._mediaInfo.duration;\n        exportInfo.segmentCount = this._mediaInfo.segmentCount;\n        delete exportInfo.segments;\n        delete exportInfo.keyframesIndex;\n\n        this._emitter.emit(TransmuxingEvents.MEDIA_INFO, exportInfo);\n    }\n\n    _reportStatisticsInfo() {\n        let info = {};\n\n        info.url = this._ioctl.currentURL;\n        info.hasRedirect = this._ioctl.hasRedirect;\n        if (info.hasRedirect) {\n            info.redirectedURL = this._ioctl.currentRedirectedURL;\n        }\n\n        info.speed = this._ioctl.currentSpeed;\n        info.loaderType = this._ioctl.loaderType;\n        info.currentSegmentIndex = this._currentSegmentIndex;\n        info.totalSegmentCount = this._mediaDataSource.segments.length;\n\n        this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, info);\n    }\n\n}\n\nexport default TransmuxingController;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Utility class to calculate realtime network I/O speed\nclass SpeedSampler {\n\n    constructor() {\n        // milliseconds\n        this._firstCheckpoint = 0;\n        this._lastCheckpoint = 0;\n        this._intervalBytes = 0;\n        this._totalBytes = 0;\n        this._lastSecondBytes = 0;\n\n        // compatibility detection\n        if (self.performance && self.performance.now) {\n            this._now = self.performance.now.bind(self.performance);\n        } else {\n            this._now = Date.now;\n        }\n    }\n\n    reset() {\n        this._firstCheckpoint = this._lastCheckpoint = 0;\n        this._totalBytes = this._intervalBytes = 0;\n        this._lastSecondBytes = 0;\n    }\n\n    addBytes(bytes) {\n        if (this._firstCheckpoint === 0) {\n            this._firstCheckpoint = this._now();\n            this._lastCheckpoint = this._firstCheckpoint;\n            this._intervalBytes += bytes;\n            this._totalBytes += bytes;\n        } else if (this._now() - this._lastCheckpoint < 1000) {\n            this._intervalBytes += bytes;\n            this._totalBytes += bytes;\n        } else {  // duration >= 1000\n            this._lastSecondBytes = this._intervalBytes;\n            this._intervalBytes = bytes;\n            this._totalBytes += bytes;\n            this._lastCheckpoint = this._now();\n        }\n    }\n\n    get currentKBps() {\n        this.addBytes(0);\n\n        let durationSeconds = (this._now() - this._lastCheckpoint) / 1000;\n        if (durationSeconds == 0) durationSeconds = 1;\n        return (this._intervalBytes / durationSeconds) / 1024;\n    }\n\n    get lastSecondKBps() {\n        this.addBytes(0);\n\n        if (this._lastSecondBytes !== 0) {\n            return this._lastSecondBytes / 1024;\n        } else {  // lastSecondBytes === 0\n            if (this._now() - this._lastCheckpoint >= 500) {\n                // if time interval since last checkpoint has exceeded 500ms\n                // the speed is nearly accurate\n                return this.currentKBps;\n            } else {\n                // We don't know\n                return 0;\n            }\n        }\n    }\n\n    get averageKBps() {\n        let durationSeconds = (this._now() - this._firstCheckpoint) / 1000;\n        return (this._totalBytes / durationSeconds) / 1024;\n    }\n\n}\n\nexport default SpeedSampler;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n/* fetch + stream IO loader. Currently working on chrome 43+.\n * fetch provides a better alternative http API to XMLHttpRequest\n *\n * fetch spec   https://fetch.spec.whatwg.org/\n * stream spec  https://streams.spec.whatwg.org/\n */\nclass FetchStreamLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            // fetch + stream is broken on Microsoft Edge. Disable before build 15048.\n            // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/\n            // Fixed in Jan 10, 2017. Build 15048+ removed from blacklist.\n            let isWorkWellEdge = Browser.msedge && Browser.version.minor >= 15048;\n            let browserNotBlacklisted = Browser.msedge ? isWorkWellEdge : true;\n            return (self.fetch && self.ReadableStream && browserNotBlacklisted);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('fetch-stream-loader');\n        this.TAG = 'FetchStreamLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._requestAbort = false;\n        this._abortController = null;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n            sourceURL = dataSource.redirectedURL;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n        let headers = new self.Headers();\n\n        if (typeof seekConfig.headers === 'object') {\n            let configHeaders = seekConfig.headers;\n            for (let key in configHeaders) {\n                if (configHeaders.hasOwnProperty(key)) {\n                    headers.append(key, configHeaders[key]);\n                }\n            }\n        }\n\n        let params = {\n            method: 'GET',\n            headers: headers,\n            mode: 'cors',\n            cache: 'default',\n            // The default policy of Fetch API in the whatwg standard\n            // Safari incorrectly indicates 'no-referrer' as default policy, fuck it\n            referrerPolicy: 'no-referrer-when-downgrade'\n        };\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            for (let key in this._config.headers) {\n                headers.append(key, this._config.headers[key]);\n            }\n        }\n\n        // cors is enabled by default\n        if (dataSource.cors === false) {\n            // no-cors means 'disregard cors policy', which can only be used in ServiceWorker\n            params.mode = 'same-origin';\n        }\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            params.credentials = 'include';\n        }\n\n        // referrerPolicy from config\n        if (dataSource.referrerPolicy) {\n            params.referrerPolicy = dataSource.referrerPolicy;\n        }\n\n        if (self.AbortController) {\n            this._abortController = new self.AbortController();\n            params.signal = this._abortController.signal;\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        self.fetch(seekConfig.url, params).then((res) => {\n            if (this._requestAbort) {\n                this._status = LoaderStatus.kIdle;\n                res.body.cancel();\n                return;\n            }\n            if (res.ok && (res.status >= 200 && res.status <= 299)) {\n                if (res.url !== seekConfig.url) {\n                    if (this._onURLRedirect) {\n                        let redirectedURL = this._seekHandler.removeURLParameters(res.url);\n                        this._onURLRedirect(redirectedURL);\n                    }\n                }\n\n                let lengthHeader = res.headers.get('Content-Length');\n                if (lengthHeader != null) {\n                    this._contentLength = parseInt(lengthHeader);\n                    if (this._contentLength !== 0) {\n                        if (this._onContentLengthKnown) {\n                            this._onContentLengthKnown(this._contentLength);\n                        }\n                    }\n                }\n\n                return this._pump.call(this, res.body.getReader());\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: res.status, msg: res.statusText});\n                } else {\n                    throw new RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);\n                }\n            }\n        }).catch((e) => {\n            if (this._abortController && this._abortController.signal.aborted) {\n                return;\n            }\n\n            this._status = LoaderStatus.kError;\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, {code: -1, msg: e.message});\n            } else {\n                throw e;\n            }\n        });\n    }\n\n    abort() {\n        this._requestAbort = true;\n\n        if (this._status !== LoaderStatus.kBuffering || !Browser.chrome) {\n            // Chrome may throw Exception-like things here, avoid using if is buffering\n            if (this._abortController) {\n                try {\n                    this._abortController.abort();\n                } catch (e) {}\n            }\n        }\n    }\n\n    _pump(reader) {  // ReadableStreamReader\n        return reader.read().then((result) => {\n            if (result.done) {\n                // First check received length\n                if (this._contentLength !== null && this._receivedLength < this._contentLength) {\n                    // Report Early-EOF\n                    this._status = LoaderStatus.kError;\n                    let type = LoaderErrors.EARLY_EOF;\n                    let info = {code: -1, msg: 'Fetch stream meet Early-EOF'};\n                    if (this._onError) {\n                        this._onError(type, info);\n                    } else {\n                        throw new RuntimeException(info.msg);\n                    }\n                } else {\n                    // OK. Download complete\n                    this._status = LoaderStatus.kComplete;\n                    if (this._onComplete) {\n                        this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n                    }\n                }\n            } else {\n                if (this._abortController && this._abortController.signal.aborted) {\n                    this._status = LoaderStatus.kComplete;\n                    return;\n                } else if (this._requestAbort === true) {\n                    this._status = LoaderStatus.kComplete;\n                    return reader.cancel();\n                }\n\n                this._status = LoaderStatus.kBuffering;\n\n                let chunk = result.value.buffer;\n                let byteStart = this._range.from + this._receivedLength;\n                this._receivedLength += chunk.byteLength;\n\n                if (this._onDataArrival) {\n                    this._onDataArrival(chunk, byteStart, this._receivedLength);\n                }\n\n                this._pump(reader);\n            }\n        }).catch((e) => {\n            if (this._abortController && this._abortController.signal.aborted) {\n                this._status = LoaderStatus.kComplete;\n                return;\n            }\n\n            if (e.code === 11 && Browser.msedge) {  // InvalidStateError on Microsoft Edge\n                // Workaround: Edge may throw InvalidStateError after ReadableStreamReader.cancel() call\n                // Ignore the unknown exception.\n                // Related issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11265202/\n                return;\n            }\n\n            this._status = LoaderStatus.kError;\n            let type = 0;\n            let info = null;\n\n            if ((e.code === 19 || e.message === 'network error') && // NETWORK_ERR\n                (this._contentLength === null ||\n                (this._contentLength !== null && this._receivedLength < this._contentLength))) {\n                type = LoaderErrors.EARLY_EOF;\n                info = {code: e.code, msg: 'Fetch stream meet Early-EOF'};\n            } else {\n                type = LoaderErrors.EXCEPTION;\n                info = {code: e.code, msg: e.message};\n            }\n\n            if (this._onError) {\n                this._onError(type, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        });\n    }\n\n}\n\nexport default FetchStreamLoader;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\nclass MozChunkedLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            // Firefox 37- requires .open() to be called before setting responseType\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'moz-chunked-arraybuffer';\n            return (xhr.responseType === 'moz-chunked-arraybuffer');\n        } catch (e) {\n            Log.w('MozChunkedLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('xhr-moz-chunked-loader');\n        this.TAG = 'MozChunkedLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onloadend = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n            sourceURL = dataSource.redirectedURL;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n        this._requestURL = seekConfig.url;\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'moz-chunked-arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onloadend = this._onLoadEnd.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        // cors is auto detected and enabled by xhr\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            let headers = this._config.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\n                if (this._onURLRedirect) {\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n                    this._onURLRedirect(redirectedURL);\n                }\n            }\n\n            if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            } else {\n                this._status = LoaderStatus.kBuffering;\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._status === LoaderStatus.kError) {\n            // Ignore error response\n            return;\n        }\n\n        if (this._contentLength === null) {\n            if (e.total !== null && e.total !== 0) {\n                this._contentLength = e.total;\n                if (this._onContentLengthKnown) {\n                    this._onContentLengthKnown(this._contentLength);\n                }\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onLoadEnd(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        } else if (this._status === LoaderStatus.kError) {\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && e.loaded < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'Moz-Chunked stream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default MozChunkedLoader;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport SpeedSampler from './speed-sampler.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// Universal IO Loader, implemented by adding Range header in xhr's request header\nclass RangeLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'arraybuffer';\n            return (xhr.responseType === 'arraybuffer');\n        } catch (e) {\n            Log.w('RangeLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('xhr-range-loader');\n        this.TAG = 'RangeLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = false;\n\n        this._chunkSizeKBList = [\n            128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n        ];\n        this._currentChunkSizeKB = 384;\n        this._currentSpeedNormalized = 0;\n        this._zeroSpeedChunkCount = 0;\n\n        this._xhr = null;\n        this._speedSampler = new SpeedSampler();\n\n        this._requestAbort = false;\n        this._waitForTotalLength = false;\n        this._totalLengthReceived = false;\n\n        this._currentRequestURL = null;\n        this._currentRedirectedURL = null;\n        this._currentRequestRange = null;\n        this._totalLength = null;  // size of the entire file\n        this._contentLength = null;  // Content-Length of entire request range\n        this._receivedLength = 0;  // total received bytes\n        this._lastTimeLoaded = 0;  // received bytes of current request sub-range\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onload = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    get currentSpeed() {\n        return this._speedSampler.lastSecondKBps;\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n        this._status = LoaderStatus.kConnecting;\n\n        let useRefTotalLength = false;\n        if (this._dataSource.filesize != undefined && this._dataSource.filesize !== 0) {\n            useRefTotalLength = true;\n            this._totalLength = this._dataSource.filesize;\n        }\n\n        if (!this._totalLengthReceived && !useRefTotalLength) {\n            // We need total filesize\n            this._waitForTotalLength = true;\n            this._internalOpen(this._dataSource, {from: 0, to: -1});\n        } else {\n            // We have filesize, start loading\n            this._openSubRange();\n        }\n    }\n\n    _openSubRange() {\n        let chunkSize = this._currentChunkSizeKB * 1024;\n\n        let from = this._range.from + this._receivedLength;\n        let to = from + chunkSize;\n\n        if (this._contentLength != null) {\n            if (to - this._range.from >= this._contentLength) {\n                to = this._range.from + this._contentLength - 1;\n            }\n        }\n\n        this._currentRequestRange = {from, to};\n        this._internalOpen(this._dataSource, this._currentRequestRange);\n    }\n\n    _internalOpen(dataSource, range) {\n        this._lastTimeLoaded = 0;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL) {\n            if (this._currentRedirectedURL != undefined) {\n                sourceURL = this._currentRedirectedURL;\n            } else if (dataSource.redirectedURL != undefined) {\n                sourceURL = dataSource.redirectedURL;\n            }\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n        this._currentRequestURL = seekConfig.url;\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onload = this._onLoad.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            let headers = this._config.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        this._internalAbort();\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _internalAbort() {\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onload = null;\n            this._xhr.onerror = null;\n            this._xhr.abort();\n            this._xhr = null;\n        }\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.responseURL != undefined) {  // if the browser support this property\n                let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n                if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {\n                    this._currentRedirectedURL = redirectedURL;\n                    if (this._onURLRedirect) {\n                        this._onURLRedirect(redirectedURL);\n                    }\n                }\n            }\n\n            if ((xhr.status >= 200 && xhr.status <= 299)) {\n                if (this._waitForTotalLength) {\n                    return;\n                }\n                this._status = LoaderStatus.kBuffering;\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('RangeLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._status === LoaderStatus.kError) {\n            // Ignore error response\n            return;\n        }\n\n        if (this._contentLength === null) {\n            let openNextRange = false;\n\n            if (this._waitForTotalLength) {\n                this._waitForTotalLength = false;\n                this._totalLengthReceived = true;\n                openNextRange = true;\n\n                let total = e.total;\n                this._internalAbort();\n                if (total != null & total !== 0) {\n                    this._totalLength = total;\n                }\n            }\n\n            // calculate currrent request range's contentLength\n            if (this._range.to === -1) {\n                this._contentLength = this._totalLength - this._range.from;\n            } else {  // to !== -1\n                this._contentLength = this._range.to - this._range.from + 1;\n            }\n\n            if (openNextRange) {\n                this._openSubRange();\n                return;\n            }\n            if (this._onContentLengthKnown) {\n                this._onContentLengthKnown(this._contentLength);\n            }\n        }\n\n        let delta = e.loaded - this._lastTimeLoaded;\n        this._lastTimeLoaded = e.loaded;\n        this._speedSampler.addBytes(delta);\n    }\n\n    _normalizeSpeed(input) {\n        let list = this._chunkSizeKBList;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (input < list[0]) {\n            return list[0];\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\n                return list[mid];\n            } else if (list[mid] < input) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n    }\n\n    _onLoad(e) {\n        if (this._status === LoaderStatus.kError) {\n            // Ignore error response\n            return;\n        }\n\n        if (this._waitForTotalLength) {\n            this._waitForTotalLength = false;\n            return;\n        }\n\n        this._lastTimeLoaded = 0;\n        let KBps = this._speedSampler.lastSecondKBps;\n        if (KBps === 0) {\n            this._zeroSpeedChunkCount++;\n            if (this._zeroSpeedChunkCount >= 3) {\n                // Try get currentKBps after 3 chunks\n                KBps = this._speedSampler.currentKBps;\n            }\n        }\n\n        if (KBps !== 0) {\n            let normalized = this._normalizeSpeed(KBps);\n            if (this._currentSpeedNormalized !== normalized) {\n                this._currentSpeedNormalized = normalized;\n                this._currentChunkSizeKB = normalized;\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        let reportComplete = false;\n\n        if (this._contentLength != null && this._receivedLength < this._contentLength) {\n            // continue load next chunk\n            this._openSubRange();\n        } else {\n            reportComplete = true;\n        }\n\n        // dispatch received chunk\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n\n        if (reportComplete) {\n            this._status = LoaderStatus.kComplete;\n            if (this._onComplete) {\n                this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n            }\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && this._receivedLength > 0\n                                && this._receivedLength < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'RangeLoader meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default RangeLoader;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For MPEG-TS/FLV over WebSocket live stream\nclass WebSocketLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            return (typeof self.WebSocket !== 'undefined');\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor() {\n        super('websocket-loader');\n        this.TAG = 'WebSocketLoader';\n\n        this._needStash = true;\n\n        this._ws = null;\n        this._requestAbort = false;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this._ws) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource) {\n        try {\n            let ws = this._ws = new self.WebSocket(dataSource.url);\n            ws.binaryType = 'arraybuffer';\n            ws.onopen = this._onWebSocketOpen.bind(this);\n            ws.onclose = this._onWebSocketClose.bind(this);\n            ws.onmessage = this._onWebSocketMessage.bind(this);\n            ws.onerror = this._onWebSocketError.bind(this);\n\n            this._status = LoaderStatus.kConnecting;\n        } catch (e) {\n            this._status = LoaderStatus.kError;\n\n            let info = {code: e.code, msg: e.message};\n\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        }\n    }\n\n    abort() {\n        let ws = this._ws;\n        if (ws && (ws.readyState === 0 || ws.readyState === 1)) {  // CONNECTING || OPEN\n            this._requestAbort = true;\n            ws.close();\n        }\n\n        this._ws = null;\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onWebSocketOpen(e) {\n        this._status = LoaderStatus.kBuffering;\n    }\n\n    _onWebSocketClose(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n\n        if (this._onComplete) {\n            this._onComplete(0, this._receivedLength - 1);\n        }\n    }\n\n    _onWebSocketMessage(e) {\n        if (e.data instanceof ArrayBuffer) {\n            this._dispatchArrayBuffer(e.data);\n        } else if (e.data instanceof Blob) {\n            let reader = new FileReader();\n            reader.onload = () => {\n                this._dispatchArrayBuffer(reader.result);\n            };\n            reader.readAsArrayBuffer(e.data);\n        } else {\n            this._status = LoaderStatus.kError;\n            let info = {code: -1, msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name};\n\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        }\n    }\n\n    _dispatchArrayBuffer(arraybuffer) {\n        let chunk = arraybuffer;\n        let byteStart = this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onWebSocketError(e) {\n        this._status = LoaderStatus.kError;\n\n        let info = {\n            code: e.code,\n            msg: e.message\n        };\n\n        if (this._onError) {\n            this._onError(LoaderErrors.EXCEPTION, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default WebSocketLoader;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass RangeSeekHandler {\n\n    constructor(zeroStart) {\n        this._zeroStart = zeroStart || false;\n    }\n\n    getConfig(url, range) {\n        let headers = {};\n\n        if (range.from !== 0 || range.to !== -1) {\n            let param;\n            if (range.to !== -1) {\n                param = `bytes=${range.from.toString()}-${range.to.toString()}`;\n            } else {\n                param = `bytes=${range.from.toString()}-`;\n            }\n            headers['Range'] = param;\n        } else if (this._zeroStart) {\n            headers['Range'] = 'bytes=0-';\n        }\n\n        return {\n            url: url,\n            headers: headers\n        };\n    }\n\n    removeURLParameters(seekedURL) {\n        return seekedURL;\n    }\n\n}\n\nexport default RangeSeekHandler;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass ParamSeekHandler {\n\n    constructor(paramStart, paramEnd) {\n        this._startName = paramStart;\n        this._endName = paramEnd;\n    }\n\n    getConfig(baseUrl, range) {\n        let url = baseUrl;\n\n        if (range.from !== 0 || range.to !== -1) {\n            let needAnd = true;\n            if (url.indexOf('?') === -1) {\n                url += '?';\n                needAnd = false;\n            }\n\n            if (needAnd) {\n                url += '&';\n            }\n\n            url += `${this._startName}=${range.from.toString()}`;\n\n            if (range.to !== -1) {\n                url += `&${this._endName}=${range.to.toString()}`;\n            }\n        }\n\n        return {\n            url: url,\n            headers: {}\n        };\n    }\n\n    removeURLParameters(seekedURL) {\n        let baseURL = seekedURL.split('?')[0];\n        let params = undefined;\n\n        let queryIndex = seekedURL.indexOf('?');\n        if (queryIndex !== -1) {\n            params = seekedURL.substring(queryIndex + 1);\n        }\n\n        let resultParams = '';\n\n        if (params != undefined && params.length > 0) {\n            let pairs = params.split('&');\n\n            for (let i = 0; i < pairs.length; i++) {\n                let pair = pairs[i].split('=');\n                let requireAnd = (i > 0);\n\n                if (pair[0] !== this._startName && pair[0] !== this._endName) {\n                    if (requireAnd) {\n                        resultParams += '&';\n                    }\n                    resultParams += pairs[i];\n                }\n            }\n        }\n\n        return (resultParams.length === 0) ? baseURL : baseURL + '?' + resultParams;\n    }\n\n}\n\nexport default ParamSeekHandler;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport SpeedSampler from './speed-sampler.js';\nimport {LoaderStatus, LoaderErrors} from './loader.js';\nimport FetchStreamLoader from './fetch-stream-loader.js';\nimport MozChunkedLoader from './xhr-moz-chunked-loader.js';\nimport MSStreamLoader from './xhr-msstream-loader.js';\nimport RangeLoader from './xhr-range-loader.js';\nimport WebSocketLoader from './websocket-loader.js';\nimport RangeSeekHandler from './range-seek-handler.js';\nimport ParamSeekHandler from './param-seek-handler.js';\nimport {RuntimeException, IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\n\n/**\n * DataSource: {\n *     url: string,\n *     filesize: number,\n *     cors: boolean,\n *     withCredentials: boolean\n * }\n * \n */\n\n// Manage IO Loaders\nclass IOController {\n\n    constructor(dataSource, config, extraData) {\n        this.TAG = 'IOController';\n\n        this._config = config;\n        this._extraData = extraData;\n\n        this._stashInitialSize = 64 * 1024;  // default initial size: 64KB\n        if (config.stashInitialSize != undefined && config.stashInitialSize > 0) {\n            // apply from config\n            this._stashInitialSize = config.stashInitialSize;\n        }\n\n        this._stashUsed = 0;\n        this._stashSize = this._stashInitialSize;\n        this._bufferSize = 1024 * 1024 * 3;  // initial size: 3MB\n        this._stashBuffer = new ArrayBuffer(this._bufferSize);\n        this._stashByteStart = 0;\n        this._enableStash = true;\n        if (config.enableStashBuffer === false) {\n            this._enableStash = false;\n        }\n\n        this._loader = null;\n        this._loaderClass = null;\n        this._seekHandler = null;\n\n        this._dataSource = dataSource;\n        this._isWebSocketURL = /wss?:\\/\\/(.+?)/.test(dataSource.url);\n        this._refTotalLength = dataSource.filesize ? dataSource.filesize : null;\n        this._totalLength = this._refTotalLength;\n        this._fullRequestFlag = false;\n        this._currentRange = null;\n        this._redirectedURL = null;\n\n        this._speedNormalized = 0;\n        this._speedSampler = new SpeedSampler();\n        this._speedNormalizeList = [32, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096];\n\n        this._isEarlyEofReconnecting = false;\n\n        this._paused = false;\n        this._resumeFrom = 0;\n\n        this._onDataArrival = null;\n        this._onSeeked = null;\n        this._onError = null;\n        this._onComplete = null;\n        this._onRedirect = null;\n        this._onRecoveredEarlyEof = null;\n\n        this._selectSeekHandler();\n        this._selectLoader();\n        this._createLoader();\n    }\n\n    destroy() {\n        if (this._loader.isWorking()) {\n            this._loader.abort();\n        }\n        this._loader.destroy();\n        this._loader = null;\n        this._loaderClass = null;\n        this._dataSource = null;\n        this._stashBuffer = null;\n        this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0;\n        this._currentRange = null;\n        this._speedSampler = null;\n\n        this._isEarlyEofReconnecting = false;\n\n        this._onDataArrival = null;\n        this._onSeeked = null;\n        this._onError = null;\n        this._onComplete = null;\n        this._onRedirect = null;\n        this._onRecoveredEarlyEof = null;\n\n        this._extraData = null;\n    }\n\n    isWorking() {\n        return this._loader && this._loader.isWorking() && !this._paused;\n    }\n\n    isPaused() {\n        return this._paused;\n    }\n\n    get status() {\n        return this._loader.status;\n    }\n\n    get extraData() {\n        return this._extraData;\n    }\n\n    set extraData(data) {\n        this._extraData = data;\n    }\n\n    // prototype: function onDataArrival(chunks: ArrayBuffer, byteStart: number): number\n    get onDataArrival() {\n        return this._onDataArrival;\n    }\n\n    set onDataArrival(callback) {\n        this._onDataArrival = callback;\n    }\n\n    get onSeeked() {\n        return this._onSeeked;\n    }\n\n    set onSeeked(callback) {\n        this._onSeeked = callback;\n    }\n\n    // prototype: function onError(type: number, info: {code: number, msg: string}): void\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    get onComplete() {\n        return this._onComplete;\n    }\n\n    set onComplete(callback) {\n        this._onComplete = callback;\n    }\n\n    get onRedirect() {\n        return this._onRedirect;\n    }\n\n    set onRedirect(callback) {\n        this._onRedirect = callback;\n    }\n\n    get onRecoveredEarlyEof() {\n        return this._onRecoveredEarlyEof;\n    }\n\n    set onRecoveredEarlyEof(callback) {\n        this._onRecoveredEarlyEof = callback;\n    }\n\n    get currentURL() {\n        return this._dataSource.url;\n    }\n\n    get hasRedirect() {\n        return (this._redirectedURL != null || this._dataSource.redirectedURL != undefined);\n    }\n\n    get currentRedirectedURL() {\n        return this._redirectedURL || this._dataSource.redirectedURL;\n    }\n\n    // in KB/s\n    get currentSpeed() {\n        if (this._loaderClass === RangeLoader) {\n            // SpeedSampler is inaccuracy if loader is RangeLoader\n            return this._loader.currentSpeed;\n        }\n        return this._speedSampler.lastSecondKBps;\n    }\n\n    get loaderType() {\n        return this._loader.type;\n    }\n\n    _selectSeekHandler() {\n        let config = this._config;\n\n        if (config.seekType === 'range') {\n            this._seekHandler = new RangeSeekHandler(this._config.rangeLoadZeroStart);\n        } else if (config.seekType === 'param') {\n            let paramStart = config.seekParamStart || 'bstart';\n            let paramEnd = config.seekParamEnd || 'bend';\n\n            this._seekHandler = new ParamSeekHandler(paramStart, paramEnd);\n        } else if (config.seekType === 'custom') {\n            if (typeof config.customSeekHandler !== 'function') {\n                throw new InvalidArgumentException('Custom seekType specified in config but invalid customSeekHandler!');\n            }\n            this._seekHandler = new config.customSeekHandler();\n        } else {\n            throw new InvalidArgumentException(`Invalid seekType in config: ${config.seekType}`);\n        }\n    }\n\n    _selectLoader() {\n        if (this._config.customLoader != null) {\n            this._loaderClass = this._config.customLoader;\n        } else if (this._isWebSocketURL) {\n            this._loaderClass = WebSocketLoader;\n        } else if (FetchStreamLoader.isSupported()) {\n            this._loaderClass = FetchStreamLoader;\n        } else if (MozChunkedLoader.isSupported()) {\n            this._loaderClass = MozChunkedLoader;\n        } else if (RangeLoader.isSupported()) {\n            this._loaderClass = RangeLoader;\n        } else {\n            throw new RuntimeException('Your browser doesn\\'t support xhr with arraybuffer responseType!');\n        }\n    }\n\n    _createLoader() {\n        this._loader = new this._loaderClass(this._seekHandler, this._config);\n        if (this._loader.needStashBuffer === false) {\n            this._enableStash = false;\n        }\n        this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this);\n        this._loader.onURLRedirect = this._onURLRedirect.bind(this);\n        this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this);\n        this._loader.onComplete = this._onLoaderComplete.bind(this);\n        this._loader.onError = this._onLoaderError.bind(this);\n    }\n\n    open(optionalFrom) {\n        this._currentRange = {from: 0, to: -1};\n        if (optionalFrom) {\n            this._currentRange.from = optionalFrom;\n        }\n\n        this._speedSampler.reset();\n        if (!optionalFrom) {\n            this._fullRequestFlag = true;\n        }\n\n        this._loader.open(this._dataSource, Object.assign({}, this._currentRange));\n    }\n\n    abort() {\n        this._loader.abort();\n\n        if (this._paused) {\n            this._paused = false;\n            this._resumeFrom = 0;\n        }\n    }\n\n    pause() {\n        if (this.isWorking()) {\n            this._loader.abort();\n\n            if (this._stashUsed !== 0) {\n                this._resumeFrom = this._stashByteStart;\n                this._currentRange.to = this._stashByteStart - 1;\n            } else {\n                this._resumeFrom = this._currentRange.to + 1;\n            }\n            this._stashUsed = 0;\n            this._stashByteStart = 0;\n            this._paused = true;\n        }\n    }\n\n    resume() {\n        if (this._paused) {\n            this._paused = false;\n            let bytes = this._resumeFrom;\n            this._resumeFrom = 0;\n            this._internalSeek(bytes, true);\n        }\n    }\n\n    seek(bytes) {\n        this._paused = false;\n        this._stashUsed = 0;\n        this._stashByteStart = 0;\n        this._internalSeek(bytes, true);\n    }\n\n    /**\n     * When seeking request is from media seeking, unconsumed stash data should be dropped\n     * However, stash data shouldn't be dropped if seeking requested from http reconnection\n     *\n     * @dropUnconsumed: Ignore and discard all unconsumed data in stash buffer\n     */\n    _internalSeek(bytes, dropUnconsumed) {\n        if (this._loader.isWorking()) {\n            this._loader.abort();\n        }\n\n        // dispatch & flush stash buffer before seek\n        this._flushStashBuffer(dropUnconsumed);\n\n        this._loader.destroy();\n        this._loader = null;\n\n        let requestRange = {from: bytes, to: -1};\n        this._currentRange = {from: requestRange.from, to: -1};\n\n        this._speedSampler.reset();\n        this._stashSize = this._stashInitialSize;\n        this._createLoader();\n        this._loader.open(this._dataSource, requestRange);\n\n        if (this._onSeeked) {\n            this._onSeeked();\n        }\n    }\n\n    updateUrl(url) {\n        if (!url || typeof url !== 'string' || url.length === 0) {\n            throw new InvalidArgumentException('Url must be a non-empty string!');\n        }\n\n        this._dataSource.url = url;\n\n        // TODO: replace with new url\n    }\n\n    _expandBuffer(expectedBytes) {\n        let bufferNewSize = this._stashSize;\n        while (bufferNewSize + 1024 * 1024 * 1 < expectedBytes) {\n            bufferNewSize *= 2;\n        }\n\n        bufferNewSize += 1024 * 1024 * 1;  // bufferSize = stashSize + 1MB\n        if (bufferNewSize === this._bufferSize) {\n            return;\n        }\n\n        let newBuffer = new ArrayBuffer(bufferNewSize);\n\n        if (this._stashUsed > 0) {  // copy existing data into new buffer\n            let stashOldArray = new Uint8Array(this._stashBuffer, 0, this._stashUsed);\n            let stashNewArray = new Uint8Array(newBuffer, 0, bufferNewSize);\n            stashNewArray.set(stashOldArray, 0);\n        }\n\n        this._stashBuffer = newBuffer;\n        this._bufferSize = bufferNewSize;\n    }\n\n    _normalizeSpeed(input) {\n        let list = this._speedNormalizeList;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (input < list[0]) {\n            return list[0];\n        }\n\n        // binary search\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\n                return list[mid];\n            } else if (list[mid] < input) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n    }\n\n    _adjustStashSize(normalized) {\n        let stashSizeKB = 0;\n\n        if (this._config.isLive) {\n            // live stream: always use 1/8 normalized speed for size of stashSizeKB\n            stashSizeKB = normalized / 8;\n        } else {\n            if (normalized < 512) {\n                stashSizeKB = normalized;\n            } else if (normalized >= 512 && normalized <= 1024) {\n                stashSizeKB = Math.floor(normalized * 1.5);\n            } else {\n                stashSizeKB = normalized * 2;\n            }\n        }\n\n        if (stashSizeKB > 8192) {\n            stashSizeKB = 8192;\n        }\n\n        let bufferSize = stashSizeKB * 1024 + 1024 * 1024 * 1;  // stashSize + 1MB\n        if (this._bufferSize < bufferSize) {\n            this._expandBuffer(bufferSize);\n        }\n        this._stashSize = stashSizeKB * 1024;\n    }\n\n    _dispatchChunks(chunks, byteStart) {\n        this._currentRange.to = byteStart + chunks.byteLength - 1;\n        return this._onDataArrival(chunks, byteStart);\n    }\n\n    _onURLRedirect(redirectedURL) {\n        this._redirectedURL = redirectedURL;\n        if (this._onRedirect) {\n            this._onRedirect(redirectedURL);\n        }\n    }\n\n    _onContentLengthKnown(contentLength) {\n        if (contentLength && this._fullRequestFlag) {\n            this._totalLength = contentLength;\n            this._fullRequestFlag = false;\n        }\n    }\n\n    _onLoaderChunkArrival(chunk, byteStart, receivedLength) {\n        if (!this._onDataArrival) {\n            throw new IllegalStateException('IOController: No existing consumer (onDataArrival) callback!');\n        }\n        if (this._paused) {\n            return;\n        }\n        if (this._isEarlyEofReconnecting) {\n            // Auto-reconnect for EarlyEof succeed, notify to upper-layer by callback\n            this._isEarlyEofReconnecting = false;\n            if (this._onRecoveredEarlyEof) {\n                this._onRecoveredEarlyEof();\n            }\n        }\n\n        this._speedSampler.addBytes(chunk.byteLength);\n\n        // adjust stash buffer size according to network speed dynamically\n        let KBps = this._speedSampler.lastSecondKBps;\n        if (KBps !== 0) {\n            let normalized = this._normalizeSpeed(KBps);\n            if (this._speedNormalized !== normalized) {\n                this._speedNormalized = normalized;\n                this._adjustStashSize(normalized);\n            }\n        }\n\n        if (!this._enableStash) {  // disable stash\n            if (this._stashUsed === 0) {\n                // dispatch chunk directly to consumer;\n                // check ret value (consumed bytes) and stash unconsumed to stashBuffer\n                let consumed = this._dispatchChunks(chunk, byteStart);\n                if (consumed < chunk.byteLength) {  // unconsumed data remain.\n                    let remain = chunk.byteLength - consumed;\n                    if (remain > this._bufferSize) {\n                        this._expandBuffer(remain);\n                    }\n                    let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                    stashArray.set(new Uint8Array(chunk, consumed), 0);\n                    this._stashUsed += remain;\n                    this._stashByteStart = byteStart + consumed;\n                }\n            } else {\n                // else: Merge chunk into stashBuffer, and dispatch stashBuffer to consumer.\n                if (this._stashUsed + chunk.byteLength > this._bufferSize) {\n                    this._expandBuffer(this._stashUsed + chunk.byteLength);\n                }\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                this._stashUsed += chunk.byteLength;\n                let consumed = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);\n                if (consumed < this._stashUsed && consumed > 0) {  // unconsumed data remain\n                    let remainArray = new Uint8Array(this._stashBuffer, consumed);\n                    stashArray.set(remainArray, 0);\n                }\n                this._stashUsed -= consumed;\n                this._stashByteStart += consumed;\n            }\n        } else {  // enable stash\n            if (this._stashUsed === 0 && this._stashByteStart === 0) {  // seeked? or init chunk?\n                // This is the first chunk after seek action\n                this._stashByteStart = byteStart;\n            }\n            if (this._stashUsed + chunk.byteLength <= this._stashSize) {\n                // just stash\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._stashSize);\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                this._stashUsed += chunk.byteLength;\n            } else {  // stashUsed + chunkSize > stashSize, size limit exceeded\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                if (this._stashUsed > 0) {  // There're stash datas in buffer\n                    // dispatch the whole stashBuffer, and stash remain data\n                    // then append chunk to stashBuffer (stash)\n                    let buffer = this._stashBuffer.slice(0, this._stashUsed);\n                    let consumed = this._dispatchChunks(buffer, this._stashByteStart);\n                    if (consumed < buffer.byteLength) {\n                        if (consumed > 0) {\n                            let remainArray = new Uint8Array(buffer, consumed);\n                            stashArray.set(remainArray, 0);\n                            this._stashUsed = remainArray.byteLength;\n                            this._stashByteStart += consumed;\n                        }\n                    } else {\n                        this._stashUsed = 0;\n                        this._stashByteStart += consumed;\n                    }\n                    if (this._stashUsed + chunk.byteLength > this._bufferSize) {\n                        this._expandBuffer(this._stashUsed + chunk.byteLength);\n                        stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                    }\n                    stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                    this._stashUsed += chunk.byteLength;\n                } else {  // stash buffer empty, but chunkSize > stashSize (oh, holy shit)\n                    // dispatch chunk directly and stash remain data\n                    let consumed = this._dispatchChunks(chunk, byteStart);\n                    if (consumed < chunk.byteLength) {\n                        let remain = chunk.byteLength - consumed;\n                        if (remain > this._bufferSize) {\n                            this._expandBuffer(remain);\n                            stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                        }\n                        stashArray.set(new Uint8Array(chunk, consumed), 0);\n                        this._stashUsed += remain;\n                        this._stashByteStart = byteStart + consumed;\n                    }\n                }\n            }\n        }\n    }\n\n    _flushStashBuffer(dropUnconsumed) {\n        if (this._stashUsed > 0) {\n            let buffer = this._stashBuffer.slice(0, this._stashUsed);\n            let consumed = this._dispatchChunks(buffer, this._stashByteStart);\n            let remain = buffer.byteLength - consumed;\n\n            if (consumed < buffer.byteLength) {\n                if (dropUnconsumed) {\n                    Log.w(this.TAG, `${remain} bytes unconsumed data remain when flush buffer, dropped`);\n                } else {\n                    if (consumed > 0) {\n                        let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                        let remainArray = new Uint8Array(buffer, consumed);\n                        stashArray.set(remainArray, 0);\n                        this._stashUsed = remainArray.byteLength;\n                        this._stashByteStart += consumed;\n                    }\n                    return 0;\n                }\n            }\n            this._stashUsed = 0;\n            this._stashByteStart = 0;\n            return remain;\n        }\n        return 0;\n    }\n\n    _onLoaderComplete(from, to) {\n        // Force-flush stash buffer, and drop unconsumed data\n        this._flushStashBuffer(true);\n\n        if (this._onComplete) {\n            this._onComplete(this._extraData);\n        }\n    }\n\n    _onLoaderError(type, data) {\n        Log.e(this.TAG, `Loader error, code = ${data.code}, msg = ${data.msg}`);\n\n        this._flushStashBuffer(false);\n\n        if (this._isEarlyEofReconnecting) {\n            // Auto-reconnect for EarlyEof failed, throw UnrecoverableEarlyEof error to upper-layer\n            this._isEarlyEofReconnecting = false;\n            type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\n        }\n\n        switch (type) {\n            case LoaderErrors.EARLY_EOF: {\n                if (!this._config.isLive) {\n                    // Do internal http reconnect if not live stream\n                    if (this._totalLength) {\n                        let nextFrom = this._currentRange.to + 1;\n                        if (nextFrom < this._totalLength) {\n                            Log.w(this.TAG, 'Connection lost, trying reconnect...');\n                            this._isEarlyEofReconnecting = true;\n                            this._internalSeek(nextFrom, false);\n                        }\n                        return;\n                    }\n                    // else: We don't know totalLength, throw UnrecoverableEarlyEof\n                }\n                // live stream: throw UnrecoverableEarlyEof error to upper-layer\n                type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\n                break;\n            }\n            case LoaderErrors.UNRECOVERABLE_EARLY_EOF:\n            case LoaderErrors.CONNECTING_TIMEOUT:\n            case LoaderErrors.HTTP_STATUS_CODE_INVALID:\n            case LoaderErrors.EXCEPTION:\n                break;\n        }\n\n        if (this._onError) {\n            this._onError(type, data);\n        } else {\n            throw new RuntimeException('IOException: ' + data.msg);\n        }\n    }\n\n}\n\nexport default IOController;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Polyfill {\n\n    static install() {\n        // ES6 Object.setPrototypeOf\n        Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n            obj.__proto__ = proto;\n            return obj;\n        };\n\n        // ES6 Object.assign\n        Object.assign = Object.assign || function (target) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            let output = Object(target);\n            for (let i = 1; i < arguments.length; i++) {\n                let source = arguments[i];\n                if (source !== undefined && source !== null) {\n                    for (let key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            output[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n\n        // ES6 Promise (missing support in IE11)\n        if (typeof self.Promise !== 'function') {\n            require('es6-promise').polyfill();\n        }\n    }\n\n}\n\nPolyfill.install();\n\nexport default Polyfill;","function webpackBootstrapFunc (modules) {\n/******/  // The module cache\n/******/  var installedModules = {};\n\n/******/  // The require function\n/******/  function __webpack_require__(moduleId) {\n\n/******/    // Check if module is in cache\n/******/    if(installedModules[moduleId])\n/******/      return installedModules[moduleId].exports;\n\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = installedModules[moduleId] = {\n/******/      i: moduleId,\n/******/      l: false,\n/******/      exports: {}\n/******/    };\n\n/******/    // Execute the module function\n/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/    // Flag the module as loaded\n/******/    module.l = true;\n\n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n\n/******/  // expose the modules object (__webpack_modules__)\n/******/  __webpack_require__.m = modules;\n\n/******/  // expose the module cache\n/******/  __webpack_require__.c = installedModules;\n\n/******/  // identity function for calling harmony imports with the correct context\n/******/  __webpack_require__.i = function(value) { return value; };\n\n/******/  // define getter function for harmony exports\n/******/  __webpack_require__.d = function(exports, name, getter) {\n/******/    if(!__webpack_require__.o(exports, name)) {\n/******/      Object.defineProperty(exports, name, {\n/******/        configurable: false,\n/******/        enumerable: true,\n/******/        get: getter\n/******/      });\n/******/    }\n/******/  };\n\n/******/  // define __esModule on exports\n/******/  __webpack_require__.r = function(exports) {\n/******/    Object.defineProperty(exports, '__esModule', { value: true });\n/******/  };\n\n/******/  // getDefaultExport function for compatibility with non-harmony modules\n/******/  __webpack_require__.n = function(module) {\n/******/    var getter = module && module.__esModule ?\n/******/      function getDefault() { return module['default']; } :\n/******/      function getModuleExports() { return module; };\n/******/    __webpack_require__.d(getter, 'a', getter);\n/******/    return getter;\n/******/  };\n\n/******/  // Object.prototype.hasOwnProperty.call\n/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/  // __webpack_public_path__\n/******/  __webpack_require__.p = \"/\";\n\n/******/  // on error function for async loading\n/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)\n  return f.default || f // try to call default if defined to also support babel esmodule exports\n}\n\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+'\nvar dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)' // additional chars when output.pathinfo is true\n\n// http://stackoverflow.com/a/2593661/130442\nfunction quoteRegExp (str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&')\n}\n\nfunction isNumeric(n) {\n  return !isNaN(1 * n); // 1 * n converts integers, integers as string (\"123\"), 1e3 and \"1e3\" to integers and strings to NaN\n}\n\nfunction getModuleDependencies (sources, module, queueName) {\n  var retval = {}\n  retval[queueName] = []\n\n  var fnString = module.toString()\n  var wrapperSignature = fnString.match(/^function\\s?\\w*\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/)\n  if (!wrapperSignature) return retval\n  var webpackRequireName = wrapperSignature[1]\n\n  // main bundle deps\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\n  var match\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue\n    retval[queueName].push(match[3])\n  }\n\n  // dll deps\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g')\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1])\n      sources[match[2]] = __webpack_require__(match[1]).m\n    }\n    retval[match[2]] = retval[match[2]] || []\n    retval[match[2]].push(match[4])\n  }\n\n  // convert 1e3 back to 1000 - this can be important after uglify-js converted 1000 to 1e3\n  var keys = Object.keys(retval);\n  for (var i = 0; i < keys.length; i++) {\n    for (var j = 0; j < retval[keys[i]].length; j++) {\n      if (isNumeric(retval[keys[i]][j])) {\n        retval[keys[i]][j] = 1 * retval[keys[i]][j];\n      }\n    }\n  }\n\n  return retval\n}\n\nfunction hasValuesInQueues (queues) {\n  var keys = Object.keys(queues)\n  return keys.reduce(function (hasValues, key) {\n    return hasValues || queues[key].length > 0\n  }, false)\n}\n\nfunction getRequiredModules (sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  }\n  var requiredModules = {\n    main: []\n  }\n  var seenModules = {\n    main: {}\n  }\n\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue)\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i]\n      var queue = modulesQueue[queueName]\n      var moduleToCheck = queue.pop()\n      seenModules[queueName] = seenModules[queueName] || {}\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue\n      seenModules[queueName][moduleToCheck] = true\n      requiredModules[queueName] = requiredModules[queueName] || []\n      requiredModules[queueName].push(moduleToCheck)\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)\n      var newModulesKeys = Object.keys(newModules)\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\n      }\n    }\n  }\n\n  return requiredModules\n}\n\nmodule.exports = function (moduleId, options) {\n  options = options || {}\n  var sources = {\n    main: __webpack_modules__\n  }\n\n  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId)\n\n  var src = ''\n\n  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {\n    var entryModule = 0\n    while (requiredModules[module][entryModule]) {\n      entryModule++\n    }\n    requiredModules[module].push(entryModule)\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'\n    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\\n'\n  })\n\n  src = src + 'new ((' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '}))(self);'\n\n  var blob = new window.Blob([src], { type: 'text/javascript' })\n  if (options.bare) { return blob }\n\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL\n\n  var workerUrl = URL.createObjectURL(blob)\n  var worker = new window.Worker(workerUrl)\n  worker.objectURL = workerUrl\n\n  return worker\n}\n","// entry/index file\n\n// make it compatible with browserify's umd wrapper\nmodule.exports = require('./mpegts.js').default;\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport LoggingControl from '../utils/logging-control.js';\nimport Polyfill from '../utils/polyfill.js';\nimport TransmuxingController from './transmuxing-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\n\n/* post message to worker:\n   data: {\n       cmd: string\n       param: any\n   }\n\n   receive message from worker:\n   data: {\n       msg: string,\n       data: any\n   }\n */\n\nlet TransmuxingWorker = function (self) {\n\n    let TAG = 'TransmuxingWorker';\n    let controller = null;\n    let logcatListener = onLogcatCallback.bind(this);\n\n    Polyfill.install();\n\n    self.addEventListener('message', function (e) {\n        switch (e.data.cmd) {\n            case 'init':\n                controller = new TransmuxingController(e.data.param[0], e.data.param[1]);\n                controller.on(TransmuxingEvents.IO_ERROR, onIOError.bind(this));\n                controller.on(TransmuxingEvents.DEMUX_ERROR, onDemuxError.bind(this));\n                controller.on(TransmuxingEvents.INIT_SEGMENT, onInitSegment.bind(this));\n                controller.on(TransmuxingEvents.MEDIA_SEGMENT, onMediaSegment.bind(this));\n                controller.on(TransmuxingEvents.LOADING_COMPLETE, onLoadingComplete.bind(this));\n                controller.on(TransmuxingEvents.RECOVERED_EARLY_EOF, onRecoveredEarlyEof.bind(this));\n                controller.on(TransmuxingEvents.MEDIA_INFO, onMediaInfo.bind(this));\n                controller.on(TransmuxingEvents.METADATA_ARRIVED, onMetaDataArrived.bind(this));\n                controller.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, onScriptDataArrived.bind(this));\n                controller.on(TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED, onTimedID3MetadataArrived.bind(this));\n                controller.on(TransmuxingEvents.SCTE35_METADATA_ARRIVED, onSCTE35MetadataArrived.bind(this));\n                controller.on(TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR, onPESPrivateDataDescriptor.bind(this));\n                controller.on(TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED, onPESPrivateDataArrived.bind(this));\n                controller.on(TransmuxingEvents.STATISTICS_INFO, onStatisticsInfo.bind(this));\n                controller.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, onRecommendSeekpoint.bind(this));\n                break;\n            case 'destroy':\n                if (controller) {\n                    controller.destroy();\n                    controller = null;\n                }\n                self.postMessage({msg: 'destroyed'});\n                break;\n            case 'start':\n                controller.start();\n                break;\n            case 'stop':\n                controller.stop();\n                break;\n            case 'seek':\n                controller.seek(e.data.param);\n                break;\n            case 'pause':\n                controller.pause();\n                break;\n            case 'resume':\n                controller.resume();\n                break;\n            case 'logging_config': {\n                let config = e.data.param;\n                LoggingControl.applyConfig(config);\n\n                if (config.enableCallback === true) {\n                    LoggingControl.addLogListener(logcatListener);\n                } else {\n                    LoggingControl.removeLogListener(logcatListener);\n                }\n                break;\n            }\n        }\n    });\n\n    function onInitSegment(type, initSegment) {\n        let obj = {\n            msg: TransmuxingEvents.INIT_SEGMENT,\n            data: {\n                type: type,\n                data: initSegment\n            }\n        };\n        self.postMessage(obj, [initSegment.data]);  // data: ArrayBuffer\n    }\n\n    function onMediaSegment(type, mediaSegment) {\n        let obj = {\n            msg: TransmuxingEvents.MEDIA_SEGMENT,\n            data: {\n                type: type,\n                data: mediaSegment\n            }\n        };\n        self.postMessage(obj, [mediaSegment.data]);  // data: ArrayBuffer\n    }\n\n    function onLoadingComplete() {\n        let obj = {\n            msg: TransmuxingEvents.LOADING_COMPLETE\n        };\n        self.postMessage(obj);\n    }\n\n    function onRecoveredEarlyEof() {\n        let obj = {\n            msg: TransmuxingEvents.RECOVERED_EARLY_EOF\n        };\n        self.postMessage(obj);\n    }\n\n    function onMediaInfo(mediaInfo) {\n        let obj = {\n            msg: TransmuxingEvents.MEDIA_INFO,\n            data: mediaInfo\n        };\n        self.postMessage(obj);\n    }\n\n    function onMetaDataArrived(metadata) {\n        let obj = {\n            msg: TransmuxingEvents.METADATA_ARRIVED,\n            data: metadata\n        };\n        self.postMessage(obj);\n    }\n\n    function onScriptDataArrived(data) {\n        let obj = {\n            msg: TransmuxingEvents.SCRIPTDATA_ARRIVED,\n            data: data\n        };\n        self.postMessage(obj);\n    }\n\n    function onTimedID3MetadataArrived (data) {\n        let obj = {\n            msg: TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED,\n            data: data\n        };\n        self.postMessage(obj);\n    }\n\n    function onSCTE35MetadataArrived (data) {\n        let obj = {\n            msg: TransmuxingEvents.SCTE35_METADATA_ARRIVED,\n            data: data\n        };\n        self.postMessage(obj);\n    }\n\n    function onPESPrivateDataDescriptor(data) {\n        let obj = {\n            msg: TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR,\n            data: data\n        };\n        self.postMessage(obj);\n    }\n\n    function onPESPrivateDataArrived(data) {\n        let obj = {\n            msg: TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED,\n            data: data\n        };\n        self.postMessage(obj);\n    }\n\n    function onStatisticsInfo(statInfo) {\n        let obj = {\n            msg: TransmuxingEvents.STATISTICS_INFO,\n            data: statInfo\n        };\n        self.postMessage(obj);\n    }\n\n    function onIOError(type, info) {\n        self.postMessage({\n            msg: TransmuxingEvents.IO_ERROR,\n            data: {\n                type: type,\n                info: info\n            }\n        });\n    }\n\n    function onDemuxError(type, info) {\n        self.postMessage({\n            msg: TransmuxingEvents.DEMUX_ERROR,\n            data: {\n                type: type,\n                info: info\n            }\n        });\n    }\n\n    function onRecommendSeekpoint(milliseconds) {\n        self.postMessage({\n            msg: TransmuxingEvents.RECOMMEND_SEEKPOINT,\n            data: milliseconds\n        });\n    }\n\n    function onLogcatCallback(type, str) {\n        self.postMessage({\n            msg: 'logcat_callback',\n            data: {\n                type: type,\n                logcat: str\n            }\n        });\n    }\n\n};\n\nexport default TransmuxingWorker;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const defaultConfig = {\n    enableWorker: false,\n    enableStashBuffer: true,\n    stashInitialSize: undefined,\n\n    isLive: false,\n\n    liveBufferLatencyChasing: false,\n    liveBufferLatencyMaxLatency: 1.5,\n    liveBufferLatencyMinRemain: 0.5,\n\n    lazyLoad: true,\n    lazyLoadMaxDuration: 3 * 60,\n    lazyLoadRecoverDuration: 30,\n    deferLoadAfterSourceOpen: true,\n\n    // autoCleanupSourceBuffer: default as false, leave unspecified\n    autoCleanupMaxBackwardDuration: 3 * 60,\n    autoCleanupMinBackwardDuration: 2 * 60,\n\n    statisticsInfoReportInterval: 600,\n\n    fixAudioTimestampGap: true,\n\n    accurateSeek: false,\n    seekType: 'range',  // [range, param, custom]\n    seekParamStart: 'bstart',\n    seekParamEnd: 'bend',\n    rangeLoadZeroStart: false,\n    customSeekHandler: undefined,\n    reuseRedirectedURL: false,\n    // referrerPolicy: leave as unspecified\n\n    headers: undefined,\n    customLoader: undefined\n};\n\nexport function createDefaultConfig() {\n    return Object.assign({}, defaultConfig);\n}","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IOController from '../io/io-controller.js';\nimport {createDefaultConfig} from '../config.js';\n\nclass Features {\n\n    static supportMSEH264Playback() {\n        return window.MediaSource &&\n               window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n\n    static supportMSEH265Playback() {\n        return window.MediaSource &&\n               window.MediaSource.isTypeSupported('video/mp4; codecs=\"hvc1.1.6.L93.B0\"');\n    }\n\n    static supportNetworkStreamIO() {\n        let ioctl = new IOController({}, createDefaultConfig());\n        let loaderType = ioctl.loaderType;\n        ioctl.destroy();\n        return loaderType == 'fetch-stream-loader' || loaderType == 'xhr-moz-chunked-loader';\n    }\n\n    static getNetworkLoaderTypeName() {\n        let ioctl = new IOController({}, createDefaultConfig());\n        let loaderType = ioctl.loaderType;\n        ioctl.destroy();\n        return loaderType;\n    }\n\n    static supportNativeMediaPlayback(mimeType) {\n        if (Features.videoElement == undefined) {\n            Features.videoElement = window.document.createElement('video');\n        }\n        let canPlay = Features.videoElement.canPlayType(mimeType);\n        return canPlay === 'probably' || canPlay == 'maybe';\n    }\n\n    static getFeatureList() {\n        let features = {\n            msePlayback: false,\n            mseLivePlayback: false,\n            mseH265Playback: false,\n            networkStreamIO: false,\n            networkLoaderName: '',\n            nativeMP4H264Playback: false,\n            nativeMP4H265Playback: false,\n            nativeWebmVP8Playback: false,\n            nativeWebmVP9Playback: false\n        };\n\n        features.msePlayback = Features.supportMSEH264Playback();\n        features.networkStreamIO = Features.supportNetworkStreamIO();\n        features.networkLoaderName = Features.getNetworkLoaderTypeName();\n        features.mseLivePlayback = features.msePlayback && features.networkStreamIO;\n        features.mseH265Playback = Features.supportMSEH265Playback();\n        features.nativeMP4H264Playback = Features.supportNativeMediaPlayback('video/mp4; codecs=\"avc1.42001E, mp4a.40.2\"');\n        features.nativeMP4H265Playback = Features.supportNativeMediaPlayback('video/mp4; codecs=\"hvc1.1.6.L93.B0\"');\n        features.nativeWebmVP8Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp8.0, vorbis\"');\n        features.nativeWebmVP9Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp9\"');\n\n        return features;\n    }\n\n}\n\nexport default Features;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst PlayerEvents = {\n    ERROR: 'error',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    METADATA_ARRIVED: 'metadata_arrived',\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\n    TIMED_ID3_METADATA_ARRIVED: 'timed_id3_metadata_arrived',\n    SCTE35_METADATA_ARRIVED: 'scte35_metadata_arrived',\n    PES_PRIVATE_DATA_DESCRIPTOR: 'pes_private_data_descriptor',\n    PES_PRIVATE_DATA_ARRIVED: 'pes_private_data_arrived',\n    STATISTICS_INFO: 'statistics_info'\n};\n\nexport default PlayerEvents;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport work from 'webworkify-webpack';\nimport Log from '../utils/logger.js';\nimport LoggingControl from '../utils/logging-control.js';\nimport TransmuxingController from './transmuxing-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\nimport TransmuxingWorker from './transmuxing-worker.js';\nimport MediaInfo from './media-info.js';\n\nclass Transmuxer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = 'Transmuxer';\n        this._emitter = new EventEmitter();\n\n        if (config.enableWorker && typeof (Worker) !== 'undefined') {\n            try {\n                this._worker = work(require.resolve('./transmuxing-worker'));\n                this._workerDestroying = false;\n                this._worker.addEventListener('message', this._onWorkerMessage.bind(this));\n                this._worker.postMessage({cmd: 'init', param: [mediaDataSource, config]});\n                this.e = {\n                    onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)\n                };\n                LoggingControl.registerListener(this.e.onLoggingConfigChanged);\n                this._worker.postMessage({cmd: 'logging_config', param: LoggingControl.getConfig()});\n            } catch (error) {\n                Log.e(this.TAG, 'Error while initialize transmuxing worker, fallback to inline transmuxing');\n                this._worker = null;\n                this._controller = new TransmuxingController(mediaDataSource, config);\n            }\n        } else {\n            this._controller = new TransmuxingController(mediaDataSource, config);\n        }\n\n        if (this._controller) {\n            let ctl = this._controller;\n            ctl.on(TransmuxingEvents.IO_ERROR, this._onIOError.bind(this));\n            ctl.on(TransmuxingEvents.DEMUX_ERROR, this._onDemuxError.bind(this));\n            ctl.on(TransmuxingEvents.INIT_SEGMENT, this._onInitSegment.bind(this));\n            ctl.on(TransmuxingEvents.MEDIA_SEGMENT, this._onMediaSegment.bind(this));\n            ctl.on(TransmuxingEvents.LOADING_COMPLETE, this._onLoadingComplete.bind(this));\n            ctl.on(TransmuxingEvents.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this));\n            ctl.on(TransmuxingEvents.MEDIA_INFO, this._onMediaInfo.bind(this));\n            ctl.on(TransmuxingEvents.METADATA_ARRIVED, this._onMetaDataArrived.bind(this));\n            ctl.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this));\n            ctl.on(TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED, this._onTimedID3MetadataArrived.bind(this));\n            ctl.on(TransmuxingEvents.SCTE35_METADATA_ARRIVED, this._onSCTE35MetadataArrived.bind(this));\n            ctl.on(TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR, this._onPESPrivateDataDescriptor.bind(this));\n            ctl.on(TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED, this._onPESPrivateDataArrived.bind(this));\n            ctl.on(TransmuxingEvents.STATISTICS_INFO, this._onStatisticsInfo.bind(this));\n            ctl.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this));\n        }\n    }\n\n    destroy() {\n        if (this._worker) {\n            if (!this._workerDestroying) {\n                this._workerDestroying = true;\n                this._worker.postMessage({cmd: 'destroy'});\n                LoggingControl.removeListener(this.e.onLoggingConfigChanged);\n                this.e = null;\n            }\n        } else {\n            this._controller.destroy();\n            this._controller = null;\n        }\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    hasWorker() {\n        return this._worker != null;\n    }\n\n    open() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'start'});\n        } else {\n            this._controller.start();\n        }\n    }\n\n    close() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'stop'});\n        } else {\n            this._controller.stop();\n        }\n    }\n\n    seek(milliseconds) {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'seek', param: milliseconds});\n        } else {\n            this._controller.seek(milliseconds);\n        }\n    }\n\n    pause() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'pause'});\n        } else {\n            this._controller.pause();\n        }\n    }\n\n    resume() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'resume'});\n        } else {\n            this._controller.resume();\n        }\n    }\n\n    _onInitSegment(type, initSegment) {\n        // do async invoke\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\n        });\n    }\n\n    _onMediaSegment(type, mediaSegment) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\n        });\n    }\n\n    _onLoadingComplete() {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\n        });\n    }\n\n    _onRecoveredEarlyEof() {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\n        });\n    }\n\n    _onMediaInfo(mediaInfo) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.MEDIA_INFO, mediaInfo);\n        });\n    }\n\n    _onMetaDataArrived(metadata) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.METADATA_ARRIVED, metadata);\n        });\n    }\n\n    _onScriptDataArrived(data) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.SCRIPTDATA_ARRIVED, data);\n        });\n    }\n\n    _onTimedID3MetadataArrived (data) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED, data);\n        })\n    }\n\n    _onSCTE35MetadataArrived (data) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.SCTE35_METADATA_ARRIVED, data);\n        })\n    }\n\n    _onPESPrivateDataDescriptor(data) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR, data);\n        });\n    }\n\n    _onPESPrivateDataArrived(data) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED, data);\n        });\n    }\n\n    _onStatisticsInfo(statisticsInfo) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, statisticsInfo);\n        });\n    }\n\n    _onIOError(type, info) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\n        });\n    }\n\n    _onDemuxError(type, info) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\n        });\n    }\n\n    _onRecommendSeekpoint(milliseconds) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, milliseconds);\n        });\n    }\n\n    _onLoggingConfigChanged(config) {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'logging_config', param: config});\n        }\n    }\n\n    _onWorkerMessage(e) {\n        let message = e.data;\n        let data = message.data;\n\n        if (message.msg === 'destroyed' || this._workerDestroying) {\n            this._workerDestroying = false;\n            this._worker.terminate();\n            this._worker = null;\n            return;\n        }\n\n        switch (message.msg) {\n            case TransmuxingEvents.INIT_SEGMENT:\n            case TransmuxingEvents.MEDIA_SEGMENT:\n                this._emitter.emit(message.msg, data.type, data.data);\n                break;\n            case TransmuxingEvents.LOADING_COMPLETE:\n            case TransmuxingEvents.RECOVERED_EARLY_EOF:\n                this._emitter.emit(message.msg);\n                break;\n            case TransmuxingEvents.MEDIA_INFO:\n                Object.setPrototypeOf(data, MediaInfo.prototype);\n                this._emitter.emit(message.msg, data);\n                break;\n            case TransmuxingEvents.METADATA_ARRIVED:\n            case TransmuxingEvents.SCRIPTDATA_ARRIVED:\n            case TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED:\n            case TransmuxingEvents.SCTE35_METADATA_ARRIVED:\n            case TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR:\n            case TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED:\n            case TransmuxingEvents.STATISTICS_INFO:\n                this._emitter.emit(message.msg, data);\n                break;\n            case TransmuxingEvents.IO_ERROR:\n            case TransmuxingEvents.DEMUX_ERROR:\n                this._emitter.emit(message.msg, data.type, data.info);\n                break;\n            case TransmuxingEvents.RECOMMEND_SEEKPOINT:\n                this._emitter.emit(message.msg, data);\n                break;\n            case 'logcat_callback':\n                Log.emitter.emit('log', data.type, data.logcat);\n                break;\n            default:\n                break;\n        }\n    }\n\n}\n\nexport default Transmuxer;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst MSEEvents = {\n    ERROR: 'error',\n    SOURCE_OPEN: 'source_open',\n    UPDATE_END: 'update_end',\n    BUFFER_FULL: 'buffer_full'\n};\n\nexport default MSEEvents;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport MSEEvents from './mse-events.js';\nimport {SampleInfo, IDRSampleList} from './media-segment-info.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\n// Media Source Extensions controller\nclass MSEController {\n\n    constructor(config) {\n        this.TAG = 'MSEController';\n\n        this._config = config;\n        this._emitter = new EventEmitter();\n\n        if (this._config.isLive && this._config.autoCleanupSourceBuffer == undefined) {\n            // For live stream, do auto cleanup by default\n            this._config.autoCleanupSourceBuffer = true;\n        }\n\n        this.e = {\n            onSourceOpen: this._onSourceOpen.bind(this),\n            onSourceEnded: this._onSourceEnded.bind(this),\n            onSourceClose: this._onSourceClose.bind(this),\n            onSourceBufferError: this._onSourceBufferError.bind(this),\n            onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)\n        };\n\n        this._mediaSource = null;\n        this._mediaSourceObjectURL = null;\n        this._mediaElement = null;\n\n        this._isBufferFull = false;\n        this._hasPendingEos = false;\n\n        this._requireSetMediaDuration = false;\n        this._pendingMediaDuration = 0;\n\n        this._pendingSourceBufferInit = [];\n        this._mimeTypes = {\n            video: null,\n            audio: null\n        };\n        this._sourceBuffers = {\n            video: null,\n            audio: null\n        };\n        this._lastInitSegments = {\n            video: null,\n            audio: null\n        };\n        this._pendingSegments = {\n            video: [],\n            audio: []\n        };\n        this._pendingRemoveRanges = {\n            video: [],\n            audio: []\n        };\n        this._idrList = new IDRSampleList();\n    }\n\n    destroy() {\n        if (this._mediaElement || this._mediaSource) {\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        if (this._mediaSource) {\n            throw new IllegalStateException('MediaSource has been attached to an HTMLMediaElement!');\n        }\n        let ms = this._mediaSource = new window.MediaSource();\n        ms.addEventListener('sourceopen', this.e.onSourceOpen);\n        ms.addEventListener('sourceended', this.e.onSourceEnded);\n        ms.addEventListener('sourceclose', this.e.onSourceClose);\n\n        this._mediaElement = mediaElement;\n        this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource);\n        mediaElement.src = this._mediaSourceObjectURL;\n    }\n\n    detachMediaElement() {\n        if (this._mediaSource) {\n            let ms = this._mediaSource;\n            for (let type in this._sourceBuffers) {\n                // pending segments should be discard\n                let ps = this._pendingSegments[type];\n                ps.splice(0, ps.length);\n                this._pendingSegments[type] = null;\n                this._pendingRemoveRanges[type] = null;\n                this._lastInitSegments[type] = null;\n\n                // remove all sourcebuffers\n                let sb = this._sourceBuffers[type];\n                if (sb) {\n                    if (ms.readyState !== 'closed') {\n                        // ms edge can throw an error: Unexpected call to method or property access\n                        try {\n                            ms.removeSourceBuffer(sb);\n                        } catch (error) {\n                            Log.e(this.TAG, error.message);\n                        }\n                        sb.removeEventListener('error', this.e.onSourceBufferError);\n                        sb.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n                    }\n                    this._mimeTypes[type] = null;\n                    this._sourceBuffers[type] = null;\n                }\n            }\n            if (ms.readyState === 'open') {\n                try {\n                    ms.endOfStream();\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                }\n            }\n            ms.removeEventListener('sourceopen', this.e.onSourceOpen);\n            ms.removeEventListener('sourceended', this.e.onSourceEnded);\n            ms.removeEventListener('sourceclose', this.e.onSourceClose);\n            this._pendingSourceBufferInit = [];\n            this._isBufferFull = false;\n            this._idrList.clear();\n            this._mediaSource = null;\n        }\n\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n            this._mediaElement = null;\n        }\n        if (this._mediaSourceObjectURL) {\n            window.URL.revokeObjectURL(this._mediaSourceObjectURL);\n            this._mediaSourceObjectURL = null;\n        }\n    }\n\n    appendInitSegment(initSegment, deferred) {\n        if (!this._mediaSource || this._mediaSource.readyState !== 'open') {\n            // sourcebuffer creation requires mediaSource.readyState === 'open'\n            // so we defer the sourcebuffer creation, until sourceopen event triggered\n            this._pendingSourceBufferInit.push(initSegment);\n            // make sure that this InitSegment is in the front of pending segments queue\n            this._pendingSegments[initSegment.type].push(initSegment);\n            return;\n        }\n\n        let is = initSegment;\n        let mimeType = `${is.container}`;\n        if (is.codec && is.codec.length > 0) {\n            mimeType += `;codecs=${is.codec}`;\n        }\n\n        let firstInitSegment = false;\n\n        Log.v(this.TAG, 'Received Initialization Segment, mimeType: ' + mimeType);\n        this._lastInitSegments[is.type] = is;\n\n        if (mimeType !== this._mimeTypes[is.type]) {\n            if (!this._mimeTypes[is.type]) {  // empty, first chance create sourcebuffer\n                firstInitSegment = true;\n                try {\n                    let sb = this._sourceBuffers[is.type] = this._mediaSource.addSourceBuffer(mimeType);\n                    sb.addEventListener('error', this.e.onSourceBufferError);\n                    sb.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                    this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n                    return;\n                }\n            } else {\n                Log.v(this.TAG, `Notice: ${is.type} mimeType changed, origin: ${this._mimeTypes[is.type]}, target: ${mimeType}`);\n            }\n            this._mimeTypes[is.type] = mimeType;\n        }\n\n        if (!deferred) {\n            // deferred means this InitSegment has been pushed to pendingSegments queue\n            this._pendingSegments[is.type].push(is);\n        }\n        if (!firstInitSegment) {  // append immediately only if init segment in subsequence\n            if (this._sourceBuffers[is.type] && !this._sourceBuffers[is.type].updating) {\n                this._doAppendSegments();\n            }\n        }\n        if (Browser.safari && is.container === 'audio/mpeg' && is.mediaDuration > 0) {\n            // 'audio/mpeg' track under Safari may cause MediaElement's duration to be NaN\n            // Manually correct MediaSource.duration to make progress bar seekable, and report right duration\n            this._requireSetMediaDuration = true;\n            this._pendingMediaDuration = is.mediaDuration / 1000;  // in seconds\n            this._updateMediaSourceDuration();\n        }\n    }\n\n    appendMediaSegment(mediaSegment) {\n        let ms = mediaSegment;\n        this._pendingSegments[ms.type].push(ms);\n\n        if (this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer()) {\n            this._doCleanupSourceBuffer();\n        }\n\n        let sb = this._sourceBuffers[ms.type];\n        if (sb && !sb.updating && !this._hasPendingRemoveRanges()) {\n            this._doAppendSegments();\n        }\n    }\n\n    seek(seconds) {\n        // remove all appended buffers\n        for (let type in this._sourceBuffers) {\n            if (!this._sourceBuffers[type]) {\n                continue;\n            }\n\n            // abort current buffer append algorithm\n            let sb = this._sourceBuffers[type];\n            if (this._mediaSource.readyState === 'open') {\n                try {\n                    // If range removal algorithm is running, InvalidStateError will be throwed\n                    // Ignore it.\n                    sb.abort();\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                }\n            }\n\n            // IDRList should be clear\n            this._idrList.clear();\n\n            // pending segments should be discard\n            let ps = this._pendingSegments[type];\n            ps.splice(0, ps.length);\n\n            if (this._mediaSource.readyState === 'closed') {\n                // Parent MediaSource object has been detached from HTMLMediaElement\n                continue;\n            }\n\n            // record ranges to be remove from SourceBuffer\n            for (let i = 0; i < sb.buffered.length; i++) {\n                let start = sb.buffered.start(i);\n                let end = sb.buffered.end(i);\n                this._pendingRemoveRanges[type].push({start, end});\n            }\n\n            // if sb is not updating, let's remove ranges now!\n            if (!sb.updating) {\n                this._doRemoveRanges();\n            }\n\n            // Safari 10 may get InvalidStateError in the later appendBuffer() after SourceBuffer.remove() call\n            // Internal parser's state may be invalid at this time. Re-append last InitSegment to workaround.\n            // Related issue: https://bugs.webkit.org/show_bug.cgi?id=159230\n            if (Browser.safari) {\n                let lastInitSegment = this._lastInitSegments[type];\n                if (lastInitSegment) {\n                    this._pendingSegments[type].push(lastInitSegment);\n                    if (!sb.updating) {\n                        this._doAppendSegments();\n                    }\n                }\n            }\n        }\n    }\n\n    endOfStream() {\n        let ms = this._mediaSource;\n        let sb = this._sourceBuffers;\n        if (!ms || ms.readyState !== 'open') {\n            if (ms && ms.readyState === 'closed' && this._hasPendingSegments()) {\n                // If MediaSource hasn't turned into open state, and there're pending segments\n                // Mark pending endOfStream, defer call until all pending segments appended complete\n                this._hasPendingEos = true;\n            }\n            return;\n        }\n        if (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {\n            // If any sourcebuffer is updating, defer endOfStream operation\n            // See _onSourceBufferUpdateEnd()\n            this._hasPendingEos = true;\n        } else {\n            this._hasPendingEos = false;\n            // Notify media data loading complete\n            // This is helpful for correcting total duration to match last media segment\n            // Otherwise MediaElement's ended event may not be triggered\n            ms.endOfStream();\n        }\n    }\n\n    getNearestKeyframe(dts) {\n        return this._idrList.getLastSyncPointBeforeDts(dts);\n    }\n\n    _needCleanupSourceBuffer() {\n        if (!this._config.autoCleanupSourceBuffer) {\n            return false;\n        }\n\n        let currentTime = this._mediaElement.currentTime;\n\n        for (let type in this._sourceBuffers) {\n            let sb = this._sourceBuffers[type];\n            if (sb) {\n                let buffered = sb.buffered;\n                if (buffered.length >= 1) {\n                    if (currentTime - buffered.start(0) >= this._config.autoCleanupMaxBackwardDuration) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _doCleanupSourceBuffer() {\n        let currentTime = this._mediaElement.currentTime;\n\n        for (let type in this._sourceBuffers) {\n            let sb = this._sourceBuffers[type];\n            if (sb) {\n                let buffered = sb.buffered;\n                let doRemove = false;\n\n                for (let i = 0; i < buffered.length; i++) {\n                    let start = buffered.start(i);\n                    let end = buffered.end(i);\n\n                    if (start <= currentTime && currentTime < end + 3) {  // padding 3 seconds\n                        if (currentTime - start >= this._config.autoCleanupMaxBackwardDuration) {\n                            doRemove = true;\n                            let removeEnd = currentTime - this._config.autoCleanupMinBackwardDuration;\n                            this._pendingRemoveRanges[type].push({start: start, end: removeEnd});\n                        }\n                    } else if (end < currentTime) {\n                        doRemove = true;\n                        this._pendingRemoveRanges[type].push({start: start, end: end});\n                    }\n                }\n\n                if (doRemove && !sb.updating) {\n                    this._doRemoveRanges();\n                }\n            }\n        }\n    }\n\n    _updateMediaSourceDuration() {\n        let sb = this._sourceBuffers;\n        if (this._mediaElement.readyState === 0 || this._mediaSource.readyState !== 'open') {\n            return;\n        }\n        if ((sb.video && sb.video.updating) || (sb.audio && sb.audio.updating)) {\n            return;\n        }\n\n        let current = this._mediaSource.duration;\n        let target = this._pendingMediaDuration;\n\n        if (target > 0 && (isNaN(current) || target > current)) {\n            Log.v(this.TAG, `Update MediaSource duration from ${current} to ${target}`);\n            this._mediaSource.duration = target;\n        }\n\n        this._requireSetMediaDuration = false;\n        this._pendingMediaDuration = 0;\n    }\n\n    _doRemoveRanges() {\n        for (let type in this._pendingRemoveRanges) {\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n                continue;\n            }\n            let sb = this._sourceBuffers[type];\n            let ranges = this._pendingRemoveRanges[type];\n            while (ranges.length && !sb.updating) {\n                let range = ranges.shift();\n                sb.remove(range.start, range.end);\n            }\n        }\n    }\n\n    _doAppendSegments() {\n        let pendingSegments = this._pendingSegments;\n\n        for (let type in pendingSegments) {\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n                continue;\n            }\n\n            if (pendingSegments[type].length > 0) {\n                let segment = pendingSegments[type].shift();\n\n                if (segment.timestampOffset) {\n                    // For MPEG audio stream in MSE, if unbuffered-seeking occurred\n                    // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.\n                    let currentOffset = this._sourceBuffers[type].timestampOffset;\n                    let targetOffset = segment.timestampOffset / 1000;  // in seconds\n\n                    let delta = Math.abs(currentOffset - targetOffset);\n                    if (delta > 0.1) {  // If time delta > 100ms\n                        Log.v(this.TAG, `Update MPEG audio timestampOffset from ${currentOffset} to ${targetOffset}`);\n                        this._sourceBuffers[type].timestampOffset = targetOffset;\n                    }\n                    delete segment.timestampOffset;\n                }\n\n                if (!segment.data || segment.data.byteLength === 0) {\n                    // Ignore empty buffer\n                    continue;\n                }\n\n                try {\n                    this._sourceBuffers[type].appendBuffer(segment.data);\n                    this._isBufferFull = false;\n                    if (type === 'video' && segment.hasOwnProperty('info')) {\n                        this._idrList.appendArray(segment.info.syncPoints);\n                    }\n                } catch (error) {\n                    this._pendingSegments[type].unshift(segment);\n                    if (error.code === 22) {  // QuotaExceededError\n                        /* Notice that FireFox may not throw QuotaExceededError if SourceBuffer is full\n                         * Currently we can only do lazy-load to avoid SourceBuffer become scattered.\n                         * SourceBuffer eviction policy may be changed in future version of FireFox.\n                         *\n                         * Related issues:\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1279885\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1280023\n                         */\n\n                        // report buffer full, abort network IO\n                        if (!this._isBufferFull) {\n                            this._emitter.emit(MSEEvents.BUFFER_FULL);\n                        }\n                        this._isBufferFull = true;\n                    } else {\n                        Log.e(this.TAG, error.message);\n                        this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n                    }\n                }\n            }\n        }\n    }\n\n    _onSourceOpen() {\n        Log.v(this.TAG, 'MediaSource onSourceOpen');\n        this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n        // deferred sourcebuffer creation / initialization\n        if (this._pendingSourceBufferInit.length > 0) {\n            let pendings = this._pendingSourceBufferInit;\n            while (pendings.length) {\n                let segment = pendings.shift();\n                this.appendInitSegment(segment, true);\n            }\n        }\n        // there may be some pending media segments, append them\n        if (this._hasPendingSegments()) {\n            this._doAppendSegments();\n        }\n        this._emitter.emit(MSEEvents.SOURCE_OPEN);\n    }\n\n    _onSourceEnded() {\n        // fired on endOfStream\n        Log.v(this.TAG, 'MediaSource onSourceEnded');\n    }\n\n    _onSourceClose() {\n        // fired on detaching from media element\n        Log.v(this.TAG, 'MediaSource onSourceClose');\n        if (this._mediaSource && this.e != null) {\n            this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n            this._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded);\n            this._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose);\n        }\n    }\n\n    _hasPendingSegments() {\n        let ps = this._pendingSegments;\n        return ps.video.length > 0 || ps.audio.length > 0;\n    }\n\n    _hasPendingRemoveRanges() {\n        let prr = this._pendingRemoveRanges;\n        return prr.video.length > 0 || prr.audio.length > 0;\n    }\n\n    _onSourceBufferUpdateEnd() {\n        if (this._requireSetMediaDuration) {\n            this._updateMediaSourceDuration();\n        } else if (this._hasPendingRemoveRanges()) {\n            this._doRemoveRanges();\n        } else if (this._hasPendingSegments()) {\n            this._doAppendSegments();\n        } else if (this._hasPendingEos) {\n            this.endOfStream();\n        }\n        this._emitter.emit(MSEEvents.UPDATE_END);\n    }\n\n    _onSourceBufferError(e) {\n        Log.e(this.TAG, `SourceBuffer Error: ${e}`);\n        // this error might not always be fatal, just ignore it\n    }\n\n}\n\nexport default MSEController;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LoaderErrors} from '../io/loader.js';\nimport DemuxErrors from '../demux/demux-errors.js';\n\nexport const ErrorTypes = {\n    NETWORK_ERROR: 'NetworkError',\n    MEDIA_ERROR: 'MediaError',\n    OTHER_ERROR: 'OtherError'\n};\n\nexport const ErrorDetails = {\n    NETWORK_EXCEPTION: LoaderErrors.EXCEPTION,\n    NETWORK_STATUS_CODE_INVALID: LoaderErrors.HTTP_STATUS_CODE_INVALID,\n    NETWORK_TIMEOUT: LoaderErrors.CONNECTING_TIMEOUT,\n    NETWORK_UNRECOVERABLE_EARLY_EOF: LoaderErrors.UNRECOVERABLE_EARLY_EOF,\n\n    MEDIA_MSE_ERROR: 'MediaMSEError',\n\n    MEDIA_FORMAT_ERROR: DemuxErrors.FORMAT_ERROR,\n    MEDIA_FORMAT_UNSUPPORTED: DemuxErrors.FORMAT_UNSUPPORTED,\n    MEDIA_CODEC_UNSUPPORTED: DemuxErrors.CODEC_UNSUPPORTED\n};","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport PlayerEvents from './player-events.js';\nimport Transmuxer from '../core/transmuxer.js';\nimport TransmuxingEvents from '../core/transmuxing-events.js';\nimport MSEController from '../core/mse-controller.js';\nimport MSEEvents from '../core/mse-events.js';\nimport {ErrorTypes, ErrorDetails} from './player-errors.js';\nimport {createDefaultConfig} from '../config.js';\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\n\nclass MSEPlayer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = 'MSEPlayer';\n        this._type = 'MSEPlayer';\n        this._emitter = new EventEmitter();\n\n        this._config = createDefaultConfig();\n        if (typeof config === 'object') {\n            Object.assign(this._config, config);\n        }\n\n        let typeLowerCase = mediaDataSource.type.toLowerCase();\n        if (typeLowerCase !== 'mse'\n                && typeLowerCase !== 'mpegts'\n                && typeLowerCase !== 'm2ts'\n                && typeLowerCase !== 'flv') {\n            throw new InvalidArgumentException('MSEPlayer requires an mpegts/m2ts/flv MediaDataSource input!');\n        }\n\n        if (mediaDataSource.isLive === true) {\n            this._config.isLive = true;\n        }\n\n        this.e = {\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),\n            onvSeeking: this._onvSeeking.bind(this),\n            onvCanPlay: this._onvCanPlay.bind(this),\n            onvStalled: this._onvStalled.bind(this),\n            onvProgress: this._onvProgress.bind(this)\n        };\n\n        if (self.performance && self.performance.now) {\n            this._now = self.performance.now.bind(self.performance);\n        } else {\n            this._now = Date.now;\n        }\n\n        this._pendingSeekTime = null;  // in seconds\n        this._requestSetTime = false;\n        this._seekpointRecord = null;\n        this._progressChecker = null;\n\n        this._mediaDataSource = mediaDataSource;\n        this._mediaElement = null;\n        this._msectl = null;\n        this._transmuxer = null;\n\n        this._mseSourceOpened = false;\n        this._hasPendingLoad = false;\n        this._receivedCanPlay = false;\n\n        this._mediaInfo = null;\n        this._statisticsInfo = null;\n\n        let chromeNeedIDRFix = (Browser.chrome &&\n                               (Browser.version.major < 50 ||\n                               (Browser.version.major === 50 && Browser.version.build < 2661)));\n        this._alwaysSeekKeyframe = (chromeNeedIDRFix || Browser.msedge || Browser.msie) ? true : false;\n\n        if (this._alwaysSeekKeyframe) {\n            this._config.accurateSeek = false;\n        }\n    }\n\n    destroy() {\n        if (this._progressChecker != null) {\n            window.clearInterval(this._progressChecker);\n            this._progressChecker = null;\n        }\n        if (this._transmuxer) {\n            this.unload();\n        }\n        if (this._mediaElement) {\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._mediaDataSource = null;\n\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        if (event === PlayerEvents.MEDIA_INFO) {\n            if (this._mediaInfo != null) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n                });\n            }\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\n            if (this._statisticsInfo != null) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n                });\n            }\n        }\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        this._mediaElement = mediaElement;\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n        mediaElement.addEventListener('seeking', this.e.onvSeeking);\n        mediaElement.addEventListener('canplay', this.e.onvCanPlay);\n        mediaElement.addEventListener('stalled', this.e.onvStalled);\n        mediaElement.addEventListener('progress', this.e.onvProgress);\n\n        this._msectl = new MSEController(this._config);\n\n        this._msectl.on(MSEEvents.UPDATE_END, this._onmseUpdateEnd.bind(this));\n        this._msectl.on(MSEEvents.BUFFER_FULL, this._onmseBufferFull.bind(this));\n        this._msectl.on(MSEEvents.SOURCE_OPEN, () => {\n            this._mseSourceOpened = true;\n            if (this._hasPendingLoad) {\n                this._hasPendingLoad = false;\n                this.load();\n            }\n        });\n        this._msectl.on(MSEEvents.ERROR, (info) => {\n            this._emitter.emit(PlayerEvents.ERROR,\n                               ErrorTypes.MEDIA_ERROR,\n                               ErrorDetails.MEDIA_MSE_ERROR,\n                               info\n            );\n        });\n\n        this._msectl.attachMediaElement(mediaElement);\n\n        if (this._pendingSeekTime != null) {\n            try {\n                mediaElement.currentTime = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n            } catch (e) {\n                // IE11 may throw InvalidStateError if readyState === 0\n                // We can defer set currentTime operation after loadedmetadata\n            }\n        }\n    }\n\n    detachMediaElement() {\n        if (this._mediaElement) {\n            this._msectl.detachMediaElement();\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n            this._mediaElement.removeEventListener('seeking', this.e.onvSeeking);\n            this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\n            this._mediaElement.removeEventListener('stalled', this.e.onvStalled);\n            this._mediaElement.removeEventListener('progress', this.e.onvProgress);\n            this._mediaElement = null;\n        }\n        if (this._msectl) {\n            this._msectl.destroy();\n            this._msectl = null;\n        }\n    }\n\n    load() {\n        if (!this._mediaElement) {\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\n        }\n        if (this._transmuxer) {\n            throw new IllegalStateException('MSEPlayer.load() has been called, please call unload() first!');\n        }\n        if (this._hasPendingLoad) {\n            return;\n        }\n\n        if (this._config.deferLoadAfterSourceOpen && this._mseSourceOpened === false) {\n            this._hasPendingLoad = true;\n            return;\n        }\n\n        if (this._mediaElement.readyState > 0) {\n            this._requestSetTime = true;\n            // IE11 may throw InvalidStateError if readyState === 0\n            this._mediaElement.currentTime = 0;\n        }\n\n        this._transmuxer = new Transmuxer(this._mediaDataSource, this._config);\n\n        this._transmuxer.on(TransmuxingEvents.INIT_SEGMENT, (type, is) => {\n            this._msectl.appendInitSegment(is);\n        });\n        this._transmuxer.on(TransmuxingEvents.MEDIA_SEGMENT, (type, ms) => {\n            this._msectl.appendMediaSegment(ms);\n\n            // lazyLoad check\n            if (this._config.lazyLoad && !this._config.isLive) {\n                let currentTime = this._mediaElement.currentTime;\n                if (ms.info.endDts >= (currentTime + this._config.lazyLoadMaxDuration) * 1000) {\n                    if (this._progressChecker == null) {\n                        Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\n                        this._suspendTransmuxer();\n                    }\n                }\n            }\n        });\n        this._transmuxer.on(TransmuxingEvents.LOADING_COMPLETE, () => {\n            this._msectl.endOfStream();\n            this._emitter.emit(PlayerEvents.LOADING_COMPLETE);\n        });\n        this._transmuxer.on(TransmuxingEvents.RECOVERED_EARLY_EOF, () => {\n            this._emitter.emit(PlayerEvents.RECOVERED_EARLY_EOF);\n        });\n        this._transmuxer.on(TransmuxingEvents.IO_ERROR, (detail, info) => {\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.NETWORK_ERROR, detail, info);\n        });\n        this._transmuxer.on(TransmuxingEvents.DEMUX_ERROR, (detail, info) => {\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.MEDIA_ERROR, detail, {code: -1, msg: info});\n        });\n        this._transmuxer.on(TransmuxingEvents.MEDIA_INFO, (mediaInfo) => {\n            this._mediaInfo = mediaInfo;\n            this._emitter.emit(PlayerEvents.MEDIA_INFO, Object.assign({}, mediaInfo));\n        });\n        this._transmuxer.on(TransmuxingEvents.METADATA_ARRIVED, (metadata) => {\n            this._emitter.emit(PlayerEvents.METADATA_ARRIVED, metadata);\n        });\n        this._transmuxer.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, (data) => {\n            this._emitter.emit(PlayerEvents.SCRIPTDATA_ARRIVED, data);\n        });\n        this._transmuxer.on(TransmuxingEvents.TIMED_ID3_METADATA_ARRIVED, (timed_id3_metadata) => {\n            this._emitter.emit(PlayerEvents.TIMED_ID3_METADATA_ARRIVED, timed_id3_metadata);\n        });\n        this._transmuxer.on(TransmuxingEvents.SCTE35_METADATA_ARRIVED, (scte35_metadata) => {\n            this._emitter.emit(PlayerEvents.SCTE35_METADATA_ARRIVED, scte35_metadata);\n        });\n        this._transmuxer.on(TransmuxingEvents.PES_PRIVATE_DATA_DESCRIPTOR, (descriptor) => {\n            this._emitter.emit(PlayerEvents.PES_PRIVATE_DATA_DESCRIPTOR, descriptor);\n        });\n        this._transmuxer.on(TransmuxingEvents.PES_PRIVATE_DATA_ARRIVED, (private_data) => {\n            this._emitter.emit(PlayerEvents.PES_PRIVATE_DATA_ARRIVED, private_data);\n        });\n        this._transmuxer.on(TransmuxingEvents.STATISTICS_INFO, (statInfo) => {\n            this._statisticsInfo = this._fillStatisticsInfo(statInfo);\n            this._emitter.emit(PlayerEvents.STATISTICS_INFO, Object.assign({}, this._statisticsInfo));\n        });\n        this._transmuxer.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, (milliseconds) => {\n            if (this._mediaElement && !this._config.accurateSeek) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = milliseconds / 1000;\n            }\n        });\n\n        this._transmuxer.open();\n    }\n\n    unload() {\n        if (this._mediaElement) {\n            this._mediaElement.pause();\n        }\n        if (this._msectl) {\n            this._msectl.seek(0);\n        }\n        if (this._transmuxer) {\n            this._transmuxer.close();\n            this._transmuxer.destroy();\n            this._transmuxer = null;\n        }\n    }\n\n    play() {\n        return this._mediaElement.play();\n    }\n\n    pause() {\n        this._mediaElement.pause();\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get buffered() {\n        return this._mediaElement.buffered;\n    }\n\n    get duration() {\n        return this._mediaElement.duration;\n    }\n\n    get volume() {\n        return this._mediaElement.volume;\n    }\n\n    set volume(value) {\n        this._mediaElement.volume = value;\n    }\n\n    get muted() {\n        return this._mediaElement.muted;\n    }\n\n    set muted(muted) {\n        this._mediaElement.muted = muted;\n    }\n\n    get currentTime() {\n        if (this._mediaElement) {\n            return this._mediaElement.currentTime;\n        }\n        return 0;\n    }\n\n    set currentTime(seconds) {\n        if (this._mediaElement) {\n            this._internalSeek(seconds);\n        } else {\n            this._pendingSeekTime = seconds;\n        }\n    }\n\n    get mediaInfo() {\n        return Object.assign({}, this._mediaInfo);\n    }\n\n    get statisticsInfo() {\n        if (this._statisticsInfo == null) {\n            this._statisticsInfo = {};\n        }\n        this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo);\n        return Object.assign({}, this._statisticsInfo);\n    }\n\n    _fillStatisticsInfo(statInfo) {\n        statInfo.playerType = this._type;\n\n        if (!(this._mediaElement instanceof HTMLVideoElement)) {\n            return statInfo;\n        }\n\n        let hasQualityInfo = true;\n        let decoded = 0;\n        let dropped = 0;\n\n        if (this._mediaElement.getVideoPlaybackQuality) {\n            let quality = this._mediaElement.getVideoPlaybackQuality();\n            decoded = quality.totalVideoFrames;\n            dropped = quality.droppedVideoFrames;\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\n            decoded = this._mediaElement.webkitDecodedFrameCount;\n            dropped = this._mediaElement.webkitDroppedFrameCount;\n        } else {\n            hasQualityInfo = false;\n        }\n\n        if (hasQualityInfo) {\n            statInfo.decodedFrames = decoded;\n            statInfo.droppedFrames = dropped;\n        }\n\n        return statInfo;\n    }\n\n    _onmseUpdateEnd() {\n        let buffered = this._mediaElement.buffered;\n        let currentTime = this._mediaElement.currentTime;\n\n        if (this._config.isLive\n                && this._config.liveBufferLatencyChasing\n                && buffered.length > 0\n                && !this._mediaElement.paused) {\n            let buffered_end = buffered.end(buffered.length - 1);\n            if (buffered_end > this._config.liveBufferLatencyMaxLatency) {\n                // Ensure there's enough buffered data\n                if (buffered_end - currentTime > this._config.liveBufferLatencyMaxLatency) {\n                    // if remained data duration has larger than config.liveBufferLatencyMaxLatency\n                    let target_time = buffered_end - this._config.liveBufferLatencyMinRemain;\n                    this.currentTime = target_time;\n                }\n            }\n        }\n\n        if (!this._config.lazyLoad || this._config.isLive) {\n            return;\n        }\n\n        let currentRangeStart = 0;\n        let currentRangeEnd = 0;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let start = buffered.start(i);\n            let end = buffered.end(i);\n            if (start <= currentTime && currentTime < end) {\n                currentRangeStart = start;\n                currentRangeEnd = end;\n                break;\n            }\n        }\n\n        if (currentRangeEnd >= currentTime + this._config.lazyLoadMaxDuration && this._progressChecker == null) {\n            Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\n            this._suspendTransmuxer();\n        }\n    }\n\n    _onmseBufferFull() {\n        Log.v(this.TAG, 'MSE SourceBuffer is full, suspend transmuxing task');\n        if (this._progressChecker == null) {\n            this._suspendTransmuxer();\n        }\n    }\n\n    _suspendTransmuxer() {\n        if (this._transmuxer) {\n            this._transmuxer.pause();\n\n            if (this._progressChecker == null) {\n                this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1000);\n            }\n        }\n    }\n\n    _checkProgressAndResume() {\n        let currentTime = this._mediaElement.currentTime;\n        let buffered = this._mediaElement.buffered;\n\n        let needResume = false;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let from = buffered.start(i);\n            let to = buffered.end(i);\n            if (currentTime >= from && currentTime < to) {\n                if (currentTime >= to - this._config.lazyLoadRecoverDuration) {\n                    needResume = true;\n                }\n                break;\n            }\n        }\n\n        if (needResume) {\n            window.clearInterval(this._progressChecker);\n            this._progressChecker = null;\n            if (needResume) {\n                Log.v(this.TAG, 'Continue loading from paused position');\n                this._transmuxer.resume();\n            }\n        }\n    }\n\n    _isTimepointBuffered(seconds) {\n        let buffered = this._mediaElement.buffered;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let from = buffered.start(i);\n            let to = buffered.end(i);\n            if (seconds >= from && seconds < to) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _internalSeek(seconds) {\n        let directSeek = this._isTimepointBuffered(seconds);\n\n        let directSeekBegin = false;\n        let directSeekBeginTime = 0;\n\n        if (seconds < 1.0 && this._mediaElement.buffered.length > 0) {\n            let videoBeginTime = this._mediaElement.buffered.start(0);\n            if ((videoBeginTime < 1.0 && seconds < videoBeginTime) || Browser.safari) {\n                directSeekBegin = true;\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\n                directSeekBeginTime = Browser.safari ? 0.1 : videoBeginTime;\n            }\n        }\n\n        if (directSeekBegin) {  // seek to video begin, set currentTime directly if beginPTS buffered\n            this._requestSetTime = true;\n            this._mediaElement.currentTime = directSeekBeginTime;\n        }  else if (directSeek) {  // buffered position\n            if (!this._alwaysSeekKeyframe) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = seconds;\n            } else {\n                let idr = this._msectl.getNearestKeyframe(Math.floor(seconds * 1000));\n                this._requestSetTime = true;\n                if (idr != null) {\n                    this._mediaElement.currentTime = idr.dts / 1000;\n                } else {\n                    this._mediaElement.currentTime = seconds;\n                }\n            }\n            if (this._progressChecker != null) {\n                this._checkProgressAndResume();\n            }\n        } else {\n            if (this._progressChecker != null) {\n                window.clearInterval(this._progressChecker);\n                this._progressChecker = null;\n            }\n            this._msectl.seek(seconds);\n            this._transmuxer.seek(Math.floor(seconds * 1000));  // in milliseconds\n            // no need to set mediaElement.currentTime if non-accurateSeek,\n            // just wait for the recommend_seekpoint callback\n            if (this._config.accurateSeek) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = seconds;\n            }\n        }\n    }\n\n    _checkAndApplyUnbufferedSeekpoint() {\n        if (this._seekpointRecord) {\n            if (this._seekpointRecord.recordTime <= this._now() - 100) {\n                let target = this._mediaElement.currentTime;\n                this._seekpointRecord = null;\n                if (!this._isTimepointBuffered(target)) {\n                    if (this._progressChecker != null) {\n                        window.clearTimeout(this._progressChecker);\n                        this._progressChecker = null;\n                    }\n                    // .currentTime is consists with .buffered timestamp\n                    // Chrome/Edge use DTS, while FireFox/Safari use PTS\n                    this._msectl.seek(target);\n                    this._transmuxer.seek(Math.floor(target * 1000));\n                    // set currentTime if accurateSeek, or wait for recommend_seekpoint callback\n                    if (this._config.accurateSeek) {\n                        this._requestSetTime = true;\n                        this._mediaElement.currentTime = target;\n                    }\n                }\n            } else {\n                window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\n            }\n        }\n    }\n\n    _checkAndResumeStuckPlayback(stalled) {\n        let media = this._mediaElement;\n        if (stalled || !this._receivedCanPlay || media.readyState < 2) {  // HAVE_CURRENT_DATA\n            let buffered = media.buffered;\n            if (buffered.length > 0 && media.currentTime < buffered.start(0)) {\n                Log.w(this.TAG, `Playback seems stuck at ${media.currentTime}, seek to ${buffered.start(0)}`);\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = buffered.start(0);\n                this._mediaElement.removeEventListener('progress', this.e.onvProgress);\n            }\n        } else {\n            // Playback didn't stuck, remove progress event listener\n            this._mediaElement.removeEventListener('progress', this.e.onvProgress);\n        }\n    }\n\n    _onvLoadedMetadata(e) {\n        if (this._pendingSeekTime != null) {\n            this._mediaElement.currentTime = this._pendingSeekTime;\n            this._pendingSeekTime = null;\n        }\n    }\n\n    _onvSeeking(e) {  // handle seeking request from browser's progress bar\n        let target = this._mediaElement.currentTime;\n        let buffered = this._mediaElement.buffered;\n\n        if (this._requestSetTime) {\n            this._requestSetTime = false;\n            return;\n        }\n\n        if (target < 1.0 && buffered.length > 0) {\n            // seek to video begin, set currentTime directly if beginPTS buffered\n            let videoBeginTime = buffered.start(0);\n            if ((videoBeginTime < 1.0 && target < videoBeginTime) || Browser.safari) {\n                this._requestSetTime = true;\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\n                this._mediaElement.currentTime = Browser.safari ? 0.1 : videoBeginTime;\n                return;\n            }\n        }\n\n        if (this._isTimepointBuffered(target)) {\n            if (this._alwaysSeekKeyframe) {\n                let idr = this._msectl.getNearestKeyframe(Math.floor(target * 1000));\n                if (idr != null) {\n                    this._requestSetTime = true;\n                    this._mediaElement.currentTime = idr.dts / 1000;\n                }\n            }\n            if (this._progressChecker != null) {\n                this._checkProgressAndResume();\n            }\n            return;\n        }\n\n        this._seekpointRecord = {\n            seekPoint: target,\n            recordTime: this._now()\n        };\n        window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\n    }\n\n    _onvCanPlay(e) {\n        this._receivedCanPlay = true;\n        this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\n    }\n\n    _onvStalled(e) {\n        this._checkAndResumeStuckPlayback(true);\n    }\n\n    _onvProgress(e) {\n        this._checkAndResumeStuckPlayback();\n    }\n\n}\n\nexport default MSEPlayer;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport PlayerEvents from './player-events.js';\nimport {createDefaultConfig} from '../config.js';\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\n\n// Player wrapper for browser's native player (HTMLVideoElement) without MediaSource src. \nclass NativePlayer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = 'NativePlayer';\n        this._type = 'NativePlayer';\n        this._emitter = new EventEmitter();\n\n        this._config = createDefaultConfig();\n        if (typeof config === 'object') {\n            Object.assign(this._config, config);\n        }\n\n        let typeLowerCase = mediaDataSource.type.toLowerCase();\n\n        if (typeLowerCase === 'mse'\n                || typeLowerCase === 'mpegts'\n                || typeLowerCase === 'm2ts'\n                || typeLowerCase === 'flv') {\n            throw new InvalidArgumentException('NativePlayer does\\'t support mse/mpegts/m2ts/flv MediaDataSource input!');\n        }\n        if (mediaDataSource.hasOwnProperty('segments')) {\n            throw new InvalidArgumentException(`NativePlayer(${mediaDataSource.type}) doesn't support multipart playback!`);\n        }\n\n        this.e = {\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this)\n        };\n\n        this._pendingSeekTime = null;\n        this._statisticsReporter = null;\n\n        this._mediaDataSource = mediaDataSource;\n        this._mediaElement = null;\n    }\n\n    destroy() {\n        if (this._mediaElement) {\n            this.unload();\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._mediaDataSource = null;\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        if (event === PlayerEvents.MEDIA_INFO) {\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {  // HAVE_NOTHING\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n                });\n            }\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n                });\n            }\n        }\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        this._mediaElement = mediaElement;\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n\n        if (this._pendingSeekTime != null) {\n            try {\n                mediaElement.currentTime = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n            } catch (e) {\n                // IE11 may throw InvalidStateError if readyState === 0\n                // Defer set currentTime operation after loadedmetadata\n            }\n        }\n    }\n\n    detachMediaElement() {\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n            this._mediaElement = null;\n        }\n        if (this._statisticsReporter != null) {\n            window.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n    }\n\n    load() {\n        if (!this._mediaElement) {\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\n        }\n        this._mediaElement.src = this._mediaDataSource.url;\n\n        if (this._mediaElement.readyState > 0) {\n            this._mediaElement.currentTime = 0;\n        }\n\n        this._mediaElement.preload = 'auto';\n        this._mediaElement.load();\n        this._statisticsReporter = window.setInterval(\n            this._reportStatisticsInfo.bind(this),\n        this._config.statisticsInfoReportInterval);\n    }\n\n    unload() {\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n        }\n        if (this._statisticsReporter != null) {\n            window.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n    }\n\n    play() {\n        return this._mediaElement.play();\n    }\n\n    pause() {\n        this._mediaElement.pause();\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get buffered() {\n        return this._mediaElement.buffered;\n    }\n\n    get duration() {\n        return this._mediaElement.duration;\n    }\n\n    get volume() {\n        return this._mediaElement.volume;\n    }\n\n    set volume(value) {\n        this._mediaElement.volume = value;\n    }\n\n    get muted() {\n        return this._mediaElement.muted;\n    }\n\n    set muted(muted) {\n        this._mediaElement.muted = muted;\n    }\n\n    get currentTime() {\n        if (this._mediaElement) {\n            return this._mediaElement.currentTime;\n        }\n        return 0;\n    }\n\n    set currentTime(seconds) {\n        if (this._mediaElement) {\n            this._mediaElement.currentTime = seconds;\n        } else {\n            this._pendingSeekTime = seconds;\n        }\n    }\n\n    get mediaInfo() {\n        let mediaPrefix = (this._mediaElement instanceof HTMLAudioElement) ? 'audio/' : 'video/';\n        let info = {\n            mimeType: mediaPrefix + this._mediaDataSource.type\n        };\n        if (this._mediaElement) {\n            info.duration = Math.floor(this._mediaElement.duration * 1000);\n            if (this._mediaElement instanceof HTMLVideoElement) {\n                info.width = this._mediaElement.videoWidth;\n                info.height = this._mediaElement.videoHeight;\n            }\n        }\n        return info;\n    }\n\n    get statisticsInfo() {\n        let info = {\n            playerType: this._type,\n            url: this._mediaDataSource.url\n        };\n\n        if (!(this._mediaElement instanceof HTMLVideoElement)) {\n            return info;\n        }\n\n        let hasQualityInfo = true;\n        let decoded = 0;\n        let dropped = 0;\n\n        if (this._mediaElement.getVideoPlaybackQuality) {\n            let quality = this._mediaElement.getVideoPlaybackQuality();\n            decoded = quality.totalVideoFrames;\n            dropped = quality.droppedVideoFrames;\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\n            decoded = this._mediaElement.webkitDecodedFrameCount;\n            dropped = this._mediaElement.webkitDroppedFrameCount;\n        } else {\n            hasQualityInfo = false;\n        }\n\n        if (hasQualityInfo) {\n            info.decodedFrames = decoded;\n            info.droppedFrames = dropped;\n        }\n        \n        return info;\n    }\n\n    _onvLoadedMetadata(e) {\n        if (this._pendingSeekTime != null) {\n            this._mediaElement.currentTime = this._pendingSeekTime;\n            this._pendingSeekTime = null;\n        }\n        this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n    }\n\n    _reportStatisticsInfo() {\n        this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n    }\n\n}\n\nexport default NativePlayer;","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Polyfill from './utils/polyfill.js';\nimport Features from './core/features.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './io/loader.js';\nimport MSEPlayer from './player/mse-player.js';\nimport NativePlayer from './player/native-player.js';\nimport PlayerEvents from './player/player-events.js';\nimport {ErrorTypes, ErrorDetails} from './player/player-errors.js';\nimport LoggingControl from './utils/logging-control.js';\nimport {InvalidArgumentException} from './utils/exception.js';\n\n// here are all the interfaces\n\n// install polyfills\nPolyfill.install();\n\n\n// factory method\nfunction createPlayer(mediaDataSource, optionalConfig) {\n    let mds = mediaDataSource;\n    if (mds == null || typeof mds !== 'object') {\n        throw new InvalidArgumentException('MediaDataSource must be an javascript object!');\n    }\n\n    if (!mds.hasOwnProperty('type')) {\n        throw new InvalidArgumentException('MediaDataSource must has type field to indicate video file type!');\n    }\n\n    switch (mds.type) {\n        case 'mse':\n        case 'mpegts':\n        case 'm2ts':\n        case 'flv':\n            return new MSEPlayer(mds, optionalConfig);\n        default:\n            return new NativePlayer(mds, optionalConfig);\n    }\n}\n\n\n// feature detection\nfunction isSupported() {\n    return Features.supportMSEH264Playback();\n}\n\nfunction getFeatureList() {\n    return Features.getFeatureList();\n}\n\n\n// interfaces\nlet mpegts = {};\n\nmpegts.createPlayer = createPlayer;\nmpegts.isSupported = isSupported;\nmpegts.getFeatureList = getFeatureList;\n\nmpegts.BaseLoader = BaseLoader;\nmpegts.LoaderStatus = LoaderStatus;\nmpegts.LoaderErrors = LoaderErrors;\n\nmpegts.Events = PlayerEvents;\nmpegts.ErrorTypes = ErrorTypes;\nmpegts.ErrorDetails = ErrorDetails;\n\nmpegts.MSEPlayer = MSEPlayer;\nmpegts.NativePlayer = NativePlayer;\nmpegts.LoggingControl = LoggingControl;\n\nObject.defineProperty(mpegts, 'version', {\n    enumerable: true,\n    get: function () {\n        // replaced by webpack.DefinePlugin\n        return __VERSION__;\n    }\n});\n\nexport default mpegts;\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if (\"function\" === typeof update)\n    throw Error(\n      \"useEffect CRUD overload is not enabled in this build of React.\"\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.util.Dom');\n\ngoog.require('goog.asserts');\n\n\nshaka.util.Dom = class {\n  /**\n   * Creates an element, and cast the type from Element to HTMLElement.\n   *\n   * @param {string} tagName\n   * @return {!HTMLElement}\n   * @export\n   */\n  static createHTMLElement(tagName) {\n    const element =\n      /** @type {!HTMLElement} */ (document.createElement(tagName));\n    return element;\n  }\n\n\n  /**\n   * Creates an element, and cast the type from Element to HTMLElement.\n   *\n   * @return {!HTMLVideoElement}\n   * @export\n   */\n  static createVideoElement() {\n    const video =\n      /** @type {!HTMLVideoElement} */ (document.createElement('video'));\n\n    video.muted = true;\n    video.width = 600;\n    video.height = 400;\n\n    return video;\n  }\n\n\n  /**\n   * Cast a Node/Element to an HTMLElement\n   *\n   * @param {!Node|!Element} original\n   * @return {!HTMLElement}\n   * @export\n   */\n  static asHTMLElement(original) {\n    return /** @type {!HTMLElement}*/ (original);\n  }\n\n\n  /**\n   * Cast a Node/Element to an HTMLMediaElement\n   *\n   * @param {!Node|!Element} original\n   * @return {!HTMLMediaElement}\n   * @export\n   */\n  static asHTMLMediaElement(original) {\n    return /** @type {!HTMLMediaElement}*/ (original);\n  }\n\n\n  /**\n   * Returns the element with a given class name.\n   * Assumes the class name to be unique for a given parent.\n   *\n   * @param {string} className\n   * @param {!HTMLElement} parent\n   * @return {!HTMLElement}\n   */\n  static getElementByClassName(className, parent) {\n    const elements = parent.getElementsByClassName(className);\n    goog.asserts.assert(elements.length == 1,\n        'Should only be one element with class name ' + className);\n\n    return shaka.util.Dom.asHTMLElement(elements[0]);\n  }\n\n\n  /**\n   * Remove all of the child nodes of an element.\n   * @param {!Element} element\n   * @export\n   */\n  static removeAllChildren(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n};\n\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will write out Closure's deps file, unless the\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\n * include their own deps file(s) from different locations.\n *\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler when --closure_pass\n *     or --mark_as_compiled is specified.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n */\ngoog.global = this;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, {@code CLOSURE_UNCOMPILED_DEFINES} may be defined before\n * loading base.js.  If a key is defined in {@code CLOSURE_UNCOMPILED_DEFINES},\n * {@code goog.define} will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object.<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object.<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} object the object to expose at the end of the path.\n * @param {Object=} objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n * @private\n */\ngoog.exportPath_ = function(name, object, objectToExportTo) {\n  var parts = name.split('.');\n  var cur = objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && cur.execScript) {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  // Certain browsers cannot parse code in the form for((a in b); c;);\n  // This pattern is produced by the JSCompiler when it collapses the\n  // statement above into the conditional loop below. To prevent this from\n  // happening, use a for-loop and reserve the init logic as below.\n\n  // Parentheses added to eliminate strict JS warning in Firefox.\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(object)) {\n      // last part and we have an object; use it\n      cur[part] = object;\n    } else if (cur[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retreived from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled, the default can be overridden using compiler command-line\n * options.\n *\n * @param {string} name The distinguished name to provide.\n * @param {string|number|boolean} defaultValue\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    if (goog.global.CLOSURE_UNCOMPILED_DEFINES &&\n        Object.prototype.hasOwnProperty.call(\n            goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {\n      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];\n    } else if (goog.global.CLOSURE_DEFINES &&\n        Object.prototype.hasOwnProperty.call(\n            goog.global.CLOSURE_DEFINES, name)) {\n      value = goog.global.CLOSURE_DEFINES[name];\n    }\n  }\n  goog.exportPath_(name, value);\n};\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production js_binary can be easily stripped\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\n * because they are generally used for debugging purposes and it is difficult\n * for the JSCompiler to statically determine whether they are used.\n */\ngoog.DEBUG = true;\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\n */\ngoog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\n */\ngoog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\n */\ngoog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * Creates object stubs for a namespace.  The presence of one or more\n * goog.provide() calls indicate that the file defines the given\n * objects/namespaces.  Provided objects must not be null or undefined.\n * Build tools also scan for provide/require statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n * @see goog.require\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name);\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\nif (!COMPILED) {\n\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (!goog.implicitNamespaces_[name] &&\n        goog.isDefAndNotNull(goog.getObjectByName(name)));\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {Object.<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {};\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, obj) {\n  var parts = name.split('.');\n  var cur = obj || goog.global;\n  for (var part; part = parts.shift(); ) {\n    if (goog.isDefAndNotNull(cur[part])) {\n      cur = cur[part];\n    } else {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {Object} obj The namespace to globalize.\n * @param {Object=} global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, global) {\n  global = global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {Array} provides An array of strings with the names of the objects\n *                         this file provides.\n * @param {Array} requires An array of strings with the names of the objects\n *                         this file requires.\n */\ngoog.addDependency = function(relPath, provides, requires) {\n  if (goog.DEPENDENCIES_ENABLED) {\n    var provide, require;\n    var path = relPath.replace(/\\\\/g, '/');\n    var deps = goog.dependencies_;\n    for (var i = 0; provide = provides[i]; i++) {\n      deps.nameToPath[provide] = path;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(path in deps.requires)) {\n        deps.requires[path] = {};\n      }\n      deps.requires[path][require] = true;\n    }\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\n// http://go/genjsdeps, or, externally, DepsWriter.\n// https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work is being done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system. Note that all calls to goog.require will be\n * stripped by the JSCompiler when the --closure_pass option is used.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide()) in\n *     the form \"goog.package.part\".\n * @return {?} If called within a goog.module file, the associated namespace or\n *     module otherwise null.\n */\ngoog.require = function(name) {\n\n  // If the object already exists we do not need do do anything.\n  if (!COMPILED) {\n    if (goog.isProvided_(name)) {\n      return null;\n    }\n\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var path = goog.getPathFromDeps_(name);\n      if (path) {\n        goog.included_[path] = true;\n        goog.writeScripts_();\n        return null;\n      }\n    }\n\n    var errorMessage = 'goog.require could not find: ' + name;\n    goog.logToConsole_(errorMessage);\n\n    throw Error(errorMessage);\n  }\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to load Closure's deps file automatically.\n * Shaka sets this to true since we are placing deps.js in a non-standard\n * location.  Running Shaka in uncompiled mode will require loading deps.js\n * explicitly.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS = true;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The function is passed the script source, which is a relative URI. It should\n * return true if the script was imported, false otherwise.\n * @type {(function(string): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * True if goog.dependencies_ is available.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\nif (goog.DEPENDENCIES_ENABLED) {\n  /**\n   * Object used to keep track of urls that have already been added. This record\n   * allows the prevention of circular dependencies.\n   * @type {Object}\n   * @private\n   */\n  goog.included_ = {};\n\n\n  /**\n   * This object is used to keep track of dependencies and other data that is\n   * used for loading scripts.\n   * @private\n   * @type {Object}\n   */\n  goog.dependencies_ = {\n    nameToPath: {}, // many to 1\n    requires: {}, // 1 to many\n    // Used when resolving dependencies to prevent us from visiting file twice.\n    visited: {},\n    written: {} // Used to keep track of script files we have written.\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    var doc = goog.global.document;\n    return typeof doc != 'undefined' &&\n           'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    var doc = goog.global.document;\n    var scripts = doc.getElementsByTagName('script');\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var src = (/** @type {!HTMLScriptElement} */ (scripts[i])).src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n\n  /**\n   * Imports a script if, and only if, that script hasn't already been imported.\n   * (Must be called at execution time)\n   * @param {string} src Script source.\n   * @param {string=} sourceText The optionally source text to evaluate\n   * @private\n   */\n  goog.importScript_ = function(src, sourceText) {\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\n        goog.writeScriptTag_;\n    if (importScript(src, sourceText)) {\n      goog.dependencies_.written[src] = true;\n    }\n  };\n\n\n  /**\n   * The default implementation of the import function. Writes a script tag to\n   * import the script.\n   *\n   * @param {string} src The script url.\n   * @param {string=} sourceText The optionally source text to evaluate\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src, sourceText) {\n    if (goog.inHtmlDocument_()) {\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page.\n      if (doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      if (sourceText === undefined) {\n        doc.write(\n            '<script type=\"text/javascript\" src=\"' +\n                src + '\"></' + 'script>');\n      } else {\n        doc.write(\n            '<script type=\"text/javascript\">' +\n              sourceText + '</' + 'script>');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * Resolves dependencies based on the dependencies added using addDependency\n   * and calls importScript_ in the correct order.\n   * @private\n   */\n  goog.writeScripts_ = function() {\n    // The scripts we need to write this time.\n    var scripts = [];\n    var seenScript = {};\n    var deps = goog.dependencies_;\n\n    function visitNode(path) {\n      if (path in deps.written) {\n        return;\n      }\n\n      // We have already visited this one. We can get here if we have cyclic\n      // dependencies.\n      if (path in deps.visited) {\n        if (!(path in seenScript)) {\n          seenScript[path] = true;\n          scripts.push(path);\n        }\n        return;\n      }\n\n      deps.visited[path] = true;\n\n      if (path in deps.requires) {\n        for (var requireName in deps.requires[path]) {\n          // If the required name is defined, we assume that it was already\n          // bootstrapped by other means.\n          if (!goog.isProvided_(requireName)) {\n            if (requireName in deps.nameToPath) {\n              visitNode(deps.nameToPath[requireName]);\n            } else {\n              throw Error('Undefined nameToPath for ' + requireName);\n            }\n          }\n        }\n      }\n\n      if (!(path in seenScript)) {\n        seenScript[path] = true;\n        scripts.push(path);\n      }\n    }\n\n    for (var path in goog.included_) {\n      if (!deps.written[path]) {\n        visitNode(path);\n      }\n    }\n\n    // record that we are going to load all these scripts.\n    for (var i = 0; i < scripts.length; i++) {\n      var path = scripts[i];\n      goog.dependencies_.written[path] = true;\n    }\n\n    for (var i = 0; i < scripts.length; i++) {\n      var path = scripts[i];\n      if (path) {\n        goog.importScript_(goog.basePath + path);\n      }\n    }\n  };\n\n\n  /**\n   * Looks at the dependency rules and tries to determine the script file that\n   * fulfills a particular rule.\n   * @param {string} rule In the form goog.namespace.Class or project.script.\n   * @return {?string} Url corresponding to the rule, or null.\n   * @private\n   */\n  goog.getPathFromDeps_ = function(rule) {\n    if (rule in goog.dependencies_.nameToPath) {\n      return goog.dependencies_.nameToPath[rule];\n    } else {\n      return null;\n    }\n  };\n\n  goog.findBasePath_();\n\n  // Allow projects to manage the deps files themselves.\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.importScript_(goog.basePath + 'deps.js');\n  }\n}\n\n\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(publicPath, object, objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {Function} childCtor Child class.\n * @param {Function} parentCtor Parent class.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.Ewma');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Computes an exponentionally-weighted moving average.\n *\n * @param {number} halfLife The quantity of prior samples (by weight) used\n *   when creating a new estimate.  Those prior samples make up half of the new\n *   estimate.\n * @struct\n * @constructor\n */\nshaka.abr.Ewma = function(halfLife) {\n  goog.asserts.assert(halfLife > 0, 'expected halfLife to be positive');\n\n  /**\n   * Larger values of alpha expire historical data more slowly.\n   * @private {number}\n   */\n  this.alpha_ = Math.exp(Math.log(0.5) / halfLife);\n\n  /** @private {number} */\n  this.estimate_ = 0;\n\n  /** @private {number} */\n  this.totalWeight_ = 0;\n};\n\n\n/**\n * Takes a sample.\n *\n * @param {number} weight\n * @param {number} value\n */\nshaka.abr.Ewma.prototype.sample = function(weight, value) {\n  let adjAlpha = Math.pow(this.alpha_, weight);\n  let newEstimate = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n\n  if (!isNaN(newEstimate)) {\n    this.estimate_ = newEstimate;\n    this.totalWeight_ += weight;\n  }\n};\n\n\n/**\n * @return {number}\n */\nshaka.abr.Ewma.prototype.getEstimate = function() {\n  let zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n  return this.estimate_ / zeroFactor;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.EwmaBandwidthEstimator');\n\ngoog.require('shaka.abr.Ewma');\n\n\n/**\n * Tracks bandwidth samples and estimates available bandwidth.\n * Based on the minimum of two exponentially-weighted moving averages with\n * different half-lives.\n *\n * @constructor\n * @struct\n */\nshaka.abr.EwmaBandwidthEstimator = function() {\n  /**\n   * A fast-moving average.\n   * Half of the estimate is based on the last 2 seconds of sample history.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.fast_ = new shaka.abr.Ewma(2);\n\n  /**\n   * A slow-moving average.\n   * Half of the estimate is based on the last 5 seconds of sample history.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.slow_ = new shaka.abr.Ewma(5);\n\n  /**\n   * Number of bytes sampled.\n   * @private {number}\n   */\n  this.bytesSampled_ = 0;\n\n\n  /**\n   * Minimum number of bytes sampled before we trust the estimate.  If we have\n   * not sampled much data, our estimate may not be accurate enough to trust.\n   * If bytesSampled_ is less than minTotalBytes_, we use defaultEstimate_.\n   * This specific value is based on experimentation.\n   *\n   * @private {number}\n   * @const\n   */\n  this.minTotalBytes_ = 128e3;  // 128kB\n\n  /**\n   * Minimum number of bytes, under which samples are discarded.  Our models do\n   * not include latency information, so connection startup time (time to first\n   * byte) is considered part of the download time.  Because of this, we should\n   * ignore very small downloads which would cause our estimate to be too low.\n   * This specific value is based on experimentation.\n   *\n   * @private {number}\n   * @const\n   */\n  this.minBytes_ = 16e3;  // 16kB\n};\n\n\n/**\n * Takes a bandwidth sample.\n *\n * @param {number} durationMs The amount of time, in milliseconds, for a\n *   particular request.\n * @param {number} numBytes The total number of bytes transferred in that\n *   request.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.sample = function(\n    durationMs, numBytes) {\n  if (numBytes < this.minBytes_) {\n    return;\n  }\n\n  let bandwidth = 8000 * numBytes / durationMs;\n  let weight = durationMs / 1000;\n\n  this.bytesSampled_ += numBytes;\n  this.fast_.sample(weight, bandwidth);\n  this.slow_.sample(weight, bandwidth);\n};\n\n\n/**\n * Gets the current bandwidth estimate.\n *\n * @param {number} defaultEstimate\n * @return {number} The bandwidth estimate in bits per second.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.getBandwidthEstimate =\n    function(defaultEstimate) {\n  if (this.bytesSampled_ < this.minTotalBytes_) {\n    return defaultEstimate;\n  }\n\n  // Take the minimum of these two estimates.  This should have the effect of\n  // adapting down quickly, but up more slowly.\n  return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n};\n\n\n/**\n * @return {boolean} True if there is enough data to produce a meaningful\n *   estimate.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.hasGoodEstimate = function() {\n  return this.bytesSampled_ >= this.minTotalBytes_;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.log');\n\n\n/**\n * @namespace shaka.log\n * @summary\n * A console logging framework which is compiled out for deployment.  This is\n * only available when using the uncompiled version.\n * @exportDoc\n */\n\n\n/**\n * Log levels.\n * @enum {number}\n * @exportDoc\n */\nshaka.log.Level = {\n  NONE: 0,\n  ERROR: 1,\n  WARNING: 2,\n  INFO: 3,\n  DEBUG: 4,\n  V1: 5,\n  V2: 6,\n};\n\n\n/**\n * @define {number} the maximum log level.\n */\ngoog.define('shaka.log.MAX_LOG_LEVEL', 3);\n\n\n/**\n * This always logs to the console, even in Release mode.  This should only be\n * used for deprecation messages and things the app should never ignore.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.alwaysError = function() {};\n\n\n/**\n * This always logs to the console, even in Release mode.  This should only be\n * used for deprecation messages and things the app should never ignore.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.alwaysWarn = function() {};\n\n\n/**\n * This log is for when an error occurs.  This should always be accompanied with\n * an error event, thrown exception, or rejected Promise.  Logs are disabled in\n * Release mode, so there should be other methods of detecting the error.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.error = function() {};\n\n\n/**\n * This log is for possible errors or things that may be surprising to a user.\n * For example, if we work around unusual or bad content, we should warn that\n * they should fix their content.  Deprecation messages and messages the app\n * shouldn't ignore should use alwaysWarn instead.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.warning = function() {};\n\n\n/**\n * This log is for messages to the user about what is happening.  For example,\n * when we update a manifest or install a polyfill.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.info = function() {};\n\n\n/**\n * This log is to aid *users* in debugging their content.  This should be for\n * logs about the content and what we do with it.  For example, when we change\n * streams or what we are choosing.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.debug = function() {};\n\n\n/**\n * This log is for debugging Shaka Player itself.  This may be logs about\n * internal states or events.  This may also be for more verbose logs about\n * content, such as for segment appends.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.v1 = function() {};\n\n\n/**\n * This log is for tracing and debugging Shaka Player.  These logs will happen\n * a lot, for example, logging every segment append or every update check.\n * These are mostly used for tracking which calls happen through the code.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.v2 = function() {};\n\n\n// IE8 has no console unless it is opened in advance.\n// IE9 console methods are not Functions and have no bind.\nif (window.console && window.console.log.bind) {\n  shaka.log.alwaysWarn = console.warn.bind(console);\n  shaka.log.alwaysError = console.error.bind(console);\n\n  if (goog.DEBUG) {\n    /** @type {number} */\n    shaka.log.currentLevel;\n\n    /**\n     * Change the log level.  Useful for debugging in uncompiled mode.\n     *\n     * @param {number} level\n     * @exportDoc\n     */\n    shaka.log.setLevel = function(level) {\n      let nop = function() {};\n      let log = shaka.log;\n      const Level = shaka.log.Level;\n\n      shaka.log.currentLevel = level;\n\n      log.error = (level >= Level.ERROR) ? console.error.bind(console) : nop;\n      log.warning = (level >= Level.WARNING) ? console.warn.bind(console) : nop;\n      log.info = (level >= Level.INFO) ? console.info.bind(console) : nop;\n      log.debug = (level >= Level.DEBUG) ? console.log.bind(console) : nop;\n      log.v1 = (level >= Level.V1) ? console.debug.bind(console) : nop;\n      log.v2 = (level >= Level.V2) ? console.debug.bind(console) : nop;\n    };\n\n    shaka.log.setLevel(shaka.log.MAX_LOG_LEVEL);\n  } else {\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.ERROR) {\n      shaka.log.error = console.error.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.WARNING) {\n      shaka.log.warning = console.warn.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.INFO) {\n      shaka.log.info = console.info.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.DEBUG) {\n      shaka.log.debug = console.log.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.V1) {\n      shaka.log.v1 = console.debug.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.V2) {\n      shaka.log.v2 = console.debug.bind(console);\n    }\n  }\n}\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple utilities for splitting URI strings.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n *\n * @author gboyer@google.com (Garrett Boyer) - The \"lightened\" design.\n * @author msamuel@google.com (Mike Samuel) - Domain knowledge and regexes.\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +\n    '(?:' +\n        '([^:/?#.]+)' +                  // scheme - ignore special characters\n                                         // used by other URL parts such as :,\n                                         // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n        '(?:([^/?#]*)@)?' +              // userInfo\n        '([^/#?]*?)' +                   // domain\n        '(?::([0-9]+))?' +               // port\n        '(?=[/#?]|$)' +                  // authority-terminating character\n    ')?' +\n    '([^?#]+)?' +                        // path\n    '(?:\\\\?([^#]*))?' +                  // query\n    '(?:#(.*))?' +                       // fragment\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array.<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  // See @return comment -- never null.\n  return /** @type {!Array.<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * Use new goog.Uri(string) to parse a URI string.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n *\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>new goog.Uri('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>new goog.Uri('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>new goog.Uri('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} uri Optional string URI to parse, or if a goog.Uri is\n *        passed, a clone is created.\n *\n * @constructor\n */\ngoog.Uri = function(uri) {\n  // Parse in the uri string\n  var m;\n  if (uri instanceof goog.Uri) {\n    this.setScheme(uri.getScheme());\n    this.setUserInfo(uri.getUserInfo());\n    this.setDomain(uri.getDomain());\n    this.setPort(uri.getPort());\n    this.setPath(uri.getPath());\n    this.setQueryData(uri.getQueryData().clone());\n    this.setFragment(uri.getFragment());\n  } else if (uri && (m = goog.uri.utils.split(String(uri)))) {\n    // Set the parts -- decoding as we do so.\n    // COMPATABILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n  } else {\n    this.queryData_ = new goog.Uri.QueryData(null, null);\n  }\n};\n\n\n/**\n * Scheme such as \"http\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.scheme_ = '';\n\n\n/**\n * User credentials in the form \"username:password\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.userInfo_ = '';\n\n\n/**\n * Domain part, e.g. \"www.google.com\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.domain_ = '';\n\n\n/**\n * Port, e.g. 8080.\n * @type {?number}\n * @private\n */\ngoog.Uri.prototype.port_ = null;\n\n\n/**\n * Path, e.g. \"/tests/img.png\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.path_ = '';\n\n\n/**\n * Object representing query data.\n * @type {!goog.Uri.QueryData}\n * @private\n */\ngoog.Uri.prototype.queryData_;\n\n\n/**\n * The fragment without the #.\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.fragment_ = '';\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(goog.Uri.encodeSpecialChars_(\n        scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain) {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(goog.Uri.encodeSpecialChars_(\n          userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(encodeURIComponent(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(goog.Uri.encodeSpecialChars_(\n        path,\n        path.charAt(0) == '/' ?\n            goog.Uri.reDisallowedInAbsolutePath_ :\n            goog.Uri.reDisallowedInRelativePath_,\n        true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push('#', goog.Uri.encodeSpecialChars_(\n        fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n\n  var absoluteUri = this.clone();\n  if (absoluteUri.scheme_ === 'data') {\n    // Cannot have a relative URI to a data URI.\n    absoluteUri = new goog.Uri();\n  }\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @param {string} newScheme New scheme value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, decode) {\n  this.scheme_ = decode ? goog.Uri.decodeOrEmpty_(newScheme, true) :\n      newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, decode) {\n  this.userInfo_ = decode ? goog.Uri.decodeOrEmpty_(newUserInfo) :\n                   newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @param {string} newDomain New domain value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, decode) {\n  this.domain_ = decode ? goog.Uri.decodeOrEmpty_(newDomain, true) :\n      newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  return this.port_ != null;\n};\n\n\n/**\n  * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @param {string} newPath New path value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, decode) {\n  this.path_ = decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, decode) {\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n  } else {\n    if (!decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(queryData,\n                                               goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, null);\n  }\n\n  return this;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @param {string} newFragment New fragment value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, decode) {\n  this.fragment_ = decode ? goog.Uri.decodeOrEmpty_(newFragment) :\n                   newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  return !!this.fragment_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (path.indexOf('./') == -1 &&\n             path.indexOf('/.') == -1) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = (path.lastIndexOf('/', 0) == 0);\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length; ) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, preserveReserved) {\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  return preserveReserved ? decodeURI(val) : decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(unescapedPart, extra,\n    removeDoubleEncoding) {\n  if (goog.isString(unescapedPart)) {\n    var encoded = encodeURI(unescapedPart).\n        replace(extra, goog.Uri.encodeChar_);\n    if (removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} query Optional encoded query string to parse into\n *     the object.\n * @param {goog.Uri=} uri Optional uri object that should have its\n *     cache invalidated when this object updates. Deprecated -- this\n *     is no longer required.\n * @constructor\n * @final\n */\ngoog.Uri.QueryData = function(query, uri) {\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @type {?string}\n   * @private\n   */\n  this.encodedQuery_ = query || null;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  if (!this.keyMap_) {\n    this.keyMap_ = {};\n    this.count_ = 0;\n\n    if (this.encodedQuery_) {\n      var pairs = this.encodedQuery_.split('&');\n      for (var i = 0; i < pairs.length; i++) {\n        var indexOfEquals = pairs[i].indexOf('=');\n        var name = null;\n        var value = null;\n        if (indexOfEquals >= 0) {\n          name = pairs[i].substring(0, indexOfEquals);\n          value = pairs[i].substring(indexOfEquals + 1);\n        } else {\n          name = pairs[i];\n        }\n        name = decodeURIComponent(name.replace(/\\+/g, ' '));\n        value = value || '';\n        this.add(name, decodeURIComponent(value.replace(/\\+/g, ' ')));\n      }\n    }\n  }\n};\n\n\n/**\n * The map containing name/value or name/array-of-values pairs.\n * May be null if it requires parsing from the query string.\n *\n * We need to use a Map because we cannot guarantee that the key names will\n * not be problematic for IE.\n *\n * @type {Object.<string, !Array.<string>>}\n * @private\n */\ngoog.Uri.QueryData.prototype.keyMap_ = null;\n\n\n/**\n * The number of params, or null if it requires computing.\n * @type {?number}\n * @private\n */\ngoog.Uri.QueryData.prototype.count_ = null;\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  // Invalidate the cache.\n  this.encodedQuery_ = null;\n\n  var values = this.keyMap_.hasOwnProperty(key) && this.keyMap_[key];\n  if (!values) {\n    this.keyMap_[key] = (values = []);\n  }\n  values.push(value);\n  this.count_++;\n  return this;\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  var sb = [];\n\n  for (var key in this.keyMap_) {\n    var encodedKey = encodeURIComponent(key);\n    var val = this.keyMap_[key];\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + encodeURIComponent(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    var cloneMap = {};\n    for (var key in this.keyMap_) {\n      cloneMap[key] = this.keyMap_[key].concat();\n    }\n    rv.keyMap_ = cloneMap;\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.DelayedTick');\n\n\n/**\n * This class wraps a function so that we can defer executing the function by X\n * seconds.\n *\n * @final\n */\nshaka.util.DelayedTick = class {\n  /**\n   * @param {function()} onTick\n   */\n  constructor(onTick) {\n    /** @private {function()} */\n    this.onTick_ = onTick;\n\n    /** @private {?function()} */\n    this.cancelPending_ = null;\n  }\n\n  /**\n   * Call |onTick| after |delayInSeconds| has elapsed. If there is already a\n   * pending call to |onTick|, the pending call will be canceled.\n   *\n   * @param {number} delayInSeconds\n   * @return {!shaka.util.DelayedTick}\n   */\n  tickAfter(delayInSeconds) {\n    // We only want one timeout set at a time, so make sure no other timeouts\n    // are running.\n    this.stop();\n\n    // We will wrap these values in a function to allow us to cancel the timeout\n    // we are about to create.\n    let alive = true;\n    let timeoutId = null;\n\n    this.cancelPending_ = () => {\n      window.clearTimeout(timeoutId);\n      alive = false;\n    };\n\n    // For some reason, a timeout may still execute after we have cleared it in\n    // our tests. We will wrap the callback so that we can double-check our\n    // |alive| flag.\n    const onTick = () => {\n      if (alive) {\n        this.onTick_();\n      }\n    };\n\n    timeoutId = window.setTimeout(onTick, delayInSeconds * 1000);\n\n    return this;\n  }\n\n  /**\n   * Cancel any pending calls to |onTick|. If there are no pending calls to\n   * |onTick|, this will be a no-op.\n   */\n  stop() {\n    if (this.cancelPending_) {\n      this.cancelPending_();\n      this.cancelPending_ = null;\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Timer');\n\ngoog.require('shaka.util.DelayedTick');\n\n\n/**\n * A timer allows a single function to be executed at a later time or at\n * regular intervals.\n *\n * @final\n * @export\n */\nshaka.util.Timer = class {\n  /**\n   * Create a new timer. A timer is committed to a single callback function.\n   * While there is no technical reason to do this, it is far easier to\n   * understand and use timers when they are connected to one functional idea.\n   *\n   * @param {function()} onTick\n   */\n  constructor(onTick) {\n    /**\n     * Each time our timer \"does work\", we call that a \"tick\". The name comes\n     * from old analog clocks.\n     *\n     * @private {function()}\n     */\n    this.onTick_ = onTick;\n\n    /** @private {shaka.util.DelayedTick} */\n    this.ticker_ = null;\n  }\n\n  /**\n   * Have the timer call |onTick| now.\n   *\n   * @return {!shaka.util.Timer}\n   * @export\n   */\n  tickNow() {\n    this.stop();\n    this.onTick_();\n\n    return this;\n  }\n\n  /**\n   * Have the timer call |onTick| after |seconds| has elapsed unless |stop| is\n   * called first.\n   *\n   * @param {number} seconds\n   * @return {!shaka.util.Timer}\n   * @export\n   */\n  tickAfter(seconds) {\n    this.stop();\n\n    this.ticker_ = new shaka.util.DelayedTick(() => {\n      this.onTick_();\n    }).tickAfter(seconds);\n\n    return this;\n  }\n\n  /**\n   * Have the timer call |onTick| every |seconds| until |stop| is called.\n   *\n   * @param {number} seconds\n   * @return {!shaka.util.Timer}\n   * @export\n   */\n  tickEvery(seconds) {\n    this.stop();\n\n    this.ticker_ = new shaka.util.DelayedTick(() => {\n      // Schedule the timer again first. |onTick_| could cancel the timer and\n      // rescheduling first simplifies the implementation.\n      this.ticker_.tickAfter(seconds);\n      this.onTick_();\n    }).tickAfter(seconds);\n\n    return this;\n  }\n\n  /**\n   * Stop the timer and clear the previous behaviour. The timer is still usable\n   * after calling |stop|.\n   *\n   * @export\n   */\n  stop() {\n    if (this.ticker_) {\n      this.ticker_.stop();\n      this.ticker_ = null;\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.Backoff');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Backoff represents delay and backoff state.  This is used by NetworkingEngine\n * for individual requests and by StreamingEngine to retry streaming failures.\n *\n * @param {shaka.extern.RetryParameters} parameters\n * @param {boolean=} autoReset  If true, start at a \"first retry\" state and\n *   and auto-reset that state when we reach maxAttempts.\n *   Default set to false.\n *\n * @struct\n * @constructor\n */\nshaka.net.Backoff = function(parameters, autoReset = false) {\n  // Set defaults as we unpack these, so that individual app-level requests in\n  // NetworkingEngine can be missing parameters.\n\n  let defaults = shaka.net.Backoff.defaultRetryParameters();\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.maxAttempts_ = (parameters.maxAttempts == null) ?\n      defaults.maxAttempts : parameters.maxAttempts;\n\n  goog.asserts.assert(this.maxAttempts_ >= 1, 'maxAttempts should be >= 1');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.baseDelay_ = (parameters.baseDelay == null) ?\n      defaults.baseDelay : parameters.baseDelay;\n\n  goog.asserts.assert(this.baseDelay_ >= 0, 'baseDelay should be >= 0');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.fuzzFactor_ = (parameters.fuzzFactor == null) ?\n      defaults.fuzzFactor : parameters.fuzzFactor;\n\n  goog.asserts.assert(this.fuzzFactor_ >= 0, 'fuzzFactor should be >= 0');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.backoffFactor_ = (parameters.backoffFactor == null) ?\n      defaults.backoffFactor : parameters.backoffFactor;\n\n  goog.asserts.assert(this.backoffFactor_ >= 0, 'backoffFactor should be >= 0');\n\n  /** @private {number} */\n  this.numAttempts_ = 0;\n\n  /** @private {number} */\n  this.nextUnfuzzedDelay_ = this.baseDelay_;\n\n  /** @private {boolean} */\n  this.autoReset_ = autoReset;\n\n  if (this.autoReset_) {\n    // There is no delay before the first attempt.  In StreamingEngine (the\n    // intended user of auto-reset mode), the first attempt was implied, so we\n    // reset numAttempts to 1.  Therefore maxAttempts (which includes the first\n    // attempt) must be at least 2 for us to see a delay.\n    goog.asserts.assert(this.maxAttempts_ >= 2,\n        'maxAttempts must be >= 2 for autoReset == true');\n    this.numAttempts_ = 1;\n  }\n};\n\n\n/**\n * @return {!Promise} Resolves when the caller may make an attempt, possibly\n *   after a delay.  Rejects if no more attempts are allowed.\n */\nshaka.net.Backoff.prototype.attempt = async function() {\n  if (this.numAttempts_ >= this.maxAttempts_) {\n    if (this.autoReset_) {\n      this.reset_();\n    } else {\n      return Promise.reject();\n    }\n  }\n\n  const currentAttempt = this.numAttempts_;\n  this.numAttempts_++;\n\n  if (currentAttempt == 0) {\n    goog.asserts.assert(!this.autoReset_, 'Failed to delay with auto-reset!');\n    return;\n  }\n\n  // We've already tried before, so delay the Promise.\n\n  // Fuzz the delay to avoid tons of clients hitting the server at once\n  // after it recovers from whatever is causing it to fail.\n  const fuzzedDelayMs = shaka.net.Backoff.fuzz_(\n      this.nextUnfuzzedDelay_, this.fuzzFactor_);\n\n  await new Promise((resolve) => {\n    shaka.net.Backoff.defer(fuzzedDelayMs, resolve);\n  });\n\n  // Update delay_ for next time.\n  this.nextUnfuzzedDelay_ *= this.backoffFactor_;\n};\n\n\n/**\n * Gets a copy of the default retry parameters.\n *\n * @return {shaka.extern.RetryParameters}\n */\nshaka.net.Backoff.defaultRetryParameters = function() {\n  // Use a function rather than a constant member so the calling code can\n  // modify the values without affecting other call results.\n  return {\n    maxAttempts: 2,\n    baseDelay: 1000,\n    backoffFactor: 2,\n    fuzzFactor: 0.5,\n    timeout: 0,\n  };\n};\n\n\n/**\n * Fuzz the input value by +/- fuzzFactor.  For example, a fuzzFactor of 0.5\n * will create a random value that is between 50% and 150% of the input value.\n *\n * @param {number} value\n * @param {number} fuzzFactor\n * @return {number} The fuzzed value\n * @private\n */\nshaka.net.Backoff.fuzz_ = function(value, fuzzFactor) {\n  // A random number between -1 and +1.\n  let negToPosOne = (Math.random() * 2.0) - 1.0;\n\n  // A random number between -fuzzFactor and +fuzzFactor.\n  let negToPosFuzzFactor = negToPosOne * fuzzFactor;\n\n  // The original value, fuzzed by +/- fuzzFactor.\n  return value * (1.0 + negToPosFuzzFactor);\n};\n\n\n/**\n * Reset state in autoReset mode.\n * @private\n */\nshaka.net.Backoff.prototype.reset_ = function() {\n  goog.asserts.assert(this.autoReset_, 'Should only be used for auto-reset!');\n  this.numAttempts_ = 1;\n  this.nextUnfuzzedDelay_ = this.baseDelay_;\n};\n\n\n/**\n * This method is only public for testing. It allows us to intercept the\n * time-delay call.\n *\n * @param {number} delayInMs\n * @param {function()} callback\n */\nshaka.net.Backoff.defer = function(delayInMs, callback) {\n  const timer = new shaka.util.Timer(callback);\n  timer.tickAfter(delayInMs / 1000);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Error');\n\n\n/**\n * Creates a new Error.\n *\n * @param {shaka.util.Error.Severity} severity\n * @param {shaka.util.Error.Category} category\n * @param {shaka.util.Error.Code} code\n * @param {...*} varArgs\n *\n * @constructor\n * @struct\n * @export\n * @extends {Error}\n * @implements {shaka.extern.Error}\n */\nshaka.util.Error = function(severity, category, code, ...varArgs) {\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.severity = severity;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.category = category;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.code = code;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.data = varArgs;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.handled = false;\n\n  // This improves the formatting of Errors in failure messages in the tests.\n  if (goog.DEBUG) {\n    let categoryName = 'UNKNOWN';\n    let codeName = 'UNKNOWN';\n\n    for (let k in shaka.util.Error.Category) {\n      if (shaka.util.Error.Category[k] == this.category) {\n        categoryName = k;\n      }\n    }\n    for (let k in shaka.util.Error.Code) {\n      if (shaka.util.Error.Code[k] == this.code) {\n        codeName = k;\n      }\n    }\n\n    /**\n     * A human-readable version of the category and code.\n     * <i>(Only available in uncompiled mode.)</i>\n     *\n     * @const {string}\n     * @exportDoc\n     */\n    this.message = 'Shaka Error ' + categoryName + '.' + codeName +\n                   ' (' + this.data.toString() + ')';\n\n    if (shaka.util.Error.createStack) {\n      try {\n        throw new Error(this.message);\n      } catch (e) {\n        /**\n         * A stack-trace showing where the error occurred.\n         * <i>(Only available in uncompiled mode.)</i>\n         *\n         * @const {string}\n         * @exportDoc\n         */\n        this.stack = e.stack;\n      }\n    }\n  }\n};\n\n\n/**\n * @return {string}\n * @override\n */\nshaka.util.Error.prototype.toString = function() {\n  return 'shaka.util.Error ' + JSON.stringify(this, null, '  ');\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * If true, create a stack trace in Error objects.\n   *\n   * Only available in uncompiled mode, and disabled in tests to avoid issues\n   * with karma-jasmine.  See comments in test/test/boot.js for details.\n   *\n   * @type {boolean}\n   */\n  shaka.util.Error.createStack = true;\n}\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Severity = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  'RECOVERABLE': 1,\n\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  'CRITICAL': 2,\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Category = {\n  /** Errors from the network stack. */\n  'NETWORK': 1,\n\n  /** Errors parsing text streams. */\n  'TEXT': 2,\n\n  /** Errors parsing or processing audio or video streams. */\n  'MEDIA': 3,\n\n  /** Errors parsing the Manifest. */\n  'MANIFEST': 4,\n\n  /** Errors related to streaming. */\n  'STREAMING': 5,\n\n  /** Errors related to DRM. */\n  'DRM': 6,\n\n  /** Miscellaneous errors from the player. */\n  'PLAYER': 7,\n\n  /** Errors related to cast. */\n  'CAST': 8,\n\n  /** Errors in the database storage (offline). */\n  'STORAGE': 9,\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Code = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   * <br> error.data[0] is the URI.\n   */\n  'UNSUPPORTED_SCHEME': 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the status code.\n   * <br> error.data[2] is the response text, or null if the response could not\n   *   be interpretted as text.\n   * <br> error.data[3] is the map of response headers.\n   * <br> error.data[4] is the NetworkingEngine.RequestType of the request,\n   *   if one was provided.\n   */\n  'BAD_HTTP_STATUS': 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the original error.\n   * <br> error.data[2] is the NetworkingEngine.RequestType of the request.\n   */\n  'HTTP_ERROR': 1002,\n\n  /**\n   * A network request timed out.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the NetworkingEngine.RequestType of the request,\n   *   if one was provided.\n   */\n  'TIMEOUT': 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   * <br> error.data[0] is the URI.\n   */\n  'MALFORMED_DATA_URI': 1004,\n\n  /**\n   * A network request was made with a data URI using an unknown encoding.\n   * <br> error.data[0] is the URI.\n   */\n  'UNKNOWN_DATA_URI_ENCODING': 1005,\n\n  /**\n   * A request filter threw an error.\n   * <br> error.data[0] is the original error.\n   */\n  'REQUEST_FILTER_ERROR': 1006,\n\n  /**\n   * A response filter threw an error.\n   * <br> error.data[0] is the original error.\n   */\n  'RESPONSE_FILTER_ERROR': 1007,\n\n  /**\n   * A testing network request was made with a malformed URI.\n   * This error is only used by unit and integration tests.\n   */\n  'MALFORMED_TEST_URI': 1008,\n\n  /**\n   * An unexpected network request was made to the FakeNetworkingEngine.\n   * This error is only used by unit and integration tests.\n   */\n  'UNEXPECTED_TEST_REQUEST': 1009,\n\n\n  /** The text parser failed to parse a text stream due to an invalid header. */\n  'INVALID_TEXT_HEADER': 2000,\n\n  /** The text parser failed to parse a text stream due to an invalid cue. */\n  'INVALID_TEXT_CUE': 2001,\n\n  // RETIRED: 'INVALID_TEXT_SETTINGS': 2002,\n\n  /**\n   * Was unable to detect the encoding of the response text.  Suggest adding\n   * byte-order-markings to the response data.\n   */\n  'UNABLE_TO_DETECT_ENCODING': 2003,\n\n  /** The response data contains invalid Unicode character encoding. */\n  'BAD_ENCODING': 2004,\n\n  /**\n   * The XML parser failed to parse an xml stream, or the XML lacks mandatory\n   * elements for TTML.\n   * <br> error.data[0] is the URI associated with the XML.\n   */\n  'INVALID_XML': 2005,\n\n  // RETIRED: 'INVALID_TTML': 2006,\n\n  /**\n   * MP4 segment does not contain TTML.\n   */\n  'INVALID_MP4_TTML': 2007,\n\n  /**\n   * MP4 segment does not contain VTT.\n   */\n  'INVALID_MP4_VTT': 2008,\n\n  /**\n   * When examining media in advance, we were unable to extract the cue time.\n   * This should only be possible with HLS, where we do not have explicit\n   * segment start times.\n   * <br> error.data[0] is the underlying exception or Error object.\n   */\n  'UNABLE_TO_EXTRACT_CUE_START_TIME': 2009,\n\n\n  /**\n   * Some component tried to read past the end of a buffer.  The segment index,\n   * init segment, or PSSH may be malformed.\n   */\n  'BUFFER_READ_OUT_OF_BOUNDS': 3000,\n\n  /**\n   * Some component tried to parse an integer that was too large to fit in a\n   * JavaScript number without rounding error.  JavaScript can only natively\n   * represent integers up to 53 bits.\n   */\n  'JS_INTEGER_OVERFLOW': 3001,\n\n  /**\n   * The EBML parser used to parse the WebM container encountered an integer,\n   * ID, or other field larger than the maximum supported by the parser.\n   */\n  'EBML_OVERFLOW': 3002,\n\n  /**\n   * The EBML parser used to parse the WebM container encountered a floating-\n   * point field of a size not supported by the parser.\n   */\n  'EBML_BAD_FLOATING_POINT_SIZE': 3003,\n\n  /**\n   * The MP4 SIDX parser found the wrong box type.\n   * Either the segment index range is incorrect or the data is corrupt.\n   */\n  'MP4_SIDX_WRONG_BOX_TYPE': 3004,\n\n  /**\n   * The MP4 SIDX parser encountered an invalid timescale.\n   * The segment index data may be corrupt.\n   */\n  'MP4_SIDX_INVALID_TIMESCALE': 3005,\n\n  /** The MP4 SIDX parser encountered a type of SIDX that is not supported. */\n  'MP4_SIDX_TYPE_NOT_SUPPORTED': 3006,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cues element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUES_ELEMENT_MISSING': 3007,\n\n  /**\n   * The WebM header parser was unable to locate the Ebml element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_EBML_HEADER_ELEMENT_MISSING': 3008,\n\n  /**\n   * The WebM header parser was unable to locate the Segment element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_SEGMENT_ELEMENT_MISSING': 3009,\n\n  /**\n   * The WebM header parser was unable to locate the Info element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_INFO_ELEMENT_MISSING': 3010,\n\n  /**\n   * The WebM header parser was unable to locate the Duration element.\n   * The init segment data may be corrupt or may have been incorrectly encoded.\n   * Shaka requires a duration in WebM DASH content.\n   */\n  'WEBM_DURATION_ELEMENT_MISSING': 3011,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cue Track Positions element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING': 3012,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cue Time element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUE_TIME_ELEMENT_MISSING': 3013,\n\n  /**\n   * A MediaSource operation failed.\n   * <br> error.data[0] is a MediaError code from the video element.\n   */\n  'MEDIA_SOURCE_OPERATION_FAILED': 3014,\n\n  /**\n   * A MediaSource operation threw an exception.\n   * <br> error.data[0] is the exception that was thrown.\n   */\n  'MEDIA_SOURCE_OPERATION_THREW': 3015,\n\n  /**\n   * The video element reported an error.\n   * <br> error.data[0] is a MediaError code from the video element.\n   * <br> On Edge & IE, error.data[1] is a Microsoft extended error code in hex.\n   * <br> On Chrome, error.data[2] is a string with details on the error.\n   */\n  'VIDEO_ERROR': 3016,\n\n  /**\n   * A MediaSource operation threw QuotaExceededError and recovery failed. The\n   * content cannot be played correctly because the segments are too large for\n   * the browser/platform. This may occur when attempting to play very high\n   * quality, very high bitrate content on low-end devices.\n   * <br> error.data[0] is the type of content which caused the error.\n   */\n  'QUOTA_EXCEEDED_ERROR': 3017,\n\n  /**\n   * Mux.js did not invoke the callback signifying successful transmuxing.\n   */\n  'TRANSMUXING_FAILED': 3018,\n\n\n  /**\n   * The Player was unable to guess the manifest type based on file extension\n   * or MIME type.  To fix, try one of the following:\n   * <br><ul>\n   *   <li>Rename the manifest so that the URI ends in a well-known extension.\n   *   <li>Configure the server to send a recognizable Content-Type header.\n   *   <li>Configure the server to accept a HEAD request for the manifest.\n   * </ul>\n   * <br> error.data[0] is the manifest URI.\n   */\n  'UNABLE_TO_GUESS_MANIFEST_TYPE': 4000,\n\n  /** The DASH Manifest contained invalid XML markup. */\n  'DASH_INVALID_XML': 4001,\n\n  /**\n   * The DASH Manifest contained a Representation with insufficient segment\n   * information.\n   */\n  'DASH_NO_SEGMENT_INFO': 4002,\n\n  /** The DASH Manifest contained an AdaptationSet with no Representations. */\n  'DASH_EMPTY_ADAPTATION_SET': 4003,\n\n  /** The DASH Manifest contained an Period with no AdaptationSets. */\n  'DASH_EMPTY_PERIOD': 4004,\n\n  /**\n   * The DASH Manifest does not specify an init segment with a WebM container.\n   */\n  'DASH_WEBM_MISSING_INIT': 4005,\n\n  /** The DASH Manifest contained an unsupported container format. */\n  'DASH_UNSUPPORTED_CONTAINER': 4006,\n\n  /** The embedded PSSH data has invalid encoding. */\n  'DASH_PSSH_BAD_ENCODING': 4007,\n\n  /**\n   * There is an AdaptationSet whose Representations do not have any common\n   * key-systems.\n   */\n  'DASH_NO_COMMON_KEY_SYSTEM': 4008,\n\n  /** Having multiple key IDs per Representation is not supported. */\n  'DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED': 4009,\n\n  /** The DASH Manifest specifies conflicting key IDs. */\n  'DASH_CONFLICTING_KEY_IDS': 4010,\n\n  /**\n   * The manifest contains a period with no playable streams.\n   * Either the period was originally empty, or the streams within cannot be\n   * played on this browser or platform.\n   */\n  'UNPLAYABLE_PERIOD': 4011,\n\n  /**\n   * There exist some streams that could be decoded, but restrictions imposed\n   * by the application or the key system prevent us from playing.  This may\n   * happen under the following conditions:\n   * <ul>\n   *   <li>The application has given restrictions to the Player that restrict\n   *       at least one content type completely (e.g. no playable audio).\n   *   <li>The manifest specifies different keys than were given to us from the\n   *       license server.\n   *   <li>The key system has imposed output restrictions that cannot be met\n   *       (such as HDCP) and there are no unrestricted alternatives.\n   * </ul>\n   * <br> error.data[0] is a {@link shaka.extern.RestrictionInfo} object\n   * describing the kinds of restrictions that caused this error.\n   */\n  'RESTRICTIONS_CANNOT_BE_MET': 4012,\n\n  // RETIRED: 'INTERNAL_ERROR_KEY_STATUS': 4013,\n\n  /**\n   * No valid periods were found in the manifest.  Please check that your\n   * manifest is correct and free of typos.\n   */\n  'NO_PERIODS': 4014,\n\n  /**\n   * HLS playlist doesn't start with a mandory #EXTM3U tag.\n   */\n  'HLS_PLAYLIST_HEADER_MISSING': 4015,\n\n  /**\n   * HLS tag has an invalid name that doesn't start with '#EXT'\n   * <br> error.data[0] is the invalid tag.\n   */\n  'INVALID_HLS_TAG': 4016,\n\n  /**\n   * HLS playlist has both Master and Media/Segment tags.\n   */\n  'HLS_INVALID_PLAYLIST_HIERARCHY': 4017,\n\n  /**\n   * A Representation has an id that is the same as another Representation in\n   * the same Period.  This makes manifest updates impossible since we cannot\n   * map the updated Representation to the old one.\n   */\n  'DASH_DUPLICATE_REPRESENTATION_ID': 4018,\n\n  // RETIRED: 'HLS_MEDIA_INIT_SECTION_INFO_MISSING': 4019,\n\n  /**\n   * HLS manifest has several #EXT-X-MAP tags. We can only\n   * support one at the moment.\n   */\n  'HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND': 4020,\n\n  /**\n   * HLS parser was unable to guess mime type of a stream.\n   * <br> error.data[0] is the stream file's extension.\n   */\n  'HLS_COULD_NOT_GUESS_MIME_TYPE': 4021,\n\n  /**\n   * No Master Playlist has been provided. Master playlist provides\n   * vital information about the streams (like codecs) that is\n   * required for MediaSource. We don't support directly providing\n   * a Media Playlist.\n   */\n  'HLS_MASTER_PLAYLIST_NOT_PROVIDED': 4022,\n\n  /**\n   * One of the required attributes was not provided, so the\n   * HLS manifest is invalid.\n   * <br> error.data[0] is the missing attribute's name.\n   */\n  'HLS_REQUIRED_ATTRIBUTE_MISSING': 4023,\n\n  /**\n   * One of the required tags was not provided, so the\n   * HLS manifest is invalid.\n   * <br> error.data[0] is the missing tag's name.\n   */\n  'HLS_REQUIRED_TAG_MISSING': 4024,\n\n  /**\n   * The HLS parser was unable to guess codecs of a stream.\n   * <br> error.data[0] is the list of all codecs for the variant.\n   */\n  'HLS_COULD_NOT_GUESS_CODECS': 4025,\n\n  /**\n   * The HLS parser has encountered encrypted content with unsupported\n   * KEYFORMAT attributes.\n   */\n  'HLS_KEYFORMATS_NOT_SUPPORTED': 4026,\n\n  /**\n   * The manifest parser only supports xlink links with xlink:actuate=\"onLoad\".\n   */\n  'DASH_UNSUPPORTED_XLINK_ACTUATE': 4027,\n\n  /**\n   * The manifest parser has hit its depth limit on xlink link chains.\n   */\n  'DASH_XLINK_DEPTH_LIMIT': 4028,\n\n  // RETIRED: 'HLS_LIVE_CONTENT_NOT_SUPPORTED': 4029,\n\n  /**\n   * The HLS parser was unable to parse segment start time from the media.\n   */\n  'HLS_COULD_NOT_PARSE_SEGMENT_START_TIME': 4030,\n\n  // RETIRED: 'HLS_MEDIA_SEQUENCE_REQUIRED_IN_LIVE_STREAMS': 4031,\n\n  /**\n   * The content container or codecs are not supported by this browser. For\n   * example, this could happen if the content is WebM, but your browser does\n   * not support the WebM container, or if the content uses HEVC, but your\n   * browser does not support the HEVC codec.  This can also occur for\n   * multicodec or multicontainer manifests if none of the codecs or containers\n   * are supported by the browser.\n   *\n   * To see what your browser supports, you can check the JSON data dumped by\n   * http://support.shaka-player-demo.appspot.com/\n   */\n  'CONTENT_UNSUPPORTED_BY_BROWSER': 4032,\n\n  /**\n   * External text tracks cannot be added to live streams.\n   */\n  'CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM': 4033,\n\n  /**\n   * We do not support AES-128 encryption with HLS yet.\n   */\n  'HLS_AES_128_ENCRYPTION_NOT_SUPPORTED': 4034,\n\n  // RETIRED: 'INCONSISTENT_BUFFER_STATE': 5000,\n  // RETIRED: 'INVALID_SEGMENT_INDEX': 5001,\n  // RETIRED: 'SEGMENT_DOES_NOT_EXIST': 5002,\n  // RETIRED: 'CANNOT_SATISFY_BYTE_LIMIT': 5003,\n  // RETIRED: 'BAD_SEGMENT': 5004,\n\n  /**\n   * The StreamingEngine called onChooseStreams() but the callback receiver\n   * did not return the correct number or type of Streams.\n   *\n   * This can happen when there is multi-Period content where one Period is\n   * video+audio and another is video-only or audio-only.  We don't support this\n   * case because it is incompatible with MSE.  When the browser reaches the\n   * transition, it will pause, waiting for the audio stream.\n   */\n  'INVALID_STREAMS_CHOSEN': 5005,\n\n\n  /**\n   * The manifest indicated protected content, but the manifest parser was\n   * unable to determine what key systems should be used.\n   */\n  'NO_RECOGNIZED_KEY_SYSTEMS': 6000,\n\n  /**\n   * None of the requested key system configurations are available.  This may\n   * happen under the following conditions:\n   * <ul>\n   *   <li> The key system is not supported.\n   *   <li> The key system does not support the features requested (e.g.\n   *        persistent state).\n   *   <li> A user prompt was shown and the user denied access.\n   *   <li> The key system is not available from unsecure contexts. (i.e.\n            requires HTTPS) See https://bit.ly/2K9X1nY\n   * </ul>\n   */\n  'REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE': 6001,\n\n  /**\n   * The browser found one of the requested key systems, but it failed to\n   * create an instance of the CDM for some unknown reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_CREATE_CDM': 6002,\n\n  /**\n   * The browser found one of the requested key systems and created an instance\n   * of the CDM, but it failed to attach the CDM to the video for some unknown\n   * reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_ATTACH_TO_VIDEO': 6003,\n\n  /**\n   * The CDM rejected the server certificate supplied by the application.\n   * The certificate may be malformed or in an unsupported format.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'INVALID_SERVER_CERTIFICATE': 6004,\n\n  /**\n   * The CDM refused to create a session for some unknown reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_CREATE_SESSION': 6005,\n\n  /**\n   * The CDM was unable to generate a license request for the init data it was\n   * given.  The init data may be malformed or in an unsupported format.\n   * <br> error.data[0] is an error message string from the browser.\n   * <br> error.data[1] is the error object from the browser.\n   * <br> error.data[2] is a string with the extended error code, if available.\n   */\n  'FAILED_TO_GENERATE_LICENSE_REQUEST': 6006,\n\n  /**\n   * The license request failed.  This could be a timeout, a network failure, or\n   * a rejection by the server.\n   * <br> error.data[0] is a shaka.util.Error from the networking engine.\n   */\n  'LICENSE_REQUEST_FAILED': 6007,\n\n  /**\n   * The license response was rejected by the CDM.  The server's response may be\n   * invalid or malformed for this CDM.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'LICENSE_RESPONSE_REJECTED': 6008,\n\n  // RETIRED: 'NO_LICENSE_SERVER_SPECIFIED': 6009,\n\n  /**\n   * The manifest does not specify any DRM info, but the content is encrypted.\n   * Either the manifest or the manifest parser are broken.\n   */\n  'ENCRYPTED_CONTENT_WITHOUT_DRM_INFO': 6010,\n\n  // RETIRED: 'WRONG_KEYS': 6011,\n\n  /**\n   * No license server was given for the key system signaled by the manifest.\n   * A license server URI is required for every key system.\n   * <br> error.data[0] is the key system identifier.\n   */\n  'NO_LICENSE_SERVER_GIVEN': 6012,\n\n  /**\n   * A required offline session was removed.  The content is not playable.\n   */\n  'OFFLINE_SESSION_REMOVED': 6013,\n\n  /**\n   * The license has expired.  This is triggered when all keys in the key\n   * status map have a status of 'expired'.\n   */\n  'EXPIRED': 6014,\n\n\n  /**\n   * The call to Player.load() was interrupted by a call to Player.unload()\n   * or another call to Player.load().\n   */\n  'LOAD_INTERRUPTED': 7000,\n\n  /**\n   * An internal error which indicates that an operation was aborted.  This\n   * should not be seen by applications.\n   */\n  'OPERATION_ABORTED': 7001,\n\n  /**\n   * The call to Player.load() failed because the Player does not have a video\n   * element.  The video element must either be provided to the constructor or\n   * to Player.attach() before Player.load() is called.\n   */\n  'NO_VIDEO_ELEMENT': 7002,\n\n\n  /**\n   * The Cast API is unavailable.  This may be because of one of the following:\n   *  1. The browser may not have Cast support\n   *  2. The browser may be missing a necessary Cast extension\n   *  3. The Cast sender library may not be loaded in your app\n   */\n  'CAST_API_UNAVAILABLE': 8000,\n\n  /**\n   * No cast receivers are available at this time.\n   */\n  'NO_CAST_RECEIVERS': 8001,\n\n  /**\n   * The library is already casting.\n   */\n  'ALREADY_CASTING': 8002,\n\n  /**\n   * A Cast SDK error that we did not explicitly plan for has occurred.\n   * Check data[0] and refer to the Cast SDK documentation for details.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'UNEXPECTED_CAST_ERROR': 8003,\n\n  /**\n   * The cast operation was canceled by the user.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_CANCELED_BY_USER': 8004,\n\n  /**\n   * The cast connection timed out.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_CONNECTION_TIMED_OUT': 8005,\n\n  /**\n   * The requested receiver app ID does not exist or is unavailable.\n   * Check the requested app ID for typos.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_RECEIVER_APP_UNAVAILABLE': 8006,\n\n\n  /**\n   * No receiver app id has been provided, making casting impossible.\n   */\n  'CAST_RECEIVER_APP_ID_MISSING': 8007,\n\n\n  /**\n   * Offline storage is not supported on this browser; it is required for\n   * offline support.\n   */\n  'STORAGE_NOT_SUPPORTED': 9000,\n\n  /**\n   * An unknown error occurred in the IndexedDB.\n   * <br> On Firefox, one common source for UnknownError calls is reverting\n   * Firefox to an old version. This makes the IndexedDB storage inaccessible\n   * for older versions. The only way to fix this is to delete the storage\n   * data in your profile. See https://mzl.la/2yCGWCm\n   * <br> error.data[0] is the error object.\n   */\n  'INDEXED_DB_ERROR': 9001,\n\n  /**\n   * The storage operation was aborted.  Deprecated in favor of more general\n   * OPERATION_ABORTED.\n   */\n  'DEPRECATED_OPERATION_ABORTED': 9002,\n\n  /**\n   * The specified item was not found in the IndexedDB.\n   * <br> error.data[0] is the offline URI.\n   */\n  'REQUESTED_ITEM_NOT_FOUND': 9003,\n\n  /**\n   * A network request was made with a malformed offline URI.\n   * <br> error.data[0] is the URI.\n   */\n  'MALFORMED_OFFLINE_URI': 9004,\n\n  /**\n   * The specified content is live or in-progress.\n   * Live and in-progress streams cannot be stored offline.\n   * <br> error.data[0] is the URI.\n   */\n  'CANNOT_STORE_LIVE_OFFLINE': 9005,\n\n  /**\n   * There is already a store operation in-progress. Wait until it completes\n   * before starting another.\n   */\n  'STORE_ALREADY_IN_PROGRESS': 9006,\n\n  /**\n   * The specified manifest is encrypted but does not specify any init data.\n   * Without init data specified in the manifest, the content will not be\n   * playable offline.\n   * <br> error.data[0] is the URI.\n   */\n  'NO_INIT_DATA_FOR_OFFLINE': 9007,\n\n  /**\n   * shaka.offline.Storage was constructed with a Player proxy instead of a\n   * local player instance.  To fix this, use Player directly with Storage\n   * instead of the results of CastProxy.prototype.getPlayer().\n   */\n  'LOCAL_PLAYER_INSTANCE_REQUIRED': 9008,\n\n  // RETIRED/MOVED TO 4000's: 'CONTENT_UNSUPPORTED_BY_BROWSER': 9009,\n\n  // RETIRED: 'UNSUPPORTED_UPGRADE_REQUEST': 9010,\n\n  /**\n   * The storage cell does not allow new operations that require new keys.\n   */\n  'NEW_KEY_OPERATION_NOT_SUPPORTED': 9011,\n\n  /**\n   * A key was not found in a storage cell.\n   */\n  'KEY_NOT_FOUND': 9012,\n\n  /**\n   * A storage cell was not found.\n   */\n  'MISSING_STORAGE_CELL': 9013,\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.PublicPromise');\n\n\n/**\n * A utility to create Promises with convenient public resolve and reject\n * methods.\n *\n * @constructor\n * @struct\n * @extends {Promise.<T>}\n * @return {Promise.<T>}\n * @template T\n */\nshaka.util.PublicPromise = function() {\n  let resolvePromise;\n  let rejectPromise;\n\n  // Promise.call causes an error.  It seems that inheriting from a native\n  // Promise is not permitted by JavaScript interpreters.\n\n  // The work-around is to construct a Promise object, modify it to look like\n  // the compiler's picture of PublicPromise, then return it.  The caller of\n  // new PublicPromise will receive |promise| instead of |this|, and the\n  // compiler will be aware of the additional properties |resolve| and\n  // |reject|.\n\n  const promise = new Promise(function(resolve, reject) {\n    resolvePromise = resolve;\n    rejectPromise = reject;\n  });\n\n  // Now cast the Promise object to our subclass PublicPromise so that the\n  // compiler will permit us to attach resolve() and reject() to it.\n  const publicPromise = /** @type {shaka.util.PublicPromise} */(promise);\n  publicPromise.resolve = resolvePromise;\n  publicPromise.reject = rejectPromise;\n\n  return publicPromise;\n};\n\n\n/** @param {T=} value */\nshaka.util.PublicPromise.prototype.resolve = function(value) {};\n\n\n/** @param {*=} reason */\nshaka.util.PublicPromise.prototype.reject = function(reason) {};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.AbortableOperation');\n\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.PublicPromise');\n\n/**\n * A utility to wrap abortable operations.  Note that these are not cancelable.\n * Cancelation implies undoing what has been done so far, whereas aborting only\n * means that futher work is stopped.\n *\n * @implements {shaka.extern.IAbortableOperation.<T>}\n * @template T\n * @export\n */\nshaka.util.AbortableOperation = class {\n  /**\n   * @param {!Promise.<T>} promise\n   *   A Promise which represents the underlying operation.  It is resolved when\n   *   the operation is complete, and rejected if the operation fails or is\n   *   aborted.  Aborted operations should be rejected with a shaka.util.Error\n   *   object using the error code OPERATION_ABORTED.\n   * @param {function():!Promise} onAbort\n   *   Will be called by this object to abort the underlying operation.\n   *   This is not cancelation, and will not necessarily result in any work\n   *   being undone.  abort() should return a Promise which is resolved when the\n   *   underlying operation has been aborted.  The returned Promise should never\n   *   be rejected.\n   */\n  constructor(promise, onAbort) {\n    /** @const {!Promise.<T>} */\n    this.promise = promise;\n\n    /** @private {function():!Promise} */\n    this.onAbort_ = onAbort;\n\n    /** @private {boolean} */\n    this.aborted_ = false;\n  }\n\n  /**\n   * @param {!shaka.util.Error} error\n   * @return {!shaka.util.AbortableOperation} An operation which has already\n   *   failed with the error given by the caller.\n   * @export\n   */\n  static failed(error) {\n    return new shaka.util.AbortableOperation(\n        Promise.reject(error),\n        () => Promise.resolve());\n  }\n\n  /**\n   * @return {!shaka.util.AbortableOperation} An operation which has already\n   *   failed with the error OPERATION_ABORTED.\n   * @export\n   */\n  static aborted() {\n    const p = Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED));\n    // Silence uncaught rejection errors, which may otherwise occur any place\n    // we don't explicitly handle aborted operations.\n    p.catch(() => {});\n    return new shaka.util.AbortableOperation(p, () => Promise.resolve());\n  }\n\n  /**\n   * @param {U} value\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which has already\n   *   completed with the given value.\n   * @template U\n   * @export\n   */\n  static completed(value) {\n    return new shaka.util.AbortableOperation(\n        Promise.resolve(value),\n        () => Promise.resolve());\n  }\n\n  /**\n   * @param {!Promise.<U>} promise\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which cannot be\n   *   aborted.  It will be completed when the given Promise is resolved, or\n   *   will be failed when the given Promise is rejected.\n   * @template U\n   * @export\n   */\n  static notAbortable(promise) {\n    return new shaka.util.AbortableOperation(\n        promise,\n        // abort() here will return a Promise which is resolved when the input\n        // promise either resolves or fails.\n        () => promise.catch(() => {}));\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  abort() {\n    this.aborted_ = true;\n    return this.onAbort_();\n  }\n\n  /**\n   * @param {!Array.<!shaka.util.AbortableOperation>} operations\n   * @return {!shaka.util.AbortableOperation} An operation which is resolved\n   *   when all operations are successful and fails when any operation fails.\n   *   For this operation, abort() aborts all given operations.\n   * @export\n   */\n  static all(operations) {\n    return new shaka.util.AbortableOperation(\n        Promise.all(operations.map((op) => op.promise)),\n        () => Promise.all(operations.map((op) => op.abort())));\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  finally(onFinal) {\n    this.promise.then((value) => onFinal(true), (e) => onFinal(false));\n    return this;\n  }\n\n  /**\n   * @param {(undefined|\n   *          function(T):U|\n   *          function(T):!Promise.<U>|\n   *          function(T):!shaka.util.AbortableOperation.<U>)} onSuccess\n   *   A callback to be invoked after this operation is complete, to chain to\n   *   another operation.  The callback can return a plain value, a Promise to\n   *   an asynchronous value, or another AbortableOperation.\n   * @param {function(*)=} onError\n   *   An optional callback to be invoked if this operation fails, to perform\n   *   some cleanup or error handling.  Analogous to the second parameter of\n   *   Promise.prototype.then.\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which is resolved\n   *   when this operation and the operation started by the callback are both\n   *   complete.\n   * @template U\n   * @export\n   */\n  chain(onSuccess, onError) {\n    let newPromise = new shaka.util.PublicPromise();\n\n    // If called before \"this\" completes, just abort \"this\".\n    let abort = () => {\n      newPromise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.PLAYER,\n          shaka.util.Error.Code.OPERATION_ABORTED));\n      return this.abort();\n    };\n\n    this.promise.then((value) => {\n      if (this.aborted_) {\n        // If \"this\" is not abortable(), or if abort() is called after \"this\"\n        // is complete but before the next stage in the chain begins, we should\n        // stop right away.\n        newPromise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.PLAYER,\n            shaka.util.Error.Code.OPERATION_ABORTED));\n        return;\n      }\n\n      if (!onSuccess) {\n        // No callback?  Pass the success along.\n        newPromise.resolve(value);\n        return;\n      }\n\n      // Call the success callback, interpret the return value,\n      // set the Promise state, and get the next abort function.\n      abort = shaka.util.AbortableOperation.wrapChainCallback_(\n          onSuccess, value, newPromise);\n    }, (e) => {\n      // \"This\" failed or was aborted.\n\n      if (!onError) {\n        // No callback?  Pass the failure along.\n        newPromise.reject(e);\n        return;\n      }\n\n      // Call the error callback, interpret the return value,\n      // set the Promise state, and get the next abort function.\n      abort = shaka.util.AbortableOperation.wrapChainCallback_(\n          onError, e, newPromise);\n    });\n\n    return new shaka.util.AbortableOperation(\n        newPromise,\n        // By creating a closure around abort(), we can update the value of\n        // abort() at various stages.\n        () => abort());\n  }\n\n  /**\n   * @param {(function(T):U|\n   *          function(T):!Promise.<U>|\n   *          function(T):!shaka.util.AbortableOperation.<U>|\n   *          function(*))} callback\n   *   A callback to be invoked with the given value.\n   * @param {T} value\n   * @param {!shaka.util.PublicPromise} newPromise The promise for the next\n   *   stage in the chain.\n   * @return {function():!Promise} The next abort() function for the chain.\n   * @private\n   * @template T, U\n   */\n  static wrapChainCallback_(callback, value, newPromise) {\n    try {\n      let ret = callback(value);\n\n      if (ret && ret.promise && ret.abort) {\n        // This is an abortable operation, with its own abort() method.\n        // After this point, abort() should abort the operation from the\n        // callback, and the new promise should be tied to the promise\n        // from the callback's operation.\n        newPromise.resolve(ret.promise);\n        // This used to say \"return ret.abort;\", but it caused subtle issues by\n        // unbinding part of the abort chain.  There is now a test to ensure\n        // that we don't call abort with the wrong \"this\".\n        return () => ret.abort();\n      } else {\n        // This is a Promise or a plain value, and this step cannot be aborted.\n        newPromise.resolve(ret);\n        // Abort is complete when the returned value/Promise is resolved or\n        // fails, but never fails itself nor returns a value.\n        return () => Promise.resolve(ret).then(() => {}).catch(() => {});\n      }\n    } catch (exception) {\n      // The callback threw an exception or error.  Reject the new Promise and\n      // resolve any future abort call right away.\n      newPromise.reject(exception);\n      return () => Promise.resolve();\n    }\n  }\n};\n\n/**\n * @const {!Promise.<T>}\n * @exportInterface\n */\nshaka.util.AbortableOperation.prototype.promise;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.FakeEvent');\n\n\n/**\n * Create an Event work-alike object based on the provided dictionary.\n * The event should contain all of the same properties from the dict.\n *\n * @param {string} type\n * @param {Object=} dict\n * @constructor\n * @extends {Event}\n */\nshaka.util.FakeEvent = function(type, dict = {}) {\n  // Take properties from dict if present.\n  for (let key in dict) {\n    this[key] = dict[key];\n  }\n\n\n  // The properties below cannot be set by the dict.  They are all provided for\n  // compatibility with native events.\n\n  /** @const {boolean} */\n  this.bubbles = false;\n\n  /** @type {boolean} */\n  this.cancelable = false;\n\n  /** @type {boolean} */\n  this.defaultPrevented = false;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  this.timeStamp = window.performance && window.performance.now ?\n      window.performance.now() : Date.now();\n\n  /** @const {string} */\n  this.type = type;\n\n  /** @const {boolean} */\n  this.isTrusted = false;\n\n  /** @type {EventTarget} */\n  this.currentTarget = null;\n\n  /** @type {EventTarget} */\n  this.target = null;\n\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  this.stopped = false;\n};\n\n\n/**\n * Prevents the default action of the event.  Has no effect if the event isn't\n * cancellable.\n * @override\n */\nshaka.util.FakeEvent.prototype.preventDefault = function() {\n  if (this.cancelable) {\n    this.defaultPrevented = true;\n  }\n};\n\n\n/**\n * Stops processing event listeners for this event.  Provided for compatibility\n * with native Events.\n * @override\n */\nshaka.util.FakeEvent.prototype.stopImmediatePropagation = function() {\n  this.stopped = true;\n};\n\n\n/**\n * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n * with native Events.\n * @override\n */\nshaka.util.FakeEvent.prototype.stopPropagation = function() {};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MultiMap');\n\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nshaka.util.MultiMap = function() {\n  /** @private {!Object.<string, !Array.<T>>} */\n  this.map_ = {};\n};\n\n\n/**\n * Add a key, value pair to the map.\n * @param {string} key\n * @param {T} value\n */\nshaka.util.MultiMap.prototype.push = function(key, value) {\n  if (this.map_.hasOwnProperty(key)) {\n    this.map_[key].push(value);\n  } else {\n    this.map_[key] = [value];\n  }\n};\n\n\n/**\n * Get a list of values by key.\n * @param {string} key\n * @return {Array.<T>} or null if no such key exists.\n */\nshaka.util.MultiMap.prototype.get = function(key) {\n  let list = this.map_[key];\n  // slice() clones the list so that it and the map can each be modified\n  // without affecting the other.\n  return list ? list.slice() : null;\n};\n\n\n/**\n * Get a list of all values.\n * @return {!Array.<T>}\n */\nshaka.util.MultiMap.prototype.getAll = function() {\n  let list = [];\n  for (let key in this.map_) {\n    list.push.apply(list, this.map_[key]);\n  }\n  return list;\n};\n\n\n/**\n * Remove a specific value, if it exists.\n * @param {string} key\n * @param {T} value\n */\nshaka.util.MultiMap.prototype.remove = function(key, value) {\n  let list = this.map_[key];\n  if (!list) return;\n  for (let i = 0; i < list.length; ++i) {\n    if (list[i] == value) {\n      list.splice(i, 1);\n      --i;\n    }\n  }\n};\n\n\n/**\n * Clear all keys and values from the multimap.\n */\nshaka.util.MultiMap.prototype.clear = function() {\n  this.map_ = {};\n};\n\n\n/**\n * @param {function(string, !Array.<T>)} callback\n */\nshaka.util.MultiMap.prototype.forEach = function(callback) {\n  for (let key in this.map_) {\n    callback(key, this.map_[key]);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.FakeEventTarget');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.MultiMap');\n\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @exportInterface\n */\nshaka.util.FakeEventTarget = function() {\n  /**\n   * @private {!shaka.util.MultiMap.<shaka.util.FakeEventTarget.ListenerType>}\n   */\n  this.listeners_ = new shaka.util.MultiMap();\n\n  /**\n   * The target of all dispatched events.  Defaults to |this|.\n   * @type {EventTarget}\n   */\n  this.dispatchTarget = this;\n};\n\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):*}\n * @exportInterface\n */\nshaka.util.FakeEventTarget.ListenerType;\n\n\n/**\n * Add an event listener to this object.\n *\n * @param {string} type The event type to listen for.\n * @param {shaka.util.FakeEventTarget.ListenerType} listener The callback or\n *   listener object to invoke.\n * @param {(!AddEventListenerOptions|boolean)=} options Ignored.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.addEventListener =\n    function(type, listener, options) {\n  this.listeners_.push(type, listener);\n};\n\n\n/**\n * Remove an event listener from this object.\n *\n * @param {string} type The event type for which you wish to remove a listener.\n * @param {shaka.util.FakeEventTarget.ListenerType} listener The callback or\n *   listener object to remove.\n * @param {(EventListenerOptions|boolean)=} options Ignored.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.removeEventListener =\n    function(type, listener, options) {\n  this.listeners_.remove(type, listener);\n};\n\n\n/**\n * Dispatch an event from this object.\n *\n * @param {!Event} event The event to be dispatched from this object.\n * @return {boolean} True if the default action was prevented.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.dispatchEvent = function(event) {\n  // In many browsers, it is complex to overwrite properties of actual Events.\n  // Here we expect only to dispatch FakeEvents, which are simpler.\n  goog.asserts.assert(event instanceof shaka.util.FakeEvent,\n                      'FakeEventTarget can only dispatch FakeEvents!');\n\n  const listeners = this.listeners_.get(event.type) || [];\n\n  // Execute this event on listeners until the event has been stopped or we\n  // run out of listeners.\n  for (let i = 0; i < listeners.length; ++i) {\n    // Do this every time, since events can be re-dispatched from handlers.\n    event.target = this.dispatchTarget;\n    event.currentTarget = this.dispatchTarget;\n\n    let listener = listeners[i];\n    try {\n      // Check for the |handleEvent| member to test if this is a\n      // |EventListener| instance or a basic function.\n      if (listener.handleEvent) {\n        listener.handleEvent(event);\n      } else {\n        listener.call(this, event);\n      }\n    } catch (exception) {\n      // Exceptions during event handlers should not affect the caller,\n      // but should appear on the console as uncaught, according to MDN:\n      // https://mzl.la/2JXgwRo\n      shaka.log.error('Uncaught exception in event handler', exception,\n          exception ? exception.message : null,\n          exception ? exception.stack : null);\n    }\n\n    if (event.stopped) {\n      break;\n    }\n  }\n\n  return event.defaultPrevented;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ObjectUtils');\n\n\nshaka.util.ObjectUtils = class {\n /**\n  * Performs a deep clone of the given simple object.  This does not copy\n  * prototypes, custom properties (e.g. read-only), or multiple references to\n  * the same object.  If the caller needs these fields, it will need to set them\n  * after this returns.\n  *\n  * @template T\n  * @param {T} arg\n  * @return {T}\n  */\n  static cloneObject(arg) {\n    let seenObjects = new Set();\n    // This recursively clones the value |val|, using the captured variable\n    // |seenObjects| to track the objects we have already cloned.\n    let clone = function(val) {\n      switch (typeof val) {\n        case 'undefined':\n        case 'boolean':\n        case 'number':\n        case 'string':\n        case 'symbol':\n        case 'function':\n          return val;\n        case 'object':\n        default: {\n          // typeof null === 'object'\n          if (!val) return val;\n\n          // This covers Uint8Array and friends, even without a TypedArray\n          // base-class constructor.\n          const isTypedArray =\n              val.buffer && val.buffer.constructor == ArrayBuffer;\n          if (isTypedArray) {\n            return val;\n          }\n\n          if (seenObjects.has(val)) {\n            return null;\n          }\n\n          const isArray = val.constructor == Array;\n          if (val.constructor != Object && !isArray) {\n            return null;\n          }\n\n          seenObjects.add(val);\n          let ret = isArray ? [] : {};\n          // Note |name| will equal a number for arrays.\n          for (let name in val) {\n            ret[name] = clone(val[name]);\n          }\n\n          // Length is a non-enumerable property, but we should copy it over in\n          // case it is not the default.\n          if (isArray) {\n            ret.length = val.length;\n          }\n          return ret;\n        }\n      }\n    };\n    return clone(arg);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ArrayUtils');\n\n\n/**\n * @namespace shaka.util.ArrayUtils\n * @summary Array utility functions.\n */\n\n\n/**\n * Returns whether the two values contain the same value.  This correctly\n * handles comparisons involving NaN.\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n * @template T\n */\nshaka.util.ArrayUtils.defaultEquals = function(a, b) {\n  // NaN !== NaN, so we need to special case it.\n  if (typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b)) {\n    return true;\n  }\n  return a === b;\n};\n\n\n/**\n * Remove given element from array (assumes no duplicates).\n * @param {!Array.<T>} array\n * @param {T} element\n * @template T\n */\nshaka.util.ArrayUtils.remove = function(array, element) {\n  let index = array.indexOf(element);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n};\n\n\n/**\n * Count the number of items in the list that pass the check function.\n * @param {!Array.<T>} array\n * @param {function(T):boolean} check\n * @return {number}\n * @template T\n */\nshaka.util.ArrayUtils.count = function(array, check) {\n  let count = 0;\n\n  array.forEach(function(element) {\n    count += check(element) ? 1 : 0;\n  });\n\n  return count;\n};\n\n\n/**\n * Determines if the given arrays contain the same elements.\n *\n * @param {!Array.<T>} a\n * @param {!Array.<T>} b\n * @param {function(T, T):boolean=} compareFn\n * @return {boolean}\n * @template T\n */\nshaka.util.ArrayUtils.hasSameElements = function(a, b, compareFn) {\n  if (!compareFn) {\n    compareFn = shaka.util.ArrayUtils.defaultEquals;\n  }\n  if (a.length != b.length) {\n    return false;\n  }\n\n  let copy = b.slice();\n  for (const item of a) {\n    const idx = copy.findIndex((other) => compareFn(item, other));\n    if (idx == -1) {\n      return false;\n    }\n    // Since order doesn't matter, just swap the last element with this one and\n    // then drop the last element.\n    copy[idx] = copy[copy.length - 1];\n    copy.pop();\n  }\n\n  return copy.length == 0;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.OperationManager');\n\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.IDestroyable');\n\n/**\n * A utility for cleaning up AbortableOperations, to help simplify common\n * patterns and reduce code duplication.\n *\n * @implements {shaka.util.IDestroyable}\n */\nshaka.util.OperationManager = class {\n  constructor() {\n    /** @private {!Array.<!shaka.extern.IAbortableOperation>} */\n    this.operations_ = [];\n  }\n\n  /**\n   * Manage an operation.  This means aborting it on destroy() and removing it\n   * from the management set when it complete.\n   *\n   * @param {!shaka.extern.IAbortableOperation} operation\n   */\n  manage(operation) {\n    this.operations_.push(operation.finally(() => {\n      shaka.util.ArrayUtils.remove(this.operations_, operation);\n    }));\n  }\n\n  /** @override */\n  destroy() {\n    let cleanup = [];\n    this.operations_.forEach((op) => {\n      // Catch and ignore any failures.  This silences error logs in the\n      // JavaScript console about uncaught Promise failures.\n      op.promise.catch(() => {});\n\n      // Now abort the operation.\n      cleanup.push(op.abort());\n    });\n\n    this.operations_ = [];\n    return Promise.all(cleanup);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.NetworkingEngine');\ngoog.provide('shaka.net.NetworkingEngine.PendingRequest');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.net.Backoff');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ObjectUtils');\ngoog.require('shaka.util.OperationManager');\n\n\n/**\n * @event shaka.net.NetworkingEngine.RetryEvent\n * @description Fired when the networking engine receives a recoverable error\n *   and retries.\n * @property {string} type\n *   'retry'\n * @property {?shaka.util.Error} error\n *   The error that caused the retry. If it was a non-Shaka error, this is set\n *   to null.\n * @exportDoc\n */\n\n\n/**\n * NetworkingEngine wraps all networking operations.  This accepts plugins that\n * handle the actual request.  A plugin is registered using registerScheme.\n * Each scheme has at most one plugin to handle the request.\n *\n * @param {function(number, number)=} onProgressUpdated Called when a progress\n *   event is triggered. Passed the duration, in milliseconds, that the request\n *   took, and the number of bytes transferred.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.net.NetworkingEngine = function(onProgressUpdated) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /** @private {!shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n\n  /** @private {!Set.<shaka.extern.RequestFilter>} */\n  this.requestFilters_ = new Set();\n\n  /** @private {!Set.<shaka.extern.ResponseFilter>} */\n  this.responseFilters_ = new Set();\n\n  /** @private {?function(number, number)} */\n  this.onProgressUpdated_ = onProgressUpdated || null;\n};\n\ngoog.inherits(shaka.net.NetworkingEngine, shaka.util.FakeEventTarget);\n\n\n/**\n * Request types.  Allows a filter to decide which requests to read/alter.\n *\n * @enum {number}\n * @export\n */\nshaka.net.NetworkingEngine.RequestType = {\n  'MANIFEST': 0,\n  'SEGMENT': 1,\n  'LICENSE': 2,\n  'APP': 3,\n  'TIMING': 4,\n};\n\n\n/**\n * Priority level for network scheme plugins.\n * If multiple plugins are provided for the same scheme, only the\n * highest-priority one is used.\n *\n * @enum {number}\n * @export\n */\nshaka.net.NetworkingEngine.PluginPriority = {\n  'FALLBACK': 1,\n  'PREFERRED': 2,\n  'APPLICATION': 3,\n};\n\n\n/**\n * @typedef {{\n *   plugin: shaka.extern.SchemePlugin,\n *   priority: number\n * }}\n * @property {shaka.extern.SchemePlugin} plugin\n *   The associated plugin.\n * @property {number} priority\n *   The plugin's priority.\n */\nshaka.net.NetworkingEngine.SchemeObject;\n\n\n/**\n * Contains the scheme plugins.\n *\n * @private {!Object.<string, shaka.net.NetworkingEngine.SchemeObject>}\n */\nshaka.net.NetworkingEngine.schemes_ = {};\n\n/**\n * @typedef {{\n *   response: shaka.extern.Response,\n *   gotProgress: boolean\n * }}\n *\n * @description\n * Defines a response wrapper object, including the response object and whether\n * progress event is fired by the scheme plugin.\n *\n * @property {shaka.extern.Response} response\n * @property {boolean} gotProgress\n * @private\n */\nshaka.net.NetworkingEngine.ResponseAndGotProgress;\n\n\n/**\n * Registers a scheme plugin.  This plugin will handle all requests with the\n * given scheme.  If a plugin with the same scheme already exists, it is\n * replaced, unless the existing plugin is of higher priority.\n * If no priority is provided, this defaults to the highest priority of\n * APPLICATION.\n *\n * @param {string} scheme\n * @param {shaka.extern.SchemePlugin} plugin\n * @param {number=} priority\n * @export\n */\nshaka.net.NetworkingEngine.registerScheme =\n    function(scheme, plugin, priority) {\n  goog.asserts.assert(priority == undefined || priority > 0,\n      'explicit priority must be > 0');\n  priority =\n      priority || shaka.net.NetworkingEngine.PluginPriority.APPLICATION;\n  let existing = shaka.net.NetworkingEngine.schemes_[scheme];\n  if (!existing || priority >= existing.priority) {\n    shaka.net.NetworkingEngine.schemes_[scheme] = {\n      priority: priority,\n      plugin: plugin,\n    };\n  }\n};\n\n\n/**\n * Removes a scheme plugin.\n *\n * @param {string} scheme\n * @export\n */\nshaka.net.NetworkingEngine.unregisterScheme = function(scheme) {\n  delete shaka.net.NetworkingEngine.schemes_[scheme];\n};\n\n\n/**\n * Registers a new request filter.  All filters are applied in the order they\n * are registered.\n *\n * @param {shaka.extern.RequestFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.registerRequestFilter = function(filter) {\n  this.requestFilters_.add(filter);\n};\n\n\n/**\n * Removes a request filter.\n *\n * @param {shaka.extern.RequestFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.unregisterRequestFilter =\n    function(filter) {\n  this.requestFilters_.delete(filter);\n};\n\n\n/**\n * Clears all request filters.\n *\n * @export\n */\nshaka.net.NetworkingEngine.prototype.clearAllRequestFilters = function() {\n  this.requestFilters_.clear();\n};\n\n\n/**\n * Registers a new response filter.  All filters are applied in the order they\n * are registered.\n *\n * @param {shaka.extern.ResponseFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.registerResponseFilter = function(filter) {\n  this.responseFilters_.add(filter);\n};\n\n\n/**\n * Removes a response filter.\n *\n * @param {shaka.extern.ResponseFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.unregisterResponseFilter =\n    function(filter) {\n  this.responseFilters_.delete(filter);\n};\n\n\n/**\n * Clears all response filters.\n *\n * @export\n */\nshaka.net.NetworkingEngine.prototype.clearAllResponseFilters = function() {\n  this.responseFilters_.clear();\n};\n\n\n/**\n * Gets a copy of the default retry parameters.\n *\n * @return {shaka.extern.RetryParameters}\n *\n * NOTE: The implementation moved to shaka.net.Backoff to avoid a circular\n * dependency between the two classes.\n */\nshaka.net.NetworkingEngine.defaultRetryParameters =\n    shaka.net.Backoff.defaultRetryParameters;\n\n\n/**\n * Makes a simple network request for the given URIs.\n *\n * @param {!Array.<string>} uris\n * @param {shaka.extern.RetryParameters} retryParams\n * @return {shaka.extern.Request}\n */\nshaka.net.NetworkingEngine.makeRequest = function(uris, retryParams) {\n  return {\n    uris: uris,\n    method: 'GET',\n    body: null,\n    headers: {},\n    allowCrossSiteCredentials: false,\n    retryParameters: retryParams,\n    licenseRequestType: null,\n  };\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.net.NetworkingEngine.prototype.destroy = function() {\n  this.destroyed_ = true;\n  this.requestFilters_.clear();\n  this.responseFilters_.clear();\n  return this.operationManager_.destroy();\n};\n\n\n/**\n * Makes a network request and returns the resulting data.\n *\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @return {!shaka.net.NetworkingEngine.PendingRequest}\n * @export\n */\nshaka.net.NetworkingEngine.prototype.request = function(type, request) {\n  const ObjectUtils = shaka.util.ObjectUtils;\n  const numBytesRemainingObj =\n      new shaka.net.NetworkingEngine.NumBytesRemainingClass();\n\n  // Reject all requests made after destroy is called.\n  if (this.destroyed_) {\n    const p = Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED));\n    // Silence uncaught rejection errors, which may otherwise occur any place\n    // we don't explicitly handle aborted operations.\n    p.catch(() => {});\n    return new shaka.net.NetworkingEngine.PendingRequest(\n        p, () => Promise.resolve(), numBytesRemainingObj);\n  }\n\n  goog.asserts.assert(request.uris && request.uris.length,\n                      'Request without URIs!');\n\n  // If a request comes from outside the library, some parameters may be left\n  // undefined.  To make it easier for application developers, we will fill them\n  // in with defaults if necessary.\n  //\n  // We clone retryParameters and uris so that if a filter modifies the request,\n  // it doesn't contaminate future requests.\n  request.method = request.method || 'GET';\n  request.headers = request.headers || {};\n  request.retryParameters = request.retryParameters ?\n      ObjectUtils.cloneObject(request.retryParameters) :\n      shaka.net.NetworkingEngine.defaultRetryParameters();\n  request.uris = ObjectUtils.cloneObject(request.uris);\n\n  // Apply the registered filters to the request.\n  let requestFilterOperation = this.filterRequest_(type, request);\n  let requestOperation = requestFilterOperation.chain(\n      () => this.makeRequestWithRetry_(type, request, numBytesRemainingObj));\n  let responseFilterOperation = requestOperation.chain(\n      (responseAndGotProgress) =>\n          this.filterResponse_(type, responseAndGotProgress));\n\n  // Keep track of time spent in filters.\n  let requestFilterStartTime = Date.now();\n  let requestFilterMs = 0;\n  requestFilterOperation.promise.then(() => {\n    requestFilterMs = Date.now() - requestFilterStartTime;\n  }, () => {});  // Silence errors in this fork of the Promise chain.\n\n  let responseFilterStartTime = 0;\n  requestOperation.promise.then(() => {\n    responseFilterStartTime = Date.now();\n  }, () => {});  // Silence errors in this fork of the Promise chain.\n\n  const operation = responseFilterOperation.chain((responseAndGotProgress) => {\n    const responseFilterMs = Date.now() - responseFilterStartTime;\n    const response = responseAndGotProgress.response;\n    response.timeMs += requestFilterMs;\n    response.timeMs += responseFilterMs;\n    if (!responseAndGotProgress.gotProgress &&\n        this.onProgressUpdated_ &&\n        !response.fromCache &&\n        type == shaka.net.NetworkingEngine.RequestType.SEGMENT) {\n      this.onProgressUpdated_(response.timeMs, response.data.byteLength);\n    }\n    return response;\n  }, (e) => {\n    // Any error thrown from elsewhere should be recategorized as CRITICAL here.\n    // This is because by the time it gets here, we've exhausted retries.\n    if (e) {\n      goog.asserts.assert(e instanceof shaka.util.Error, 'Wrong error type');\n      e.severity = shaka.util.Error.Severity.CRITICAL;\n    }\n\n    throw e;\n  });\n\n  // Return the pending request, which carries the response operation, and the\n  // number of bytes remaining to be downloaded, updated by the progress events.\n  // Add the operation to the manager for later cleanup.\n  const pendingRequest =\n      new shaka.net.NetworkingEngine.PendingRequest(operation.promise,\n      operation.onAbort_, numBytesRemainingObj);\n  this.operationManager_.manage(pendingRequest);\n  return pendingRequest;\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @return {!shaka.extern.IAbortableOperation.<undefined>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.filterRequest_ = function(type, request) {\n  let filterOperation = shaka.util.AbortableOperation.completed(undefined);\n\n  for (const requestFilter of this.requestFilters_) {\n    // Request filters are run sequentially.\n    filterOperation =\n        filterOperation.chain(() => requestFilter(type, request));\n  }\n\n  // Catch any errors thrown by request filters, and substitute\n  // them with a Shaka-native error.\n  return filterOperation.chain(undefined, (e) => {\n    if (e && e.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw e;\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.REQUEST_FILTER_ERROR, e);\n  });\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.NumBytesRemainingClass}\n *            numBytesRemainingObj\n * @return {!shaka.extern.IAbortableOperation.<\n *            shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.makeRequestWithRetry_ =\n    function(type, request, numBytesRemainingObj) {\n  let backoff = new shaka.net.Backoff(\n      request.retryParameters, /* autoReset */ false);\n  let index = 0;\n  return this.send_(type, request, backoff, index, /* lastError */ null,\n                    numBytesRemainingObj);\n};\n\n\n/**\n * Sends the given request to the correct plugin and retry using Backoff.\n *\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @param {!shaka.net.Backoff} backoff\n * @param {number} index\n * @param {?shaka.util.Error} lastError\n * @param {shaka.net.NetworkingEngine.NumBytesRemainingClass}\n *     numBytesRemainingObj\n * @return {!shaka.extern.IAbortableOperation.<\n *               shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.send_ = function(\n    type, request, backoff, index, lastError, numBytesRemainingObj) {\n  let uri = new goog.Uri(request.uris[index]);\n  let scheme = uri.getScheme();\n  // Whether it got a progress event.\n  let gotProgress = false;\n  if (!scheme) {\n    // If there is no scheme, infer one from the location.\n    scheme = shaka.net.NetworkingEngine.getLocationProtocol_();\n    goog.asserts.assert(scheme[scheme.length - 1] == ':',\n                        'location.protocol expected to end with a colon!');\n    // Drop the colon.\n    scheme = scheme.slice(0, -1);\n\n    // Override the original URI to make the scheme explicit.\n    uri.setScheme(scheme);\n    request.uris[index] = uri.toString();\n  }\n\n  let object = shaka.net.NetworkingEngine.schemes_[scheme];\n  let plugin = object ? object.plugin : null;\n  if (!plugin) {\n    return shaka.util.AbortableOperation.failed(\n        new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.NETWORK,\n            shaka.util.Error.Code.UNSUPPORTED_SCHEME,\n            uri));\n  }\n\n\n  // Every attempt must have an associated backoff.attempt() call so that the\n  // accounting is correct.\n  let backoffOperation =\n      shaka.util.AbortableOperation.notAbortable(backoff.attempt());\n\n  let startTimeMs;\n  let sendOperation = backoffOperation.chain(() => {\n    if (this.destroyed_) {\n      return shaka.util.AbortableOperation.aborted();\n    }\n\n    startTimeMs = Date.now();\n    const segment = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n\n    return plugin(request.uris[index],\n         request,\n         type,\n         // The following function is passed to plugin.\n         (time, bytes, numBytesRemaining) => {\n           if (this.onProgressUpdated_ && type == segment) {\n             this.onProgressUpdated_(time, bytes);\n             gotProgress = true;\n             numBytesRemainingObj.setBytes(numBytesRemaining);\n           }\n        });\n  }).chain((response) => {\n    if (response.timeMs == undefined) {\n      response.timeMs = Date.now() - startTimeMs;\n    }\n    let responseAndGotProgress = {\n      response: response,\n      gotProgress: gotProgress,\n    };\n\n    return responseAndGotProgress;\n  }, (error) => {\n    if (error && error.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw error;\n    }\n\n    if (this.destroyed_) {\n      return shaka.util.AbortableOperation.aborted();\n    }\n\n    if (error && error.severity == shaka.util.Error.Severity.RECOVERABLE) {\n      // Don't pass in a non-shaka error, even if one is somehow thrown;\n      // instead, call the listener with a null error.\n      const errorOrNull = error instanceof shaka.util.Error ? error : null;\n      let event = new shaka.util.FakeEvent('retry', {'error': errorOrNull});\n      this.dispatchEvent(event);\n\n      // Move to the next URI.\n      index = (index + 1) % request.uris.length;\n      const shakaError = /** @type {shaka.util.Error} */(error);\n      return this.send_(type, request, backoff, index, shakaError,\n                        numBytesRemainingObj);\n    }\n\n    // The error was not recoverable, so do not try again.\n    // Rethrow the error so the Promise chain stays rejected.\n    throw error || lastError;\n  });\n\n  return sendOperation;\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.net.NetworkingEngine.ResponseAndGotProgress}\n *        responseAndGotProgress\n * @return {!shaka.extern.IAbortableOperation.<\n *               shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.filterResponse_ =\n    function(type, responseAndGotProgress) {\n  let filterOperation = shaka.util.AbortableOperation.completed(undefined);\n  for (const responseFilter of this.responseFilters_) {\n    // Response filters are run sequentially.\n    filterOperation = filterOperation.chain(\n      responseFilter.bind(null, type, responseAndGotProgress.response));\n  }\n  // If successful, return the filtered response with whether it got progress.\n  return filterOperation.chain(() => {\n    return responseAndGotProgress;\n  }, (e) => {\n    // Catch any errors thrown by request filters, and substitute\n    // them with a Shaka-native error.\n\n    if (e && e.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw e;\n    }\n\n    // The error is assumed to be critical if the original wasn't a Shaka error.\n    let severity = shaka.util.Error.Severity.CRITICAL;\n    if (e instanceof shaka.util.Error) {\n      severity = e.severity;\n    }\n\n    throw new shaka.util.Error(\n        severity,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.RESPONSE_FILTER_ERROR, e);\n  });\n};\n\n\n/**\n * This is here only for testability.  We can't mock location in our tests on\n * all browsers, so instead we mock this.\n *\n * @return {string} The value of location.protocol.\n * @private\n */\nshaka.net.NetworkingEngine.getLocationProtocol_ = function() {\n  return location.protocol;\n};\n\n/**\n * A wrapper class for the number of bytes remaining to be downloaded for the\n * request.\n * Instead of using PendingRequest directly, this class is needed to be sent to\n * plugin as a parameter, and a Promise is returned, before PendingRequest is\n * created.\n *\n * @export\n */\nshaka.net.NetworkingEngine.NumBytesRemainingClass = class {\n  /**\n   * Constructor\n   */\n  constructor() {\n    /** @private {number} */\n    this.bytesToLoad_ = 0;\n  }\n\n  /**\n   * @param {number} bytesToLoad\n   */\n  setBytes(bytesToLoad) {\n    this.bytesToLoad_ = bytesToLoad;\n  }\n\n  /**\n   * @return {number}\n   */\n  getBytes() {\n    return this.bytesToLoad_;\n  }\n};\n\n/**\n * A pending network request. This can track the current progress of the\n * download, and allows the request to be aborted if the network is slow.\n *\n * @implements {shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @extends {shaka.util.AbortableOperation}\n * @export\n */\nshaka.net.NetworkingEngine.PendingRequest =\n    class extends shaka.util.AbortableOperation {\n  /**\n   * @param {!Promise} promise\n   *   A Promise which represents the underlying operation.  It is resolved when\n   *   the operation is complete, and rejected if the operation fails or is\n   *   aborted.  Aborted operations should be rejected with a shaka.util.Error\n   *   object using the error code OPERATION_ABORTED.\n   * @param {function():!Promise} onAbort\n   *   Will be called by this object to abort the underlying operation.\n   *   This is not cancelation, and will not necessarily result in any work\n   *   being undone.  abort() should return a Promise which is resolved when the\n   *   underlying operation has been aborted.  The returned Promise should never\n   *   be rejected.\n   * @param {shaka.net.NetworkingEngine.NumBytesRemainingClass}\n   *   numBytesRemainingObj\n   */\n  constructor(promise, onAbort, numBytesRemainingObj) {\n    super(promise, onAbort);\n\n    /** @private {shaka.net.NetworkingEngine.NumBytesRemainingClass} */\n    this.bytesRemaining_ = numBytesRemainingObj;\n  }\n\n /**\n  * @return {number}\n  */\n  getBytesRemaining() {\n    return this.bytesRemaining_.getBytes();\n  }\n};\n",null,"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.IReleasable');\n\n\n/**\n * An interface to standardize how objects release internal references\n * synchronously. If an object needs to asynchronously release references, then\n * it should use 'shaka.util.IDestroyable'.\n *\n * @interface\n * @export\n */\nshaka.util.IReleasable = class {\n  /**\n   * Request that this object release all internal references.\n   *\n   * @exportInterface\n   */\n  release() {}\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.EventManager');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.IReleasable');\ngoog.require('shaka.util.MultiMap');\n\n\n/**\n * @summary\n * An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @implements {shaka.util.IReleasable}\n * @export\n */\nshaka.util.EventManager = class {\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {shaka.util.MultiMap.<!shaka.util.EventManager.Binding_>}\n     */\n    this.bindingMap_ = new shaka.util.MultiMap();\n  }\n\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   * @export\n   */\n  release() {\n    this.removeAll();\n    this.bindingMap_ = null;\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n   * @param {(boolean|!AddEventListenerOptions)=} options An object that\n   *    specifies characteristics about the event listener.\n   *    The passive option, if true, indicates that this function will never\n   *    call preventDefault(), which improves scrolling performance.\n   * @export\n   */\n  listen(target, type, listener, options) {\n    if (!this.bindingMap_) {\n      return;\n    }\n\n    const binding =\n        new shaka.util.EventManager.Binding_(target, type, listener, options);\n    this.bindingMap_.push(type, binding);\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.  The listener will be\n   * removed when the first instance of the event is fired.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n   * @param {(boolean|!AddEventListenerOptions)=} options An object that\n   *    specifies characteristics about the event listener.\n   *    The passive option, if true, indicates that this function will never\n   *    call preventDefault(), which improves scrolling performance.\n   * @export\n   */\n  listenOnce(target, type, listener, options) {\n    // Install a shim listener that will stop listening after the first event.\n    const shim = (event) => {\n      // Stop listening to this event.\n      this.unlisten(target, type, shim);\n      // Call the original listener.\n      listener(event);\n    };\n    this.listen(target, type, shim, options);\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {shaka.util.EventManager.ListenerType=} listener The event listener.\n   * @export\n   */\n  unlisten(target, type, listener) {\n    if (!this.bindingMap_) {\n      return;\n    }\n\n    const list = this.bindingMap_.get(type) || [];\n\n    for (const binding of list) {\n      if (binding.target == target) {\n        if (listener == binding.listener || !listener) {\n          binding.unlisten();\n          this.bindingMap_.remove(type, binding);\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @export\n   */\n  removeAll() {\n    if (!this.bindingMap_) {\n      return;\n    }\n\n    const list = this.bindingMap_.getAll();\n\n    for (const binding of list) {\n      binding.unlisten();\n    }\n\n    this.bindingMap_.clear();\n  }\n};\n\n\n/**\n * @typedef {function(!Event)}\n * @export\n */\nshaka.util.EventManager.ListenerType;\n\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n *\n * @private\n */\nshaka.util.EventManager.Binding_ = class {\n  /**\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n   * @param {(boolean|!AddEventListenerOptions)=} options An object that\n   *    specifies characteristics about the event listener.\n   *    The passive option, if true, indicates that this function will never\n   *    call preventDefault(), which improves scrolling performance.\n   */\n  constructor(target, type, listener, options) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?shaka.util.EventManager.ListenerType} */\n    this.listener = listener;\n\n    /** @type {(boolean|!AddEventListenerOptions)} */\n    this.options =\n        shaka.util.EventManager.Binding_.convertOptions_(target, options);\n\n    this.target.addEventListener(type, listener, this.options);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if\n   * the event listener is already detached.\n   * @export\n   */\n  unlisten() {\n    goog.asserts.assert(this.target, 'Missing target');\n    this.target.removeEventListener(this.type, this.listener, this.options);\n\n    this.target = null;\n    this.listener = null;\n    this.options = false;\n  }\n\n  /**\n   * Converts the provided options value into a value accepted by the browser.\n   * Some browsers (e.g. IE11 and Tizen) don't support passing options as an\n   * object.  So this detects this case and converts it.\n   *\n   * @param {EventTarget} target\n   * @param {(boolean|!AddEventListenerOptions)=} value\n   * @return {(boolean|!AddEventListenerOptions)}\n   * @private\n   */\n  static convertOptions_(target, value) {\n    if (value == undefined) {\n      return false;\n    } else if (typeof value == 'boolean') {\n      return value;\n    } else {\n      // Ignore the 'passive' option since it is just an optimization and\n      // doesn't affect behavior.  Assert there aren't any other settings to\n      // ensure we don't have different behavior on different browsers by\n      // ignoring an important option.\n      const ignored = new Set(['passive', 'capture']);\n      const keys = Object.keys(value).filter((k) => !ignored.has(k));\n      goog.asserts.assert(\n          keys.length == 0,\n          'Unsupported flag(s) to addEventListener: ' + keys.join(','));\n\n      const supports =\n          shaka.util.EventManager.Binding_.doesSupportObject_(target);\n      if (supports) {\n        return value;\n      } else {\n        return value['capture'] || false;\n      }\n    }\n  }\n\n  /**\n   * Checks whether the browser supports passing objects as the third argument\n   * to addEventListener.  This caches the result value in a static field to\n   * avoid a bunch of checks.\n   *\n   * @param {EventTarget} target\n   * @return {boolean}\n   * @private\n   */\n  static doesSupportObject_(target) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n    let supports = shaka.util.EventManager.Binding_.supportsObject_;\n    if (supports == undefined) {\n      supports = false;\n      try {\n        const options = {};\n        // This defines a getter that will set this variable if called.  So if\n        // the browser gets this property, it supports using an object.  If the\n        // browser doesn't get these fields, it won't support objects.\n        const prop = {\n          get: () => {\n            supports = true;\n            return false;\n          },\n        };\n        Object.defineProperty(options, 'passive', prop);\n        Object.defineProperty(options, 'capture', prop);\n\n        const call = () => {};\n        target.addEventListener('test', call, options);\n        target.removeEventListener('test', call, options);\n      } catch (e) {\n        supports = false;\n      }\n      shaka.util.EventManager.Binding_.supportsObject_ = supports;\n    }\n    return supports || false;  // \"false\" fallback needed for compiler.\n  }\n};\n\n/** @private {(boolean|undefined)} */\nshaka.util.EventManager.Binding_.supportsObject_ = undefined;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Iterables');\n\n\n/**\n * Recreations of Array-like functions so that they work on any iterable\n * type.\n * @final\n */\nshaka.util.Iterables = class {\n  /**\n   * @param {!Iterable.<FROM>} iterable\n   * @param {function(FROM):TO} mapping\n   * @return {!Iterable.<TO>}\n   * @template FROM,TO\n   */\n  static map(iterable, mapping) {\n    const array = [];\n    for (const x of iterable) { array.push(mapping(x)); }\n    return array;\n  }\n\n  /**\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} test\n   * @return {boolean}\n   * @template T\n   */\n  static every(iterable, test) {\n    for (const x of iterable) {\n      if (!test(x)) { return false; }\n    }\n    return true;\n  }\n\n  /**\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} test\n   * @return {boolean}\n   * @template T\n   */\n  static some(iterable, test) {\n    for (const x of iterable) {\n      if (test(x)) { return true; }\n    }\n    return false;\n  }\n\n  /**\n   * Iterate over an iterable object and return only the items that |filter|\n   * returns true for.\n   *\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} filter\n   * @return {!Array.<T>}\n   * @template T\n   */\n  static filter(iterable, filter) {\n    const out = [];\n    for (const x of iterable) {\n      if (filter(x)) { out.push(x); }\n    }\n    return out;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MapUtils');\n\n\n/**\n * @namespace shaka.util.MapUtils\n * @summary A set of map/object utility functions.\n */\n\n\n/**\n * @param {!Object.<KEY, VALUE>} object\n * @return {!Map.<KEY, VALUE>}\n * @template KEY,VALUE\n */\nshaka.util.MapUtils.asMap = function(object) {\n  const map = new Map();\n  Object.keys(object).forEach((key) => {\n    map.set(key, object[key]);\n  });\n\n  return map;\n};\n\n\n/**\n * @param {!Map.<KEY, VALUE>} map\n * @return {!Object.<KEY, VALUE>}\n * @template KEY,VALUE\n */\nshaka.util.MapUtils.asObject = function(map) {\n  const obj = {};\n  map.forEach((value, key) => {\n    obj[key] = value;\n  });\n\n  return obj;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MimeUtils');\n\n\n/**\n * @summary A set of utility functions for dealing with MIME types.\n */\nshaka.util.MimeUtils = class {\n  /**\n   * Takes a MIME type and optional codecs string and produces the full MIME\n   * type.\n   *\n   * @param {string} mimeType\n   * @param {string=} codecs\n   * @return {string}\n   */\n  static getFullType(mimeType, codecs) {\n    let fullMimeType = mimeType;\n    if (codecs) {\n      fullMimeType += '; codecs=\"' + codecs + '\"';\n    }\n    return fullMimeType;\n  }\n\n  /**\n   * Takes a Stream object and produces an extended MIME type with information\n   * beyond the container and codec type, when available.\n   *\n   * @param {shaka.extern.Stream} stream\n   * @return {string}\n   */\n  static getExtendedType(stream) {\n    const components = [stream.mimeType];\n\n    const extendedMimeParams = shaka.util.MimeUtils.EXTENDED_MIME_PARAMETERS_;\n    extendedMimeParams.forEach((mimeKey, streamKey) => {\n      const value = stream[streamKey];\n      if (value) {\n        components.push(mimeKey + '=\"' + value + '\"');\n      }\n    });\n\n    return components.join(';');\n  }\n\n  /**\n   * Split a list of codecs encoded in a string into a list of codecs.\n   * @param {string} codecs\n   * @return {!Array.<string>}\n   */\n  static splitCodecs(codecs) {\n    return codecs.split(',');\n  }\n\n  /**\n   * Get the base codec from a codec string.\n   *\n   * @param {string} codecString\n   * @return {string}\n   */\n  static getCodecBase(codecString) {\n    const parts = shaka.util.MimeUtils.getCodecParts_(codecString);\n    return parts[0];\n  }\n\n  /**\n   * Get the base and profile of a codec string. Where [0] will be the codec\n   * base and [1] will be the profile.\n   * @param {string} codecString\n   * @return {!Array.<string>}\n   * @private\n   */\n  static getCodecParts_(codecString) {\n    const parts = codecString.split('.');\n\n    const base = parts[0];\n\n    parts.pop();\n    const profile = parts.join('.');\n\n    // Make sure that we always return a \"base\" and \"profile\".\n    return [base, profile];\n  }\n};\n\n\n/**\n * A map from Stream object keys to MIME type parameters.  These should be\n * ignored by platforms that do not recognize them.\n *\n * This initial set of parameters are all recognized by Chromecast.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.util.MimeUtils.EXTENDED_MIME_PARAMETERS_ = new Map()\n  .set('codecs', 'codecs')\n  .set('frameRate', 'framerate')  // Ours is camelCase, theirs is lowercase.\n  .set('bandwidth', 'bitrate')  // They are in the same units: bits/sec.\n  .set('width', 'width')\n  .set('height', 'height')\n  .set('channelsCount', 'channels');\n\n\n/**\n * A mimetype created for CEA closed captions.\n * @const {string}\n */\nshaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE = 'application/cea-608';\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Platform');\n\ngoog.require('shaka.util.Timer');\n\n\n/**\n * A wrapper for platform-specific functions.\n *\n * @final\n */\nshaka.util.Platform = class {\n  /**\n   * Check if the current platform supports media source. We assume that if\n   * the current platform supports media source, then we can use media source\n   * as per its design.\n   *\n   * @return {boolean}\n   */\n  static supportsMediaSource() {\n    // Browsers that lack a media source implementation will have no reference\n    // to |window.MediaSource|. Platforms that we see having problematic media\n    // source implementations will have this reference removed via a polyfill.\n    if (!window.MediaSource) {\n      return false;\n    }\n\n    // Some very old MediaSource implementations didn't have isTypeSupported.\n    if (!MediaSource.isTypeSupported) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns true if the media type is supported natively by the platform.\n   *\n   * @param {string} mimeType\n   * @return {boolean}\n   */\n  static supportsMediaType(mimeType) {\n    const video = shaka.util.Platform.anyMediaElement_();\n    return video.canPlayType(mimeType) != '';\n  }\n\n  /**\n   * Check if the current platform is MS Edge.\n   *\n   * @return {boolean}\n   */\n  static isEdge() {\n    return shaka.util.Platform.userAgentContains_('Edge/');\n  }\n\n  /**\n   * Check if the current platform is MS IE.\n   *\n   * @return {boolean}\n   */\n  static isIE() {\n    return shaka.util.Platform.userAgentContains_('Trident/');\n  }\n\n  /**\n   * Check if the current platform is a Tizen TV.\n   *\n   * @return {boolean}\n   */\n  static isTizen() {\n    return shaka.util.Platform.userAgentContains_('Tizen');\n  }\n\n  /**\n   * Check if the current platform is a Tizen 3 TV.\n   *\n   * @return {boolean}\n   */\n  static isTizen3() {\n    return shaka.util.Platform.userAgentContains_('Tizen 3');\n  }\n\n  /**\n   * Check if the current platform is a WebOS.\n   *\n   * @return {boolean}\n   */\n  static isWebOS() {\n    return shaka.util.Platform.userAgentContains_('Web0S');\n  }\n\n  /**\n   * Check if the current platform is a Google Chromecast.\n   *\n   * @return {boolean}\n   */\n  static isChromecast() {\n    return shaka.util.Platform.userAgentContains_('CrKey');\n  }\n\n  /**\n   * Check if the current platform is Google Chrome.\n   *\n   * @return {boolean}\n   */\n  static isChrome() {\n    // The Edge user agent will also contain the \"Chrome\" keyword, so we need\n    // to make sure this is not Edge.\n    return shaka.util.Platform.userAgentContains_('Chrome') &&\n           !shaka.util.Platform.isEdge();\n  }\n\n  /**\n   * Check if the current platform is an Apple device (iOS, desktop Safari, etc)\n   *\n   * @return {boolean}\n   */\n  static isApple() {\n    return !!navigator.vendor && navigator.vendor.includes('Apple');\n  }\n\n  /**\n   * Guesses if the platform is a mobile one (iOS or Android).\n   *\n   * @return {boolean}\n   */\n  static isMobile() {\n    return /(?:iPhone|iPad|iPod|Android)/.test(navigator.userAgent);\n  }\n\n  /**\n   * Check if the user agent contains a key. This is the best way we know of\n   * right now to detect platforms. If there is a better way, please send a\n   * PR.\n   *\n   * @param {string} key\n   * @return {boolean}\n   * @private\n   */\n  static userAgentContains_(key) {\n    const userAgent = navigator.userAgent || '';\n    return userAgent.includes(key);\n  }\n\n  /**\n   * For canPlayType queries, we just need any instance.\n   *\n   * First, use a cached element from a previous query.\n   * Second, search the page for one.\n   * Third, create a temporary one.\n   *\n   * Cached elements expire in one second so that they can be GC'd or removed.\n   *\n   * @return {!HTMLMediaElement}\n   */\n  static anyMediaElement_() {\n    const Platform = shaka.util.Platform;\n    if (Platform.cachedMediaElement_) {\n      return Platform.cachedMediaElement_;\n    }\n\n    if (!Platform.cacheExpirationTimer_) {\n      Platform.cacheExpirationTimer_ = new shaka.util.Timer(() => {\n        Platform.cachedMediaElement_ = null;\n      });\n    }\n\n    Platform.cachedMediaElement_ = /** @type {HTMLMediaElement} */(\n        document.querySelector('video') || document.querySelector('audio'));\n\n    if (!Platform.cachedMediaElement_) {\n      Platform.cachedMediaElement_ = /** @type {!HTMLMediaElement} */(\n          document.createElement('video'));\n    }\n\n    Platform.cacheExpirationTimer_.tickAfter(/* seconds= */ 1);\n    return Platform.cachedMediaElement_;\n  }\n};\n\n/** @private {shaka.util.Timer} */\nshaka.util.Platform.cacheExpirationTimer_ = null;\n\n/** @private {HTMLMediaElement} */\nshaka.util.Platform.cachedMediaElement_ = null;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.StringUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace shaka.util.StringUtils\n * @summary A set of string utility functions.\n * @exportDoc\n */\n\n\n/**\n * Creates a string from the given buffer as UTF-8 encoding.\n *\n * @param {?BufferSource} data\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromUTF8 = function(data) {\n  if (!data) return '';\n\n  let uint8 = new Uint8Array(data);\n  // If present, strip off the UTF-8 BOM.\n  if (uint8[0] == 0xef && uint8[1] == 0xbb && uint8[2] == 0xbf) {\n    uint8 = uint8.subarray(3);\n  }\n\n  // http://stackoverflow.com/a/13691499\n  let utf8 = shaka.util.StringUtils.fromCharCode(uint8);\n  // This converts each character in the string to an escape sequence.  If the\n  // character is in the ASCII range, it is not converted; otherwise it is\n  // converted to a URI escape sequence.\n  // Example: '\\x67\\x35\\xe3\\x82\\xac' -> 'g#%E3%82%AC'\n  let escaped = escape(utf8);\n  // Decode the escaped sequence.  This will interpret UTF-8 sequences into the\n  // correct character.\n  // Example: 'g#%E3%82%AC' -> 'g#€'\n  try {\n    return decodeURIComponent(escaped);\n  } catch (e) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.BAD_ENCODING);\n  }\n};\n\n\n/**\n * Creates a string from the given buffer as UTF-16 encoding.\n *\n * @param {?BufferSource} data\n * @param {boolean} littleEndian true to read little endian, false to read big.\n * @param {boolean=} noThrow true to avoid throwing in cases where we may\n *     expect invalid input.  If noThrow is true and the data has an odd length,\n *     it will be truncated.\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromUTF16 = function(data, littleEndian, noThrow) {\n  if (!data) return '';\n\n  if (!noThrow && data.byteLength % 2 != 0) {\n    shaka.log.error('Data has an incorrect length, must be even.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.BAD_ENCODING);\n  }\n\n  /** @type {ArrayBuffer} */\n  let buffer;\n  if (data instanceof ArrayBuffer) {\n    buffer = data;\n  } else {\n    // Have to create a new buffer because the argument may be a smaller\n    // view on a larger ArrayBuffer.  We cannot use an ArrayBufferView in\n    // a DataView.\n    let temp = new Uint8Array(data.byteLength);\n    temp.set(new Uint8Array(data));\n    buffer = temp.buffer;\n  }\n\n  // Use a DataView to ensure correct endianness.\n  let length = Math.floor(data.byteLength / 2);\n  let arr = new Uint16Array(length);\n  let dataView = new DataView(buffer);\n  for (let i = 0; i < length; i++) {\n    arr[i] = dataView.getUint16(i * 2, littleEndian);\n  }\n  return shaka.util.StringUtils.fromCharCode(arr);\n};\n\n\n/**\n * Creates a string from the given buffer, auto-detecting the encoding that is\n * being used.  If it cannot detect the encoding, it will throw an exception.\n *\n * @param {?BufferSource} data\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromBytesAutoDetect = function(data) {\n  const StringUtils = shaka.util.StringUtils;\n\n  let uint8 = new Uint8Array(data);\n  if (uint8[0] == 0xef && uint8[1] == 0xbb && uint8[2] == 0xbf) {\n    return StringUtils.fromUTF8(uint8);\n  } else if (uint8[0] == 0xfe && uint8[1] == 0xff) {\n    return StringUtils.fromUTF16(uint8.subarray(2), false /* littleEndian */);\n  } else if (uint8[0] == 0xff && uint8[1] == 0xfe) {\n    return StringUtils.fromUTF16(uint8.subarray(2), true /* littleEndian */);\n  }\n\n  let isAscii = (function(arr, i) {\n    // arr[i] >= ' ' && arr[i] <= '~';\n    return arr.byteLength <= i || (arr[i] >= 0x20 && arr[i] <= 0x7e);\n  }.bind(null, uint8));\n\n  shaka.log.debug('Unable to find byte-order-mark, making an educated guess.');\n  if (uint8[0] == 0 && uint8[2] == 0) {\n    return StringUtils.fromUTF16(data, false /* littleEndian */);\n  } else if (uint8[1] == 0 && uint8[3] == 0) {\n    return StringUtils.fromUTF16(data, true /* littleEndian */);\n  } else if (isAscii(0) && isAscii(1) && isAscii(2) && isAscii(3)) {\n    return StringUtils.fromUTF8(data);\n  }\n\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.TEXT,\n      shaka.util.Error.Code.UNABLE_TO_DETECT_ENCODING);\n};\n\n\n/**\n * Creates a ArrayBuffer from the given string, converting to UTF-8 encoding.\n *\n * @param {string} str\n * @return {!ArrayBuffer}\n * @export\n */\nshaka.util.StringUtils.toUTF8 = function(str) {\n  // http://stackoverflow.com/a/13691499\n  // Converts the given string to a URI encoded string.  If a character falls\n  // in the ASCII range, it is not converted; otherwise it will be converted to\n  // a series of URI escape sequences according to UTF-8.\n  // Example: 'g#€' -> 'g#%E3%82%AC'\n  let encoded = encodeURIComponent(str);\n  // Convert each escape sequence individually into a character.  Each escape\n  // sequence is interpreted as a code-point, so if an escape sequence happens\n  // to be part of a multi-byte sequence, each byte will be converted to a\n  // single character.\n  // Example: 'g#%E3%82%AC' -> '\\x67\\x35\\xe3\\x82\\xac'\n  let utf8 = unescape(encoded);\n\n  let result = new Uint8Array(utf8.length);\n  for (let i = 0; i < utf8.length; ++i) {\n    result[i] = utf8.charCodeAt(i);\n  }\n  return result.buffer;\n};\n\n\n/**\n * Creates a ArrayBuffer from the given string, converting to UTF-16 encoding.\n *\n * @param {string} str\n * @param {boolean} littleEndian\n * @return {!ArrayBuffer}\n * @export\n */\nshaka.util.StringUtils.toUTF16 = function(str, littleEndian) {\n  const result = new Uint8Array(str.length * 2);\n  const view = new DataView(result.buffer);\n  for (let i = 0; i < str.length; ++i) {\n    const value = str.charCodeAt(i);\n    view.setUint16(/* position= */ i * 2, value, littleEndian);\n  }\n  return result.buffer;\n};\n\n\n/**\n * Creates a new string from the given array of char codes.\n *\n * Using String.fromCharCode.apply is risky because you can trigger stack errors\n * on very large arrays.  This breaks up the array into several pieces to avoid\n * this.\n *\n * @param {!TypedArray} array\n * @return {string}\n */\nshaka.util.StringUtils.fromCharCode = function(array) {\n  // Check the browser for what chunk sizes it supports.  Cache the result\n  // in an impl method to avoid checking several times.\n  if (!shaka.util.StringUtils.fromCharCodeImpl_) {\n    const supportsChunkSize = (size) => {\n      try {\n        const buffer = new Uint8Array(size);\n        // The compiler will complain about suspicious value if this isn't\n        // stored in a variable and used.\n        const foo = String.fromCharCode(...buffer);\n        goog.asserts.assert(foo, 'Should get value');\n        return true;\n      } catch (error) {\n        return false;\n      }\n    };\n\n    // Different browsers support different chunk sizes; find out the largest\n    // this browser supports so we can use larger chunks on supported browsers\n    // but still support lower-end devices that require small chunks.\n    // 64k is supported on all major desktop browsers.\n    for (let size = 64 * 1024; size > 0; size /= 2) {\n      if (supportsChunkSize(size)) {\n        shaka.util.StringUtils.fromCharCodeImpl_ = (buffer) => {\n          let ret = '';\n          for (let i = 0; i < buffer.length; i += size) {\n            const subArray = buffer.subarray(i, i + size);\n            ret += String.fromCharCode(...subArray);\n          }\n          return ret;\n        };\n        break;\n      }\n    }\n  }\n\n  goog.asserts.assert(\n      shaka.util.StringUtils.fromCharCodeImpl_,\n      'Unable to create a fromCharCode method');\n  return shaka.util.StringUtils.fromCharCodeImpl_(array);\n};\n\n\n/** @private {?function(!TypedArray):string} */\nshaka.util.StringUtils.fromCharCodeImpl_ = null;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Uint8ArrayUtils');\n\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * @namespace shaka.util.Uint8ArrayUtils\n * @summary A set of Uint8Array utility functions.\n * @exportDoc\n */\n\n\n/**\n * Convert a Uint8Array to a base64 string.  The output will always use the\n * alternate encoding/alphabet also known as \"base64url\".\n * @param {!Uint8Array} arr\n * @param {boolean=} padding If true, pad the output with equals signs.\n *   Defaults to true.\n * @return {string}\n * @export\n */\nshaka.util.Uint8ArrayUtils.toBase64 = function(arr, padding) {\n  // btoa expects a \"raw string\" where each character is interpreted as a byte.\n  let bytes = shaka.util.StringUtils.fromCharCode(arr);\n  padding = (padding == undefined) ? true : padding;\n  let base64 = window.btoa(bytes).replace(/\\+/g, '-').replace(/\\//g, '_');\n  return padding ? base64 : base64.replace(/=*$/, '');\n};\n\n\n/**\n * Convert a base64 string to a Uint8Array.  Accepts either the standard\n * alphabet or the alternate \"base64url\" alphabet.\n * @param {string} str\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.fromBase64 = function(str) {\n  // atob creates a \"raw string\" where each character is interpreted as a byte.\n  let bytes = window.atob(str.replace(/-/g, '+').replace(/_/g, '/'));\n  let result = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; ++i) {\n    result[i] = bytes.charCodeAt(i);\n  }\n  return result;\n};\n\n\n/**\n * Convert a hex string to a Uint8Array.\n * @param {string} str\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.fromHex = function(str) {\n  let arr = new Uint8Array(str.length / 2);\n  for (let i = 0; i < str.length; i += 2) {\n    arr[i / 2] = window.parseInt(str.substr(i, 2), 16);\n  }\n  return arr;\n};\n\n\n/**\n * Convert a Uint8Array to a hex string.\n * @param {!Uint8Array} arr\n * @return {string}\n * @export\n */\nshaka.util.Uint8ArrayUtils.toHex = function(arr) {\n  let hex = '';\n  for (let i = 0; i < arr.length; ++i) {\n    let value = arr[i].toString(16);\n    if (value.length == 1) value = '0' + value;\n    hex += value;\n  }\n  return hex;\n};\n\n\n/**\n * Compare two Uint8Arrays for equality.\n * @param {Uint8Array} arr1\n * @param {Uint8Array} arr2\n * @return {boolean}\n * @export\n */\nshaka.util.Uint8ArrayUtils.equal = function(arr1, arr2) {\n  if (!arr1 && !arr2) return true;\n  if (!arr1 || !arr2) return false;\n  if (arr1.length != arr2.length) return false;\n  for (let i = 0; i < arr1.length; ++i) {\n    if (arr1[i] != arr2[i]) return false;\n  }\n  return true;\n};\n\n\n/**\n * Concatenate Uint8Arrays.\n * @param {...!Uint8Array} varArgs\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.concat = function(...varArgs) {\n  let totalLength = 0;\n  for (let i = 0; i < varArgs.length; ++i) {\n    totalLength += varArgs[i].length;\n  }\n\n  let result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (let i = 0; i < varArgs.length; ++i) {\n    result.set(varArgs[i], offset);\n    offset += varArgs[i].length;\n  }\n  return result;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.DrmEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Iterables');\ngoog.require('shaka.util.MapUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Platform');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Timer');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @param {shaka.media.DrmEngine.PlayerInterface} playerInterface\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.DrmEngine = function(playerInterface) {\n  /** @private {?shaka.media.DrmEngine.PlayerInterface} */\n  this.playerInterface_ = playerInterface;\n\n  /** @private {!Set.<string>} */\n  this.supportedTypes_ = new Set();\n\n  /** @private {MediaKeys} */\n  this.mediaKeys_ = null;\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = null;\n\n  /** @private {boolean} */\n  this.initialized_ = false;\n\n  /** @private {?shaka.extern.DrmInfo} */\n  this.currentDrmInfo_ = null;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /**\n   * @private {!Map.<MediaKeySession,\n   *           shaka.media.DrmEngine.SessionMetaData>}\n   */\n  this.activeSessions_ = new Map();\n\n  /** @private {!Array.<string>} */\n  this.offlineSessionIds_ = [];\n\n  /** @private {!shaka.util.PublicPromise} */\n  this.allSessionsLoaded_ = new shaka.util.PublicPromise();\n\n  /** @private {?shaka.extern.DrmConfiguration} */\n  this.config_ = null;\n\n  /** @private {?function(!shaka.util.Error)} */\n  this.onError_ = (err) => {\n    this.allSessionsLoaded_.reject(err);\n    playerInterface.onError(err);\n  };\n\n  /**\n   * The most recent key status information we have.\n   * We may not have announced this information to the outside world yet,\n   * which we delay to batch up changes and avoid spurious \"missing key\" errors.\n   * @private {!Map.<string, string>}\n   */\n  this.keyStatusByKeyId_ = new Map();\n\n  /**\n   * The key statuses most recently announced to other classes.\n   * We may have more up-to-date information being collected in\n   * this.keyStatusByKeyId_, which has not been batched up and released yet.\n   * @private {!Map.<string, string>}\n   */\n  this.announcedKeyStatusByKeyId_ = new Map();\n\n  /** @private {shaka.util.Timer} */\n  this.keyStatusTimer_ =\n      new shaka.util.Timer(() => this.processKeyStatusChanges_());\n\n  /**\n   * A flag to signal when have started destroying ourselves. This will:\n   *  1. Stop later calls to |destroy| from trying to destroy the already\n   *     destroyed (or currently destroying) DrmEngine.\n   *  2. Stop in-progress async operations from continuing.\n   *\n   * @private {boolean}\n   */\n  this.isDestroying_ = false;\n\n  /**\n   * A promise that will only resolve once we have finished destroying\n   * ourselves, this is used to ensure that subsequent calls to |destroy| don't\n   * resolve before the first call to |destroy|.\n   *\n   * @private {!shaka.util.PublicPromise}\n   */\n  this.finishedDestroyingPromise_ = new shaka.util.PublicPromise();\n\n  /** @private {boolean} */\n  this.usePersistentLicenses_ = false;\n\n  /** @private {!Array.<!MediaKeyMessageEvent>} */\n  this.mediaKeyMessageEvents_ = [];\n\n  /** @private {boolean} */\n  this.initialRequestsSent_ = false;\n\n  /** @private {?shaka.util.Timer} */\n  this.expirationTimer_ = new shaka.util.Timer(() => {\n    this.pollExpiration_();\n  }).tickEvery(/* seconds= */ 1);\n\n  // Add a catch to the Promise to avoid console logs about uncaught errors.\n  const noop = () => {};\n  this.allSessionsLoaded_.catch(noop);\n};\n\n\n/**\n * @typedef {{\n *   loaded: boolean,\n *   initData: Uint8Array,\n *   oldExpiration: number,\n *   updatePromise: shaka.util.PublicPromise\n * }}\n *\n * @description A record to track sessions and suppress duplicate init data.\n * @property {boolean} loaded\n *   True once the key status has been updated (to a non-pending state).  This\n *   does not mean the session is 'usable'.\n * @property {Uint8Array} initData\n *   The init data used to create the session.\n * @property {!MediaKeySession} session\n *   The session object.\n * @property {number} oldExpiration\n *   The expiration of the session on the last check.  This is used to fire\n *   an event when it changes.\n * @property {shaka.util.PublicPromise} updatePromise\n *   An optional Promise that will be resolved/rejected on the next update()\n *   call.  This is used to track the 'license-release' message when calling\n *   remove().\n */\nshaka.media.DrmEngine.SessionMetaData;\n\n\n/**\n * @typedef {{\n *   netEngine: !shaka.net.NetworkingEngine,\n *   onError: function(!shaka.util.Error),\n *   onKeyStatus: function(!Object.<string,string>),\n *   onExpirationUpdated: function(string,number),\n *   onEvent: function(!Event)\n * }}\n *\n * @property {shaka.net.NetworkingEngine} netEngine\n *   The NetworkingEngine instance to use.  The caller retains ownership.\n * @property {function(!shaka.util.Error)} onError\n *   Called when an error occurs.  If the error is recoverable (see\n *   {@link shaka.util.Error}) then the caller may invoke either\n *   StreamingEngine.switch*() or StreamingEngine.seeked() to attempt recovery.\n * @property {function(!Object.<string,string>)} onKeyStatus\n *   Called when key status changes.  The argument is a map of hex key IDs to\n *   statuses.\n * @property {function(string,number)} onExpirationUpdated\n *   Called when the session expiration value changes.\n * @property {function(!Event)} onEvent\n *   Called when an event occurs that should be sent to the app.\n */\nshaka.media.DrmEngine.PlayerInterface;\n\n\n/** @override */\nshaka.media.DrmEngine.prototype.destroy = async function() {\n  // If we have started destroying ourselves, wait for the common \"I am finished\n  // being destroyed\" promise to be resolved.\n  if (this.isDestroying_) {\n   await this.finishedDestroyingPromise_;\n  } else {\n    this.isDestroying_ = true;\n    await this.destroyNow_();\n    this.finishedDestroyingPromise_.resolve();\n  }\n};\n\n\n/**\n * Destroy this instance of DrmEngine. This assumes that all other checks about\n * \"if it should\" have passed.\n *\n * @private\n */\nshaka.media.DrmEngine.prototype.destroyNow_ = async function() {\n  // |eventManager_| should only be |null| after we call |destroy|. Destroy it\n  // first so that we will stop responding to events.\n  this.eventManager_.release();\n  this.eventManager_ = null;\n\n  // Since we are destroying ourselves, we don't want to react to the \"all\n  // sessions loaded\" event.\n  this.allSessionsLoaded_.reject();\n\n  // Stop all timers. This will ensure that they do not start any new work while\n  // we are destroying ourselves.\n  this.expirationTimer_.stop();\n  this.expirationTimer_ = null;\n\n  this.keyStatusTimer_.stop();\n  this.keyStatusTimer_ = null;\n\n  // Close all open sessions.\n  const openSessions = Array.from(this.activeSessions_.keys());\n  this.activeSessions_.clear();\n\n  // Close all sessions before we remove media keys from the video element.\n  await Promise.all(openSessions.map((session) => {\n    return Promise.resolve().then(async () => {\n      shaka.log.v1('Closing session', session.sessionId);\n\n      try {\n        await shaka.media.DrmEngine.closeSession_(session);\n      } catch (error) {\n        // Ignore errors when closing the sessions. Closing a session that\n        // generated no key requests will throw an error.\n      }\n    });\n  }));\n\n  // |video_| will be |null| if we never attached to a video element.\n  if (this.video_) {\n    goog.asserts.assert(!this.video_.src, 'video src must be removed first!');\n\n    try {\n      await this.video_.setMediaKeys(null);\n    } catch (error) {\n      // Ignore any failures while removing media keys from the video element.\n    }\n\n    this.video_ = null;\n  }\n\n  // Break references to everything else we hold internally.\n  this.currentDrmInfo_ = null;\n  this.supportedTypes_.clear();\n  this.mediaKeys_ = null;\n  this.offlineSessionIds_ = [];\n  this.config_ = null;\n  this.onError_ = null;\n  this.playerInterface_ = null;\n};\n\n\n/**\n * Called by the Player to provide an updated configuration any time it changes.\n * Must be called at least once before init().\n *\n * @param {shaka.extern.DrmConfiguration} config\n */\nshaka.media.DrmEngine.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * Initialize the drm engine for storing and deleting stored content.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that are going to be stored.\n * @param {boolean} usePersistentLicenses\n *    Whether or not persistent licenses should be requested and stored for\n *    |manifest|.\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForStorage = function(\n    variants, usePersistentLicenses) {\n  // There are two cases for this call:\n  //  1. We are about to store a manifest - in that case, there are no offline\n  //     sessions and therefore no offline session ids.\n  //  2. We are about to remove the offline sessions for this manifest - in\n  //     that case, we don't need to know about them right now either as\n  //     we will be told which ones to remove later.\n  this.offlineSessionIds_ = [];\n\n  // What we really need to know is whether or not they are expecting to use\n  // persistent licenses.\n  this.usePersistentLicenses_ = usePersistentLicenses;\n\n  return this.init_(variants);\n};\n\n\n/**\n * Initialize the drm engine for playback operations.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that we want to support playing.\n * @param {!Array.<string>} offlineSessionIds\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForPlayback = function(\n    variants, offlineSessionIds) {\n  this.offlineSessionIds_ = offlineSessionIds;\n  this.usePersistentLicenses_ = offlineSessionIds.length > 0;\n\n  return this.init_(variants);\n};\n\n\n/**\n * Initializes the drm engine for removing persistent sessions.  Only the\n * removeSession(s) methods will work correctly, creating new sessions may not\n * work as desired.\n *\n * @param {string} keySystem\n * @param {string} licenseServerUri\n * @param {Uint8Array} serverCertificate\n * @param {!Array.<MediaKeySystemMediaCapability>} audioCapabilities\n * @param {!Array.<MediaKeySystemMediaCapability>} videoCapabilities\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForRemoval = function(\n    keySystem, licenseServerUri, serverCertificate,\n    audioCapabilities, videoCapabilities) {\n  /** @type {!Map.<string, MediaKeySystemConfiguration>} */\n  const configsByKeySystem = new Map();\n  configsByKeySystem.set(keySystem, {\n    audioCapabilities: audioCapabilities,\n    videoCapabilities: videoCapabilities,\n    distinctiveIdentifier: 'optional',\n    persistentState: 'required',\n    sessionTypes: ['persistent-license'],\n    label: keySystem,\n    drmInfos: [{\n      keySystem: keySystem,\n      licenseServerUri: licenseServerUri,\n      distinctiveIdentifierRequired: false,\n      persistentStateRequired: true,\n      audioRobustness: '',  // Not required by queryMediaKeys_\n      videoRobustness: '',  // Same\n      serverCertificate: serverCertificate,\n      initData: null,\n      keyIds: null,\n    }],  // Tracked by us, ignored by EME.\n  });\n\n  return this.queryMediaKeys_(configsByKeySystem);\n};\n\n\n/**\n * Negotiate for a key system and set up MediaKeys.\n * This will assume that both |usePersistentLicences_| and |offlineSessionIds_|\n * have been properly set.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that we expect to operate with during the drm engine's\n *    lifespan of the drm engine.\n * @return {!Promise} Resolved if/when a key system has been chosen.\n * @private\n */\nshaka.media.DrmEngine.prototype.init_ = function(variants) {\n  goog.asserts.assert(this.config_,\n      'DrmEngine configure() must be called before init()!');\n\n  const hadDrmInfo = variants.some((v) => v.drmInfos.length > 0);\n\n  // When preparing to play live streams, it is possible that we won't know\n  // about some upcoming encrypted content. If we initialize the drm engine\n  // with no key systems, we won't be able to play when the encrypted content\n  // comes.\n  //\n  // To avoid this, we will set the drm engine up to work with as many key\n  // systems as possible so that we will be ready.\n  if (!hadDrmInfo) {\n    const servers = shaka.util.MapUtils.asMap(this.config_.servers);\n    shaka.media.DrmEngine.replaceDrmInfo_(variants, servers);\n  }\n\n  // ClearKey config overrides the manifest DrmInfo if present. The variants\n  // are modified so that filtering in Player still works.\n  /** @type {?shaka.extern.DrmInfo} */\n  const clearKeyDrmInfo = this.configureClearKey_();\n  if (clearKeyDrmInfo) {\n    for (const variant of variants) {\n      variant.drmInfos = [clearKeyDrmInfo];\n    }\n  }\n\n  // Make sure all the drm infos are valid and filled in correctly.\n  for (const variant of variants) {\n    for (const info of variant.drmInfos) {\n      shaka.media.DrmEngine.fillInDrmInfoDefaults_(\n          info,\n          shaka.util.MapUtils.asMap(this.config_.servers),\n          shaka.util.MapUtils.asMap(this.config_.advanced || {}));\n    }\n  }\n\n  /** @type {!Map.<string, MediaKeySystemConfiguration>} */\n  const configsByKeySystem = this.prepareMediaKeyConfigsForVariants_(variants);\n\n  // TODO(vaage): Find an explanation for the difference between this\n  //  \"unencrypted\" form and the \"no drm info unencrypted form\" and express\n  //  that difference here.\n  if (!configsByKeySystem.size) {\n    // Unencrypted.\n    this.initialized_ = true;\n    return Promise.resolve();\n  }\n\n  const p = this.queryMediaKeys_(configsByKeySystem);\n\n  // TODO(vaage): Look into the assertion below. If we do not have any drm info,\n  //  we create drm info so that content can play if it has drm info later.\n  //  However it is okay if we fail to initialize? If we fail to initialize, it\n  //  means we won't be able to play the later-encrypted content, which is no\n  //  okay.\n\n  // If the content did not originally have any drm info, then it doesn't matter\n  // if we fail to initialize the drm engine, because we won't need it anyway.\n  return hadDrmInfo ?\n         p :\n         p.catch(() => {});\n};\n\n\n/**\n * Attach MediaKeys to the video element and start processing events.\n * @param {HTMLMediaElement} video\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.attach = function(video) {\n  if (!this.mediaKeys_) {\n    // Unencrypted, or so we think.  We listen for encrypted events in order to\n    // warn when the stream is encrypted, even though the manifest does not know\n    // it.\n    // Don't complain about this twice, so just listenOnce().\n    // FIXME: This is ineffective when a prefixed event is translated by our\n    // polyfills, since those events are only caught and translated by a\n    // MediaKeys instance.  With clear content and no polyfilled MediaKeys\n    // instance attached, you'll never see the 'encrypted' event on those\n    // platforms (IE 11 & Safari).\n    this.eventManager_.listenOnce(video, 'encrypted', (event) => {\n      this.onError_(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.ENCRYPTED_CONTENT_WITHOUT_DRM_INFO));\n    });\n    return Promise.resolve();\n  }\n\n  this.video_ = video;\n\n  this.eventManager_.listenOnce(this.video_, 'play', () => this.onPlay_());\n\n  let setMediaKeys = this.video_.setMediaKeys(this.mediaKeys_);\n  setMediaKeys = setMediaKeys.catch(function(exception) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_ATTACH_TO_VIDEO,\n        exception.message));\n  });\n\n  let setServerCertificate = this.setServerCertificate();\n\n  return Promise.all([setMediaKeys, setServerCertificate]).then(() => {\n    if (this.isDestroying_) { return Promise.reject(); }\n\n    this.createOrLoad();\n    if (!this.currentDrmInfo_.initData.length &&\n        !this.offlineSessionIds_.length) {\n      // Explicit init data for any one stream or an offline session is\n      // sufficient to suppress 'encrypted' events for all streams.\n      const cb = (e) =>\n          this.newInitData(e.initDataType, new Uint8Array(e.initData));\n      this.eventManager_.listen(this.video_, 'encrypted', cb);\n    }\n  }).catch((error) => {\n    if (this.isDestroying_) { return; }\n    return Promise.reject(error);\n  });\n};\n\n\n/**\n * Sets the server certificate based on the current DrmInfo.\n *\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.setServerCertificate = async function() {\n  goog.asserts.assert(this.initialized_,\n    'Must call init() before setServerCertificate');\n\n  if (this.mediaKeys_ &&\n      this.currentDrmInfo_ &&\n      this.currentDrmInfo_.serverCertificate &&\n      this.currentDrmInfo_.serverCertificate.length) {\n    try {\n      const supported = await this.mediaKeys_.setServerCertificate(\n          this.currentDrmInfo_.serverCertificate);\n      if (!supported) {\n        shaka.log.warning('Server certificates are not supported by the key' +\n                          ' system.  The server certificate has been ignored.');\n      }\n    } catch (exception) {\n      return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.INVALID_SERVER_CERTIFICATE,\n        exception.message));\n    }\n  }\n};\n\n\n/**\n * Remove an offline session and delete it's data. This can only be called\n * after a successful call to |init|. This will wait until the 'license-release'\n * message is handled. The returned Promise will be rejected if there is an\n * error releasing the license.\n *\n * @param {string} sessionId\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.removeSession = async function(sessionId) {\n  goog.asserts.assert(this.mediaKeys_, 'Must call init() before removeSession');\n\n  const session = await this.loadOfflineSession_(sessionId);\n\n  // This will be null on error, such as session not found.\n  if (!session) {\n    shaka.log.v2('Ignoring attempt to remove missing session', sessionId);\n    return;\n  }\n\n  // TODO: Consider adding a timeout to get the 'message' event.\n  // Note that the 'message' event will get raised after the remove()\n  // promise resolves.\n  const tasks = [];\n\n  const found = this.activeSessions_.get(session);\n  if (found) {\n    // This will force us to wait until the 'license-release' message has been\n    // handled.\n    found.updatePromise = new shaka.util.PublicPromise();\n    tasks.push(found.updatePromise);\n  }\n\n  shaka.log.v2('Attempting to remove session', sessionId);\n  tasks.push(session.remove());\n\n  await Promise.all(tasks);\n};\n\n/**\n * Creates the sessions for the init data and waits for them to become ready.\n *\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.createOrLoad = function() {\n  // Create temp sessions.\n  let initDatas = this.currentDrmInfo_ ? this.currentDrmInfo_.initData : [];\n  initDatas.forEach((initDataOverride) => {\n    return this.createTemporarySession_(initDataOverride.initDataType,\n                                        initDataOverride.initData);\n  });\n\n  // Load each session.\n  this.offlineSessionIds_.forEach((sessionId) => {\n    return this.loadOfflineSession_(sessionId);\n  });\n\n  // If we have no sessions, we need to resolve the promise right now or else\n  // it will never get resolved.\n  if (!initDatas.length && !this.offlineSessionIds_.length) {\n    this.allSessionsLoaded_.resolve();\n  }\n\n  return this.allSessionsLoaded_;\n};\n\n\n/**\n * Called when new initialization data is encountered.  If this data hasn't\n * been seen yet, this will create a new session for it.\n *\n * @param {string} initDataType\n * @param {!Uint8Array} initData\n */\nshaka.media.DrmEngine.prototype.newInitData = function(initDataType, initData) {\n  // Aliases:\n  const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n\n  // Suppress duplicate init data.\n  // Note that some init data are extremely large and can't portably be used as\n  // keys in a dictionary.\n  const metadatas = this.activeSessions_.values();\n  for (const metadata of metadatas) {\n    if (Uint8ArrayUtils.equal(initData, metadata.initData)) {\n      shaka.log.debug('Ignoring duplicate init data.');\n      return;\n    }\n  }\n\n  this.createTemporarySession_(initDataType, initData);\n};\n\n\n/** @return {boolean} */\nshaka.media.DrmEngine.prototype.initialized = function() {\n  return this.initialized_;\n};\n\n\n/** @return {string} */\nshaka.media.DrmEngine.prototype.keySystem = function() {\n  return this.currentDrmInfo_ ? this.currentDrmInfo_.keySystem : '';\n};\n\n\n/**\n * Check if DrmEngine (as initialized) will likely be able to support the given\n * content type.\n *\n * @param {string} contentType\n * @return {boolean}\n */\nshaka.media.DrmEngine.prototype.willSupport = function(contentType) {\n  // Edge 14 does not report correct capabilities.  It will only report the\n  // first MIME type even if the others are supported.  To work around this,\n  // we say that Edge supports everything.\n  //\n  // See: https://bit.ly/2IcEgv0 and Issue #1495\n  if (shaka.util.Platform.isEdge()) {\n    return true;\n  }\n\n  return this.supportedTypes_.has(contentType);\n};\n\n\n/**\n * Returns the ID of the sessions currently active.\n *\n * @return {!Array.<string>}\n */\nshaka.media.DrmEngine.prototype.getSessionIds = function() {\n  const sessions = this.activeSessions_.keys();\n  const ids = shaka.util.Iterables.map(sessions, (s) => s.sessionId);\n\n  // TODO: Make |getSessionIds| return |Iterable| instead of |Array|.\n  return Array.from(ids);\n};\n\n\n/**\n * Returns the next expiration time, or Infinity.\n * @return {number}\n */\nshaka.media.DrmEngine.prototype.getExpiration = function() {\n  // This will equal Infinity if there are no entries.\n  let min = Infinity;\n\n  const sessions = this.activeSessions_.keys();\n  for (const session of sessions) {\n    if (!isNaN(session.expiration)) {\n      min = Math.min(min, session.expiration);\n    }\n  }\n\n  return min;\n};\n\n\n/**\n * Returns the DrmInfo that was used to initialize the current key system.\n *\n * @return {?shaka.extern.DrmInfo}\n */\nshaka.media.DrmEngine.prototype.getDrmInfo = function() {\n  return this.currentDrmInfo_;\n};\n\n\n/**\n * Returns the current key statuses.\n *\n * @return {!Object.<string, string>}\n */\nshaka.media.DrmEngine.prototype.getKeyStatuses = function() {\n  return shaka.util.MapUtils.asObject(this.announcedKeyStatusByKeyId_);\n};\n\n\n/**\n * @param {!Array.<shaka.extern.Variant>} variants\n * @see https://bit.ly/EmeConfig for MediaKeySystemConfiguration spec\n * @return {!Map.<string, MediaKeySystemConfiguration>}\n * @private\n */\nshaka.media.DrmEngine.prototype.prepareMediaKeyConfigsForVariants_ = function(\n    variants) {\n  // Get all the drm info so that we can avoid using nested loops when we just\n  // need the drm info.\n  const allDrmInfo = new Set();\n  for (const variant of variants) {\n    for (const info of variant.drmInfos) {\n      allDrmInfo.add(info);\n    }\n  }\n\n  // Make sure all the drm infos are valid and filled in correctly.\n  for (const info of allDrmInfo) {\n    shaka.media.DrmEngine.fillInDrmInfoDefaults_(\n        info,\n        shaka.util.MapUtils.asMap(this.config_.servers),\n        shaka.util.MapUtils.asMap(this.config_.advanced || {}));\n  }\n\n  const persistentState =\n      this.usePersistentLicenses_ ? 'required' : 'optional';\n  const sessionTypes =\n      this.usePersistentLicenses_ ? ['persistent-license'] : ['temporary'];\n\n  const configs = new Map();\n\n  // Create a config entry for each key system.\n  for (const info of allDrmInfo) {\n    const config = {\n      // Ignore initDataTypes.\n      audioCapabilities: [],\n      videoCapabilities: [],\n      distinctiveIdentifier: 'optional',\n      persistentState: persistentState,\n      sessionTypes: sessionTypes,\n      label: info.keySystem,\n      drmInfos: [],  // Tracked by us, ignored by EME.\n    };\n\n    // Multiple calls to |set| will still respect the insertion order of the\n    // first call to |set| for a given key.\n    configs.set(info.keySystem, config);\n  }\n\n  // Connect each key system with each stream using it.\n  for (const variant of variants) {\n    /** @type {?shaka.extern.Stream} */\n    const audio = variant.audio;\n    /** @type {?shaka.extern.Stream} */\n    const video = variant.video;\n\n    /** @type {string} */\n    const audioMimeType =\n        audio ?\n        shaka.util.MimeUtils.getFullType(audio.mimeType, audio.codecs) :\n        '';\n    /** @type {string} */\n    const videoMimeType =\n        video ?\n        shaka.util.MimeUtils.getFullType(video.mimeType, video.codecs) :\n        '';\n\n    // Add the last bit of information to each config;\n    for (const info of variant.drmInfos) {\n      const config = configs.get(info.keySystem);\n      goog.asserts.assert(\n          config,\n          'Any missing configs should have be filled in before.');\n\n      config.drmInfos.push(info);\n\n      if (info.distinctiveIdentifierRequired) {\n        config.distinctiveIdentifier = 'required';\n      }\n\n      if (info.persistentStateRequired) {\n        config.persistentState = 'required';\n      }\n\n      if (audio) {\n        /** @type {MediaKeySystemMediaCapability} */\n        const capability = {\n          robustness: info.audioRobustness || '',\n          contentType: audioMimeType,\n        };\n\n        config.audioCapabilities.push(capability);\n      }\n\n      if (video) {\n        /** @type {MediaKeySystemMediaCapability} */\n        const capability = {\n          robustness: info.videoRobustness || '',\n          contentType: videoMimeType,\n        };\n\n        config.videoCapabilities.push(capability);\n      }\n    }\n  }\n\n  return configs;\n};\n\n\n/**\n * @param {!Map.<string, MediaKeySystemConfiguration>} configsByKeySystem\n *   A dictionary of configs, indexed by key system, with an iteration order\n *   (insertion order) that reflects the preference for the application.\n * @return {!Promise} Resolved if/when a key system has been chosen.\n * @private\n */\nshaka.media.DrmEngine.prototype.queryMediaKeys_ = function(configsByKeySystem) {\n  if (configsByKeySystem.size == 1 && configsByKeySystem.has('')) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.NO_RECOGNIZED_KEY_SYSTEMS));\n  }\n\n  // If there are no tracks of a type, these should be not present.\n  // Otherwise the query will fail.\n  for (const config of configsByKeySystem.values()) {\n    if (config.audioCapabilities.length == 0) {\n      delete config.audioCapabilities;\n    }\n    if (config.videoCapabilities.length == 0) {\n      delete config.videoCapabilities;\n    }\n  }\n\n  // Wait to reject this initial Promise until we have built the entire chain.\n  let instigator = new shaka.util.PublicPromise();\n  let p = instigator;\n\n  // Try key systems with configured license servers first.  We only have to try\n  // key systems without configured license servers for diagnostic reasons, so\n  // that we can differentiate between \"none of these key systems are available\"\n  // and \"some are available, but you did not configure them properly.\"  The\n  // former takes precedence.\n  [true, false].forEach(function(shouldHaveLicenseServer) {\n    configsByKeySystem.forEach((config, keySystem) => {\n      let hasLicenseServer = config.drmInfos.some(function(info) {\n        return !!info.licenseServerUri;\n      });\n      if (hasLicenseServer != shouldHaveLicenseServer) return;\n\n      p = p.catch(function() {\n        if (this.isDestroying_) { return; }\n        return navigator.requestMediaKeySystemAccess(keySystem, [config]);\n      }.bind(this));\n    });\n  }.bind(this));\n\n  p = p.catch(() => {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE));\n  });\n\n  p = p.then(function(mediaKeySystemAccess) {\n    if (this.isDestroying_) { return Promise.reject(); }\n\n    // Get the set of supported content types from the audio and video\n    // capabilities. Avoid duplicates so that it is easier to read what is\n    // supported.\n    this.supportedTypes_.clear();\n\n    // Store the capabilities of the key system.\n    const realConfig = mediaKeySystemAccess.getConfiguration();\n    const audioCaps = realConfig.audioCapabilities || [];\n    const videoCaps = realConfig.videoCapabilities || [];\n\n    for (const cap of audioCaps) {\n      this.supportedTypes_.add(cap.contentType);\n    }\n\n    for (const cap of videoCaps) {\n      this.supportedTypes_.add(cap.contentType);\n    }\n\n    goog.asserts.assert(this.supportedTypes_.size,\n                        'We should get at least one supported MIME type');\n\n    this.currentDrmInfo_ = shaka.media.DrmEngine.createDrmInfoFor_(\n        mediaKeySystemAccess.keySystem,\n        configsByKeySystem.get(mediaKeySystemAccess.keySystem));\n\n    if (!this.currentDrmInfo_.licenseServerUri) {\n      return Promise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.NO_LICENSE_SERVER_GIVEN,\n          this.currentDrmInfo_.keySystem));\n    }\n\n    return mediaKeySystemAccess.createMediaKeys();\n  }.bind(this)).then(function(mediaKeys) {\n    if (this.isDestroying_) { return Promise.reject(); }\n    shaka.log.info('Created MediaKeys object for key system',\n                   this.currentDrmInfo_.keySystem);\n\n    this.mediaKeys_ = mediaKeys;\n    this.initialized_ = true;\n  }.bind(this)).catch(function(exception) {\n    if (this.isDestroying_) { return; }\n\n    // Don't rewrap a shaka.util.Error from earlier in the chain:\n    this.currentDrmInfo_ = null;\n    this.supportedTypes_.clear();\n    if (exception instanceof shaka.util.Error) {\n      return Promise.reject(exception);\n    }\n\n    // We failed to create MediaKeys.  This generally shouldn't happen.\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_CDM,\n        exception.message));\n  }.bind(this));\n\n  instigator.reject();\n  return p;\n};\n\n\n/**\n * Create a DrmInfo using configured clear keys.\n * The server URI will be a data URI which decodes to a clearkey license.\n * @return {?shaka.extern.DrmInfo} or null if clear keys are not configured.\n * @private\n * @see https://bit.ly/2K8gOnv for the spec on the clearkey license format.\n */\nshaka.media.DrmEngine.prototype.configureClearKey_ = function() {\n  const clearKeys = shaka.util.MapUtils.asMap(this.config_.clearKeys);\n  if (clearKeys.size == 0) { return null; }\n\n  const StringUtils = shaka.util.StringUtils;\n  const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n  let keys = [];\n  let keyIds = [];\n\n  clearKeys.forEach((keyHex, keyIdHex) => {\n    let keyId = Uint8ArrayUtils.fromHex(keyIdHex);\n    let key = Uint8ArrayUtils.fromHex(keyHex);\n    let keyObj = {\n      kty: 'oct',\n      kid: Uint8ArrayUtils.toBase64(keyId, false),\n      k: Uint8ArrayUtils.toBase64(key, false),\n    };\n\n    keys.push(keyObj);\n    keyIds.push(keyObj.kid);\n  });\n\n  let jwkSet = {keys: keys};\n  let license = JSON.stringify(jwkSet);\n\n  // Use the keyids init data since is suggested by EME.\n  // Suggestion: https://bit.ly/2JYcNTu\n  // Format: https://www.w3.org/TR/eme-initdata-keyids/\n  let initDataStr = JSON.stringify({'kids': keyIds});\n  let initData = new Uint8Array(StringUtils.toUTF8(initDataStr));\n  let initDatas = [{initData: initData, initDataType: 'keyids'}];\n\n  return {\n    keySystem: 'org.w3.clearkey',\n    licenseServerUri: 'data:application/json;base64,' + window.btoa(license),\n    distinctiveIdentifierRequired: false,\n    persistentStateRequired: false,\n    audioRobustness: '',\n    videoRobustness: '',\n    serverCertificate: null,\n    initData: initDatas,\n    keyIds: [],\n  };\n};\n\n\n/**\n * @param {string} sessionId\n * @return {!Promise.<MediaKeySession>}\n * @private\n */\nshaka.media.DrmEngine.prototype.loadOfflineSession_ = function(sessionId) {\n  let session;\n  try {\n    shaka.log.v1('Attempting to load an offline session', sessionId);\n    session = this.mediaKeys_.createSession('persistent-license');\n  } catch (exception) {\n    let error = new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        exception.message);\n    this.onError_(error);\n    return Promise.reject(error);\n  }\n\n  this.eventManager_.listen(session, 'message',\n      /** @type {shaka.util.EventManager.ListenerType} */(\n          this.onSessionMessage_.bind(this)));\n  this.eventManager_.listen(session, 'keystatuseschange',\n      this.onKeyStatusesChange_.bind(this));\n\n  const metadata = {\n    initData: null,\n    loaded: false,\n    oldExpiration: Infinity,\n    updatePromise: null,\n  };\n  this.activeSessions_.set(session, metadata);\n\n  return session.load(sessionId).then(function(present) {\n    if (this.isDestroying_) { return Promise.reject(); }\n    shaka.log.v2('Loaded offline session', sessionId, present);\n\n    if (!present) {\n      this.activeSessions_.delete(session);\n\n      this.onError_(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.OFFLINE_SESSION_REMOVED));\n      return;\n    }\n\n    // TODO: We should get a key status change event.  Remove once Chrome CDM\n    // is fixed.\n    metadata.loaded = true;\n    if (this.areAllSessionsLoaded_()) {\n      this.allSessionsLoaded_.resolve();\n    }\n\n    return session;\n  }.bind(this), function(error) {\n    if (this.isDestroying_) { return; }\n\n    this.activeSessions_.delete(session);\n\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        error.message));\n  }.bind(this));\n};\n\n\n/**\n * @param {string} initDataType\n * @param {!Uint8Array} initData\n * @private\n */\nshaka.media.DrmEngine.prototype.createTemporarySession_ =\n    function(initDataType, initData) {\n  let session;\n  try {\n    if (this.usePersistentLicenses_) {\n      shaka.log.v1('Creating new persistent session');\n      session = this.mediaKeys_.createSession('persistent-license');\n    } else {\n      shaka.log.v1('Creating new temporary session');\n      session = this.mediaKeys_.createSession();\n    }\n  } catch (exception) {\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        exception.message));\n    return;\n  }\n\n  this.eventManager_.listen(session, 'message',\n      /** @type {shaka.util.EventManager.ListenerType} */(\n          this.onSessionMessage_.bind(this)));\n  this.eventManager_.listen(session, 'keystatuseschange',\n      this.onKeyStatusesChange_.bind(this));\n\n  const metadata = {\n    initData: initData,\n    loaded: false,\n    oldExpiration: Infinity,\n    updatePromise: null,\n  };\n  this.activeSessions_.set(session, metadata);\n\n  session.generateRequest(initDataType, initData.buffer).catch((error) => {\n    if (this.isDestroying_) { return; }\n\n    this.activeSessions_.delete(session);\n\n    let extended;\n    if (error.errorCode && error.errorCode.systemCode) {\n      extended = error.errorCode.systemCode;\n      if (extended < 0) {\n        extended += Math.pow(2, 32);\n      }\n      extended = '0x' + extended.toString(16);\n    }\n\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_GENERATE_LICENSE_REQUEST,\n        error.message, error, extended));\n  });\n};\n\n\n/**\n * @param {!MediaKeyMessageEvent} event\n * @private\n */\nshaka.media.DrmEngine.prototype.onSessionMessage_ = function(event) {\n  if (this.delayLicenseRequest_()) {\n    this.mediaKeyMessageEvents_.push(event);\n  } else {\n    this.sendLicenseRequest_(event);\n  }\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.media.DrmEngine.prototype.delayLicenseRequest_ = function() {\n  return (this.config_.delayLicenseRequestUntilPlayed &&\n          this.video_.paused && !this.initialRequestsSent_);\n};\n\n\n/**\n * Sends a license request.\n * @param {!MediaKeyMessageEvent} event\n * @private\n */\nshaka.media.DrmEngine.prototype.sendLicenseRequest_ = function(event) {\n  /** @type {!MediaKeySession} */\n  let session = event.target;\n  shaka.log.v2('Sending license request for session', session.sessionId);\n\n  const metadata = this.activeSessions_.get(session);\n\n  let url = this.currentDrmInfo_.licenseServerUri;\n  const advancedConfig = this.config_.advanced[this.currentDrmInfo_.keySystem];\n  if (event.messageType == 'individualization-request' && advancedConfig &&\n      advancedConfig.individualizationServer) {\n    url = advancedConfig.individualizationServer;\n  }\n\n  const requestType = shaka.net.NetworkingEngine.RequestType.LICENSE;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      [url], this.config_.retryParameters);\n  request.body = event.message;\n  request.method = 'POST';\n  request.licenseRequestType = event.messageType;\n  // NOTE: allowCrossSiteCredentials can be set in a request filter.\n\n  if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' ||\n      this.currentDrmInfo_.keySystem == 'com.chromecast.playready') {\n    this.unpackPlayReadyRequest_(request);\n  }\n  if (this.currentDrmInfo_.keySystem.startsWith('com.apple.fps')) {\n    this.formatFairPlayRequest_(request);\n  }\n\n  this.playerInterface_.netEngine.request(requestType, request).promise\n      .then(function(response) {\n        if (this.isDestroying_) { return Promise.reject(); }\n\n        if (this.currentDrmInfo_.keySystem.startsWith('com.apple.fps')) {\n          this.parseFairPlayResponse_(response);\n        }\n\n        // Request succeeded, now pass the response to the CDM.\n        return session.update(response.data).then(function() {\n          let event = new shaka.util.FakeEvent('drmsessionupdate');\n          this.playerInterface_.onEvent(event);\n\n          if (metadata) {\n            if (metadata.updatePromise) {\n              metadata.updatePromise.resolve();\n            }\n            // In case there are no key statuses, consider this session loaded\n            // after a reasonable timeout.  It should definitely not take 5\n            // seconds to process a license.\n            const timer = new shaka.util.Timer(() => {\n              metadata.loaded = true;\n              if (this.areAllSessionsLoaded_()) {\n                this.allSessionsLoaded_.resolve();\n              }\n            });\n\n            timer.tickAfter(\n                /* seconds= */ shaka.media.DrmEngine.SESSION_LOAD_TIMEOUT_);\n          }\n        }.bind(this));\n      }.bind(this), function(error) {\n        // Ignore destruction errors\n        if (this.isDestroying_) { return; }\n\n        // Request failed!\n        goog.asserts.assert(error instanceof shaka.util.Error,\n                            'Wrong NetworkingEngine error type!');\n        let shakaErr = new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.DRM,\n            shaka.util.Error.Code.LICENSE_REQUEST_FAILED,\n            error);\n        this.onError_(shakaErr);\n        if (metadata && metadata.updatePromise) {\n          metadata.updatePromise.reject(shakaErr);\n        }\n      }.bind(this)).catch(function(error) {\n        // Ignore destruction errors\n        if (this.isDestroying_) { return; }\n\n        // Session update failed!\n        let shakaErr = new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.DRM,\n            shaka.util.Error.Code.LICENSE_RESPONSE_REJECTED,\n            error.message);\n        this.onError_(shakaErr);\n        if (metadata && metadata.updatePromise) {\n          metadata.updatePromise.reject(shakaErr);\n        }\n      }.bind(this));\n};\n\n\n/**\n * Unpacks PlayReady license requests.  Modifies the request object.\n * @param {shaka.extern.Request} request\n * @private\n */\nshaka.media.DrmEngine.prototype.unpackPlayReadyRequest_ = function(request) {\n  // On IE and Edge, the raw license message is UTF-16-encoded XML.  We need to\n  // unpack the Challenge element (base64-encoded string containing the actual\n  // license request) and any HttpHeader elements (sent as request headers).\n\n  // Example XML:\n\n  // <PlayReadyKeyMessage type=\"LicenseAcquisition\">\n  //   <LicenseAcquisition Version=\"1\">\n  //     <Challenge encoding=\"base64encoded\">{Base64Data}</Challenge>\n  //     <HttpHeaders>\n  //       <HttpHeader>\n  //         <name>Content-Type</name>\n  //         <value>text/xml; charset=utf-8</value>\n  //       </HttpHeader>\n  //       <HttpHeader>\n  //         <name>SOAPAction</name>\n  //         <value>http://schemas.microsoft.com/DRM/etc/etc</value>\n  //       </HttpHeader>\n  //     </HttpHeaders>\n  //   </LicenseAcquisition>\n  // </PlayReadyKeyMessage>\n\n  let xml = shaka.util.StringUtils.fromUTF16(\n      request.body, true /* littleEndian */, true /* noThrow */);\n  if (!xml.includes('PlayReadyKeyMessage')) {\n    // This does not appear to be a wrapped message as on IE and Edge.  Some\n    // clients do not need this unwrapping, so we will assume this is one of\n    // them.  Note that \"xml\" at this point probably looks like random garbage,\n    // since we interpreted UTF-8 as UTF-16.\n    shaka.log.debug('PlayReady request is already unwrapped.');\n    request.headers['Content-Type'] = 'text/xml; charset=utf-8';\n    return;\n  }\n  shaka.log.debug('Unwrapping PlayReady request.');\n  let dom = new DOMParser().parseFromString(xml, 'application/xml');\n\n  // Set request headers.\n  let headers = dom.getElementsByTagName('HttpHeader');\n  for (let i = 0; i < headers.length; ++i) {\n    let name = headers[i].querySelector('name');\n    let value = headers[i].querySelector('value');\n    goog.asserts.assert(name && value, 'Malformed PlayReady headers!');\n    request.headers[name.textContent] = value.textContent;\n  }\n\n  // Unpack the base64-encoded challenge.\n  let challenge = dom.querySelector('Challenge');\n  goog.asserts.assert(challenge, 'Malformed PlayReady challenge!');\n  goog.asserts.assert(challenge.getAttribute('encoding') == 'base64encoded',\n                      'Unexpected PlayReady challenge encoding!');\n  request.body =\n      shaka.util.Uint8ArrayUtils.fromBase64(challenge.textContent).buffer;\n};\n\n\n/**\n * Formats FairPlay license requests.  Modifies the request object.\n *\n * @param {shaka.extern.Request} request\n * @private\n */\nshaka.media.DrmEngine.prototype.formatFairPlayRequest_ = function(request) {\n  // The standard format for FairPlay seems to be to place the request into a\n  // POST parameter (spc=).\n  const originalPayload = new Uint8Array(request.body);\n  const base64Payload = shaka.util.Uint8ArrayUtils.toBase64(originalPayload);\n  const params = 'spc=' + base64Payload;\n  request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  request.body = shaka.util.StringUtils.toUTF8(params);\n};\n\n\n/**\n * Parse FairPlay license response format.  Modifies the response object.\n * This will run after any response filters, so application-specific formats\n * can still be handled by the app.\n *\n * @param {shaka.extern.Response} response\n * @private\n */\nshaka.media.DrmEngine.prototype.parseFairPlayResponse_ = function(response) {\n  // In Apple's docs, responses can be of the form:\n  //   '\\n<ckc>base64encoded</ckc>\\n' or 'base64encoded'\n  // We have also seen responses in JSON format from some of our partners.\n  // In all of these text-based formats, the CKC data is base64-encoded.\n\n  // This handles all of the above.  Other formats should be handled via\n  // application-level response filters.\n\n  let responseText;\n  try {\n    // Convert it to text for further processing.\n    responseText = shaka.util.StringUtils.fromUTF8(response.data);\n  } catch (error) {\n    // Assume it's not a text format of any kind and leave it alone.\n    return;\n  }\n\n  // Trim whitespace.\n  responseText = responseText.trim();\n\n  // Look for <ckc> wrapper and remove it.\n  if (responseText.substr(0, 5) === '<ckc>' &&\n      responseText.substr(-6) === '</ckc>') {\n    responseText = responseText.slice(5, -6);\n  }\n\n  // Look for a JSON wrapper and remove it.\n  try {\n    const responseObject = JSON.parse(responseText);\n    responseText = responseObject['ckc'];\n  } catch (error) {\n    // It wasn't JSON.  Fall through with other transformations.\n  }\n\n  // Decode the base64-encoded data into the format the browser expects.\n  // It's not clear why FairPlay license servers don't just serve this directly.\n  response.data = shaka.util.Uint8ArrayUtils.fromBase64(responseText).buffer;\n};\n\n\n/**\n * @param {!Event} event\n * @private\n * @suppress {invalidCasts} to swap keyId and status\n */\nshaka.media.DrmEngine.prototype.onKeyStatusesChange_ = function(event) {\n  const session = /** @type {!MediaKeySession} */(event.target);\n  shaka.log.v2('Key status changed for session', session.sessionId);\n\n  const found = this.activeSessions_.get(session);\n  let keyStatusMap = session.keyStatuses;\n  let hasExpiredKeys = false;\n\n  keyStatusMap.forEach(function(status, keyId) {\n    // The spec has changed a few times on the exact order of arguments here.\n    // As of 2016-06-30, Edge has the order reversed compared to the current\n    // EME spec.  Given the back and forth in the spec, it may not be the only\n    // one.  Try to detect this and compensate:\n    if (typeof keyId == 'string') {\n      let tmp = keyId;\n      keyId = /** @type {ArrayBuffer} */(status);\n      status = /** @type {string} */(tmp);\n    }\n\n    // Microsoft's implementation in Edge seems to present key IDs as\n    // little-endian UUIDs, rather than big-endian or just plain array of bytes.\n    // standard: 6e 5a 1d 26 - 27 57 - 47 d7 - 80 46 ea a5 d1 d3 4b 5a\n    // on Edge:  26 1d 5a 6e - 57 27 - d7 47 - 80 46 ea a5 d1 d3 4b 5a\n    // Bug filed: https://bit.ly/2thuzXu\n\n    // NOTE that we skip this if byteLength != 16.  This is used for the IE11\n    // and Edge 12 EME polyfill, which uses single-byte dummy key IDs.\n    // However, unlike Edge and Chromecast, Tizen doesn't have this problem.\n    if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' &&\n        keyId.byteLength == 16 &&\n        !shaka.util.Platform.isTizen()) {\n      // Read out some fields in little-endian:\n      let dataView = new DataView(keyId);\n      let part0 = dataView.getUint32(0, true /* LE */);\n      let part1 = dataView.getUint16(4, true /* LE */);\n      let part2 = dataView.getUint16(6, true /* LE */);\n      // Write it back in big-endian:\n      dataView.setUint32(0, part0, false /* BE */);\n      dataView.setUint16(4, part1, false /* BE */);\n      dataView.setUint16(6, part2, false /* BE */);\n    }\n\n    // Microsoft's implementation in IE11 seems to never set key status to\n    // 'usable'.  It is stuck forever at 'status-pending'.  In spite of this,\n    // the keys do seem to be usable and content plays correctly.\n    // Bug filed: https://bit.ly/2tpIU3n\n    // Microsoft has fixed the issue on Edge, but it remains in IE.\n    if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' &&\n        status == 'status-pending') {\n      status = 'usable';\n    }\n\n    if (status != 'status-pending') {\n      found.loaded = true;\n    }\n\n    if (!found) {\n      // We can get a key status changed for a closed session after it has been\n      // removed from |activeSessions_|.  If it is closed, none of its keys\n      // should be usable.\n      goog.asserts.assert(\n          status != 'usable', 'Usable keys found in closed session');\n    }\n\n    if (status == 'expired') {\n      hasExpiredKeys = true;\n    }\n\n    let keyIdHex = shaka.util.Uint8ArrayUtils.toHex(new Uint8Array(keyId));\n\n    this.keyStatusByKeyId_.set(keyIdHex, status);\n  }.bind(this));\n\n  // If the session has expired, close it.\n  // Some CDMs do not have sub-second time resolution, so the key status may\n  // fire with hundreds of milliseconds left until the stated expiration time.\n  let msUntilExpiration = session.expiration - Date.now();\n  if (msUntilExpiration < 0 || (hasExpiredKeys && msUntilExpiration < 1000)) {\n    // If this is part of a remove(), we don't want to close the session until\n    // the update is complete.  Otherwise, we will orphan the session.\n    if (found && !found.updatePromise) {\n      shaka.log.debug('Session has expired', session.sessionId);\n      this.activeSessions_.delete(session);\n      session.close().catch(() => {});  // Silence uncaught rejection errors\n    }\n  }\n\n  if (!this.areAllSessionsLoaded_()) {\n    // Don't announce key statuses or resolve the \"all loaded\" promise until\n    // everything is loaded.\n    return;\n  }\n\n  this.allSessionsLoaded_.resolve();\n\n  // Batch up key status changes before checking them or notifying Player.\n  // This handles cases where the statuses of multiple sessions are set\n  // simultaneously by the browser before dispatching key status changes for\n  // each of them.  By batching these up, we only send one status change event\n  // and at most one EXPIRED error on expiration.\n  this.keyStatusTimer_.tickAfter(\n      /* seconds= */ shaka.media.DrmEngine.KEY_STATUS_BATCH_TIME_);\n};\n\n\n/**\n * @private\n */\nshaka.media.DrmEngine.prototype.processKeyStatusChanges_ = function() {\n  const privateMap = this.keyStatusByKeyId_;\n  const publicMap = this.announcedKeyStatusByKeyId_;\n\n  // Copy the latest key statuses into the publicly-accessible map.\n  publicMap.clear();\n  privateMap.forEach((status, keyId) => publicMap.set(keyId, status));\n\n  // If all keys are expired, fire an error. |every| is always true for an empty\n  // array but we shouldn't fire an error for a lack of key status info.\n  const statuses = Array.from(publicMap.values());\n  const allExpired = statuses.length &&\n                     statuses.every((status) => status == 'expired');\n\n  if (allExpired) {\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.EXPIRED));\n  }\n\n  this.playerInterface_.onKeyStatus(shaka.util.MapUtils.asObject(publicMap));\n};\n\n\n/**\n * Returns true if the browser has recent EME APIs.\n *\n * @return {boolean}\n */\nshaka.media.DrmEngine.isBrowserSupported = function() {\n  let basic =\n      !!window.MediaKeys &&\n      !!window.navigator &&\n      !!window.navigator.requestMediaKeySystemAccess &&\n      !!window.MediaKeySystemAccess &&\n      !!window.MediaKeySystemAccess.prototype.getConfiguration;\n\n  return basic;\n};\n\n\n/**\n * Returns a Promise to a map of EME support for well-known key systems.\n *\n * @return {!Promise.<!Object.<string, ?shaka.extern.DrmSupportType>>}\n */\nshaka.media.DrmEngine.probeSupport = function() {\n  goog.asserts.assert(shaka.media.DrmEngine.isBrowserSupported(),\n                      'Must have basic EME support');\n\n  let testKeySystems = [\n    'org.w3.clearkey',\n    'com.widevine.alpha',\n    'com.microsoft.playready',\n    'com.apple.fps.3_0',\n    'com.apple.fps.2_0',\n    'com.apple.fps.1_0',\n    'com.apple.fps',\n    'com.adobe.primetime',\n  ];\n\n  let basicVideoCapabilities = [\n    {contentType: 'video/mp4; codecs=\"avc1.42E01E\"'},\n    {contentType: 'video/webm; codecs=\"vp8\"'},\n  ];\n\n  let basicConfig = {\n    videoCapabilities: basicVideoCapabilities,\n  };\n  let offlineConfig = {\n    videoCapabilities: basicVideoCapabilities,\n    persistentState: 'required',\n    sessionTypes: ['persistent-license'],\n  };\n\n  // Try the offline config first, then fall back to the basic config.\n  const configs = [offlineConfig, basicConfig];\n\n  /** @type {!Map.<string, ?shaka.extern.DrmSupportType>} */\n  const support = new Map();\n\n  const testSystem = async (keySystem) => {\n    try {\n      const access = await navigator.requestMediaKeySystemAccess(\n          keySystem, configs);\n\n      // Edge doesn't return supported session types, but current versions\n      // do not support persistent-license.  If sessionTypes is missing,\n      // assume no support for persistent-license.\n      // TODO: Polyfill Edge to return known supported session types.\n      // Edge bug: https://bit.ly/2IeKzho\n      let sessionTypes = access.getConfiguration().sessionTypes;\n      let persistentState = sessionTypes ?\n          sessionTypes.includes('persistent-license') : false;\n\n      // Tizen 3.0 doesn't support persistent licenses, but reports that it\n      // does.  It doesn't fail until you call update() with a license\n      // response, which is way too late.\n      // This is a work-around for #894.\n      if (shaka.util.Platform.isTizen3()) {\n        persistentState = false;\n      }\n\n      support.set(keySystem, {persistentState: persistentState});\n      await access.createMediaKeys();\n    } catch (e) {\n      // Either the request failed or createMediaKeys failed.\n      // Either way, write null to the support object.\n      support.set(keySystem, null);\n    }\n  };\n\n  // Test each key system.\n  const tests = testKeySystems.map((keySystem) => testSystem(keySystem));\n  return Promise.all(tests).then(() => shaka.util.MapUtils.asObject(support));\n};\n\n\n/**\n * @private\n */\nshaka.media.DrmEngine.prototype.onPlay_ = function() {\n  for (let i = 0; i < this.mediaKeyMessageEvents_.length; i++) {\n    this.sendLicenseRequest_(this.mediaKeyMessageEvents_[i]);\n  }\n\n  this.initialRequestsSent_ = true;\n  this.mediaKeyMessageEvents_ = [];\n};\n\n\n/**\n * Check if a variant is likely to be supported by DrmEngine. This will err on\n * the side of being too accepting and may not reject a variant that it will\n * later fail to play.\n *\n * @param {!shaka.extern.Variant} variant\n * @return {boolean}\n **/\nshaka.media.DrmEngine.prototype.supportsVariant = function(variant) {\n  /** @type {?shaka.extern.Stream} */\n  const audio = variant.audio;\n  /** @type {?shaka.extern.Stream} */\n  const video = variant.video;\n\n  if (audio && audio.encrypted) {\n    const audioContentType = shaka.util.MimeUtils.getFullType(\n        audio.mimeType, audio.codecs);\n\n    if (!this.willSupport(audioContentType)) { return false; }\n  }\n\n  if (video && video.encrypted) {\n    const videoContentType = shaka.util.MimeUtils.getFullType(\n        video.mimeType, video.codecs);\n\n    if (!this.willSupport(videoContentType)) { return false; }\n  }\n\n  const keySystem = this.keySystem();\n  return variant.drmInfos.length == 0 ||\n      variant.drmInfos.some((drmInfo) => drmInfo.keySystem == keySystem);\n};\n\n\n/**\n * Checks if two DrmInfos can be decrypted using the same key system.\n * Clear content is considered compatible with every key system.\n *\n * @param {!Array.<!shaka.extern.DrmInfo>} drms1\n * @param {!Array.<!shaka.extern.DrmInfo>} drms2\n * @return {boolean}\n */\nshaka.media.DrmEngine.areDrmCompatible = function(drms1, drms2) {\n  if (!drms1.length || !drms2.length) return true;\n\n  return shaka.media.DrmEngine.getCommonDrmInfos(\n      drms1, drms2).length > 0;\n};\n\n\n/**\n * Returns an array of drm infos that are present in both input arrays.\n * If one of the arrays is empty, returns the other one since clear\n * content is considered compatible with every drm info.\n *\n * @param {!Array.<!shaka.extern.DrmInfo>} drms1\n * @param {!Array.<!shaka.extern.DrmInfo>} drms2\n * @return {!Array.<!shaka.extern.DrmInfo>}\n */\nshaka.media.DrmEngine.getCommonDrmInfos = function(drms1, drms2) {\n  if (!drms1.length) return drms2;\n  if (!drms2.length) return drms1;\n\n  let commonDrms = [];\n\n  for (let i = 0; i < drms1.length; i++) {\n    for (let j = 0; j < drms2.length; j++) {\n      // This method is only called to compare drmInfos of a video and an audio\n      // adaptations, so we shouldn't have to worry about checking robustness.\n      if (drms1[i].keySystem == drms2[j].keySystem) {\n        let drm1 = drms1[i];\n        let drm2 = drms2[j];\n        let initData = [];\n        initData = initData.concat(drm1.initData || []);\n        initData = initData.concat(drm2.initData || []);\n        let keyIds = [];\n        keyIds = keyIds.concat(drm1.keyIds);\n        keyIds = keyIds.concat(drm2.keyIds);\n        let mergedDrm = {\n          keySystem: drm1.keySystem,\n          licenseServerUri: drm1.licenseServerUri || drm2.licenseServerUri,\n          distinctiveIdentifierRequired: drm1.distinctiveIdentifierRequired ||\n              drm2.distinctiveIdentifierRequired,\n          persistentStateRequired: drm1.persistentStateRequired ||\n              drm2.persistentStateRequired,\n          videoRobustness: drm1.videoRobustness || drm2.videoRobustness,\n          audioRobustness: drm1.audioRobustness || drm2.audioRobustness,\n          serverCertificate: drm1.serverCertificate || drm2.serverCertificate,\n          initData: initData,\n          keyIds: keyIds,\n        };\n        commonDrms.push(mergedDrm);\n        break;\n      }\n    }\n  }\n\n  return commonDrms;\n};\n\n\n/**\n * Called in an interval timer to poll the expiration times of the sessions.  We\n * don't get an event from EME when the expiration updates, so we poll it so we\n * can fire an event when it happens.\n * @private\n */\nshaka.media.DrmEngine.prototype.pollExpiration_ = function() {\n  this.activeSessions_.forEach((metadata, session) => {\n    let oldTime = metadata.oldExpiration;\n    let newTime = session.expiration;\n    if (isNaN(newTime)) {\n      newTime = Infinity;\n    }\n\n    if (newTime != oldTime) {\n      this.playerInterface_.onExpirationUpdated(session.sessionId, newTime);\n      metadata.oldExpiration = newTime;\n    }\n  });\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.media.DrmEngine.prototype.areAllSessionsLoaded_ = function() {\n  const metadatas = this.activeSessions_.values();\n  return shaka.util.Iterables.every(metadatas, (data) => data.loaded);\n};\n\n\n/**\n * Replace the drm info used in each variant in |variants| to reflect each\n * key service in |keySystems|.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {!Map.<string, string>} keySystems\n * @private\n */\nshaka.media.DrmEngine.replaceDrmInfo_ = function(variants, keySystems) {\n  const drmInfos = [];\n\n  keySystems.forEach((uri, keySystem) => {\n    drmInfos.push({\n      keySystem: keySystem,\n      licenseServerUri: uri,\n      distinctiveIdentifierRequired: false,\n      persistentStateRequired: false,\n      audioRobustness: '',\n      videoRobustness: '',\n      serverCertificate: null,\n      initData: [],\n      keyIds: [],\n    });\n  });\n\n  for (const variant of variants) {\n    variant.drmInfos = drmInfos;\n  }\n};\n\n\n/**\n * Creates a DrmInfo object describing the settings used to initialize the\n * engine.\n *\n * @param {string} keySystem\n * @param {MediaKeySystemConfiguration} config\n * @return {shaka.extern.DrmInfo}\n *\n * @private\n */\nshaka.media.DrmEngine.createDrmInfoFor_ = function(keySystem, config) {\n  /** @type {!Array.<string>} */\n  let licenseServers = [];\n\n  /** @type {!Array.<!Uint8Array>} */\n  let serverCerts = [];\n\n  /** @type {!Array.<!shaka.extern.InitDataOverride>} */\n  let initDatas = [];\n\n  /** @type {!Array.<string>} */\n  let keyIds = [];\n\n  shaka.media.DrmEngine.processDrmInfos_(\n      config.drmInfos, licenseServers, serverCerts, initDatas, keyIds);\n\n  if (serverCerts.length > 1) {\n    shaka.log.warning('Multiple unique server certificates found! ' +\n                      'Only the first will be used.');\n  }\n\n  if (licenseServers.length > 1) {\n    shaka.log.warning('Multiple unique license server URIs found! ' +\n                      'Only the first will be used.');\n  }\n\n  // TODO: This only works when all DrmInfo have the same robustness.\n  let audioRobustness =\n      config.audioCapabilities ? config.audioCapabilities[0].robustness : '';\n  let videoRobustness =\n      config.videoCapabilities ? config.videoCapabilities[0].robustness : '';\n\n  return {\n    keySystem: keySystem,\n    licenseServerUri: licenseServers[0],\n    distinctiveIdentifierRequired: (config.distinctiveIdentifier == 'required'),\n    persistentStateRequired: (config.persistentState == 'required'),\n    audioRobustness: audioRobustness,\n    videoRobustness: videoRobustness,\n    serverCertificate: serverCerts[0],\n    initData: initDatas,\n    keyIds: keyIds,\n  };\n};\n\n\n/**\n * Extract license server, server cert, and init data from |drmInfos|, taking\n * care to eliminate duplicates.\n *\n * @param {!Array.<shaka.extern.DrmInfo>} drmInfos\n * @param {!Array.<string>} licenseServers\n * @param {!Array.<!Uint8Array>} serverCerts\n * @param {!Array.<!shaka.extern.InitDataOverride>} initDatas\n * @param {!Array.<string>} keyIds\n * @private\n */\nshaka.media.DrmEngine.processDrmInfos_ =\n    function(drmInfos, licenseServers, serverCerts, initDatas, keyIds) {\n  /** @type {function(shaka.extern.InitDataOverride,\n   *                  shaka.extern.InitDataOverride):boolean} */\n  let initDataOverrideEqual = (a, b) => {\n    if (a.keyId && a.keyId == b.keyId) {\n      // Two initDatas with the same keyId are considered to be the same,\n      // unless that \"same keyId\" is null.\n      return true;\n    }\n    return a.initDataType == b.initDataType &&\n           shaka.util.Uint8ArrayUtils.equal(a.initData, b.initData);\n  };\n\n  drmInfos.forEach((drmInfo) => {\n    // Aliases:\n    const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n\n    // Build an array of unique license servers.\n    if (!licenseServers.includes(drmInfo.licenseServerUri)) {\n      licenseServers.push(drmInfo.licenseServerUri);\n    }\n\n    // Build an array of unique server certs.\n    if (drmInfo.serverCertificate) {\n      const found = serverCerts.some(\n          (cert) => Uint8ArrayUtils.equal(cert, drmInfo.serverCertificate));\n      if (!found) {\n        serverCerts.push(drmInfo.serverCertificate);\n      }\n    }\n\n    // Build an array of unique init datas.\n    if (drmInfo.initData) {\n      drmInfo.initData.forEach((initDataOverride) => {\n        const found = initDatas.some(\n            (initData) => initDataOverrideEqual(initData, initDataOverride));\n        if (!found) {\n          initDatas.push(initDataOverride);\n        }\n      });\n    }\n\n    if (drmInfo.keyIds) {\n      for (let i = 0; i < drmInfo.keyIds.length; ++i) {\n        if (!keyIds.includes(drmInfo.keyIds[i])) {\n          keyIds.push(drmInfo.keyIds[i]);\n        }\n      }\n    }\n  });\n};\n\n\n/**\n * Use |servers| and |advancedConfigs| to fill in missing values in drmInfo that\n * the parser left blank. Before working with any drmInfo, it should be passed\n * through here as it is uncommon for drmInfo to be complete when fetched\n * from a manifest because most manifest formats do not have the required\n * information.\n *\n * @param {shaka.extern.DrmInfo} drmInfo\n * @param {!Map.<string, string>} servers\n * @param {!Map.<string, shaka.extern.AdvancedDrmConfiguration>} advancedConfigs\n * @private\n */\nshaka.media.DrmEngine.fillInDrmInfoDefaults_ = function(\n    drmInfo, servers, advancedConfigs) {\n  if (!drmInfo.keySystem) {\n    // This is a placeholder from the manifest parser for an unrecognized key\n    // system.  Skip this entry, to avoid logging nonsensical errors.\n    return;\n  }\n\n  // The order of preference for drmInfo:\n  // 1. Clear Key config, used for debugging, should override everything else.\n  //    (The application can still specify a clearkey license server.)\n  // 2. Application-configured servers, if any are present, should override\n  //    anything from the manifest.  Nuance: if key system A is in the manifest\n  //    and key system B is in the player config, only B will be used, not A.\n  // 3. Manifest-provided license servers are only used if nothing else is\n  //    specified.\n  // This is important because it allows the application a clear way to indicate\n  // which DRM systems should be used on platforms with multiple DRM systems.\n  // The only way to get license servers from the manifest is not to specify any\n  // in your player config.\n\n  if (drmInfo.keySystem == 'org.w3.clearkey' && drmInfo.licenseServerUri) {\n    // Preference 1: Clear Key with pre-configured keys will have a data URI\n    // assigned as its license server.  Don't change anything.\n    return;\n  } else if (servers.size) {\n    // Preference 2: If anything is configured at the application level,\n    // override whatever was in the manifest.\n    const server = servers.get(drmInfo.keySystem) || '';\n    drmInfo.licenseServerUri = server;\n  } else {\n    // Preference 3: Keep whatever we had in drmInfo.licenseServerUri, which\n    // comes from the manifest.\n  }\n\n  if (!drmInfo.keyIds) {\n    drmInfo.keyIds = [];\n  }\n\n  const advancedConfig = advancedConfigs.get(drmInfo.keySystem);\n  if (advancedConfig) {\n    if (!drmInfo.distinctiveIdentifierRequired) {\n      drmInfo.distinctiveIdentifierRequired =\n          advancedConfig.distinctiveIdentifierRequired;\n    }\n\n    if (!drmInfo.persistentStateRequired) {\n      drmInfo.persistentStateRequired = advancedConfig.persistentStateRequired;\n    }\n\n    if (!drmInfo.videoRobustness) {\n      drmInfo.videoRobustness = advancedConfig.videoRobustness;\n    }\n\n    if (!drmInfo.audioRobustness) {\n      drmInfo.audioRobustness = advancedConfig.audioRobustness;\n    }\n\n    if (!drmInfo.serverCertificate) {\n      drmInfo.serverCertificate = advancedConfig.serverCertificate;\n    }\n  }\n\n  // Chromecast has a variant of PlayReady that uses a different key\n  // system ID.  Since manifest parsers convert the standard PlayReady\n  // UUID to the standard PlayReady key system ID, here we will switch\n  // to the Chromecast version if we are running on that platform.\n  // Note that this must come after fillInDrmInfoDefaults_, since the\n  // player config uses the standard PlayReady ID for license server\n  // configuration.\n  if (window.cast && window.cast.__platform__) {\n    if (drmInfo.keySystem == 'com.microsoft.playready') {\n      drmInfo.keySystem = 'com.chromecast.playready';\n    }\n  }\n};\n\n\n/**\n * Close a drm session while accounting for a bug in Chrome. Sometimes the\n * Promise returned by close() never resolves.\n *\n * See issue #1093 and https://crbug.com/690583.\n *\n * @param {!MediaKeySession} session\n * @return {!Promise}\n * @private\n */\nshaka.media.DrmEngine.closeSession_ = async function(session) {\n  const DrmEngine = shaka.media.DrmEngine;\n\n  const timeout = new Promise((resolve) => {\n    const timer = new shaka.util.Timer(resolve);\n    timer.tickAfter(DrmEngine.CLOSE_TIMEOUT_);\n  });\n\n  /** @type {boolean} */\n  const wasSessionClosed = await Promise.race([\n      session.close().then(() => true),\n      timeout.then(() => false),\n  ]);\n\n  if (!wasSessionClosed) {\n    shaka.log.warning('Timeout waiting for session close');\n  }\n};\n\n\n/**\n * The amount of time, in seconds, we wait to consider a session closed.\n * This allows us to work around Chrome bug https://crbug.com/690583.\n * @private {number}\n */\nshaka.media.DrmEngine.CLOSE_TIMEOUT_ = 1;\n\n/**\n * The amount of time, in seconds, we wait to consider session loaded even if no\n * key status information is available.  This allows us to support browsers/CDMs\n * without key statuses.\n * @private {number}\n */\nshaka.media.DrmEngine.SESSION_LOAD_TIMEOUT_ = 5;\n\n/**\n * The amount of time, in seconds, we wait to batch up rapid key status changes.\n * This allows us to avoid multiple expiration events in most cases.\n * @private {number}\n */\nshaka.media.DrmEngine.KEY_STATUS_BATCH_TIME_ = 0.5;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.IClosedCaptionParser');\ngoog.provide('shaka.media.MuxJSClosedCaptionParser');\ngoog.provide('shaka.media.NoopCaptionParser');\n\n\n/**\n * The IClosedCaptionParser defines the interface to provide all operations for\n * parsing the closed captions embedded in Dash videos streams.\n * @interface\n */\nshaka.media.IClosedCaptionParser = class {\n  /**\n   * Initialize the caption parser. This should be called only once.\n   * @param {!ArrayBuffer} data\n   */\n  init(data) {}\n\n  /**\n   * Parses embedded CEA closed captions and interacts with the underlying\n   * CaptionStream, and calls the callback function when there are closed\n   * captions.\n   *\n   * @param {!ArrayBuffer} data\n   * @param {function(Array.<muxjs.mp4.ClosedCaption>)} onCaptions\n   *         A callback function to handle the closed captions from parsed data.\n   */\n  parseFrom(data, onCaptions) {}\n\n  /**\n   * Resets the CaptionStream.\n   */\n  reset() {}\n};\n\n\n/**\n * Closed Caption Parser provides all operations for parsing the closed captions\n * embedded in Dash videos streams.\n *\n * @implements {shaka.media.IClosedCaptionParser}\n * @final\n */\nshaka.media.MuxJSClosedCaptionParser = class {\n  constructor() {\n    /** @private {muxjs.mp4.CaptionParser} */\n    this.muxCaptionParser_ = new muxjs.mp4.CaptionParser();\n\n    /** @private {!Array.<number>} */\n    this.videoTrackIds_ = [];\n\n    /**\n     * Timescales from the init segments, used for mux.js CaptionParser.\n     * @private {!Object.<number, number>}\n     */\n    this.timescales_ = {};\n  }\n\n  /**\n   * @override\n   */\n  init(data) {\n    const probe = muxjs.mp4.probe;\n    // Caption parser for Dash\n    const initBytes = new Uint8Array(data);\n    this.videoTrackIds_ = probe.videoTrackIds(initBytes);\n    this.timescales_ = probe.timescale(initBytes);\n    this.muxCaptionParser_.init();\n  }\n\n  /**\n   * @override\n   */\n  parseFrom(data, onCaptions) {\n    const segmentBytes = new Uint8Array(data);\n    const dashParsed = this.muxCaptionParser_.parse(\n          segmentBytes, this.videoTrackIds_, this.timescales_);\n    if (dashParsed && dashParsed.captions) {\n      onCaptions(dashParsed.captions);\n    }\n    // ParsedCaptions is used by mux.js to store the captions parsed so far.\n    // It should be reset every time some data is parsed, so as to store new\n    // data.\n    this.muxCaptionParser_.clearParsedCaptions();\n  }\n\n  /**\n   * @override\n   */\n  reset() {\n    this.muxCaptionParser_.resetCaptionStream();\n  }\n\n  /**\n   * Check if the MuxJS closed caption parser is supported on this platform.\n   *\n   * @return {boolean}\n   */\n  static isSupported() {\n    return !!window.muxjs;\n  }\n};\n\n/**\n * Noop Caption Parser creates an empty caption parser object when mux.js is not\n * available.\n *\n * @implements {shaka.media.IClosedCaptionParser}\n * @final\n */\nshaka.media.NoopCaptionParser = class {\n  constructor() {}\n\n  /**\n   * @override\n   */\n  init(data) {}\n\n  /**\n   * @override\n   */\n  parseFrom(data, onCaptions) {}\n\n  /**\n   * @override\n   */\n  reset() {}\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.TimeRangesUtils');\n\ngoog.require('shaka.util.Platform');\n\n\n/**\n * @namespace shaka.media.TimeRangesUtils\n * @summary A set of utility functions for dealing with TimeRanges objects.\n */\n\n\n/**\n * Gets the first timestamp in the buffer.\n *\n * @param {TimeRanges} b\n * @return {?number} The first buffered timestamp, in seconds, if |buffered|\n *   is non-empty; otherwise, return null.\n */\nshaka.media.TimeRangesUtils.bufferStart = function(b) {\n  if (!b) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n  // Workaround Edge bug: https://bit.ly/2JYLPeB\n  if (b.length == 1 && b.start(0) < 0) return 0;\n  return b.length ? b.start(0) : null;\n};\n\n\n/**\n * Gets the last timestamp in the buffer.\n *\n * @param {TimeRanges} b\n * @return {?number} The last buffered timestamp, in seconds, if |buffered|\n *   is non-empty; otherwise, return null.\n */\nshaka.media.TimeRangesUtils.bufferEnd = function(b) {\n  if (!b) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n  return b.length ? b.end(b.length - 1) : null;\n};\n\n\n/**\n * Determines if the given time is inside a buffered range.  This includes gaps,\n * meaning that if the playhead is in a gap, it is considered buffered. If there\n * is a small gap between the playhead and buffer start, consider it as\n * buffered.\n *\n * @param {TimeRanges} b\n * @param {number} time Playhead time\n * @param {number=} smallGapLimit Set in configuration\n * @return {boolean}\n */\nshaka.media.TimeRangesUtils.isBuffered = function(b, time, smallGapLimit = 0) {\n  if (!b || !b.length) return false;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return false;\n\n  if (time > b.end(b.length - 1)) {\n    return false;\n  }\n  // Push the time forward by the gap limit so that it is more likely to be in\n  // the range.\n  return (time + smallGapLimit >= b.start(0));\n};\n\n\n/**\n * Computes how far ahead of the given timestamp is buffered.  To provide smooth\n * playback while jumping gaps, we don't include the gaps when calculating this.\n * This only includes the amount of content that is buffered.\n *\n * @param {TimeRanges} b\n * @param {number} time\n * @return {number} The number of seconds buffered, in seconds, ahead of the\n *   given time.\n */\nshaka.media.TimeRangesUtils.bufferedAheadOf = function(b, time) {\n  if (!b || !b.length) return 0;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return 0;\n\n  // NOTE: On IE11, buffered ranges may show appended data before the associated\n  // append operation is complete.\n\n  // We calculate the buffered amount by ONLY accounting for the content\n  // buffered (i.e. we ignore the times of the gaps).  We also buffer through\n  // all gaps.\n  // Therefore, we start at the end and add up all buffers until |time|.\n  let result = 0;\n  for (let i = b.length - 1; i >= 0 && b.end(i) > time; --i) {\n    result += b.end(i) - Math.max(b.start(i), time);\n  }\n\n  return result;\n};\n\n\n/**\n * Determines if the given time is inside a gap between buffered ranges.  If it\n * is, this returns the index of the buffer that is *ahead* of the gap.\n *\n * @param {TimeRanges} b\n * @param {number} time\n * @return {?number} The index of the buffer after the gap, or null if not in a\n *   gap.\n */\nshaka.media.TimeRangesUtils.getGapIndex = function(b, time) {\n  const Platform = shaka.util.Platform;\n\n  if (!b || !b.length) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n\n  // Some browsers will stop earlier than others before a gap (e.g. IE/Edge\n  // stops 0.5 seconds before a gap). So for some browsers we need to use a\n  // larger threshold. See: https://bit.ly/2K5xmJO\n  const useLargeThreshold = Platform.isEdge() ||\n                            Platform.isIE() ||\n                            Platform.isTizen() ||\n                            Platform.isChromecast();\n\n  const threshold = useLargeThreshold ? 0.5 : 0.1;\n\n  for (let i = 0; i < b.length; i++) {\n    if (b.start(i) > time && (i == 0 || b.end(i - 1) - time <= threshold)) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * @param {TimeRanges} b\n * @return {!Array.<shaka.extern.BufferedRange>}\n */\nshaka.media.TimeRangesUtils.getBufferedInfo = function(b) {\n  if (!b) return [];\n  let ret = [];\n  for (let i = 0; i < b.length; i++) {\n    ret.push({start: b.start(i), end: b.end(i)});\n  }\n  return ret;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Functional');\n\n\n/**\n * @namespace shaka.util.Functional\n * @summary A set of functional utility functions.\n */\n\n\n/**\n * Creates a promise chain that calls the given callback for each element in\n * the array in a catch of a promise.\n *\n * e.g.:\n * Promise.reject().catch(callback(array[0])).catch(callback(array[1]));\n *\n * @param {!Array.<ELEM>} array\n * @param {function(ELEM):!Promise.<RESULT>} callback\n * @return {!Promise.<RESULT>}\n * @template ELEM,RESULT\n */\nshaka.util.Functional.createFallbackPromiseChain = function(array, callback) {\n  return array.reduce(function(callback, promise, elem) {\n    return promise.catch(callback.bind(null, elem));\n  }.bind(null, callback), Promise.reject());\n};\n\n\n/**\n * Returns the first array concatenated to the second; used to collapse an\n * array of arrays into a single array.\n *\n * @param {!Array.<T>} all\n * @param {!Array.<T>} part\n * @return {!Array.<T>}\n * @template T\n */\nshaka.util.Functional.collapseArrays = function(all, part) {\n  return all.concat(part);\n};\n\n\n/**\n * A no-op function.  Useful in promise chains.\n */\nshaka.util.Functional.noop = function() {};\n\n\n/**\n * Returns if the given value is not null; useful for filtering out null values.\n *\n * @param {T} value\n * @return {boolean}\n * @template T\n */\nshaka.util.Functional.isNotNull = function(value) {\n  return value != null;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ManifestParserUtils');\n\ngoog.require('goog.Uri');\ngoog.require('shaka.util.Functional');\n\n\n/**\n * @namespace shaka.util.ManifestParserUtils\n * @summary Utility functions for manifest parsing.\n */\n\n\n/**\n * Resolves an array of relative URIs to the given base URIs. This will result\n * in M*N number of URIs.\n *\n * @param {!Array.<string>} baseUris\n * @param {!Array.<string>} relativeUris\n * @return {!Array.<string>}\n */\nshaka.util.ManifestParserUtils.resolveUris = function(baseUris, relativeUris) {\n  const Functional = shaka.util.Functional;\n  if (relativeUris.length == 0) {\n    return baseUris;\n  }\n\n  let relativeAsGoog =\n      relativeUris.map(function(uri) { return new goog.Uri(uri); });\n  // Resolve each URI relative to each base URI, creating an Array of Arrays.\n  // Then flatten the Arrays into a single Array.\n  return baseUris.map(function(uri) { return new goog.Uri(uri); })\n    .map(function(base) { return relativeAsGoog.map(base.resolve.bind(base)); })\n    .reduce(Functional.collapseArrays, [])\n    .map(function(uri) { return uri.toString(); });\n};\n\n\n/**\n * Creates a DrmInfo object from the given info.\n *\n * @param {string} keySystem\n * @param {Array.<shaka.extern.InitDataOverride>} initData\n * @return {shaka.extern.DrmInfo}\n */\nshaka.util.ManifestParserUtils.createDrmInfo = function(keySystem, initData) {\n  return {\n    keySystem: keySystem,\n    licenseServerUri: '',\n    distinctiveIdentifierRequired: false,\n    persistentStateRequired: false,\n    audioRobustness: '',\n    videoRobustness: '',\n    serverCertificate: null,\n    initData: initData || [],\n    keyIds: [],\n  };\n};\n\n\n/**\n * @enum {string}\n */\nshaka.util.ManifestParserUtils.ContentType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  TEXT: 'text',\n  APPLICATION: 'application',\n};\n\n\n/**\n * @enum {string}\n */\nshaka.util.ManifestParserUtils.TextStreamKind = {\n  SUBTITLE: 'subtitle',\n  CLOSED_CAPTION: 'caption',\n};\n\n\n/**\n * Specifies how tolerant the player is of inaccurate segment start times and\n * end times within a manifest. For example, gaps or overlaps between segments\n * in a SegmentTimeline which are greater than or equal to this value will\n * result in a warning message.\n *\n * @const {number}\n */\nshaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS = 1 / 15;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.Transmuxer');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Transmuxer provides all operations for transmuxing from Transport\n * Stream to MP4.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.Transmuxer = function() {\n  /** @private {muxjs.mp4.Transmuxer} */\n  this.muxTransmuxer_ = new muxjs.mp4.Transmuxer({\n    'keepOriginalTimestamps': true,\n  });\n\n  /** @private {shaka.util.PublicPromise} */\n  this.transmuxPromise_ = null;\n\n  /** @private {!Array.<!Uint8Array>} */\n  this.transmuxedData_ = [];\n\n  /** @private {!Array.<muxjs.mp4.ClosedCaption>} */\n  this.captions_ = [];\n\n  /** @private {boolean} */\n  this.isTransmuxing_ = false;\n\n  this.muxTransmuxer_.on('data', this.onTransmuxed_.bind(this));\n\n  this.muxTransmuxer_.on('done', this.onTransmuxDone_.bind(this));\n};\n\n\n/**\n * @override\n */\nshaka.media.Transmuxer.prototype.destroy = function() {\n  this.muxTransmuxer_.dispose();\n  this.muxTransmuxer_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * Check if the content type is Transport Stream, and if muxjs is loaded.\n * @param {string} mimeType\n * @param {string=} contentType\n * @return {boolean}\n */\nshaka.media.Transmuxer.isSupported = function(mimeType, contentType) {\n  if (!window.muxjs || !shaka.media.Transmuxer.isTsContainer(mimeType)) {\n    return false;\n  }\n  let convertTsCodecs = shaka.media.Transmuxer.convertTsCodecs;\n  if (contentType) {\n    return MediaSource.isTypeSupported(convertTsCodecs(contentType, mimeType));\n  }\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return MediaSource.isTypeSupported(\n             convertTsCodecs(ContentType.AUDIO, mimeType)) ||\n      MediaSource.isTypeSupported(convertTsCodecs(ContentType.VIDEO, mimeType));\n};\n\n\n/**\n * Check if the mimetype contains 'mp2t'.\n * @param {string} mimeType\n * @return {boolean}\n */\nshaka.media.Transmuxer.isTsContainer = function(mimeType) {\n  return mimeType.toLowerCase().split(';')[0].split('/')[1] == 'mp2t';\n};\n\n\n/**\n * For transport stream, convert its codecs to MP4 codecs.\n * @param {string} contentType\n * @param {string} tsMimeType\n * @return {string}\n */\nshaka.media.Transmuxer.convertTsCodecs = function(contentType, tsMimeType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  let mp4MimeType = tsMimeType.replace(/mp2t/i, 'mp4');\n  if (contentType == ContentType.AUDIO) {\n    mp4MimeType = mp4MimeType.replace('video', 'audio');\n  }\n\n  // Handle legacy AVC1 codec strings (pre-RFC 6381).\n  // Look for \"avc1.<profile>.<level>\", where profile is:\n  //   66 (baseline => 0x42)\n  //   77 (main => 0x4d)\n  //   100 (high => 0x64)\n  // Reference: https://bit.ly/2K9JI3x\n  let match = /avc1\\.(66|77|100)\\.(\\d+)/.exec(mp4MimeType);\n  if (match) {\n    let newCodecString = 'avc1.';\n\n    let profile = match[1];\n    if (profile == '66') {\n      newCodecString += '4200';\n    } else if (profile == '77') {\n      newCodecString += '4d00';\n    } else {\n      goog.asserts.assert(profile == '100',\n                          'Legacy avc1 parsing code out of sync with regex!');\n      newCodecString += '6400';\n    }\n\n    // Convert the level to hex and append to the codec string.\n    let level = Number(match[2]);\n    goog.asserts.assert(level < 256,\n                        'Invalid legacy avc1 level number!');\n    newCodecString += (level >> 4).toString(16);\n    newCodecString += (level & 0xf).toString(16);\n\n    mp4MimeType = mp4MimeType.replace(match[0], newCodecString);\n  }\n\n  return mp4MimeType;\n};\n\n\n/**\n * Transmux from Transport stream to MP4, using the mux.js library.\n * @param {!ArrayBuffer} data\n * @return {!Promise.<{data: !Uint8Array,\n *                     captions: !Array.<!muxjs.mp4.ClosedCaption>}>}\n */\nshaka.media.Transmuxer.prototype.transmux = function(data) {\n  goog.asserts.assert(!this.isTransmuxing_,\n      'No transmuxing should be in progress.');\n  this.isTransmuxing_ = true;\n  this.transmuxPromise_ = new shaka.util.PublicPromise();\n  this.transmuxedData_ = [];\n  this.captions_ = [];\n\n  let dataArray = new Uint8Array(data);\n  this.muxTransmuxer_.push(dataArray);\n  this.muxTransmuxer_.flush();\n\n  // Workaround for https://bit.ly/Shaka1449 mux.js not\n  // emitting 'data' and 'done' events.\n  // mux.js code is synchronous, so if onTransmuxDone_ has\n  // not been called by now, it's not going to be.\n  // Treat it as a transmuxing failure and reject the promise.\n  if (this.isTransmuxing_) {\n    this.transmuxPromise_.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.TRANSMUXING_FAILED));\n  }\n  return this.transmuxPromise_;\n};\n\n\n/**\n * Handles the 'data' event of the transmuxer.\n * Extracts the cues from the transmuxed segment, and adds them to an array.\n * Stores the transmuxed data in another array, to pass it back to\n * MediaSourceEngine, and append to the source buffer.\n *\n * @param {muxjs.mp4.Transmuxer.Segment} segment\n * @private\n */\nshaka.media.Transmuxer.prototype.onTransmuxed_ = function(segment) {\n  this.captions_ = segment.captions;\n  let segmentWithInit = new Uint8Array(segment.data.byteLength +\n      segment.initSegment.byteLength);\n  segmentWithInit.set(segment.initSegment, 0);\n  segmentWithInit.set(segment.data, segment.initSegment.byteLength);\n  this.transmuxedData_.push(segmentWithInit);\n};\n\n\n/**\n * Handles the 'done' event of the transmuxer.\n * Resolves the transmux Promise, and returns the transmuxed data.\n * @private\n */\nshaka.media.Transmuxer.prototype.onTransmuxDone_ = function() {\n  let output = {\n    data: shaka.util.Uint8ArrayUtils.concat.apply(null, this.transmuxedData_),\n    captions: this.captions_,\n  };\n\n  this.transmuxPromise_.resolve(output);\n  this.isTransmuxing_ = false;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Cue');\ngoog.provide('shaka.text.CueRegion');\n\n/**\n * Creates a Cue object.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} payload\n *\n * @implements {shaka.extern.Cue}\n * @constructor\n * @struct\n * @export\n */\nshaka.text.Cue = function(startTime, endTime, payload) {\n  const Cue = shaka.text.Cue;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.startTime = startTime;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.direction = Cue.direction.HORIZONTAL_LEFT_TO_RIGHT;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.endTime = endTime;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.payload = payload;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.region = new shaka.text.CueRegion();\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.position = null;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.positionAlign = Cue.positionAlign.AUTO;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.size = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.textAlign = Cue.textAlign.CENTER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.writingMode = Cue.writingMode.HORIZONTAL_TOP_TO_BOTTOM;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.lineInterpretation = Cue.lineInterpretation.LINE_NUMBER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.line = null;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.lineHeight = '';\n\n  /**\n   * Line Alignment is set to start by default.\n   * @override\n   * @exportInterface\n   */\n  this.lineAlign = Cue.lineAlign.START;\n\n  /**\n   * Set the captions at the bottom of the text container by default.\n   * @override\n   * @exportInterface\n   */\n  this.displayAlign = Cue.displayAlign.AFTER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.color = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.backgroundColor = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.backgroundImage = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontSize = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontWeight = Cue.fontWeight.NORMAL;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontStyle = Cue.fontStyle.NORMAL;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontFamily = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.textDecoration = [];\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.wrapLine = true;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.id = '';\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.positionAlign = {\n  'LEFT': 'line-left',\n  'RIGHT': 'line-right',\n  'CENTER': 'center',\n  'AUTO': 'auto',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.textAlign = {\n  'LEFT': 'left',\n  'RIGHT': 'right',\n  'CENTER': 'center',\n  'START': 'start',\n  'END': 'end',\n};\n\n\n/**\n * Vertical alignments of the cues within their extents.\n * 'BEFORE' means displaying at the top of the captions container box, 'CENTER'\n *  means in the middle, 'BOTTOM' means at the bottom.\n * @enum {string}\n * @export\n */\nshaka.text.Cue.displayAlign = {\n  'BEFORE': 'before',\n  'CENTER': 'center',\n  'AFTER': 'after',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.direction = {\n  'HORIZONTAL_LEFT_TO_RIGHT': 'ltr',\n  'HORIZONTAL_RIGHT_TO_LEFT': 'rtl',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.writingMode = {\n  'HORIZONTAL_TOP_TO_BOTTOM': 'horizontal-tb',\n  'VERTICAL_LEFT_TO_RIGHT': 'vertical-lr',\n  'VERTICAL_RIGHT_TO_LEFT': 'vertical-rl',\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.text.Cue.lineInterpretation = {\n  'LINE_NUMBER': 0,\n  'PERCENTAGE': 1,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.lineAlign = {\n  'CENTER': 'center',\n  'START': 'start',\n  'END': 'end',\n};\n\n\n/**\n * In CSS font weight can be a number, where 400 is normal and 700 is bold.\n * Use these values for the enum for consistency.\n * @enum {number}\n * @export\n */\nshaka.text.Cue.fontWeight = {\n  'NORMAL': 400,\n  'BOLD': 700,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.fontStyle = {\n  'NORMAL': 'normal',\n  'ITALIC': 'italic',\n  'OBLIQUE': 'oblique',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.textDecoration = {\n  'UNDERLINE': 'underline',\n  'LINE_THROUGH': 'lineThrough',\n  'OVERLINE': 'overline',\n};\n\n\n/**\n * Creates a CueRegion object.\n *\n * @implements {shaka.extern.CueRegion}\n * @constructor\n * @struct\n * @export\n */\nshaka.text.CueRegion = function() {\n  const CueRegion = shaka.text.CueRegion;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.id = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorX = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorY = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.regionAnchorX = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.regionAnchorY = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.width = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.height = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.heightUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.widthUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.scroll = CueRegion.scrollMode.NONE;\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.text.CueRegion.units = {\n  'PX': 0,\n  'PERCENTAGE': 1,\n  'LINES': 2,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.CueRegion.scrollMode = {\n  'NONE': '',\n  'UP': 'up',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.TextEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * Manages text parsers and cues.\n *\n * @param {shaka.extern.TextDisplayer} displayer\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.text.TextEngine = function(displayer) {\n  /** @private {shaka.extern.TextParser} */\n  this.parser_ = null;\n\n  /** @private {shaka.extern.TextDisplayer} */\n  this.displayer_ = displayer;\n\n  /** @private {number} */\n  this.timestampOffset_ = 0;\n\n  /** @private {number} */\n  this.appendWindowStart_ = 0;\n\n  /** @private {number} */\n  this.appendWindowEnd_ = Infinity;\n\n  /** @private {?number} */\n  this.bufferStart_ = null;\n\n  /** @private {?number} */\n  this.bufferEnd_ = null;\n\n  /** @private {string} */\n  this.selectedClosedCaptionId_ = '';\n\n  /**\n   * The closed captions map stores the CEA closed captions by closed captions\n   * id and start and end time.\n   * It's used as the buffer of closed caption text streams, to show captions\n   * when we start displaying captions or switch caption tracks, we need to be\n   * able to get the cues for the other language and display them without\n   * re-fetching the video segments they were embedded in.\n   * Structure of closed caption map:\n   * closed caption id -> {start and end time -> cues}\n   * @private {!Map.<string, !Map.<string, !Array.<shaka.text.Cue>>>} */\n  this.closedCaptionsMap_ = new Map();\n};\n\n\n/** @private {!Object.<string, !shaka.extern.TextParserPlugin>} */\nshaka.text.TextEngine.parserMap_ = {};\n\n\n/**\n * @param {string} mimeType\n * @param {!shaka.extern.TextParserPlugin} plugin\n * @export\n */\nshaka.text.TextEngine.registerParser = function(mimeType, plugin) {\n  shaka.text.TextEngine.parserMap_[mimeType] = plugin;\n};\n\n\n/**\n * @param {string} mimeType\n * @export\n */\nshaka.text.TextEngine.unregisterParser = function(mimeType) {\n  delete shaka.text.TextEngine.parserMap_[mimeType];\n};\n\n\n/**\n * @param {string} mimeType\n * @return {boolean}\n */\nshaka.text.TextEngine.isTypeSupported = function(mimeType) {\n  if (shaka.text.TextEngine.parserMap_[mimeType]) {\n    // An actual parser is available.\n    return true;\n  }\n  if (window.muxjs &&\n      mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n    // Will be handled by mux.js.\n    return true;\n  }\n  return false;\n};\n\n\n/** @override */\nshaka.text.TextEngine.prototype.destroy = function() {\n  this.parser_ = null;\n  this.displayer_ = null;\n  this.closedCaptionsMap_.clear();\n\n  return Promise.resolve();\n};\n\n\n/**\n * @param {!shaka.extern.TextDisplayer} displayer\n */\nshaka.text.TextEngine.prototype.setDisplayer = function(displayer) {\n  this.displayer_ = displayer;\n};\n\n\n/**\n * Initialize the parser.  This can be called multiple times, but must be called\n * at least once before appendBuffer.\n *\n * @param {string} mimeType\n */\nshaka.text.TextEngine.prototype.initParser = function(mimeType) {\n  // No parser for CEA, which is extracted from video and side-loaded\n  // into TextEngine and TextDisplayer.\n  if (mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n    return;\n  }\n\n  let Factory = shaka.text.TextEngine.parserMap_[mimeType];\n  goog.asserts.assert(\n      Factory,\n      'Text type negotiation should have happened already');\n  this.parser_ = new Factory();\n};\n\n\n/**\n * Parse the start time from the text media segment, if possible.\n *\n * @param {!ArrayBuffer} buffer\n * @return {number}\n * @throws {shaka.util.Error} on failure\n */\nshaka.text.TextEngine.prototype.getStartTime = function(buffer) {\n  goog.asserts.assert(this.parser_, 'The parser should already be initialized');\n\n  /** @type {shaka.extern.TextParser.TimeContext} **/\n  let time = {\n    periodStart: 0,\n    segmentStart: null,\n    segmentEnd: 0,\n  };\n\n  // Parse the buffer and extract the first cue start time.\n  try {\n    let allCues = this.parser_.parseMedia(new Uint8Array(buffer), time);\n    return allCues[0].startTime;\n  } catch (exception) {\n    // This could be a failure from the parser itself (init segment required)\n    // or an exception from allCues.length being zero.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.UNABLE_TO_EXTRACT_CUE_START_TIME,\n        exception);\n  }\n};\n\n\n/**\n * @param {!ArrayBuffer} buffer\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.text.TextEngine.prototype.appendBuffer =\n    function(buffer, startTime, endTime) {\n  goog.asserts.assert(this.parser_, 'The parser should already be initialized');\n\n  // Start the operation asynchronously to avoid blocking the caller.\n  return Promise.resolve().then(function() {\n    // Check that TextEngine hasn't been destroyed.\n    if (!this.parser_ || !this.displayer_) return;\n\n    if (startTime == null || endTime == null) {\n      this.parser_.parseInit(new Uint8Array(buffer));\n      return;\n    }\n\n    /** @type {shaka.extern.TextParser.TimeContext} **/\n    let time = {\n      periodStart: this.timestampOffset_,\n      segmentStart: startTime,\n      segmentEnd: endTime,\n    };\n\n    // Parse the buffer and add the new cues.\n    let allCues = this.parser_.parseMedia(new Uint8Array(buffer), time);\n    let cuesToAppend = allCues.filter(function(cue) {\n      return cue.startTime >= this.appendWindowStart_ &&\n             cue.startTime < this.appendWindowEnd_;\n    }.bind(this));\n\n    this.displayer_.append(cuesToAppend);\n\n    // NOTE: We update the buffered range from the start and end times passed\n    // down from the segment reference, not with the start and end times of the\n    // parsed cues.  This is important because some segments may contain no\n    // cues, but we must still consider those ranges buffered.\n    if (this.bufferStart_ == null) {\n      this.bufferStart_ = Math.max(startTime, this.appendWindowStart_);\n    } else {\n      // We already had something in buffer, and we assume we are extending the\n      // range from the end.\n      goog.asserts.assert(this.bufferEnd_ != null,\n                          'There should already be a buffered range end.');\n      goog.asserts.assert((startTime - this.bufferEnd_) <= 1,\n                          'There should not be a gap in text references >1s');\n    }\n    this.bufferEnd_ = Math.min(endTime, this.appendWindowEnd_);\n  }.bind(this));\n};\n\n\n/**\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.text.TextEngine.prototype.remove = function(startTime, endTime) {\n  // Start the operation asynchronously to avoid blocking the caller.\n  return Promise.resolve().then(function() {\n    if (this.displayer_ && this.displayer_.remove(startTime, endTime)) {\n      if (this.bufferStart_ == null) {\n        goog.asserts.assert(this.bufferEnd_ == null,\n                            'end must be null if startTime is null');\n      } else {\n        goog.asserts.assert(this.bufferEnd_ != null,\n                            'end must be non-null if startTime is non-null');\n\n        // Update buffered range.\n        if (endTime <= this.bufferStart_ || startTime >= this.bufferEnd_) {\n          // No intersection.  Nothing was removed.\n        } else if (startTime <= this.bufferStart_ &&\n                   endTime >= this.bufferEnd_) {\n          // We wiped out everything.\n          this.bufferStart_ = this.bufferEnd_ = null;\n        } else if (startTime <= this.bufferStart_ &&\n                   endTime < this.bufferEnd_) {\n          // We removed from the beginning of the range.\n          this.bufferStart_ = endTime;\n        } else if (startTime > this.bufferStart_ &&\n                   endTime >= this.bufferEnd_) {\n          // We removed from the end of the range.\n          this.bufferEnd_ = startTime;\n        } else {\n          // We removed from the middle?  StreamingEngine isn't supposed to.\n          goog.asserts.assert(\n              false, 'removal from the middle is not supported by TextEngine');\n        }\n      }\n    }\n  }.bind(this));\n};\n\n\n/** @param {number} timestampOffset */\nshaka.text.TextEngine.prototype.setTimestampOffset =\n    function(timestampOffset) {\n  this.timestampOffset_ = timestampOffset;\n};\n\n\n/**\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n */\nshaka.text.TextEngine.prototype.setAppendWindow =\n    function(appendWindowStart, appendWindowEnd) {\n  this.appendWindowStart_ = appendWindowStart;\n  this.appendWindowEnd_ = appendWindowEnd;\n};\n\n\n/**\n * @return {?number} Time in seconds of the beginning of the buffered range,\n *   or null if nothing is buffered.\n */\nshaka.text.TextEngine.prototype.bufferStart = function() {\n  return this.bufferStart_;\n};\n\n\n/**\n * @return {?number} Time in seconds of the end of the buffered range,\n *   or null if nothing is buffered.\n */\nshaka.text.TextEngine.prototype.bufferEnd = function() {\n  return this.bufferEnd_;\n};\n\n\n/**\n * @param {number} t A timestamp\n * @return {boolean}\n */\nshaka.text.TextEngine.prototype.isBuffered = function(t) {\n  if (this.bufferStart_ == null || this.bufferEnd_ == null) {\n    return false;\n  }\n  return t >= this.bufferStart_ && t < this.bufferEnd_;\n};\n\n\n/**\n * @param {number} t A timestamp\n * @return {number} Number of seconds ahead of 't' we have buffered\n */\nshaka.text.TextEngine.prototype.bufferedAheadOf = function(t) {\n  if (this.bufferEnd_ == null || this.bufferEnd_ < t) return 0;\n\n  goog.asserts.assert(\n      this.bufferStart_ != null, 'start should not be null if end is not null');\n\n  return this.bufferEnd_ - Math.max(t, this.bufferStart_);\n};\n\n\n/**\n * Append cues to text displayer.\n *\n * @param {!Array.<!shaka.text.Cue>} cues\n * @export\n */\nshaka.text.TextEngine.prototype.appendCues = function(cues) {\n  this.displayer_.append(cues);\n};\n\n\n/**\n * Set the selected closed captions id.\n * Append the cues stored in the closed captions map until buffer end time.\n * This is to fill the gap between buffered and unbuffered captions, and to\n * avoid duplicates that would be caused by any future video segments parsed for\n * captions.\n *\n * @param {string} id\n * @param {number} bufferEndTime Load any stored cues up to this time.\n * @export\n */\nshaka.text.TextEngine.prototype.setSelectedClosedCaptionId =\n    function(id, bufferEndTime) {\n  this.selectedClosedCaptionId_ = id;\n\n  const captionsMap = this.closedCaptionsMap_.get(id);\n  if (captionsMap) {\n    for (const startAndEndTime of captionsMap.keys()) {\n      /** @type {Array.<!shaka.text.Cue>} */\n      let cues = captionsMap.get(startAndEndTime);\n      if (cues) {\n        cues = cues.filter((c) => c.endTime <= bufferEndTime);\n        this.displayer_.append(cues);\n      }\n    }\n  }\n};\n\n\n/**\n * Store the closed captions in the text engine, and append the cues to the text\n * displayer.  This is a side-channel used for embedded text only.\n *\n * @param {!Array.<muxjs.mp4.ClosedCaption>} closedCaptions\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n * @param {number} videoTimestampOffset the timestamp offset of the video\n *   stream in which these captions were embedded\n */\nshaka.text.TextEngine.prototype.storeAndAppendClosedCaptions = function(\n    closedCaptions, startTime, endTime, videoTimestampOffset) {\n  const startAndEndTime = startTime + ' ' + endTime;\n  const captionsMap = new Map();\n\n  for (const caption of closedCaptions) {\n    const id = caption.stream;\n    if (!captionsMap.has(id)) {\n      captionsMap.set(id, new Map());\n    }\n    if (!captionsMap.get(id).has(startAndEndTime)) {\n      captionsMap.get(id).set(startAndEndTime, []);\n    }\n\n    // Adjust CEA captions with respect to the timestamp offset of the video\n    // stream in which they were embedded.\n    caption.startTime += videoTimestampOffset;\n    caption.endTime += videoTimestampOffset;\n\n    const keepThisCue =\n        caption.startTime >= this.appendWindowStart_ &&\n        caption.startTime < this.appendWindowEnd_;\n    if (!keepThisCue) {\n      continue;\n    }\n    /** @type {!shaka.text.Cue} */\n    const cue = new shaka.text.Cue(\n        caption.startTime, caption.endTime, caption.text);\n    captionsMap.get(id).get(startAndEndTime).push(cue);\n    if (id == this.selectedClosedCaptionId_) {\n      this.displayer_.append([cue]);\n    }\n  }\n\n  for (const id of captionsMap.keys()) {\n    if (!this.closedCaptionsMap_.has(id)) {\n      this.closedCaptionsMap_.set(id, new Map());\n    }\n    for (const startAndEndTime of captionsMap.get(id).keys()) {\n      const cues = captionsMap.get(id).get(startAndEndTime);\n      this.closedCaptionsMap_.get(id).set(startAndEndTime, cues);\n    }\n  }\n\n  if (this.bufferStart_ == null) {\n    this.bufferStart_ = Math.max(startTime, this.appendWindowStart_);\n  } else {\n    this.bufferStart_ = Math.min(\n        this.bufferStart_, Math.max(startTime, this.appendWindowStart_));\n  }\n\n  this.bufferEnd_ = Math.max(\n      this.bufferEnd_, Math.min(endTime, this.appendWindowEnd_));\n};\n\n\n/**\n * Get the number of closed caption channels.\n *\n * This function is for TESTING ONLY. DO NOT USE in the library.\n *\n * @return {number}\n */\nshaka.text.TextEngine.prototype.getNumberOfClosedCaptionChannels = function() {\n  return this.closedCaptionsMap_.size;\n};\n\n/**\n * Get the number of closed caption cues for a given channel. If there is\n * no channel for the given channel id, this will return 0.\n *\n * This function is for TESTING ONLY. DO NOT USE in the library.\n *\n * @param {string} channelId\n * @return {number}\n */\nshaka.text.TextEngine.prototype.getNumberOfClosedCaptionsInChannel =\n    function(channelId) {\n  const channel = this.closedCaptionsMap_.get(channelId);\n  return channel ? channel.size : 0;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.MediaSourceEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.IClosedCaptionParser');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.media.Transmuxer');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Platform');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * MediaSourceEngine wraps all operations on MediaSource and SourceBuffers.\n * All asynchronous operations return a Promise, and all operations are\n * internally synchronized and serialized as needed.  Operations that can\n * be done in parallel will be done in parallel.\n *\n * @param {HTMLMediaElement} video The video element, whose source is tied to\n *   MediaSource during the lifetime of the MediaSourceEngine.\n * @param {!shaka.media.IClosedCaptionParser} closedCaptionParser\n *    The closed caption parser that should be used to parser closed captions\n *    from the video stream. MediaSourceEngine takes ownership of the parser.\n *    When MediaSourceEngine is destroyed, it will destroy the parser.\n * @param {!shaka.extern.TextDisplayer} textDisplayer\n *    The text displayer that will be used with the text engine.\n *    MediaSourceEngine takes ownership of the displayer. When MediaSourceEngine\n *    is destroyed, it will destroy the displayer.\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.MediaSourceEngine = function(\n    video, closedCaptionParser, textDisplayer) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {shaka.extern.TextDisplayer} */\n  this.textDisplayer_ = textDisplayer;\n\n  /** @private {!Object.<shaka.util.ManifestParserUtils.ContentType,\n                         SourceBuffer>} */\n  this.sourceBuffers_ = {};\n\n  /** @private {shaka.text.TextEngine} */\n  this.textEngine_ = null;\n\n  /**\n   * @private {!Object.<string,\n   *                    !Array.<shaka.media.MediaSourceEngine.Operation>>}\n   */\n  this.queues_ = {};\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /** @private {!Object.<string, !shaka.media.Transmuxer>} */\n  this.transmuxers_ = {};\n\n  /** @private {shaka.media.IClosedCaptionParser} */\n  this.captionParser_ = closedCaptionParser;\n\n  /** @private {!shaka.util.PublicPromise} */\n  this.mediaSourceOpen_ = new shaka.util.PublicPromise();\n\n  /** @private {MediaSource} */\n  this.mediaSource_ = this.createMediaSource(this.mediaSourceOpen_);\n};\n\n\n/**\n * Internal reference to window.URL.createObjectURL function to avoid\n * compatibility issues with other libraries and frameworks such as React\n * Native. For use in unit tests only, not meant for external use.\n *\n * @type {function(?):string}\n */\nshaka.media.MediaSourceEngine.createObjectURL = window.URL.createObjectURL;\n\n\n/**\n * Create a MediaSource object, attach it to the video element, and return it.\n * Resolves the given promise when the MediaSource is ready.\n *\n * Replaced by unit tests.\n *\n * @param {!shaka.util.PublicPromise} p\n * @return {!MediaSource}\n */\nshaka.media.MediaSourceEngine.prototype.createMediaSource = function(p) {\n  let mediaSource = new MediaSource();\n\n  // Set up MediaSource on the video element.\n  this.eventManager_.listenOnce(mediaSource, 'sourceopen', p.resolve);\n  this.video_.src = shaka.media.MediaSourceEngine.createObjectURL(mediaSource);\n\n  return mediaSource;\n};\n\n\n/**\n * @typedef {{\n *   start: function(),\n *   p: !shaka.util.PublicPromise\n * }}\n *\n * @summary An operation in queue.\n * @property {function()} start\n *   The function which starts the operation.\n * @property {!shaka.util.PublicPromise} p\n *   The PublicPromise which is associated with this operation.\n */\nshaka.media.MediaSourceEngine.Operation;\n\n\n/**\n * Checks if a certain type is supported.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.isStreamSupported = function(stream) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(\n      stream.mimeType, stream.codecs);\n  let extendedMimeType = shaka.util.MimeUtils.getExtendedType(stream);\n  return shaka.text.TextEngine.isTypeSupported(fullMimeType) ||\n      MediaSource.isTypeSupported(extendedMimeType) ||\n      shaka.media.Transmuxer.isSupported(fullMimeType, stream.type);\n};\n\n\n/**\n * Returns a map of MediaSource support for well-known types.\n *\n * @return {!Object.<string, boolean>}\n */\nshaka.media.MediaSourceEngine.probeSupport = function() {\n  const testMimeTypes = [\n    // MP4 types\n    'video/mp4; codecs=\"avc1.42E01E\"',\n    'video/mp4; codecs=\"avc3.42E01E\"',\n    'video/mp4; codecs=\"hev1.1.6.L93.90\"',\n    'video/mp4; codecs=\"hvc1.1.6.L93.90\"',\n    'video/mp4; codecs=\"hev1.2.4.L153.B0\"; eotf=\"smpte2084\"',  // HDR HEVC\n    'video/mp4; codecs=\"hvc1.2.4.L153.B0\"; eotf=\"smpte2084\"',  // HDR HEVC\n    'video/mp4; codecs=\"vp9\"',\n    'video/mp4; codecs=\"vp09.00.10.08\"',\n    'audio/mp4; codecs=\"mp4a.40.2\"',\n    'audio/mp4; codecs=\"ac-3\"',\n    'audio/mp4; codecs=\"ec-3\"',\n    'audio/mp4; codecs=\"opus\"',\n    'audio/mp4; codecs=\"flac\"',\n    // WebM types\n    'video/webm; codecs=\"vp8\"',\n    'video/webm; codecs=\"vp9\"',\n    'video/webm; codecs=\"vp09.00.10.08\"',\n    'audio/webm; codecs=\"vorbis\"',\n    'audio/webm; codecs=\"opus\"',\n    // MPEG2 TS types (video/ is also used for audio: https://bit.ly/TsMse)\n    'video/mp2t; codecs=\"avc1.42E01E\"',\n    'video/mp2t; codecs=\"avc3.42E01E\"',\n    'video/mp2t; codecs=\"hvc1.1.6.L93.90\"',\n    'video/mp2t; codecs=\"mp4a.40.2\"',\n    'video/mp2t; codecs=\"ac-3\"',\n    'video/mp2t; codecs=\"ec-3\"',\n    // WebVTT types\n    'text/vtt',\n    'application/mp4; codecs=\"wvtt\"',\n    // TTML types\n    'application/ttml+xml',\n    'application/mp4; codecs=\"stpp\"',\n  ];\n\n  let support = {};\n  for (let type of testMimeTypes) {\n    if (shaka.util.Platform.supportsMediaSource()) {\n      // Our TextEngine is only effective for MSE platforms at the moment.\n      if (shaka.text.TextEngine.isTypeSupported(type)) {\n        support[type] = true;\n      } else {\n        support[type] = MediaSource.isTypeSupported(type) ||\n                        shaka.media.Transmuxer.isSupported(type);\n      }\n    } else {\n      support[type] = shaka.util.Platform.supportsMediaType(type);\n    }\n\n    const basicType = type.split(';')[0];\n    support[basicType] = support[basicType] || support[type];\n  }\n\n  return support;\n};\n\n\n/** @override */\nshaka.media.MediaSourceEngine.prototype.destroy = function() {\n  const Functional = shaka.util.Functional;\n  this.destroyed_ = true;\n\n  let cleanup = [];\n\n  for (let contentType in this.queues_) {\n    // Make a local copy of the queue and the first item.\n    let q = this.queues_[contentType];\n    let inProgress = q[0];\n\n    // Drop everything else out of the original queue.\n    this.queues_[contentType] = q.slice(0, 1);\n\n    // We will wait for this item to complete/fail.\n    if (inProgress) {\n      cleanup.push(inProgress.p.catch(Functional.noop));\n    }\n\n    // The rest will be rejected silently if possible.\n    for (let i = 1; i < q.length; ++i) {\n      q[i].p.reject();\n    }\n  }\n\n  if (this.textEngine_) {\n    cleanup.push(this.textEngine_.destroy());\n  }\n  if (this.textDisplayer_) {\n    cleanup.push(this.textDisplayer_.destroy());\n  }\n\n  for (let contentType in this.transmuxers_) {\n    cleanup.push(this.transmuxers_[contentType].destroy());\n  }\n\n  return Promise.all(cleanup).then(() => {\n    if (this.eventManager_) {\n      this.eventManager_.release();\n      this.eventManager_ = null;\n    }\n\n    if (this.video_) {\n      // \"unload\" the video element.\n      this.video_.removeAttribute('src');\n      this.video_.load();\n      this.video_ = null;\n    }\n\n    this.mediaSource_ = null;\n    this.textEngine_ = null;\n    this.textDisplayer_ = null;\n    this.sourceBuffers_ = {};\n    this.transmuxers_ = {};\n    this.captionParser_ = null;\n    if (goog.DEBUG) {\n      for (let contentType in this.queues_) {\n        goog.asserts.assert(\n            this.queues_[contentType].length == 0,\n            contentType + ' queue should be empty after destroy!');\n      }\n    }\n    this.queues_ = {};\n  });\n};\n\n\n/**\n * @return {!Promise} Resolved when MediaSource is open and attached to the\n *   media element.  This process is actually initiated by the constructor.\n */\nshaka.media.MediaSourceEngine.prototype.open = function() {\n  return this.mediaSourceOpen_;\n};\n\n\n/**\n * Initialize MediaSourceEngine.\n *\n * Note that it is not valid to call this multiple times, except to add or\n * reinitialize text streams.\n *\n * @param {!Map.<shaka.util.ManifestParserUtils.ContentType,\n *               shaka.extern.Stream>} streamsByType\n *   A map of content types to streams.  All streams must be supported according\n *   to MediaSourceEngine.isStreamSupported.\n * @param {boolean} forceTransmuxTS\n *   If true, this will transmux TS content even if it is natively supported.\n *\n * @return {!Promise}\n *\n * @throws InvalidAccessError if blank MIME types are given\n * @throws NotSupportedError if unsupported MIME types are given\n * @throws QuotaExceededError if the browser can't support that many buffers\n */\nshaka.media.MediaSourceEngine.prototype.init = async function(\n    streamsByType, forceTransmuxTS) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  await this.mediaSourceOpen_;\n\n  streamsByType.forEach((stream, contentType) => {\n    goog.asserts.assert(\n        shaka.media.MediaSourceEngine.isStreamSupported(stream),\n        'Type negotiation should happen before MediaSourceEngine.init!');\n\n    let mimeType = shaka.util.MimeUtils.getFullType(\n        stream.mimeType, stream.codecs);\n    if (contentType == ContentType.TEXT) {\n      this.reinitText(mimeType);\n    } else {\n      if ((forceTransmuxTS || !MediaSource.isTypeSupported(mimeType)) &&\n          shaka.media.Transmuxer.isSupported(mimeType, contentType)) {\n        this.transmuxers_[contentType] = new shaka.media.Transmuxer();\n        mimeType =\n            shaka.media.Transmuxer.convertTsCodecs(contentType, mimeType);\n      }\n      let sourceBuffer = this.mediaSource_.addSourceBuffer(mimeType);\n      this.eventManager_.listen(\n          sourceBuffer, 'error',\n          this.onError_.bind(this, contentType));\n      this.eventManager_.listen(\n          sourceBuffer, 'updateend',\n          this.onUpdateEnd_.bind(this, contentType));\n      this.sourceBuffers_[contentType] = sourceBuffer;\n      this.queues_[contentType] = [];\n    }\n  });\n};\n\n\n/**\n * Reinitialize the TextEngine for a new text type.\n * @param {string} mimeType\n */\nshaka.media.MediaSourceEngine.prototype.reinitText = function(mimeType) {\n  if (!this.textEngine_) {\n    this.textEngine_ = new shaka.text.TextEngine(this.textDisplayer_);\n  }\n  this.textEngine_.initParser(mimeType);\n};\n\n\n/**\n * @return {boolean} True if the MediaSource is in an \"ended\" state, or if the\n *   object has been destroyed.\n */\nshaka.media.MediaSourceEngine.prototype.ended = function() {\n  return this.mediaSource_ ? this.mediaSource_.readyState == 'ended' : true;\n};\n\n\n/**\n * Gets the first timestamp in buffer for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {?number} The timestamp in seconds, or null if nothing is buffered.\n */\nshaka.media.MediaSourceEngine.prototype.bufferStart = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferStart();\n  }\n  return shaka.media.TimeRangesUtils.bufferStart(\n      this.getBuffered_(contentType));\n};\n\n\n/**\n * Gets the last timestamp in buffer for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {?number} The timestamp in seconds, or null if nothing is buffered.\n */\nshaka.media.MediaSourceEngine.prototype.bufferEnd = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferEnd();\n  }\n  return shaka.media.TimeRangesUtils.bufferEnd(this.getBuffered_(contentType));\n};\n\n\n/**\n * Determines if the given time is inside the buffered range of the given\n * content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} time Playhead time\n * @param {number=} smallGapLimit\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.prototype.isBuffered = function(\n    contentType, time, smallGapLimit) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.isBuffered(time);\n  } else {\n    let buffered = this.getBuffered_(contentType);\n    return shaka.media.TimeRangesUtils.isBuffered(\n               buffered, time, smallGapLimit);\n  }\n};\n\n\n/**\n * Computes how far ahead of the given timestamp is buffered for the given\n * content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} time\n * @return {number} The amount of time buffered ahead in seconds.\n */\nshaka.media.MediaSourceEngine.prototype.bufferedAheadOf =\n    function(contentType, time) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferedAheadOf(time);\n  } else {\n    let buffered = this.getBuffered_(contentType);\n    return shaka.media.TimeRangesUtils.bufferedAheadOf(buffered, time);\n  }\n};\n\n\n/**\n * Fill in the given buffered info object with the buffered info that media\n * source knows about.\n *\n * @param {shaka.extern.BufferedInfo} info\n */\nshaka.media.MediaSourceEngine.prototype.getBufferedInfo = function(info) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const getBufferedInfo = shaka.media.TimeRangesUtils.getBufferedInfo;\n  info.total = getBufferedInfo(this.video_.buffered);\n  info.audio = getBufferedInfo(this.getBuffered_(ContentType.AUDIO));\n  info.video = getBufferedInfo(this.getBuffered_(ContentType.VIDEO));\n  info.text = [];\n\n  if (this.textEngine_) {\n    const start = this.textEngine_.bufferStart();\n    const end = this.textEngine_.bufferEnd();\n\n    if (start != null && end != null) {\n      info.text.push({start: start, end: end});\n    }\n  }\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {TimeRanges} The buffered ranges for the given content type, or\n *   null if the buffered ranges could not be obtained.\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.getBuffered_ = function(contentType) {\n  try {\n    return this.sourceBuffers_[contentType].buffered;\n  } catch (exception) {\n    if (contentType in this.sourceBuffers_) {\n      // Note: previous MediaSource errors may cause access to |buffered| to\n      // throw.\n      shaka.log.error('failed to get buffered range for ' + contentType,\n                      exception);\n    }\n    return null;\n  }\n};\n\n\n/**\n * Enqueue an operation to append data to the SourceBuffer.\n * Start and end times are needed for TextEngine, but not for MediaSource.\n * Start and end times may be null for initialization segments; if present they\n * are relative to the presentation timeline.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!ArrayBuffer} data\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n * @param {?boolean} hasClosedCaptions True if the buffer contains CEA closed\n * captions\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.appendBuffer =\n    function(contentType, data, startTime, endTime, hasClosedCaptions) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.appendBuffer(data, startTime, endTime);\n  } else if (this.transmuxers_[contentType]) {\n    return this.transmuxers_[contentType].transmux(data).then(\n        function(transmuxedData) {\n          // For HLS CEA-608/708 CLOSED-CAPTIONS, text data is embedded in the\n          // video stream, so textEngine may not have been initialized.\n          if (!this.textEngine_) {\n            this.reinitText('text/vtt');\n          }\n          // This doesn't work for native TS support (ex. Edge/Chromecast),\n          // since no transmuxing is needed for native TS.\n          if (transmuxedData.captions) {\n            const videoOffset =\n                this.sourceBuffers_[ContentType.VIDEO].timestampOffset;\n            this.textEngine_.storeAndAppendClosedCaptions(\n                transmuxedData.captions, startTime, endTime, videoOffset);\n          }\n          return this.enqueueOperation_(contentType,\n              this.append_.bind(this, contentType, transmuxedData.data.buffer));\n        }.bind(this));\n  } else if (hasClosedCaptions && window.muxjs) {\n    if (!this.textEngine_) {\n      this.reinitText('text/vtt');\n    }\n    // If it is the init segment for closed captions, initialize the closed\n    // caption parser.\n    if (startTime == null && endTime == null) {\n      this.captionParser_.init(data);\n    } else {\n      this.captionParser_.parseFrom(data, (captions) => {\n        if (captions.length) {\n          const videoOffset =\n              this.sourceBuffers_[ContentType.VIDEO].timestampOffset;\n          this.textEngine_.storeAndAppendClosedCaptions(\n              captions, startTime, endTime, videoOffset);\n        }\n      });\n    }\n    return this.enqueueOperation_(\n        contentType,\n        this.append_.bind(this, contentType, data));\n  } else {\n    return this.enqueueOperation_(\n        contentType,\n        this.append_.bind(this, contentType, data));\n  }\n};\n\n\n/**\n * Set the selected closed captions Id and language.\n *\n * @param {string} id\n */\nshaka.media.MediaSourceEngine.prototype.setSelectedClosedCaptionId =\n    function(id) {\n  const VIDEO = shaka.util.ManifestParserUtils.ContentType.VIDEO;\n  const videoBufferEndTime = this.bufferEnd(VIDEO) || 0;\n  this.textEngine_.setSelectedClosedCaptionId(id, videoBufferEndTime);\n};\n\n\n/**\n * Enqueue an operation to remove data from the SourceBuffer.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.remove =\n    function(contentType, startTime, endTime) {\n  // On IE11, this operation would be permitted, but would have no effect!\n  // See https://github.com/google/shaka-player/issues/251\n  goog.asserts.assert(endTime < Number.MAX_VALUE,\n      'remove() with MAX_VALUE or Infinity is not IE-compatible!');\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.remove(startTime, endTime);\n  }\n  return this.enqueueOperation_(\n      contentType,\n      this.remove_.bind(this, contentType, startTime, endTime));\n};\n\n\n/**\n * Enqueue an operation to clear the SourceBuffer.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.clear = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    if (!this.textEngine_) {\n      return Promise.resolve();\n    }\n\n    // CaptionParser tracks the latest timestamp and uses this to filter\n    // for duplicate captions.  We do this ourselves, so we must reset\n    // the CaptionParser when we seek.  The best indicator of an\n    // unbuffered seek in MediaSourceEngine is clear().  This causes a\n    // small glitch when we change languages (which also calls clear()),\n    // where the first caption in the new language may be missing.\n    // TODO: Ask mux.js for a switch to remove this timestamp-tracking\n    // feature so that we can do away with these hacks.\n    this.captionParser_.reset();\n\n    return this.textEngine_.remove(0, Infinity);\n  }\n  // Note that not all platforms allow clearing to Infinity.\n  return this.enqueueOperation_(\n      contentType,\n      this.remove_.bind(this, contentType, 0, this.mediaSource_.duration));\n};\n\n\n/**\n * Enqueue an operation to flush the SourceBuffer.\n * This is a workaround for what we believe is a Chromecast bug.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.flush = function(contentType) {\n  // Flush the pipeline.  Necessary on Chromecast, even though we have removed\n  // everything.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    // Nothing to flush for text.\n    return Promise.resolve();\n  }\n  return this.enqueueOperation_(\n      contentType,\n      this.flush_.bind(this, contentType));\n};\n\n\n/**\n * Sets the timestamp offset and append window end for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} timestampOffset The timestamp offset.  Segments which start\n *   at time t will be inserted at time t + timestampOffset instead.  This\n *   value does not affect segments which have already been inserted.\n * @param {number} appendWindowStart The timestamp to set the append window\n *   start to.  For future appends, frames/samples with timestamps less than\n *   this value will be dropped.\n * @param {number} appendWindowEnd The timestamp to set the append window end\n *   to.  For future appends, frames/samples with timestamps greater than this\n *   value will be dropped.\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.setStreamProperties = function(\n    contentType, timestampOffset, appendWindowStart, appendWindowEnd) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    this.textEngine_.setTimestampOffset(timestampOffset);\n    this.textEngine_.setAppendWindow(appendWindowStart, appendWindowEnd);\n    return Promise.resolve();\n  }\n\n  return Promise.all([\n    // Queue an abort() to help MSE splice together overlapping segments.\n    // We set appendWindowEnd when we change periods in DASH content, and the\n    // period transition may result in overlap.\n    //\n    // An abort() also helps with MPEG2-TS.  When we append a TS segment, we\n    // always enter a PARSING_MEDIA_SEGMENT state and we can't change the\n    // timestamp offset.  By calling abort(), we reset the state so we can\n    // set it.\n    this.enqueueOperation_(\n        contentType,\n        this.abort_.bind(this, contentType)),\n    this.enqueueOperation_(\n        contentType,\n        this.setTimestampOffset_.bind(this, contentType, timestampOffset)),\n    this.enqueueOperation_(\n        contentType,\n        this.setAppendWindow_.bind(\n            this, contentType, appendWindowStart, appendWindowEnd)),\n  ]);\n};\n\n\n/**\n * @param {string=} reason Valid reasons are 'network' and 'decode'.\n * @return {!Promise}\n * @see http://w3c.github.io/media-source/#idl-def-EndOfStreamError\n */\nshaka.media.MediaSourceEngine.prototype.endOfStream = function(reason) {\n  return this.enqueueBlockingOperation_(function() {\n    // Chrome won't let us pass undefined, but it will let us omit the\n    // argument.  Firefox does not have this problem.\n    // TODO: File a bug about this.\n    if (reason) {\n      this.mediaSource_.endOfStream(reason);\n    } else {\n      this.mediaSource_.endOfStream();\n    }\n  }.bind(this));\n};\n\n\n/**\n * We only support increasing duration at this time.  Decreasing duration\n * causes the MSE removal algorithm to run, which results in an 'updateend'\n * event.  Supporting this scenario would be complicated, and is not currently\n * needed.\n *\n * @param {number} duration\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.setDuration = function(duration) {\n  goog.asserts.assert(\n      isNaN(this.mediaSource_.duration) ||\n          this.mediaSource_.duration <= duration,\n      'duration cannot decrease: ' + this.mediaSource_.duration + ' -> ' +\n          duration);\n  return this.enqueueBlockingOperation_(function() {\n    this.mediaSource_.duration = duration;\n  }.bind(this));\n};\n\n\n/**\n * Get the current MediaSource duration.\n *\n * @return {number}\n */\nshaka.media.MediaSourceEngine.prototype.getDuration = function() {\n  return this.mediaSource_.duration;\n};\n\n\n/**\n * Append data to the SourceBuffer.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!ArrayBuffer} data\n * @throws QuotaExceededError if the browser's buffer is full\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.append_ =\n    function(contentType, data) {\n  // This will trigger an 'updateend' event.\n  this.sourceBuffers_[contentType].appendBuffer(data);\n};\n\n\n/**\n * Remove data from the SourceBuffer.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.remove_ =\n    function(contentType, startTime, endTime) {\n  if (endTime <= startTime) {\n    // Ignore removal of inverted or empty ranges.\n    // Fake 'updateend' event to resolve the operation.\n    this.onUpdateEnd_(contentType);\n    return;\n  }\n\n  // This will trigger an 'updateend' event.\n  this.sourceBuffers_[contentType].remove(startTime, endTime);\n};\n\n\n/**\n * Call abort() on the SourceBuffer.\n * This resets MSE's last_decode_timestamp on all track buffers, which should\n * trigger the splicing logic for overlapping segments.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.abort_ = function(contentType) {\n  // Save the append window, which is reset on abort().\n  let appendWindowStart = this.sourceBuffers_[contentType].appendWindowStart;\n  let appendWindowEnd = this.sourceBuffers_[contentType].appendWindowEnd;\n\n  // This will not trigger an 'updateend' event, since nothing is happening.\n  // This is only to reset MSE internals, not to abort an actual operation.\n  this.sourceBuffers_[contentType].abort();\n\n  // Restore the append window.\n  this.sourceBuffers_[contentType].appendWindowStart = appendWindowStart;\n  this.sourceBuffers_[contentType].appendWindowEnd = appendWindowEnd;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Nudge the playhead to force the media pipeline to be flushed.\n * This seems to be necessary on Chromecast to get new content to replace old\n * content.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.flush_ = function(contentType) {\n  // Never use flush_ if there's data.  It causes a hiccup in playback.\n  goog.asserts.assert(\n      this.video_.buffered.length == 0,\n      'MediaSourceEngine.flush_ should only be used after clearing all data!');\n\n  // Seeking forces the pipeline to be flushed.\n  this.video_.currentTime -= 0.001;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Set the SourceBuffer's timestamp offset.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} timestampOffset\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.setTimestampOffset_ =\n    function(contentType, timestampOffset) {\n  // Work around for https://github.com/google/shaka-player/issues/1281:\n  // TODO(https://bit.ly/2ttKiBU): follow up when this is fixed in Edge\n  if (timestampOffset < 0) {\n    // Try to prevent rounding errors in Edge from removing the first keyframe.\n    timestampOffset += 0.001;\n  }\n\n  this.sourceBuffers_[contentType].timestampOffset = timestampOffset;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Set the SourceBuffer's append window end.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.setAppendWindow_ =\n    function(contentType, appendWindowStart, appendWindowEnd) {\n  // You can't set start > end, so first set start to 0, then set the new end,\n  // then set the new start.  That way, there are no intermediate states which\n  // are invalid.\n  this.sourceBuffers_[contentType].appendWindowStart = 0;\n  this.sourceBuffers_[contentType].appendWindowEnd = appendWindowEnd;\n  this.sourceBuffers_[contentType].appendWindowStart = appendWindowStart;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!Event} event\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.onError_ =\n    function(contentType, event) {\n  let operation = this.queues_[contentType][0];\n  goog.asserts.assert(operation, 'Spurious error event!');\n  goog.asserts.assert(!this.sourceBuffers_[contentType].updating,\n                      'SourceBuffer should not be updating on error!');\n  let code = this.video_.error ? this.video_.error.code : 0;\n  operation.p.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_FAILED,\n      code));\n  // Do not pop from queue.  An 'updateend' event will fire next, and to avoid\n  // synchronizing these two event handlers, we will allow that one to pop from\n  // the queue as normal.  Note that because the operation has already been\n  // rejected, the call to resolve() in the 'updateend' handler will have no\n  // effect.\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.onUpdateEnd_ = function(contentType) {\n  let operation = this.queues_[contentType][0];\n  goog.asserts.assert(operation, 'Spurious updateend event!');\n  if (!operation) return;\n  goog.asserts.assert(!this.sourceBuffers_[contentType].updating,\n                      'SourceBuffer should not be updating on updateend!');\n  operation.p.resolve();\n  this.popFromQueue_(contentType);\n};\n\n\n/**\n * Enqueue an operation and start it if appropriate.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {function()} start\n * @return {!Promise}\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.enqueueOperation_ =\n    function(contentType, start) {\n  if (this.destroyed_) return Promise.reject();\n\n  let operation = {\n    start: start,\n    p: new shaka.util.PublicPromise(),\n  };\n  this.queues_[contentType].push(operation);\n\n  if (this.queues_[contentType].length == 1) {\n    try {\n      operation.start();\n    } catch (exception) {\n      if (exception.name == 'QuotaExceededError') {\n        operation.p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.QUOTA_EXCEEDED_ERROR,\n            contentType));\n      } else {\n        operation.p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n            exception));\n      }\n      this.popFromQueue_(contentType);\n    }\n  }\n  return operation.p;\n};\n\n\n/**\n * Enqueue an operation which must block all other operations on all\n * SourceBuffers.\n *\n * @param {function()} run\n * @return {!Promise}\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.enqueueBlockingOperation_ =\n    function(run) {\n  if (this.destroyed_) return Promise.reject();\n\n  let allWaiters = [];\n\n  // Enqueue a 'wait' operation onto each queue.\n  // This operation signals its readiness when it starts.\n  // When all wait operations are ready, the real operation takes place.\n  for (let contentType in this.sourceBuffers_) {\n    let ready = new shaka.util.PublicPromise();\n    let operation = {\n      start: function(ready) { ready.resolve(); }.bind(null, ready),\n      p: ready,\n    };\n\n    this.queues_[contentType].push(operation);\n    allWaiters.push(ready);\n\n    if (this.queues_[contentType].length == 1) {\n      operation.start();\n    }\n  }\n\n  // Return a Promise to the real operation, which waits to begin until there\n  // are no other in-progress operations on any SourceBuffers.\n  return Promise.all(allWaiters).then(function() {\n    if (goog.DEBUG) {\n      // If we did it correctly, nothing is updating.\n      for (let contentType in this.sourceBuffers_) {\n        goog.asserts.assert(\n            this.sourceBuffers_[contentType].updating == false,\n            'SourceBuffers should not be updating after a blocking op!');\n      }\n    }\n\n    let ret;\n    // Run the real operation, which is synchronous.\n    try {\n      run();\n    } catch (exception) {\n      ret = Promise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n          exception));\n    }\n\n    // Unblock the queues.\n    for (let contentType in this.sourceBuffers_) {\n      this.popFromQueue_(contentType);\n    }\n\n    return ret;\n  }.bind(this), function(error) {\n    // One of the waiters failed, which means we've been destroyed.\n    goog.asserts.assert(this.destroyed_, 'Should be destroyed by now');\n    // We haven't popped from the queue.  Canceled waiters have been removed by\n    // destroy.  What's left now should just be resolved waiters.  In uncompiled\n    // mode, we will maintain good hygiene and make sure the assert at the end\n    // of destroy passes.  In compiled mode, the queues are wiped in destroy.\n    if (goog.DEBUG) {\n      for (let contentType in this.sourceBuffers_) {\n        if (this.queues_[contentType].length) {\n          goog.asserts.assert(\n              this.queues_[contentType].length == 1,\n              'Should be at most one item in queue!');\n          goog.asserts.assert(\n              allWaiters.includes(this.queues_[contentType][0].p),\n              'The item in queue should be one of our waiters!');\n          this.queues_[contentType].shift();\n        }\n      }\n    }\n    throw error;\n  }.bind(this));\n};\n\n\n/**\n * Pop from the front of the queue and start a new operation.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.popFromQueue_ = function(contentType) {\n  // Remove the in-progress operation, which is now complete.\n  this.queues_[contentType].shift();\n  // Retrieve the next operation, if any, from the queue and start it.\n  let next = this.queues_[contentType][0];\n  if (next) {\n    try {\n      next.start();\n    } catch (exception) {\n      next.p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n          exception));\n      this.popFromQueue_(contentType);\n    }\n  }\n};\n\n\n/**\n * @return {!shaka.extern.TextDisplayer}\n */\nshaka.media.MediaSourceEngine.prototype.getTextDisplayer = function() {\n  goog.asserts.assert(\n      this.textDisplayer_,\n      'TextDisplayer should only be null when this is destroyed');\n\n  return this.textDisplayer_;\n};\n\n/**\n * @param {!shaka.extern.TextDisplayer} textDisplayer\n */\nshaka.media.MediaSourceEngine.prototype.setTextDisplayer =\n    function(textDisplayer) {\n      const oldTextDisplayer = this.textDisplayer_;\n      this.textDisplayer_ = textDisplayer;\n      if (oldTextDisplayer) {\n        textDisplayer.setTextVisibility(oldTextDisplayer.isTextVisible());\n        oldTextDisplayer.destroy();\n      }\n      if (this.textEngine_) {\n        this.textEngine_.setDisplayer(textDisplayer);\n      }\n    };\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.LanguageUtils');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @summary A set of language utility functions.\n * @final\n */\nshaka.util.LanguageUtils = class {\n  /**\n   * Check if |locale1| and |locale2| are locale-compatible.\n   *\n   * Locale-compatible is defined as all components in each locale match. Since\n   * we only respect the language and region components, we only check that\n   * the language and region components match.\n   *\n   * Examples:\n   *  Locale A | Locale B | Locale Compatible\n   *  ---------------------------------------\n   *  en-US    | en-US    | true\n   *  en       | en-US    | false\n   *  en-US    | en-CA    | false\n   *\n   * @param {string} locale1\n   * @param {string} locale2\n   * @return {boolean}\n   */\n  static areLocaleCompatible(locale1, locale2) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    locale1 = LanguageUtils.normalize(locale1);\n    locale2 = LanguageUtils.normalize(locale2);\n\n    return locale1 == locale2;\n  }\n\n  /**\n   * Check if |locale1| and |locale2| are language-compatible.\n   *\n   * Language compatible is when the language component of each locale matches.\n   * This means that no matter what region they have (or don't have) as long as\n   * the language components match, they are language-compatible.\n   *\n   * Examples:\n   *  Locale A | Locale B | Language-Compatible\n   *  -----------------------------------------\n   *  en-US    | en-US    | true\n   *  en-US    | en       | true\n   *  en-US    | en-CA    | true\n   *  en-CA    | fr-CA    | false\n   *\n   * @param {string} locale1\n   * @param {string} locale2\n   * @return {boolean}\n   */\n  static areLanguageCompatible(locale1, locale2) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    locale1 = LanguageUtils.normalize(locale1);\n    locale2 = LanguageUtils.normalize(locale2);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const locale1Components = LanguageUtils.disassembleLocale_(locale1);\n    /** @type {!Array.<string>} */\n    const locale2Components = LanguageUtils.disassembleLocale_(locale2);\n\n    // We are language compatible if we have the same language.\n    return locale1Components[0] == locale2Components[0];\n  }\n\n  /**\n   * Check if |possibleParent| is the parent locale of |possibleChild|. Because\n   * we do not support dialects, the parent-child relationship is a lot simpler.\n   * In a parent child relationship:\n   *    - The parent and child have the same language-component\n   *    - The parent has no region-component\n   *    - The child has a region-component\n   *\n   * Example:\n   *  Locale A | Locale B | Is A The parent of B?\n   *  --------------------------------------------\n   *  en-US    | en-US    | no\n   *  en-US    | en       | no\n   *  en       | en-US    | yes\n   *  en       | en       | no\n   *  en       | fr       | no\n   *\n   * @param {string} possibleParent\n   * @param {string} possibleChild\n   * @return {boolean}\n   */\n  static isParentOf(possibleParent, possibleChild) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    possibleParent = LanguageUtils.normalize(possibleParent);\n    possibleChild = LanguageUtils.normalize(possibleChild);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const possibleParentComponents =\n        LanguageUtils.disassembleLocale_(possibleParent);\n    /** @type {!Array.<string>} */\n    const possibleChildComponents =\n        LanguageUtils.disassembleLocale_(possibleChild);\n\n    return possibleParentComponents[0] == possibleChildComponents[0] &&\n           possibleParentComponents.length == 1 &&\n           possibleChildComponents.length == 2;\n  }\n\n  /**\n   * Check if |localeA| shares the same parent with |localeB|. Since we don't\n   * support dialect, we will only look at language and region. For two locales\n   * to be siblings:\n   *    - Both must have language-components\n   *    - Both must have region-components\n   *    - Both must have the same language-component\n   *\n   * Example:\n   *  Locale A | Locale B | Siblings?\n   *  --------------------------------------------\n   *  en-US    | en-US    | yes\n   *  en-US    | en-CA    | yes\n   *  en-US    | en       | no\n   *  en       | en-US    | no\n   *  en       | en       | no\n   *  en       | fr       | no\n   *\n   * @param {string} localeA\n   * @param {string} localeB\n   * @return {boolean}\n   */\n  static isSiblingOf(localeA, localeB) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    localeA = LanguageUtils.normalize(localeA);\n    localeB = LanguageUtils.normalize(localeB);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const localeAComponents = LanguageUtils.disassembleLocale_(localeA);\n    /** @type {!Array.<string>} */\n    const localeBComponents = LanguageUtils.disassembleLocale_(localeB);\n\n    return localeAComponents.length == 2 &&\n           localeBComponents.length == 2 &&\n           localeAComponents[0] == localeBComponents[0];\n  }\n\n  /**\n   * Normalize a locale. This will take a locale and canonicalize it to a state\n   * that we are prepared to work with.\n   *\n   * We only support with:\n   *   - language\n   *   - language-REGION\n   *\n   * If given a dialect, we will discard it. We will convert any 3-character\n   * codes to 2-character codes. We will force language codes to lowercase and\n   * region codes to uppercase.\n   *\n   * @param {string} locale\n   * @return {string}\n   */\n  static normalize(locale) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    const components = locale.split('-');\n\n    // We are only going to use the language and the region. If there was\n    // a dialect or anything else, we are throwing it a way.\n    let language = components[0] || '';\n    let region = components[1] || '';\n\n    // Convert the language to lower case. It is standard for the language code\n    // to be in lower case, but it will also make the map look-up easier.\n    language = language.toLowerCase();\n    language = LanguageUtils.isoMap_.get(language) || language;\n\n    // Convert the region to upper case. It is standard for the region to be in\n    // upper case. If there is no upper code, then it will be an empty string\n    // and this will be a no-op.\n    region = region.toUpperCase();\n\n    return region ?\n           language + '-' + region :\n           language;\n  }\n\n  /**\n   * Check if two language codes are siblings. Language codes are siblings if\n   * they share the same base language while neither one is the base language.\n   *\n   * For example, \"en-US\" and \"en-CA\" are siblings but \"en-US\" and \"en\" are not\n   * siblings.\n   *\n   * @param {string} a\n   * @param {string} b\n   * @return {boolean}\n   */\n  static areSiblings(a, b) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    const baseA = LanguageUtils.getBase(a);\n    const baseB = LanguageUtils.getBase(b);\n\n    return a != baseA && b != baseB && baseA == baseB;\n  }\n\n  /**\n   * Get the normalized base language for a language code.\n   *\n   * @param {string} lang\n   * @return {string}\n   */\n  static getBase(lang) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    const splitAt = lang.indexOf('-');\n    let major;\n\n    if (splitAt >= 0) {\n      major = lang.substring(0, splitAt);\n    } else {\n      major = lang;\n    }\n\n    // Convert the major code to lower case. It is standard for the major code\n    // to be in lower case, but it will also make the map look-up easier.\n    major = major.toLowerCase();\n    major = LanguageUtils.isoMap_.get(major) || major;\n\n    return major;\n  }\n\n  /**\n   * Get the normalized language of the given text stream. Will return 'und' if\n   * a language is not found on the text stream.\n   *\n   * This should always be used to get the language from a text stream.\n   *\n   * @param {shaka.extern.Stream} stream\n   * @return {string}\n   */\n  static getLocaleForText(stream) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    goog.asserts.assert(\n        stream.type == ContentType.TEXT,\n        'Can only get language from text streams');\n\n    const language = stream.language || 'und';\n    return LanguageUtils.normalize(language);\n  }\n\n  /**\n   * Get the normalized locale for the given variant. This will look through\n   * the variant to find the locale that represents the content in the variant.\n   * This will return 'und' if no language can be found.\n   *\n   * This should always be used to get the locale from a variant.\n   *\n   * @param {shaka.extern.Variant} variant\n   * @return {string}\n   */\n  static getLocaleForVariant(variant) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    // Our preference order is:\n    //  1. Variant\n    //  2. Audio Stream\n    //  3. Video Stream\n    //\n    // We are going to consider all falsy strings to be invalid locales, this\n    // will include empty strings.\n    if (variant.language) {\n      return LanguageUtils.normalize(variant.language);\n    }\n\n    if (variant.audio && variant.audio.language) {\n      return LanguageUtils.normalize(variant.audio.language);\n    }\n\n    if (variant.video && variant.video.language) {\n      return LanguageUtils.normalize(variant.video.language);\n    }\n\n    // No language was found, but we still want to return a valid string.\n    return 'und';\n  }\n\n  /**\n   * Find the locale in |searchSpace| that comes closest to |target|. If no\n   * locale is found to be close to |target|, then |null| will be returned.\n   *\n   * @param {string} target\n   * @param {!Iterable.<string>} searchSpace\n   * @return {?string}\n   */\n  static findClosestLocale(target, searchSpace) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    /** @type {string} */\n    const safeTarget = LanguageUtils.normalize(target);\n    /** @type {!Set.<string>} */\n    const safeSearchSpace = new Set();\n    for (const option of searchSpace) {\n      safeSearchSpace.add(LanguageUtils.normalize(option));\n    }\n\n    // Preference 1 - The option is an exact match. For example, \"en-US\" is an\n    //    exact match of \"en-US\". So if there is an option that is an exact\n    //    match, it would be the best match possible.\n    for (const option of safeSearchSpace) {\n      if (option == safeTarget) {\n        return option;\n      }\n    }\n\n    // Preference 2 - The option is the parent of the target. For example,\n    //    \"en\" is the parent of \"en-US\". So if there is an option with\n    //    \"en\", it should be good enough when our preference is \"en-US\".\n    for (const option of safeSearchSpace) {\n      if (LanguageUtils.isParentOf(option, safeTarget)) {\n        return option;\n      }\n    }\n\n    // Preference 3 - The option is a sibling of the target. For example,\n    //    \"en-US\" is a sibling of \"en-CA\". So if there is an option with\n    //    \"en_CA\", it should be good enough when our preference is \"en-US\".\n    for (const option of safeSearchSpace) {\n      if (LanguageUtils.isSiblingOf(option, safeTarget)) {\n        return option;\n      }\n    }\n\n    // Preference 4 - The option is a child of the target. For example,\n    //    \"en-US\" is the child of \"en\". SO it there is an option with\n    //    \"en-US\", it should be good enough when our preference is \"en\".\n    for (const option of safeSearchSpace) {\n      if (LanguageUtils.isParentOf(safeTarget, option)) {\n        return option;\n      }\n    }\n\n    // Failed to find anything.\n    return null;\n  }\n\n  /**\n   * Take a locale string and break it into its component. Check that each\n   * component matches what we would expect internally for locales. This\n   * should ONLY be used to verify locales that have been normalized.\n   *\n   * @param {string} locale\n   * @return {!Array.<string>}\n   * @private\n   */\n  static disassembleLocale_(locale) {\n    const components = locale.split('-');\n\n    goog.asserts.assert(\n        components.length <= 2,\n        [\n          'Locales should not have more than 2 components. ',\n          locale,\n          ' has too many components.',\n        ].join());\n\n    return components;\n  }\n};\n\n\n/**\n * A map from 3-letter language codes (ISO 639-2) to 2-letter language codes\n * (ISO 639-1) for all languages which have both in the registry.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.util.LanguageUtils.isoMap_ = new Map([\n  ['aar', 'aa'], ['abk', 'ab'], ['afr', 'af'], ['aka', 'ak'], ['alb', 'sq'],\n  ['amh', 'am'], ['ara', 'ar'], ['arg', 'an'], ['arm', 'hy'], ['asm', 'as'],\n  ['ava', 'av'], ['ave', 'ae'], ['aym', 'ay'], ['aze', 'az'], ['bak', 'ba'],\n  ['bam', 'bm'], ['baq', 'eu'], ['bel', 'be'], ['ben', 'bn'], ['bih', 'bh'],\n  ['bis', 'bi'], ['bod', 'bo'], ['bos', 'bs'], ['bre', 'br'], ['bul', 'bg'],\n  ['bur', 'my'], ['cat', 'ca'], ['ces', 'cs'], ['cha', 'ch'], ['che', 'ce'],\n  ['chi', 'zh'], ['chu', 'cu'], ['chv', 'cv'], ['cor', 'kw'], ['cos', 'co'],\n  ['cre', 'cr'], ['cym', 'cy'], ['cze', 'cs'], ['dan', 'da'], ['deu', 'de'],\n  ['div', 'dv'], ['dut', 'nl'], ['dzo', 'dz'], ['ell', 'el'], ['eng', 'en'],\n  ['epo', 'eo'], ['est', 'et'], ['eus', 'eu'], ['ewe', 'ee'], ['fao', 'fo'],\n  ['fas', 'fa'], ['fij', 'fj'], ['fin', 'fi'], ['fra', 'fr'], ['fre', 'fr'],\n  ['fry', 'fy'], ['ful', 'ff'], ['geo', 'ka'], ['ger', 'de'], ['gla', 'gd'],\n  ['gle', 'ga'], ['glg', 'gl'], ['glv', 'gv'], ['gre', 'el'], ['grn', 'gn'],\n  ['guj', 'gu'], ['hat', 'ht'], ['hau', 'ha'], ['heb', 'he'], ['her', 'hz'],\n  ['hin', 'hi'], ['hmo', 'ho'], ['hrv', 'hr'], ['hun', 'hu'], ['hye', 'hy'],\n  ['ibo', 'ig'], ['ice', 'is'], ['ido', 'io'], ['iii', 'ii'], ['iku', 'iu'],\n  ['ile', 'ie'], ['ina', 'ia'], ['ind', 'id'], ['ipk', 'ik'], ['isl', 'is'],\n  ['ita', 'it'], ['jav', 'jv'], ['jpn', 'ja'], ['kal', 'kl'], ['kan', 'kn'],\n  ['kas', 'ks'], ['kat', 'ka'], ['kau', 'kr'], ['kaz', 'kk'], ['khm', 'km'],\n  ['kik', 'ki'], ['kin', 'rw'], ['kir', 'ky'], ['kom', 'kv'], ['kon', 'kg'],\n  ['kor', 'ko'], ['kua', 'kj'], ['kur', 'ku'], ['lao', 'lo'], ['lat', 'la'],\n  ['lav', 'lv'], ['lim', 'li'], ['lin', 'ln'], ['lit', 'lt'], ['ltz', 'lb'],\n  ['lub', 'lu'], ['lug', 'lg'], ['mac', 'mk'], ['mah', 'mh'], ['mal', 'ml'],\n  ['mao', 'mi'], ['mar', 'mr'], ['may', 'ms'], ['mkd', 'mk'], ['mlg', 'mg'],\n  ['mlt', 'mt'], ['mon', 'mn'], ['mri', 'mi'], ['msa', 'ms'], ['mya', 'my'],\n  ['nau', 'na'], ['nav', 'nv'], ['nbl', 'nr'], ['nde', 'nd'], ['ndo', 'ng'],\n  ['nep', 'ne'], ['nld', 'nl'], ['nno', 'nn'], ['nob', 'nb'], ['nor', 'no'],\n  ['nya', 'ny'], ['oci', 'oc'], ['oji', 'oj'], ['ori', 'or'], ['orm', 'om'],\n  ['oss', 'os'], ['pan', 'pa'], ['per', 'fa'], ['pli', 'pi'], ['pol', 'pl'],\n  ['por', 'pt'], ['pus', 'ps'], ['que', 'qu'], ['roh', 'rm'], ['ron', 'ro'],\n  ['rum', 'ro'], ['run', 'rn'], ['rus', 'ru'], ['sag', 'sg'], ['san', 'sa'],\n  ['sin', 'si'], ['slk', 'sk'], ['slo', 'sk'], ['slv', 'sl'], ['sme', 'se'],\n  ['smo', 'sm'], ['sna', 'sn'], ['snd', 'sd'], ['som', 'so'], ['sot', 'st'],\n  ['spa', 'es'], ['sqi', 'sq'], ['srd', 'sc'], ['srp', 'sr'], ['ssw', 'ss'],\n  ['sun', 'su'], ['swa', 'sw'], ['swe', 'sv'], ['tah', 'ty'], ['tam', 'ta'],\n  ['tat', 'tt'], ['tel', 'te'], ['tgk', 'tg'], ['tgl', 'tl'], ['tha', 'th'],\n  ['tib', 'bo'], ['tir', 'ti'], ['ton', 'to'], ['tsn', 'tn'], ['tso', 'ts'],\n  ['tuk', 'tk'], ['tur', 'tr'], ['twi', 'tw'], ['uig', 'ug'], ['ukr', 'uk'],\n  ['urd', 'ur'], ['uzb', 'uz'], ['ven', 've'], ['vie', 'vi'], ['vol', 'vo'],\n  ['wel', 'cy'], ['wln', 'wa'], ['wol', 'wo'], ['xho', 'xh'], ['yid', 'yi'],\n  ['yor', 'yo'], ['zha', 'za'], ['zho', 'zh'], ['zul', 'zu'],\n]);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.StreamUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * @namespace shaka.util.StreamUtils\n * @summary A set of utility functions for dealing with Streams and Manifests.\n */\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @param {shaka.extern.Restrictions} restrictions\n *   Configured restrictions from the user.\n * @param {{width: number, height: number}} maxHwRes\n *   The maximum resolution the hardware can handle.\n *   This is applied separately from user restrictions because the setting\n *   should not be easily replaced by the user's configuration.\n * @return {boolean}\n */\nshaka.util.StreamUtils.meetsRestrictions = function(\n    variant, restrictions, maxHwRes) {\n  /** @type {function(number, number, number):boolean} */\n  const inRange = (x, min, max) => {\n    return x >= min && x <= max;\n  };\n\n  const video = variant.video;\n\n  // |video.width| and |video.height| can be undefined, which breaks\n  // the math, so make sure they are there first.\n  if (video && video.width && video.height) {\n    if (!inRange(video.width,\n                 restrictions.minWidth,\n                 Math.min(restrictions.maxWidth, maxHwRes.width))) {\n      return false;\n    }\n\n    if (!inRange(video.height,\n                 restrictions.minHeight,\n                 Math.min(restrictions.maxHeight, maxHwRes.height))) {\n      return false;\n    }\n\n    if (!inRange(video.width * video.height,\n                 restrictions.minPixels,\n                 restrictions.maxPixels)) {\n      return false;\n    }\n  }\n\n  if (!inRange(variant.bandwidth,\n               restrictions.minBandwidth,\n               restrictions.maxBandwidth)) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {shaka.extern.Restrictions} restrictions\n * @param {{width: number, height: number}} maxHwRes\n * @return {boolean} Whether the tracks changed.\n */\nshaka.util.StreamUtils.applyRestrictions =\n    function(variants, restrictions, maxHwRes) {\n  let tracksChanged = false;\n\n  variants.forEach((variant) => {\n    let originalAllowed = variant.allowedByApplication;\n    variant.allowedByApplication = shaka.util.StreamUtils.meetsRestrictions(\n        variant, restrictions, maxHwRes);\n\n    if (originalAllowed != variant.allowedByApplication) {\n      tracksChanged = true;\n    }\n  });\n\n  return tracksChanged;\n};\n\n\n/**\n * Alters the given Period to filter out any unplayable streams.\n *\n * @param {shaka.media.DrmEngine} drmEngine\n * @param {?shaka.extern.Stream} activeAudio\n * @param {?shaka.extern.Stream} activeVideo\n * @param {shaka.extern.Period} period\n */\nshaka.util.StreamUtils.filterNewPeriod = function(\n    drmEngine, activeAudio, activeVideo, period) {\n  const StreamUtils = shaka.util.StreamUtils;\n\n  if (activeAudio) {\n    goog.asserts.assert(StreamUtils.isAudio(activeAudio),\n                        'Audio streams must have the audio type.');\n  }\n\n  if (activeVideo) {\n    goog.asserts.assert(StreamUtils.isVideo(activeVideo),\n                        'Video streams must have the video type.');\n  }\n\n  // Filter variants.\n  period.variants = period.variants.filter((variant) => {\n    if (drmEngine && drmEngine.initialized()) {\n      if (!drmEngine.supportsVariant(variant)) {\n        shaka.log.debug('Dropping variant - not compatible with key system',\n                        variant);\n        return false;\n      }\n    }\n\n    const audio = variant.audio;\n    const video = variant.video;\n\n    if (audio && !shaka.media.MediaSourceEngine.isStreamSupported(audio)) {\n      shaka.log.debug('Dropping variant - audio not compatible with platform',\n                      StreamUtils.getStreamSummaryString_(audio));\n      return false;\n    }\n\n    if (video && !shaka.media.MediaSourceEngine.isStreamSupported(video)) {\n      shaka.log.debug('Dropping variant - video not compatible with platform',\n                      StreamUtils.getStreamSummaryString_(video));\n      return false;\n    }\n\n    if (audio && activeAudio) {\n      if (!StreamUtils.areStreamsCompatible_(audio, activeAudio)) {\n        shaka.log.debug('Droping variant - not compatible with active audio',\n                        'active audio',\n                        StreamUtils.getStreamSummaryString_(activeAudio),\n                        'variant.audio',\n                        StreamUtils.getStreamSummaryString_(audio));\n        return false;\n      }\n    }\n\n    if (video && activeVideo) {\n      if (!StreamUtils.areStreamsCompatible_(video, activeVideo)) {\n        shaka.log.debug('Droping variant - not compatible with active video',\n                        'active video',\n                        StreamUtils.getStreamSummaryString_(activeVideo),\n                        'variant.video',\n                        StreamUtils.getStreamSummaryString_(video));\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  // Filter text streams.\n  period.textStreams = period.textStreams.filter(function(stream) {\n    let fullMimeType = shaka.util.MimeUtils.getFullType(\n        stream.mimeType, stream.codecs);\n    let keep = shaka.text.TextEngine.isTypeSupported(fullMimeType);\n\n    if (!keep) {\n      shaka.log.debug('Dropping text stream. Is not supported by the ' +\n                      'platform.', stream);\n    }\n\n    return keep;\n  });\n};\n\n\n/**\n * @param {shaka.extern.Stream} s0\n * @param {shaka.extern.Stream} s1\n * @return {boolean}\n * @private\n */\nshaka.util.StreamUtils.areStreamsCompatible_ = function(s0, s1) {\n  // Basic mime types and basic codecs need to match.\n  // For example, we can't adapt between WebM and MP4,\n  // nor can we adapt between mp4a.* to ec-3.\n  // We can switch between text types on the fly,\n  // so don't run this check on text.\n  if (s0.mimeType != s1.mimeType) {\n    return false;\n  }\n\n  if (s0.codecs.split('.')[0] != s1.codecs.split('.')[0]) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.variantToTrack = function(variant) {\n  /** @type {?shaka.extern.Stream} */\n  let audio = variant.audio;\n  /** @type {?shaka.extern.Stream} */\n  let video = variant.video;\n\n  /** @type {?string} */\n  let audioCodec = audio ? audio.codecs : null;\n  /** @type {?string} */\n  let videoCodec = video ? video.codecs : null;\n\n  /** @type {!Array.<string>} */\n  let codecs = [];\n  if (videoCodec) codecs.push(videoCodec);\n  if (audioCodec) codecs.push(audioCodec);\n\n  /** @type {!Array.<string>} */\n  let mimeTypes = [];\n  if (video) mimeTypes.push(video.mimeType);\n  if (audio) mimeTypes.push(audio.mimeType);\n  /** @type {?string} */\n  let mimeType = mimeTypes[0] || null;\n\n  /** @type {!Array.<string>} */\n  let kinds = [];\n  if (audio) kinds.push(audio.kind);\n  if (video) kinds.push(video.kind);\n  /** @type {?string} */\n  let kind = kinds[0] || null;\n\n  /** @type {!Set.<string>} */\n  const roles = new Set();\n  if (audio) audio.roles.forEach((role) => roles.add(role));\n  if (video) video.roles.forEach((role) => roles.add(role));\n\n  /** @type {shaka.extern.Track} */\n  let track = {\n    id: variant.id,\n    active: false,\n    type: 'variant',\n    bandwidth: variant.bandwidth,\n    language: variant.language,\n    label: null,\n    kind: kind,\n    width: null,\n    height: null,\n    frameRate: null,\n    mimeType: mimeType,\n    codecs: codecs.join(', '),\n    audioCodec: audioCodec,\n    videoCodec: videoCodec,\n    primary: variant.primary,\n    roles: Array.from(roles),\n    audioRoles: null,\n    videoId: null,\n    audioId: null,\n    channelsCount: null,\n    audioBandwidth: null,\n    videoBandwidth: null,\n    originalVideoId: null,\n    originalAudioId: null,\n    originalTextId: null,\n  };\n\n  if (video) {\n    track.videoId = video.id;\n    track.originalVideoId = video.originalId;\n    track.width = video.width || null;\n    track.height = video.height || null;\n    track.frameRate = video.frameRate || null;\n    track.videoBandwidth = video.bandwidth || null;\n  }\n\n  if (audio) {\n    track.audioId = audio.id;\n    track.originalAudioId = audio.originalId;\n    track.channelsCount = audio.channelsCount;\n    track.audioBandwidth = audio.bandwidth || null;\n    track.label = audio.label;\n    track.audioRoles = audio.roles;\n  }\n\n  return track;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.textStreamToTrack = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  /** @type {shaka.extern.Track} */\n  let track = {\n    id: stream.id,\n    active: false,\n    type: ContentType.TEXT,\n    bandwidth: 0,\n    language: stream.language,\n    label: stream.label,\n    kind: stream.kind || null,\n    width: null,\n    height: null,\n    frameRate: null,\n    mimeType: stream.mimeType,\n    codecs: stream.codecs || null,\n    audioCodec: null,\n    videoCodec: null,\n    primary: stream.primary,\n    roles: stream.roles,\n    audioRoles: null,\n    videoId: null,\n    audioId: null,\n    channelsCount: null,\n    audioBandwidth: null,\n    videoBandwidth: null,\n    originalVideoId: null,\n    originalAudioId: null,\n    originalTextId: stream.originalId,\n  };\n\n  return track;\n};\n\n\n/**\n * Generate and return an ID for this track, since the ID field is optional.\n *\n * @param {TextTrack|AudioTrack} html5Track\n * @return {number} The generated ID.\n */\nshaka.util.StreamUtils.html5TrackId = function(html5Track) {\n  if (!html5Track['__shaka_id']) {\n    html5Track['__shaka_id'] = shaka.util.StreamUtils.nextTrackId_++;\n  }\n  return html5Track['__shaka_id'];\n};\n\n\n/** @private {number} */\nshaka.util.StreamUtils.nextTrackId_ = 0;\n\n\n/**\n * @param {TextTrack} textTrack\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.html5TextTrackToTrack = function(textTrack) {\n  const CLOSED_CAPTION_MIMETYPE = shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE;\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {shaka.extern.Track} */\n  const track = StreamUtils.html5TrackToGenericShakaTrack_(textTrack);\n  track.active = textTrack.mode != 'disabled';\n  track.type = 'text';\n  track.originalTextId = textTrack.id;\n  if (textTrack.kind == 'captions') {\n    track.mimeType = CLOSED_CAPTION_MIMETYPE;\n  }\n\n  return track;\n};\n\n\n/**\n * @param {AudioTrack} audioTrack\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.html5AudioTrackToTrack = function(audioTrack) {\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {shaka.extern.Track} */\n  const track = StreamUtils.html5TrackToGenericShakaTrack_(audioTrack);\n  track.active = audioTrack.enabled;\n  track.type = 'variant';\n  track.originalAudioId = audioTrack.id;\n\n  if (audioTrack.kind == 'main') {\n    track.primary = true;\n    track.roles = ['main'];\n    track.audioRoles = ['main'];\n  } else {\n    track.audioRoles = [];\n  }\n\n  return track;\n};\n\n\n/**\n * Creates a Track object with non-type specific fields filled out.  The caller\n * is responsible for completing the Track object with any type-specific\n * information (audio or text).\n *\n * @param {TextTrack|AudioTrack} html5Track\n * @return {shaka.extern.Track}\n * @private\n */\nshaka.util.StreamUtils.html5TrackToGenericShakaTrack_ = function(html5Track) {\n  /** @type {shaka.extern.Track} */\n  const track = {\n    id: shaka.util.StreamUtils.html5TrackId(html5Track),\n    active: false,\n    type: '',\n    bandwidth: 0,\n    language: shaka.util.LanguageUtils.normalize(html5Track.language),\n    label: html5Track.label,\n    kind: html5Track.kind,\n    width: null,\n    height: null,\n    frameRate: null,\n    mimeType: null,\n    codecs: null,\n    audioCodec: null,\n    videoCodec: null,\n    primary: false,\n    roles: [],\n    audioRoles: null,\n    videoId: null,\n    audioId: null,\n    channelsCount: null,\n    audioBandwidth: null,\n    videoBandwidth: null,\n    originalVideoId: null,\n    originalAudioId: null,\n    originalTextId: null,\n  };\n\n  return track;\n};\n\n\n/**\n * Determines if the given variant is playable.\n * @param {!shaka.extern.Variant} variant\n * @return {boolean}\n */\nshaka.util.StreamUtils.isPlayable = function(variant) {\n  return variant.allowedByApplication && variant.allowedByKeySystem;\n};\n\n\n/**\n * Filters out unplayable variants.\n * @param {!Array.<!shaka.extern.Variant>} variants\n * @return {!Array.<!shaka.extern.Variant>}\n */\nshaka.util.StreamUtils.getPlayableVariants = function(variants) {\n  return variants.filter(function(variant) {\n    return shaka.util.StreamUtils.isPlayable(variant);\n  });\n};\n\n\n/**\n * Filters variants according to the given audio channel count config.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {number} preferredAudioChannelCount\n * @return {!Array.<!shaka.extern.Variant>}\n */\nshaka.util.StreamUtils.filterVariantsByAudioChannelCount = function(\n    variants, preferredAudioChannelCount) {\n  // Group variants by their audio channel counts.\n  const variantsWithChannelCounts =\n      variants.filter((v) => v.audio && v.audio.channelsCount);\n\n  /** @type {!Map.<number, !Array.<shaka.extern.Variant>>} */\n  const variantsByChannelCount = new Map();\n  for (const variant of variantsWithChannelCounts) {\n    const count = variant.audio.channelsCount;\n    goog.asserts.assert(count != null, 'Must have count after filtering!');\n    if (!variantsByChannelCount.has(count)) {\n      variantsByChannelCount.set(count, []);\n    }\n    variantsByChannelCount.get(count).push(variant);\n  }\n\n  /** @type {!Array.<number>} */\n  const channelCounts = Array.from(variantsByChannelCount.keys());\n\n  // If no variant has audio channel count info, return the original variants.\n  if (channelCounts.length == 0) {\n    return variants;\n  }\n\n  // Choose the variants with the largest number of audio channels less than or\n  // equal to the configured number of audio channels.\n  const countLessThanOrEqualtoConfig =\n      channelCounts.filter((count) => count <= preferredAudioChannelCount);\n  if (countLessThanOrEqualtoConfig.length) {\n    return variantsByChannelCount.get(Math.max.apply(null,\n        countLessThanOrEqualtoConfig));\n  }\n\n  // If all variants have more audio channels than the config, choose the\n  // variants with the fewest audio channels.\n  return variantsByChannelCount.get(Math.min.apply(null, channelCounts));\n};\n\n/**\n * Chooses streams according to the given config.\n *\n * @param {!Array.<shaka.extern.Stream>} streams\n * @param {string} preferredLanguage\n * @param {string} preferredRole\n * @return {!Array.<!shaka.extern.Stream>}\n */\nshaka.util.StreamUtils.filterStreamsByLanguageAndRole = function(\n    streams, preferredLanguage, preferredRole) {\n  const LanguageUtils = shaka.util.LanguageUtils;\n\n  /** @type {!Array.<!shaka.extern.Stream>} */\n  let chosen = streams;\n\n  // Start with the set of primary streams.\n  /** @type {!Array.<!shaka.extern.Stream>} */\n  let primary = streams.filter(function(stream) {\n    return stream.primary;\n  });\n\n  if (primary.length) {\n    chosen = primary;\n  }\n\n  // Now reduce the set to one language.  This covers both arbitrary language\n  // choice and the reduction of the \"primary\" stream set to one language.\n  let firstLanguage = chosen.length ? chosen[0].language : '';\n  chosen = chosen.filter(function(stream) {\n    return stream.language == firstLanguage;\n  });\n\n  // Find the streams that best match our language preference. This will\n  // override previous selections.\n  if (preferredLanguage) {\n    const closestLocale = LanguageUtils.findClosestLocale(\n        LanguageUtils.normalize(preferredLanguage),\n        streams.map((stream) => stream.language));\n\n    // Only replace |chosen| if we found a locale that is close to our\n    // preference.\n    if (closestLocale) {\n      chosen = streams.filter((stream) => {\n        const locale = LanguageUtils.normalize(stream.language);\n        return locale == closestLocale;\n      });\n    }\n  }\n\n  // Now refine the choice based on role preference.\n  if (preferredRole) {\n    let roleMatches = shaka.util.StreamUtils.filterTextStreamsByRole_(\n        chosen, preferredRole);\n    if (roleMatches.length) {\n      return roleMatches;\n    } else {\n      shaka.log.warning('No exact match for the text role could be found.');\n    }\n  } else {\n    // Prefer text streams with no roles, if they exist.\n    let noRoleMatches = chosen.filter(function(stream) {\n      return stream.roles.length == 0;\n    });\n    if (noRoleMatches.length) {\n      return noRoleMatches;\n    }\n  }\n\n  // Either there was no role preference, or it could not be satisfied.\n  // Choose an arbitrary role, if there are any, and filter out any other roles.\n  // This ensures we never adapt between roles.\n\n  let allRoles = chosen.map(function(stream) {\n    return stream.roles;\n  }).reduce(shaka.util.Functional.collapseArrays, []);\n\n  if (!allRoles.length) {\n    return chosen;\n  }\n  return shaka.util.StreamUtils.filterTextStreamsByRole_(chosen, allRoles[0]);\n};\n\n\n/**\n * Filter text Streams by role.\n *\n * @param {!Array.<shaka.extern.Stream>} textStreams\n * @param {string} preferredRole\n * @return {!Array.<shaka.extern.Stream>}\n * @private\n */\nshaka.util.StreamUtils.filterTextStreamsByRole_ =\n    function(textStreams, preferredRole) {\n  return textStreams.filter(function(stream) {\n    return stream.roles.includes(preferredRole);\n  });\n};\n\n\n/**\n * Finds a Variant with given audio and video streams.\n * Returns null if no such Variant was found.\n *\n * @param {?shaka.extern.Stream} audio\n * @param {?shaka.extern.Stream} video\n * @param {!Array.<!shaka.extern.Variant>} variants\n * @return {?shaka.extern.Variant}\n */\nshaka.util.StreamUtils.getVariantByStreams = function(audio, video, variants) {\n  if (audio) {\n    goog.asserts.assert(\n        shaka.util.StreamUtils.isAudio(audio),\n        'Audio streams must have the audio type.');\n  }\n\n  if (video) {\n    goog.asserts.assert(\n        shaka.util.StreamUtils.isVideo(video),\n        'Video streams must have the video type.');\n  }\n\n  for (let i = 0; i < variants.length; i++) {\n    if (variants[i].audio == audio && variants[i].video == video) {\n      return variants[i];\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Checks if the given stream is an audio stream.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.util.StreamUtils.isAudio = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return stream.type == ContentType.AUDIO;\n};\n\n\n/**\n * Checks if the given stream is a video stream.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.util.StreamUtils.isVideo = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return stream.type == ContentType.VIDEO;\n};\n\n\n/**\n * Get all non-null streams in the variant as an array.\n *\n * @param {shaka.extern.Variant} variant\n * @return {!Array.<shaka.extern.Stream>}\n */\nshaka.util.StreamUtils.getVariantStreams = function(variant) {\n  const streams = [];\n\n  if (variant.audio) { streams.push(variant.audio); }\n  if (variant.video) { streams.push(variant.video); }\n\n  return streams;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @return {string}\n * @private\n */\nshaka.util.StreamUtils.getStreamSummaryString_ = function(stream) {\n  if (shaka.util.StreamUtils.isAudio(stream)) {\n    return 'type=audio' +\n           ' codecs=' + stream.codecs +\n           ' bandwidth='+ stream.bandwidth +\n           ' channelsCount=' + stream.channelsCount;\n  }\n\n  if (shaka.util.StreamUtils.isVideo(stream)) {\n    return 'type=video' +\n           ' codecs=' + stream.codecs +\n           ' bandwidth=' + stream.bandwidth +\n           ' frameRate=' + stream.frameRate +\n           ' width=' + stream.width +\n           ' height=' + stream.height;\n  }\n\n  return 'unexpected stream type';\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.SimpleAbrManager');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.abr.EwmaBandwidthEstimator');\ngoog.require('shaka.log');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * <p>\n * This defines the default ABR manager for the Player.  An instance of this\n * class is used when no ABR manager is given.\n * </p>\n * <p>\n * The behavior of this class is to take throughput samples using\n * segmentDownloaded to estimate the current network bandwidth.  Then it will\n * use that to choose the streams that best fit the current bandwidth.  It will\n * always pick the highest bandwidth variant it thinks can be played.\n * </p>\n * <p>\n * After initial choices are made, this class will call switchCallback() when\n * there is a better choice.  switchCallback() will not be called more than once\n * per ({@link shaka.abr.SimpleAbrManager.SWITCH_INTERVAL_MS}).\n * </p>\n *\n * @constructor\n * @struct\n * @implements {shaka.extern.AbrManager}\n * @export\n */\nshaka.abr.SimpleAbrManager = function() {\n  /** @private {?shaka.extern.AbrManager.SwitchCallback} */\n  this.switch_ = null;\n\n  /** @private {boolean} */\n  this.enabled_ = false;\n\n  /** @private {shaka.abr.EwmaBandwidthEstimator} */\n  this.bandwidthEstimator_ = new shaka.abr.EwmaBandwidthEstimator();\n  // TODO: Consider using NetworkInformation's change event to throw out an old\n  // estimate based on changing network types, such as wifi => 3g.\n\n  /**\n   * A filtered list of Variants to choose from.\n   * @private {!Array.<!shaka.extern.Variant>}\n   */\n  this.variants_ = [];\n\n  /** @private {boolean} */\n  this.startupComplete_ = false;\n\n  /**\n   * The last wall-clock time, in milliseconds, when streams were chosen.\n   *\n   * @private {?number}\n   */\n  this.lastTimeChosenMs_ = null;\n\n  /** @private {?shaka.extern.AbrConfiguration} */\n  this.config_ = null;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.stop = function() {\n  this.switch_ = null;\n  this.enabled_ = false;\n  this.variants_ = [];\n  this.lastTimeChosenMs_ = null;\n\n  // Don't reset |startupComplete_|: if we've left the startup interval, we can\n  // start using bandwidth estimates right away after init() is called.\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.init = function(switchCallback) {\n  this.switch_ = switchCallback;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.chooseVariant = function() {\n  const SimpleAbrManager = shaka.abr.SimpleAbrManager;\n\n  // Get sorted Variants.\n  let sortedVariants = SimpleAbrManager.filterAndSortVariants_(\n      this.config_.restrictions, this.variants_);\n  let currentBandwidth = this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n\n  if (this.variants_.length && !sortedVariants.length) {\n    // If we couldn't meet the ABR restrictions, we should still play something.\n    // These restrictions are not \"hard\" restrictions in the way that top-level\n    // or DRM-based restrictions are.  Sort the variants without restrictions\n    // and keep just the first (lowest-bandwidth) one.\n    shaka.log.warning('No variants met the ABR restrictions. ' +\n                      'Choosing a variant by lowest bandwidth.');\n    sortedVariants = SimpleAbrManager.filterAndSortVariants_(\n        /* restrictions */ null, this.variants_);\n    sortedVariants = [sortedVariants[0]];\n  }\n\n  // Start by assuming that we will use the first Stream.\n  let chosen = sortedVariants[0] || null;\n\n  for (let i = 0; i < sortedVariants.length; ++i) {\n    let variant = sortedVariants[i];\n    let nextVariant = sortedVariants[i + 1] || {bandwidth: Infinity};\n\n    let minBandwidth = variant.bandwidth /\n                       this.config_.bandwidthDowngradeTarget;\n    let maxBandwidth = nextVariant.bandwidth /\n                       this.config_.bandwidthUpgradeTarget;\n    shaka.log.v2('Bandwidth ranges:',\n                 (variant.bandwidth / 1e6).toFixed(3),\n                 (minBandwidth / 1e6).toFixed(3),\n                 (maxBandwidth / 1e6).toFixed(3));\n\n    if (currentBandwidth >= minBandwidth && currentBandwidth <= maxBandwidth) {\n      chosen = variant;\n    }\n  }\n\n  this.lastTimeChosenMs_ = Date.now();\n  return chosen;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.enable = function() {\n  this.enabled_ = true;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.disable = function() {\n  this.enabled_ = false;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.segmentDownloaded = function(\n    deltaTimeMs, numBytes) {\n  shaka.log.v2('Segment downloaded:',\n               'deltaTimeMs=' + deltaTimeMs,\n               'numBytes=' + numBytes,\n               'lastTimeChosenMs=' + this.lastTimeChosenMs_,\n               'enabled=' + this.enabled_);\n  goog.asserts.assert(deltaTimeMs >= 0, 'expected a non-negative duration');\n  this.bandwidthEstimator_.sample(deltaTimeMs, numBytes);\n\n  if ((this.lastTimeChosenMs_ != null) && this.enabled_) {\n    this.suggestStreams_();\n  }\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.getBandwidthEstimate = function() {\n  return this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.setVariants = function(variants) {\n  this.variants_ = variants;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * Calls switch_() with the variant chosen by chooseVariant().\n *\n * @private\n */\nshaka.abr.SimpleAbrManager.prototype.suggestStreams_ = function() {\n  shaka.log.v2('Suggesting Streams...');\n  goog.asserts.assert(this.lastTimeChosenMs_ != null,\n                      'lastTimeChosenMs_ should not be null');\n\n  if (!this.startupComplete_) {\n    // Check if we've got enough data yet.\n    if (!this.bandwidthEstimator_.hasGoodEstimate()) {\n      shaka.log.v2('Still waiting for a good estimate...');\n      return;\n    }\n    this.startupComplete_ = true;\n  } else {\n    // Check if we've left the switch interval.\n    let now = Date.now();\n    let delta = now - this.lastTimeChosenMs_;\n    if (delta < this.config_.switchInterval * 1000) {\n      shaka.log.v2('Still within switch interval...');\n      return;\n    }\n  }\n\n  let chosenVariant = this.chooseVariant();\n  let bandwidthEstimate = this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n  let currentBandwidthKbps = Math.round(bandwidthEstimate / 1000.0);\n\n  shaka.log.debug(\n      'Calling switch_(), bandwidth=' + currentBandwidthKbps + ' kbps');\n  // If any of these chosen streams are already chosen, Player will filter them\n  // out before passing the choices on to StreamingEngine.\n  this.switch_(chosenVariant);\n};\n\n\n/**\n * @param {?shaka.extern.Restrictions} restrictions\n * @param {!Array.<shaka.extern.Variant>} variants\n * @return {!Array.<shaka.extern.Variant>} variants filtered according to\n *   |restrictions| and sorted in ascending order of bandwidth.\n * @private\n */\nshaka.abr.SimpleAbrManager.filterAndSortVariants_ = function(\n    restrictions, variants) {\n  if (restrictions) {\n    variants = variants.filter((variant) => {\n      // This was already checked in another scope, but the compiler doesn't\n      // seem to understand that.\n      goog.asserts.assert(restrictions, 'Restrictions should exist!');\n\n      return shaka.util.StreamUtils.meetsRestrictions(\n          variant, restrictions,\n          /* maxHwRes */ {width: Infinity, height: Infinity});\n    });\n  }\n\n  return variants.sort((v1, v2) => {\n    return v1.bandwidth - v2.bandwidth;\n  });\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.deprecate.Version');\n\n/**\n * A class that defines what a library version is within the deprecation\n * system. Within deprecation we only care about the major and minor versions.\n *\n * @final\n */\nshaka.deprecate.Version = class {\n  /**\n   * @param {number} major\n   * @param {number} minor\n   */\n  constructor(major, minor) {\n    this.major_ = major;\n    this.minor_ = minor;\n  }\n\n  /** @return {number} */\n  major() { return this.major_; }\n\n  /** @return {number} */\n  minor() { return this.minor_; }\n\n  /**\n   * Returns:\n   *  - positive if |this| > |other|\n   *  - zero if |this| == |other|\n   *  - negative if |this| < |other|\n   *\n   * @param {!shaka.deprecate.Version} other\n   * @return {number}\n   */\n  compareTo(other) {\n    const majorCheck = this.major_ - other.major_;\n    const minorCheck = this.minor_ - other.minor_;\n\n    return majorCheck || minorCheck;\n  }\n\n  /** @override */\n  toString() {\n    return 'v' + this.major_ + '.' + this.minor_;\n  }\n\n  /**\n   * Parse the major and minor values out of a version string that is assumed\n   * to follow the grammar: \"vMAJOR.MINOR.\". What comes after the last \".\" we\n   * will ignore.\n   *\n   * @param {string} versionString\n   * @return {!shaka.deprecate.Version}\n   */\n  static parse(versionString) {\n    // Make sure to drop the \"v\" from the front. We limit the number of splits\n    // to two as we don't care what happens after the minor version number.\n    // For example: 'a.b.c.d'.split('.', 2) == ['a', 'b']\n    const components = versionString.substring(1).split('.', /* limit= */ 2);\n\n    return new shaka.deprecate.Version(\n        Number(components[0]),\n        Number(components[1]));\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.Deprecate');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.deprecate.Enforcer');\ngoog.require('shaka.deprecate.Version');\n\n\n/**\n * |shaka.Deprecate| is the front-end of the deprecation system, allowing for\n * any part of the code to say that \"this block of code should be removed by\n * version X\".\n *\n * @final\n */\nshaka.Deprecate = class {\n  /**\n   * Initialize the system. This must happen before any calls to |enforce|. In\n   * our code base, |shaka.Player| will be the only one to call this (it has the\n   * version string).\n   *\n   * If the |Deprecate| called |Player.version| to initialize itself, it would\n   * mean that |Player| could not use |Deprecate| because it would create a\n   * circular dependency. To work around this, we provide this method so that\n   * |Player| can give us the version without us needing to know about |Player|.\n   *\n   * This will initialize the system to:\n   *  - print warning messages when the feature is scheduled to be removed in a\n   *    later version\n   *  - print errors and fail assertions when the feature should be removed now\n   *\n   * @param {string} versionString\n   */\n  static init(versionString) {\n    goog.asserts.assert(\n        shaka.Deprecate.enforcer_ == null,\n        'Deprecate.init should only be called once.');\n\n    shaka.Deprecate.enforcer_ = new shaka.deprecate.Enforcer(\n        shaka.deprecate.Version.parse(versionString),\n        shaka.Deprecate.onPending_,\n        shaka.Deprecate.onExpired_);\n  }\n\n  /**\n   * Ask the deprecation system to require this feature to be removed by the\n   * given version.\n   *\n   * @param {number} major\n   * @param {number} minor\n   * @param {string} name\n   * @param {string} description\n   */\n  static deprecateFeature(major, minor, name, description) {\n    const enforcer = shaka.Deprecate.enforcer_;\n    goog.asserts.assert(\n        enforcer,\n        'Missing deprecation enforcer. Was |init| called?');\n\n    const expiresAt = new shaka.deprecate.Version(major, minor);\n    enforcer.enforce(expiresAt, name, description);\n  }\n\n  /**\n   * @param {!shaka.deprecate.Version} libraryVersion\n   * @param {!shaka.deprecate.Version} featureVersion\n   * @param {string} name\n   * @param {string} description\n   * @private\n   */\n  static onPending_(libraryVersion, featureVersion, name, description) {\n    // If we were to pass each value to the log call, it would be printed as\n    // a comma-separated list. To make the print state appear more natural to\n    // the reader, create one string for the message.\n    shaka.log.alwaysWarn([\n      name,\n      'has been deprecated and will be removed in',\n      featureVersion,\n      '. We are currently at version',\n      libraryVersion,\n      '. Additional information:',\n      description,\n    ].join(' '));\n  }\n\n  /**\n   * @param {!shaka.deprecate.Version} libraryVersion\n   * @param {!shaka.deprecate.Version} featureVersion\n   * @param {string} name\n   * @param {string} description\n   * @private\n   */\n  static onExpired_(libraryVersion, featureVersion, name, description) {\n    // If we were to pass each value to the log call, it would be printed as\n    // a comma-separated list. To make the print state appear more natural to\n    // the reader, create one string for the message.\n    const errorMessage = [\n      name,\n      'has been deprecated and has been removed in',\n      featureVersion,\n      '. We are now at version',\n      libraryVersion,\n      '. Additional information:',\n      description,\n    ].join('');\n\n    shaka.log.alwaysError(errorMessage);\n    goog.asserts.assert(false, errorMessage);\n  }\n};\n\n/**\n * The global deprecation enforcer that will be set by the player (because the\n * player knows the version) when it calls |init|. This may appear a little\n * round-about to you, because it is. Since player uses |Deprecate|, it means\n * that |Deprecate| can't depend on Player directly.\n *\n * @private {shaka.deprecate.Enforcer}\n */\nshaka.Deprecate.enforcer_ = null;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastProxy');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.Deprecate');\ngoog.require('shaka.cast.CastSender');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * A proxy to switch between local and remote playback for Chromecast in a way\n * that is transparent to the app's controls.\n *\n * @constructor\n * @struct\n * @param {!HTMLMediaElement} video The local video element associated with the\n *   local Player instance.\n * @param {!shaka.Player} player A local Player instance.\n * @param {string} receiverAppId The ID of the cast receiver application.\n *   If blank, casting will not be available, but the proxy will still function\n *   otherwise.\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.cast.CastProxy = function(video, player, receiverAppId) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {HTMLMediaElement} */\n  this.localVideo_ = video;\n\n  /** @private {shaka.Player} */\n  this.localPlayer_ = player;\n\n  /** @private {Object} */\n  this.videoProxy_ = null;\n\n  /** @private {Object} */\n  this.playerProxy_ = null;\n\n  /** @private {shaka.util.FakeEventTarget} */\n  this.videoEventTarget_ = null;\n\n  /** @private {shaka.util.FakeEventTarget} */\n  this.playerEventTarget_ = null;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = null;\n\n  /** @private {string} */\n  this.receiverAppId_ = receiverAppId;\n\n  if (this.receiverAppId_) {\n    // TODO: This is temporary fix to get casting working.\n    // It masks the fact that we're at the moment unable to\n    // change the receiver id sucessfully.\n    // It relies on the assumption that changing one actual\n    // id to another is a very edgy use case (usually apps have\n    // only one receiver app).\n    // It unblocks casting in the world where UI can be configured,\n    // but it's hacky and must be changed to a permanent solution\n    // allowing to change Receiver App ID for reals.\n    /** @private {shaka.cast.CastSender} */\n    this.sender_ = new shaka.cast.CastSender(\n        receiverAppId,\n        () => this.onCastStatusChanged_(),\n        () => this.onFirstCastStateUpdate_(),\n        (targetName, event) => this.onRemoteEvent_(targetName, event),\n        () => this.onResumeLocal_(),\n        () => this.getInitState_());\n  }\n\n  this.init_();\n};\ngoog.inherits(shaka.cast.CastProxy, shaka.util.FakeEventTarget);\n\n\n/**\n * Destroys the proxy and the underlying local Player.\n *\n * @param {boolean=} forceDisconnect If true, force the receiver app to shut\n *   down by disconnecting.  Does nothing if not connected.\n * @override\n * @export\n */\nshaka.cast.CastProxy.prototype.destroy = function(forceDisconnect) {\n  if (forceDisconnect && this.sender_) {\n    this.sender_.forceDisconnect();\n  }\n\n  if (this.eventManager_) {\n    this.eventManager_.release();\n    this.eventManager_ = null;\n  }\n\n  const waitFor = [];\n  if (this.localPlayer_) {\n    waitFor.push(this.localPlayer_.destroy());\n    this.localPlayer_ = null;\n  }\n\n  if (this.sender_) {\n    waitFor.push(this.sender_.destroy());\n    this.sender_ = null;\n  }\n\n  this.localVideo_ = null;\n  this.videoProxy_ = null;\n  this.playerProxy_ = null;\n\n  return Promise.all(waitFor);\n};\n\n\n/**\n * @event shaka.cast.CastProxy.CastStatusChangedEvent\n * @description Fired when cast status changes.  The status change will be\n *   reflected in canCast() and isCasting().\n * @property {string} type\n *   'caststatuschanged'\n * @exportDoc\n */\n\n\n/**\n * Get a proxy for the video element that delegates to local and remote video\n * elements as appropriate.\n *\n * @suppress {invalidCasts} to cast proxy Objects to unrelated types\n * @return {!HTMLMediaElement}\n * @export\n */\nshaka.cast.CastProxy.prototype.getVideo = function() {\n  return /** @type {!HTMLMediaElement} */(this.videoProxy_);\n};\n\n\n/**\n * Get a proxy for the Player that delegates to local and remote Player objects\n * as appropriate.\n *\n * @suppress {invalidCasts} to cast proxy Objects to unrelated types\n * @return {!shaka.Player}\n * @export\n */\nshaka.cast.CastProxy.prototype.getPlayer = function() {\n  return /** @type {!shaka.Player} */(this.playerProxy_);\n};\n\n\n/**\n * @return {boolean} True if the cast API is available and there are receivers.\n * @export\n */\nshaka.cast.CastProxy.prototype.canCast = function() {\n  return this.sender_ ?\n      this.sender_.apiReady() && this.sender_.hasReceivers() :\n      false;\n};\n\n\n/**\n * @return {boolean} True if we are currently casting.\n * @export\n */\nshaka.cast.CastProxy.prototype.isCasting = function() {\n  return this.sender_ ? this.sender_.isCasting() : false;\n};\n\n\n/**\n * @return {string} The name of the Cast receiver device, if isCasting().\n * @export\n */\nshaka.cast.CastProxy.prototype.receiverName = function() {\n  return this.sender_ ? this.sender_.receiverName() : '';\n};\n\n\n/**\n * @return {!Promise} Resolved when connected to a receiver.  Rejected if the\n *   connection fails or is canceled by the user.\n * @export\n */\nshaka.cast.CastProxy.prototype.cast = function() {\n  if (!this.sender_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.CAST_RECEIVER_APP_ID_MISSING);\n  }\n\n  let initState = this.getInitState_();\n\n  // TODO: transfer manually-selected tracks?\n  // TODO: transfer side-loaded text tracks?\n\n  return this.sender_.cast(initState).then(function() {\n    if (!this.localPlayer_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    // Unload the local manifest when casting succeeds.\n    return this.localPlayer_.unload();\n  }.bind(this));\n};\n\n\n/**\n * Set application-specific data.\n *\n * @param {Object} appData Application-specific data to relay to the receiver.\n * @export\n */\nshaka.cast.CastProxy.prototype.setAppData = function(appData) {\n  if (this.sender_) {\n    this.sender_.setAppData(appData);\n  }\n};\n\n\n/**\n * Show a dialog where user can choose to disconnect from the cast connection.\n * @export\n */\nshaka.cast.CastProxy.prototype.suggestDisconnect = function() {\n  if (this.sender_) {\n    this.sender_.showDisconnectDialog();\n  }\n};\n\n\n/**\n * @param {string} newAppId\n * @export\n */\nshaka.cast.CastProxy.prototype.changeReceiverId = async function(newAppId) {\n  if (newAppId == this.receiverAppId_) {\n    // Nothing to change\n    return;\n  }\n\n  this.receiverAppId_ = newAppId;\n\n  // TODO: This code doesn't work correctly at the moment. Changing\n  // one working receiver id to another needs to be figured out.\n  // Destroy the old sender\n  if (this.sender_) {\n    this.sender_.forceDisconnect();\n    await this.sender_.destroy();\n    this.sender_ = null;\n  }\n\n\n  // Create the new one\n  this.sender_ = new shaka.cast.CastSender(\n      newAppId,\n      () => this.onCastStatusChanged_(),\n      () => this.onFirstCastStateUpdate_(),\n      (targetName, event) => this.onRemoteEvent_(targetName, event),\n      () => this.onResumeLocal_(),\n      () => this.getInitState_());\n\n  this.sender_.init();\n};\n\n\n/**\n * Force the receiver app to shut down by disconnecting.\n * @export\n */\nshaka.cast.CastProxy.prototype.forceDisconnect = function() {\n  if (this.sender_) {\n    this.sender_.forceDisconnect();\n  }\n};\n\n\n/**\n * Initialize the Proxies and the Cast sender.\n * @private\n */\nshaka.cast.CastProxy.prototype.init_ = function() {\n  if (this.sender_) {\n    this.sender_.init();\n  }\n\n  this.eventManager_ = new shaka.util.EventManager();\n\n  shaka.cast.CastUtils.VideoEvents.forEach(function(name) {\n    this.eventManager_.listen(this.localVideo_, name,\n        this.videoProxyLocalEvent_.bind(this));\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerEvents.forEach(function(name) {\n    this.eventManager_.listen(this.localPlayer_, name,\n        this.playerProxyLocalEvent_.bind(this));\n  }.bind(this));\n\n  // We would like to use Proxy here, but it is not supported on IE11 or Safari.\n  this.videoProxy_ = {};\n  for (let k in this.localVideo_) {\n    Object.defineProperty(this.videoProxy_, k, {\n      configurable: false,\n      enumerable: true,\n      get: this.videoProxyGet_.bind(this, k),\n      set: this.videoProxySet_.bind(this, k),\n    });\n  }\n\n  this.playerProxy_ = {};\n  for (let k in /** @type {Object} */(this.localPlayer_)) {\n    Object.defineProperty(this.playerProxy_, k, {\n      configurable: false,\n      enumerable: true,\n      get: this.playerProxyGet_.bind(this, k),\n    });\n  }\n\n  this.videoEventTarget_ = new shaka.util.FakeEventTarget();\n  this.videoEventTarget_.dispatchTarget =\n      /** @type {EventTarget} */(this.videoProxy_);\n\n  this.playerEventTarget_ = new shaka.util.FakeEventTarget();\n  this.playerEventTarget_.dispatchTarget =\n      /** @type {EventTarget} */(this.playerProxy_);\n};\n\n\n/**\n * @return {shaka.cast.CastUtils.InitStateType} initState Video and player state\n *   to be sent to the receiver.\n * @private\n */\nshaka.cast.CastProxy.prototype.getInitState_ = function() {\n  let initState = {\n    'video': {},\n    'player': {},\n    'playerAfterLoad': {},\n    'manifest': this.localPlayer_.getAssetUri(),\n    'startTime': null,\n  };\n\n  // Pause local playback before capturing state.\n  this.localVideo_.pause();\n\n  shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n    initState['video'][name] = this.localVideo_[name];\n  }.bind(this));\n\n  // If the video is still playing, set the startTime.\n  // Has no effect if nothing is loaded.\n  if (!this.localVideo_.ended) {\n    initState['startTime'] = this.localVideo_.currentTime;\n  }\n\n  shaka.cast.CastUtils.PlayerInitState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = /** @type {Object} */(this.localPlayer_)[getter]();\n\n    initState['player'][setter] = value;\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerInitAfterLoadState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = /** @type {Object} */(this.localPlayer_)[getter]();\n\n    initState['playerAfterLoad'][setter] = value;\n  }.bind(this));\n\n  return initState;\n};\n\n\n/**\n * Dispatch an event to notify the app that the status has changed.\n * @private\n */\nshaka.cast.CastProxy.prototype.onCastStatusChanged_ = function() {\n  let event = new shaka.util.FakeEvent('caststatuschanged');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Dispatch a synthetic play or pause event to ensure that the app correctly\n * knows that the player is playing, if joining an existing receiver.\n * @private\n */\nshaka.cast.CastProxy.prototype.onFirstCastStateUpdate_ = function() {\n  let type = this.videoProxy_.paused ? 'pause' : 'play';\n  let fakeEvent = new shaka.util.FakeEvent(type);\n  this.videoEventTarget_.dispatchEvent(fakeEvent);\n};\n\n\n/**\n * Transfer remote state back and resume local playback.\n * @private\n */\nshaka.cast.CastProxy.prototype.onResumeLocal_ = function() {\n  goog.asserts.assert(this.sender_,\n      'Cast sender should not be null!');\n\n  // Transfer back the player state.\n  shaka.cast.CastUtils.PlayerInitState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = this.sender_.get('player', getter)();\n    /** @type {Object} */(this.localPlayer_)[setter](value);\n  }.bind(this));\n\n  // Get the most recent manifest URI and ended state.\n  let assetUri = this.sender_.get('player', 'getAssetUri')();\n  let ended = this.sender_.get('video', 'ended');\n\n  let manifestReady = Promise.resolve();\n  let autoplay = this.localVideo_.autoplay;\n\n  let startTime = null;\n\n  // If the video is still playing, set the startTime.\n  // Has no effect if nothing is loaded.\n  if (!ended) {\n    startTime = this.sender_.get('video', 'currentTime');\n  }\n\n  // Now load the manifest, if present.\n  if (assetUri) {\n    // Don't autoplay the content until we finish setting up initial state.\n    this.localVideo_.autoplay = false;\n    manifestReady = this.localPlayer_.load(assetUri, startTime);\n  }\n\n  // Get the video state into a temp variable since we will apply it async.\n  let videoState = {};\n  shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n    videoState[name] = this.sender_.get('video', name);\n  }.bind(this));\n\n  // Finally, take on video state and player's \"after load\" state.\n  manifestReady.then(() => {\n    if (!this.localVideo_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n      this.localVideo_[name] = videoState[name];\n    }.bind(this));\n\n    shaka.cast.CastUtils.PlayerInitAfterLoadState.forEach(function(pair) {\n      let getter = pair[0];\n      let setter = pair[1];\n      let value = this.sender_.get('player', getter)();\n      /** @type {Object} */(this.localPlayer_)[setter](value);\n    }.bind(this));\n\n    // Restore the original autoplay setting.\n    this.localVideo_.autoplay = autoplay;\n    if (assetUri) {\n      // Resume playback with transferred state.\n      this.localVideo_.play();\n    }\n  }, (error) => {\n    // Pass any errors through to the app.\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Wrong error type!');\n    let event = new shaka.util.FakeEvent('error', {'detail': error});\n    this.localPlayer_.dispatchEvent(event);\n  });\n};\n\n\n/**\n * @param {string} name\n * @return {?}\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxyGet_ = function(name) {\n  if (name == 'addEventListener') {\n    return this.videoEventTarget_.addEventListener.bind(\n        this.videoEventTarget_);\n  }\n  if (name == 'removeEventListener') {\n    return this.videoEventTarget_.removeEventListener.bind(\n        this.videoEventTarget_);\n  }\n\n  // If we are casting, but the first update has not come in yet, use local\n  // values, but not local methods.\n  if (this.sender_ && this.sender_.isCasting() &&\n      !this.sender_.hasRemoteProperties()) {\n    let value = this.localVideo_[name];\n    if (typeof value != 'function') {\n      return value;\n    }\n  }\n\n  // Use local values and methods if we are not casting.\n  if (!this.sender_ || !this.sender_.isCasting()) {\n    let value = this.localVideo_[name];\n    if (typeof value == 'function') {\n      value = value.bind(this.localVideo_);\n    }\n    return value;\n  }\n\n  return this.sender_.get('video', name);\n};\n\n\n/**\n * @param {string} name\n * @param {?} value\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxySet_ = function(name, value) {\n  if (!this.sender_ || !this.sender_.isCasting()) {\n    this.localVideo_[name] = value;\n    return;\n  }\n\n  this.sender_.set('video', name, value);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxyLocalEvent_ = function(event) {\n  if (this.sender_ && this.sender_.isCasting()) {\n    // Ignore any unexpected local events while casting.  Events can still be\n    // fired by the local video and Player when we unload() after the Cast\n    // connection is complete.\n    return;\n  }\n\n  // Convert this real Event into a FakeEvent for dispatch from our\n  // FakeEventListener.\n  let fakeEvent = new shaka.util.FakeEvent(event.type, event);\n  this.videoEventTarget_.dispatchEvent(fakeEvent);\n};\n\n\n/**\n * @param {string} name\n * @return {?}\n * @private\n */\nshaka.cast.CastProxy.prototype.playerProxyGet_ = function(name) {\n  if (name == 'addEventListener') {\n    return this.playerEventTarget_.addEventListener.bind(\n        this.playerEventTarget_);\n  }\n  if (name == 'removeEventListener') {\n    return this.playerEventTarget_.removeEventListener.bind(\n        this.playerEventTarget_);\n  }\n\n  if (name == 'getMediaElement') {\n    return function() { return this.videoProxy_; }.bind(this);\n  }\n\n  if (name == 'getSharedConfiguration') {\n    shaka.log.warning(\n        'Can\\'t share configuration across a network. Returning copy.');\n    return this.sender_ ?\n           this.sender_.get('player', 'getConfiguration') :\n           this.localPlayer_.getConfiguration();\n  }\n\n  if (name == 'getNetworkingEngine') {\n    // Always returns a local instance, in case you need to make a request.\n    // Issues a warning, in case you think you are making a remote request\n    // or affecting remote filters.\n    if (this.sender_ && this.sender_.isCasting()) {\n      shaka.log.warning('NOTE: getNetworkingEngine() is always local!');\n    }\n    return this.localPlayer_.getNetworkingEngine.bind(this.localPlayer_);\n  }\n\n  if (this.sender_ && this.sender_.isCasting()) {\n    // These methods are unavailable or otherwise stubbed during casting.\n    if (name == 'getManifest' || name == 'drmInfo') {\n      return function() {\n        shaka.log.alwaysWarn(name + '() does not work while casting!');\n        return null;\n      };\n    }\n\n    if (name == 'getManifestUri') {\n      shaka.Deprecate.deprecateFeature(\n          2, 6,\n          'getManifestUri',\n          'Please use \"getAssetUri\" instead.');\n\n      return this.playerProxyGet_('getAssetUri');\n    }\n\n    if (name == 'attach' || name == 'detach') {\n      return function() {\n        shaka.log.alwaysWarn(name + '() does not work while casting!');\n        return Promise.resolve();\n      };\n    }\n  }  // if (this.sender_.isCasting())\n\n  // If we are casting, but the first update has not come in yet, use local\n  // getters, but not local methods.\n  if (this.sender_ && this.sender_.isCasting() &&\n      !this.sender_.hasRemoteProperties()) {\n    if (shaka.cast.CastUtils.PlayerGetterMethods[name]) {\n      let value = /** @type {Object} */(this.localPlayer_)[name];\n      goog.asserts.assert(typeof value == 'function', 'only methods on Player');\n      return value.bind(this.localPlayer_);\n    }\n  }\n\n  // Use local getters and methods if we are not casting.\n  if (!this.sender_ || !this.sender_.isCasting()) {\n    let value = /** @type {Object} */(this.localPlayer_)[name];\n    goog.asserts.assert(typeof value == 'function', 'only methods on Player');\n    return value.bind(this.localPlayer_);\n  }\n\n  return this.sender_.get('player', name);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastProxy.prototype.playerProxyLocalEvent_ = function(event) {\n  if (this.sender_ && this.sender_.isCasting()) {\n    // Ignore any unexpected local events while casting.\n    return;\n  }\n\n  this.playerEventTarget_.dispatchEvent(event);\n};\n\n\n/**\n * @param {string} targetName\n * @param {!shaka.util.FakeEvent} event\n * @private\n */\nshaka.cast.CastProxy.prototype.onRemoteEvent_ = function(targetName, event) {\n  goog.asserts.assert(this.sender_ && this.sender_.isCasting(),\n                      'Should only receive remote events while casting');\n  if (!this.sender_.isCasting()) {\n    // Ignore any unexpected remote events.\n    return;\n  }\n\n  if (targetName == 'video') {\n    this.videoEventTarget_.dispatchEvent(event);\n  } else if (targetName == 'player') {\n    this.playerEventTarget_.dispatchEvent(event);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.deprecate.Enforcer');\n\ngoog.require('shaka.deprecate.Version');\n\n\n/**\n * The enforcer's job is to call the correct callback when a feature will need\n * to be removed later or removed now.\n *\n * The \"what should be done\" is not part of the enforcer, that must be provided\n * to the enforcer when it is created. This separation was created so that\n * testing and production could be equal users of the enforcer.\n *\n * @final\n */\nshaka.deprecate.Enforcer = class {\n  /**\n   * @param {!shaka.deprecate.Version} libraryVersion\n   * @param {shaka.deprecate.Listener} onPending\n   * @param {shaka.deprecate.Listener} onExpired\n   */\n  constructor(libraryVersion, onPending, onExpired) {\n    /** @private {!shaka.deprecate.Version} */\n    this.libraryVersion_ = libraryVersion;\n\n    /** @private {shaka.deprecate.Listener} */\n    this.onPending_ = onPending;\n    /** @private {shaka.deprecate.Listener} */\n    this.onExpired_ = onExpired;\n  }\n\n  /**\n   * Tell the enforcer that a feature will expire on |expiredOn| and that it\n   * should notify the listeners if it is pending or expired.\n   *\n   * @param {!shaka.deprecate.Version} expiresOn\n   * @param {string} name\n   * @param {string} description\n   */\n  enforce(expiresOn, name, description) {\n    // If the expiration version is larger than the library version\n    // (compareTo > 0), it means the expiration is in the future, and is still\n    // pending.\n    const isPending = expiresOn.compareTo(this.libraryVersion_) > 0;\n\n    // Find the right callback (pending or expired) for this enforcement request\n    // call it to handle this features pending/expired removal.\n    const callback = isPending ? this.onPending_ : this.onExpired_;\n    callback(this.libraryVersion_, expiresOn, name, description);\n  }\n};\n\n/**\n * A callback for listening to deprecation events.\n *\n * Parameters:\n *  libraryVersion: !shaka.deprecate.Version\n *  featureVersion: !shaka.deprecate.Version\n *  name: string\n *  description: string\n *\n * libraryVersion: The current version of the library.\n * featureVersion: The version of the library when the feature should be\n *                 removed.\n * name: The name of the feature that will/should be removed.\n * description: A description of what is changing.\n *\n * @typedef {function(\n *    !shaka.deprecate.Version,\n *    !shaka.deprecate.Version,\n *    string,\n *    string)}\n */\nshaka.deprecate.Listener;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastUtils');\n\ngoog.require('shaka.util.FakeEvent');\n\n\n/**\n * @namespace shaka.cast.CastUtils\n * @summary A set of cast utility functions and variables shared between sender\n *   and receiver.\n */\n\n\n/**\n * HTMLMediaElement events that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoEvents = [\n  'ended',\n  'play',\n  'playing',\n  'pause',\n  'pausing',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'timeupdate',\n  'volumechange',\n];\n\n\n/**\n * HTMLMediaElement attributes that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoAttributes = [\n  'buffered',\n  'currentTime',\n  'duration',\n  'ended',\n  'loop',\n  'muted',\n  'paused',\n  'playbackRate',\n  'seeking',\n  'videoHeight',\n  'videoWidth',\n  'volume',\n];\n\n\n/**\n * HTMLMediaElement attributes that are transferred when casting begins.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoInitStateAttributes = [\n  'loop',\n  'playbackRate',\n];\n\n\n/**\n * HTMLMediaElement methods with no return value that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoVoidMethods = [\n  'pause',\n  'play',\n];\n\n\n/**\n * Player events that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerEvents = [\n  'abrstatuschanged',\n  'adaptation',\n  'buffering',\n  'emsg',\n  'error',\n  'loading',\n  'streaming',\n  'texttrackvisibility',\n  'timelineregionadded',\n  'timelineregionenter',\n  'timelineregionexit',\n  'trackschanged',\n  'unloading',\n  'variantchanged',\n  'textchanged',\n];\n\n\n/**\n * Player getter methods that are proxied while casting.\n * The key is the method, the value is the frequency of updates.\n * Frequency 1 translates to every update; frequency 2 to every 2 updates, etc.\n * @const {!Object.<string, number>}\n */\nshaka.cast.CastUtils.PlayerGetterMethods = {\n  // NOTE: The 'drmInfo' property is not proxied, as it is very large.\n  'getAssetUri': 2,\n  'getAudioLanguages': 2,\n  'getAudioLanguagesAndRoles': 2,\n  'getBufferedInfo': 2,\n  // NOTE: The 'getSharedConfiguration' property is not proxied as it would\n  //       not be possible to share a reference.\n  'getConfiguration': 2,\n  'getExpiration': 2,\n  // NOTE: The 'getManifest' property is not proxied, as it is very large.\n  // TODO(vaage): Remove |getManifestUri| references in v2.6.\n  // NOTE: The 'getManifestUri' property is not proxied, as CastProxy has a\n  // handler for it.\n  // NOTE: The 'getManifestParserFactory' property is not proxied, as it would\n  // not serialize.\n  'getPlaybackRate': 2,\n  'getTextLanguages': 2,\n  'getTextLanguagesAndRoles': 2,\n  'getTextTracks': 2,\n  'getStats': 5,\n  'getVariantTracks': 2,\n  'isAudioOnly': 10,\n  'isBuffering': 1,\n  'isInProgress': 1,\n  'isLive': 10,\n  'isTextTrackVisible': 1,\n  'keySystem': 10,\n  'seekRange': 1,\n  'usingEmbeddedTextTrack': 2,\n  'getLoadMode': 10,\n};\n\n\n/**\n * Player getter methods that are proxied while casting, but only when casting\n * a livestream.\n * The key is the method, the value is the frequency of updates.\n * Frequency 1 translates to every update; frequency 2 to every 2 updates, etc.\n * @const {!Object.<string, number>}\n */\nshaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive = {\n  'getPlayheadTimeAsDate': 1,\n  'getPresentationStartTimeAsDate': 20,\n};\n\n\n/**\n * Player getter and setter methods that are used to transfer state when casting\n * begins.\n * @const {!Array.<!Array.<string>>}\n */\nshaka.cast.CastUtils.PlayerInitState = [\n  ['getConfiguration', 'configure'],\n];\n\n\n/**\n * Player getter and setter methods that are used to transfer state after\n * load() is resolved.\n * @const {!Array.<!Array.<string>>}\n */\nshaka.cast.CastUtils.PlayerInitAfterLoadState = [\n  ['isTextTrackVisible', 'setTextTrackVisibility'],\n];\n\n\n/**\n * Player methods with no return value that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerVoidMethods = [\n  'addTextTrack',\n  'cancelTrickPlay',\n  'configure',\n  'resetConfiguration',\n  'retryStreaming',\n  'selectAudioLanguage',\n  'selectEmbeddedTextTrack',\n  'selectTextLanguage',\n  'selectTextTrack',\n  'selectVariantTrack',\n  'setTextTrackVisibility',\n  'trickPlay',\n];\n\n\n/**\n * Player methods returning a Promise that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerPromiseMethods = [\n  'attach',\n  'detach',\n  // The manifestFactory parameter of load is not supported.\n  'load',\n  'unload',\n];\n\n\n/**\n * @typedef {{\n *   video: Object,\n *   player: Object,\n *   manifest: ?string,\n *   startTime: ?number\n * }}\n * @property {Object} video\n *   Dictionary of video properties to be set.\n * @property {Object} player\n *   Dictionary of player setters to be called.\n * @property {?string} manifest\n *   The currently-selected manifest, if present.\n * @property {?number} startTime\n *   The playback start time, if currently playing.\n */\nshaka.cast.CastUtils.InitStateType;\n\n\n/**\n * The namespace for Shaka messages on the cast bus.\n * @const {string}\n */\nshaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE = 'urn:x-cast:com.google.shaka.v2';\n\n\n/**\n * The namespace for generic messages on the cast bus.\n * @const {string}\n */\nshaka.cast.CastUtils.GENERIC_MESSAGE_NAMESPACE =\n    'urn:x-cast:com.google.cast.media';\n\n\n/**\n * Serialize as JSON, but specially encode things JSON will not otherwise\n * represent.\n * @param {?} thing\n * @return {string}\n */\nshaka.cast.CastUtils.serialize = function(thing) {\n  return JSON.stringify(thing, function(key, value) {\n    if (typeof value == 'function') {\n      // Functions can't be (safely) serialized.\n      return undefined;\n    }\n\n    if (value instanceof Event || value instanceof shaka.util.FakeEvent) {\n      // Events don't serialize to JSON well because of the DOM objects\n      // and other complex objects they contain, so we strip these out.\n      // Note that using Object.keys or JSON.stringify directly on the event\n      // will not capture its properties.  We must use a for loop.\n      let simpleEvent = {};\n      for (let eventKey in value) {\n        let eventValue = value[eventKey];\n        if (eventValue && typeof eventValue == 'object') {\n          if (eventKey == 'detail') {\n            // Keep the detail value, because it contains important information\n            // for diagnosing errors.\n            simpleEvent[eventKey] = eventValue;\n          }\n          // Strip out non-null object types because they are complex and we\n          // don't need them.\n        } else if (eventKey in Event) {\n          // Strip out keys that are found on Event itself because they are\n          // class-level constants we don't need, like Event.MOUSEMOVE == 16.\n        } else {\n          simpleEvent[eventKey] = eventValue;\n        }\n      }\n      return simpleEvent;\n    }\n\n    if (value instanceof TimeRanges) {\n      // TimeRanges must be unpacked into plain data for serialization.\n      return shaka.cast.CastUtils.unpackTimeRanges_(value);\n    }\n\n    if (value instanceof Uint8Array) {\n      // Some of our code cares about Uint8Arrays actually being Uint8Arrays,\n      // so this gives them special treatment.\n      return shaka.cast.CastUtils.unpackUint8Array_(value);\n    }\n\n    if (typeof value == 'number') {\n      // NaN and infinity cannot be represented directly in JSON.\n      if (isNaN(value)) return 'NaN';\n      if (isFinite(value)) return value;\n      if (value < 0) return '-Infinity';\n      return 'Infinity';\n    }\n\n    return value;\n  });\n};\n\n\n/**\n * Deserialize JSON using our special encodings.\n * @param {string} str\n * @return {?}\n */\nshaka.cast.CastUtils.deserialize = function(str) {\n  return JSON.parse(str, function(key, value) {\n    if (value == 'NaN') {\n      return NaN;\n    } else if (value == '-Infinity') {\n      return -Infinity;\n    } else if (value == 'Infinity') {\n      return Infinity;\n    } else if (value && typeof value == 'object' &&\n               value['__type__'] == 'TimeRanges') {\n      // TimeRanges objects have been unpacked and sent as plain data.\n      // Simulate the original TimeRanges object.\n      return shaka.cast.CastUtils.simulateTimeRanges_(value);\n    } else if (value && typeof value == 'object' &&\n               value['__type__'] == 'Uint8Array') {\n      return shaka.cast.CastUtils.makeUint8Array_(value);\n    }\n    return value;\n  });\n};\n\n\n/**\n * @param {!TimeRanges} ranges\n * @return {Object}\n * @private\n */\nshaka.cast.CastUtils.unpackTimeRanges_ = function(ranges) {\n  let obj = {\n    '__type__': 'TimeRanges',  // a signal to deserialize\n    'length': ranges.length,\n    'start': [],\n    'end': [],\n  };\n\n  for (let i = 0; i < ranges.length; ++i) {\n    obj['start'].push(ranges.start(i));\n    obj['end'].push(ranges.end(i));\n  }\n\n  return obj;\n};\n\n\n/**\n * Creates a simulated TimeRanges object from data sent by the cast receiver.\n * @param {?} obj\n * @return {{\n *   length: number,\n *   start: function(number): number,\n *   end: function(number): number\n * }}\n * @private\n */\nshaka.cast.CastUtils.simulateTimeRanges_ = function(obj) {\n  return {\n    length: obj.length,\n    // NOTE: a more complete simulation would throw when |i| was out of range,\n    // but for simplicity we will assume a well-behaved application that uses\n    // length instead of catch to stop iterating.\n    start: function(i) { return obj.start[i]; },\n    end: function(i) { return obj.end[i]; },\n  };\n};\n\n\n/**\n * @param {!Uint8Array} array\n * @return {Object}\n * @private\n */\nshaka.cast.CastUtils.unpackUint8Array_ = function(array) {\n  return {\n    '__type__': 'Uint8Array',  // a signal to deserialize\n    'entries': Array.from(array),\n  };\n};\n\n\n/**\n * Creates a Uint8Array object from data sent by the cast receiver.\n * @param {?} obj\n * @return {Uint8Array}\n * @private\n */\nshaka.cast.CastUtils.makeUint8Array_ = function(obj) {\n  return new Uint8Array(obj['entries']);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastSender');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * @constructor\n * @struct\n * @param {string} receiverAppId The ID of the cast receiver application.\n * @param {function()} onStatusChanged A callback invoked when the cast status\n *   changes.\n * @param {function()} onFirstCastStateUpdate A callback invoked when an\n *   \"update\" event has been received for the first time.\n * @param {function(string, !shaka.util.FakeEvent)} onRemoteEvent A callback\n *   invoked with target name and event when a remote event is received.\n * @param {function()} onResumeLocal A callback invoked when the local player\n *   should resume playback.  Called before the cached remote state is wiped.\n * @param {function()} onInitStateRequired A callback to get local player's.\n *   state.  Invoked when casting is initiated from Chrome's cast button.\n * @implements {shaka.util.IDestroyable}\n */\nshaka.cast.CastSender =\n    function(receiverAppId, onStatusChanged, onFirstCastStateUpdate,\n             onRemoteEvent, onResumeLocal, onInitStateRequired) {\n  /** @private {string} */\n  this.receiverAppId_ = receiverAppId;\n\n  /** @private {shaka.util.Timer} */\n  this.statusChangeTimer_ = new shaka.util.Timer(onStatusChanged);\n\n  /** @private {?function()} */\n  this.onFirstCastStateUpdate_ = onFirstCastStateUpdate;\n\n  /** @private {boolean} */\n  this.hasJoinedExistingSession_ = false;\n\n  /** @private {?function(string, !shaka.util.FakeEvent)} */\n  this.onRemoteEvent_ = onRemoteEvent;\n\n  /** @private {?function()} */\n  this.onResumeLocal_ = onResumeLocal;\n\n  /** @private {?function()} */\n  this.onInitStateRequired_ = onInitStateRequired;\n\n  /** @private {boolean} */\n  this.apiReady_ = false;\n\n  /** @private {boolean} */\n  this.isCasting_ = false;\n\n  /** @private {string} */\n  this.receiverName_ = '';\n\n  /** @private {Object} */\n  this.appData_ = null;\n\n  /** @private {?function()} */\n  this.onConnectionStatusChangedBound_ =\n      this.onConnectionStatusChanged_.bind(this);\n\n  /** @private {?function(string, string)} */\n  this.onMessageReceivedBound_ = this.onMessageReceived_.bind(this);\n\n  /** @private {Object} */\n  this.cachedProperties_ = {\n    'video': {},\n    'player': {},\n  };\n\n  /** @private {number} */\n  this.nextAsyncCallId_ = 0;\n\n  /** @private {Object.<string, !shaka.util.PublicPromise>} */\n  this.asyncCallPromises_ = {};\n\n  /** @private {shaka.util.PublicPromise} */\n  this.castPromise_ = null;\n};\n\n\n/** @private {boolean} */\nshaka.cast.CastSender.hasReceivers_ = false;\n\n\n/** @private {chrome.cast.Session} */\nshaka.cast.CastSender.session_ = null;\n\n\n/** @override */\nshaka.cast.CastSender.prototype.destroy = function() {\n  this.rejectAllPromises_();\n  if (shaka.cast.CastSender.session_) {\n    this.removeListeners_();\n    // Don't leave the session, so that this session can be re-used later if\n    // necessary.\n  }\n\n  if (this.statusChangeTimer_) {\n    this.statusChangeTimer_.stop();\n    this.statusChangeTimer_ = null;\n  }\n\n  this.onRemoteEvent_ = null;\n  this.onResumeLocal_ = null;\n  this.apiReady_ = false;\n  this.isCasting_ = false;\n  this.appData_ = null;\n  this.cachedProperties_ = null;\n  this.asyncCallPromises_ = null;\n  this.castPromise_ = null;\n  this.onConnectionStatusChangedBound_ = null;\n  this.onMessageReceivedBound_ = null;\n\n  return Promise.resolve();\n};\n\n\n/**\n * @return {boolean} True if the cast API is available.\n */\nshaka.cast.CastSender.prototype.apiReady = function() {\n  return this.apiReady_;\n};\n\n\n/**\n * @return {boolean} True if there are receivers.\n */\nshaka.cast.CastSender.prototype.hasReceivers = function() {\n  return shaka.cast.CastSender.hasReceivers_;\n};\n\n\n/**\n * @return {boolean} True if we are currently casting.\n */\nshaka.cast.CastSender.prototype.isCasting = function() {\n  return this.isCasting_;\n};\n\n\n/**\n * @return {string} The name of the Cast receiver device, if isCasting().\n */\nshaka.cast.CastSender.prototype.receiverName = function() {\n  return this.receiverName_;\n};\n\n\n/**\n * @return {boolean} True if we have a cache of remote properties from the\n *   receiver.\n */\nshaka.cast.CastSender.prototype.hasRemoteProperties = function() {\n  return Object.keys(this.cachedProperties_['video']).length != 0;\n};\n\n\n/** Initialize the Cast API. */\nshaka.cast.CastSender.prototype.init = function() {\n  // Check for the cast extension.\n  if (!window.chrome || !chrome.cast || !chrome.cast.isAvailable) {\n    // Not available yet, so wait to be notified if/when it is available.\n    window.__onGCastApiAvailable = (function(loaded) {\n      if (loaded) {\n        this.init();\n      }\n    }).bind(this);\n    return;\n  }\n\n  // The API is now available.\n  delete window.__onGCastApiAvailable;\n  this.apiReady_ = true;\n  this.statusChangeTimer_.tickNow();\n\n  let sessionRequest = new chrome.cast.SessionRequest(this.receiverAppId_);\n  let apiConfig = new chrome.cast.ApiConfig(sessionRequest,\n      this.onExistingSessionJoined_.bind(this),\n      this.onReceiverStatusChanged_.bind(this),\n      'origin_scoped');\n\n  // TODO: Have never seen this fail.  When would it and how should we react?\n  chrome.cast.initialize(apiConfig,\n      function() { shaka.log.debug('CastSender: init'); },\n      function(error) { shaka.log.error('CastSender: init error', error); });\n  if (shaka.cast.CastSender.hasReceivers_) {\n    // Fire a fake cast status change, to simulate the update that\n    // would be fired normally.\n    // This is after a brief delay, to give users a chance to add event\n    // listeners.\n    this.statusChangeTimer_.tickAfter(/* seconds= */ 0.02);\n  }\n\n  let oldSession = shaka.cast.CastSender.session_;\n  if (oldSession && oldSession.status != chrome.cast.SessionStatus.STOPPED) {\n    // The old session still exists, so re-use it.\n    shaka.log.debug('CastSender: re-using existing connection');\n    this.onExistingSessionJoined_(oldSession);\n  } else {\n    // The session has been canceled in the meantime, so ignore it.\n    shaka.cast.CastSender.session_ = null;\n  }\n};\n\n\n/**\n * Set application-specific data.\n *\n * @param {Object} appData Application-specific data to relay to the receiver.\n */\nshaka.cast.CastSender.prototype.setAppData = function(appData) {\n  this.appData_ = appData;\n  if (this.isCasting_) {\n    this.sendMessage_({\n      'type': 'appData',\n      'appData': this.appData_,\n    });\n  }\n};\n\n\n/**\n * @param {shaka.cast.CastUtils.InitStateType} initState Video and player state\n *   to be sent to the receiver.\n * @return {!Promise} Resolved when connected to a receiver.  Rejected if the\n *   connection fails or is canceled by the user.\n */\nshaka.cast.CastSender.prototype.cast = function(initState) {\n  if (!this.apiReady_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.CAST_API_UNAVAILABLE));\n  }\n  if (!shaka.cast.CastSender.hasReceivers_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.NO_CAST_RECEIVERS));\n  }\n  if (this.isCasting_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.ALREADY_CASTING));\n  }\n\n  this.castPromise_ = new shaka.util.PublicPromise();\n  chrome.cast.requestSession(\n      this.onSessionInitiated_.bind(this, initState),\n      this.onConnectionError_.bind(this));\n  return this.castPromise_;\n};\n\n\n/**\n * Shows user a cast dialog where they can choose to stop\n * casting.  Relies on Chrome to perform disconnect if they do.\n * Doesn't do anything if not connected.\n */\nshaka.cast.CastSender.prototype.showDisconnectDialog = function() {\n  if (!this.isCasting_) {\n    return;\n  }\n  let initState = this.onInitStateRequired_();\n\n  chrome.cast.requestSession(\n      this.onSessionInitiated_.bind(this, initState),\n      this.onConnectionError_.bind(this));\n};\n\n\n/**\n * Forces the receiver app to shut down by disconnecting.  Does nothing if not\n * connected.\n */\nshaka.cast.CastSender.prototype.forceDisconnect = function() {\n  if (!this.isCasting_) {\n    return;\n  }\n\n  this.rejectAllPromises_();\n  if (shaka.cast.CastSender.session_) {\n    this.removeListeners_();\n    shaka.cast.CastSender.session_.stop(function() {}, function() {});\n    shaka.cast.CastSender.session_ = null;\n  }\n};\n\n\n/**\n * Getter for properties of remote objects.\n * @param {string} targetName\n * @param {string} property\n * @return {?}\n */\nshaka.cast.CastSender.prototype.get = function(targetName, property) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  const CastUtils = shaka.cast.CastUtils;\n  if (targetName == 'video') {\n    if (CastUtils.VideoVoidMethods.includes(property)) {\n      return this.remoteCall_.bind(this, targetName, property);\n    }\n  } else if (targetName == 'player') {\n    if (CastUtils.PlayerGetterMethodsThatRequireLive[property]) {\n      let isLive = this.get('player', 'isLive')();\n      goog.asserts.assert(isLive,\n          property + ' should be called on a live stream!');\n      // If the property shouldn't exist, return a fake function so that the\n      // user doesn't call an undefined function and get a second error.\n      if (!isLive) {\n        return () => undefined;\n      }\n    }\n    if (CastUtils.PlayerVoidMethods.includes(property)) {\n      return this.remoteCall_.bind(this, targetName, property);\n    }\n    if (CastUtils.PlayerPromiseMethods.includes(property)) {\n      return this.remoteAsyncCall_.bind(this, targetName, property);\n    }\n    if (CastUtils.PlayerGetterMethods[property]) {\n      return this.propertyGetter_.bind(this, targetName, property);\n    }\n  }\n\n  return this.propertyGetter_(targetName, property);\n};\n\n\n/**\n * Setter for properties of remote objects.\n * @param {string} targetName\n * @param {string} property\n * @param {?} value\n */\nshaka.cast.CastSender.prototype.set = function(targetName, property, value) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n\n  this.cachedProperties_[targetName][property] = value;\n  this.sendMessage_({\n    'type': 'set',\n    'targetName': targetName,\n    'property': property,\n    'value': value,\n  });\n};\n\n\n/**\n * @param {shaka.cast.CastUtils.InitStateType} initState\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onSessionInitiated_ =\n    function(initState, session) {\n  shaka.log.debug('CastSender: onSessionInitiated');\n  this.onSessionCreated_(session);\n\n  this.sendMessage_({\n    'type': 'init',\n    'initState': initState,\n    'appData': this.appData_,\n  });\n\n  this.castPromise_.resolve();\n};\n\n\n/**\n * @param {chrome.cast.Error} error\n * @private\n */\nshaka.cast.CastSender.prototype.onConnectionError_ = function(error) {\n  // Default error code:\n  let code = shaka.util.Error.Code.UNEXPECTED_CAST_ERROR;\n\n  switch (error.code) {\n    case 'cancel':\n      code = shaka.util.Error.Code.CAST_CANCELED_BY_USER;\n      break;\n    case 'timeout':\n      code = shaka.util.Error.Code.CAST_CONNECTION_TIMED_OUT;\n      break;\n    case 'receiver_unavailable':\n      code = shaka.util.Error.Code.CAST_RECEIVER_APP_UNAVAILABLE;\n      break;\n  }\n\n  this.castPromise_.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.CAST,\n      code,\n      error));\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} property\n * @return {?}\n * @private\n */\nshaka.cast.CastSender.prototype.propertyGetter_ =\n    function(targetName, property) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  return this.cachedProperties_[targetName][property];\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} methodName\n * @param {...*} varArgs\n * @private\n */\nshaka.cast.CastSender.prototype.remoteCall_ =\n    function(targetName, methodName, ...varArgs) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  this.sendMessage_({\n    'type': 'call',\n    'targetName': targetName,\n    'methodName': methodName,\n    'args': varArgs,\n  });\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} methodName\n * @param {...*} varArgs\n * @return {!Promise}\n * @private\n */\nshaka.cast.CastSender.prototype.remoteAsyncCall_ =\n    function(targetName, methodName, ...varArgs) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n\n  let p = new shaka.util.PublicPromise();\n  let id = this.nextAsyncCallId_.toString();\n  this.nextAsyncCallId_++;\n  this.asyncCallPromises_[id] = p;\n\n  this.sendMessage_({\n    'type': 'asyncCall',\n    'targetName': targetName,\n    'methodName': methodName,\n    'args': varArgs,\n    'id': id,\n  });\n  return p;\n};\n\n\n/**\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onExistingSessionJoined_ = function(session) {\n  shaka.log.debug('CastSender: onExistingSessionJoined');\n\n  let initState = this.onInitStateRequired_();\n\n  this.castPromise_ = new shaka.util.PublicPromise();\n  this.hasJoinedExistingSession_ = true;\n\n  this.onSessionInitiated_(initState, session);\n};\n\n\n/**\n * @param {string} availability\n * @private\n */\nshaka.cast.CastSender.prototype.onReceiverStatusChanged_ =\n    function(availability) {\n  // The cast extension is telling us whether there are any cast receiver\n  // devices available.\n  shaka.log.debug('CastSender: receiver status', availability);\n  shaka.cast.CastSender.hasReceivers_ = availability == 'available';\n  this.statusChangeTimer_.tickNow();\n};\n\n\n/**\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onSessionCreated_ = function(session) {\n  shaka.cast.CastSender.session_ = session;\n  session.addUpdateListener(this.onConnectionStatusChangedBound_);\n  session.addMessageListener(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n      this.onMessageReceivedBound_);\n  this.onConnectionStatusChanged_();\n};\n\n\n/**\n * @private\n */\nshaka.cast.CastSender.prototype.removeListeners_ = function() {\n  let session = shaka.cast.CastSender.session_;\n  session.removeUpdateListener(this.onConnectionStatusChangedBound_);\n  session.removeMessageListener(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n      this.onMessageReceivedBound_);\n};\n\n\n/**\n * @private\n */\nshaka.cast.CastSender.prototype.onConnectionStatusChanged_ = function() {\n  let connected = shaka.cast.CastSender.session_ ?\n      shaka.cast.CastSender.session_.status == 'connected' :\n      false;\n  shaka.log.debug('CastSender: connection status', connected);\n  if (this.isCasting_ && !connected) {\n    // Tell CastProxy to transfer state back to local player.\n    this.onResumeLocal_();\n\n    // Clear whatever we have cached.\n    for (let targetName in this.cachedProperties_) {\n      this.cachedProperties_[targetName] = {};\n    }\n\n    this.rejectAllPromises_();\n  }\n\n  this.isCasting_ = connected;\n  this.receiverName_ = connected ?\n      shaka.cast.CastSender.session_.receiver.friendlyName :\n      '';\n  this.statusChangeTimer_.tickNow();\n};\n\n\n/**\n * Reject any async call promises that are still pending.\n * @private\n */\nshaka.cast.CastSender.prototype.rejectAllPromises_ = function() {\n  for (let id in this.asyncCallPromises_) {\n    let p = this.asyncCallPromises_[id];\n    delete this.asyncCallPromises_[id];\n\n    // Reject pending async operations as if they were interrupted.\n    // At the moment, load() is the only async operation we are worried about.\n    p.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.LOAD_INTERRUPTED));\n  }\n};\n\n\n/**\n * @param {string} namespace\n * @param {string} serialized\n * @private\n */\nshaka.cast.CastSender.prototype.onMessageReceived_ =\n    function(namespace, serialized) {\n  // Since this method is in the compiled library, make sure all messages passed\n  // in here were created with quoted property names.\n\n  let message = shaka.cast.CastUtils.deserialize(serialized);\n  shaka.log.v2('CastSender: message', message);\n\n  switch (message['type']) {\n    case 'event': {\n      let targetName = message['targetName'];\n      let event = message['event'];\n      let fakeEvent = new shaka.util.FakeEvent(event['type'], event);\n      this.onRemoteEvent_(targetName, fakeEvent);\n      break;\n    }\n    case 'update': {\n      let update = message['update'];\n      for (let targetName in update) {\n        let target = this.cachedProperties_[targetName] || {};\n        for (let property in update[targetName]) {\n          target[property] = update[targetName][property];\n        }\n      }\n      if (this.hasJoinedExistingSession_) {\n        this.onFirstCastStateUpdate_();\n        this.hasJoinedExistingSession_ = false;\n      }\n      break;\n    }\n    case 'asyncComplete': {\n      let id = message['id'];\n      let error = message['error'];\n      let p = this.asyncCallPromises_[id];\n      delete this.asyncCallPromises_[id];\n\n      goog.asserts.assert(p, 'Unexpected async id');\n      if (!p) break;\n\n      if (error) {\n        // This is a hacky way to reconstruct the serialized error.\n        let reconstructedError = new shaka.util.Error(\n            error.severity, error.category, error.code);\n        for (let k in error) {\n          (/** @type {Object} */(reconstructedError))[k] = error[k];\n        }\n        p.reject(reconstructedError);\n      } else {\n        p.resolve();\n      }\n      break;\n    }\n  }\n};\n\n\n/**\n * @param {!Object} message\n * @private\n */\nshaka.cast.CastSender.prototype.sendMessage_ = function(message) {\n  // Since this method is in the compiled library, make sure all messages passed\n  // in here were created with quoted property names.\n\n  let serialized = shaka.cast.CastUtils.serialize(message);\n  // TODO: have never seen this fail.  When would it and how should we react?\n  let session = shaka.cast.CastSender.session_;\n  session.sendMessage(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n                      serialized,\n                      function() {},  // success callback\n                      shaka.log.error);  // error callback\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastReceiver');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Platform');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * A receiver to communicate between the Chromecast-hosted player and the\n * sender application.\n *\n * @constructor\n * @struct\n * @param {!HTMLMediaElement} video The local video element associated with the\n *   local Player instance.\n * @param {!shaka.Player} player A local Player instance.\n * @param {function(Object)=} appDataCallback A callback to handle\n *   application-specific data passed from the sender.  This can come either\n *   from a Shaka-based sender through CastProxy.setAppData, or from a\n *   sender using the customData field of the LOAD message of the standard\n *   Cast message namespace.  It can also be null if no such data is sent.\n  * @param {function(string):string=} contentIdCallback A callback to\n *   retrieve manifest URI from the provided content id.\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.cast.CastReceiver =\n    function(video, player, appDataCallback, contentIdCallback) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {shaka.Player} */\n  this.player_ = player;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {Object} */\n  this.targets_ = {\n    'video': video,\n    'player': player,\n  };\n\n  /** @private {?function(Object)} */\n  this.appDataCallback_ = appDataCallback || function() {};\n\n  /** @private {?function(string):string} */\n  this.contentIdCallback_ = contentIdCallback ||\n                            /** @param {string} contentId\n                                @return {string} */\n                            function(contentId) { return contentId; };\n\n  /** @private {boolean} */\n  this.isConnected_ = false;\n\n  /** @private {boolean} */\n  this.isIdle_ = true;\n\n  /** @private {number} */\n  this.updateNumber_ = 0;\n\n  /** @private {boolean} */\n  this.startUpdatingUpdateNumber_ = false;\n\n  /** @private {boolean} */\n  this.initialStatusUpdatePending_ = true;\n\n  /** @private {cast.receiver.CastMessageBus} */\n  this.shakaBus_ = null;\n\n  /** @private {cast.receiver.CastMessageBus} */\n  this.genericBus_ = null;\n\n  /** @private {shaka.util.Timer} */\n  this.pollTimer_ = new shaka.util.Timer(() => {\n    this.pollAttributes_();\n  });\n\n  this.init_();\n};\ngoog.inherits(shaka.cast.CastReceiver, shaka.util.FakeEventTarget);\n\n\n/**\n * @return {boolean} True if the cast API is available and there are receivers.\n * @export\n */\nshaka.cast.CastReceiver.prototype.isConnected = function() {\n  return this.isConnected_;\n};\n\n\n/**\n * @return {boolean} True if the receiver is not currently doing loading or\n *   playing anything.\n * @export\n */\nshaka.cast.CastReceiver.prototype.isIdle = function() {\n  return this.isIdle_;\n};\n\n\n/**\n * Destroys the underlying Player, then terminates the cast receiver app.\n *\n * @override\n * @export\n */\nshaka.cast.CastReceiver.prototype.destroy = async function() {\n  if (this.eventManager_) {\n    this.eventManager_.release();\n    this.eventManager_ = null;\n  }\n\n  const waitFor = [];\n  if (this.player_) {\n    waitFor.push(this.player_.destroy());\n    this.player_ = null;\n  }\n\n  if (this.pollTimer_) {\n    this.pollTimer_.stop();\n    this.pollTimer_ = null;\n  }\n\n  this.video_ = null;\n  this.targets_ = null;\n  this.appDataCallback_ = null;\n  this.isConnected_ = false;\n  this.isIdle_ = true;\n  this.shakaBus_ = null;\n  this.genericBus_ = null;\n\n  await Promise.all(waitFor);\n\n  const manager = cast.receiver.CastReceiverManager.getInstance();\n  manager.stop();\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.init_ = function() {\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  manager.onSenderConnected = this.onSendersChanged_.bind(this);\n  manager.onSenderDisconnected = this.onSendersChanged_.bind(this);\n  manager.onSystemVolumeChanged = this.fakeVolumeChangeEvent_.bind(this);\n\n  this.genericBus_ = manager.getCastMessageBus(\n      shaka.cast.CastUtils.GENERIC_MESSAGE_NAMESPACE);\n  this.genericBus_.onMessage = this.onGenericMessage_.bind(this);\n\n  this.shakaBus_ = manager.getCastMessageBus(\n      shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE);\n  this.shakaBus_.onMessage = this.onShakaMessage_.bind(this);\n\n  if (goog.DEBUG) {\n    // Sometimes it is useful to load the receiver app in Chrome to work on the\n    // UI.  To avoid log spam caused by the SDK trying to connect to web sockets\n    // that don't exist, in uncompiled mode we check if the hosting browser is a\n    // Chromecast before starting the receiver manager.  We wouldn't do browser\n    // detection except for debugging, so only do this in uncompiled mode.\n    if (shaka.util.Platform.isChromecast()) {\n      manager.start();\n    }\n  } else {\n    manager.start();\n  }\n\n  shaka.cast.CastUtils.VideoEvents.forEach(function(name) {\n    this.eventManager_.listen(\n        this.video_, name, this.proxyEvent_.bind(this, 'video'));\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerEvents.forEach(function(name) {\n    this.eventManager_.listen(\n        this.player_, name, this.proxyEvent_.bind(this, 'player'));\n  }.bind(this));\n\n  // In our tests, the original Chromecast seems to have trouble decoding above\n  // 1080p.  It would be a waste to select a higher res anyway, given that the\n  // device only outputs 1080p to begin with.\n\n  // Chromecast has an extension to query the device/display's resolution.\n  if (cast.__platform__ && cast.__platform__.canDisplayType(\n      'video/mp4; codecs=\"avc1.640028\"; width=3840; height=2160')) {\n    // The device and display can both do 4k.  Assume a 4k limit.\n    this.player_.setMaxHardwareResolution(3840, 2160);\n  } else {\n    // Chromecast has always been able to do 1080p.  Assume a 1080p limit.\n    this.player_.setMaxHardwareResolution(1920, 1080);\n  }\n\n  // Do not start excluding values from update messages until the video is\n  // fully loaded.\n  this.eventManager_.listen(this.video_, 'loadeddata', function() {\n    this.startUpdatingUpdateNumber_ = true;\n  }.bind(this));\n\n  // Maintain idle state.\n  this.eventManager_.listen(this.player_, 'loading', function() {\n    // No longer idle once loading.  This allows us to show the spinner during\n    // the initial buffering phase.\n    this.isIdle_ = false;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'playing', function() {\n    // No longer idle once playing.  This allows us to replay a video without\n    // reloading.\n    this.isIdle_ = false;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'pause', function() {\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.player_, 'unloading', function() {\n    // Go idle when unloading content.\n    this.isIdle_ = true;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'ended', function() {\n    // Go idle 5 seconds after 'ended', assuming we haven't started again or\n    // been destroyed.\n    const timer = new shaka.util.Timer(() => {\n      if (this.video_ && this.video_.ended) {\n        this.isIdle_ = true;\n        this.onCastStatusChanged_();\n      }\n    });\n\n    timer.tickAfter(/* seconds= */ 5);\n  }.bind(this));\n\n  // Do not start polling until after the sender's 'init' message is handled.\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.onSendersChanged_ = function() {\n  // Reset update message frequency values, to make sure whomever joined\n  // will get a full update message.\n  this.updateNumber_ = 0;\n  // Don't reset startUpdatingUpdateNumber_, because this operation does not\n  // result in new data being loaded.\n  this.initialStatusUpdatePending_ = true;\n\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  this.isConnected_ = manager.getSenders().length != 0;\n  this.onCastStatusChanged_();\n};\n\n\n/**\n * Dispatch an event to notify the receiver app that the status has changed.\n * @private\n */\nshaka.cast.CastReceiver.prototype.onCastStatusChanged_ = function() {\n  // Do this asynchronously so that synchronous changes to idle state (such as\n  // Player calling unload() as part of load()) are coalesced before the event\n  // goes out.\n  Promise.resolve().then(function() {\n    if (!this.player_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    let event = new shaka.util.FakeEvent('caststatuschanged');\n    this.dispatchEvent(event);\n    // Send a media status message, with a media info message if appropriate.\n    if (!this.maybeSendMediaInfoMessage_()) {\n      this.sendMediaStatus_(0);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Take on initial state from the sender.\n * @param {shaka.cast.CastUtils.InitStateType} initState\n * @param {Object} appData\n * @private\n */\nshaka.cast.CastReceiver.prototype.initState_ = function(initState, appData) {\n  // Take on player state first.\n  for (let k in initState['player']) {\n    let v = initState['player'][k];\n    // All player state vars are setters to be called.\n    /** @type {Object} */(this.player_)[k](v);\n  }\n\n  // Now process custom app data, which may add additional player configs:\n  this.appDataCallback_(appData);\n\n  let manifestReady = Promise.resolve();\n  let autoplay = this.video_.autoplay;\n\n  // Now load the manifest, if present.\n  if (initState['manifest']) {\n    // Don't autoplay the content until we finish setting up initial state.\n    this.video_.autoplay = false;\n    manifestReady = this.player_.load(\n        initState['manifest'], initState['startTime']);\n  }\n\n  // Finally, take on video state and player's \"after load\" state.\n  manifestReady.then(() => {\n    if (!this.player_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    for (let k in initState['video']) {\n      let v = initState['video'][k];\n      this.video_[k] = v;\n    }\n\n    for (let k in initState['playerAfterLoad']) {\n      let v = initState['playerAfterLoad'][k];\n      // All player state vars are setters to be called.\n      /** @type {Object} */(this.player_)[k](v);\n    }\n\n    // Restore original autoplay setting.\n    this.video_.autoplay = autoplay;\n    if (initState['manifest']) {\n      // Resume playback with transferred state.\n      this.video_.play();\n      // Notify generic controllers of the state change.\n      this.sendMediaStatus_(0);\n    }\n  }, (error) => {\n    // Pass any errors through to the app.\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Wrong error type!');\n    let event = new shaka.util.FakeEvent('error', {'detail': error});\n    this.player_.dispatchEvent(event);\n  });\n};\n\n\n/**\n * @param {string} targetName\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.proxyEvent_ = function(targetName, event) {\n  if (!this.player_) {\n    // The receiver is destroyed, so it should ignore further events.\n    return;\n  }\n\n  // Poll and send an update right before we send the event.  Some events\n  // indicate an attribute change, so that change should be visible when the\n  // event is handled.\n  this.pollAttributes_();\n\n  this.sendMessage_({\n    'type': 'event',\n    'targetName': targetName,\n    'event': event,\n  }, this.shakaBus_);\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.pollAttributes_ = function() {\n  // The poll timer may have been pre-empted by an event (e.g. timeupdate).\n  // Calling |start| will cancel any pending calls and therefore will avoid us\n  // polling too often.\n  this.pollTimer_.tickAfter(/* seconds= */ 0.5);\n\n  let update = {\n    'video': {},\n    'player': {},\n  };\n\n  shaka.cast.CastUtils.VideoAttributes.forEach(function(name) {\n    update['video'][name] = this.video_[name];\n  }.bind(this));\n\n  // TODO: Instead of this variable frequency update system, instead cache the\n  // previous player state and only send over changed values, with complete\n  // updates every ~20 updates to account for dropped messages.\n\n  if (this.player_.isLive()) {\n    for (let name in shaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive) {\n      let frequency =\n          shaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive[name];\n      if (this.updateNumber_ % frequency == 0) {\n        update['player'][name] = /** @type {Object} */ (this.player_)[name]();\n      }\n    }\n  }\n  for (let name in shaka.cast.CastUtils.PlayerGetterMethods) {\n    let frequency = shaka.cast.CastUtils.PlayerGetterMethods[name];\n    if (this.updateNumber_ % frequency == 0) {\n      update['player'][name] = /** @type {Object} */ (this.player_)[name]();\n    }\n  }\n\n  // Volume attributes are tied to the system volume.\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  let systemVolume = manager.getSystemVolume();\n  if (systemVolume) {\n    update['video']['volume'] = systemVolume.level;\n    update['video']['muted'] = systemVolume.muted;\n  }\n\n  // Only start progressing the update number once data is loaded,\n  // just in case any of the \"rarely changing\" properties with less frequent\n  // update messages changes significantly during the loading process.\n  if (this.startUpdatingUpdateNumber_) {\n    this.updateNumber_ += 1;\n  }\n\n  this.sendMessage_({\n    'type': 'update',\n    'update': update,\n  }, this.shakaBus_);\n\n  this.maybeSendMediaInfoMessage_();\n};\n\n\n/**\n * Composes and sends a mediaStatus message if appropriate.\n * @return {boolean}\n * @private\n */\nshaka.cast.CastReceiver.prototype.maybeSendMediaInfoMessage_ = function() {\n  if (this.initialStatusUpdatePending_ &&\n      (this.video_.duration || this.player_.isLive())) {\n    // Send over a media status message to set the duration of the cast\n    // dialogue.\n    this.sendMediaInfoMessage_();\n    this.initialStatusUpdatePending_ = false;\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Composes and sends a mediaStatus message with a mediaInfo component.\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMediaInfoMessage_ = function() {\n  let media = {\n    'contentId': this.player_.getAssetUri(),\n    'streamType': this.player_.isLive() ? 'LIVE' : 'BUFFERED',\n    'duration': this.video_.duration,\n    // TODO: Is there a use case when this would be required?\n    // Sending an empty string for now since it's a mandatory\n    // field.\n    'contentType': '',\n  };\n  this.sendMediaStatus_(0, media);\n};\n\n\n/**\n * Dispatch a fake 'volumechange' event to mimic the video element, since volume\n * changes are routed to the system volume on the receiver.\n * @private\n */\nshaka.cast.CastReceiver.prototype.fakeVolumeChangeEvent_ = function() {\n  // Volume attributes are tied to the system volume.\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  let systemVolume = manager.getSystemVolume();\n  goog.asserts.assert(systemVolume, 'System volume should not be null!');\n\n  if (systemVolume) {\n    // Send an update message with just the latest volume level and muted state.\n    this.sendMessage_({\n      'type': 'update',\n      'update': {\n        'video': {\n          'volume': systemVolume.level,\n          'muted': systemVolume.muted,\n        },\n      },\n    }, this.shakaBus_);\n  }\n\n  // Send another message with a 'volumechange' event to update the sender's UI.\n  this.sendMessage_({\n    'type': 'event',\n    'targetName': 'video',\n    'event': {'type': 'volumechange'},\n  }, this.shakaBus_);\n};\n\n\n/**\n * Since this method is in the compiled library, make sure all messages are\n * read with quoted properties.\n * @param {!cast.receiver.CastMessageBus.Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.onShakaMessage_ = function(event) {\n  let message = shaka.cast.CastUtils.deserialize(event.data);\n  shaka.log.debug('CastReceiver: message', message);\n\n  switch (message['type']) {\n    case 'init':\n      // Reset update message frequency values after initialization.\n      this.updateNumber_ = 0;\n      this.startUpdatingUpdateNumber_ = false;\n      this.initialStatusUpdatePending_ = true;\n\n      this.initState_(message['initState'], message['appData']);\n      // The sender is supposed to reflect the cast system volume after\n      // connecting.  Using fakeVolumeChangeEvent_() would create a race on the\n      // sender side, since it would have volume properties, but no others.\n      // This would lead to hasRemoteProperties() being true, even though a\n      // complete set had never been sent.\n      // Now that we have init state, this is a good time for the first update\n      // message anyway.\n      this.pollAttributes_();\n      break;\n    case 'appData':\n      this.appDataCallback_(message['appData']);\n      break;\n    case 'set': {\n      let targetName = message['targetName'];\n      let property = message['property'];\n      let value = message['value'];\n\n      if (targetName == 'video') {\n        // Volume attributes must be rerouted to the system.\n        let manager = cast.receiver.CastReceiverManager.getInstance();\n        if (property == 'volume') {\n          manager.setSystemVolumeLevel(value);\n          break;\n        } else if (property == 'muted') {\n          manager.setSystemVolumeMuted(value);\n          break;\n        }\n      }\n\n      this.targets_[targetName][property] = value;\n      break;\n    }\n    case 'call': {\n      let targetName = message['targetName'];\n      let methodName = message['methodName'];\n      let args = message['args'];\n      let target = this.targets_[targetName];\n      target[methodName].apply(target, args);\n      break;\n    }\n    case 'asyncCall': {\n      let targetName = message['targetName'];\n      let methodName = message['methodName'];\n      if (targetName == 'player' && methodName == 'load') {\n        // Reset update message frequency values after a load.\n        this.updateNumber_ = 0;\n        this.startUpdatingUpdateNumber_ = false;\n      }\n      let args = message['args'];\n      let id = message['id'];\n      let senderId = event.senderId;\n      let target = this.targets_[targetName];\n      let p = target[methodName].apply(target, args);\n      if (targetName == 'player' && methodName == 'load') {\n        // Wait until the manifest has actually loaded to send another media\n        // info message, so on a new load it doesn't send the old info over.\n        p = p.then(function() {\n          this.initialStatusUpdatePending_ = true;\n        }.bind(this));\n      }\n      // Replies must go back to the specific sender who initiated, so that we\n      // don't have to deal with conflicting IDs between senders.\n      p.then(this.sendAsyncComplete_.bind(this, senderId, id, /* error */ null),\n             this.sendAsyncComplete_.bind(this, senderId, id));\n      break;\n    }\n  }\n};\n\n\n/**\n * @param {!cast.receiver.CastMessageBus.Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.onGenericMessage_ = function(event) {\n  let message = shaka.cast.CastUtils.deserialize(event.data);\n  shaka.log.debug('CastReceiver: message', message);\n  // TODO(ismena): error message on duplicate request id from the same sender\n  switch (message['type']) {\n    case 'PLAY':\n      this.video_.play();\n      // Notify generic controllers that the player state changed.\n      // requestId=0 (the parameter) means that the message was not\n      // triggered by a GET_STATUS request.\n      this.sendMediaStatus_(0);\n      break;\n    case 'PAUSE':\n      this.video_.pause();\n      this.sendMediaStatus_(0);\n      break;\n    case 'SEEK': {\n      let currentTime = message['currentTime'];\n      let resumeState = message['resumeState'];\n      if (currentTime != null) {\n        this.video_.currentTime = Number(currentTime);\n      }\n      if (resumeState && resumeState == 'PLAYBACK_START') {\n        this.video_.play();\n        this.sendMediaStatus_(0);\n      } else if (resumeState && resumeState == 'PLAYBACK_PAUSE') {\n        this.video_.pause();\n        this.sendMediaStatus_(0);\n      }\n      break;\n    }\n    case 'STOP':\n      this.player_.unload().then(function() {\n        if (!this.player_) {\n          // We've already been destroyed.\n          return;\n        }\n\n        this.sendMediaStatus_(0);\n      }.bind(this));\n      break;\n    case 'GET_STATUS':\n      // TODO(ismena): According to the SDK this is supposed to be a\n      // unicast message to the sender that requested the status,\n      // but it doesn't appear to be working.\n      // Look into what's going on there and change this to be a\n      // unicast.\n      this.sendMediaStatus_(Number(message['requestId']));\n      break;\n    case 'VOLUME': {\n      let volumeObject = message['volume'];\n      let level = volumeObject['level'];\n      let muted = volumeObject['muted'];\n      let oldVolumeLevel = this.video_.volume;\n      let oldVolumeMuted = this.video_.muted;\n      if (level != null) {\n        this.video_.volume = Number(level);\n      }\n      if (muted != null) {\n        this.video_.muted = muted;\n      }\n      // Notify generic controllers if the volume changed.\n      if (oldVolumeLevel != this.video_.volume ||\n          oldVolumeMuted != this.video_.muted) {\n        this.sendMediaStatus_(0);\n      }\n      break;\n    }\n    case 'LOAD': {\n      // Reset update message frequency values after a load.\n      this.updateNumber_ = 0;\n      this.startUpdatingUpdateNumber_ = false;\n      this.initialStatusUpdatePending_ = false; // This already sends an update.\n\n      let mediaInfo = message['media'];\n      let contentId = mediaInfo['contentId'];\n      let currentTime = message['currentTime'];\n      let assetUri = this.contentIdCallback_(contentId);\n      let autoplay = message['autoplay'] || true;\n      let customData = mediaInfo['customData'];\n\n      this.appDataCallback_(customData);\n\n      if (autoplay) {\n        this.video_.autoplay = true;\n      }\n      this.player_.load(assetUri, currentTime).then(function() {\n        if (!this.player_) {\n          // We've already been destroyed.\n          return;\n        }\n\n        // Notify generic controllers that the media has changed.\n        this.sendMediaInfoMessage_();\n      }.bind(this)).catch(function(error) {\n        // Load failed.  Dispatch the error message to the sender.\n        let type = 'LOAD_FAILED';\n        if (error.category == shaka.util.Error.Category.PLAYER &&\n            error.code == shaka.util.Error.Code.LOAD_INTERRUPTED) {\n          type = 'LOAD_CANCELLED';\n        }\n\n        this.sendMessage_({\n          'requestId': Number(message['requestId']),\n          'type': type,\n        }, this.genericBus_);\n      }.bind(this));\n      break;\n    }\n    default:\n      shaka.log.warning(\n          'Unrecognized message type from the generic Chromecast controller!',\n          message['type']);\n      // Dispatch an error to the sender.\n      this.sendMessage_({\n        'requestId': Number(message['requestId']),\n        'type': 'INVALID_REQUEST',\n        'reason': 'INVALID_COMMAND',\n      }, this.genericBus_);\n      break;\n  }\n};\n\n\n/**\n * Tell the sender that the async operation is complete.\n * @param {string} senderId\n * @param {string} id\n * @param {shaka.util.Error} error\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendAsyncComplete_ =\n    function(senderId, id, error) {\n  if (!this.player_) {\n    // We've already been destroyed.\n    return;\n  }\n\n  this.sendMessage_({\n    'type': 'asyncComplete',\n    'id': id,\n    'error': error,\n  }, this.shakaBus_, senderId);\n};\n\n\n/**\n * Since this method is in the compiled library, make sure all messages passed\n * in here were created with quoted property names.\n * @param {!Object} message\n * @param {cast.receiver.CastMessageBus} bus\n * @param {string=} senderId\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMessage_ =\n    function(message, bus, senderId) {\n  // Cuts log spam when debugging the receiver UI in Chrome.\n  if (!this.isConnected_) return;\n\n  let serialized = shaka.cast.CastUtils.serialize(message);\n  if (senderId) {\n    bus.getCastChannel(senderId).send(serialized);\n  } else {\n    bus.broadcast(serialized);\n  }\n};\n\n\n/**\n * @return {string}\n * @private\n */\nshaka.cast.CastReceiver.prototype.getPlayState_ = function() {\n  let playState = shaka.cast.CastReceiver.PLAY_STATE;\n  if (this.isIdle_) {\n    return playState.IDLE;\n  } else if (this.player_.isBuffering()) {\n    return playState.BUFFERING;\n  } else if (this.video_.paused) {\n    return playState.PAUSED;\n  } else {\n    return playState.PLAYING;\n  }\n};\n\n\n/**\n * @param {number} requestId\n * @param {Object=} media\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMediaStatus_ =\n    function(requestId, media) {\n  let mediaStatus = {\n    // mediaSessionId is a unique ID for the playback of this specific session.\n    // It's used to identify a specific instance of a playback.\n    // We don't support multiple playbacks, so just return 0.\n    'mediaSessionId': 0,\n    'playbackRate': this.video_.playbackRate,\n    'playerState': this.getPlayState_(),\n    'currentTime': this.video_.currentTime,\n    // supportedMediaCommands is a sum of all the flags of commands that the\n    // player supports.\n    // The list of comands with respective flags is:\n    // 1 - Pause\n    // 2 - Seek\n    // 4 - Stream volume\n    // 8 - Stream mute\n    // 16 - Skip forward\n    // 32 - Skip backward\n    // We support pause, seek, volume and mute which gives a value of\n    // 1+2+4+8=15\n    'supportedMediaCommands': 15,\n    'volume': {\n      'level': this.video_.volume,\n      'muted': this.video_.muted,\n    },\n  };\n\n  if (media) {\n    mediaStatus['media'] = media;\n  }\n\n  let ret = {\n    'requestId': requestId,\n    'type': 'MEDIA_STATUS',\n    'status': [mediaStatus],\n  };\n\n  this.sendMessage_(ret, this.genericBus_);\n};\n\n\n/**\n * @enum {string}\n */\nshaka.cast.CastReceiver.PLAY_STATE = {\n  IDLE: 'IDLE',\n  PLAYING: 'PLAYING',\n  BUFFERING: 'BUFFERING',\n  PAUSED: 'PAUSED',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.XmlUtils');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * @namespace shaka.util.XmlUtils\n * @summary A set of XML utility functions.\n */\n\n\n/**\n * Finds a child XML element.\n * @param {!Node} elem The parent XML element.\n * @param {string} name The child XML element's tag name.\n * @return {Element} The child XML element, or null if a child XML element does\n *   not exist with the given tag name OR if there exists more than one\n *   child XML element with the given tag name.\n */\nshaka.util.XmlUtils.findChild = function(elem, name) {\n  let children = shaka.util.XmlUtils.findChildren(elem, name);\n  if (children.length != 1) {\n    return null;\n  }\n  return children[0];\n};\n\n\n/**\n * Finds a namespace-qualified child XML element.\n * @param {!Node} elem The parent XML element.\n * @param {string} ns The child XML element's namespace URI.\n * @param {string} name The child XML element's local name.\n * @return {Element} The child XML element, or null if a child XML element does\n *   not exist with the given tag name OR if there exists more than one\n *   child XML element with the given tag name.\n */\nshaka.util.XmlUtils.findChildNS = function(elem, ns, name) {\n  let children = shaka.util.XmlUtils.findChildrenNS(elem, ns, name);\n  if (children.length != 1) {\n    return null;\n  }\n  return children[0];\n};\n\n\n/**\n * Finds child XML elements.\n * @param {!Node} elem The parent XML element.\n * @param {string} name The child XML element's tag name.\n * @return {!Array.<!Element>} The child XML elements.\n */\nshaka.util.XmlUtils.findChildren = function(elem, name) {\n  return Array.prototype.filter.call(elem.childNodes, function(child) {\n    return child instanceof Element && child.tagName == name;\n  });\n};\n\n\n/**\n * Finds namespace-qualified child XML elements.\n * @param {!Node} elem The parent XML element.\n * @param {string} ns The child XML element's namespace URI.\n * @param {string} name The child XML element's local name.\n * @return {!Array.<!Element>} The child XML elements.\n */\nshaka.util.XmlUtils.findChildrenNS = function(elem, ns, name) {\n  return Array.prototype.filter.call(elem.childNodes, function(child) {\n    return child instanceof Element && child.localName == name &&\n        child.namespaceURI == ns;\n  });\n};\n\n\n/**\n * Gets a namespace-qualified attribute.\n * @param {!Element} elem The element to get from.\n * @param {string} ns The namespace URI.\n * @param {string} name The local name of the attribute.\n * @return {?string} The attribute's value, or null if not present.\n */\nshaka.util.XmlUtils.getAttributeNS = function(elem, ns, name) {\n  // Some browsers return the empty string when the attribute is missing,\n  // so check if it exists first.  See: https://mzl.la/2L7F0UK\n  return elem.hasAttributeNS(ns, name) ? elem.getAttributeNS(ns, name) : null;\n};\n\n\n/**\n * Gets the text contents of a node.\n * @param {!Node} elem The XML element.\n * @return {?string} The text contents, or null if there are none.\n */\nshaka.util.XmlUtils.getContents = function(elem) {\n  let isText = (child) => {\n    return child.nodeType == Node.TEXT_NODE ||\n        child.nodeType == Node.CDATA_SECTION_NODE;\n  };\n  if (!Array.prototype.every.call(elem.childNodes, isText)) {\n    return null;\n  }\n\n  // Read merged text content from all text nodes.\n  return elem.textContent.trim();\n};\n\n\n/**\n * Parses an attribute by its name.\n * @param {!Element} elem The XML element.\n * @param {string} name The attribute name.\n * @param {function(string): (T|null)} parseFunction A function that parses\n *   the attribute.\n * @param {(T|null)=} defaultValue The attribute's default value, if not\n *   specified, the attibute's default value is null.\n * @return {(T|null)} The parsed attribute on success, or the attribute's\n *   default value if the attribute does not exist or could not be parsed.\n * @template T\n */\nshaka.util.XmlUtils.parseAttr = function(\n    elem, name, parseFunction, defaultValue = null) {\n  let parsedValue = null;\n\n  let value = elem.getAttribute(name);\n  if (value != null) {\n    parsedValue = parseFunction(value);\n  }\n  return parsedValue == null ? defaultValue : parsedValue;\n};\n\n\n/**\n * Parses an XML date string.\n * @param {string} dateString\n * @return {?number} The parsed date in seconds on success; otherwise, return\n *   null.\n */\nshaka.util.XmlUtils.parseDate = function(dateString) {\n  if (!dateString) {\n    return null;\n  }\n\n  // Times in the manifest should be in UTC.  If they don't specify a timezone,\n  // Date.parse() will use the local timezone instead of UTC.  So manually add\n  // the timezone if missing ('Z' indicates the UTC timezone).\n  // Format: YYYY-MM-DDThh:mm:ss.ssssss\n  if (/^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/.test(dateString)) {\n    dateString += 'Z';\n  }\n\n  let result = Date.parse(dateString);\n  return (!isNaN(result) ? Math.floor(result / 1000.0) : null);\n};\n\n\n/**\n * Parses an XML duration string.\n * Negative values are not supported. Years and months are treated as exactly\n * 365 and 30 days respectively.\n * @param {string} durationString The duration string, e.g., \"PT1H3M43.2S\",\n *   which means 1 hour, 3 minutes, and 43.2 seconds.\n * @return {?number} The parsed duration in seconds on success; otherwise,\n *   return null.\n * @see {@link http://www.datypic.com/sc/xsd/t-xsd_duration.html}\n */\nshaka.util.XmlUtils.parseDuration = function(durationString) {\n  if (!durationString) {\n    return null;\n  }\n\n  let re = '^P(?:([0-9]*)Y)?(?:([0-9]*)M)?(?:([0-9]*)D)?' +\n           '(?:T(?:([0-9]*)H)?(?:([0-9]*)M)?(?:([0-9.]*)S)?)?$';\n  let matches = new RegExp(re).exec(durationString);\n\n  if (!matches) {\n    shaka.log.warning('Invalid duration string:', durationString);\n    return null;\n  }\n\n  // Note: Number(null) == 0 but Number(undefined) == NaN.\n  let years = Number(matches[1] || null);\n  let months = Number(matches[2] || null);\n  let days = Number(matches[3] || null);\n  let hours = Number(matches[4] || null);\n  let minutes = Number(matches[5] || null);\n  let seconds = Number(matches[6] || null);\n\n  // Assume a year always has 365 days and a month always has 30 days.\n  let d = (60 * 60 * 24 * 365) * years +\n          (60 * 60 * 24 * 30) * months +\n          (60 * 60 * 24) * days +\n          (60 * 60) * hours +\n          60 * minutes +\n          seconds;\n  return isFinite(d) ? d : null;\n};\n\n\n/**\n * Parses a range string.\n * @param {string} rangeString The range string, e.g., \"101-9213\".\n * @return {?{start: number, end: number}} The parsed range on success;\n *   otherwise, return null.\n */\nshaka.util.XmlUtils.parseRange = function(rangeString) {\n  let matches = /([0-9]+)-([0-9]+)/.exec(rangeString);\n\n  if (!matches) {\n    return null;\n  }\n\n  let start = Number(matches[1]);\n  if (!isFinite(start)) {\n    return null;\n  }\n\n  let end = Number(matches[2]);\n  if (!isFinite(end)) {\n    return null;\n  }\n\n  return {start: start, end: end};\n};\n\n\n/**\n * Parses an integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed integer on success; otherwise, return null.\n */\nshaka.util.XmlUtils.parseInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) ? n : null;\n};\n\n\n/**\n * Parses a positive integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed positive integer on success; otherwise,\n *   return null.\n */\nshaka.util.XmlUtils.parsePositiveInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) && (n > 0) ? n : null;\n};\n\n\n/**\n * Parses a non-negative integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed non-negative integer on success; otherwise,\n *   return null.\n */\nshaka.util.XmlUtils.parseNonNegativeInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) && (n >= 0) ? n : null;\n};\n\n\n/**\n * Parses a floating point number.\n * @param {string} floatString The floating point number string.\n * @return {?number} The parsed floating point number on success; otherwise,\n *   return null. May return -Infinity or Infinity.\n */\nshaka.util.XmlUtils.parseFloat = function(floatString) {\n  let n = Number(floatString);\n  return !isNaN(n) ? n : null;\n};\n\n\n/**\n * Evaluate a division expressed as a string.\n * @param {string} exprString\n *   The expression to evaluate, e.g. \"200/2\". Can also be a single number.\n * @return {?number} The evaluated expression as floating point number on\n *   success; otherwise return null.\n */\nshaka.util.XmlUtils.evalDivision = function(exprString) {\n  let res;\n  let n;\n  if ((res = exprString.match(/^(\\d+)\\/(\\d+)$/))) {\n    n = Number(res[1]) / Number(res[2]);\n  } else {\n    n = Number(exprString);\n  }\n  return !isNaN(n) ? n : null;\n};\n\n\n/**\n * Parse a string and return the resulting root element if\n * it was valid XML.\n * @param {string} xmlString\n * @param {string} expectedRootElemName\n * @return {Element|undefined}\n */\nshaka.util.XmlUtils.parseXmlString = function(xmlString, expectedRootElemName) {\n  const parser = new DOMParser();\n  let rootElem;\n  let xml;\n  try {\n    xml = parser.parseFromString(xmlString, 'text/xml');\n  } catch (exception) {}\n  if (xml) {\n    // The top-level element in the loaded xml should have the\n    // same type as the element linking.\n    if (xml.documentElement.tagName == expectedRootElemName) {\n      rootElem = xml.documentElement;\n    }\n  }\n  if (rootElem && rootElem.getElementsByTagName('parsererror').length > 0) {\n    return null;\n  }  // It had a parser error in it.\n\n  return rootElem;\n};\n\n\n/**\n * Parse some UTF8 data and return the resulting root element if\n * it was valid XML.\n * @param {ArrayBuffer} data\n * @param {string} expectedRootElemName\n * @return {Element|undefined}\n */\nshaka.util.XmlUtils.parseXml = function(data, expectedRootElemName) {\n  try {\n    const string = shaka.util.StringUtils.fromUTF8(data);\n    return shaka.util.XmlUtils.parseXmlString(string, expectedRootElemName);\n  } catch (exception) {}\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.ContentProtection');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.ContentProtection\n * @summary A set of functions for parsing and interpreting ContentProtection\n *   elements.\n */\n\n\n/**\n * @typedef {{\n *   defaultKeyId: ?string,\n *   defaultInit: Array.<shaka.extern.InitDataOverride>,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   firstRepresentation: boolean\n * }}\n *\n * @description\n * Contains information about the ContentProtection elements found at the\n * AdaptationSet level.\n *\n * @property {?string} defaultKeyId\n *   The default key ID to use.  This is used by parseKeyIds as a default.  This\n *   can be null to indicate that there is no default.\n * @property {Array.<shaka.extern.InitDataOverride>} defaultInit\n *   The default init data override.  This can be null to indicate that there\n *   is no default.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   The DrmInfo objects.\n * @property {boolean} firstRepresentation\n *   True when first parsed; changed to false after the first call to\n *   parseKeyIds.  This is used to determine if a dummy key-system should be\n *   overwritten; namely that the first representation can replace the dummy\n *   from the AdaptationSet.\n */\nshaka.dash.ContentProtection.Context;\n\n\n/**\n * @typedef {{\n *   node: !Element,\n *   schemeUri: string,\n *   keyId: ?string,\n *   init: Array.<shaka.extern.InitDataOverride>\n * }}\n *\n * @description\n * The parsed result of a single ContentProtection element.\n *\n * @property {!Element} node\n *   The ContentProtection XML element.\n * @property {string} schemeUri\n *   The scheme URI.\n * @property {?string} keyId\n *   The default key ID, if present.\n * @property {Array.<shaka.extern.InitDataOverride>} init\n *   The init data, if present.  If there is no init data, it will be null.  If\n *   this is non-null, there is at least one element.\n */\nshaka.dash.ContentProtection.Element;\n\n\n/**\n * A map of scheme URI to key system name.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.dash.ContentProtection.defaultKeySystems_ = new Map()\n    .set('urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b',\n         'org.w3.clearkey')\n    .set('urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n         'com.widevine.alpha')\n    .set('urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n         'com.microsoft.playready')\n    .set('urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb',\n         'com.adobe.primetime');\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.ContentProtection.MP4Protection_ =\n    'urn:mpeg:dash:mp4protection:2011';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.ContentProtection.CencNamespaceUri_ = 'urn:mpeg:cenc:2013';\n\n\n/**\n * Parses info from the ContentProtection elements at the AdaptationSet level.\n *\n * @param {!Array.<!Element>} elems\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {boolean} ignoreDrmInfo\n * @return {shaka.dash.ContentProtection.Context}\n */\nshaka.dash.ContentProtection.parseFromAdaptationSet = function(\n    elems, callback, ignoreDrmInfo) {\n  const ContentProtection = shaka.dash.ContentProtection;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  let parsed = ContentProtection.parseElements_(elems);\n  /** @type {Array.<shaka.extern.InitDataOverride>} */\n  let defaultInit = null;\n  /** @type {!Array.<shaka.extern.DrmInfo>} */\n  let drmInfos = [];\n  let parsedNonCenc = [];\n\n  // Get the default key ID; if there are multiple, they must all match.\n  const keyIds = new Set(parsed.map((element) => element.keyId));\n  // Remove any possible null value (elements may have no key ids).\n  keyIds.delete(null);\n\n  if (keyIds.size > 1) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_CONFLICTING_KEY_IDS);\n  }\n\n  if (!ignoreDrmInfo) {\n    // Find the default key ID and init data.  Create a new array of all the\n    // non-CENC elements.\n    parsedNonCenc = parsed.filter(function(elem) {\n      if (elem.schemeUri == ContentProtection.MP4Protection_) {\n        goog.asserts.assert(!elem.init || elem.init.length,\n                            'Init data must be null or non-empty.');\n        defaultInit = elem.init || defaultInit;\n        return false;\n      } else {\n        return true;\n      }\n    });\n\n    if (parsedNonCenc.length) {\n      drmInfos = ContentProtection.convertElements_(\n          defaultInit, callback, parsedNonCenc);\n\n      // If there are no drmInfos after parsing, then add a dummy entry.\n      // This may be removed in parseKeyIds.\n      if (drmInfos.length == 0) {\n        drmInfos = [ManifestParserUtils.createDrmInfo('', defaultInit)];\n      }\n    }\n  }\n\n  // If there are only CENC element(s) or ignoreDrmInfo flag is set, assume all\n  // key-systems are supported.\n  if (parsed.length && (ignoreDrmInfo || !parsedNonCenc.length)) {\n    drmInfos = [];\n\n    const keySystems = ContentProtection.defaultKeySystems_;\n    for (const keySystem of keySystems.values()) {\n      // If the manifest doesn't specify any key systems, we shouldn't\n      // put clearkey in this list.  Otherwise, it may be triggered when\n      // a real key system should be used instead.\n      if (keySystem != 'org.w3.clearkey') {\n        const info = ManifestParserUtils.createDrmInfo(keySystem, defaultInit);\n        drmInfos.push(info);\n      }\n    }\n  }\n\n  // If we have a default key id, apply it to every initData.\n  const defaultKeyId = Array.from(keyIds)[0] || null;\n\n  if (defaultKeyId) {\n    for (const info of drmInfos) {\n      for (const initData of info.initData) {\n        initData.keyId = defaultKeyId;\n      }\n    }\n  }\n\n  return {\n    defaultKeyId: defaultKeyId,\n    defaultInit: defaultInit,\n    drmInfos: drmInfos,\n    firstRepresentation: true,\n  };\n};\n\n\n/**\n * Parses the given ContentProtection elements found at the Representation\n * level.  This may update the |context|.\n *\n * @param {!Array.<!Element>} elems\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {shaka.dash.ContentProtection.Context} context\n * @param {boolean} ignoreDrmInfo\n * @return {?string} The parsed key ID\n */\nshaka.dash.ContentProtection.parseFromRepresentation = function(\n    elems, callback, context, ignoreDrmInfo) {\n  const ContentProtection = shaka.dash.ContentProtection;\n  let repContext = ContentProtection.parseFromAdaptationSet(\n      elems, callback, ignoreDrmInfo);\n\n  if (context.firstRepresentation) {\n    let asUnknown = context.drmInfos.length == 1 &&\n        !context.drmInfos[0].keySystem;\n    let asUnencrypted = context.drmInfos.length == 0;\n    let repUnencrypted = repContext.drmInfos.length == 0;\n\n    // There are two cases where we need to replace the |drmInfos| in the\n    // context with those in the Representation:\n    //   1. The AdaptationSet does not list any ContentProtection.\n    //   2. The AdaptationSet only lists unknown key-systems.\n    if (asUnencrypted || (asUnknown && !repUnencrypted)) {\n      context.drmInfos = repContext.drmInfos;\n    }\n    context.firstRepresentation = false;\n  } else if (repContext.drmInfos.length > 0) {\n    // If this is not the first Representation, then we need to remove entries\n    // from the context that do not appear in this Representation.\n    context.drmInfos = context.drmInfos.filter(function(asInfo) {\n      return repContext.drmInfos.some(function(repInfo) {\n        return repInfo.keySystem == asInfo.keySystem;\n      });\n    });\n    // If we have filtered out all key-systems, throw an error.\n    if (context.drmInfos.length == 0) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_NO_COMMON_KEY_SYSTEM);\n    }\n  }\n\n  return repContext.defaultKeyId || context.defaultKeyId;\n};\n\n\n/**\n * Gets a Widevine license URL from a content protection element\n * containing a custom `ms:laurl` element\n *\n * @param {shaka.dash.ContentProtection.Element} element\n * @return {string}\n */\nshaka.dash.ContentProtection.getWidevineLicenseUrl = function(element) {\n  const mslaurlNode = shaka.util.XmlUtils.findChildNS(\n    element.node, 'urn:microsoft', 'laurl');\n  if (mslaurlNode) {\n    return mslaurlNode.getAttribute('licenseUrl') || '';\n  }\n  return '';\n};\n\n\n/**\n * @typedef {{\n *   type: number,\n *   value: !Uint8Array\n * }}\n *\n * @description\n * The parsed result of a PlayReady object record.\n *\n * @property {number} type\n *   Type of data stored in the record.\n * @property {!Uint8Array} value\n *   Record content.\n */\nshaka.dash.ContentProtection.PlayReadyRecord;\n\n/**\n * Enum for PlayReady record types.\n * @enum {number}\n */\nshaka.dash.ContentProtection.PLAYREADY_RECORD_TYPES = {\n  RIGHTS_MANAGEMENT: 0x001,\n  RESERVED: 0x002,\n  EMBEDDED_LICENSE: 0x003,\n};\n\n\n/**\n * Parses an Array buffer starting at byteOffset for PlayReady Object Records.\n * Each PRO Record is preceded by its PlayReady Record type and length in bytes.\n *\n * PlayReady Object Record format: https://goo.gl/FTcu46\n *\n * @param {!ArrayBuffer} recordData\n * @param {number} byteOffset\n * @return {!Array.<shaka.dash.ContentProtection.PlayReadyRecord>}\n * @private\n */\nshaka.dash.ContentProtection.parseMsProRecords_ = function(\n  recordData, byteOffset) {\n  const records = [];\n  const view = new DataView(recordData);\n\n  while (byteOffset < recordData.byteLength - 1) {\n    const type = view.getUint16(byteOffset, true);\n    byteOffset += 2;\n\n    const byteLength = view.getUint16(byteOffset, true);\n    byteOffset += 2;\n\n    goog.asserts.assert(\n      (byteLength & 1) === 0,\n      'expected byteLength to be an even number');\n\n    const recordValue = new Uint8Array(recordData, byteOffset, byteLength);\n\n    records.push({\n      type: type,\n      value: recordValue,\n    });\n\n    byteOffset += byteLength;\n  }\n\n  return records;\n};\n\n\n/**\n * Parses an ArrayBuffer for PlayReady Objects.  The data\n * should contain a 32-bit integer indicating the length of\n * the PRO in bytes.  Following that, a 16-bit integer for\n * the number of PlayReady Object Records in the PRO.  Lastly,\n * a byte array of the PRO Records themselves.\n *\n * PlayReady Object format: https://goo.gl/W8yAN4\n *\n * @param {!ArrayBuffer} data\n * @return {!Array.<shaka.dash.ContentProtection.PlayReadyRecord>}\n * @private\n */\nshaka.dash.ContentProtection.parseMsPro_ = function(data) {\n  let byteOffset = 0;\n  const view = new DataView(data);\n\n  // First 4 bytes is the PRO length (DWORD)\n  const byteLength = view.getUint32(byteOffset, true /* littleEndian */);\n  byteOffset += 4;\n\n  if (byteLength !== data.byteLength) {\n    // Malformed PRO\n    shaka.log.warning('PlayReady Object with invalid length encountered.');\n    return [];\n  }\n\n  // Skip PRO Record count (WORD)\n  byteOffset += 2;\n\n  // Rest of the data contains the PRO Records\n  const ContentProtection = shaka.dash.ContentProtection;\n  return ContentProtection.parseMsProRecords_(data, byteOffset);\n};\n\n\n/**\n * PlayReady Header format: https://goo.gl/dBzxNA\n *\n * @param {!Element} xml\n * @return {string}\n * @private\n */\nshaka.dash.ContentProtection.getLaurl_ = function(xml) {\n  // LA_URL element is optional and no more than one is\n  // allowed inside the DATA element. Only absolute URLs are allowed.\n  // If the LA_URL element exists, it must not be empty.\n  const laurlNode = xml.querySelector('DATA > LA_URL');\n  if (laurlNode) {\n    return laurlNode.textContent;\n  }\n\n  // Not found\n  return '';\n};\n\n\n/**\n * Gets a PlayReady license URL from a content protection element\n * containing a PlayReady Header Object\n *\n * @param {shaka.dash.ContentProtection.Element} element\n * @return {string}\n */\nshaka.dash.ContentProtection.getPlayReadyLicenseUrl = function(element) {\n  const proNode = shaka.util.XmlUtils.findChildNS(\n    element.node, 'urn:microsoft:playready', 'pro');\n\n  if (!proNode) {\n    return '';\n  }\n\n  const ContentProtection = shaka.dash.ContentProtection;\n  const PLAYREADY_RECORD_TYPES = ContentProtection.PLAYREADY_RECORD_TYPES;\n\n  const bytes = shaka.util.Uint8ArrayUtils.fromBase64(proNode.textContent);\n  const records = ContentProtection.parseMsPro_(bytes.buffer);\n  const record = records.filter((record) => {\n    return record.type === PLAYREADY_RECORD_TYPES.RIGHTS_MANAGEMENT;\n  })[0];\n\n  if (!record) {\n    return '';\n  }\n\n  const xml = shaka.util.StringUtils.fromUTF16(record.value, true);\n  const rootElement = shaka.util.XmlUtils.parseXmlString(xml, 'WRMHEADER');\n  if (!rootElement) {\n    return '';\n  }\n\n  return ContentProtection.getLaurl_(rootElement);\n};\n\n\n/**\n * Creates DrmInfo objects from the given element.\n *\n * @param {Array.<shaka.extern.InitDataOverride>} defaultInit\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {!Array.<shaka.dash.ContentProtection.Element>} elements\n * @return {!Array.<shaka.extern.DrmInfo>}\n * @private\n */\nshaka.dash.ContentProtection.convertElements_ = function(\n  defaultInit, callback, elements) {\n  const ContentProtection = shaka.dash.ContentProtection;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const defaultKeySystems = ContentProtection.defaultKeySystems_;\n  const licenseUrlParsers = ContentProtection.licenseUrlParsers_;\n\n  /** @type {!Array.<shaka.extern.DrmInfo>} */\n  const out = [];\n\n  for (const element of elements) {\n    const keySystem = defaultKeySystems.get(element.schemeUri);\n    if (keySystem) {\n      goog.asserts.assert(\n          !element.init || element.init.length,\n          'Init data must be null or non-empty.');\n\n      const initData = element.init || defaultInit;\n      const info = ManifestParserUtils.createDrmInfo(keySystem, initData);\n      const licenseParser = licenseUrlParsers.get(keySystem);\n      if (licenseParser) {\n        info.licenseServerUri = licenseParser(element);\n      }\n\n      out.push(info);\n    } else {\n      goog.asserts.assert(callback, 'ContentProtection callback is required');\n      const infos = callback(element.node) || [];\n      for (const info of infos) {\n        out.push(info);\n      }\n    }\n  }\n\n  return out;\n};\n\n\n/**\n * A map of key system name to license server url parser.\n *\n * @const {!Map.<string, function(shaka.dash.ContentProtection.Element)>}\n * @private\n */\nshaka.dash.ContentProtection.licenseUrlParsers_ = new Map()\n    .set('com.widevine.alpha',\n         shaka.dash.ContentProtection.getWidevineLicenseUrl)\n    .set('com.microsoft.playready',\n         shaka.dash.ContentProtection.getPlayReadyLicenseUrl);\n\n\n/**\n * Parses the given ContentProtection elements.  If there is an error, it\n * removes those elements.\n *\n * @param {!Array.<!Element>} elems\n * @return {!Array.<shaka.dash.ContentProtection.Element>}\n * @private\n */\nshaka.dash.ContentProtection.parseElements_ = function(elems) {\n  /** @type {!Array.<shaka.dash.ContentProtection.Element>} */\n  const out = [];\n\n  for (const elem of elems) {\n    const parsed = shaka.dash.ContentProtection.parseElement_(elem);\n    if (parsed) {\n      out.push(parsed);\n    }\n  }\n\n  return out;\n};\n\n\n/**\n * Parses the given ContentProtection element.\n *\n * @param {!Element} elem\n * @return {?shaka.dash.ContentProtection.Element}\n * @private\n */\nshaka.dash.ContentProtection.parseElement_ = function(elem) {\n  const NS = shaka.dash.ContentProtection.CencNamespaceUri_;\n\n  /** @type {?string} */\n  let schemeUri = elem.getAttribute('schemeIdUri');\n  /** @type {?string} */\n  let keyId = shaka.util.XmlUtils.getAttributeNS(elem, NS, 'default_KID');\n  /** @type {!Array.<string>} */\n  const psshs = shaka.util.XmlUtils.findChildrenNS(elem, NS, 'pssh')\n                  .map(shaka.util.XmlUtils.getContents);\n\n  if (!schemeUri) {\n    shaka.log.error('Missing required schemeIdUri attribute on',\n                    'ContentProtection element', elem);\n    return null;\n  }\n\n  schemeUri = schemeUri.toLowerCase();\n  if (keyId) {\n    keyId = keyId.replace(/-/g, '').toLowerCase();\n    if (keyId.includes(' ')) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED);\n    }\n  }\n\n  /** @type {!Array.<shaka.extern.InitDataOverride>} */\n  let init = [];\n  try {\n    // Try parsing PSSH data.\n    init = psshs.map((pssh) => {\n      return {\n        initDataType: 'cenc',\n        initData: shaka.util.Uint8ArrayUtils.fromBase64(pssh),\n        keyId: null,\n      };\n    });\n  } catch (e) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_PSSH_BAD_ENCODING);\n  }\n\n  return {\n    node: elem,\n    schemeUri: schemeUri,\n    keyId: keyId,\n    init: (init.length > 0 ? init : null),\n  };\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.MpdUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.MpdUtils\n * @summary MPD processing utility functions.\n */\n\n\n/**\n * @typedef {{\n *   start: number,\n *   unscaledStart: number,\n *   end: number\n * }}\n *\n * @description\n * Defines a time range of a media segment.  Times are in seconds.\n *\n * @property {number} start\n *   The start time of the range.\n * @property {number} unscaledStart\n *   The start time of the range in representation timescale units.\n * @property {number} end\n *   The end time (exclusive) of the range.\n */\nshaka.dash.MpdUtils.TimeRange;\n\n\n/**\n * @typedef {{\n *   timescale: number,\n *   segmentDuration: ?number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   unscaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>\n * }}\n *\n * @description\n * Contains common information between SegmentList and SegmentTemplate items.\n *\n * @property {number} timescale\n *   The time-scale of the representation.\n * @property {?number} segmentDuration\n *   The duration of the segments in seconds, if given.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset of the representation, in seconds.\n * @property {number} unscaledPresentationTimeOffset\n *   The presentation time offset of the representation, in timescale units.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n */\nshaka.dash.MpdUtils.SegmentInfo;\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.MpdUtils.XlinkNamespaceUri_ = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * Fills a SegmentTemplate URI template.  This function does not validate the\n * resulting URI.\n *\n * @param {string} uriTemplate\n * @param {?string} representationId\n * @param {?number} number\n * @param {?number} bandwidth\n * @param {?number} time\n * @return {string} A URI string.\n * @see ISO/IEC 23009-1:2014 section 5.3.9.4.4\n */\nshaka.dash.MpdUtils.fillUriTemplate = function(\n    uriTemplate, representationId, number, bandwidth, time) {\n  /** @type {!Object.<string, ?number|?string>} */\n  let valueTable = {\n    'RepresentationID': representationId,\n    'Number': number,\n    'Bandwidth': bandwidth,\n    'Time': time,\n  };\n\n  const re =\n      /\\$(RepresentationID|Number|Bandwidth|Time)?(?:%0([0-9]+)([diouxX]))?\\$/g;\n  let uri = uriTemplate.replace(re, function(match, name, widthString, format) {\n    if (match == '$$') {\n      return '$';\n    }\n\n    let value = valueTable[name];\n    goog.asserts.assert(value !== undefined, 'Unrecognized identifier');\n\n    // Note that |value| may be 0 or ''.\n    if (value == null) {\n      shaka.log.warning(\n          'URL template does not have an available substitution for identifier',\n          '\"' + name + '\":',\n          uriTemplate);\n      return match;\n    }\n\n    if (name == 'RepresentationID' && widthString) {\n      shaka.log.warning(\n          'URL template should not contain a width specifier for identifier',\n          '\"RepresentationID\":',\n          uriTemplate);\n      widthString = undefined;\n    }\n\n    if (name == 'Time') {\n      goog.asserts.assert(Math.abs(value - Math.round(value)) < 0.2,\n                          'Calculated $Time$ values must be close to integers');\n      value = Math.round(value);\n    }\n\n    /** @type {string} */\n    let valueString;\n    switch (format) {\n      case undefined:  // Happens if there is no format specifier.\n      case 'd':\n      case 'i':\n      case 'u':\n        valueString = value.toString();\n        break;\n      case 'o':\n        valueString = value.toString(8);\n        break;\n      case 'x':\n        valueString = value.toString(16);\n        break;\n      case 'X':\n        valueString = value.toString(16).toUpperCase();\n        break;\n      default:\n        goog.asserts.assert(false, 'Unhandled format specifier');\n        valueString = value.toString();\n        break;\n    }\n\n    // Create a padding string.\n    let width = window.parseInt(widthString, 10) || 1;\n    let paddingSize = Math.max(0, width - valueString.length);\n    let padding = (new Array(paddingSize + 1)).join('0');\n\n    return padding + valueString;\n  });\n\n  return uri;\n};\n\n\n/**\n * Expands a SegmentTimeline into an array-based timeline.  The results are in\n * seconds.\n *\n * @param {!Element} segmentTimeline\n * @param {number} timescale\n * @param {number} unscaledPresentationTimeOffset\n * @param {number} periodDuration The Period's duration in seconds.\n *   Infinity indicates that the Period continues indefinitely.\n * @return {!Array.<shaka.dash.MpdUtils.TimeRange>}\n */\nshaka.dash.MpdUtils.createTimeline =\n    function(segmentTimeline, timescale, unscaledPresentationTimeOffset,\n             periodDuration) {\n  goog.asserts.assert(\n      timescale > 0 && timescale < Infinity,\n      'timescale must be a positive, finite integer');\n  goog.asserts.assert(periodDuration > 0,\n                      'period duration must be a positive integer');\n\n  // Alias.\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let timePoints = XmlUtils.findChildren(segmentTimeline, 'S');\n\n  /** @type {!Array.<shaka.dash.MpdUtils.TimeRange>} */\n  let timeline = [];\n  let lastEndTime = 0;\n\n  for (let i = 0; i < timePoints.length; ++i) {\n    let timePoint = timePoints[i];\n    let t = XmlUtils.parseAttr(timePoint, 't', XmlUtils.parseNonNegativeInt);\n    let d = XmlUtils.parseAttr(timePoint, 'd', XmlUtils.parseNonNegativeInt);\n    let r = XmlUtils.parseAttr(timePoint, 'r', XmlUtils.parseInt);\n\n    // Adjust the start time to account for the presentation time offset.\n    if (t != null) {\n      t -= unscaledPresentationTimeOffset;\n    }\n\n    if (!d) {\n      shaka.log.warning(\n          '\"S\" element must have a duration:',\n          'ignoring the remaining \"S\" elements.',\n          timePoint);\n      return timeline;\n    }\n\n    let startTime = t != null ? t : lastEndTime;\n\n    let repeat = r || 0;\n    if (repeat < 0) {\n      if (i + 1 < timePoints.length) {\n        let nextTimePoint = timePoints[i + 1];\n        let nextStartTime = XmlUtils.parseAttr(\n            nextTimePoint, 't', XmlUtils.parseNonNegativeInt);\n        if (nextStartTime == null) {\n          shaka.log.warning(\n              'An \"S\" element cannot have a negative repeat',\n              'if the next \"S\" element does not have a valid start time:',\n              'ignoring the remaining \"S\" elements.',\n              timePoint);\n          return timeline;\n        } else if (startTime >= nextStartTime) {\n          shaka.log.warning(\n              'An \"S\" element cannot have a negative repeat',\n              'if its start time exceeds the next \"S\" element\\'s start time:',\n              'ignoring the remaining \"S\" elements.',\n              timePoint);\n          return timeline;\n        }\n        repeat = Math.ceil((nextStartTime - startTime) / d) - 1;\n      } else {\n        if (periodDuration == Infinity) {\n          // The DASH spec. actually allows the last \"S\" element to have a\n          // negative repeat value even when the Period has an infinite\n          // duration.  No one uses this feature and no one ever should, ever.\n          shaka.log.warning(\n              'The last \"S\" element cannot have a negative repeat',\n              'if the Period has an infinite duration:',\n              'ignoring the last \"S\" element.',\n              timePoint);\n          return timeline;\n        } else if (startTime / timescale >= periodDuration) {\n          shaka.log.warning(\n              'The last \"S\" element cannot have a negative repeat',\n              'if its start time exceeds the Period\\'s duration:',\n              'igoring the last \"S\" element.',\n              timePoint);\n          return timeline;\n        }\n        repeat = Math.ceil((periodDuration * timescale - startTime) / d) - 1;\n      }\n    }\n\n    // The end of the last segment may be before the start of the current\n    // segment (a gap) or after the start of the current segment (an overlap).\n    // If there is a gap/overlap then stretch/compress the end of the last\n    // segment to the start of the current segment.\n    //\n    // Note: it is possible to move the start of the current segment to the\n    // end of the last segment, but this would complicate the computation of\n    // the $Time$ placeholder later on.\n    if ((timeline.length > 0) && (startTime != lastEndTime)) {\n      let delta = startTime - lastEndTime;\n\n      if (Math.abs(delta / timescale) >=\n          shaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS) {\n        shaka.log.warning(\n            'SegmentTimeline contains a large gap/overlap:',\n            'the content may have errors in it.',\n            timePoint);\n      }\n\n      timeline[timeline.length - 1].end = startTime / timescale;\n    }\n\n    for (let j = 0; j <= repeat; ++j) {\n      let endTime = startTime + d;\n      let item = {\n        start: startTime / timescale,\n        end: endTime / timescale,\n        unscaledStart: startTime,\n      };\n      timeline.push(item);\n\n      startTime = endTime;\n      lastEndTime = endTime;\n    }\n  }\n\n  return timeline;\n};\n\n\n/**\n * Parses common segment info for SegmentList and SegmentTemplate.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the element that contains the segment info.\n * @return {shaka.dash.MpdUtils.SegmentInfo}\n */\nshaka.dash.MpdUtils.parseSegmentInfo = function(context, callback) {\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type.');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let timescaleStr = MpdUtils.inheritAttribute(context, callback, 'timescale');\n  let timescale = 1;\n  if (timescaleStr) {\n    timescale = XmlUtils.parsePositiveInt(timescaleStr) || 1;\n  }\n\n  let durationStr = MpdUtils.inheritAttribute(context, callback, 'duration');\n  let segmentDuration = XmlUtils.parsePositiveInt(durationStr || '');\n  if (segmentDuration) {\n    segmentDuration /= timescale;\n  }\n\n  let startNumberStr =\n      MpdUtils.inheritAttribute(context, callback, 'startNumber');\n  let unscaledPresentationTimeOffset =\n      Number(MpdUtils.inheritAttribute(context, callback,\n                                       'presentationTimeOffset')) || 0;\n  let startNumber = XmlUtils.parseNonNegativeInt(startNumberStr || '');\n  if (startNumberStr == null || startNumber == null) {\n    startNumber = 1;\n  }\n\n  let timelineNode =\n      MpdUtils.inheritChild(context, callback, 'SegmentTimeline');\n  /** @type {Array.<shaka.dash.MpdUtils.TimeRange>} */\n  let timeline = null;\n  if (timelineNode) {\n    timeline = MpdUtils.createTimeline(\n        timelineNode, timescale, unscaledPresentationTimeOffset,\n        context.periodInfo.duration || Infinity);\n  }\n\n  let scaledPresentationTimeOffset =\n      (unscaledPresentationTimeOffset / timescale) || 0;\n  return {\n    timescale: timescale,\n    segmentDuration: segmentDuration,\n    startNumber: startNumber,\n    scaledPresentationTimeOffset: scaledPresentationTimeOffset,\n    unscaledPresentationTimeOffset: unscaledPresentationTimeOffset,\n    timeline: timeline,\n  };\n};\n\n\n/**\n * Searches the inheritance for a Segment* with the given attribute.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the Element that contains the attribute to inherit.\n * @param {string} attribute\n * @return {?string}\n */\nshaka.dash.MpdUtils.inheritAttribute = function(context, callback, attribute) {\n  const Functional = shaka.util.Functional;\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type');\n\n  /** @type {!Array.<!Element>} */\n  let nodes = [\n    callback(context.representation),\n    callback(context.adaptationSet),\n    callback(context.period),\n  ].filter(Functional.isNotNull);\n\n  return nodes\n      .map(function(s) { return s.getAttribute(attribute); })\n      .reduce(function(all, part) { return all || part; });\n};\n\n\n/**\n * Searches the inheritance for a Segment* with the given child.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the Element that contains the child to inherit.\n * @param {string} child\n * @return {Element}\n */\nshaka.dash.MpdUtils.inheritChild = function(context, callback, child) {\n  const Functional = shaka.util.Functional;\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type');\n\n  /** @type {!Array.<!Element>} */\n  let nodes = [\n    callback(context.representation),\n    callback(context.adaptationSet),\n    callback(context.period),\n  ].filter(Functional.isNotNull);\n\n  const XmlUtils = shaka.util.XmlUtils;\n  return nodes\n      .map(function(s) { return XmlUtils.findChild(s, child); })\n      .reduce(function(all, part) { return all || part; });\n};\n\n\n/**\n * Follow the xlink link contained in the given element.\n * It also strips the xlink properties off of the element,\n * even if the process fails.\n *\n * @param {!Element} element\n * @param {!shaka.extern.RetryParameters} retryParameters\n * @param {boolean} failGracefully\n * @param {string} baseUri\n * @param {!shaka.net.NetworkingEngine} networkingEngine\n * @param {number} linkDepth\n * @return {!shaka.util.AbortableOperation.<!Element>}\n * @private\n */\nshaka.dash.MpdUtils.handleXlinkInElement_ =\n    function(element, retryParameters, failGracefully, baseUri,\n             networkingEngine, linkDepth) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const Error = shaka.util.Error;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const NS = MpdUtils.XlinkNamespaceUri_;\n\n  let xlinkHref = XmlUtils.getAttributeNS(element, NS, 'href');\n  let xlinkActuate =\n      XmlUtils.getAttributeNS(element, NS, 'actuate') || 'onRequest';\n\n  // Remove the xlink properties, so it won't download again\n  // when re-processed.\n  for (let i = 0; i < element.attributes.length; i++) {\n    let attribute = element.attributes[i];\n    if (attribute.namespaceURI == NS) {\n      element.removeAttributeNS(attribute.namespaceURI, attribute.localName);\n      i -= 1;\n    }\n  }\n\n  if (linkDepth >= 5) {\n    return shaka.util.AbortableOperation.failed(new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_XLINK_DEPTH_LIMIT));\n  }\n\n  if (xlinkActuate != 'onLoad') {\n    // Only xlink:actuate=\"onLoad\" is supported.\n    // When no value is specified, the assumed value is \"onRequest\".\n    return shaka.util.AbortableOperation.failed(new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_UNSUPPORTED_XLINK_ACTUATE));\n  }\n\n  // Resolve the xlink href, in case it's a relative URL.\n  let uris = ManifestParserUtils.resolveUris([baseUri], [xlinkHref]);\n\n  // Load in the linked elements.\n  const requestType = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      uris, retryParameters);\n\n  let requestOperation = networkingEngine.request(requestType, request);\n  // The interface is abstract, but we know it was implemented with the\n  // more capable internal class.\n  goog.asserts.assert(requestOperation instanceof shaka.util.AbortableOperation,\n                      'Unexpected implementation of IAbortableOperation!');\n  // Satisfy the compiler with a cast.\n  let networkOperation =\n      /** @type {!shaka.util.AbortableOperation.<shaka.extern.Response>} */(\n          requestOperation);\n\n  // Chain onto that operation.\n  return networkOperation.chain((response) => {\n    // This only supports the case where the loaded xml has a single\n    // top-level element.  If there are multiple roots, it will be rejected.\n    let rootElem = shaka.util.XmlUtils.parseXml(response.data, element.tagName);\n    if (!rootElem) {\n      // It was not valid XML.\n      return shaka.util.AbortableOperation.failed(new Error(\n          Error.Severity.CRITICAL, Error.Category.MANIFEST,\n          Error.Code.DASH_INVALID_XML, xlinkHref));\n    }\n\n    // Now that there is no other possibility of the process erroring,\n    // the element can be changed further.\n\n    // Remove the current contents of the node.\n    while (element.childNodes.length) {\n      element.removeChild(element.childNodes[0]);\n    }\n\n    // Move the children of the loaded xml into the current element.\n    while (rootElem.childNodes.length) {\n      let child = rootElem.childNodes[0];\n      rootElem.removeChild(child);\n      element.appendChild(child);\n    }\n\n    // Move the attributes of the loaded xml into the current element.\n    for (let i = 0; i < rootElem.attributes.length; i++) {\n      let attribute = rootElem.attributes[i].nodeName;\n      let attributeValue = rootElem.getAttribute(attribute);\n      element.setAttribute(attribute, attributeValue);\n    }\n\n    return shaka.dash.MpdUtils.processXlinks(\n        element, retryParameters, failGracefully, uris[0], networkingEngine,\n        linkDepth + 1);\n  });\n};\n\n\n/**\n * Filter the contents of a node recursively, replacing xlink links\n * with their associated online data.\n *\n * @param {!Element} element\n * @param {!shaka.extern.RetryParameters} retryParameters\n * @param {boolean} failGracefully\n * @param {string} baseUri\n * @param {!shaka.net.NetworkingEngine} networkingEngine\n * @param {number=} linkDepth, default set to 0\n * @return {!shaka.util.AbortableOperation.<!Element>}\n */\nshaka.dash.MpdUtils.processXlinks =\n    function(element, retryParameters, failGracefully, baseUri,\n             networkingEngine, linkDepth = 0) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const NS = MpdUtils.XlinkNamespaceUri_;\n\n  if (XmlUtils.getAttributeNS(element, NS, 'href')) {\n    let handled = MpdUtils.handleXlinkInElement_(\n        element, retryParameters, failGracefully, baseUri,\n        networkingEngine, linkDepth);\n    if (failGracefully) {\n      // Catch any error and go on.\n      handled = handled.chain(undefined, (error) => {\n        // handleXlinkInElement_ strips the xlink properties off of the element\n        // even if it fails, so calling processXlinks again will handle whatever\n        // contents the element natively has.\n        return MpdUtils.processXlinks(element, retryParameters, failGracefully,\n                                      baseUri, networkingEngine,\n                                      linkDepth);\n      });\n    }\n    return handled;\n  }\n\n  let childOperations = [];\n  for (let i = 0; i < element.childNodes.length; i++) {\n    let child = element.childNodes[i];\n    if (child instanceof Element) {\n      const resolveToZeroString = 'urn:mpeg:dash:resolve-to-zero:2013';\n      if (XmlUtils.getAttributeNS(child, NS, 'href') == resolveToZeroString) {\n        // This is a 'resolve to zero' code; it means the element should\n        // be removed, as specified by the mpeg-dash rules for xlink.\n        element.removeChild(child);\n        i -= 1;\n      } else if (child.tagName != 'SegmentTimeline') {\n        // Don't recurse into a SegmentTimeline since xlink attributes aren't\n        // valid in there and looking at each segment can take a long time with\n        // larger manifests.\n\n        // Replace the child with its processed form.\n        childOperations.push(shaka.dash.MpdUtils.processXlinks(\n            /** @type {!Element} */ (child), retryParameters, failGracefully,\n            baseUri, networkingEngine, linkDepth));\n      }\n    }\n  }\n\n  return shaka.util.AbortableOperation.all(childOperations).chain(() => {\n    return element;\n  });\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.InitSegmentReference');\ngoog.provide('shaka.media.SegmentReference');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Creates an InitSegmentReference, which provides the location to an\n * initialization segment.\n *\n * @param {function():!Array.<string>} uris A function that creates the URIs of\n *   the resource containing the segment.\n * @param {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @param {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive.  A value of null indicates that the segment\n *   extends to the end of the resource.\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.InitSegmentReference = function(uris, startByte, endByte) {\n  /** @type {function():!Array.<string>} */\n  this.getUris = uris;\n\n  /** @const {number} */\n  this.startByte = startByte;\n\n  /** @const {?number} */\n  this.endByte = endByte;\n};\n\n\n/**\n * Creates the URIs of the resource containing the segment.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.createUris = function() {\n  return this.getUris();\n};\n\n\n/**\n * Returns the offset from the start of the resource to the\n * start of the segment.\n *\n * @return {number}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.getStartByte = function() {\n  return this.startByte;\n};\n\n\n/**\n * Returns the offset from the start of the resource to the end of the segment,\n * inclusive.  A value of null indicates that the segment extends to the end of\n * the resource.\n *\n * @return {?number}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.getEndByte = function() {\n  return this.endByte;\n};\n\n\n/**\n * Returns the size of the init segment.\n * @return {?number}\n */\nshaka.media.InitSegmentReference.prototype.getSize = function() {\n  if (this.endByte) {\n    return this.endByte - this.startByte;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Creates a SegmentReference, which provides the start time, end time, and\n * location to a media segment.\n *\n * @param {number} position The segment's position within a particular Period.\n *   The following should hold true between any two SegmentReferences from the\n *   same Period, r1 and r2:\n *   IF r2.position > r1.position THEN\n *     [ (r2.startTime > r1.startTime) OR\n *       (r2.startTime == r1.startTime AND r2.endTime >= r1.endTime) ]\n * @param {number} startTime The segment's start time in seconds, relative to\n *   the start of a particular Period.\n * @param {number} endTime The segment's end time in seconds, relative to\n *   the start of a particular Period.  The segment ends the instant before\n *   this time, so |endTime| must be strictly greater than |startTime|.\n * @param {function():!Array.<string>} uris\n *   A function that creates the URIs of the resource containing the segment.\n * @param {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @param {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive.  A value of null indicates that the segment\n *   extends to the end of the resource.\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.SegmentReference = function(\n    position, startTime, endTime, uris, startByte, endByte) {\n  goog.asserts.assert(startTime < endTime,\n                      'startTime must be less than endTime');\n  goog.asserts.assert((startByte < endByte) || (endByte == null),\n                      'startByte must be < endByte');\n  /** @const {number} */\n  this.position = position;\n\n  /** @type {number} */\n  this.startTime = startTime;\n\n  /** @type {number} */\n  this.endTime = endTime;\n\n  /** @type {function():!Array.<string>} */\n  this.getUris = uris;\n\n  /** @const {number} */\n  this.startByte = startByte;\n\n  /** @const {?number} */\n  this.endByte = endByte;\n};\n\n\n/**\n * Returns the segment's position within a particular Period.\n *\n * @return {number} The segment's position.\n * @export\n */\nshaka.media.SegmentReference.prototype.getPosition = function() {\n  return this.position;\n};\n\n\n/**\n * Returns the segment's start time in seconds, relative to\n * the start of a particular Period.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getStartTime = function() {\n  return this.startTime;\n};\n\n\n/**\n * Returns the segment's end time in seconds, relative to\n * the start of a particular Period.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getEndTime = function() {\n  return this.endTime;\n};\n\n\n/**\n * Creates the URIs of the resource containing the segment.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.media.SegmentReference.prototype.createUris = function() {\n  return this.getUris();\n};\n\n\n/**\n * Returns the offset from the start of the resource to the\n * start of the segment.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getStartByte = function() {\n  return this.startByte;\n};\n\n\n/**\n * Returns the offset from the start of the resource to the end of the segment,\n * inclusive.  A value of null indicates that the segment extends to the end of\n * the resource.\n *\n * @return {?number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getEndByte = function() {\n  return this.endByte;\n};\n\n\n/**\n * Returns the size of the segment.\n * @return {?number}\n */\nshaka.media.SegmentReference.prototype.getSize = function() {\n  if (this.endByte) {\n    return this.endByte - this.startByte;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * A convenient typedef for when either type of reference is acceptable.\n *\n * @typedef {shaka.media.InitSegmentReference|shaka.media.SegmentReference}\n */\nshaka.media.AnySegmentReference;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.DataViewReader');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * Creates a DataViewReader, which abstracts a DataView object.\n *\n * @param {!DataView} dataView The DataView.\n * @param {shaka.util.DataViewReader.Endianness} endianness The endianness.\n *\n * @struct\n * @constructor\n * @export\n */\nshaka.util.DataViewReader = function(dataView, endianness) {\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n\n  /** @private {boolean} */\n  this.littleEndian_ =\n      endianness == shaka.util.DataViewReader.Endianness.LITTLE_ENDIAN;\n\n  /** @private {number} */\n  this.position_ = 0;\n};\n\n\n/**\n * Endianness.\n * @enum {number}\n * @export\n */\nshaka.util.DataViewReader.Endianness = {\n  BIG_ENDIAN: 0,\n  LITTLE_ENDIAN: 1,\n};\n\n\n/**\n * @return {boolean} True if the reader has more data, false otherwise.\n * @export\n */\nshaka.util.DataViewReader.prototype.hasMoreData = function() {\n  return this.position_ < this.dataView_.byteLength;\n};\n\n\n/**\n * Gets the current byte position.\n * @return {number}\n * @export\n */\nshaka.util.DataViewReader.prototype.getPosition = function() {\n  return this.position_;\n};\n\n\n/**\n * Gets the byte length of the DataView.\n * @return {number}\n * @export\n */\nshaka.util.DataViewReader.prototype.getLength = function() {\n  return this.dataView_.byteLength;\n};\n\n\n/**\n * Reads an unsigned 8 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint8 = function() {\n  try {\n    let value = this.dataView_.getUint8(this.position_);\n    this.position_ += 1;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 16 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint16 = function() {\n  try {\n    let value = this.dataView_.getUint16(this.position_, this.littleEndian_);\n    this.position_ += 2;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 32 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint32 = function() {\n  try {\n    let value = this.dataView_.getUint32(this.position_, this.littleEndian_);\n    this.position_ += 4;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads a signed 32 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readInt32 = function() {\n  try {\n    let value = this.dataView_.getInt32(this.position_, this.littleEndian_);\n    this.position_ += 4;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 64 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view or\n *   when reading an integer too large to store accurately in JavaScript.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint64 = function() {\n  /** @type {number} */\n  let low;\n  /** @type {number} */\n  let high;\n\n  try {\n    if (this.littleEndian_) {\n      low = this.dataView_.getUint32(this.position_, true);\n      high = this.dataView_.getUint32(this.position_ + 4, true);\n    } else {\n      high = this.dataView_.getUint32(this.position_, false);\n      low = this.dataView_.getUint32(this.position_ + 4, false);\n    }\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n\n  if (high > 0x1FFFFF) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  this.position_ += 8;\n\n  // NOTE: This is subtle, but in JavaScript you can't shift left by 32 and get\n  // the full range of 53-bit values possible.  You must multiply by 2^32.\n  return (high * Math.pow(2, 32)) + low;\n};\n\n\n/**\n * Reads the specified number of raw bytes.\n * @param {number} bytes The number of bytes to read.\n * @return {!Uint8Array}\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readBytes = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.readBytes');\n  if (this.position_ + bytes > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n\n  let value = new Uint8Array(\n      this.dataView_.buffer, this.dataView_.byteOffset + this.position_, bytes);\n  this.position_ += bytes;\n  return new Uint8Array(value);\n};\n\n\n/**\n * Skips the specified number of bytes.\n * @param {number} bytes The number of bytes to skip.\n * @throws {shaka.util.Error} when skipping past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.skip = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.skip');\n  if (this.position_ + bytes > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ += bytes;\n};\n\n\n/**\n * Rewinds the specified number of bytes.\n * @param {number} bytes The number of bytes to rewind.\n * @throws {shaka.util.Error} when rewinding past the beginning of the data\n *   view.\n * @export\n */\nshaka.util.DataViewReader.prototype.rewind = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.rewind');\n  if (this.position_ < bytes) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ -= bytes;\n};\n\n\n/**\n * Seeks to a specified position.\n * @param {number} position The desired byte position within the DataView.\n * @throws {shaka.util.Error} when seeking outside the range of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.seek = function(position) {\n  goog.asserts.assert(position >= 0, 'Bad call to DataViewReader.seek');\n  if (position < 0 || position > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ = position;\n};\n\n\n/**\n * Keeps reading until it reaches a byte that equals to zero.  The text is\n * assumed to be UTF-8.\n * @return {string}\n * @export\n */\nshaka.util.DataViewReader.prototype.readTerminatedString = function() {\n  let start = this.position_;\n  while (this.hasMoreData()) {\n    let value = this.dataView_.getUint8(this.position_);\n    if (value == 0) break;\n    this.position_ += 1;\n  }\n\n  let ret = new Uint8Array(\n      this.dataView_.buffer, this.dataView_.byteOffset + start,\n      this.position_ - start);\n  // Skip string termination.\n  this.position_ += 1;\n  return shaka.util.StringUtils.fromUTF8(ret);\n};\n\n\n/**\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.util.DataViewReader.prototype.throwOutOfBounds_ = function() {\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.BUFFER_READ_OUT_OF_BOUNDS);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.EbmlElement');\ngoog.provide('shaka.util.EbmlParser');\n\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Creates an Extensible Binary Markup Language (EBML) parser.\n * @param {!DataView} dataView The EBML data.\n * @constructor\n * @struct\n */\nshaka.util.EbmlParser = function(dataView) {\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n\n  /** @private {!shaka.util.DataViewReader} */\n  this.reader_ = new shaka.util.DataViewReader(\n      dataView,\n      shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  // If not already constructed, build a list of EBML dynamic size constants.\n  // This is not done at load-time to avoid exceptions on unsupported browsers.\n  if (!shaka.util.EbmlParser.DYNAMIC_SIZES) {\n    shaka.util.EbmlParser.DYNAMIC_SIZES = [\n      new Uint8Array([0xff]),\n      new Uint8Array([0x7f, 0xff]),\n      new Uint8Array([0x3f, 0xff, 0xff]),\n      new Uint8Array([0x1f, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x0f, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x07, 0xff, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]),\n    ];\n  }\n};\n\n\n/** @const {!Array.<!Uint8Array>} */\nshaka.util.EbmlParser.DYNAMIC_SIZES;\n\n\n/**\n * @return {boolean} True if the parser has more data, false otherwise.\n */\nshaka.util.EbmlParser.prototype.hasMoreData = function() {\n  return this.reader_.hasMoreData();\n};\n\n\n/**\n * Parses an EBML element from the parser's current position, and advances\n * the parser.\n * @return {!shaka.util.EbmlElement} The EBML element.\n * @throws {shaka.util.Error}\n * @see http://matroska.org/technical/specs/rfc/index.html\n */\nshaka.util.EbmlParser.prototype.parseElement = function() {\n  let id = this.parseId_();\n\n  // Parse the element's size.\n  let vint = this.parseVint_();\n  let size;\n  if (shaka.util.EbmlParser.isDynamicSizeValue_(vint)) {\n    // If this has an unknown size, assume that it takes up the rest of the\n    // data.\n    size = this.dataView_.byteLength - this.reader_.getPosition();\n  } else {\n    size = shaka.util.EbmlParser.getVintValue_(vint);\n  }\n\n  // Note that if the element's size is larger than the buffer then we are\n  // parsing a \"partial element\". This may occur if for example we are\n  // parsing the beginning of some WebM container data, but our buffer does\n  // not contain the entire WebM container data.\n  let elementSize =\n      this.reader_.getPosition() + size <= this.dataView_.byteLength ?\n      size :\n      this.dataView_.byteLength - this.reader_.getPosition();\n\n  let dataView = new DataView(\n      this.dataView_.buffer,\n      this.dataView_.byteOffset + this.reader_.getPosition(), elementSize);\n\n  this.reader_.skip(elementSize);\n\n  return new shaka.util.EbmlElement(id, dataView);\n};\n\n\n/**\n * Parses an EBML ID from the parser's current position, and advances the\n * parser.\n * @throws {shaka.util.Error}\n * @return {number} The EBML ID.\n * @private\n */\nshaka.util.EbmlParser.prototype.parseId_ = function() {\n  let vint = this.parseVint_();\n\n  if (vint.length > 7) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  let id = 0;\n  for (let i = 0; i < vint.length; i++) {\n    // Note that we cannot use << since |value| may exceed 32 bits.\n    id = (256 * id) + vint[i];\n  }\n\n  return id;\n};\n\n\n/**\n * Parses a variable sized integer from the parser's current position, and\n * advances the parser.\n * For example:\n *   1 byte  wide: 1xxx xxxx\n *   2 bytes wide: 01xx xxxx xxxx xxxx\n *   3 bytes wide: 001x xxxx xxxx xxxx xxxx xxxx\n * @throws {shaka.util.Error}\n * @return {!Uint8Array} The variable sized integer.\n * @private\n */\nshaka.util.EbmlParser.prototype.parseVint_ = function() {\n  let firstByte = this.reader_.readUint8();\n  let numBytes;\n\n  // Determine the byte width of the variable sized integer.\n  for (numBytes = 1; numBytes <= 8; numBytes++) {\n    let mask = 0x1 << (8 - numBytes);\n    if (firstByte & mask) {\n      break;\n    }\n  }\n\n  if (numBytes > 8) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  let vint = new Uint8Array(numBytes);\n  vint[0] = firstByte;\n\n  // Include the remaining bytes.\n  for (let i = 1; i < numBytes; i++) {\n    vint[i] = this.reader_.readUint8();\n  }\n\n  return vint;\n};\n\n\n/**\n * Gets the value of a variable sized integer.\n * For example, the x's below are part of the vint's value.\n *    7-bit value: 1xxx xxxx\n *   14-bit value: 01xx xxxx xxxx xxxx\n *   21-bit value: 001x xxxx xxxx xxxx xxxx xxxx\n * @param {!Uint8Array} vint The variable sized integer.\n * @throws {shaka.util.Error}\n * @return {number} The value of the variable sized integer.\n * @private\n */\nshaka.util.EbmlParser.getVintValue_ = function(vint) {\n  // If |vint| is 8 bytes wide then we must ensure that it does not have more\n  // than 53 meaningful bits. For example, assume |vint| is 8 bytes wide,\n  // so it has the following structure,\n  // 0000 0001 | xxxx xxxx ...\n  // Thus, the first 3 bits following the first byte of |vint| must be 0.\n  if ((vint.length == 8) && (vint[1] & 0xe0)) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  // Mask out the first few bits of |vint|'s first byte to get the most\n  // significant bits of |vint|'s value. If |vint| is 8 bytes wide then |value|\n  // will be set to 0.\n  let mask = 0x1 << (8 - vint.length);\n  let value = vint[0] & (mask - 1);\n\n  // Add the remaining bytes.\n  for (let i = 1; i < vint.length; i++) {\n    // Note that we cannot use << since |value| may exceed 32 bits.\n    value = (256 * value) + vint[i];\n  }\n\n  return value;\n};\n\n\n/**\n * Checks if the given variable sized integer represents a dynamic size value.\n * @param {!Uint8Array} vint The variable sized integer.\n * @return {boolean} true if |vint| represents a dynamic size value,\n *   false otherwise.\n * @private\n */\nshaka.util.EbmlParser.isDynamicSizeValue_ = function(vint) {\n  const EbmlParser = shaka.util.EbmlParser;\n  let uint8ArrayEqual = shaka.util.Uint8ArrayUtils.equal;\n\n  for (let i = 0; i < EbmlParser.DYNAMIC_SIZES.length; i++) {\n    if (uint8ArrayEqual(vint, EbmlParser.DYNAMIC_SIZES[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Creates an EbmlElement.\n * @param {number} id The ID.\n * @param {!DataView} dataView The DataView.\n * @constructor\n */\nshaka.util.EbmlElement = function(id, dataView) {\n  /** @type {number} */\n  this.id = id;\n\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n};\n\n\n/**\n * Gets the element's offset from the beginning of the buffer.\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getOffset = function() {\n  return this.dataView_.byteOffset;\n};\n\n\n/**\n * Interpret the element's data as a list of sub-elements.\n * @throws {shaka.util.Error}\n * @return {!shaka.util.EbmlParser} A parser over the sub-elements.\n */\nshaka.util.EbmlElement.prototype.createParser = function() {\n  return new shaka.util.EbmlParser(this.dataView_);\n};\n\n\n/**\n * Interpret the element's data as an unsigned integer.\n * @throws {shaka.util.Error}\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getUint = function() {\n  if (this.dataView_.byteLength > 8) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  // Ensure we have at most 53 meaningful bits.\n  if ((this.dataView_.byteLength == 8) && (this.dataView_.getUint8(0) & 0xe0)) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  let value = 0;\n\n  for (let i = 0; i < this.dataView_.byteLength; i++) {\n    let chunk = this.dataView_.getUint8(i);\n    value = (256 * value) + chunk;\n  }\n\n  return value;\n};\n\n\n/**\n * Interpret the element's data as a floating point number (32 bits or 64 bits).\n * 80-bit floating point numbers are not supported.\n * @throws {shaka.util.Error}\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getFloat = function() {\n  if (this.dataView_.byteLength == 4) {\n    return this.dataView_.getFloat32(0);\n  } else if (this.dataView_.byteLength == 8) {\n    return this.dataView_.getFloat64(0);\n  } else {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_BAD_FLOATING_POINT_SIZE);\n  }\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Mp4Parser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.DataViewReader');\n\n\n/**\n * Create a new MP4 Parser\n * @struct\n * @constructor\n * @export\n */\nshaka.util.Mp4Parser = function() {\n  /** @private {!Object.<number, shaka.util.Mp4Parser.BoxType_>} */\n  this.headers_ = [];\n\n  /** @private {!Object.<number, !shaka.util.Mp4Parser.CallbackType>} */\n  this.boxDefinitions_ = [];\n\n  /** @private {boolean} */\n  this.done_ = false;\n};\n\n\n/**\n * @typedef {function(!shaka.extern.ParsedBox)}\n * @exportInterface\n */\nshaka.util.Mp4Parser.CallbackType;\n\n\n/**\n * An enum used to track the type of box so that the correct values can be\n * read from the header.\n *\n * @enum {number}\n * @private\n */\nshaka.util.Mp4Parser.BoxType_ = {\n  BASIC_BOX: 0,\n  FULL_BOX: 1,\n};\n\n\n/**\n * Declare a box type as a Box.\n *\n * @param {string} type\n * @param {!shaka.util.Mp4Parser.CallbackType} definition\n * @return {!shaka.util.Mp4Parser}\n * @export\n */\nshaka.util.Mp4Parser.prototype.box = function(type, definition) {\n  let typeCode = shaka.util.Mp4Parser.typeFromString_(type);\n  this.headers_[typeCode] = shaka.util.Mp4Parser.BoxType_.BASIC_BOX;\n  this.boxDefinitions_[typeCode] = definition;\n  return this;\n};\n\n\n/**\n * Declare a box type as a Full Box.\n *\n * @param {string} type\n * @param {!shaka.util.Mp4Parser.CallbackType} definition\n * @return {!shaka.util.Mp4Parser}\n * @export\n */\nshaka.util.Mp4Parser.prototype.fullBox = function(type, definition) {\n  let typeCode = shaka.util.Mp4Parser.typeFromString_(type);\n  this.headers_[typeCode] = shaka.util.Mp4Parser.BoxType_.FULL_BOX;\n  this.boxDefinitions_[typeCode] = definition;\n  return this;\n};\n\n\n/**\n * Stop parsing.  Useful for extracting information from partial segments and\n * avoiding an out-of-bounds error once you find what you are looking for.\n *\n * @export\n */\nshaka.util.Mp4Parser.prototype.stop = function() {\n  this.done_ = true;\n};\n\n\n/**\n * Parse the given data using the added callbacks.\n *\n * @param {!BufferSource} data\n * @param {boolean=} partialOkay If true, allow reading partial payloads\n *   from some boxes. If the goal is a child box, we can sometimes find it\n *   without enough data to find all child boxes.\n * @export\n */\nshaka.util.Mp4Parser.prototype.parse = function(data, partialOkay) {\n  let wrapped = new Uint8Array(data);\n  let reader = new shaka.util.DataViewReader(\n      new DataView(wrapped.buffer, wrapped.byteOffset, wrapped.byteLength),\n      shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  this.done_ = false;\n  while (reader.hasMoreData() && !this.done_) {\n    this.parseNext(0, reader, partialOkay);\n  }\n};\n\n\n/**\n * Parse the next box on the current level.\n *\n * @param {number} absStart The absolute start position in the original\n *   byte array.\n * @param {!shaka.util.DataViewReader} reader\n * @param {boolean=} partialOkay If true, allow reading partial payloads\n *   from some boxes. If the goal is a child box, we can sometimes find it\n *   without enough data to find all child boxes.\n * @export\n */\nshaka.util.Mp4Parser.prototype.parseNext =\n    function(absStart, reader, partialOkay) {\n  let start = reader.getPosition();\n\n  let size = reader.readUint32();\n  let type = reader.readUint32();\n  let name = shaka.util.Mp4Parser.typeToString(type);\n  shaka.log.v2('Parsing MP4 box', name);\n\n  switch (size) {\n    case 0:\n      size = reader.getLength() - start;\n      break;\n    case 1:\n      size = reader.readUint64();\n      break;\n  }\n\n  let boxDefinition = this.boxDefinitions_[type];\n\n  if (boxDefinition) {\n    let version = null;\n    let flags = null;\n\n    if (this.headers_[type] == shaka.util.Mp4Parser.BoxType_.FULL_BOX) {\n      let versionAndFlags = reader.readUint32();\n      version = versionAndFlags >>> 24;\n      flags = versionAndFlags & 0xFFFFFF;\n    }\n\n    // Read the whole payload so that the current level can be safely read\n    // regardless of how the payload is parsed.\n    let end = start + size;\n    if (partialOkay && end > reader.getLength()) {\n      // For partial reads, truncate the payload if we must.\n      end = reader.getLength();\n    }\n    let payloadSize = end - reader.getPosition();\n    let payload =\n        (payloadSize > 0) ? reader.readBytes(payloadSize) : new Uint8Array(0);\n\n    let payloadReader = new shaka.util.DataViewReader(\n        new DataView(payload.buffer, payload.byteOffset, payload.byteLength),\n        shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n    /** @type {shaka.extern.ParsedBox} */\n    let box = {\n      parser: this,\n      partialOkay: partialOkay || false,\n      version: version,\n      flags: flags,\n      reader: payloadReader,\n      size: size,\n      start: start + absStart,\n    };\n\n    boxDefinition(box);\n  } else {\n    // Move the read head to be at the end of the box.\n    // If the box is longer than the remaining parts of the file, e.g. the\n    // mp4 is improperly formatted, or this was a partial range request that\n    // ended in the middle of a box, just skip to the end.\n    const skipLength = Math.min(\n        start + size - reader.getPosition(),\n        reader.getLength() - reader.getPosition());\n    reader.skip(skipLength);\n  }\n};\n\n\n/**\n * A callback that tells the Mp4 parser to treat the body of a box as a series\n * of boxes. The number of boxes is limited by the size of the parent box.\n *\n * @param {!shaka.extern.ParsedBox} box\n * @export\n */\nshaka.util.Mp4Parser.children = function(box) {\n  while (box.reader.hasMoreData() && !box.parser.done_) {\n    box.parser.parseNext(box.start, box.reader, box.partialOkay);\n  }\n};\n\n\n/**\n * A callback that tells the Mp4 parser to treat the body of a box as a sample\n * description. A sample description box has a fixed number of children. The\n * number of children is represented by a 4 byte unsigned integer. Each child\n * is a box.\n *\n * @param {!shaka.extern.ParsedBox} box\n * @export\n */\nshaka.util.Mp4Parser.sampleDescription = function(box) {\n  for (let count = box.reader.readUint32();\n       count > 0 && !box.parser.done_;\n       count -= 1) {\n    box.parser.parseNext(box.start, box.reader, box.partialOkay);\n  }\n};\n\n\n/**\n * Create a callback that tells the Mp4 parser to treat the body of a box as a\n * binary blob and to parse the body's contents using the provided callback.\n *\n * @param {function(!Uint8Array)} callback\n * @return {!shaka.util.Mp4Parser.CallbackType}\n * @export\n */\nshaka.util.Mp4Parser.allData = function(callback) {\n  return function(box) {\n    let all = box.reader.getLength() - box.reader.getPosition();\n    callback(box.reader.readBytes(all));\n  };\n};\n\n\n/**\n * Convert an ascii string name to the integer type for a box.\n *\n * @param {string} name The name of the box. The name must be four\n *                      characters long.\n * @return {number}\n * @private\n */\nshaka.util.Mp4Parser.typeFromString_ = function(name) {\n  goog.asserts.assert(\n      name.length == 4,\n      'Mp4 box names must be 4 characters long');\n\n  let code = 0;\n  for (let i = 0; i < name.length; i++) {\n    code = (code << 8) | name.charCodeAt(i);\n  }\n  return code;\n};\n\n\n/**\n * Convert an integer type from a box into an ascii string name.\n * Useful for debugging.\n *\n * @param {number} type The type of the box, a uint32.\n * @return {string}\n * @export\n */\nshaka.util.Mp4Parser.typeToString = function(type) {\n  let name = String.fromCharCode(\n      (type >> 24) & 0xff,\n      (type >> 16) & 0xff,\n      (type >> 8) & 0xff,\n      type & 0xff);\n  return name;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.Mp4SegmentIndexParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Mp4Parser');\n\n\n/**\n * Parses SegmentReferences from an ISO BMFF SIDX structure.\n * @param {!ArrayBuffer} sidxData The MP4's container's SIDX.\n * @param {number} sidxOffset The SIDX's offset, in bytes, from the start of\n *   the MP4 container.\n * @param {!Array.<string>} uris The possible locations of the MP4 file that\n *   contains the segments.\n * @param {number} scaledPresentationTimeOffset\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n */\nshaka.media.Mp4SegmentIndexParser = function(\n    sidxData, sidxOffset, uris, scaledPresentationTimeOffset) {\n  const Mp4SegmentIndexParser = shaka.media.Mp4SegmentIndexParser;\n\n  let references;\n\n  let parser = new shaka.util.Mp4Parser()\n      .fullBox('sidx', function(box) {\n        references = Mp4SegmentIndexParser.parseSIDX_(\n            sidxOffset,\n            scaledPresentationTimeOffset,\n            uris,\n            box);\n      });\n\n  if (sidxData) {\n    parser.parse(sidxData);\n  }\n\n  if (references) {\n    return references;\n  } else {\n    shaka.log.error('Invalid box type, expected \"sidx\".');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.MP4_SIDX_WRONG_BOX_TYPE);\n  }\n};\n\n\n/**\n * Parse a SIDX box from the given reader.\n *\n * @param {number} sidxOffset\n * @param {number} scaledPresentationTimeOffset\n * @param {!Array.<string>} uris The possible locations of the MP4 file that\n *   contains the segments.\n * @param {!shaka.extern.ParsedBox} box\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.media.Mp4SegmentIndexParser.parseSIDX_ = function(\n    sidxOffset,\n    scaledPresentationTimeOffset,\n    uris,\n    box) {\n  goog.asserts.assert(\n      box.version != null,\n      'SIDX is a full box and should have a valid version.');\n\n  let references = [];\n\n  // Parse the SIDX structure.\n  // Skip reference_ID (32 bits).\n  box.reader.skip(4);\n\n  let timescale = box.reader.readUint32();\n\n  if (timescale == 0) {\n    shaka.log.error('Invalid timescale.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.MP4_SIDX_INVALID_TIMESCALE);\n  }\n\n  let earliestPresentationTime;\n  let firstOffset;\n\n  if (box.version == 0) {\n    earliestPresentationTime = box.reader.readUint32();\n    firstOffset = box.reader.readUint32();\n  } else {\n    earliestPresentationTime = box.reader.readUint64();\n    firstOffset = box.reader.readUint64();\n  }\n\n  // Skip reserved (16 bits).\n  box.reader.skip(2);\n\n  // Add references.\n  let referenceCount = box.reader.readUint16();\n\n  // Substract the presentation time offset\n  let unscaledStartTime = earliestPresentationTime;\n  let startByte = sidxOffset + box.size + firstOffset;\n\n  for (let i = 0; i < referenceCount; i++) {\n    // |chunk| is 1 bit for |referenceType|, and 31 bits for |referenceSize|.\n    let chunk = box.reader.readUint32();\n    let referenceType = (chunk & 0x80000000) >>> 31;\n    let referenceSize = chunk & 0x7FFFFFFF;\n\n    let subsegmentDuration = box.reader.readUint32();\n\n    // Skipping 1 bit for |startsWithSap|, 3 bits for |sapType|, and 28 bits\n    // for |sapDelta|.\n    box.reader.skip(4);\n\n    // If |referenceType| is 1 then the reference is to another SIDX.\n    // We do not support this.\n    if (referenceType == 1) {\n      shaka.log.error('Heirarchical SIDXs are not supported.');\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MP4_SIDX_TYPE_NOT_SUPPORTED);\n    }\n\n    references.push(\n        new shaka.media.SegmentReference(\n            references.length,\n            (unscaledStartTime / timescale) -\n                scaledPresentationTimeOffset,\n            ((unscaledStartTime + subsegmentDuration) / timescale) -\n                scaledPresentationTimeOffset,\n            function() { return uris; },\n            startByte,\n            startByte + referenceSize - 1));\n\n    unscaledStartTime += subsegmentDuration;\n    startByte += referenceSize;\n  }\n\n  box.parser.stop();\n  return references;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.SegmentIndex');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * Creates a SegmentIndex.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references The list of\n *   SegmentReferences, which must be sorted first by their start times\n *   (ascending) and second by their end times (ascending).  They must have\n *   continuous, increasing positions.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n * @export\n */\nshaka.media.SegmentIndex = function(references) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(references);\n  }\n\n  /** @private {Array.<!shaka.media.SegmentReference>} */\n  this.references_ = references;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.media.SegmentIndex.prototype.destroy = function() {\n  this.references_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * Finds the position of the segment for the given time, in seconds, relative\n * to the start of a particular Period.  Returns the position of the segment\n * with the largest end time if more than one segment is known for the given\n * time.\n *\n * @param {number} time\n * @return {?number} The position of the segment, or null\n *   if the position of the segment could not be determined.\n * @export\n */\nshaka.media.SegmentIndex.prototype.find = function(time) {\n  // For live streams, searching from the end is faster.  For VOD, it balances\n  // out either way.  In both cases, references_.length is small enough that the\n  // difference isn't huge.\n  for (let i = this.references_.length - 1; i >= 0; --i) {\n    let r = this.references_[i];\n    // Note that a segment ends immediately before the end time.\n    if ((time >= r.startTime) && (time < r.endTime)) {\n      return r.position;\n    }\n  }\n  if (this.references_.length && time < this.references_[0].startTime) {\n    return this.references_[0].position;\n  }\n\n  return null;\n};\n\n\n/**\n * Gets the SegmentReference for the segment at the given position.\n *\n * @param {number} position The position of the segment.\n * @return {shaka.media.SegmentReference} The SegmentReference, or null if\n *   no such SegmentReference exists.\n * @export\n */\nshaka.media.SegmentIndex.prototype.get = function(position) {\n  if (this.references_.length == 0) {\n    return null;\n  }\n\n  let index = position - this.references_[0].position;\n  if (index < 0 || index >= this.references_.length) {\n    return null;\n  }\n\n  return this.references_[index];\n};\n\n\n/**\n * Offset all segment references by a fixed amount.\n *\n * @param {number} offset The amount to add to each segment's start and end\n *   times.\n * @export\n */\nshaka.media.SegmentIndex.prototype.offset = function(offset) {\n  for (let i = 0; i < this.references_.length; ++i) {\n    this.references_[i].startTime += offset;\n    this.references_[i].endTime += offset;\n  }\n};\n\n\n/**\n * Merges the given SegmentReferences.  Supports extending the original\n * references only.  Will not replace old references or interleave new ones.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references The list of\n *   SegmentReferences, which must be sorted first by their start times\n *   (ascending) and second by their end times (ascending).  They must have\n *   continuous, increasing positions.\n * @export\n */\nshaka.media.SegmentIndex.prototype.merge = function(references) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(references);\n  }\n\n  let newReferences = [];\n  let i = 0;\n  let j = 0;\n\n  while ((i < this.references_.length) && (j < references.length)) {\n    let r1 = this.references_[i];\n    let r2 = references[j];\n\n    if (r1.startTime < r2.startTime) {\n      newReferences.push(r1);\n      i++;\n    } else if (r1.startTime > r2.startTime) {\n      if (i == 0) {\n        // If the reference appears before any existing reference, it may have\n        // been evicted before; in this case, simply add it back and it will be\n        // evicted again later.\n        newReferences.push(r2);\n      } else {\n        // Drop the new reference if it would have to be interleaved with the\n        // old one.  Issue a warning, since this is not a supported update.\n        shaka.log.warning('Refusing to rewrite original references on update!');\n      }\n      j++;\n    } else {\n      // When period is changed, fit() will expand the last segment to the start\n      // of the next period.  So, it is valid to have end time updated to the\n      // last segment reference in a period.\n      if (Math.abs(r1.endTime - r2.endTime) > 0.1) {\n        goog.asserts.assert(r2.endTime > r1.endTime &&\n            i == this.references_.length - 1 &&\n            j == references.length - 1,\n            'This should be an update of the last segment in a period');\n        let r = new shaka.media.SegmentReference(r1.position,\n            r2.startTime, r2.endTime, r2.getUris, r2.startByte, r2.endByte);\n        newReferences.push(r);\n      } else {\n        // Drop the new reference if there's an old reference with the\n        // same time.\n        newReferences.push(r1);\n      }\n      i++;\n      j++;\n    }\n  }\n\n  while (i < this.references_.length) {\n    newReferences.push(this.references_[i++]);\n  }\n\n  if (newReferences.length) {\n    // The rest of these references may need to be renumbered.\n    let nextPosition = newReferences[newReferences.length - 1].position + 1;\n    while (j < references.length) {\n      let r = references[j++];\n      let r2 = new shaka.media.SegmentReference(nextPosition++,\n          r.startTime, r.endTime, r.getUris, r.startByte, r.endByte);\n      newReferences.push(r2);\n    }\n  } else {\n    newReferences = references;\n  }\n\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(newReferences);\n  }\n\n  this.references_ = newReferences;\n};\n\n\n/**\n * Replace existing references with new ones, without merging.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} newReferences\n */\nshaka.media.SegmentIndex.prototype.replace = function(newReferences) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(newReferences);\n  }\n  this.references_ = newReferences;\n};\n\n\n/**\n * Removes all SegmentReferences that end before the given time.\n *\n * @param {number} time The time in seconds.\n * @export\n */\nshaka.media.SegmentIndex.prototype.evict = function(time) {\n  for (let i = 0; i < this.references_.length; ++i) {\n    if (this.references_[i].endTime > time) {\n      this.references_.splice(0, i);\n      return;\n    }\n  }\n  this.references_ = [];\n};\n\n\n/**\n * Expands the first SegmentReference so it begins at the start of its Period\n * if it already begins close to the start of its Period.\n *\n * Also expands or contracts the last SegmentReference so it ends at the end of\n * its Period.\n *\n * Do not call on the last period of a live presentation (unknown duration).\n * It is okay to call on the other periods of a live presentation, where the\n * duration is known and another period has been added.\n *\n * @param {?number} periodDuration\n */\nshaka.media.SegmentIndex.prototype.fit = function(periodDuration) {\n  goog.asserts.assert(periodDuration != null,\n                      'Period duration must be known for static content!');\n  goog.asserts.assert(periodDuration != Infinity,\n                      'Period duration must be finite for static content!');\n\n  // Trim out references we will never use.\n  while (this.references_.length) {\n    let lastReference = this.references_[this.references_.length - 1];\n    if (lastReference.startTime >= periodDuration) {\n      this.references_.pop();\n    } else {\n      break;\n    }\n  }\n  while (this.references_.length) {\n    let firstReference = this.references_[0];\n    if (firstReference.endTime <= 0) {\n      this.references_.shift();\n    } else {\n      break;\n    }\n  }\n\n  if (this.references_.length == 0) {\n    return;\n  }\n\n  // Adjust the last SegmentReference.\n  let lastReference = this.references_[this.references_.length - 1];\n  this.references_[this.references_.length - 1] =\n      new shaka.media.SegmentReference(\n          lastReference.position,\n          lastReference.startTime,\n          /* endTime */ periodDuration,\n          lastReference.getUris,\n          lastReference.startByte,\n          lastReference.endByte);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Asserts that the given SegmentReferences are sorted and have continuous,\n   * increasing positions.\n   *\n   * @param {!Array.<shaka.media.SegmentReference>} references\n   * @private\n   */\n  shaka.media.SegmentIndex.assertCorrectReferences_ = function(references) {\n    goog.asserts.assert(references.every(function(r2, i) {\n      if (i == 0) return true;\n      let r1 = references[i - 1];\n      if (r2.position != r1.position + 1) return false;\n      if (r1.startTime < r2.startTime) {\n        return true;\n      } else if (r1.startTime > r2.startTime) {\n        return false;\n      } else {\n        if (r1.endTime <= r2.endTime) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }), 'SegmentReferences are incorrect');\n  };\n}\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.WebmSegmentIndexParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.EbmlElement');\ngoog.require('shaka.util.EbmlParser');\ngoog.require('shaka.util.Error');\n\n\n/**\n * Creates a WebM Cues element parser.\n *\n * @constructor\n * @struct\n */\nshaka.media.WebmSegmentIndexParser = function() {};\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.EBML_ID = 0x1a45dfa3;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.SEGMENT_ID = 0x18538067;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.INFO_ID = 0x1549a966;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.TIMECODE_SCALE_ID = 0x2ad7b1;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.DURATION_ID = 0x4489;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUES_ID = 0x1c53bb6b;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_POINT_ID = 0xbb;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_TIME_ID = 0xb3;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_TRACK_POSITIONS_ID = 0xb7;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_CLUSTER_POSITION = 0xf1;\n\n\n/**\n * Parses SegmentReferences from a WebM container.\n * @param {!ArrayBuffer} cuesData The WebM container's \"Cueing Data\" section.\n * @param {!ArrayBuffer} initData The WebM container's headers.\n * @param {!Array.<string>} uris The possible locations of the WebM file that\n *   contains the segments.\n * @param {number} scaledPresentationTimeOffset\n\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n * @see http://www.matroska.org/technical/specs/index.html\n * @see http://www.webmproject.org/docs/container/\n */\nshaka.media.WebmSegmentIndexParser.prototype.parse = function(\n    cuesData, initData, uris, scaledPresentationTimeOffset) {\n  let tuple = this.parseWebmContainer_(initData);\n  let parser = new shaka.util.EbmlParser(new DataView(cuesData));\n  let cuesElement = parser.parseElement();\n  if (cuesElement.id != shaka.media.WebmSegmentIndexParser.CUES_ID) {\n    shaka.log.error('Not a Cues element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUES_ELEMENT_MISSING);\n  }\n\n  return this.parseCues_(\n      cuesElement, tuple.segmentOffset, tuple.timecodeScale, tuple.duration,\n      uris, scaledPresentationTimeOffset);\n};\n\n\n/**\n * Parses a WebM container to get the segment's offset, timecode scale, and\n * duration.\n *\n * @param {!ArrayBuffer} initData\n * @return {{segmentOffset: number, timecodeScale: number, duration: number}}\n *   The segment's offset in bytes, the segment's timecode scale in seconds,\n *   and the duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseWebmContainer_ = function(\n    initData) {\n  let parser = new shaka.util.EbmlParser(new DataView(initData));\n\n  // Check that the WebM container data starts with the EBML header, but\n  // skip its contents.\n  let ebmlElement = parser.parseElement();\n  if (ebmlElement.id != shaka.media.WebmSegmentIndexParser.EBML_ID) {\n    shaka.log.error('Not an EBML element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_EBML_HEADER_ELEMENT_MISSING);\n  }\n\n  let segmentElement = parser.parseElement();\n  if (segmentElement.id != shaka.media.WebmSegmentIndexParser.SEGMENT_ID) {\n    shaka.log.error('Not a Segment element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_SEGMENT_ELEMENT_MISSING);\n  }\n\n  // This value is used as the initial offset to the first referenced segment.\n  let segmentOffset = segmentElement.getOffset();\n\n  // Parse the Segment element to get the segment info.\n  let segmentInfo = this.parseSegment_(segmentElement);\n  return {\n    segmentOffset: segmentOffset,\n    timecodeScale: segmentInfo.timecodeScale,\n    duration: segmentInfo.duration,\n  };\n};\n\n\n/**\n * Parses a WebM Info element to get the segment's timecode scale and duration.\n * @param {!shaka.util.EbmlElement} segmentElement\n * @return {{timecodeScale: number, duration: number}} The segment's timecode\n *   scale in seconds and duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseSegment_ = function(\n    segmentElement) {\n  let parser = segmentElement.createParser();\n\n  // Find the Info element.\n  let infoElement = null;\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.INFO_ID) {\n      continue;\n    }\n\n    infoElement = elem;\n\n    break;\n  }\n\n  if (!infoElement) {\n    shaka.log.error('Not an Info element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_INFO_ELEMENT_MISSING);\n  }\n\n  return this.parseInfo_(infoElement);\n};\n\n\n/**\n * Parses a WebM Info element to get the segment's timecode scale and duration.\n * @param {!shaka.util.EbmlElement} infoElement\n * @return {{timecodeScale: number, duration: number}} The segment's timecode\n *   scale in seconds and duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseInfo_ = function(\n    infoElement) {\n  let parser = infoElement.createParser();\n\n  // The timecode scale factor in units of [nanoseconds / T], where [T] are the\n  // units used to express all other time values in the WebM container. By\n  // default it's assumed that [T] == [milliseconds].\n  let timecodeScaleNanoseconds = 1000000;\n  /** @type {?number} */\n  let durationScale = null;\n\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id == shaka.media.WebmSegmentIndexParser.TIMECODE_SCALE_ID) {\n      timecodeScaleNanoseconds = elem.getUint();\n    } else if (elem.id == shaka.media.WebmSegmentIndexParser.DURATION_ID) {\n      durationScale = elem.getFloat();\n    }\n  }\n  if (durationScale == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_DURATION_ELEMENT_MISSING);\n  }\n\n  // The timecode scale factor in units of [seconds / T].\n  let timecodeScale = timecodeScaleNanoseconds / 1000000000;\n  // The duration is stored in units of [T]\n  let durationSeconds = durationScale * timecodeScale;\n\n  return {timecodeScale: timecodeScale, duration: durationSeconds};\n};\n\n\n/**\n * Parses a WebM CuesElement.\n * @param {!shaka.util.EbmlElement} cuesElement\n * @param {number} segmentOffset\n * @param {number} timecodeScale\n * @param {number} duration\n * @param {!Array.<string>} uris\n * @param {number} scaledPresentationTimeOffset\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseCues_ = function(\n    cuesElement, segmentOffset, timecodeScale, duration, uris,\n    scaledPresentationTimeOffset) {\n  let references = [];\n  let getUris = function() { return uris; };\n\n  let parser = cuesElement.createParser();\n\n  let lastTime = null;\n  let lastOffset = null;\n\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.CUE_POINT_ID) {\n      continue;\n    }\n\n    let tuple = this.parseCuePoint_(elem);\n    if (!tuple) {\n      continue;\n    }\n\n    // Substract the presentation time offset from the unscaled time\n    let currentTime = timecodeScale * tuple.unscaledTime;\n    let currentOffset = segmentOffset + tuple.relativeOffset;\n\n    if (lastTime != null) {\n      goog.asserts.assert(lastOffset != null, 'last offset cannot be null');\n\n      references.push(\n          new shaka.media.SegmentReference(\n              references.length,\n              lastTime - scaledPresentationTimeOffset,\n              currentTime - scaledPresentationTimeOffset,\n              getUris,\n              lastOffset, currentOffset - 1));\n    }\n\n    lastTime = currentTime;\n    lastOffset = currentOffset;\n  }\n\n  if (lastTime != null) {\n    goog.asserts.assert(lastOffset != null, 'last offset cannot be null');\n\n    references.push(\n        new shaka.media.SegmentReference(\n            references.length,\n            lastTime - scaledPresentationTimeOffset,\n            duration - scaledPresentationTimeOffset,\n            getUris,\n            lastOffset, null));\n  }\n\n  return references;\n};\n\n\n/**\n * Parses a WebM CuePointElement to get an \"unadjusted\" segment reference.\n * @param {shaka.util.EbmlElement} cuePointElement\n * @return {{unscaledTime: number, relativeOffset: number}} The referenced\n *   segment's start time in units of [T] (see parseInfo_()), and the\n *   referenced segment's offset in bytes, relative to a WebM Segment\n *   element.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseCuePoint_ = function(\n    cuePointElement) {\n  let parser = cuePointElement.createParser();\n\n  // Parse CueTime element.\n  let cueTimeElement = parser.parseElement();\n  if (cueTimeElement.id != shaka.media.WebmSegmentIndexParser.CUE_TIME_ID) {\n    shaka.log.warning('Not a CueTime element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUE_TIME_ELEMENT_MISSING);\n  }\n  let unscaledTime = cueTimeElement.getUint();\n\n  // Parse CueTrackPositions element.\n  let cueTrackPositionsElement = parser.parseElement();\n  if (cueTrackPositionsElement.id !=\n      shaka.media.WebmSegmentIndexParser.CUE_TRACK_POSITIONS_ID) {\n    shaka.log.warning('Not a CueTrackPositions element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING);\n  }\n\n  let cueTrackParser = cueTrackPositionsElement.createParser();\n  let relativeOffset = 0;\n\n  while (cueTrackParser.hasMoreData()) {\n    let elem = cueTrackParser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.CUE_CLUSTER_POSITION) {\n      continue;\n    }\n\n    relativeOffset = elem.getUint();\n    break;\n  }\n\n  return {unscaledTime: unscaledTime, relativeOffset: relativeOffset};\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentBase');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.Mp4SegmentIndexParser');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.WebmSegmentIndexParser');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentBase\n * @summary A set of functions for parsing SegmentBase elements.\n */\n\n\n/**\n * Creates an init segment reference from a Context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n * @return {shaka.media.InitSegmentReference}\n */\nshaka.dash.SegmentBase.createInitSegment = function(context, callback) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let initialization =\n      MpdUtils.inheritChild(context, callback, 'Initialization');\n  if (!initialization) {\n    return null;\n  }\n\n  let resolvedUris = context.representation.baseUris;\n  let uri = initialization.getAttribute('sourceURL');\n  if (uri) {\n    resolvedUris =\n        ManifestParserUtils.resolveUris(context.representation.baseUris, [uri]);\n  }\n\n  let startByte = 0;\n  let endByte = null;\n  let range = XmlUtils.parseAttr(initialization, 'range', XmlUtils.parseRange);\n  if (range) {\n    startByte = range.start;\n    endByte = range.end;\n  }\n\n  let getUris = function() { return resolvedUris; };\n  return new shaka.media.InitSegmentReference(getUris, startByte, endByte);\n};\n\n\n/**\n * Creates a new Stream object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentBase.createStream = function(context, requestInitSegment) {\n  goog.asserts.assert(context.representation.segmentBase,\n                      'Should only be called with SegmentBase');\n  // Since SegmentBase does not need updates, simply treat any call as\n  // the initial parse.\n  const MpdUtils = shaka.dash.MpdUtils;\n  const SegmentBase = shaka.dash.SegmentBase;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let unscaledPresentationTimeOffset = Number(MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'presentationTimeOffset')) || 0;\n\n  let timescaleStr = MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'timescale');\n  let timescale = 1;\n  if (timescaleStr) {\n    timescale = XmlUtils.parsePositiveInt(timescaleStr) || 1;\n  }\n\n  let scaledPresentationTimeOffset =\n      (unscaledPresentationTimeOffset / timescale) || 0;\n\n  let init =\n      SegmentBase.createInitSegment(context, SegmentBase.fromInheritance_);\n  let index = SegmentBase.createSegmentIndex_(\n      context, requestInitSegment, init, scaledPresentationTimeOffset);\n\n  return {\n    createSegmentIndex: index.createSegmentIndex,\n    findSegmentPosition: index.findSegmentPosition,\n    getSegmentReference: index.getSegmentReference,\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * Creates segment index info for the given info.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {!Array.<string>} uris\n * @param {number} startByte\n * @param {?number} endByte\n * @param {string} containerType\n * @param {number} scaledPresentationTimeOffset\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n */\nshaka.dash.SegmentBase.createSegmentIndexFromUris = function(\n    context, requestInitSegment, init, uris,\n    startByte, endByte, containerType, scaledPresentationTimeOffset) {\n  let presentationTimeline = context.presentationTimeline;\n  let fitLast = !context.dynamic || !context.periodInfo.isLastPeriod;\n  let periodStart = context.periodInfo.start;\n  let periodDuration = context.periodInfo.duration;\n\n  // Create a local variable to bind to so we can set to null to help the GC.\n  let localRequest = requestInitSegment;\n  let segmentIndex = null;\n  let create = function() {\n    let async = [\n      localRequest(uris, startByte, endByte),\n      containerType == 'webm' ?\n          localRequest(init.getUris(), init.startByte, init.endByte) :\n          null,\n    ];\n\n    localRequest = null;\n    return Promise.all(async).then(function(results) {\n      let indexData = results[0];\n      let initData = results[1] || null;\n      let references = null;\n\n      if (containerType == 'mp4') {\n        // eslint-disable-next-line new-cap\n        references = shaka.media.Mp4SegmentIndexParser(\n            indexData, startByte, uris, scaledPresentationTimeOffset);\n      } else {\n        goog.asserts.assert(initData, 'WebM requires init data');\n        let parser = new shaka.media.WebmSegmentIndexParser();\n        references = parser.parse(indexData, initData, uris,\n            scaledPresentationTimeOffset);\n      }\n\n      presentationTimeline.notifySegments(references, periodStart);\n\n      // Since containers are never updated, we don't need to store the\n      // segmentIndex in the map.\n      goog.asserts.assert(!segmentIndex,\n                          'Should not call createSegmentIndex twice');\n\n      segmentIndex = new shaka.media.SegmentIndex(references);\n      if (fitLast) {\n        segmentIndex.fit(periodDuration);\n      }\n    });\n  };\n  let get = function(i) {\n    goog.asserts.assert(segmentIndex, 'Must call createSegmentIndex first');\n    return segmentIndex.get(i);\n  };\n  let find = function(t) {\n    goog.asserts.assert(segmentIndex, 'Must call createSegmentIndex first');\n    return segmentIndex.find(t);\n  };\n\n  return {\n    createSegmentIndex: create,\n    findSegmentPosition: find,\n    getSegmentReference: get,\n  };\n};\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentBase.fromInheritance_ = function(frame) {\n  return frame.segmentBase;\n};\n\n\n/**\n * Creates segment index info from a Context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {number} scaledPresentationTimeOffset\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentBase.createSegmentIndex_ = function(\n    context, requestInitSegment, init, scaledPresentationTimeOffset) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const SegmentBase = shaka.dash.SegmentBase;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let contentType = context.representation.contentType;\n  let containerType = context.representation.mimeType.split('/')[1];\n  if (contentType != ContentType.TEXT && containerType != 'mp4' &&\n      containerType != 'webm') {\n    shaka.log.error(\n        'SegmentBase specifies an unsupported container type.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_UNSUPPORTED_CONTAINER);\n  }\n\n  if ((containerType == 'webm') && !init) {\n    shaka.log.error(\n        'SegmentBase does not contain sufficient segment information:',\n        'the SegmentBase uses a WebM container,',\n        'but does not contain an Initialization element.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_WEBM_MISSING_INIT);\n  }\n\n  let representationIndex = MpdUtils.inheritChild(\n      context, SegmentBase.fromInheritance_, 'RepresentationIndex');\n  let indexRangeElem = MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'indexRange');\n\n  let indexUris = context.representation.baseUris;\n  let indexRange = XmlUtils.parseRange(indexRangeElem || '');\n  if (representationIndex) {\n    let representationUri = representationIndex.getAttribute('sourceURL');\n    if (representationUri) {\n      indexUris = ManifestParserUtils.resolveUris(\n          context.representation.baseUris, [representationUri]);\n    }\n\n    indexRange = XmlUtils.parseAttr(\n        representationIndex, 'range', XmlUtils.parseRange, indexRange);\n  }\n\n  if (!indexRange) {\n    shaka.log.error(\n        'SegmentBase does not contain sufficient segment information:',\n        'the SegmentBase does not contain @indexRange',\n        'or a RepresentationIndex element.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  return shaka.dash.SegmentBase.createSegmentIndexFromUris(\n      context, requestInitSegment, init, indexUris, indexRange.start,\n      indexRange.end, containerType, scaledPresentationTimeOffset);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentList');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentList\n * @summary A set of functions for parsing SegmentList elements.\n */\n\n\n/**\n * Creates a new Stream object or updates the Stream in the manifest.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Object.<string, !shaka.media.SegmentIndex>} segmentIndexMap\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentList.createStream = function(context, segmentIndexMap) {\n  goog.asserts.assert(context.representation.segmentList,\n                      'Should only be called with SegmentList');\n  const SegmentList = shaka.dash.SegmentList;\n\n  let init = shaka.dash.SegmentBase.createInitSegment(\n      context, SegmentList.fromInheritance_);\n  let info = SegmentList.parseSegmentListInfo_(context);\n\n  SegmentList.checkSegmentListInfo_(context, info);\n\n  /** @type {shaka.media.SegmentIndex} */\n  let segmentIndex = null;\n  let id = null;\n  if (context.period.id && context.representation.id) {\n    // Only check/store the index if period and representation IDs are set.\n    id = context.period.id + ',' + context.representation.id;\n    segmentIndex = segmentIndexMap[id];\n  }\n\n  let references = SegmentList.createSegmentReferences_(\n      context.periodInfo.duration, info.startNumber,\n      context.representation.baseUris, info);\n\n  if (segmentIndex) {\n    segmentIndex.merge(references);\n    let start = context.presentationTimeline.getSegmentAvailabilityStart();\n    segmentIndex.evict(start - context.periodInfo.start);\n  } else {\n    context.presentationTimeline.notifySegments(\n        references, context.periodInfo.start);\n    segmentIndex = new shaka.media.SegmentIndex(references);\n    if (id && context.dynamic) {\n      segmentIndexMap[id] = segmentIndex;\n    }\n  }\n\n  if (!context.dynamic || !context.periodInfo.isLastPeriod) {\n    segmentIndex.fit(context.periodInfo.duration);\n  }\n\n  return {\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n    getSegmentReference: segmentIndex.get.bind(segmentIndex),\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: info.scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * @typedef {{\n *   mediaUri: string,\n *   start: number,\n *   end: ?number\n * }}\n *\n * @property {string} mediaUri\n *   The URI of the segment.\n * @property {number} start\n *   The start byte of the segment.\n * @property {?number} end\n *   The end byte of the segment, or null.\n */\nshaka.dash.SegmentList.MediaSegment;\n\n\n/**\n * @typedef {{\n *   segmentDuration: ?number,\n *   startTime: number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>,\n *   mediaSegments: !Array.<shaka.dash.SegmentList.MediaSegment>\n * }}\n * @private\n *\n * @description\n * Contains information about a SegmentList.\n *\n * @property {?number} segmentDuration\n *   The duration of the segments, if given.\n * @property {number} startTime\n *   The start time of the first segment, in seconds.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The scaledPresentationTimeOffset of the representation, in seconds.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n * @property {!Array.<shaka.dash.SegmentList.MediaSegment>} mediaSegments\n *   The URI and byte-ranges of the media segments.\n */\nshaka.dash.SegmentList.SegmentListInfo;\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentList.fromInheritance_ = function(frame) {\n  return frame.segmentList;\n};\n\n\n/**\n * Parses the SegmentList items to create an info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.dash.SegmentList.SegmentListInfo}\n * @private\n */\nshaka.dash.SegmentList.parseSegmentListInfo_ = function(context) {\n  const SegmentList = shaka.dash.SegmentList;\n  const MpdUtils = shaka.dash.MpdUtils;\n\n  let mediaSegments = SegmentList.parseMediaSegments_(context);\n  let segmentInfo =\n      MpdUtils.parseSegmentInfo(context, SegmentList.fromInheritance_);\n\n  let startNumber = segmentInfo.startNumber;\n  if (startNumber == 0) {\n    shaka.log.warning('SegmentList@startNumber must be > 0');\n    startNumber = 1;\n  }\n\n  let startTime = 0;\n  if (segmentInfo.segmentDuration) {\n    // See DASH sec. 5.3.9.5.3\n    // Don't use presentationTimeOffset for @duration.\n    startTime = segmentInfo.segmentDuration * (startNumber - 1);\n  } else if (segmentInfo.timeline && segmentInfo.timeline.length > 0) {\n    // The presentationTimeOffset was considered in timeline creation.\n    startTime = segmentInfo.timeline[0].start;\n  }\n\n  return {\n    segmentDuration: segmentInfo.segmentDuration,\n    startTime: startTime,\n    startNumber: startNumber,\n    scaledPresentationTimeOffset: segmentInfo.scaledPresentationTimeOffset,\n    timeline: segmentInfo.timeline,\n    mediaSegments: mediaSegments,\n  };\n};\n\n\n/**\n * Checks whether a SegmentListInfo object is valid.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentList.SegmentListInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentList.checkSegmentListInfo_ = function(context, info) {\n  if (!info.segmentDuration && !info.timeline &&\n      info.mediaSegments.length > 1) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList specifies multiple segments,',\n        'but does not specify a segment duration or timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  if (!info.segmentDuration && !context.periodInfo.duration && !info.timeline &&\n      info.mediaSegments.length == 1) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList specifies one segment,',\n        'but does not specify a segment duration, period duration,',\n        'or timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  if (info.timeline && info.timeline.length == 0) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList has an empty timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n};\n\n\n/**\n * Creates an array of segment references for the given data.\n *\n * @param {?number} periodDuration in seconds.\n * @param {number} startNumber\n * @param {!Array.<string>} baseUris\n * @param {shaka.dash.SegmentList.SegmentListInfo} info\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.dash.SegmentList.createSegmentReferences_ = function(\n    periodDuration, startNumber, baseUris, info) {\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let max = info.mediaSegments.length;\n  if (info.timeline && info.timeline.length != info.mediaSegments.length) {\n    max = Math.min(info.timeline.length, info.mediaSegments.length);\n    shaka.log.warning(\n        'The number of items in the segment timeline and the number of segment',\n        'URLs do not match, truncating', info.mediaSegments.length, 'to', max);\n  }\n\n  /** @type {!Array.<!shaka.media.SegmentReference>} */\n  let references = [];\n  let prevEndTime = info.startTime;\n  for (let i = 0; i < max; i++) {\n    let segment = info.mediaSegments[i];\n    let mediaUri = ManifestParserUtils.resolveUris(\n        baseUris, [segment.mediaUri]);\n\n    let startTime = prevEndTime;\n    let endTime;\n\n    if (info.segmentDuration != null) {\n      endTime = startTime + info.segmentDuration;\n    } else if (info.timeline) {\n      // Ignore the timepoint start since they are continuous.\n      endTime = info.timeline[i].end;\n    } else {\n      // If segmentDuration and timeline are null then there must\n      // be exactly one segment.\n      goog.asserts.assert(\n          info.mediaSegments.length == 1 && periodDuration,\n          'There should be exactly one segment with a Period duration.');\n      endTime = startTime + periodDuration;\n    }\n\n    let getUris = (function(uris) { return uris; }.bind(null, mediaUri));\n    references.push(\n        new shaka.media.SegmentReference(\n            i + startNumber, startTime, endTime, getUris, segment.start,\n            segment.end));\n    prevEndTime = endTime;\n  }\n\n  return references;\n};\n\n\n/**\n * Parses the media URIs from the context.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {!Array.<shaka.dash.SegmentList.MediaSegment>}\n * @private\n */\nshaka.dash.SegmentList.parseMediaSegments_ = function(context) {\n  const Functional = shaka.util.Functional;\n  /** @type {!Array.<!Element>} */\n  let segmentLists = [\n    context.representation.segmentList,\n    context.adaptationSet.segmentList,\n    context.period.segmentList,\n  ].filter(Functional.isNotNull);\n\n  const XmlUtils = shaka.util.XmlUtils;\n  // Search each SegmentList for one with at least one SegmentURL element,\n  // select the first one, and convert each SegmentURL element to a tuple.\n  return segmentLists\n      .map(function(node) { return XmlUtils.findChildren(node, 'SegmentURL'); })\n      .reduce(function(all, part) { return all.length > 0 ? all : part; })\n      .map(function(urlNode) {\n        if (urlNode.getAttribute('indexRange') &&\n            !context.indexRangeWarningGiven) {\n          context.indexRangeWarningGiven = true;\n          shaka.log.warning(\n              'We do not support the SegmentURL@indexRange attribute on ' +\n              'SegmentList.  We only use the SegmentList@duration attribute ' +\n              'or SegmentTimeline, which must be accurate.');\n        }\n\n        let uri = urlNode.getAttribute('media');\n        let range = XmlUtils.parseAttr(\n            urlNode, 'mediaRange', XmlUtils.parseRange, {start: 0, end: null});\n        return {mediaUri: uri, start: range.start, end: range.end};\n      });\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentTemplate');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.log');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentTemplate\n * @summary A set of functions for parsing SegmentTemplate elements.\n */\n\n\n/**\n * Creates a new Stream object or updates the Stream in the manifest.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {!Object.<string, !shaka.media.SegmentIndex>} segmentIndexMap\n * @param {boolean} isUpdate True if the manifest is being updated.\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentTemplate.createStream = function(\n    context, requestInitSegment, segmentIndexMap, isUpdate) {\n  goog.asserts.assert(context.representation.segmentTemplate,\n                      'Should only be called with SegmentTemplate');\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n\n  let init = SegmentTemplate.createInitSegment_(context);\n  let info = SegmentTemplate.parseSegmentTemplateInfo_(context);\n\n  SegmentTemplate.checkSegmentTemplateInfo_(context, info);\n\n  /** @type {?shaka.dash.DashParser.SegmentIndexFunctions} */\n  let segmentIndexFunctions = null;\n  if (info.indexTemplate) {\n    segmentIndexFunctions = SegmentTemplate.createFromIndexTemplate_(\n        context, requestInitSegment, init, info);\n  } else if (info.segmentDuration) {\n    if (!isUpdate) {\n      context.presentationTimeline.notifyMaxSegmentDuration(\n          info.segmentDuration);\n      context.presentationTimeline.notifyMinSegmentStartTime(\n        context.periodInfo.start);\n    }\n    segmentIndexFunctions = SegmentTemplate.createFromDuration_(context, info);\n  } else {\n    /** @type {shaka.media.SegmentIndex} */\n    let segmentIndex = null;\n    let id = null;\n    if (context.period.id && context.representation.id) {\n      // Only check/store the index if period and representation IDs are set.\n      id = context.period.id + ',' + context.representation.id;\n      segmentIndex = segmentIndexMap[id];\n    }\n\n    let references = SegmentTemplate.createFromTimeline_(context, info);\n\n    // Don't fit live content, since it might receive more segments.\n    // Unless that live content is multi-period; it's safe to fit every period\n    // but the last one, since only the last period might receive new segments.\n    let shouldFit = !context.dynamic || !context.periodInfo.isLastPeriod;\n\n    if (segmentIndex) {\n      if (shouldFit) {\n        // Fit the new references before merging them, so that the merge\n        // algorithm has a more accurate view of their start and end times.\n        let wrapper = new shaka.media.SegmentIndex(references);\n        wrapper.fit(context.periodInfo.duration);\n      }\n\n      segmentIndex.merge(references);\n      let start = context.presentationTimeline.getSegmentAvailabilityStart();\n      segmentIndex.evict(start - context.periodInfo.start);\n    } else {\n      context.presentationTimeline.notifySegments(\n          references, context.periodInfo.start);\n      segmentIndex = new shaka.media.SegmentIndex(references);\n      if (id && context.dynamic) {\n        segmentIndexMap[id] = segmentIndex;\n      }\n    }\n\n    if (shouldFit) {\n      segmentIndex.fit(context.periodInfo.duration);\n    }\n\n    segmentIndexFunctions = {\n      createSegmentIndex: Promise.resolve.bind(Promise),\n      findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n      getSegmentReference: segmentIndex.get.bind(segmentIndex),\n    };\n  }\n\n  return {\n    createSegmentIndex: segmentIndexFunctions.createSegmentIndex,\n    findSegmentPosition: segmentIndexFunctions.findSegmentPosition,\n    getSegmentReference: segmentIndexFunctions.getSegmentReference,\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: info.scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * @typedef {{\n *   timescale: number,\n *   segmentDuration: ?number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   unscaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>,\n *   mediaTemplate: ?string,\n *   indexTemplate: ?string\n * }}\n * @private\n *\n * @description\n * Contains information about a SegmentTemplate.\n *\n * @property {number} timescale\n *   The time-scale of the representation.\n * @property {?number} segmentDuration\n *   The duration of the segments in seconds, if given.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset of the representation, in seconds.\n * @property {number} unscaledPresentationTimeOffset\n *   The presentation time offset of the representation, in timescale units.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n * @property {?string} mediaTemplate\n *   The media URI template, if given.\n * @property {?string} indexTemplate\n *   The index URI template, if given.\n */\nshaka.dash.SegmentTemplate.SegmentTemplateInfo;\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentTemplate.fromInheritance_ = function(frame) {\n  return frame.segmentTemplate;\n};\n\n\n/**\n * Parses a SegmentTemplate element into an info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.dash.SegmentTemplate.SegmentTemplateInfo}\n * @private\n */\nshaka.dash.SegmentTemplate.parseSegmentTemplateInfo_ = function(context) {\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n  const MpdUtils = shaka.dash.MpdUtils;\n  let segmentInfo =\n      MpdUtils.parseSegmentInfo(context, SegmentTemplate.fromInheritance_);\n\n  let media = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'media');\n  let index = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'index');\n\n  return {\n    segmentDuration: segmentInfo.segmentDuration,\n    timescale: segmentInfo.timescale,\n    startNumber: segmentInfo.startNumber,\n    scaledPresentationTimeOffset: segmentInfo.scaledPresentationTimeOffset,\n    unscaledPresentationTimeOffset: segmentInfo.unscaledPresentationTimeOffset,\n    timeline: segmentInfo.timeline,\n    mediaTemplate: media,\n    indexTemplate: index,\n  };\n};\n\n\n/**\n * Verifies a SegmentTemplate info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentTemplate.checkSegmentTemplateInfo_ = function(context, info) {\n  let n = 0;\n  n += info.indexTemplate ? 1 : 0;\n  n += info.timeline ? 1 : 0;\n  n += info.segmentDuration ? 1 : 0;\n\n  if (n == 0) {\n    shaka.log.error(\n        'SegmentTemplate does not contain any segment information:',\n        'the SegmentTemplate must contain either an index URL template',\n        'a SegmentTimeline, or a segment duration.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  } else if (n != 1) {\n    shaka.log.warning(\n        'SegmentTemplate containes multiple segment information sources:',\n        'the SegmentTemplate should only contain an index URL template,',\n        'a SegmentTimeline or a segment duration.',\n        context.representation);\n    if (info.indexTemplate) {\n      shaka.log.info('Using the index URL template by default.');\n      info.timeline = null;\n      info.segmentDuration = null;\n    } else {\n      goog.asserts.assert(info.timeline, 'There should be a timeline');\n      shaka.log.info('Using the SegmentTimeline by default.');\n      info.segmentDuration = null;\n    }\n  }\n\n  if (!info.indexTemplate && !info.mediaTemplate) {\n    shaka.log.error(\n        'SegmentTemplate does not contain sufficient segment information:',\n        'the SegmentTemplate\\'s media URL template is missing.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n};\n\n\n/**\n * Creates segment index functions from a index URL template.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromIndexTemplate_ = function(\n    context, requestInitSegment, init, info) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  // Determine the container type.\n  let containerType = context.representation.mimeType.split('/')[1];\n  if ((containerType != 'mp4') && (containerType != 'webm')) {\n    shaka.log.error(\n        'SegmentTemplate specifies an unsupported container type.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_UNSUPPORTED_CONTAINER);\n  }\n\n  if ((containerType == 'webm') && !init) {\n    shaka.log.error(\n        'SegmentTemplate does not contain sufficient segment information:',\n        'the SegmentTemplate uses a WebM container,',\n        'but does not contain an initialization URL template.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_WEBM_MISSING_INIT);\n  }\n\n  goog.asserts.assert(info.indexTemplate, 'must be using index template');\n  let filledTemplate = MpdUtils.fillUriTemplate(\n      info.indexTemplate, context.representation.id,\n      null, context.bandwidth || null, null);\n\n  let resolvedUris = ManifestParserUtils.resolveUris(\n      context.representation.baseUris, [filledTemplate]);\n\n  return shaka.dash.SegmentBase.createSegmentIndexFromUris(\n      context, requestInitSegment, init, resolvedUris, 0, null, containerType,\n      info.scaledPresentationTimeOffset);\n};\n\n\n/**\n * Creates segment index functions from a segment duration.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromDuration_ = function(context, info) {\n  goog.asserts.assert(info.mediaTemplate,\n                      'There should be a media template with duration');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let periodDuration = context.periodInfo.duration;\n  let segmentDuration = info.segmentDuration;\n  let startNumber = info.startNumber;\n  let timescale = info.timescale;\n\n  let template = info.mediaTemplate;\n  let bandwidth = context.bandwidth || null;\n  let id = context.representation.id;\n  let baseUris = context.representation.baseUris;\n\n  let find = function(periodTime) {\n    if (periodTime < 0) {\n      return null;\n    } else if (periodDuration && periodTime >= periodDuration) {\n      return null;\n    }\n\n    return Math.floor(periodTime / segmentDuration);\n  };\n  let get = function(position) {\n    let segmentStart = position * segmentDuration;\n    // Cap the segment end at the period end, to avoid period transition issues\n    // in StreamingEngine.\n    let segmentEnd = segmentStart + segmentDuration;\n    if (periodDuration) segmentEnd = Math.min(segmentEnd, periodDuration);\n\n    // Do not construct segments references that should not exist.\n    if (segmentEnd < 0) {\n      return null;\n    } else if (periodDuration && segmentStart >= periodDuration) {\n      return null;\n    }\n\n    let getUris = function() {\n      let mediaUri = MpdUtils.fillUriTemplate(\n          template, id, position + startNumber, bandwidth,\n          segmentStart * timescale);\n      return ManifestParserUtils.resolveUris(baseUris, [mediaUri]);\n    };\n\n    return new shaka.media.SegmentReference(\n        position, segmentStart, segmentEnd, getUris, 0, null);\n  };\n\n  return {\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: find,\n    getSegmentReference: get,\n  };\n};\n\n\n/**\n * Creates segment references from a timeline.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromTimeline_ = function(context, info) {\n  goog.asserts.assert(info.mediaTemplate,\n                      'There should be a media template with a timeline');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  /** @type {!Array.<!shaka.media.SegmentReference>} */\n  let references = [];\n  for (let i = 0; i < info.timeline.length; i++) {\n    let start = info.timeline[i].start;\n    let unscaledStart = info.timeline[i].unscaledStart;\n    let end = info.timeline[i].end;\n\n    // Note: i = k - 1, where k indicates the k'th segment listed in the MPD.\n    // (See section 5.3.9.5.3 of the DASH spec.)\n    let segmentReplacement = i + info.startNumber;\n\n    // Consider the presentation time offset in segment uri computation\n    let timeReplacement = unscaledStart +\n        info.unscaledPresentationTimeOffset;\n    let createUris = (function(\n            template, repId, bandwidth, baseUris, segmentId, time) {\n          let mediaUri = MpdUtils.fillUriTemplate(\n              template, repId, segmentId, bandwidth, time);\n          return ManifestParserUtils.resolveUris(baseUris, [mediaUri])\n              .map(function(g) { return g.toString(); });\n        }.bind(null, info.mediaTemplate, context.representation.id,\n               context.bandwidth || null, context.representation.baseUris,\n               segmentReplacement, timeReplacement));\n\n    references.push(new shaka.media.SegmentReference(\n        segmentReplacement, start, end, createUris, 0, null));\n  }\n\n  return references;\n};\n\n\n/**\n * Creates an init segment reference from a context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.media.InitSegmentReference}\n * @private\n */\nshaka.dash.SegmentTemplate.createInitSegment_ = function(context) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n\n  let initialization = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'initialization');\n  if (!initialization) {\n    return null;\n  }\n\n  let repId = context.representation.id;\n  let bandwidth = context.bandwidth || null;\n  let baseUris = context.representation.baseUris;\n  let getUris = function() {\n    goog.asserts.assert(initialization, 'Should have returned earler');\n    let filledTemplate = MpdUtils.fillUriTemplate(\n        initialization, repId, null, bandwidth, null);\n    let resolvedUris = ManifestParserUtils.resolveUris(\n        baseUris, [filledTemplate]);\n    return resolvedUris;\n  };\n\n  return new shaka.media.InitSegmentReference(getUris, 0, null);\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.ManifestParser');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Platform');\n\n\n/**\n * @namespace shaka.media.ManifestParser\n * @summary An interface to register manifest parsers.\n * @exportDoc\n */\n\n\n/**\n * Contains the parser factory functions indexed by MIME type.\n *\n * @type {!Object.<string, shaka.extern.ManifestParser.Factory>}\n */\nshaka.media.ManifestParser.parsersByMime = {};\n\n\n/**\n * Contains the parser factory functions indexed by file extension.\n *\n * @type {!Object.<string, shaka.extern.ManifestParser.Factory>}\n */\nshaka.media.ManifestParser.parsersByExtension = {};\n\n\n/**\n * Registers a manifest parser by file extension.\n *\n * @param {string} extension The file extension of the manifest.\n * @param {shaka.extern.ManifestParser.Factory} parserFactory The factory\n *   used to create parser instances.\n * @export\n */\nshaka.media.ManifestParser.registerParserByExtension = function(\n    extension, parserFactory) {\n  shaka.media.ManifestParser.parsersByExtension[extension] = parserFactory;\n};\n\n\n/**\n * Registers a manifest parser by MIME type.\n *\n * @param {string} mimeType The MIME type of the manifest.\n * @param {shaka.extern.ManifestParser.Factory} parserFactory The factory\n *   used to create parser instances.\n * @export\n */\nshaka.media.ManifestParser.registerParserByMime = function(\n    mimeType, parserFactory) {\n  shaka.media.ManifestParser.parsersByMime[mimeType] = parserFactory;\n};\n\n\n/**\n * Returns a map of manifest support for well-known types.\n *\n * @return {!Object.<string, boolean>}\n */\nshaka.media.ManifestParser.probeSupport = function() {\n  const ManifestParser = shaka.media.ManifestParser;\n  let support = {};\n\n  // Make sure all registered parsers are shown, but only for MSE-enabled\n  // platforms where our parsers matter.\n  if (shaka.util.Platform.supportsMediaSource()) {\n    for (let type in ManifestParser.parsersByMime) {\n      support[type] = true;\n    }\n    for (let type in ManifestParser.parsersByExtension) {\n      support[type] = true;\n    }\n  }\n\n  // Make sure all well-known types are tested as well, just to show an explicit\n  // false for things people might be expecting.\n  const testMimeTypes = [\n    // DASH\n    'application/dash+xml',\n    // HLS\n    'application/x-mpegurl',\n    'application/vnd.apple.mpegurl',\n    // SmoothStreaming\n    'application/vnd.ms-sstr+xml',\n  ];\n  const testExtensions = {\n    // DASH\n    'mpd': 'application/dash+xml',\n    // HLS\n    'm3u8': 'application/x-mpegurl',\n    // SmoothStreaming\n    'ism': 'application/vnd.ms-sstr+xml',\n  };\n\n  for (let type of testMimeTypes) {\n    // Only query our parsers for MSE-enabled platforms.  Otherwise, query a\n    // temporary media element for native support for these types.\n    if (shaka.util.Platform.supportsMediaSource()) {\n      support[type] = !!ManifestParser.parsersByMime[type];\n    } else {\n      support[type] = shaka.util.Platform.supportsMediaType(type);\n    }\n  }\n\n  for (let extension in testExtensions) {\n    // Only query our parsers for MSE-enabled platforms.  Otherwise, query a\n    // temporary media element for native support for these MIME type for the\n    // extension.\n    if (shaka.util.Platform.supportsMediaSource()) {\n      support[extension] = !!ManifestParser.parsersByExtension[extension];\n    } else {\n      const type = testExtensions[extension];\n      support[extension] = shaka.util.Platform.supportsMediaType(type);\n    }\n  }\n\n  return support;\n};\n\n\n/**\n * Create a manifest parser to parse the manifest at |uri|.\n *\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @param {?string} mimeType\n * @return {!Promise.<!shaka.extern.ManifestParser>}\n */\nshaka.media.ManifestParser.create = async function(\n    uri, netEngine, retryParams, mimeType) {\n  try {\n    const Factory = await shaka.media.ManifestParser.getFactory_(\n        uri, netEngine, retryParams, mimeType);\n\n    return new Factory();\n  } catch (error) {\n    goog.asserts.assert(\n        error instanceof shaka.util.Error, 'Incorrect error type');\n\n    // Regardless of what the error was, we need to upgrade it to a critical\n    // error. We can't do anything if we can't create a manifest parser.\n    error.severity = shaka.util.Error.Severity.CRITICAL;\n\n    throw error;\n  }\n};\n\n\n/**\n * Get a factory that can create a manifest parser that should be able to parse\n * the manifest at |uri|.\n *\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @param {?string} mimeType\n * @return {!Promise.<shaka.extern.ManifestParser.Factory>}\n * @private\n */\nshaka.media.ManifestParser.getFactory_ = async function(\n    uri, netEngine, retryParams, mimeType) {\n  const ManifestParser = shaka.media.ManifestParser;\n\n  // Try using the MIME type we were given.\n  if (mimeType) {\n    const factory = ManifestParser.parsersByMime[mimeType.toLowerCase()];\n    if (factory) {\n      return factory;\n    }\n\n    shaka.log.warning(\n        'Could not determine manifest type using MIME type ', mimeType);\n  }\n\n  const extension = ManifestParser.getExtension(uri);\n  if (extension) {\n    const factory = ManifestParser.parsersByExtension[extension];\n    if (factory) {\n      return factory;\n    }\n\n    shaka.log.warning(\n        'Could not determine manifest type for extension ', extension);\n  } else {\n    shaka.log.warning('Could not find extension for ', uri);\n  }\n\n  if (!mimeType) {\n    mimeType = await ManifestParser.getMimeType(uri, netEngine, retryParams);\n\n    if (mimeType) {\n      const factory = shaka.media.ManifestParser.parsersByMime[mimeType];\n      if (factory) {\n        return factory;\n      }\n\n      shaka.log.warning('Could not determine manifest type using MIME type',\n                        mimeType);\n    }\n  }\n\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MANIFEST,\n      shaka.util.Error.Code.UNABLE_TO_GUESS_MANIFEST_TYPE,\n      uri);\n};\n\n\n/**\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @return {!Promise.<string>}\n */\nshaka.media.ManifestParser.getMimeType = async function(\n    uri, netEngine, retryParams) {\n  const type = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n\n  let request = shaka.net.NetworkingEngine.makeRequest([uri], retryParams);\n  request.method = 'HEAD';\n\n  let response = await netEngine.request(type, request).promise;\n\n  // https://bit.ly/2K9s9kf says this header should always be available,\n  // but just to be safe:\n  let mimeType = response.headers['content-type'];\n  return mimeType ? mimeType.toLowerCase() : '';\n};\n\n\n/**\n * @param {string} uri\n * @return {string}\n */\nshaka.media.ManifestParser.getExtension = function(uri) {\n  const uriObj = new goog.Uri(uri);\n  const uriPieces = uriObj.getPath().split('/');\n  const uriFilename = uriPieces.pop();\n  const filenamePieces = uriFilename.split('.');\n\n  // Only one piece means there is no extension.\n  if (filenamePieces.length == 1) {\n    return '';\n  }\n\n  return filenamePieces.pop().toLowerCase();\n};\n\n\n/**\n * Determines whether or not this URI and MIME type are supported by our own\n * manifest parsers on this platform.  This takes into account whether or not\n * MediaSource is available, as well as which parsers are registered to the\n * system.\n *\n * @param {string} uri\n * @param {string} mimeType\n * @return {boolean}\n */\nshaka.media.ManifestParser.isSupported = function(uri, mimeType) {\n  // Without MediaSource, our own parsers are useless.\n  if (!shaka.util.Platform.supportsMediaSource()) {\n    return false;\n  }\n\n  if (mimeType in shaka.media.ManifestParser.parsersByMime) {\n    return true;\n  }\n\n  const extension = shaka.media.ManifestParser.getExtension(uri);\n  if (extension in shaka.media.ManifestParser.parsersByExtension) {\n    return true;\n  }\n\n  return false;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.PresentationTimeline');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\n\n\n/**\n * Creates a PresentationTimeline.\n *\n * @param {?number} presentationStartTime The wall-clock time, in seconds,\n *   when the presentation started or will start. Only required for live.\n * @param {number} presentationDelay The delay to give the presentation, in\n *   seconds.  Only required for live.\n * @param {boolean=} autoCorrectDrift Whether to account for drift when\n *   determining the availability window.\n *\n * @see {shaka.extern.Manifest}\n * @see {@tutorial architecture}\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.PresentationTimeline = function(\n    presentationStartTime, presentationDelay, autoCorrectDrift = true) {\n  /** @private {?number} */\n  this.presentationStartTime_ = presentationStartTime;\n\n  /** @private {number} */\n  this.presentationDelay_ = presentationDelay;\n\n  /** @private {number} */\n  this.duration_ = Infinity;\n\n  /** @private {number} */\n  this.segmentAvailabilityDuration_ = Infinity;\n\n  /**\n   * The maximum segment duration (in seconds).  Can be based on explicitly-\n   * known segments or on signalling in the manifest.\n   *\n   * @private {number}\n   */\n  this.maxSegmentDuration_ = 1;\n\n  /**\n   * The minimum segment start time (in seconds, in the presentation timeline)\n   * for segments we explicitly know about.\n   *\n   * This is null if we have no explicit descriptions of segments, such as in\n   * DASH when using SegmentTemplate w/ duration.\n   *\n   * @private {?number}\n   */\n  this.minSegmentStartTime_ = null;\n\n  /**\n   * The maximum segment end time (in seconds, in the presentation timeline) for\n   * segments we explicitly know about.\n   *\n   * This is null if we have no explicit descriptions of segments, such as in\n   * DASH when using SegmentTemplate w/ duration.  When this is non-null, the\n   * presentation start time is calculated from the segment end times.\n   *\n   * @private {?number}\n   */\n  this.maxSegmentEndTime_ = null;\n\n  /** @private {number} */\n  this.clockOffset_ = 0;\n\n  /** @private {boolean} */\n  this.static_ = true;\n\n  /** @private {number} */\n  this.userSeekStart_ = 0;\n\n  /** @private {boolean} */\n  this.autoCorrectDrift_ = autoCorrectDrift;\n};\n\n\n/**\n * @return {number} The presentation's duration in seconds.\n *   Infinity indicates that the presentation continues indefinitely.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getDuration = function() {\n  return this.duration_;\n};\n\n\n/**\n * @return {number} The presentation's max segment duration in seconds.\n */\nshaka.media.PresentationTimeline.prototype.getMaxSegmentDuration = function() {\n  return this.maxSegmentDuration_;\n};\n\n\n/**\n * Sets the presentation's duration.\n *\n * @param {number} duration The presentation's duration in seconds.\n *   Infinity indicates that the presentation continues indefinitely.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setDuration = function(duration) {\n  goog.asserts.assert(duration > 0, 'duration must be > 0');\n  this.duration_ = duration;\n};\n\n\n/**\n * @return {?number} The presentation's start time in seconds.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getPresentationStartTime =\n    function() {\n  return this.presentationStartTime_;\n};\n\n\n/**\n * Sets the clock offset, which is the difference between the client's clock\n * and the server's clock, in milliseconds (i.e., serverTime = Date.now() +\n * clockOffset).\n *\n * @param {number} offset The clock offset, in ms.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setClockOffset = function(offset) {\n  this.clockOffset_ = offset;\n};\n\n\n/**\n * Sets the presentation's static flag.\n *\n * @param {boolean} isStatic If true, the presentation is static, meaning all\n *   segments are available at once.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setStatic = function(isStatic) {\n  // NOTE: the argument name is not \"static\" because that's a keyword in ES6\n  this.static_ = isStatic;\n};\n\n\n/**\n * Sets the presentation's segment availability duration. The segment\n * availability duration should only be set for live.\n *\n * @param {number} segmentAvailabilityDuration The presentation's new segment\n *   availability duration in seconds.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setSegmentAvailabilityDuration =\n    function(segmentAvailabilityDuration) {\n  goog.asserts.assert(segmentAvailabilityDuration >= 0,\n                      'segmentAvailabilityDuration must be >= 0');\n  this.segmentAvailabilityDuration_ = segmentAvailabilityDuration;\n};\n\n\n/**\n * Sets the presentation delay in seconds.\n *\n * @param {number} delay\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setDelay = function(delay) {\n  // NOTE: This is no longer used internally, but is exported.\n  // So we cannot remove it without deprecating it and waiting one release\n  // cycle, or else we risk breaking custom manifest parsers.\n  goog.asserts.assert(delay >= 0, 'delay must be >= 0');\n  this.presentationDelay_ = delay;\n};\n\n\n/**\n * Gets the presentation delay in seconds.\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getDelay = function() {\n  return this.presentationDelay_;\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's segments so it can size and position\n * the segment availability window, and account for missing segment\n * information.  This function should be called once for each Stream (no more,\n * no less).\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references\n * @param {number} periodStart\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifySegments = function(\n    references, periodStart) {\n  if (references.length == 0) {\n    return;\n  }\n\n  // TODO: Make SegmentReferences use timestamps in the presentation timeline,\n  // not the period timeline.\n  const firstReferenceStartTime = references[0].startTime + periodStart;\n  const lastReferenceEndTime =\n      references[references.length - 1].endTime + periodStart;\n\n  this.notifyMinSegmentStartTime(firstReferenceStartTime);\n\n  this.maxSegmentDuration_ = references.reduce(\n      function(max, r) { return Math.max(max, r.endTime - r.startTime); },\n      this.maxSegmentDuration_);\n\n  this.maxSegmentEndTime_ =\n      Math.max(this.maxSegmentEndTime_, lastReferenceEndTime);\n\n  if (this.presentationStartTime_ != null && this.autoCorrectDrift_) {\n    // Since we have explicit segment end times, calculate a presentation start\n    // based on them.  This start time accounts for drift.\n    // Date.now() is in milliseconds, from which we compute \"now\" in seconds.\n    let now = (Date.now() + this.clockOffset_) / 1000.0;\n    this.presentationStartTime_ =\n        now - this.maxSegmentEndTime_ - this.maxSegmentDuration_;\n  }\n\n  shaka.log.v1('notifySegments:',\n               'maxSegmentDuration=' + this.maxSegmentDuration_);\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's minimum segment start time.\n *\n * @param {number} startTime\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifyMinSegmentStartTime = function(\n    startTime) {\n  if (this.minSegmentStartTime_ == null) {\n    // No data yet, and Math.min(null, startTime) is always 0.  So just store\n    // startTime.\n    this.minSegmentStartTime_ = startTime;\n  } else {\n    this.minSegmentStartTime_ =\n        Math.min(this.minSegmentStartTime_, startTime);\n  }\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's maximum segment duration so it can\n * size and position the segment availability window.  This function should be\n * called once for each Stream (no more, no less), but does not have to be\n * called if notifySegments() is called instead for a particular stream.\n *\n * @param {number} maxSegmentDuration The maximum segment duration for a\n *   particular stream.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifyMaxSegmentDuration = function(\n    maxSegmentDuration) {\n  this.maxSegmentDuration_ = Math.max(\n      this.maxSegmentDuration_, maxSegmentDuration);\n\n  shaka.log.v1('notifyNewSegmentDuration:',\n               'maxSegmentDuration=' + this.maxSegmentDuration_);\n};\n\n\n/**\n * Offsets the segment times by the given amount.\n *\n * @param {number} offset The number of seconds to offset by.  A positive number\n *   adjusts the segment times forward.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.offset = function(offset) {\n  if (this.minSegmentStartTime_ != null) {\n    this.minSegmentStartTime_ += offset;\n  }\n  if (this.maxSegmentEndTime_ != null) {\n    this.maxSegmentEndTime_ += offset;\n  }\n};\n\n\n/**\n * @return {boolean} True if the presentation is live; otherwise, return\n *   false.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.isLive = function() {\n  return this.duration_ == Infinity &&\n         !this.static_;\n};\n\n\n/**\n * @return {boolean} True if the presentation is in progress (meaning not live,\n *   but also not completely available); otherwise, return false.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.isInProgress = function() {\n  return this.duration_ != Infinity &&\n         !this.static_;\n};\n\n\n/**\n * Gets the presentation's current segment availability start time.  Segments\n * ending at or before this time should be assumed to be unavailable.\n *\n * @return {number} The current segment availability start time, in seconds,\n *   relative to the start of the presentation.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSegmentAvailabilityStart =\n    function() {\n  goog.asserts.assert(this.segmentAvailabilityDuration_ >= 0,\n                      'The availability duration should be positive');\n\n  if (this.segmentAvailabilityDuration_ == Infinity) {\n    return this.userSeekStart_;\n  }\n\n  let end = this.getSegmentAvailabilityEnd();\n  let start = end - this.segmentAvailabilityDuration_;\n  return Math.max(this.userSeekStart_, start);\n};\n\n\n/**\n * Sets the start time of the user-defined seek range.  This is only used for\n * VOD content.\n *\n * @param {number} time\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setUserSeekStart =\n    function(time) {\n  this.userSeekStart_ = time;\n};\n\n\n/**\n * Gets the presentation's current segment availability end time.  Segments\n * starting after this time should be assumed to be unavailable.\n *\n * @return {number} The current segment availability end time, in seconds,\n *   relative to the start of the presentation.  Always returns the\n *   presentation's duration for video-on-demand.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSegmentAvailabilityEnd =\n    function() {\n  if (!this.isLive() && !this.isInProgress()) {\n    return this.duration_;\n  }\n\n  return Math.min(this.getLiveEdge_(), this.duration_);\n};\n\n\n/**\n * Gets the seek range start time, offset by the given amount.  This is used to\n * ensure that we don't \"fall\" back out of the seek window while we are\n * buffering.\n *\n * @param {number} offset The offset to add to the start time.\n * @return {number} The current seek start time, in seconds, relative to the\n *   start of the presentation.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSafeSeekRangeStart = function(\n    offset) {\n  // The earliest known segment time, ignoring segment availability duration.\n  const earliestSegmentTime =\n      Math.max(this.minSegmentStartTime_, this.userSeekStart_);\n  if (this.segmentAvailabilityDuration_ == Infinity) {\n    return earliestSegmentTime;\n  }\n\n  // AKA the live edge for live streams.\n  const availabilityEnd = this.getSegmentAvailabilityEnd();\n\n  // The ideal availability start, not considering known segments.\n  const availabilityStart = availabilityEnd - this.segmentAvailabilityDuration_;\n\n  // Add the offset to the availability start to ensure that we don't fall\n  // outside the availability window while we buffer; we don't need to add the\n  // offset to earliestSegmentTime since that won't change over time.\n  // Also see: https://github.com/google/shaka-player/issues/692\n  const desiredStart =\n      Math.min(availabilityStart + offset, this.getSeekRangeEnd());\n  return Math.max(earliestSegmentTime, desiredStart);\n};\n\n\n/**\n * Gets the seek range start time.\n *\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSeekRangeStart = function() {\n  return this.getSafeSeekRangeStart(/* offset */ 0);\n};\n\n\n/**\n * Gets the seek range end.\n *\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSeekRangeEnd = function() {\n  let useDelay = this.isLive() || this.isInProgress();\n  let delay = useDelay ? this.presentationDelay_ : 0;\n  return Math.max(0, this.getSegmentAvailabilityEnd() - delay);\n};\n\n\n/**\n * True if the presentation start time is being used to calculate the live edge.\n * Using the presentation start time means that the stream may be subject to\n * encoder drift.  At runtime, we will avoid using the presentation start time\n * whenever possible.\n *\n * @return {boolean}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.usingPresentationStartTime =\n    function() {\n  // If it's VOD, IPR, or an HLS \"event\", we are not using the presentation\n  // start time.\n  if (this.presentationStartTime_ == null) {\n    return false;\n  }\n\n  // If we have explicit segment times, we're not using the presentation\n  // start time.\n  if (this.maxSegmentEndTime_ != null) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @return {number} The current presentation time in seconds.\n * @private\n */\nshaka.media.PresentationTimeline.prototype.getLiveEdge_ = function() {\n  goog.asserts.assert(this.presentationStartTime_ != null,\n                      'Cannot compute timeline live edge without start time');\n  // Date.now() is in milliseconds, from which we compute \"now\" in seconds.\n  let now = (Date.now() + this.clockOffset_) / 1000.0;\n  return Math.max(\n      0, now - this.maxSegmentDuration_ - this.presentationStartTime_);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Debug only: assert that the timeline parameters make sense for the type of\n   *   presentation (VOD, IPR, live).\n   */\n  shaka.media.PresentationTimeline.prototype.assertIsValid = function() {\n    if (this.isLive()) {\n      // Implied by isLive(): infinite and dynamic.\n      // Live streams should have a start time.\n      goog.asserts.assert(this.presentationStartTime_ != null,\n          'Detected as live stream, but does not match our model of live!');\n    } else if (this.isInProgress()) {\n      // Implied by isInProgress(): finite and dynamic.\n      // IPR streams should have a start time, and segments should not expire.\n      goog.asserts.assert(this.presentationStartTime_ != null &&\n                          this.segmentAvailabilityDuration_ == Infinity,\n          'Detected as IPR stream, but does not match our model of IPR!');\n    } else {  // VOD\n      // VOD segments should not expire and the presentation should be finite\n      // and static.\n      goog.asserts.assert(this.segmentAvailabilityDuration_ == Infinity &&\n                          this.duration_ != Infinity &&\n                          this.static_,\n          'Detected as VOD stream, but does not match our model of VOD!');\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Networking');\n\n\n/**\n * A collection of shared utilities that bridge the gap between our networking\n * code and the other parts of our code base. This is to allow\n * |shaka.net.NetworkingEngine| to remain general.\n *\n * @final\n */\nshaka.util.Networking = class {\n  /**\n   * Create a request message for a segment. Providing |start| and |end|\n   * will set the byte range. A non-zero start must be provided for |end| to\n   * be used.\n   *\n   * @param {!Array.<string>} uris\n   * @param {?number} start\n   * @param {?number} end\n   * @param {shaka.extern.RetryParameters} retryParameters\n   * @return {shaka.extern.Request}\n   */\n  static createSegmentRequest(uris, start, end, retryParameters) {\n    const request = shaka.net.NetworkingEngine.makeRequest(\n        uris, retryParameters);\n\n    if (start == 0 && end == null) {\n      // This is a request for the entire segment.  The Range header is not\n      // required.  Note that some web servers don't accept Range headers, so\n      // don't set one if it's not strictly required.\n    } else {\n      if (end) {\n        request.headers['Range'] = 'bytes=' + start + '-' + end;\n      } else {\n        request.headers['Range'] = 'bytes=' + start + '-';\n      }\n    }\n\n    return request;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.DashParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.abr.Ewma');\ngoog.require('shaka.dash.ContentProtection');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.dash.SegmentList');\ngoog.require('shaka.dash.SegmentTemplate');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Networking');\ngoog.require('shaka.util.OperationManager');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * Creates a new DASH parser.\n *\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n * @export\n */\nshaka.dash.DashParser = function() {\n  /** @private {?shaka.extern.ManifestConfiguration} */\n  this.config_ = null;\n\n  /** @private {?shaka.extern.ManifestParser.PlayerInterface} */\n  this.playerInterface_ = null;\n\n  /** @private {!Array.<string>} */\n  this.manifestUris_ = [];\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {!Array.<string>} */\n  this.periodIds_ = [];\n\n  /** @private {number} */\n  this.globalId_ = 1;\n\n  /**\n   * A map of IDs to SegmentIndex objects.\n   * ID: Period@id,AdaptationSet@id,@Representation@id\n   * e.g.: '1,5,23'\n   * @private {!Object.<string, !shaka.media.SegmentIndex>}\n   */\n  this.segmentIndexMap_ = {};\n\n  /**\n   * The update period in seconds, or 0 for no updates.\n   * @private {number}\n   */\n  this.updatePeriod_ = 0;\n\n  /**\n   * An ewma that tracks how long updates take.\n   * This is to mitigate issues caused by slow parsing on embedded devices.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.averageUpdateDuration_ = new shaka.abr.Ewma(5);\n\n  /** @private {shaka.util.Timer} */\n  this.updateTimer_ = new shaka.util.Timer(() => {\n    this.onUpdate_();\n  });\n\n  /** @private {!shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n};\n\n\n/**\n * Contains the minimum amount of time, in seconds, between manifest update\n * requests.\n *\n * @private\n * @const {number}\n */\nshaka.dash.DashParser.MIN_UPDATE_PERIOD_ = 3;\n\n\n/**\n * @typedef {\n *   function(!Array.<string>, ?number, ?number):!Promise.<!ArrayBuffer>\n * }\n */\nshaka.dash.DashParser.RequestInitSegmentCallback;\n\n\n/**\n * @typedef {{\n *   segmentBase: Element,\n *   segmentList: Element,\n *   segmentTemplate: Element,\n *   baseUris: !Array.<string>,\n *   width: (number|undefined),\n *   height: (number|undefined),\n *   contentType: string,\n *   mimeType: string,\n *   codecs: string,\n *   frameRate: (number|undefined),\n *   emsgSchemeIdUris: !Array.<string>,\n *   id: ?string,\n *   numChannels: ?number\n * }}\n *\n * @description\n * A collection of elements and properties which are inherited across levels\n * of a DASH manifest.\n *\n * @property {Element} segmentBase\n *   The XML node for SegmentBase.\n * @property {Element} segmentList\n *   The XML node for SegmentList.\n * @property {Element} segmentTemplate\n *   The XML node for SegmentTemplate.\n * @property {!Array.<string>} baseUris\n *   An array of absolute base URIs for the frame.\n * @property {(number|undefined)} width\n *   The inherited width value.\n * @property {(number|undefined)} height\n *   The inherited height value.\n * @property {string} contentType\n *   The inherited media type.\n * @property {string} mimeType\n *   The inherited MIME type value.\n * @property {string} codecs\n *   The inherited codecs value.\n * @property {(number|undefined)} frameRate\n *   The inherited framerate value.\n * @property {!Array.<string>} emsgSchemeIdUris\n *   emsg registered schemeIdUris.\n * @property {?string} id\n *   The ID of the element.\n * @property {?number} numChannels\n *   The number of audio channels, or null if unknown.\n */\nshaka.dash.DashParser.InheritanceFrame;\n\n\n/**\n * @typedef {{\n *   dynamic: boolean,\n *   presentationTimeline: !shaka.media.PresentationTimeline,\n *   period: ?shaka.dash.DashParser.InheritanceFrame,\n *   periodInfo: ?shaka.dash.DashParser.PeriodInfo,\n *   adaptationSet: ?shaka.dash.DashParser.InheritanceFrame,\n *   representation: ?shaka.dash.DashParser.InheritanceFrame,\n *   bandwidth: number,\n *   indexRangeWarningGiven: boolean\n * }}\n *\n * @description\n * Contains context data for the streams.\n *\n * @property {boolean} dynamic\n *   True if the MPD is dynamic (not all segments available at once)\n * @property {!shaka.media.PresentationTimeline} presentationTimeline\n *   The PresentationTimeline.\n * @property {?shaka.dash.DashParser.InheritanceFrame} period\n *   The inheritance from the Period element.\n * @property {?shaka.dash.DashParser.PeriodInfo} periodInfo\n *   The Period info for the current Period.\n * @property {?shaka.dash.DashParser.InheritanceFrame} adaptationSet\n *   The inheritance from the AdaptationSet element.\n * @property {?shaka.dash.DashParser.InheritanceFrame} representation\n *   The inheritance from the Representation element.\n * @property {number} bandwidth\n *   The bandwidth of the Representation, or zero if missing.\n * @property {boolean} indexRangeWarningGiven\n *   True if the warning about SegmentURL@indexRange has been printed.\n */\nshaka.dash.DashParser.Context;\n\n\n/**\n * @typedef {{\n *   start: number,\n *   duration: ?number,\n *   node: !Element,\n *   isLastPeriod: boolean\n * }}\n *\n * @description\n * Contains information about a Period element.\n *\n * @property {number} start\n *   The start time of the period.\n * @property {?number} duration\n *   The duration of the period; or null if the duration is not given.  This\n *   will be non-null for all periods except the last.\n * @property {!Element} node\n *   The XML Node for the Period.\n * @property {boolean} isLastPeriod\n *   Whether this Period is the last one in the manifest.\n */\nshaka.dash.DashParser.PeriodInfo;\n\n\n/**\n * @typedef {{\n *   id: string,\n *   contentType: ?string,\n *   language: string,\n *   main: boolean,\n *   streams: !Array.<shaka.extern.Stream>,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   trickModeFor: ?string,\n *   representationIds: !Array.<string>\n * }}\n *\n * @description\n * Contains information about an AdaptationSet element.\n *\n * @property {string} id\n *   The unique ID of the adaptation set.\n * @property {?string} contentType\n *   The content type of the AdaptationSet.\n * @property {string} language\n *   The language of the AdaptationSet.\n * @property {boolean} main\n *   Whether the AdaptationSet has the 'main' type.\n * @property {!Array.<shaka.extern.Stream>} streams\n *   The streams this AdaptationSet contains.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   The DRM info for the AdaptationSet.\n * @property {?string} trickModeFor\n *   If non-null, this AdaptationInfo represents trick mode tracks.  This\n *   property is the ID of the normal AdaptationSet these tracks should be\n *   associated with.\n * @property {!Array.<string>} representationIds\n *   An array of the IDs of the Representations this AdaptationSet contains.\n */\nshaka.dash.DashParser.AdaptationInfo;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shaka.extern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shaka.extern.FindSegmentPositionFunction,\n *   getSegmentReference: shaka.extern.GetSegmentReferenceFunction\n * }}\n *\n * @description\n * Contains functions used to create and find segment references.  Used as\n * a return value, to temporarily store them before StreamInfo is created.\n *\n * @property {shaka.extern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function.\n * @property {shaka.extern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function.\n * @property {shaka.extern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function.\n */\nshaka.dash.DashParser.SegmentIndexFunctions;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shaka.extern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shaka.extern.FindSegmentPositionFunction,\n *   getSegmentReference: shaka.extern.GetSegmentReferenceFunction,\n *   initSegmentReference: shaka.media.InitSegmentReference,\n *   scaledPresentationTimeOffset: number\n * }}\n *\n * @description\n * Contains information about a Stream.  This is passed from the createStream\n * methods.\n *\n * @property {shaka.extern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function for the stream.\n * @property {shaka.extern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function for the stream.\n * @property {shaka.extern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function for the stream.\n * @property {shaka.media.InitSegmentReference} initSegmentReference\n *   The init segment for the stream.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset for the stream, in seconds.\n */\nshaka.dash.DashParser.StreamInfo;\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.configure = function(config) {\n  goog.asserts.assert(config.dash != null,\n                      'DashManifestConfiguration should not be null!');\n\n  this.config_ = config;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.start = async function(uri, playerInterface) {\n  goog.asserts.assert(this.config_, 'Must call configure() before start()!');\n  this.manifestUris_ = [uri];\n  this.playerInterface_ = playerInterface;\n\n  const updateDelay = await this.requestManifest_();\n\n  if (this.playerInterface_) {\n    this.setUpdateTimer_(updateDelay);\n  }\n\n  // Make sure that the parser has not been destroyed.\n  if (!this.playerInterface_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n\n  goog.asserts.assert(this.manifest_, 'Manifest should be non-null!');\n  return this.manifest_;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.stop = function() {\n  this.playerInterface_ = null;\n  this.config_ = null;\n  this.manifestUris_ = [];\n  this.manifest_ = null;\n  this.periodIds_ = [];\n  this.segmentIndexMap_ = {};\n\n  if (this.updateTimer_ != null) {\n    this.updateTimer_.stop();\n    this.updateTimer_ = null;\n  }\n\n  return this.operationManager_.destroy();\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.update = function() {\n  this.requestManifest_().catch(function(error) {\n    if (!this.playerInterface_) return;\n    this.playerInterface_.onError(error);\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.onExpirationUpdated = function(\n    sessionId, expiration) {\n  // No-op\n};\n\n\n/**\n * Makes a network request for the manifest and parses the resulting data.\n *\n * @return {!Promise.<number>} Resolves with the time it took, in seconds, to\n *   fulfill the request and parse the data.\n * @private\n */\nshaka.dash.DashParser.prototype.requestManifest_ = function() {\n  const requestType = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      this.manifestUris_, this.config_.retryParameters);\n  let networkingEngine = this.playerInterface_.networkingEngine;\n\n  const startTime = Date.now();\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n\n  return operation.promise.then((response) => {\n    // Detect calls to stop().\n    if (!this.playerInterface_) {\n      return;\n    }\n\n    // For redirections add the response uri to the first entry in the\n    // Manifest Uris array.\n    if (response.uri && !this.manifestUris_.includes(response.uri)) {\n      this.manifestUris_.unshift(response.uri);\n    }\n\n    // This may throw, but it will result in a failed promise.\n    return this.parseManifest_(response.data, response.uri);\n  }).then(() => {\n    // Keep track of how long the longest manifest update took.\n    const endTime = Date.now();\n    const updateDuration = (endTime - startTime) / 1000.0;\n    this.averageUpdateDuration_.sample(1, updateDuration);\n\n    // Let the caller know how long this update took.\n    return updateDuration;\n  });\n};\n\n\n/**\n * Parses the manifest XML.  This also handles updates and will update the\n * stored manifest.\n *\n * @param {ArrayBuffer} data\n * @param {string} finalManifestUri The final manifest URI, which may\n *   differ from this.manifestUri_ if there has been a redirect.\n * @return {!Promise}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseManifest_ =\n    function(data, finalManifestUri) {\n  const Error = shaka.util.Error;\n  const MpdUtils = shaka.dash.MpdUtils;\n\n  let mpd = shaka.util.XmlUtils.parseXml(data, 'MPD');\n  if (!mpd) {\n    throw new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_INVALID_XML, finalManifestUri);\n  }\n\n  // Process the mpd to account for xlink connections.\n  let failGracefully = this.config_.dash.xlinkFailGracefully;\n  let xlinkOperation = MpdUtils.processXlinks(\n      mpd, this.config_.retryParameters, failGracefully, finalManifestUri,\n      this.playerInterface_.networkingEngine);\n  this.operationManager_.manage(xlinkOperation);\n  return xlinkOperation.promise.then((finalMpd) => {\n    return this.processManifest_(finalMpd, finalManifestUri);\n  });\n};\n\n\n/**\n * Takes a formatted MPD and converts it into a manifest.\n *\n * @param {!Element} mpd\n * @param {string} finalManifestUri The final manifest URI, which may\n *   differ from this.manifestUri_ if there has been a redirect.\n * @return {!Promise}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.processManifest_ =\n    async function(mpd, finalManifestUri) {\n  const Functional = shaka.util.Functional;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  // Get any Location elements.  This will update the manifest location and\n  // the base URI.\n  /** @type {!Array.<string>} */\n  let manifestBaseUris = [finalManifestUri];\n  /** @type {!Array.<string>} */\n  let locations = XmlUtils.findChildren(mpd, 'Location')\n                      .map(XmlUtils.getContents)\n                      .filter(Functional.isNotNull);\n  if (locations.length > 0) {\n    const absoluteLocations = shaka.util.ManifestParserUtils.resolveUris(\n          manifestBaseUris, locations);\n    this.manifestUris_ = absoluteLocations;\n    manifestBaseUris = absoluteLocations;\n  }\n\n  let uris = XmlUtils.findChildren(mpd, 'BaseURL').map(XmlUtils.getContents);\n  let baseUris = shaka.util.ManifestParserUtils.resolveUris(\n      manifestBaseUris, uris);\n\n  let ignoreMinBufferTime = this.config_.dash.ignoreMinBufferTime;\n  let minBufferTime = 0;\n  if (!ignoreMinBufferTime) {\n    minBufferTime =\n      XmlUtils.parseAttr(mpd, 'minBufferTime', XmlUtils.parseDuration);\n  }\n\n  this.updatePeriod_ = /** @type {number} */ (XmlUtils.parseAttr(\n      mpd, 'minimumUpdatePeriod', XmlUtils.parseDuration, -1));\n\n  let presentationStartTime = XmlUtils.parseAttr(\n      mpd, 'availabilityStartTime', XmlUtils.parseDate);\n  let segmentAvailabilityDuration = XmlUtils.parseAttr(\n      mpd, 'timeShiftBufferDepth', XmlUtils.parseDuration);\n  let suggestedPresentationDelay = XmlUtils.parseAttr(\n      mpd, 'suggestedPresentationDelay', XmlUtils.parseDuration);\n  let maxSegmentDuration = XmlUtils.parseAttr(\n      mpd, 'maxSegmentDuration', XmlUtils.parseDuration);\n  let mpdType = mpd.getAttribute('type') || 'static';\n\n  /** @type {!shaka.media.PresentationTimeline} */\n  let presentationTimeline;\n  if (this.manifest_) {\n    presentationTimeline = this.manifest_.presentationTimeline;\n  } else {\n    // DASH IOP v3.0 suggests using a default delay between minBufferTime and\n    // timeShiftBufferDepth.  This is literally the range of all feasible\n    // choices for the value.  Nothing older than timeShiftBufferDepth is still\n    // available, and anything less than minBufferTime will cause buffering\n    // issues.\n    //\n    // We have decided that our default will be 1.5 * minBufferTime,\n    // or 10s (configurable) whichever is larger.  This is fairly conservative.\n    // Content providers should provide a suggestedPresentationDelay\n    // whenever possible to optimize the live streaming experience.\n    let defaultPresentationDelay = Math.max(\n        this.config_.dash.defaultPresentationDelay,\n        minBufferTime * 1.5);\n    let presentationDelay = suggestedPresentationDelay != null ?\n        suggestedPresentationDelay : defaultPresentationDelay;\n    presentationTimeline = new shaka.media.PresentationTimeline(\n        presentationStartTime, presentationDelay,\n        this.config_.dash.autoCorrectDrift);\n  }\n\n  /** @type {shaka.dash.DashParser.Context} */\n  let context = {\n    // Don't base on updatePeriod_ since emsg boxes can cause manifest updates.\n    dynamic: mpdType != 'static',\n    presentationTimeline: presentationTimeline,\n    period: null,\n    periodInfo: null,\n    adaptationSet: null,\n    representation: null,\n    bandwidth: 0,\n    indexRangeWarningGiven: false,\n  };\n\n  let periodsAndDuration = this.parsePeriods_(context, baseUris, mpd);\n  let duration = periodsAndDuration.duration;\n  let periods = periodsAndDuration.periods;\n\n  presentationTimeline.setStatic(mpdType == 'static');\n  if (mpdType == 'static' || !periodsAndDuration.durationDerivedFromPeriods) {\n    // Ignore duration calculated from Period lengths if this is dynamic.\n    presentationTimeline.setDuration(duration || Infinity);\n  }\n\n  let isLive = presentationTimeline.isLive();\n\n  // If it's live, we check for an override.\n  if (isLive && !isNaN(this.config_.availabilityWindowOverride)) {\n    segmentAvailabilityDuration = this.config_.availabilityWindowOverride;\n  }\n\n  // If it's null, that means segments are always available.  This is always the\n  // case for VOD, and sometimes the case for live.\n  if (segmentAvailabilityDuration == null) {\n    segmentAvailabilityDuration = Infinity;\n  }\n\n  presentationTimeline.setSegmentAvailabilityDuration(\n      segmentAvailabilityDuration);\n\n  // Use @maxSegmentDuration to override smaller, derived values.\n  presentationTimeline.notifyMaxSegmentDuration(maxSegmentDuration || 1);\n  if (goog.DEBUG) presentationTimeline.assertIsValid();\n\n  // These steps are not done on manifest update.\n  if (!this.manifest_) {\n    this.manifest_ = {\n      presentationTimeline: presentationTimeline,\n      periods: periods,\n      offlineSessionIds: [],\n      minBufferTime: minBufferTime || 0,\n    };\n\n    // We only need to do clock sync when we're using presentation start time.\n    // This condition also excludes VOD streams.\n    if (presentationTimeline.usingPresentationStartTime()) {\n      let timingElements = XmlUtils.findChildren(mpd, 'UTCTiming');\n      const offset = await this.parseUtcTiming_(baseUris, timingElements);\n      // Detect calls to stop().\n      if (!this.playerInterface_) {\n        return;\n      }\n      presentationTimeline.setClockOffset(offset);\n    }\n  }\n};\n\n\n/**\n * Reads and parses the periods from the manifest.  This first does some\n * partial parsing so the start and duration is available when parsing children.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Array.<string>} baseUris\n * @param {!Element} mpd\n * @return {{\n *   periods: !Array.<shaka.extern.Period>,\n *   duration: ?number,\n *   durationDerivedFromPeriods: boolean\n * }}\n * @private\n */\nshaka.dash.DashParser.prototype.parsePeriods_ = function(\n    context, baseUris, mpd) {\n  const XmlUtils = shaka.util.XmlUtils;\n  let presentationDuration = XmlUtils.parseAttr(\n      mpd, 'mediaPresentationDuration', XmlUtils.parseDuration);\n\n  let periods = [];\n  let prevEnd = 0;\n  let periodNodes = XmlUtils.findChildren(mpd, 'Period');\n  for (let i = 0; i < periodNodes.length; i++) {\n    let elem = periodNodes[i];\n    let start = /** @type {number} */ (\n        XmlUtils.parseAttr(elem, 'start', XmlUtils.parseDuration, prevEnd));\n    let givenDuration =\n        XmlUtils.parseAttr(elem, 'duration', XmlUtils.parseDuration);\n\n    let periodDuration = null;\n    if (i != periodNodes.length - 1) {\n      // \"The difference between the start time of a Period and the start time\n      // of the following Period is the duration of the media content\n      // represented by this Period.\"\n      let nextPeriod = periodNodes[i + 1];\n      let nextStart =\n          XmlUtils.parseAttr(nextPeriod, 'start', XmlUtils.parseDuration);\n      if (nextStart != null) {\n        periodDuration = nextStart - start;\n      }\n    } else if (presentationDuration != null) {\n      // \"The Period extends until the Period.start of the next Period, or\n      // until the end of the Media Presentation in the case of the last\n      // Period.\"\n      periodDuration = presentationDuration - start;\n    }\n\n    let threshold =\n        shaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS;\n    if (periodDuration && givenDuration &&\n        Math.abs(periodDuration - givenDuration) > threshold) {\n      shaka.log.warning('There is a gap/overlap between Periods', elem);\n    }\n    // Only use the @duration in the MPD if we can't calculate it.  We should\n    // favor the @start of the following Period.  This ensures that there aren't\n    // gaps between Periods.\n    if (periodDuration == null) {\n      periodDuration = givenDuration;\n    }\n\n    // Parse child nodes.\n    let info = {\n      start: start,\n      duration: periodDuration,\n      node: elem,\n      isLastPeriod: periodDuration == null || i == periodNodes.length - 1,\n    };\n    let period = this.parsePeriod_(context, baseUris, info);\n    periods.push(period);\n\n    // If the period ID is new, add it to the list.  This must be done for both\n    // the initial manifest parse and for updates.\n    // See https://github.com/google/shaka-player/issues/963\n    let periodId = context.period.id;\n    goog.asserts.assert(periodId, 'Period IDs should not be null!');\n    if (!this.periodIds_.includes(periodId)) {\n      this.periodIds_.push(periodId);\n\n      // If this is an update, call filterNewPeriod and add it to the manifest.\n      // If this is the first parse of the manifest (this.manifest_ == null),\n      // filterAllPeriods will be called later.\n      if (this.manifest_) {\n        this.playerInterface_.filterNewPeriod(period);\n        this.manifest_.periods.push(period);\n      }\n    }\n\n    if (periodDuration == null) {\n      if (i != periodNodes.length - 1) {\n        // If the duration is still null and we aren't at the end, then we will\n        // skip any remaining periods.\n        shaka.log.warning(\n            'Skipping Period', i + 1, 'and any subsequent Periods:', 'Period',\n            i + 1, 'does not have a valid start time.', periods[i + 1]);\n      }\n\n      // The duration is unknown, so the end is unknown.\n      prevEnd = null;\n      break;\n    }\n\n    prevEnd = start + periodDuration;\n  } // end of period parsing loop\n\n  // Call filterAllPeriods if this is the initial parse.\n  if (this.manifest_ == null) {\n    this.playerInterface_.filterAllPeriods(periods);\n  }\n\n  if (presentationDuration != null) {\n    if (prevEnd != presentationDuration) {\n      shaka.log.warning(\n          '@mediaPresentationDuration does not match the total duration of all',\n          'Periods.');\n      // Assume @mediaPresentationDuration is correct.\n    }\n    return {\n      periods: periods,\n      duration: presentationDuration,\n      durationDerivedFromPeriods: false,\n    };\n  } else {\n    return {\n      periods: periods,\n      duration: prevEnd,\n      durationDerivedFromPeriods: true,\n    };\n  }\n};\n\n\n/**\n * Parses a Period XML element.  Unlike the other parse methods, this is not\n * given the Node; it is given a PeriodInfo structure.  Also, partial parsing\n * was done before this was called so start and duration are valid.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Array.<string>} baseUris\n * @param {shaka.dash.DashParser.PeriodInfo} periodInfo\n * @return {shaka.extern.Period}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parsePeriod_ = function(\n    context, baseUris, periodInfo) {\n  const Functional = shaka.util.Functional;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  context.period = this.createFrame_(periodInfo.node, null, baseUris);\n  context.periodInfo = periodInfo;\n\n  // If the period doesn't have an ID, give it one based on its start time.\n  if (!context.period.id) {\n    shaka.log.info(\n        'No Period ID given for Period with start time ' + periodInfo.start +\n        ',  Assigning a default');\n    context.period.id = '__shaka_period_' + periodInfo.start;\n  }\n\n  let eventStreamNodes = XmlUtils.findChildren(periodInfo.node, 'EventStream');\n  eventStreamNodes.forEach(\n      this.parseEventStream_.bind(this, periodInfo.start, periodInfo.duration));\n\n  let adaptationSetNodes =\n      XmlUtils.findChildren(periodInfo.node, 'AdaptationSet');\n  let adaptationSets = adaptationSetNodes\n      .map(this.parseAdaptationSet_.bind(this, context))\n      .filter(Functional.isNotNull);\n\n  // For dynamic manifests, we use rep IDs internally, and they must be unique.\n  if (context.dynamic) {\n    const ids = [];\n    for (const set of adaptationSets) {\n      for (const id of set.representationIds) {\n        ids.push(id);\n      }\n    }\n\n    const uniqueIds = new Set(ids);\n\n    if (ids.length != uniqueIds.size) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_DUPLICATE_REPRESENTATION_ID);\n    }\n  }\n\n  let normalAdaptationSets = adaptationSets\n      .filter(function(as) { return !as.trickModeFor; });\n\n  let trickModeAdaptationSets = adaptationSets\n      .filter(function(as) { return as.trickModeFor; });\n\n  // Attach trick mode tracks to normal tracks.\n  trickModeAdaptationSets.forEach(function(trickModeSet) {\n    // There may be multiple trick mode streams, but we do not currently\n    // support that.  Just choose one.\n    let trickModeVideo = trickModeSet.streams[0];\n    let targetId = trickModeSet.trickModeFor;\n    normalAdaptationSets.forEach(function(normalSet) {\n      if (normalSet.id == targetId) {\n        normalSet.streams.forEach(function(stream) {\n          stream.trickModeVideo = trickModeVideo;\n        });\n      }\n    });\n  });\n\n  let videoSets = this.getSetsOfType_(normalAdaptationSets, ContentType.VIDEO);\n  let audioSets = this.getSetsOfType_(normalAdaptationSets, ContentType.AUDIO);\n\n  if (!videoSets.length && !audioSets.length) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_EMPTY_PERIOD);\n  }\n\n  // In case of audio-only or video-only content, we create an array of one item\n  // containing a null.  This way, the double-loop works for all kinds of\n  // content.\n  if (!audioSets.length) {\n    audioSets = [null];\n  }\n  if (!videoSets.length) {\n    videoSets = [null];\n  }\n\n  // TODO: Limit number of combinations.  Come up with a heuristic\n  // to decide which audio tracks to combine with which video tracks.\n  let variants = [];\n  for (let i = 0; i < audioSets.length; i++) {\n    for (let j = 0; j < videoSets.length; j++) {\n      let audioSet = audioSets[i];\n      let videoSet = videoSets[j];\n      this.createVariants_(audioSet, videoSet, variants);\n    }\n  }\n\n  let textSets = this.getSetsOfType_(normalAdaptationSets, ContentType.TEXT);\n  let textStreams = [];\n  for (let i = 0; i < textSets.length; i++) {\n    textStreams.push.apply(textStreams, textSets[i].streams);\n  }\n\n  return {\n    startTime: periodInfo.start,\n    textStreams: textStreams,\n    variants: variants,\n  };\n};\n\n\n/**\n * @param {!Array.<!shaka.dash.DashParser.AdaptationInfo>} adaptationSets\n * @param {string} type\n * @return {!Array.<!shaka.dash.DashParser.AdaptationInfo>}\n * @private\n */\nshaka.dash.DashParser.prototype.getSetsOfType_ = function(\n    adaptationSets, type) {\n  return adaptationSets.filter(function(as) {\n    return as.contentType == type;\n  });\n};\n\n\n/**\n * Combines Streams into Variants\n *\n * @param {?shaka.dash.DashParser.AdaptationInfo} audio\n * @param {?shaka.dash.DashParser.AdaptationInfo} video\n * @param {!Array.<shaka.extern.Variant>} variants New variants are pushed onto\n *   this array.\n * @private\n */\nshaka.dash.DashParser.prototype.createVariants_ =\n    function(audio, video, variants) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Since both audio and video are of the same type, this assertion will catch\n  // certain mistakes at runtime that the compiler would miss.\n  goog.asserts.assert(!audio || audio.contentType == ContentType.AUDIO,\n                      'Audio parameter mismatch!');\n  goog.asserts.assert(!video || video.contentType == ContentType.VIDEO,\n                      'Video parameter mismatch!');\n\n  /** @type {number} */\n  let bandwidth;\n  /** @type {shaka.extern.Variant} */\n  let variant;\n\n  if (!audio && !video) {\n    return;\n  }\n\n  if (audio && video) {\n    // Audio+video variants\n    const DrmEngine = shaka.media.DrmEngine;\n    if (DrmEngine.areDrmCompatible(audio.drmInfos, video.drmInfos)) {\n      let drmInfos = DrmEngine.getCommonDrmInfos(audio.drmInfos,\n                                                 video.drmInfos);\n\n      for (let i = 0; i < audio.streams.length; i++) {\n        for (let j = 0; j < video.streams.length; j++) {\n          bandwidth =\n              (video.streams[j].bandwidth || 0) +\n              (audio.streams[i].bandwidth || 0);\n          variant = {\n            id: this.globalId_++,\n            language: audio.language,\n            primary: audio.main || video.main,\n            audio: audio.streams[i],\n            video: video.streams[j],\n            bandwidth: bandwidth,\n            drmInfos: drmInfos,\n            allowedByApplication: true,\n            allowedByKeySystem: true,\n          };\n\n          variants.push(variant);\n        }\n      }\n    }\n  } else {\n    // Audio or video only variants\n    let set = audio || video;\n    for (let i = 0; i < set.streams.length; i++) {\n      bandwidth = set.streams[i].bandwidth || 0;\n      variant = {\n        id: this.globalId_++,\n        language: set.language || 'und',\n        primary: set.main,\n        audio: audio ? set.streams[i] : null,\n        video: video ? set.streams[i] : null,\n        bandwidth: bandwidth,\n        drmInfos: set.drmInfos,\n        allowedByApplication: true,\n        allowedByKeySystem: true,\n      };\n\n      variants.push(variant);\n    }\n  }\n};\n\n\n/**\n * Parses an AdaptationSet XML element.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Element} elem The AdaptationSet element.\n * @return {?shaka.dash.DashParser.AdaptationInfo}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseAdaptationSet_ = function(context, elem) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const Functional = shaka.util.Functional;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const ContentType = ManifestParserUtils.ContentType;\n\n  context.adaptationSet = this.createFrame_(elem, context.period, null);\n\n  let main = false;\n  let roleElements = XmlUtils.findChildren(elem, 'Role');\n  let roleValues = roleElements.map(function(role) {\n    return role.getAttribute('value');\n  }).filter(Functional.isNotNull);\n\n  // Default kind for text streams is 'subtitle' if unspecified in the manifest.\n  let kind = undefined;\n  const isText =\n      context.adaptationSet.contentType == ManifestParserUtils.ContentType.TEXT;\n  if (isText) {\n    kind = ManifestParserUtils.TextStreamKind.SUBTITLE;\n  }\n\n  for (let i = 0; i < roleElements.length; i++) {\n    let scheme = roleElements[i].getAttribute('schemeIdUri');\n    if (scheme == null || scheme == 'urn:mpeg:dash:role:2011') {\n      // These only apply for the given scheme, but allow them to be specified\n      // if there is no scheme specified.\n      // See: DASH section 5.8.5.5\n      let value = roleElements[i].getAttribute('value');\n      switch (value) {\n        case 'main':\n          main = true;\n          break;\n        case 'caption':\n        case 'subtitle':\n          kind = value;\n          break;\n      }\n    }\n  }\n\n  let essentialProperties = XmlUtils.findChildren(elem, 'EssentialProperty');\n  // ID of real AdaptationSet if this is a trick mode set:\n  let trickModeFor = null;\n  let unrecognizedEssentialProperty = false;\n  essentialProperties.forEach(function(prop) {\n    let schemeId = prop.getAttribute('schemeIdUri');\n    if (schemeId == 'http://dashif.org/guidelines/trickmode') {\n      trickModeFor = prop.getAttribute('value');\n    } else {\n      unrecognizedEssentialProperty = true;\n    }\n  });\n\n  const accessibilities = XmlUtils.findChildren(elem, 'Accessibility');\n  const LanguageUtils = shaka.util.LanguageUtils;\n  let closedCaptions = new Map();\n  for (const prop of accessibilities) {\n    let schemeId = prop.getAttribute('schemeIdUri');\n    if (schemeId == 'urn:scte:dash:cc:cea-608:2015' ||\n        schemeId == 'urn:scte:dash:cc:cea-708:2015') {\n      let channelId = 1;\n      let closedCaptionsValue = prop.getAttribute('value');\n      if (closedCaptionsValue != null) {\n        closedCaptionsValue.split(';').forEach((captionStr) => {\n          let channel;\n          let language;\n          // Some closed caption descriptions have channel number and language,\n          // like \"CC1=eng\" or \"1=lang:eng\", others may only have the language,\n          // like \"eng\".\n          if (!captionStr.includes('=')) {\n            // Since only odd numbers are used as channel numbers, like CC1,\n            // CC3, CC5, etc, when the channel number is not provided, use an\n            // odd number as the key. https://en.wikipedia.org/wiki/EIA-608\n            channel = 'CC' + channelId;\n            channelId += 2;\n            language = captionStr;\n          } else {\n            const channelAndLanguage = captionStr.split('=');\n            // The channel info can be '1' or 'CC1'.\n            // If the channel info only has channel number(like '1'), add 'CC'\n            // as prefix so that it can be a full channel id (like 'CC1').\n            channel = channelAndLanguage[0].startsWith('CC') ?\n                channelAndLanguage[0] : 'CC' + channelAndLanguage[0];\n            // The language info can be different formats, like 'eng',\n            // 'lang:eng', or 'lang:eng,war:1,er:1'. Extract the language info\n            // and convert it to 2-letter language code format.\n            language = channelAndLanguage[1].split(',')[0].split(':').pop();\n          }\n          closedCaptions.set(channel, LanguageUtils.normalize(language));\n        });\n      } else {\n        // If channel and language information has not been provided, assign\n        // 'CC1' as channel id and 'und' as language info.\n        closedCaptions.set('CC1', 'und');\n      }\n    }\n  }\n\n  // According to DASH spec (2014) section 5.8.4.8, \"the successful processing\n  // of the descriptor is essential to properly use the information in the\n  // parent element\".  According to DASH IOP v3.3, section 3.3.4, \"if the scheme\n  // or the value\" for EssentialProperty is not recognized, \"the DASH client\n  // shall ignore the parent element.\"\n  if (unrecognizedEssentialProperty) {\n    // Stop parsing this AdaptationSet and let the caller filter out the nulls.\n    return null;\n  }\n\n  let contentProtectionElems = XmlUtils.findChildren(elem, 'ContentProtection');\n  let contentProtection = shaka.dash.ContentProtection.parseFromAdaptationSet(\n      contentProtectionElems, this.config_.dash.customScheme,\n      this.config_.dash.ignoreDrmInfo);\n\n  let language =\n      shaka.util.LanguageUtils.normalize(elem.getAttribute('lang') || 'und');\n\n  // This attribute is currently non-standard, but it is supported by Kaltura.\n  let label = elem.getAttribute('label');\n\n  // Parse Representations into Streams.\n  let representations = XmlUtils.findChildren(elem, 'Representation');\n  let streams = representations\n      .map(this.parseRepresentation_.bind(this, context, contentProtection,\n          kind, language, label, main, roleValues, closedCaptions))\n      .filter(function(s) { return !!s; });\n\n  if (streams.length == 0) {\n    // Ignore empty AdaptationSets if they are for text content.\n    if (isText) {\n      return null;\n    }\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_EMPTY_ADAPTATION_SET);\n  }\n\n  // If AdaptationSet's type is unknown or is ambiguously \"application\",\n  // guess based on the information in the first stream.  If the attributes\n  // mimeType and codecs are split across levels, they will both be inherited\n  // down to the stream level by this point, so the stream will have all the\n  // necessary information.\n  if (!context.adaptationSet.contentType ||\n      context.adaptationSet.contentType == ContentType.APPLICATION) {\n    let mimeType = streams[0].mimeType;\n    let codecs = streams[0].codecs;\n    context.adaptationSet.contentType =\n        shaka.dash.DashParser.guessContentType_(mimeType, codecs);\n\n    streams.forEach(function(stream) {\n      stream.type = context.adaptationSet.contentType;\n    });\n  }\n\n  streams.forEach(function(stream) {\n    // Some DRM license providers require that we have a default\n    // key ID from the manifest in the wrapped license request.\n    // Thus, it should be put in drmInfo to be accessible to request filters.\n    contentProtection.drmInfos.forEach(function(drmInfo) {\n      if (stream.keyId) {\n        drmInfo.keyIds.push(stream.keyId);\n      }\n    });\n  });\n\n  let repIds = representations\n      .map(function(node) { return node.getAttribute('id'); })\n      .filter(shaka.util.Functional.isNotNull);\n\n  return {\n    id: context.adaptationSet.id || ('__fake__' + this.globalId_++),\n    contentType: context.adaptationSet.contentType,\n    language: language,\n    main: main,\n    streams: streams,\n    drmInfos: contentProtection.drmInfos,\n    trickModeFor: trickModeFor,\n    representationIds: repIds,\n  };\n};\n\n\n/**\n * Parses a Representation XML element.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.ContentProtection.Context} contentProtection\n * @param {(string|undefined)} kind\n * @param {string} language\n * @param {string} label\n * @param {boolean} isPrimary\n * @param {!Array.<string>} roles\n * @param {Map.<string, string>} closedCaptions\n * @param {!Element} node\n * @return {?shaka.extern.Stream} The Stream, or null when there is a\n *   non-critical parsing error.\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseRepresentation_ = function(\n    context, contentProtection, kind, language, label, isPrimary, roles,\n    closedCaptions, node) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  context.representation = this.createFrame_(node, context.adaptationSet, null);\n  if (!this.verifyRepresentation_(context.representation)) {\n    shaka.log.warning('Skipping Representation', context.representation);\n    return null;\n  }\n\n  // NOTE: bandwidth is a mandatory attribute according to the spec, and zero\n  // does not make sense in the DASH spec's bandwidth formulas.\n  // In some content, however, the attribute is missing or zero.\n  // To avoid NaN at the variant level on broken content, fall back to zero.\n  // https://github.com/google/shaka-player/issues/938#issuecomment-317278180\n  context.bandwidth =\n      XmlUtils.parseAttr(node, 'bandwidth', XmlUtils.parsePositiveInt) || 0;\n\n  /** @type {?shaka.dash.DashParser.StreamInfo} */\n  let streamInfo;\n\n  const contentType = context.representation.contentType;\n  const isText = contentType == ContentType.TEXT ||\n                 contentType == ContentType.APPLICATION;\n\n  try {\n    const requestInitSegment = this.requestInitSegment_.bind(this);\n    if (context.representation.segmentBase) {\n      streamInfo = shaka.dash.SegmentBase.createStream(\n          context, requestInitSegment);\n    } else if (context.representation.segmentList) {\n      streamInfo = shaka.dash.SegmentList.createStream(\n          context, this.segmentIndexMap_);\n    } else if (context.representation.segmentTemplate) {\n      streamInfo = shaka.dash.SegmentTemplate.createStream(\n          context, requestInitSegment, this.segmentIndexMap_, !!this.manifest_);\n    } else {\n      goog.asserts.assert(isText,\n          'Must have Segment* with non-text streams.');\n\n      let baseUris = context.representation.baseUris;\n      let duration = context.periodInfo.duration || 0;\n      streamInfo = {\n        createSegmentIndex: Promise.resolve.bind(Promise),\n        findSegmentPosition:\n            /** @return {?number} */ function(/** number */ time) {\n              if (time >= 0 && time < duration) {\n                return 1;\n              } else {\n                return null;\n              }\n            },\n        getSegmentReference:\n            /** @return {shaka.media.SegmentReference} */\n            function(/** number */ ref) {\n              if (ref != 1) {\n                return null;\n              }\n\n              return new shaka.media.SegmentReference(\n                  1, 0, duration, function() { return baseUris; }, 0, null);\n            },\n        initSegmentReference: null,\n        scaledPresentationTimeOffset: 0,\n      };\n    }\n  } catch (error) {\n    if (isText && error.code == shaka.util.Error.Code.DASH_NO_SEGMENT_INFO) {\n      // We will ignore any DASH_NO_SEGMENT_INFO errors for text streams.\n      return null;\n    }\n\n    // For anything else, re-throw.\n    throw error;\n  }\n\n  let contentProtectionElems = XmlUtils.findChildren(node, 'ContentProtection');\n  let keyId = shaka.dash.ContentProtection.parseFromRepresentation(\n      contentProtectionElems, this.config_.dash.customScheme,\n      contentProtection, this.config_.dash.ignoreDrmInfo);\n\n  return {\n    id: this.globalId_++,\n    originalId: context.representation.id,\n    createSegmentIndex: streamInfo.createSegmentIndex,\n    findSegmentPosition: streamInfo.findSegmentPosition,\n    getSegmentReference: streamInfo.getSegmentReference,\n    initSegmentReference: streamInfo.initSegmentReference,\n    presentationTimeOffset: streamInfo.scaledPresentationTimeOffset,\n    mimeType: context.representation.mimeType,\n    codecs: context.representation.codecs,\n    frameRate: context.representation.frameRate,\n    bandwidth: context.bandwidth,\n    width: context.representation.width,\n    height: context.representation.height,\n    kind: kind,\n    encrypted: contentProtection.drmInfos.length > 0,\n    keyId: keyId,\n    language: language,\n    label: label,\n    type: context.adaptationSet.contentType,\n    primary: isPrimary,\n    trickModeVideo: null,\n    emsgSchemeIdUris:\n        context.representation.emsgSchemeIdUris,\n    roles: roles,\n    channelsCount: context.representation.numChannels,\n    closedCaptions: closedCaptions,\n  };\n};\n\n\n/**\n * Called when the update timer ticks.\n *\n * @return {!Promise}\n * @private\n */\nshaka.dash.DashParser.prototype.onUpdate_ = async function() {\n  goog.asserts.assert(this.updatePeriod_ >= 0,\n                      'There should be an update period');\n\n  shaka.log.info('Updating manifest...');\n\n  // Default the update delay to 0 seconds so that if there is an error we can\n  // try again right away.\n  let updateDelay = 0;\n\n  try {\n    updateDelay = await this.requestManifest_();\n  } catch (error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Should only receive a Shaka error');\n\n    // Try updating again, but ensure we haven't been destroyed.\n    if (this.playerInterface_) {\n      // We will retry updating, so override the severity of the error.\n      error.severity = shaka.util.Error.Severity.RECOVERABLE;\n      this.playerInterface_.onError(error);\n    }\n  }\n\n  // Detect a call to stop()\n  if (!this.playerInterface_) {\n    return;\n  }\n\n  this.setUpdateTimer_(updateDelay);\n};\n\n\n/**\n * Sets the update timer.  Does nothing if the manifest does not specify an\n * update period.\n *\n * @param {number} offset An offset, in seconds, to apply to the manifest's\n *   update period.\n * @private\n */\nshaka.dash.DashParser.prototype.setUpdateTimer_ = function(offset) {\n  // NOTE: An updatePeriod_ of -1 means the attribute was missing.\n  // An attribute which is present and set to 0 should still result in periodic\n  // updates.  For more, see: https://github.com/google/shaka-player/issues/331\n  if (this.updatePeriod_ < 0) {\n    return;\n  }\n\n  const finalDelay = Math.max(\n      shaka.dash.DashParser.MIN_UPDATE_PERIOD_,\n      this.updatePeriod_ - offset,\n      this.averageUpdateDuration_.getEstimate());\n\n  // We do not run the timer as repeating because part of update is async and we\n  // need schedule the update after it finished.\n  this.updateTimer_.tickAfter(/* seconds= */ finalDelay);\n};\n\n\n/**\n * Creates a new inheritance frame for the given element.\n *\n * @param {!Element} elem\n * @param {?shaka.dash.DashParser.InheritanceFrame} parent\n * @param {Array.<string>} baseUris\n * @return {shaka.dash.DashParser.InheritanceFrame}\n * @private\n */\nshaka.dash.DashParser.prototype.createFrame_ = function(\n    elem, parent, baseUris) {\n  goog.asserts.assert(parent || baseUris,\n                      'Must provide either parent or baseUris');\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  parent = parent || /** @type {shaka.dash.DashParser.InheritanceFrame} */ ({\n    contentType: '',\n    mimeType: '',\n    codecs: '',\n    emsgSchemeIdUris: [],\n    frameRate: undefined,\n    numChannels: null,\n  });\n  baseUris = baseUris || parent.baseUris;\n\n  let parseNumber = XmlUtils.parseNonNegativeInt;\n  let evalDivision = XmlUtils.evalDivision;\n  let uris = XmlUtils.findChildren(elem, 'BaseURL').map(XmlUtils.getContents);\n\n  let contentType = elem.getAttribute('contentType') || parent.contentType;\n  let mimeType = elem.getAttribute('mimeType') || parent.mimeType;\n  let codecs = elem.getAttribute('codecs') || parent.codecs;\n  let frameRate =\n      XmlUtils.parseAttr(elem, 'frameRate', evalDivision) || parent.frameRate;\n  let emsgSchemeIdUris = this.emsgSchemeIdUris_(\n      XmlUtils.findChildren(elem, 'InbandEventStream'),\n      parent.emsgSchemeIdUris);\n  let audioChannelConfigs =\n      XmlUtils.findChildren(elem, 'AudioChannelConfiguration');\n  let numChannels =\n      this.parseAudioChannels_(audioChannelConfigs) || parent.numChannels;\n\n  if (!contentType) {\n    contentType = shaka.dash.DashParser.guessContentType_(mimeType, codecs);\n  }\n\n  return {\n    baseUris: ManifestParserUtils.resolveUris(baseUris, uris),\n    segmentBase: XmlUtils.findChild(elem, 'SegmentBase') || parent.segmentBase,\n    segmentList: XmlUtils.findChild(elem, 'SegmentList') || parent.segmentList,\n    segmentTemplate:\n        XmlUtils.findChild(elem, 'SegmentTemplate') || parent.segmentTemplate,\n    width: XmlUtils.parseAttr(elem, 'width', parseNumber) || parent.width,\n    height: XmlUtils.parseAttr(elem, 'height', parseNumber) || parent.height,\n    contentType: contentType,\n    mimeType: mimeType,\n    codecs: codecs,\n    frameRate: frameRate,\n    emsgSchemeIdUris: emsgSchemeIdUris,\n    id: elem.getAttribute('id'),\n    numChannels: numChannels,\n  };\n};\n\n/**\n * Returns a new array of InbandEventStream schemeIdUri containing the union of\n * the ones parsed from inBandEventStreams and the ones provided in\n * emsgSchemeIdUris.\n *\n * @param {!Array.<!Element>} inBandEventStreams Array of InbandEventStream\n *     elements to parse and add to the returned array.\n * @param {!Array.<string>} emsgSchemeIdUris Array of parsed\n *     InbandEventStream schemeIdUri attributes to add to the returned array.\n * @return {!Array.<string>} schemeIdUris Array of parsed\n *     InbandEventStream schemeIdUri attributes.\n * @private\n */\nshaka.dash.DashParser.prototype.emsgSchemeIdUris_ = function(\n    inBandEventStreams, emsgSchemeIdUris) {\n  let schemeIdUris = emsgSchemeIdUris.slice();\n  for (let event of inBandEventStreams) {\n    let schemeIdUri = event.getAttribute('schemeIdUri');\n    if (!schemeIdUris.includes(schemeIdUri)) {\n      schemeIdUris.push(schemeIdUri);\n    }\n  }\n  return schemeIdUris;\n};\n\n/**\n * @param {!Array.<!Element>} audioChannelConfigs An array of\n *   AudioChannelConfiguration elements.\n * @return {?number} The number of audio channels, or null if unknown.\n * @private\n */\nshaka.dash.DashParser.prototype.parseAudioChannels_ =\n    function(audioChannelConfigs) {\n  for (let i = 0; i < audioChannelConfigs.length; ++i) {\n    let elem = audioChannelConfigs[i];\n\n    let scheme = elem.getAttribute('schemeIdUri');\n    if (!scheme) continue;\n\n    let value = elem.getAttribute('value');\n    if (!value) continue;\n\n    switch (scheme) {\n      case 'urn:mpeg:dash:outputChannelPositionList:2012':\n        // A space-separated list of speaker positions, so the number of\n        // channels is the length of this list.\n        return value.trim().split(/ +/).length;\n\n      case 'urn:mpeg:dash:23003:3:audio_channel_configuration:2011':\n      case 'urn:dts:dash:audio_channel_configuration:2012': {\n        // As far as we can tell, this is a number of channels.\n        let intValue = parseInt(value, 10);\n        if (!intValue) {  // 0 or NaN\n          shaka.log.warning('Channel parsing failure! ' +\n                            'Ignoring scheme and value', scheme, value);\n          continue;\n        }\n        return intValue;\n      }\n\n      case 'tag:dolby.com,2014:dash:audio_channel_configuration:2011':\n      case 'urn:dolby:dash:audio_channel_configuration:2011': {\n        // A hex-encoded 16-bit integer, in which each bit represents a channel.\n        let hexValue = parseInt(value, 16);\n        if (!hexValue) {  // 0 or NaN\n          shaka.log.warning('Channel parsing failure! ' +\n                            'Ignoring scheme and value', scheme, value);\n          continue;\n        }\n        // Count the 1-bits in hexValue.\n        let numBits = 0;\n        while (hexValue) {\n          if (hexValue & 1) ++numBits;\n          hexValue >>= 1;\n        }\n        return numBits;\n      }\n\n      default:\n        shaka.log.warning('Unrecognized audio channel scheme:', scheme, value);\n        continue;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Verifies that a Representation has exactly one Segment* element.  Prints\n * warnings if there is a problem.\n *\n * @param {shaka.dash.DashParser.InheritanceFrame} frame\n * @return {boolean} True if the Representation is usable; otherwise return\n *   false.\n * @private\n */\nshaka.dash.DashParser.prototype.verifyRepresentation_ = function(frame) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let n = 0;\n  n += frame.segmentBase ? 1 : 0;\n  n += frame.segmentList ? 1 : 0;\n  n += frame.segmentTemplate ? 1 : 0;\n\n  if (n == 0) {\n    // TODO: Extend with the list of MIME types registered to TextEngine.\n    if (frame.contentType == ContentType.TEXT ||\n        frame.contentType == ContentType.APPLICATION) {\n      return true;\n    } else {\n      shaka.log.warning(\n          'Representation does not contain a segment information source:',\n          'the Representation must contain one of SegmentBase, SegmentList,',\n          'SegmentTemplate, or explicitly indicate that it is \"text\".',\n          frame);\n      return false;\n    }\n  }\n\n  if (n != 1) {\n    shaka.log.warning(\n        'Representation contains multiple segment information sources:',\n        'the Representation should only contain one of SegmentBase,',\n        'SegmentList, or SegmentTemplate.',\n        frame);\n    if (frame.segmentBase) {\n      shaka.log.info('Using SegmentBase by default.');\n      frame.segmentList = null;\n      frame.segmentTemplate = null;\n    } else {\n      goog.asserts.assert(frame.segmentList, 'There should be a SegmentList');\n      shaka.log.info('Using SegmentList by default.');\n      frame.segmentTemplate = null;\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Makes a request to the given URI and calculates the clock offset.\n *\n * @param {!Array.<string>} baseUris\n * @param {string} uri\n * @param {string} method\n * @return {!Promise.<number>}\n * @private\n */\nshaka.dash.DashParser.prototype.requestForTiming_ =\n    function(baseUris, uri, method) {\n  let requestUris = shaka.util.ManifestParserUtils.resolveUris(baseUris, [uri]);\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      requestUris, this.config_.retryParameters);\n  request.method = method;\n  const type = shaka.net.NetworkingEngine.RequestType.TIMING;\n\n  let operation = this.playerInterface_.networkingEngine.request(type, request);\n  this.operationManager_.manage(operation);\n\n  return operation.promise.then((response) => {\n    let text;\n    if (method == 'HEAD') {\n      if (!response.headers || !response.headers['date']) {\n        shaka.log.warning('UTC timing response is missing',\n                          'expected date header');\n        return 0;\n      }\n      text = response.headers['date'];\n    } else {\n      text = shaka.util.StringUtils.fromUTF8(response.data);\n    }\n    let date = Date.parse(text);\n    if (isNaN(date)) {\n      shaka.log.warning('Unable to parse date from UTC timing response');\n      return 0;\n    }\n    return (date - Date.now());\n  });\n};\n\n\n/**\n * Parses an array of UTCTiming elements.\n *\n * @param {!Array.<string>} baseUris\n * @param {!Array.<!Element>} elems\n * @return {!Promise.<number>}\n * @private\n */\nshaka.dash.DashParser.prototype.parseUtcTiming_ = function(baseUris, elems) {\n  let schemesAndValues = elems.map(function(elem) {\n    return {\n      scheme: elem.getAttribute('schemeIdUri'),\n      value: elem.getAttribute('value'),\n    };\n  });\n\n  // If there's nothing specified in the manifest, but we have a default from\n  // the config, use that.\n  let clockSyncUri = this.config_.dash.clockSyncUri;\n  if (!schemesAndValues.length && clockSyncUri) {\n    schemesAndValues.push({\n      scheme: 'urn:mpeg:dash:utc:http-head:2014',\n      value: clockSyncUri,\n    });\n  }\n\n  const Functional = shaka.util.Functional;\n  return Functional.createFallbackPromiseChain(schemesAndValues, function(sv) {\n    let scheme = sv.scheme;\n    let value = sv.value;\n    switch (scheme) {\n      // See DASH IOP Guidelines Section 4.7\n      // https://bit.ly/DashIop3-2\n      // Some old ISO23009-1 drafts used 2012.\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        return this.requestForTiming_(baseUris, value, 'HEAD');\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        return this.requestForTiming_(baseUris, value, 'GET');\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012': {\n        let date = Date.parse(value);\n        return isNaN(date) ? 0 : (date - Date.now());\n      }\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n        shaka.log.alwaysWarn('NTP UTCTiming scheme is not supported');\n        return Promise.reject();\n      default:\n        shaka.log.alwaysWarn(\n            'Unrecognized scheme in UTCTiming element', scheme);\n        return Promise.reject();\n    }\n  }.bind(this)).catch(function() {\n    shaka.log.alwaysWarn(\n        'A UTCTiming element should always be given in live manifests! ' +\n        'This content may not play on clients with bad clocks!');\n    return 0;\n  });\n};\n\n\n/**\n * Parses an EventStream element.\n *\n * @param {number} periodStart\n * @param {?number} periodDuration\n * @param {!Element} elem\n * @private\n */\nshaka.dash.DashParser.prototype.parseEventStream_ = function(\n    periodStart, periodDuration, elem) {\n  const XmlUtils = shaka.util.XmlUtils;\n  let parseNumber = XmlUtils.parseNonNegativeInt;\n\n  let schemeIdUri = elem.getAttribute('schemeIdUri') || '';\n  let value = elem.getAttribute('value') || '';\n  let timescale = XmlUtils.parseAttr(elem, 'timescale', parseNumber) || 1;\n\n  XmlUtils.findChildren(elem, 'Event').forEach(function(eventNode) {\n    let presentationTime =\n        XmlUtils.parseAttr(eventNode, 'presentationTime', parseNumber) || 0;\n    let duration = XmlUtils.parseAttr(eventNode, 'duration', parseNumber) || 0;\n\n    let startTime = presentationTime / timescale + periodStart;\n    let endTime = startTime + (duration / timescale);\n    if (periodDuration != null) {\n      // An event should not go past the Period, even if the manifest says so.\n      // See: Dash sec. 5.10.2.1\n      startTime = Math.min(startTime, periodStart + periodDuration);\n      endTime = Math.min(endTime, periodStart + periodDuration);\n    }\n\n    /** @type {shaka.extern.TimelineRegionInfo} */\n    let region = {\n      schemeIdUri: schemeIdUri,\n      value: value,\n      startTime: startTime,\n      endTime: endTime,\n      id: eventNode.getAttribute('id') || '',\n      eventElement: eventNode,\n    };\n\n    this.playerInterface_.onTimelineRegionAdded(region);\n  }.bind(this));\n};\n\n\n/**\n * Makes a network request on behalf of SegmentBase.createStream.\n *\n * @param {!Array.<string>} uris\n * @param {?number} startByte\n * @param {?number} endByte\n * @return {!Promise.<!ArrayBuffer>}\n * @private\n */\nshaka.dash.DashParser.prototype.requestInitSegment_ = function(\n    uris, startByte, endByte) {\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n\n  const request = shaka.util.Networking.createSegmentRequest(\n      uris,\n      startByte,\n      endByte,\n      this.config_.retryParameters);\n\n  let networkingEngine = this.playerInterface_.networkingEngine;\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n  return operation.promise.then((response) => response.data);\n};\n\n\n/**\n * Guess the content type based on MIME type and codecs.\n *\n * @param {string} mimeType\n * @param {string} codecs\n * @return {string}\n * @private\n */\nshaka.dash.DashParser.guessContentType_ = function(mimeType, codecs) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(mimeType, codecs);\n\n  if (shaka.text.TextEngine.isTypeSupported(fullMimeType)) {\n    // If it's supported by TextEngine, it's definitely text.\n    // We don't check MediaSourceEngine, because that would report support\n    // for platform-supported video and audio types as well.\n    return shaka.util.ManifestParserUtils.ContentType.TEXT;\n  }\n\n  // Otherwise, just split the MIME type.  This handles video and audio\n  // types well.\n  return mimeType.split('/')[0];\n};\n\n\nshaka.media.ManifestParser.registerParserByExtension(\n    'mpd', shaka.dash.DashParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/dash+xml', shaka.dash.DashParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.Attribute');\ngoog.provide('shaka.hls.Playlist');\ngoog.provide('shaka.hls.PlaylistType');\ngoog.provide('shaka.hls.Segment');\ngoog.provide('shaka.hls.Tag');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Creates an HLS playlist object.\n *\n * @param {string} absoluteUri An absolute, final URI after redirects.\n * @param {!shaka.hls.PlaylistType} type\n * @param {!Array.<shaka.hls.Tag>} tags\n * @param {!Array.<shaka.hls.Segment>=} segments\n *\n * @constructor\n * @struct\n */\nshaka.hls.Playlist = function(absoluteUri, type, tags, segments) {\n  /**\n   * An absolute, final URI after redirects.\n   *\n   * @const {string}\n   */\n  this.absoluteUri = absoluteUri;\n\n  /** @const {shaka.hls.PlaylistType} */\n  this.type = type;\n\n  /** @const {!Array.<!shaka.hls.Tag>} */\n  this.tags = tags;\n\n  /** @const {Array.<!shaka.hls.Segment>} */\n  this.segments = segments || null;\n};\n\n\n/**\n * @enum {number}\n */\nshaka.hls.PlaylistType = {\n  MASTER: 0,\n  MEDIA: 1,\n};\n\n\n/**\n * Creates an HLS tag object.\n *\n * @param {number} id\n * @param {string} name\n * @param {!Array.<shaka.hls.Attribute>} attributes\n * @param {?string=} value\n *\n * @constructor\n * @struct\n */\nshaka.hls.Tag = function(id, name, attributes, value = null) {\n  /** @const {number} */\n  this.id = id;\n\n  /** @const {string} */\n  this.name = name;\n\n  /** @const {Array.<shaka.hls.Attribute>} */\n  this.attributes = attributes;\n\n  /** @const {?string} */\n  this.value = value;\n};\n\n\n/**\n * Create the string representation of the tag.\n *\n * For the DRM system - the full tag needs to be passed down to the CDM.  There\n * are two ways of doing this (1) save the original tag or (2) recreate the tag.\n * As in some cases (like in tests) the tag never existed in string form, it\n * is far easier to recreate the tag from the parsed form.\n *\n * @return {string}\n * @override\n */\nshaka.hls.Tag.prototype.toString = function() {\n  /**\n   * @param {shaka.hls.Attribute} attr\n   * @return {string}\n   */\n  let attrToStr = function(attr) {\n    const isNumericAttr = !isNaN(Number(attr.value));\n\n    const value = (isNumericAttr ? attr.value : '\"' + attr.value + '\"');\n\n    return attr.name + '=' + value;\n  };\n\n\n  // A valid tag can only follow 1 of 4 patterns.\n  //  1) <NAME>:<VALUE>\n  //  2) <NAME>:<ATTRIBUTE LIST>\n  //  3) <NAME>\n  //  4) <NAME>:<VALUE>,<ATTRIBUTE_LIST>\n\n  let tagStr = '#' + this.name;\n  const appendages = this.attributes ? this.attributes.map(attrToStr) : [];\n\n  if (this.value) {\n    appendages.unshift(this.value);\n  }\n\n  if (appendages.length > 0) {\n    tagStr += ':' + appendages.join(',');\n  }\n\n  return tagStr;\n};\n\n\n/**\n * Creates an HLS attribute object.\n *\n * @param {string} name\n * @param {string} value\n *\n * @constructor\n * @struct\n */\nshaka.hls.Attribute = function(name, value) {\n  /** @const {string} */\n  this.name = name;\n\n  /** @const {string} */\n  this.value = value;\n};\n\n\n/**\n * Adds an attribute to an HLS Tag.\n *\n * @param {!shaka.hls.Attribute} attribute\n */\nshaka.hls.Tag.prototype.addAttribute = function(attribute) {\n  this.attributes.push(attribute);\n};\n\n\n/**\n * Gets the first attribute of the tag with a specified name.\n *\n * @param {string} name\n * @return {?shaka.hls.Attribute} attribute\n */\nshaka.hls.Tag.prototype.getAttribute = function(name) {\n  let attributes = this.attributes.filter(function(attr) {\n    return attr.name == name;\n  });\n\n  goog.asserts.assert(attributes.length < 2,\n                      'A tag should not have multiple attributes ' +\n                      'with the same name!');\n\n  if (attributes.length) {\n    return attributes[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Gets the value of the first attribute of the tag with a specified name.\n * If not found, returns an optional default value.\n *\n * @param {string} name\n * @param {string=} defaultValue\n * @return {?string}\n */\nshaka.hls.Tag.prototype.getAttributeValue = function(name, defaultValue) {\n  let attribute = this.getAttribute(name);\n  return attribute ? attribute.value : (defaultValue || null);\n};\n\n\n/**\n * Creates an HLS segment object.\n *\n * @param {string} absoluteUri An absolute URI.\n * @param {!Array.<shaka.hls.Tag>} tags\n *\n * @constructor\n * @struct\n */\nshaka.hls.Segment = function(absoluteUri, tags) {\n  /** @const {!Array.<shaka.hls.Tag>} */\n  this.tags = tags;\n\n  /**\n   * An absolute URI.\n   *\n   * @const {string}\n   */\n  this.absoluteUri = absoluteUri;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.Utils');\n\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n *\n * @param {!Array.<!shaka.hls.Tag>} tags\n * @param {string} name\n * @return {!Array.<!shaka.hls.Tag>}\n */\nshaka.hls.Utils.filterTagsByName = function(tags, name) {\n  return tags.filter(function(tag) {\n    return tag.name == name;\n  });\n};\n\n\n/**\n *\n * @param {!Array.<!shaka.hls.Tag>} tags\n * @param {string} name\n * @return {?shaka.hls.Tag}\n */\nshaka.hls.Utils.getFirstTagWithName = function(tags, name) {\n  let tagsWithName = shaka.hls.Utils.filterTagsByName(tags, name);\n  if (!tagsWithName.length) return null;\n\n  return tagsWithName[0];\n};\n\n\n/**\n * @param {!Array.<!shaka.hls.Tag>} tags An array of EXT-X-MEDIA tags.\n * @param {string} type\n * @param {string} groupId\n * @return {!Array.<!shaka.hls.Tag>} The first tag that has the given media type\n *   and group id.\n */\nshaka.hls.Utils.findMediaTags = function(tags, type, groupId) {\n  return tags.filter(function(tag) {\n    let typeAttr = tag.getAttribute('TYPE');\n    let groupIdAttr = tag.getAttribute('GROUP-ID');\n    return typeAttr.value == type && groupIdAttr.value == groupId;\n  });\n};\n\n\n/**\n * @param {string} parentAbsoluteUri\n * @param {string} uri\n * @return {string}\n */\nshaka.hls.Utils.constructAbsoluteUri = function(parentAbsoluteUri, uri) {\n  let uris = shaka.util.ManifestParserUtils.resolveUris(\n      [parentAbsoluteUri], [uri]);\n\n  return uris[0];\n};\n\n\n/**\n * Matches a string to an HLS comment format and returns the result.\n *\n * @param {string} line\n * @return {boolean}\n */\nshaka.hls.Utils.isComment = function(line) {\n  return /^#(?!EXT)/m.test(line);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.TextParser');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Reads elements from strings.\n *\n * @param {string} data\n * @constructor\n * @struct\n */\nshaka.util.TextParser = function(data) {\n  /**\n   * @const\n   * @private {string}\n   */\n  this.data_ = data;\n\n  /** @private {number} */\n  this.position_ = 0;\n};\n\n\n/** @return {boolean} Whether it is at the end of the string. */\nshaka.util.TextParser.prototype.atEnd = function() {\n  return this.position_ == this.data_.length;\n};\n\n\n/**\n * Reads a line from the parser.  This will read but not return the newline.\n * Returns null at the end.\n *\n * @return {?string}\n */\nshaka.util.TextParser.prototype.readLine = function() {\n  return this.readRegexReturnCapture_(/(.*?)(\\n|$)/gm, 1);\n};\n\n\n/**\n * Reads a word from the parser.  This will not read or return any whitespace\n * before or after the word (including newlines).  Returns null at the end.\n *\n * @return {?string}\n */\nshaka.util.TextParser.prototype.readWord = function() {\n  return this.readRegexReturnCapture_(/[^ \\t\\n]*/gm, 0);\n};\n\n\n/**\n * Skips any continuous whitespace from the parser.  Returns null at the end.\n */\nshaka.util.TextParser.prototype.skipWhitespace = function() {\n  this.readRegex(/[ \\t]+/gm);\n};\n\n\n/**\n * Reads the given regular expression from the parser.  This requires the match\n * to be at the current position; there is no need to include a head anchor.\n * This requires that the regex have the global flag to be set so that it can\n * set lastIndex to start the search at the current position.  Returns null at\n * the end or if the regex does not match the current position.\n *\n * @param {!RegExp} regex\n * @return {Array.<string>}\n */\nshaka.util.TextParser.prototype.readRegex = function(regex) {\n  let index = this.indexOf_(regex);\n  if (this.atEnd() || index == null || index.position != this.position_) {\n    return null;\n  }\n\n  this.position_ += index.length;\n  return index.results;\n};\n\n\n/**\n * Reads a regex from the parser and returns the given capture.\n *\n * @param {!RegExp} regex\n * @param {number} index\n * @return {?string}\n * @private\n */\nshaka.util.TextParser.prototype.readRegexReturnCapture_ = function(\n    regex, index) {\n  if (this.atEnd()) {\n    return null;\n  }\n\n  let ret = this.readRegex(regex);\n  if (!ret) {\n    return null;\n  } else {\n    return ret[index];\n  }\n};\n\n\n/**\n * Returns the index info about a regular expression match.\n *\n * @param {!RegExp} regex\n * @return {?{position: number, length: number, results: !Array.<string>}}\n * @private\n */\nshaka.util.TextParser.prototype.indexOf_ = function(regex) {\n  // The global flag is required to use lastIndex.\n  goog.asserts.assert(regex.global, 'global flag should be set');\n\n  regex.lastIndex = this.position_;\n  let results = regex.exec(this.data_);\n  if (results == null) {\n    return null;\n  } else {\n    return {\n      position: results.index,\n      length: results[0].length,\n      results: results,\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.ManifestTextParser');\n\ngoog.require('shaka.hls.Attribute');\ngoog.require('shaka.hls.Playlist');\ngoog.require('shaka.hls.PlaylistType');\ngoog.require('shaka.hls.Segment');\ngoog.require('shaka.hls.Tag');\ngoog.require('shaka.hls.Utils');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * Creates a new ManifestTextParser.\n *\n * @constructor\n * @struct\n */\nshaka.hls.ManifestTextParser = function() {\n  /** @private {number} */\n  this.globalId_ = 0;\n};\n\n\n/**\n * @param {ArrayBuffer} data\n * @param {string} absolutePlaylistUri An absolute, final URI after redirects.\n * @return {!shaka.hls.Playlist}\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.prototype.parsePlaylist =\n    function(data, absolutePlaylistUri) {\n  const MEDIA_PLAYLIST_TAGS = shaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS;\n  const SEGMENT_TAGS = shaka.hls.ManifestTextParser.SEGMENT_TAGS;\n\n  // Get the input as a string.  Normalize newlines to \\n.\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  str = str.replace(/\\r\\n|\\r(?=[^\\n]|$)/gm, '\\n').trim();\n\n  const lines = str.split(/\\n+/m);\n\n  if (!/^#EXTM3U($|[ \\t\\n])/m.test(lines[0])) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_PLAYLIST_HEADER_MISSING);\n  }\n\n  /** shaka.hls.PlaylistType */\n  let playlistType = shaka.hls.PlaylistType.MASTER;\n\n  // First, look for media playlist tags, so that we know what the playlist\n  // type really is before we start parsing.\n  for (let i = 1; i < lines.length; i++) {\n    // Ignore comments.\n    if (!shaka.hls.Utils.isComment(lines[i])) {\n      const tag = this.parseTag_(lines[i]);\n      // These tags won't actually be used, so don't increment the global id.\n      this.globalId_ -= 1;\n\n      if (MEDIA_PLAYLIST_TAGS.includes(tag.name)) {\n        playlistType = shaka.hls.PlaylistType.MEDIA;\n        break;\n      } else if (tag.name == 'EXT-X-STREAM-INF') {\n        i += 1;\n      }\n    }\n  }\n\n  /** {Array.<shaka.hls.Tag>} */\n  const tags = [];\n  for (let i = 1; i < lines.length;) {\n    // Skip comments\n    if (shaka.hls.Utils.isComment(lines[i])) {\n      i += 1;\n      continue;\n    }\n\n    const tag = this.parseTag_(lines[i]);\n    if (SEGMENT_TAGS.includes(tag.name)) {\n      if (playlistType != shaka.hls.PlaylistType.MEDIA) {\n        // Only media playlists should contain segment tags\n        throw new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MANIFEST,\n            shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n      }\n\n      const segmentsData = lines.splice(i, lines.length - i);\n      const segments = this.parseSegments_(\n          absolutePlaylistUri, segmentsData, tags);\n      return new shaka.hls.Playlist(\n          absolutePlaylistUri, playlistType, tags, segments);\n    }\n\n    tags.push(tag);\n    i += 1;\n\n    // An EXT-X-STREAM-INF tag is followed by a URI of a media playlist.\n    // Add the URI to the tag object.\n    if (tag.name == 'EXT-X-STREAM-INF') {\n      const tagUri = new shaka.hls.Attribute('URI', lines[i]);\n      tag.addAttribute(tagUri);\n      i += 1;\n    }\n  }\n\n  return new shaka.hls.Playlist(absolutePlaylistUri, playlistType, tags);\n};\n\n\n/**\n * Parses an array of strings into an array of HLS Segment objects.\n *\n * @param {string} absoluteMediaPlaylistUri\n * @param {!Array.<string>} lines\n * @param {!Array.<!shaka.hls.Tag>} playlistTags\n * @return {!Array.<shaka.hls.Segment>}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.prototype.parseSegments_ =\n    function(absoluteMediaPlaylistUri, lines, playlistTags) {\n  /** @type {!Array.<shaka.hls.Segment>} */\n  let segments = [];\n  /** @type {!Array.<shaka.hls.Tag>} */\n  let segmentTags = [];\n  lines.forEach((line) => {\n    if (/^(#EXT)/.test(line)) {\n      let tag = this.parseTag_(line);\n      if (shaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS.includes(tag.name)) {\n        playlistTags.push(tag);\n      } else {\n        segmentTags.push(tag);\n      }\n    } else if (shaka.hls.Utils.isComment(line)) {\n      // Skip comments.\n      return [];\n    } else {\n      const verbatimSegmentUri = line.trim();\n      const absoluteSegmentUri = shaka.hls.Utils.constructAbsoluteUri(\n          absoluteMediaPlaylistUri, verbatimSegmentUri);\n\n      // The URI appears after all of the tags describing the segment.\n      const segment = new shaka.hls.Segment(absoluteSegmentUri, segmentTags);\n      segments.push(segment);\n      segmentTags = [];\n    }\n  });\n  return segments;\n};\n\n\n/**\n * Parses a string into an HLS Tag object while tracking what id to use next.\n *\n * @param {string} word\n * @return {!shaka.hls.Tag}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.ManifestTextParser.prototype.parseTag_ = function(word) {\n  return shaka.hls.ManifestTextParser.parseTag(this.globalId_++, word);\n};\n\n\n/**\n * Parses a string into an HLS Tag object.\n *\n * @param {number} id\n * @param {string} word\n * @return {!shaka.hls.Tag}\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.parseTag = function(id, word) {\n  /* HLS tags start with '#EXT'. A tag can have a set of attributes\n    (#EXT-<tagname>:<attribute list>) and/or a value (#EXT-<tagname>:<value>).\n    An attribute's format is 'AttributeName=AttributeValue'.\n    The parsing logic goes like this:\n     1. Everything before ':' is a name (we ignore '#').\n     2. Everything after ':' is a list of comma-seprated items,\n          2a. The first item might be a value, if it does not contain '='.\n          2b. Otherwise, items are attributes.\n     3. If there is no \":\", it's a simple tag with no attributes and no value */\n  const blocks = word.match(/^#(EXT[^:]*)(?::(.*))?$/);\n  if (!blocks) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.INVALID_HLS_TAG,\n        word);\n  }\n  const name = blocks[1];\n  const data = blocks[2];\n  const attributes = [];\n  let value;\n\n  if (data) {\n    const parser = new shaka.util.TextParser(data);\n    let blockAttrs;\n\n    // Regex: any number of non-equals-sign characters at the beginning\n    // terminated by comma or end of line\n    const valueRegex = /^([^,=]+)(?:,|$)/g;\n\n    const blockValue = parser.readRegex(valueRegex);\n\n    if (blockValue) {\n      value = blockValue[1];\n    }\n\n    // Regex:\n    // 1. Key name ([1])\n    // 2. Equals sign\n    // 3. Either:\n    //   a. A quoted string (everything up to the next quote, [2])\n    //   b. An unquoted string\n    //    (everything up to the next comma or end of line, [3])\n    // 4. Either:\n    //   a. A comma\n    //   b. End of line\n    const attributeRegex = /([^=]+)=(?:\"([^\"]*)\"|([^\",]*))(?:,|$)/g;\n\n    while ((blockAttrs = parser.readRegex(attributeRegex))) {\n      const attrName = blockAttrs[1];\n      const attrValue = blockAttrs[2] || blockAttrs[3];\n      const attribute = new shaka.hls.Attribute(attrName, attrValue);\n      attributes.push(attribute);\n    }\n  }\n\n  return new shaka.hls.Tag(id, name, attributes, value);\n};\n\n\n/**\n * HLS tags that only appear on Media Playlists.\n * Used to determine a playlist type.\n *\n * @const {!Array.<string>}\n */\nshaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS = [\n  'EXT-X-TARGETDURATION',\n  'EXT-X-MEDIA-SEQUENCE',\n  'EXT-X-DISCONTINUITY-SEQUENCE',\n  'EXT-X-PLAYLIST-TYPE',\n  'EXT-X-MAP',\n  'EXT-X-I-FRAMES-ONLY',\n  'EXT-X-ENDLIST',\n];\n\n\n/**\n * HLS tags that only appear on Segments in a Media Playlists.\n * Used to determine the start of the segments info.\n *\n * @const {!Array.<string>}\n */\nshaka.hls.ManifestTextParser.SEGMENT_TAGS = [\n  'EXTINF',\n  'EXT-X-BYTERANGE',\n  'EXT-X-DISCONTINUITY',\n  'EXT-X-PROGRAM-DATE-TIME',\n  'EXT-X-KEY',\n  'EXT-X-DATERANGE',\n];\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.DataUriPlugin');\n\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle data URIs.\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/data_URIs\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {shaka.extern.ProgressUpdated} progressUpdated Called when a\n *   progress event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.DataUriPlugin = function(uri, request, requestType, progressUpdated) {\n  try {\n    let parsed = shaka.net.DataUriPlugin.parse(uri);\n\n    /** @type {shaka.extern.Response} */\n    let response = {\n      uri: uri,\n      originalUri: uri,\n      data: parsed.data,\n      headers: {\n        'content-type': parsed.contentType,\n      },\n    };\n\n    return shaka.util.AbortableOperation.completed(response);\n  } catch (error) {\n    return shaka.util.AbortableOperation.failed(error);\n  }\n};\n\n\n/**\n * @param {string} uri\n * @return {{data: ArrayBuffer, contentType: string}}\n */\nshaka.net.DataUriPlugin.parse = function(uri) {\n  // Extract the scheme.\n  let parts = uri.split(':');\n  if (parts.length < 2 || parts[0] != 'data') {\n    shaka.log.error('Bad data URI, failed to parse scheme');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_DATA_URI,\n        uri);\n  }\n  let path = parts.slice(1).join(':');\n\n  // Extract the encoding and MIME type (required but can be empty).\n  let infoAndData = path.split(',');\n  if (infoAndData.length < 2) {\n    shaka.log.error('Bad data URI, failed to extract encoding and MIME type');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_DATA_URI,\n        uri);\n  }\n  let info = infoAndData[0];\n  let dataStr = window.decodeURIComponent(infoAndData.slice(1).join(','));\n\n  // Extract the encoding (optional).\n  let typeAndEncoding = info.split(';');\n  let encoding = null;\n  if (typeAndEncoding.length > 1) {\n    encoding = typeAndEncoding[1];\n  }\n\n  // Convert the data.\n  /** @type {ArrayBuffer} */\n  let data;\n  if (encoding == 'base64') {\n    data = shaka.util.Uint8ArrayUtils.fromBase64(dataStr).buffer;\n  } else if (encoding) {\n    shaka.log.error('Bad data URI, unknown encoding');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.UNKNOWN_DATA_URI_ENCODING,\n        uri);\n  } else {\n    data = shaka.util.StringUtils.toUTF8(dataStr);\n  }\n\n  return {data: data, contentType: typeAndEncoding[0]};\n};\n\n\nshaka.net.NetworkingEngine.registerScheme('data', shaka.net.DataUriPlugin);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.hls.HlsParser');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.Deprecate');\ngoog.require('shaka.hls.ManifestTextParser');\ngoog.require('shaka.hls.Playlist');\ngoog.require('shaka.hls.PlaylistType');\ngoog.require('shaka.hls.Tag');\ngoog.require('shaka.hls.Utils');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.net.DataUriPlugin');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.Networking');\ngoog.require('shaka.util.OperationManager');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a new HLS parser.\n *\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n * @export\n */\nshaka.hls.HlsParser = function() {\n  /** @private {?shaka.extern.ManifestParser.PlayerInterface} */\n  this.playerInterface_ = null;\n\n  /** @private {?shaka.extern.ManifestConfiguration} */\n  this.config_ = null;\n\n  /** @private {number} */\n  this.globalId_ = 1;\n\n  /**\n   * @private {!Map.<number, shaka.hls.HlsParser.StreamInfo>}\n   */\n  // TODO: This is now only used for text codec detection, try to remove.\n  this.mediaTagsToStreamInfosMap_ = new Map();\n\n  /**\n   * The values are strings of the form \"<VIDEO URI> - <AUDIO URI>\",\n   * where the URIs are the verbatim media playlist URIs as they appeared in the\n   * master playlist.\n   *\n   * Used to avoid duplicates that vary only in their text stream.\n   *\n   * @private {!Set.<string>}\n   */\n  this.variantUriSet_ = new Set();\n\n  /**\n   * A map from (verbatim) media playlist URI to stream infos representing the\n   * playlists.\n   *\n   * On update, used to iterate through and update from media playlists.\n   *\n   * On initial parse, used to iterate through and determine minimum timestamps,\n   * offsets, and to handle TS rollover.\n   *\n   * During parsing, used to avoid duplicates in the async methods\n   * createStreamInfoFromMediaTag_ and createStreamInfoFromVariantTag_.\n   *\n   * During parsing of updates, used by getStartTime_ to determine the start\n   * time of the first segment from existing segment references.\n   *\n   * @private {!Map.<string, shaka.hls.HlsParser.StreamInfo>}\n   */\n  this.uriToStreamInfosMap_ = new Map();\n\n  /** @private {?shaka.media.PresentationTimeline} */\n  this.presentationTimeline_ = null;\n\n  /**\n   * The master playlist URI, after redirects.\n   *\n   * @private {string}\n   */\n  this.masterPlaylistUri_ = '';\n\n  /** @private {shaka.hls.ManifestTextParser} */\n  this.manifestTextParser_ = new shaka.hls.ManifestTextParser();\n\n  /**\n   * This is the number of seconds we want to wait between finishing a manifest\n   * update and starting the next one. This will be set when we parse the\n   * manifest.\n   *\n   * @private {number}\n   */\n  this.updatePlaylistDelay_ = 0;\n\n  /**\n   * This timer is used to trigger the start of a manifest update. A manifest\n   * update is async. Once the update is finished, the timer will be restarted\n   * to trigger the next update. The timer will only be started if the content\n   * is live content.\n   *\n   * @private {shaka.util.Timer}\n   */\n  this.updatePlaylistTimer_ = new shaka.util.Timer(() => {\n    this.onUpdate_();\n  });\n\n  /** @private {shaka.hls.HlsParser.PresentationType_} */\n  this.presentationType_ = shaka.hls.HlsParser.PresentationType_.VOD;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {number} */\n  this.maxTargetDuration_ = 0;\n\n  /** @private {number} */\n  this.minTargetDuration_ = Infinity;\n\n  /** @private {shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n\n  /** @private {!Array.<!Array.<!shaka.media.SegmentReference>>} */\n  this.segmentsToNotifyByStream_ = [];\n\n  /** A map from closed captions' group id, to a map of closed captions info.\n   * {group id -> {closed captions channel id -> language}}\n   * @private {Map.<string, Map.<string, string>>}\n   */\n  this.groupIdToClosedCaptionsMap_ = new Map();\n\n  /** True if some of the variants in  the playlist is encrypted with AES-128.\n   * @private {boolean} */\n  this.aesEncrypted_ = false;\n};\n\n\n/**\n * @typedef {{\n *   stream: !shaka.extern.Stream,\n *   segmentIndex: !shaka.media.SegmentIndex,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   verbatimMediaPlaylistUri: string,\n *   absoluteMediaPlaylistUri: string,\n *   minTimestamp: number,\n *   maxTimestamp: number,\n *   duration: number\n * }}\n *\n * @description\n * Contains a stream and information about it.\n *\n * @property {!shaka.extern.Stream} stream\n *   The Stream itself.\n * @property {!shaka.media.SegmentIndex} segmentIndex\n *   SegmentIndex of the stream.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   DrmInfos of the stream.  There may be multiple for multi-DRM content.\n * @property {string} verbatimMediaPlaylistUri\n *   The verbatim media playlist URI, as it appeared in the master playlist.\n *   This has not been canonicalized into an absolute URI.  This gives us a\n *   consistent key for this playlist, even if redirects cause us to update\n *   from different origins each time.\n * @property {string} absoluteMediaPlaylistUri\n *   The absolute media playlist URI, resolved relative to the master playlist\n *   and updated to reflect any redirects.\n * @property {number} minTimestamp\n *   The minimum timestamp found in the stream.\n * @property {number} maxTimestamp\n *   The maximum timestamp found in the stream.\n * @property {number} duration\n *   The duration of the playlist.  Used for VOD only.\n */\nshaka.hls.HlsParser.StreamInfo;\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.start = async function(uri, playerInterface) {\n  goog.asserts.assert(this.config_, 'Must call configure() before start()!');\n  this.playerInterface_ = playerInterface;\n\n  const response = await this.requestManifest_(uri);\n\n  // Record the master playlist URI after redirects.\n  this.masterPlaylistUri_ = response.uri;\n\n  goog.asserts.assert(response.data, 'Response data should be non-null!');\n  await this.parseManifest_(response.data);\n\n  // Start the update timer if we want updates.\n  const delay = this.updatePlaylistDelay_;\n  if (delay > 0) {\n    this.updatePlaylistTimer_.tickAfter(/* seconds = */ delay);\n  }\n\n  goog.asserts.assert(this.manifest_, 'Manifest should be non-null');\n  return this.manifest_;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.stop = function() {\n  // Make sure we don't update the manifest again. Even if the timer is not\n  // running, this is safe to call.\n  if (this.updatePlaylistTimer_) {\n    this.updatePlaylistTimer_.stop();\n    this.updatePlaylistTimer_ = null;\n  }\n\n  /** @type {!Array.<!Promise>} */\n  const pending = [];\n\n  if (this.operationManager_) {\n    pending.push(this.operationManager_.destroy());\n    this.operationManager_ = null;\n  }\n\n  this.playerInterface_ = null;\n  this.config_ = null;\n  this.mediaTagsToStreamInfosMap_.clear();\n  this.variantUriSet_.clear();\n  this.uriToStreamInfosMap_.clear();\n  this.manifest_ = null;\n\n  return Promise.all(pending);\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.update = function() {\n  if (!this.isLive_()) {\n    return;\n  }\n\n  /** @type {!Array.<!Promise>} */\n  const updates = [];\n\n  for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n    updates.push(this.updateStream_(streamInfo));\n  }\n\n  return Promise.all(updates);\n};\n\n\n/**\n * Updates a stream.\n *\n * @param {!shaka.hls.HlsParser.StreamInfo} streamInfo\n * @return {!Promise}\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.updateStream_ = async function(streamInfo) {\n  const Utils = shaka.hls.Utils;\n  const PresentationType = shaka.hls.HlsParser.PresentationType_;\n\n  const manifestUri = streamInfo.absoluteMediaPlaylistUri;\n  const response = await this.requestManifest_(manifestUri);\n\n  /** @type {shaka.hls.Playlist} */\n  const playlist = this.manifestTextParser_.parsePlaylist(\n      response.data, response.uri);\n\n  if (playlist.type != shaka.hls.PlaylistType.MEDIA) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n  }\n\n  const mediaSequenceTag = Utils.getFirstTagWithName(\n      playlist.tags, 'EXT-X-MEDIA-SEQUENCE');\n\n  const startPosition = mediaSequenceTag ? Number(mediaSequenceTag.value) : 0;\n  const stream = streamInfo.stream;\n\n  const segments = await this.createSegments_(\n        streamInfo.verbatimMediaPlaylistUri,\n        playlist,\n        startPosition,\n        stream.mimeType,\n        stream.codecs);\n\n  streamInfo.segmentIndex.replace(segments);\n\n  const newestSegment = segments[segments.length - 1];\n  goog.asserts.assert(newestSegment, 'Should have segments!');\n\n  // Once the last segment has been added to the playlist,\n  // #EXT-X-ENDLIST tag will be appended.\n  // If that happened, treat the rest of the EVENT presentation as VOD.\n  const endListTag = Utils.getFirstTagWithName(playlist.tags, 'EXT-X-ENDLIST');\n\n  if (endListTag) {\n    // Convert the presentation to VOD and set the duration to the last\n    // segment's end time.\n    this.setPresentationType_(PresentationType.VOD);\n    this.presentationTimeline_.setDuration(newestSegment.endTime);\n  }\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.onExpirationUpdated = function(\n    sessionId, expiration) {\n  // No-op\n};\n\n\n/**\n * Parses the manifest.\n *\n * @param {!ArrayBuffer} data\n * @throws shaka.util.Error When there is a parsing error.\n * @return {!Promise}\n * @private\n */\nshaka.hls.HlsParser.prototype.parseManifest_ = async function(data) {\n  goog.asserts.assert(this.masterPlaylistUri_,\n      'Master playlist URI must be set before calling parseManifest_!');\n\n  const playlist = this.manifestTextParser_.parsePlaylist(\n      data, this.masterPlaylistUri_);\n\n  // We don't support directly providing a Media Playlist.\n  // See the error code for details.\n  if (playlist.type != shaka.hls.PlaylistType.MASTER) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_MASTER_PLAYLIST_NOT_PROVIDED);\n  }\n\n  const period = await this.createPeriod_(playlist);\n\n  // Make sure that the parser has not been destroyed.\n  if (!this.playerInterface_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n\n  if (this.aesEncrypted_ && period.variants.length == 0) {\n    // We do not support AES-128 encryption with HLS yet. Variants is null\n    // when the playlist is encrypted with AES-128.\n    shaka.log.info('No stream is created, because we don\\'t support AES-128',\n        'encryption yet');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_AES_128_ENCRYPTION_NOT_SUPPORTED);\n  }\n\n  // HLS has no notion of periods.  We're treating the whole presentation as\n  // one period.\n  this.playerInterface_.filterAllPeriods([period]);\n\n  // Find the min and max timestamp of the earliest segment in all streams.\n  // Find the minimum duration of all streams as well.\n  let minFirstTimestamp = Infinity;\n  let maxFirstTimestamp = 0;\n  let maxLastTimestamp = 0;\n  let minDuration = Infinity;\n\n  for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n    minFirstTimestamp =\n        Math.min(minFirstTimestamp, streamInfo.minTimestamp);\n    maxFirstTimestamp =\n        Math.max(maxFirstTimestamp, streamInfo.minTimestamp);\n    maxLastTimestamp =\n        Math.max(maxLastTimestamp, streamInfo.maxTimestamp);\n    if (streamInfo.stream.type != 'text') {\n      minDuration = Math.min(minDuration, streamInfo.duration);\n    }\n  }\n\n  // This assert is our own sanity check.\n  goog.asserts.assert(this.presentationTimeline_ == null,\n                      'Presentation timeline created early!');\n  this.createPresentationTimeline_(maxLastTimestamp);\n\n  // This assert satisfies the compiler that it is not null for the rest of\n  // the method.\n  goog.asserts.assert(this.presentationTimeline_,\n                      'Presentation timeline not created!');\n\n  if (this.isLive_()) {\n    // The HLS spec (RFC 8216) states in 6.3.4:\n    // \"the client MUST wait for at least the target duration before\n    // attempting to reload the Playlist file again\"\n    this.updatePlaylistDelay_ = this.minTargetDuration_;\n\n    // The spec says nothing much about seeking in live content, but Safari's\n    // built-in HLS implementation does not allow it.  Therefore we will set\n    // the availability window equal to the presentation delay.  The player\n    // will be able to buffer ahead three segments, but the seek window will\n    // be zero-sized.\n    const PresentationType = shaka.hls.HlsParser.PresentationType_;\n\n    if (this.presentationType_ == PresentationType.LIVE) {\n      // This defaults to the presentation delay, which has the effect of\n      // making the live stream unseekable.  This is consistent with Apple's\n      // HLS implementation.\n      let segmentAvailabilityDuration = this.presentationTimeline_.getDelay();\n\n      // The app can override that with a longer duration, to allow seeking.\n      if (!isNaN(this.config_.availabilityWindowOverride)) {\n        segmentAvailabilityDuration = this.config_.availabilityWindowOverride;\n      }\n\n      this.presentationTimeline_.setSegmentAvailabilityDuration(\n          segmentAvailabilityDuration);\n    }\n\n    let rolloverSeconds =\n        shaka.hls.HlsParser.TS_ROLLOVER_ / shaka.hls.HlsParser.TS_TIMESCALE_;\n    let offset = 0;\n    while (maxFirstTimestamp >= rolloverSeconds) {\n      offset += rolloverSeconds;\n      maxFirstTimestamp -= rolloverSeconds;\n    }\n    if (offset) {\n      shaka.log.debug('Offsetting live streams by', offset,\n                      'to compensate for rollover');\n\n      for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n        if (streamInfo.minTimestamp < rolloverSeconds) {\n          shaka.log.v1('Offset applied to', streamInfo.stream.type);\n          // This is the offset that StreamingEngine must apply to align the\n          // actual segment times with the period.\n          streamInfo.stream.presentationTimeOffset = -offset;\n          // The segments were created with actual media times, rather than\n          // period-aligned times, so offset them all to period time.\n          streamInfo.segmentIndex.offset(offset);\n        } else {\n          shaka.log.v1('Offset NOT applied to', streamInfo.stream.type);\n        }\n      }\n    }\n  } else {\n    // For VOD/EVENT content, offset everything back to 0.\n    // Use the minimum timestamp as the offset for all streams.\n    // Use the minimum duration as the presentation duration.\n    this.presentationTimeline_.setDuration(minDuration);\n    // Use a negative offset to adjust towards 0.\n    this.presentationTimeline_.offset(-minFirstTimestamp);\n\n    for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n      // This is the offset that StreamingEngine must apply to align the\n      // actual segment times with the period.\n      streamInfo.stream.presentationTimeOffset = minFirstTimestamp;\n      // The segments were created with actual media times, rather than\n      // period-aligned times, so offset them all now.\n      streamInfo.segmentIndex.offset(-minFirstTimestamp);\n      // Finally, fit the segments to the period duration.\n      streamInfo.segmentIndex.fit(minDuration);\n    }\n  }\n\n  this.manifest_ = {\n    presentationTimeline: this.presentationTimeline_,\n    periods: [period],\n    offlineSessionIds: [],\n    minBufferTime: 0,\n  };\n};\n\n\n/**\n * Parses a playlist into a Period object.\n *\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<!shaka.extern.Period>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createPeriod_ = async function(playlist) {\n  const Utils = shaka.hls.Utils;\n  const Functional = shaka.util.Functional;\n  let tags = playlist.tags;\n\n  let mediaTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MEDIA');\n  let textStreamTags = mediaTags.filter(function(tag) {\n    let type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n    return type == 'SUBTITLES';\n  }.bind(this));\n\n  let textStreamPromises = textStreamTags.map(function(tag) {\n    return this.createTextStream_(tag, playlist);\n  }.bind(this));\n\n  const closedCaptionsTags = mediaTags.filter((tag) => {\n    const type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n    return type == 'CLOSED-CAPTIONS';\n  });\n\n  this.parseClosedCaptions_(closedCaptionsTags);\n\n  const textStreams = await Promise.all(textStreamPromises);\n  // Create Variants for every 'EXT-X-STREAM-INF' tag.  Do this after text\n  // streams have been created, so that we can push text codecs found on the\n  // variant tag back into the created text streams.\n  let variantTags = Utils.filterTagsByName(tags, 'EXT-X-STREAM-INF');\n  let variantsPromises = variantTags.map(function(tag) {\n    return this.createVariantsForTag_(tag, playlist);\n  }.bind(this));\n\n  const allVariants = await Promise.all(variantsPromises);\n  let variants = allVariants.reduce(Functional.collapseArrays, []);\n  // Filter out null variants.\n  variants = variants.filter((variant) => variant != null);\n\n  return {\n    startTime: 0,\n    variants: variants,\n    textStreams: textStreams,\n  };\n};\n\n\n/**\n * @param {!shaka.hls.Tag} tag\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<!Array.<!shaka.extern.Variant>>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariantsForTag_ =\n    async function(tag, playlist) {\n  goog.asserts.assert(tag.name == 'EXT-X-STREAM-INF',\n                      'Should only be called on variant tags!');\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const Utils = shaka.hls.Utils;\n\n  // These are the default codecs to assume if none are specified.\n  //\n  // The video codec is H.264, with baseline profile and level 3.0.\n  // http://blog.pearce.org.nz/2013/11/what-does-h264avc1-codecs-parameters.html\n  //\n  // The audio codec is \"low-complexity\" AAC.\n  const defaultCodecs = 'avc1.42E01E,mp4a.40.2';\n\n  const codecsString = tag.getAttributeValue('CODECS', defaultCodecs);\n  // Strip out internal whitespace while splitting on commas:\n  /** @type {!Array.<string>} */\n  let codecs =\n      shaka.hls.HlsParser.filterDuplicateCodecs_(codecsString.split(/\\s*,\\s*/));\n  let resolutionAttr = tag.getAttribute('RESOLUTION');\n  let width = null;\n  let height = null;\n  let frameRate = tag.getAttributeValue('FRAME-RATE');\n  let bandwidth =\n      Number(shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'BANDWIDTH'));\n\n  if (resolutionAttr) {\n    let resBlocks = resolutionAttr.value.split('x');\n    width = resBlocks[0];\n    height = resBlocks[1];\n  }\n\n  // After filtering, this is a list of the media tags we will process to\n  // combine with the variant tag (EXT-X-STREAM-INF) we are working on.\n  let mediaTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MEDIA');\n\n  // Do not create stream info from closed captions media tags, which are\n  // embedded in video streams.\n  mediaTags = mediaTags.filter((tag) => {\n    const type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n    return type != 'CLOSED-CAPTIONS';\n  });\n\n  // AUDIO or VIDEO tags without a URI attribute are valid.\n  // If there is no uri, it means that audio/video is embedded in the\n  // stream described by the Variant tag.\n  // Do not create stream from AUDIO/VIDEO EXT-X-MEDIA tags without URI\n  mediaTags = mediaTags.filter((tag) => {\n    const uri = tag.getAttributeValue('URI') || '';\n    const type = tag.getAttributeValue('TYPE') || '';\n    return type == 'SUBTITLES' || uri != '';\n  });\n\n  let audioGroupId = tag.getAttributeValue('AUDIO');\n  let videoGroupId = tag.getAttributeValue('VIDEO');\n  goog.asserts.assert(audioGroupId == null || videoGroupId == null,\n      'Unexpected: both video and audio described by media tags!');\n\n  // Find any associated audio or video groups and create streams for them.\n  if (audioGroupId) {\n    mediaTags = Utils.findMediaTags(mediaTags, 'AUDIO', audioGroupId);\n  } else if (videoGroupId) {\n    mediaTags = Utils.findMediaTags(mediaTags, 'VIDEO', videoGroupId);\n  }\n\n  // There may be a codec string for the text stream.  We should identify it,\n  // add it to the appropriate stream, then strip it out of the variant to\n  // avoid confusing our multiplex detection below.\n  let textCodecs = this.guessCodecsSafe_(ContentType.TEXT, codecs);\n  if (textCodecs) {\n    // We found a text codec in the list, so look for an associated text stream.\n    let subGroupId = tag.getAttributeValue('SUBTITLES');\n    if (subGroupId) {\n      let textTags = Utils.findMediaTags(mediaTags, 'SUBTITLES', subGroupId);\n      goog.asserts.assert(textTags.length == 1,\n                          'Exactly one text tag expected!');\n      if (textTags.length) {\n        // We found a text codec and text stream, so make sure the codec is\n        // attached to the stream.\n        const textStreamInfo =\n            this.mediaTagsToStreamInfosMap_.get(textTags[0].id);\n        textStreamInfo.stream.codecs = textCodecs;\n      }\n    }\n\n    // Remove this entry from the list of codecs that belong to audio/video.\n    shaka.util.ArrayUtils.remove(codecs, textCodecs);\n  }\n\n  let promises = mediaTags.map(function(tag) {\n    return this.createStreamInfoFromMediaTag_(tag, codecs);\n  }.bind(this));\n\n  let audioStreamInfos = [];\n  let videoStreamInfos = [];\n\n  let streamInfo;\n  let data = await Promise.all(promises);\n  // Filter out null streamInfo.\n  data = data.filter((info) => info != null);\n  if (audioGroupId) {\n    audioStreamInfos = data;\n  } else if (videoGroupId) {\n    videoStreamInfos = data;\n  }\n\n  // Make an educated guess about the stream type.\n  shaka.log.debug('Guessing stream type for', tag.toString());\n  let type;\n  let ignoreStream = false;\n  if (!audioStreamInfos.length && !videoStreamInfos.length) {\n    // There are no associated streams.  This is either an audio-only stream,\n    // a video-only stream, or a multiplexed stream.\n\n    if (codecs.length == 1) {\n      // There is only one codec, so it shouldn't be multiplexed.\n\n      let videoCodecs = this.guessCodecsSafe_(ContentType.VIDEO, codecs);\n      if (resolutionAttr || frameRate || videoCodecs) {\n        // Assume video-only.\n        shaka.log.debug('Guessing video-only.');\n        type = ContentType.VIDEO;\n      } else {\n        // Assume audio-only.\n        shaka.log.debug('Guessing audio-only.');\n        type = ContentType.AUDIO;\n      }\n    } else {\n      // There are multiple codecs, so assume multiplexed content.\n      // Note that the default used when CODECS is missing assumes multiple\n      // (and therefore multiplexed).\n      // Recombine the codec strings into one so that MediaSource isn't\n      // lied to later.  (That would trigger an error in Chrome.)\n      shaka.log.debug('Guessing multiplexed audio+video.');\n      type = ContentType.VIDEO;\n      codecs = [codecs.join(',')];\n    }\n  } else if (audioStreamInfos.length) {\n    let streamURI = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'URI');\n    let firstAudioStreamURI = audioStreamInfos[0].verbatimMediaPlaylistUri;\n    if (streamURI == firstAudioStreamURI) {\n      // The Microsoft HLS manifest generators will make audio-only variants\n      // that link to their URI both directly and through an audio tag.\n      // In that case, ignore the local URI and use the version in the\n      // AUDIO tag, so you inherit its language.\n      // As an example, see the manifest linked in issue #860.\n      shaka.log.debug('Guessing audio-only.');\n      type = ContentType.AUDIO;\n      ignoreStream = true;\n    } else {\n      // There are associated audio streams.  Assume this is video.\n      shaka.log.debug('Guessing video.');\n      type = ContentType.VIDEO;\n    }\n  } else {\n    // There are associated video streams.  Assume this is audio.\n    goog.asserts.assert(videoStreamInfos.length,\n        'No video streams!  This should have been handled already!');\n    shaka.log.debug('Guessing audio.');\n    type = ContentType.AUDIO;\n  }\n\n  goog.asserts.assert(type, 'Type should have been set by now!');\n  if (!ignoreStream) {\n    streamInfo =\n        await this.createStreamInfoFromVariantTag_(tag, codecs, type);\n  }\n\n  if (streamInfo) {\n    if (streamInfo.stream.type == ContentType.AUDIO) {\n      audioStreamInfos = [streamInfo];\n    } else {\n      videoStreamInfos = [streamInfo];\n    }\n  } else if (streamInfo === null) {  // Triple-equals to distinguish undefined\n    // We do not support AES-128 encryption with HLS yet. If the streamInfo is\n    // null because of AES-128 encryption, do not create variants for that.\n    shaka.log.debug('streamInfo is null');\n    return [];\n  }\n\n  goog.asserts.assert(videoStreamInfos.length || audioStreamInfos.length,\n      'We should have created a stream!');\n\n  if (videoStreamInfos) {\n    this.filterLegacyCodecs_(videoStreamInfos);\n  }\n  if (audioStreamInfos) {\n    this.filterLegacyCodecs_(audioStreamInfos);\n  }\n\n  return this.createVariants_(\n      audioStreamInfos,\n      videoStreamInfos,\n      bandwidth,\n      width,\n      height,\n      frameRate);\n};\n\n\n/**\n * Filters out unsupported codec strings from an array of stream infos.\n * @param {!Array.<shaka.hls.HlsParser.StreamInfo>} streamInfos\n * @private\n */\nshaka.hls.HlsParser.prototype.filterLegacyCodecs_ = function(streamInfos) {\n  streamInfos.forEach(function(streamInfo) {\n    let codecs = streamInfo.stream.codecs.split(',');\n    codecs = codecs.filter(function(codec) {\n      // mp4a.40.34 is a nonstandard codec string that is sometimes used in HLS\n      // for legacy reasons.  It is not recognized by non-Apple MSE.\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489520\n      // Therefore, ignore this codec string.\n      return codec != 'mp4a.40.34';\n    });\n    streamInfo.stream.codecs = codecs.join(',');\n  });\n};\n\n\n/**\n * @param {!Array.<!shaka.hls.HlsParser.StreamInfo>} audioInfos\n * @param {!Array.<!shaka.hls.HlsParser.StreamInfo>} videoInfos\n * @param {number} bandwidth\n * @param {?string} width\n * @param {?string} height\n * @param {?string} frameRate\n * @return {!Array.<!shaka.extern.Variant>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariants_ =\n    function(audioInfos, videoInfos, bandwidth, width, height, frameRate) {\n  const DrmEngine = shaka.media.DrmEngine;\n\n  videoInfos.forEach(function(info) {\n    this.addVideoAttributes_(info.stream, width, height, frameRate);\n  }.bind(this));\n\n  // In case of audio-only or video-only content, we create an array of\n  // one item containing a null.  This way, the double-loop works for all\n  // kinds of content.\n  // NOTE: we currently don't have support for audio-only content.\n  if (!audioInfos.length) {\n    audioInfos = [null];\n  }\n  if (!videoInfos.length) {\n    videoInfos = [null];\n  }\n\n  const variants = [];\n  for (const audioInfo of audioInfos) {\n    for (const videoInfo of videoInfos) {\n      const audioStream = audioInfo ? audioInfo.stream : null;\n      const videoStream = videoInfo ? videoInfo.stream : null;\n      const audioDrmInfos = audioInfo ? audioInfo.drmInfos : null;\n      const videoDrmInfos = videoInfo ? videoInfo.drmInfos : null;\n      const videoStreamUri =\n          videoInfo ? videoInfo.verbatimMediaPlaylistUri : '';\n      const audioStreamUri =\n          audioInfo ? audioInfo.verbatimMediaPlaylistUri : '';\n      const variantUriKey = videoStreamUri + ' - ' + audioStreamUri;\n\n      let drmInfos;\n      if (audioStream && videoStream) {\n        if (DrmEngine.areDrmCompatible(audioDrmInfos, videoDrmInfos)) {\n          drmInfos = DrmEngine.getCommonDrmInfos(audioDrmInfos, videoDrmInfos);\n        } else {\n          shaka.log.warning('Incompatible DRM info in HLS variant.  Skipping.');\n          continue;\n        }\n      } else if (audioStream) {\n        drmInfos = audioDrmInfos;\n      } else if (videoStream) {\n        drmInfos = videoDrmInfos;\n      }\n\n      if (this.variantUriSet_.has(variantUriKey)) {\n        // This happens when two variants only differ in their text streams.\n        shaka.log.debug('Skipping variant which only differs in text streams.');\n        continue;\n      }\n\n      const variant = this.createVariant_(\n          audioStream, videoStream, bandwidth, drmInfos);\n      variants.push(variant);\n      this.variantUriSet_.add(variantUriKey);\n    }\n  }\n  return variants;\n};\n\n\n/**\n * @param {shaka.extern.Stream} audio\n * @param {shaka.extern.Stream} video\n * @param {number} bandwidth\n * @param {!Array.<shaka.extern.DrmInfo>} drmInfos\n * @return {!shaka.extern.Variant}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariant_ =\n    function(audio, video, bandwidth, drmInfos) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Since both audio and video are of the same type, this assertion will catch\n  // certain mistakes at runtime that the compiler would miss.\n  goog.asserts.assert(!audio || audio.type == ContentType.AUDIO,\n                      'Audio parameter mismatch!');\n  goog.asserts.assert(!video || video.type == ContentType.VIDEO,\n                      'Video parameter mismatch!');\n\n  return {\n    id: this.globalId_++,\n    language: audio ? audio.language : 'und',\n    primary: (!!audio && audio.primary) || (!!video && video.primary),\n    audio: audio,\n    video: video,\n    bandwidth: bandwidth,\n    drmInfos: drmInfos,\n    allowedByApplication: true,\n    allowedByKeySystem: true,\n  };\n};\n\n\n/**\n * Parses an EXT-X-MEDIA tag with TYPE=\"SUBTITLES\" into a text stream.\n *\n * @param {!shaka.hls.Tag} tag\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<?shaka.extern.Stream>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createTextStream_ =\n    async function(tag, playlist) {\n  goog.asserts.assert(tag.name == 'EXT-X-MEDIA',\n                      'Should only be called on media tags!');\n\n  let type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n  goog.asserts.assert(type == 'SUBTITLES',\n                      'Should only be called on tags with TYPE=\"SUBTITLES\"!');\n\n  const streamInfo = await this.createStreamInfoFromMediaTag_(tag, []);\n  goog.asserts.assert(streamInfo, 'Should always have a streamInfo for text');\n  return streamInfo.stream;\n};\n\n\n/**\n * Parses an EXT-X-MEDIA tag with TYPE=\"CLOSED-CAPTIONS\", add store the values\n * into the map of group id to closed captions.\n *\n * @param {!Array.<shaka.hls.Tag>} tags\n * @private\n */\nshaka.hls.HlsParser.prototype.parseClosedCaptions_ = function(tags) {\n  for (const tag of tags) {\n    goog.asserts.assert(tag.name == 'EXT-X-MEDIA',\n        'Should only be called on media tags!');\n    const type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n    goog.asserts.assert(type == 'CLOSED-CAPTIONS',\n        'Should only be called on tags with TYPE=\"CLOSED-CAPTIONS\"!');\n\n    const LanguageUtils = shaka.util.LanguageUtils;\n    const languageValue = tag.getAttributeValue('LANGUAGE') || 'und';\n    const language = LanguageUtils.normalize(languageValue);\n\n    // The GROUP-ID value is a quoted-string that specifies the group to which\n    // the Rendition belongs.\n    const groupId =\n        shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'GROUP-ID');\n\n    // The value of INSTREAM-ID is a quoted-string that specifies a Rendition\n    // within the segments in the Media Playlist. This attribute is REQUIRED if\n    // the TYPE attribute is CLOSED-CAPTIONS.\n    const instreamId =\n        shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'INSTREAM-ID');\n    if (!this.groupIdToClosedCaptionsMap_.get(groupId)) {\n      this.groupIdToClosedCaptionsMap_.set(groupId, new Map());\n    }\n    this.groupIdToClosedCaptionsMap_.get(groupId).set(instreamId, language);\n  }\n};\n\n\n/**\n * Parse EXT-X-MEDIA media tag into a Stream object.\n *\n * @param {shaka.hls.Tag} tag\n * @param {!Array.<string>} allCodecs\n * @return {!Promise.<?shaka.hls.HlsParser.StreamInfo>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfoFromMediaTag_ =\n    async function(tag, allCodecs) {\n  goog.asserts.assert(tag.name == 'EXT-X-MEDIA',\n                      'Should only be called on media tags!');\n\n  const HlsParser = shaka.hls.HlsParser;\n  const verbatimMediaPlaylistUri = HlsParser.getRequiredAttributeValue_(\n      tag, 'URI');\n\n  // Check if the stream has already been created as part of another Variant\n  // and return it if it has.\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n  }\n\n  let type = HlsParser.getRequiredAttributeValue_(tag, 'TYPE').toLowerCase();\n  // Shaka recognizes the content types 'audio', 'video' and 'text'.\n  // The HLS 'subtitles' type needs to be mapped to 'text'.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (type == 'subtitles') type = ContentType.TEXT;\n\n  const LanguageUtils = shaka.util.LanguageUtils;\n  let language = LanguageUtils.normalize(/** @type {string} */(\n      tag.getAttributeValue('LANGUAGE', 'und')));\n  const name = tag.getAttributeValue('NAME');\n\n  let defaultAttr = tag.getAttribute('DEFAULT');\n  let autoselectAttr = tag.getAttribute('AUTOSELECT');\n  // TODO: Should we take into account some of the currently ignored attributes:\n  // FORCED, INSTREAM-ID, CHARACTERISTICS, CHANNELS?\n  // Attribute descriptions: https://bit.ly/2lpjOhj\n  let channelsAttribute = tag.getAttributeValue('CHANNELS');\n  let channelsCount = type == 'audio' ?\n      this.getChannelCount_(channelsAttribute) : null;\n  let primary = !!defaultAttr || !!autoselectAttr;\n  const streamInfo = await this.createStreamInfo_(\n      verbatimMediaPlaylistUri, allCodecs, type, language, primary, name,\n      channelsCount, /* closedCaptions */ null);\n  if (streamInfo == null) return null;\n  // TODO: This check is necessary because of the possibility of multiple\n  // calls to createStreamInfoFromMediaTag_ before either has resolved.\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n  }\n\n  this.mediaTagsToStreamInfosMap_.set(tag.id, streamInfo);\n  this.uriToStreamInfosMap_.set(verbatimMediaPlaylistUri, streamInfo);\n  return streamInfo;\n};\n\n\n/**\n * Get the channel count information for an HLS audio track.\n *\n * @param {?string} channels A string that specifies an ordered, \"/\" separated\n *   list of parameters.  If the type is audio, the first parameter will be a\n *   decimal integer specifying the number of independent, simultaneous audio\n *   channels.\n *   No other channels parameters are currently defined.\n * @return {?number} channelcount\n * @private\n */\nshaka.hls.HlsParser.prototype.getChannelCount_ = function(channels) {\n  if (!channels) return null;\n  let channelcountstring = channels.split('/')[0];\n  let count = parseInt(channelcountstring, 10);\n  return count;\n};\n\n\n/**\n * Parse an EXT-X-STREAM-INF media tag into a Stream object.\n *\n * @param {!shaka.hls.Tag} tag\n * @param {!Array.<string>} allCodecs\n * @param {string} type\n * @return {!Promise.<?shaka.hls.HlsParser.StreamInfo>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfoFromVariantTag_ =\n    async function(tag, allCodecs, type) {\n  goog.asserts.assert(tag.name == 'EXT-X-STREAM-INF',\n                      'Should only be called on media tags!');\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const HlsParser = shaka.hls.HlsParser;\n  const verbatimMediaPlaylistUri = HlsParser.getRequiredAttributeValue_(\n      tag, 'URI');\n\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n  }\n  // The attribute of closed captions is optional, and the value may be 'NONE'.\n  const closedCaptionsAttr = tag.getAttributeValue('CLOSED-CAPTIONS');\n\n  // EXT-X-STREAM-INF tags may have CLOSED-CAPTIONS attributes.\n  // The value can be either a quoted-string or an enumerated-string with the\n  // value NONE. If the value is a quoted-string, it MUST match the value of\n  // the GROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Playlist\n  // whose TYPE attribute is CLOSED-CAPTIONS.\n  let closedCaptions = null;\n  if (type == ContentType.VIDEO && closedCaptionsAttr &&\n      closedCaptionsAttr != 'NONE') {\n    closedCaptions = this.groupIdToClosedCaptionsMap_.get(closedCaptionsAttr);\n  }\n\n  const streamInfo = await this.createStreamInfo_(verbatimMediaPlaylistUri,\n       allCodecs, type, /* language */ 'und', /* primary */ false,\n       /* name */ null, /* channelcount */ null, closedCaptions);\n  if (streamInfo == null) return null;\n  // TODO: This check is necessary because of the possibility of multiple\n  // calls to createStreamInfoFromVariantTag_ before either has resolved.\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n  }\n\n  this.uriToStreamInfosMap_.set(verbatimMediaPlaylistUri, streamInfo);\n  return streamInfo;\n};\n\n\n/**\n * @param {string} verbatimMediaPlaylistUri\n * @param {!Array.<string>} allCodecs\n * @param {string} type\n * @param {string} language\n * @param {boolean} primary\n * @param {?string} name\n * @param {?number} channelsCount\n * @param {Map.<string, string>} closedCaptions\n * @return {!Promise.<?shaka.hls.HlsParser.StreamInfo>}\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfo_ = async function(\n    verbatimMediaPlaylistUri, allCodecs, type, language, primary, name,\n    channelsCount, closedCaptions) {\n  // TODO: Refactor, too many parameters\n  const Utils = shaka.hls.Utils;\n\n  let absoluteMediaPlaylistUri = Utils.constructAbsoluteUri(\n      this.masterPlaylistUri_, verbatimMediaPlaylistUri);\n\n  /** @type {!shaka.hls.Playlist} */\n  let playlist;\n  /** @type {string} */\n  let codecs = '';\n  /** @type {string} */\n  let mimeType;\n\n  const response = await this.requestManifest_(absoluteMediaPlaylistUri);\n  // Record the final URI after redirects.\n  absoluteMediaPlaylistUri = response.uri;\n\n  // Record the redirected, final URI of this media playlist when we parse it.\n  playlist = this.manifestTextParser_.parsePlaylist(\n      response.data, absoluteMediaPlaylistUri);\n\n  if (playlist.type != shaka.hls.PlaylistType.MEDIA) {\n    // EXT-X-MEDIA tags should point to media playlists.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n  }\n\n  /** @type {!Array.<!shaka.hls.Tag>} */\n  let drmTags = [];\n  playlist.segments.forEach(function(segment) {\n    const segmentKeyTags = Utils.filterTagsByName(segment.tags,\n                                                'EXT-X-KEY');\n    drmTags.push.apply(drmTags, segmentKeyTags);\n  });\n\n  let encrypted = false;\n  /** @type {!Array.<shaka.extern.DrmInfo>}*/\n  let drmInfos = [];\n  let keyId = null;\n\n  // TODO: May still need changes to support key rotation.\n  for (const drmTag of drmTags) {\n    let method =\n        shaka.hls.HlsParser.getRequiredAttributeValue_(drmTag, 'METHOD');\n    if (method != 'NONE') {\n      encrypted = true;\n\n      // We do not support AES-128 encryption with HLS yet. So, do not create\n      // StreamInfo for the playlist encrypted with AES-128.\n      // TODO: Remove the error message once we add support for AES-128.\n      if (method == 'AES-128') {\n        shaka.log.warning('Unsupported HLS Encryption', method);\n        this.aesEncrypted_ = true;\n        return null;\n      }\n\n      let keyFormat =\n          shaka.hls.HlsParser.getRequiredAttributeValue_(drmTag, 'KEYFORMAT');\n      let drmParser =\n          shaka.hls.HlsParser.KEYFORMATS_TO_DRM_PARSERS_[keyFormat];\n\n      let drmInfo = drmParser ? drmParser(drmTag) : null;\n      if (drmInfo) {\n        if (drmInfo.keyIds.length) {\n          keyId = drmInfo.keyIds[0];\n        }\n        drmInfos.push(drmInfo);\n      } else {\n        shaka.log.warning('Unsupported HLS KEYFORMAT', keyFormat);\n      }\n    }\n  }\n\n  if (encrypted && !drmInfos.length) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_KEYFORMATS_NOT_SUPPORTED);\n  }\n\n\n  goog.asserts.assert(playlist.segments != null,\n                      'Media playlist should have segments!');\n\n  this.determinePresentationType_(playlist);\n\n  codecs = this.guessCodecs_(type, allCodecs);\n  const mimeTypeArg = await this.guessMimeType_(type, codecs, playlist);\n\n  mimeType = mimeTypeArg;\n\n  let mediaSequenceTag = Utils.getFirstTagWithName(playlist.tags,\n                                                   'EXT-X-MEDIA-SEQUENCE');\n\n  let startPosition = mediaSequenceTag ? Number(mediaSequenceTag.value) : 0;\n\n  const segments = await this.createSegments_(\n      verbatimMediaPlaylistUri, playlist, startPosition, mimeType, codecs);\n\n  let minTimestamp = segments[0].startTime;\n  let lastEndTime = segments[segments.length - 1].endTime;\n  let duration = lastEndTime - minTimestamp;\n  let segmentIndex = new shaka.media.SegmentIndex(segments);\n\n  const initSegmentReference = this.createInitSegmentReference_(playlist);\n\n  let kind = undefined;\n  if (type == shaka.util.ManifestParserUtils.ContentType.TEXT) {\n    kind = shaka.util.ManifestParserUtils.TextStreamKind.SUBTITLE;\n  }\n\n\n  /** @type {shaka.extern.Stream} */\n  let stream = {\n    id: this.globalId_++,\n    originalId: name,\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n    getSegmentReference: segmentIndex.get.bind(segmentIndex),\n    initSegmentReference: initSegmentReference,\n    presentationTimeOffset: 0,\n    mimeType: mimeType,\n    codecs: codecs,\n    kind: kind,\n    encrypted: encrypted,\n    keyId: keyId,\n    language: language,\n    label: name,  // For historical reasons, since before \"originalId\".\n    type: type,\n    primary: primary,\n    // TODO: trick mode\n    trickModeVideo: null,\n    emsgSchemeIdUris: null,\n    frameRate: undefined,\n    width: undefined,\n    height: undefined,\n    bandwidth: undefined,\n    roles: [],\n    channelsCount: channelsCount,\n    closedCaptions: closedCaptions,\n  };\n\n  return {\n    stream: stream,\n    segmentIndex: segmentIndex,\n    drmInfos: drmInfos,\n    verbatimMediaPlaylistUri: verbatimMediaPlaylistUri,\n    absoluteMediaPlaylistUri: absoluteMediaPlaylistUri,\n    minTimestamp: minTimestamp,\n    maxTimestamp: lastEndTime,\n    duration: duration,\n  };\n};\n\n\n/**\n * @param {!shaka.hls.Playlist} playlist\n * @private\n */\nshaka.hls.HlsParser.prototype.determinePresentationType_ = function(playlist) {\n  const Utils = shaka.hls.Utils;\n  const PresentationType = shaka.hls.HlsParser.PresentationType_;\n  let presentationTypeTag = Utils.getFirstTagWithName(playlist.tags,\n                                                      'EXT-X-PLAYLIST-TYPE');\n  let endListTag = Utils.getFirstTagWithName(playlist.tags, 'EXT-X-ENDLIST');\n\n  let isVod = (presentationTypeTag && presentationTypeTag.value == 'VOD') ||\n      endListTag;\n  let isEvent = presentationTypeTag && presentationTypeTag.value == 'EVENT' &&\n      !isVod;\n  let isLive = !isVod && !isEvent;\n\n  if (isVod) {\n    this.setPresentationType_(PresentationType.VOD);\n  } else {\n    // If it's not VOD, it must be presentation type LIVE or an ongoing EVENT.\n    if (isLive) {\n      this.setPresentationType_(PresentationType.LIVE);\n    } else {\n      this.setPresentationType_(PresentationType.EVENT);\n    }\n\n    let targetDurationTag = this.getRequiredTag_(playlist.tags,\n                                                 'EXT-X-TARGETDURATION');\n    let targetDuration = Number(targetDurationTag.value);\n\n    // According to the HLS spec, updates should not happen more often than\n    // once in targetDuration.  It also requires us to only update the active\n    // variant.  We might implement that later, but for now every variant\n    // will be updated.  To get the update period, choose the smallest\n    // targetDuration value across all playlists.\n\n    // Update the longest target duration if need be to use as a presentation\n    // delay later.\n    this.maxTargetDuration_ = Math.max(targetDuration, this.maxTargetDuration_);\n    // Update the shortest one to use as update period and segment availability\n    // time (for LIVE).\n    this.minTargetDuration_ = Math.min(targetDuration, this.minTargetDuration_);\n  }\n};\n\n\n/**\n * @param {number} lastTimestamp\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.createPresentationTimeline_ =\n    function(lastTimestamp) {\n  if (this.isLive_()) {\n    // The live edge will be calculated from segments, so we don't need to set\n    // a presentation start time.  We will assert later that this is working as\n    // expected.\n\n    // The HLS spec (RFC 8216) states in 6.3.3:\n    //\n    // \"The client SHALL choose which Media Segment to play first ... the\n    // client SHOULD NOT choose a segment that starts less than three target\n    // durations from the end of the Playlist file.  Doing so can trigger\n    // playback stalls.\"\n    //\n    // We accomplish this in our DASH-y model by setting a presentation delay\n    // of 3 segments.  This will be the \"live edge\" of the presentation.\n    this.presentationTimeline_ = new shaka.media.PresentationTimeline(\n        /* presentationStartTime */ 0, /* delay */ this.maxTargetDuration_ * 3);\n    this.presentationTimeline_.setStatic(false);\n  } else {\n    this.presentationTimeline_ = new shaka.media.PresentationTimeline(\n        /* presentationStartTime */ null, /* delay */ 0);\n    this.presentationTimeline_.setStatic(true);\n  }\n\n  this.notifySegments_();\n\n  // This asserts that the live edge is being calculated from segment times.\n  // For VOD and event streams, this check should still pass.\n  goog.asserts.assert(\n      !this.presentationTimeline_.usingPresentationStartTime(),\n      'We should not be using the presentation start time in HLS!');\n};\n\n\n/**\n * @param {!shaka.hls.Playlist} playlist\n * @return {shaka.media.InitSegmentReference}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.createInitSegmentReference_ = function(playlist) {\n  const Utils = shaka.hls.Utils;\n  let mapTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MAP');\n  // TODO: Support multiple map tags?\n  // For now, we don't support multiple map tags and will throw an error.\n  if (!mapTags.length) {\n    return null;\n  } else if (mapTags.length > 1) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND);\n  }\n\n  // Map tag example: #EXT-X-MAP:URI=\"main.mp4\",BYTERANGE=\"720@0\"\n  let mapTag = mapTags[0];\n  const verbatimInitSegmentUri =\n      shaka.hls.HlsParser.getRequiredAttributeValue_(mapTag, 'URI');\n  const absoluteInitSegmentUri =\n      Utils.constructAbsoluteUri(playlist.absoluteUri, verbatimInitSegmentUri);\n\n  let startByte = 0;\n  let endByte = null;\n  let byterange = mapTag.getAttributeValue('BYTERANGE');\n  // If a BYTERANGE attribute is not specified, the segment consists\n  // of the entire resource.\n  if (byterange) {\n    let blocks = byterange.split('@');\n    let byteLength = Number(blocks[0]);\n    startByte = Number(blocks[1]);\n    endByte = startByte + byteLength - 1;\n  }\n\n  return new shaka.media.InitSegmentReference(\n      () => [absoluteInitSegmentUri],\n      startByte,\n      endByte);\n};\n\n\n/**\n * Parses one shaka.hls.Segment object into a shaka.media.SegmentReference.\n *\n * @param {!shaka.hls.Playlist} playlist\n * @param {shaka.media.SegmentReference} previousReference\n * @param {!shaka.hls.Segment} hlsSegment\n * @param {number} position\n * @param {number} startTime\n * @return {!shaka.media.SegmentReference}\n * @private\n */\nshaka.hls.HlsParser.prototype.createSegmentReference_ =\n    function(playlist, previousReference, hlsSegment, position, startTime) {\n  const Utils = shaka.hls.Utils;\n  const tags = hlsSegment.tags;\n  const absoluteSegmentUri = hlsSegment.absoluteUri;\n\n  let extinfTag = this.getRequiredTag_(tags, 'EXTINF');\n  // The EXTINF tag format is '#EXTINF:<duration>,[<title>]'.\n  // We're interested in the duration part.\n  let extinfValues = extinfTag.value.split(',');\n  let duration = Number(extinfValues[0]);\n  let endTime = startTime + duration;\n\n  let startByte = 0;\n  let endByte = null;\n  let byterange = Utils.getFirstTagWithName(tags, 'EXT-X-BYTERANGE');\n\n  // If BYTERANGE is not specified, the segment consists of the entire resource.\n  if (byterange) {\n    let blocks = byterange.value.split('@');\n    let byteLength = Number(blocks[0]);\n    if (blocks[1]) {\n      startByte = Number(blocks[1]);\n    } else {\n      goog.asserts.assert(previousReference,\n                          'Cannot refer back to previous HLS segment!');\n      startByte = previousReference.endByte + 1;\n    }\n    endByte = startByte + byteLength - 1;\n  }\n\n  return new shaka.media.SegmentReference(\n      position,\n      startTime,\n      endTime,\n      () => [absoluteSegmentUri],\n      startByte,\n      endByte);\n};\n\n\n/** @private */\nshaka.hls.HlsParser.prototype.notifySegments_ = function() {\n  // The presentation timeline may or may not be set yet.\n  // If it does not yet exist, hold onto the segments until it does.\n  if (!this.presentationTimeline_) {\n    return;\n  }\n  this.segmentsToNotifyByStream_.forEach((segments) => {\n    // HLS doesn't have separate periods.\n    this.presentationTimeline_.notifySegments(segments, /* periodStart */ 0);\n  });\n  this.segmentsToNotifyByStream_ = [];\n};\n\n\n/**\n * Parses shaka.hls.Segment objects into shaka.media.SegmentReferences.\n *\n * @param {string} verbatimMediaPlaylistUri\n * @param {!shaka.hls.Playlist} playlist\n * @param {number} startPosition\n * @param {string} mimeType\n * @param {string} codecs\n * @return {!Promise<!Array.<!shaka.media.SegmentReference>>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createSegments_ = async function(\n    verbatimMediaPlaylistUri, playlist, startPosition, mimeType, codecs) {\n  /** @type {Array.<!shaka.hls.Segment>} */\n  const hlsSegments = playlist.segments;\n  /** @type {!Array.<!shaka.media.SegmentReference>} */\n  const references = [];\n\n  goog.asserts.assert(hlsSegments.length, 'Playlist should have segments!');\n  // We may need to look at the media itself to determine a segment start time.\n  const firstSegmentUri = hlsSegments[0].absoluteUri;\n  const firstSegmentRef =\n      this.createSegmentReference_(\n          playlist,\n          null /* previousReference */,\n          hlsSegments[0],\n          startPosition,\n          0 /* startTime, irrelevant */);\n\n  const initSegmentRef = this.createInitSegmentReference_(playlist);\n\n  const firstStartTime = await this.getStartTime_(verbatimMediaPlaylistUri,\n                            initSegmentRef, firstSegmentRef, mimeType, codecs);\n  shaka.log.debug('First segment', firstSegmentUri.split('/').pop(),\n                  'starts at', firstStartTime);\n  for (let i = 0; i < hlsSegments.length; ++i) {\n    let hlsSegment = hlsSegments[i];\n    let previousReference = references[references.length - 1];\n    let startTime = (i == 0) ? firstStartTime : previousReference.endTime;\n    let position = startPosition + i;\n\n    let reference = this.createSegmentReference_(\n        playlist,\n        previousReference,\n        hlsSegment,\n        position,\n        startTime);\n    references.push(reference);\n  }\n\n  this.segmentsToNotifyByStream_.push(references);\n  this.notifySegments_();\n\n  return references;\n};\n\n\n/**\n * Try to fetch a partial segment, and fall back to a full segment if we have\n * to.\n *\n * @param {!shaka.media.AnySegmentReference} reference\n * @return {!Promise.<shaka.extern.Response>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.fetchPartialSegment_ = async function(reference) {\n  const RequestType = shaka.net.NetworkingEngine.RequestType;\n\n  // Create two requests:\n  //  1. A partial request meant to fetch the smallest part of the segment\n  //     required to get the time stamp.\n  //  2. A full request meant as a fallback for when the server does not support\n  //     partial requests.\n\n  const partialRequest = shaka.util.Networking.createSegmentRequest(\n      reference.getUris(),\n      reference.startByte,\n      reference.startByte + shaka.hls.HlsParser.PARTIAL_SEGMENT_SIZE_ - 1,\n      this.config_.retryParameters);\n\n  const fullRequest = shaka.util.Networking.createSegmentRequest(\n      reference.getUris(),\n      reference.startByte,\n      reference.endByte,\n      this.config_.retryParameters);\n\n  // TODO(vaage): The need to do fall back requests is not likely to be unique\n  //    to here. It would be nice if the fallback(s) could be included into the\n  //    same abortable operation as the original request.\n  //\n  //    What would need to change with networking engine to support requests\n  //    with fallback(s)?\n\n  try {\n    const response = await this.makeNetworkRequest_(\n        partialRequest, RequestType.SEGMENT);\n\n    return response;\n  } catch (e) {\n    // If the networking operation was aborted, we don't want to treat it as\n    // a request failure. We surface the error so that the OPERATION_ABORTED\n    // error will be handled correctly.\n    if (e.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      throw e;\n    }\n\n    // The partial request may fail for a number of reasons.\n    // Some servers do not support Range requests, and others do not support\n    // the OPTIONS request which must be made before any cross-origin Range\n    // request.  Since this fallback is expensive, warn the app developer.\n    shaka.log.alwaysWarn('Unable to fetch a partial HLS segment! ' +\n                         'Falling back to a full segment request, ' +\n                         'which is expensive!  Your server should ' +\n                         'support Range requests and CORS preflights.',\n                         partialRequest.uris[0]);\n\n    const response = await this.makeNetworkRequest_(\n        fullRequest, RequestType.SEGMENT);\n\n    return response;\n  }\n};\n\n\n/**\n * Gets the start time of a segment from the existing manifest (if possible) or\n * by downloading it and parsing it otherwise.\n *\n * @param {string} verbatimMediaPlaylistUri\n * @param {shaka.media.InitSegmentReference} initSegmentRef\n * @param {!shaka.media.SegmentReference} segmentRef\n * @param {string} mimeType\n * @param {string} codecs\n * @return {!Promise.<number>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTime_ = async function(\n    verbatimMediaPlaylistUri, initSegmentRef, segmentRef, mimeType, codecs) {\n  // If we are updating the manifest, we can usually skip fetching the segment\n  // by examining the references we already have.  This won't be possible if\n  // there was some kind of lag or delay updating the manifest on the server,\n  // in which extreme case we would fall back to fetching a segment.  This\n  // allows us to both avoid fetching segments when possible, and recover from\n  // certain server-side issues gracefully.\n  if (this.manifest_) {\n    const streamInfo = this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n    const segmentIndex = streamInfo.segmentIndex;\n    const reference = segmentIndex.get(segmentRef.position);\n    if (reference) {\n      // We found it!  Avoid fetching and parsing the segment.\n      shaka.log.v1('Found segment start time in previous manifest');\n      return reference.startTime;\n    }\n\n    shaka.log.debug('Unable to find segment start time in previous manifest!');\n  }\n\n  // TODO: Introduce a new tag to extend HLS and provide the first segment's\n  // start time.  This will avoid the need for these fetches in content packaged\n  // with Shaka Packager.  This web-friendly extension to HLS can then be\n  // proposed to Apple for inclusion in a future version of HLS.\n  // See https://github.com/google/shaka-packager/issues/294\n\n  shaka.log.v1('Fetching segment to find start time');\n\n  if (mimeType == 'audio/mpeg') {\n    // There is no standard way to embed timestamps in mp3 files, so the\n    // start time is presumably 0.\n    return 0;\n  }\n\n  if (mimeType == 'video/mp4' || mimeType == 'audio/mp4') {\n    // We also need the init segment to get the correct timescale. But if the\n    // stream is self-initializing, use the same response for both.\n    const fetches = [this.fetchPartialSegment_(segmentRef)];\n\n    if (initSegmentRef) {\n      fetches.push(this.fetchPartialSegment_(initSegmentRef));\n    }\n\n    const responses = await Promise.all(fetches);\n\n    // If the stream is self-initializing, use the main segment in-place of the\n    // init segment.\n    const segmentResponse = responses[0];\n    const initSegmentResponse = responses[1] || responses[0];\n\n    return this.getStartTimeFromMp4Segment_(\n        segmentResponse.data, initSegmentResponse.data);\n  }\n\n  if (mimeType == 'video/mp2t') {\n    const response = await this.fetchPartialSegment_(segmentRef);\n    goog.asserts.assert(response.data, 'Should have a response body!');\n    return this.getStartTimeFromTsSegment_(response.data);\n  }\n\n  if (mimeType == 'application/mp4' || mimeType.startsWith('text/')) {\n    const response = await this.fetchPartialSegment_(segmentRef);\n    goog.asserts.assert(response.data, 'Should have a response body!');\n    return this.getStartTimeFromTextSegment_(mimeType, codecs, response.data);\n  }\n\n  // TODO(vaage): Add support for additional formats.\n  //\n  //   Formats:\n  //    - WebM\n  //    - AAC\n  //\n  //    Since we want to add more formats, how would a more general registry\n  //    system work to allow additional formats to be \"plugged-into\" the\n  //    parser.\n\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MANIFEST,\n      shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n};\n\n\n/**\n * Parses an mp4 segment to get its start time.\n *\n * @param {!ArrayBuffer} mediaData\n * @param {!ArrayBuffer} initData\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromMp4Segment_ =\n    function(mediaData, initData) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let timescale = 0;\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .fullBox('mdhd', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'MDHD version can only be 0 or 1');\n\n        // Skip \"creation_time\" and \"modification_time\".\n        // They are 4 bytes each if the mdhd box is version 0, 8 bytes each if\n        // it is version 1.\n        box.reader.skip(box.version == 0 ? 8 : 16);\n\n        timescale = box.reader.readUint32();\n        box.parser.stop();\n      }).parse(initData, true /* partialOkay */);\n\n  if (!timescale) {\n    shaka.log.error('Unable to find timescale in init segment!');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  }\n\n  let startTime = 0;\n  let parsedMedia = false;\n  new Mp4Parser()\n      .box('moof', Mp4Parser.children)\n      .box('traf', Mp4Parser.children)\n      .fullBox('tfdt', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'TFDT version can only be 0 or 1');\n        let baseTime = (box.version == 0) ?\n            box.reader.readUint32() :\n            box.reader.readUint64();\n        startTime = baseTime / timescale;\n        parsedMedia = true;\n        box.parser.stop();\n      }).parse(mediaData, true /* partialOkay */);\n\n  if (!parsedMedia) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  }\n  return startTime;\n};\n\n\n/**\n * Parses a TS segment to get its start time.\n *\n * @param {!ArrayBuffer} data\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromTsSegment_ = function(data) {\n  let reader = new shaka.util.DataViewReader(\n      new DataView(data), shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  const fail = function() {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  };\n\n  let packetStart = 0;\n  let syncByte = 0;\n\n  const skipPacket = function() {\n    // 188-byte packets are standard, so assume that.\n    reader.seek(packetStart + 188);\n    syncByte = reader.readUint8();\n    if (syncByte != 0x47) {\n      // We haven't found the sync byte, so try it as a 192-byte packet.\n      reader.seek(packetStart + 192);\n      syncByte = reader.readUint8();\n    }\n    if (syncByte != 0x47) {\n      // We still haven't found the sync byte, so try as a 204-byte packet.\n      reader.seek(packetStart + 204);\n      syncByte = reader.readUint8();\n    }\n    if (syncByte != 0x47) {\n      // We still haven't found the sync byte, so the packet was of a\n      // non-standard size.\n      fail();\n    }\n    // Put the sync byte back so we can read it in the next loop.\n    reader.rewind(1);\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // Format reference: https://bit.ly/TsPacket\n    packetStart = reader.getPosition();\n\n    syncByte = reader.readUint8();\n    if (syncByte != 0x47) fail();\n\n    let flagsAndPacketId = reader.readUint16();\n    let hasPesPacket = flagsAndPacketId & 0x4000;\n    if (!hasPesPacket) fail();\n\n    let flags = reader.readUint8();\n    let adaptationFieldControl = (flags & 0x30) >> 4;\n    if (adaptationFieldControl == 0 /* reserved */ ||\n        adaptationFieldControl == 2 /* adaptation field, no payload */) {\n      fail();\n    }\n\n    if (adaptationFieldControl == 3) {\n      // Skip over adaptation field.\n      let length = reader.readUint8();\n      reader.skip(length);\n    }\n\n    // Now we come to the PES header (hopefully).\n    // Format reference: https://bit.ly/TsPES\n    let startCode = reader.readUint32();\n    let startCodePrefix = startCode >> 8;\n    if (startCodePrefix != 1) {\n      // Not a PES packet yet.  Skip this TS packet and try again.\n      skipPacket();\n      continue;\n    }\n\n    // Skip the 16-bit PES length and the first 8 bits of the optional header.\n    reader.skip(3);\n    // The next 8 bits contain flags about DTS & PTS.\n    let ptsDtsIndicator = reader.readUint8() >> 6;\n    if (ptsDtsIndicator == 0 /* no timestamp */ ||\n        ptsDtsIndicator == 1 /* forbidden */) {\n      fail();\n    }\n\n    let pesHeaderLengthRemaining = reader.readUint8();\n    if (pesHeaderLengthRemaining == 0) {\n      fail();\n    }\n\n    if (ptsDtsIndicator == 2 /* PTS only */) {\n      goog.asserts.assert(pesHeaderLengthRemaining == 5, 'Bad PES header?');\n    } else if (ptsDtsIndicator == 3 /* PTS and DTS */) {\n      goog.asserts.assert(pesHeaderLengthRemaining == 10, 'Bad PES header?');\n    }\n\n    let pts0 = reader.readUint8();\n    let pts1 = reader.readUint16();\n    let pts2 = reader.readUint16();\n    // Reconstruct 33-bit PTS from the 5-byte, padded structure.\n    let ptsHigh3 = (pts0 & 0x0e) >> 1;\n    let ptsLow30 = ((pts1 & 0xfffe) << 14) | ((pts2 & 0xfffe) >> 1);\n    // Reconstruct the PTS as a float.  Avoid bitwise operations to combine\n    // because bitwise ops treat the values as 32-bit ints.\n    let pts = ptsHigh3 * (1 << 30) + ptsLow30;\n    return pts / shaka.hls.HlsParser.TS_TIMESCALE_;\n  }\n};\n\n\n/**\n * Parses a text segment to get its start time.\n *\n * @param {string} mimeType\n * @param {string} codecs\n * @param {!ArrayBuffer} data\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromTextSegment_ =\n    function(mimeType, codecs, data) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(mimeType, codecs);\n  if (!shaka.text.TextEngine.isTypeSupported(fullMimeType)) {\n    // We won't be able to parse this, but it will be filtered out anyway.\n    // So we don't have to care about the start time.\n    return 0;\n  }\n\n  let textEngine = new shaka.text.TextEngine(/* displayer */ null);\n  textEngine.initParser(fullMimeType);\n  return textEngine.getStartTime(data);\n};\n\n\n/**\n * Filters out duplicate codecs from the codec list.\n * @param {!Array.<string>} codecs\n * @return {!Array.<string>}\n * @private\n */\nshaka.hls.HlsParser.filterDuplicateCodecs_ = function(codecs) {\n  const seen = new Set();\n  const ret = [];\n  for (const codec of codecs) {\n    // HLS says the CODECS field needs to include all codecs that appear in the\n    // content.  This means that if the content changes profiles, it should\n    // include both.  Since all known browsers support changing profiles without\n    // any other work, just ignore them  See also:\n    // https://github.com/google/shaka-player/issues/1817\n    const shortCodec = shaka.util.MimeUtils.getCodecBase(codec);\n    if (!seen.has(shortCodec)) {\n      ret.push(codec);\n      seen.add(shortCodec);\n    } else {\n      shaka.log.debug('Ignoring duplicate codec');\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Attempts to guess which codecs from the codecs list belong to a given content\n * type.  Does not assume a single codec is anything special, and does not throw\n * if it fails to match.\n *\n * @param {string} contentType\n * @param {!Array.<string>} codecs\n * @return {?string} or null if no match is found\n * @private\n */\nshaka.hls.HlsParser.prototype.guessCodecsSafe_ = function(contentType, codecs) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const HlsParser = shaka.hls.HlsParser;\n  let formats = HlsParser.CODEC_REGEXPS_BY_CONTENT_TYPE_[contentType];\n\n  for (let i = 0; i < formats.length; i++) {\n    for (let j = 0; j < codecs.length; j++) {\n      if (formats[i].test(codecs[j].trim())) {\n        return codecs[j].trim();\n      }\n    }\n  }\n\n  // Text does not require a codec string.\n  if (contentType == ContentType.TEXT) {\n    return '';\n  }\n\n  return null;\n};\n\n\n/**\n * Attempts to guess which codecs from the codecs list belong to a given content\n * type.  Assumes that at least one codec is correct, and throws if none are.\n *\n * @param {string} contentType\n * @param {!Array.<string>} codecs\n * @return {string}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.guessCodecs_ = function(contentType, codecs) {\n  if (codecs.length == 1) {\n    return codecs[0];\n  }\n\n  let match = this.guessCodecsSafe_(contentType, codecs);\n  // A failure is specifically denoted by null; an empty string represents a\n  // valid match of no codec.\n  if (match != null) {\n    return match;\n  }\n\n  // Unable to guess codecs.\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MANIFEST,\n      shaka.util.Error.Code.HLS_COULD_NOT_GUESS_CODECS,\n      codecs);\n};\n\n\n/**\n * Attempts to guess stream's mime type based on content type and URI.\n *\n * @param {string} contentType\n * @param {string} codecs\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<string>}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.guessMimeType_ =\n    async function(contentType, codecs, playlist) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const HlsParser = shaka.hls.HlsParser;\n  const RequestType = shaka.net.NetworkingEngine.RequestType;\n\n  goog.asserts.assert(playlist.segments.length,\n                      'Playlist should have segments!');\n  const firstSegmentUri = playlist.segments[0].absoluteUri;\n\n  let parsedUri = new goog.Uri(firstSegmentUri);\n  let extension = parsedUri.getPath().split('.').pop();\n  let map = HlsParser.EXTENSION_MAP_BY_CONTENT_TYPE_[contentType];\n\n  let mimeType = map[extension];\n  if (mimeType) {\n    return mimeType;\n  }\n\n  if (contentType == ContentType.TEXT) {\n    // The extension map didn't work.\n    if (!codecs || codecs == 'vtt') {\n      // If codecs is 'vtt', it's WebVTT.\n      // If there was no codecs string, assume HLS text streams are WebVTT.\n      return 'text/vtt';\n    } else {\n      // Otherwise, assume MP4-embedded text, since text-based formats tend not\n      // to have a codecs string at all.\n      return 'application/mp4';\n    }\n  }\n\n  // If unable to guess mime type, request a segment and try getting it\n  // from the response.\n  let headRequest = shaka.net.NetworkingEngine.makeRequest(\n      [firstSegmentUri], this.config_.retryParameters);\n  headRequest.method = 'HEAD';\n\n  const response = await this.makeNetworkRequest_(\n      headRequest, RequestType.SEGMENT);\n\n  const contentMimeType = response.headers['content-type'];\n\n  if (!contentMimeType) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_GUESS_MIME_TYPE,\n        extension);\n  }\n\n  // Split the MIME type in case the server sent additional parameters.\n  return contentMimeType.split(';')[0];\n};\n\n\n/**\n * Find the attribute and returns its value.\n * Throws an error if attribute was not found.\n *\n * @param {shaka.hls.Tag} tag\n * @param {string} attributeName\n * @return {string}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.getRequiredAttributeValue_ = function(tag, attributeName) {\n  let attribute = tag.getAttribute(attributeName);\n  if (!attribute) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_REQUIRED_ATTRIBUTE_MISSING,\n        attributeName);\n  }\n\n  return attribute.value;\n};\n\n\n/**\n * Returns a tag with a given name.\n * Throws an error if tag was not found.\n *\n * @param {!Array.<shaka.hls.Tag>} tags\n * @param {string} tagName\n * @return {!shaka.hls.Tag}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.getRequiredTag_ = function(tags, tagName) {\n  const Utils = shaka.hls.Utils;\n  let tag = Utils.getFirstTagWithName(tags, tagName);\n  if (!tag) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_REQUIRED_TAG_MISSING, tagName);\n  }\n\n  return tag;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @param {?string} width\n * @param {?string} height\n * @param {?string} frameRate\n * @private\n */\nshaka.hls.HlsParser.prototype.addVideoAttributes_ =\n    function(stream, width, height, frameRate) {\n  if (stream) {\n    stream.width = Number(width) || undefined;\n    stream.height = Number(height) || undefined;\n    stream.frameRate = Number(frameRate) || undefined;\n  }\n};\n\n\n/**\n * Makes a network request for the manifest and returns a Promise\n * with the resulting data.\n *\n * @param {string} absoluteUri\n * @return {!Promise.<!shaka.extern.Response>}\n * @private\n */\nshaka.hls.HlsParser.prototype.requestManifest_ = function(absoluteUri) {\n  const RequestType = shaka.net.NetworkingEngine.RequestType;\n\n  const request = shaka.net.NetworkingEngine.makeRequest(\n      [absoluteUri], this.config_.retryParameters);\n\n  return this.makeNetworkRequest_(request, RequestType.MANIFEST);\n};\n\n\n/**\n * A list of regexps to detect well-known video codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.VIDEO_CODEC_REGEXPS_ = [\n  /^avc/,\n  /^hev/,\n  /^hvc/,\n  /^vp0?[89]/,\n  /^av1$/,\n];\n\n\n/**\n * A list of regexps to detect well-known audio codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.AUDIO_CODEC_REGEXPS_ = [\n  /^vorbis$/,\n  /^opus$/,\n  /^flac$/,\n  /^mp4a/,\n  /^[ae]c-3$/,\n];\n\n\n/**\n * A list of regexps to detect well-known text codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.TEXT_CODEC_REGEXPS_ = [\n  /^vtt$/,\n  /^wvtt/,\n  /^stpp/,\n];\n\n\n/**\n * @const {!Object.<string, !Array.<!RegExp>>}\n * @private\n */\nshaka.hls.HlsParser.CODEC_REGEXPS_BY_CONTENT_TYPE_ = {\n  'audio': shaka.hls.HlsParser.AUDIO_CODEC_REGEXPS_,\n  'video': shaka.hls.HlsParser.VIDEO_CODEC_REGEXPS_,\n  'text': shaka.hls.HlsParser.TEXT_CODEC_REGEXPS_,\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.AUDIO_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'audio/mp4',\n  'm4s': 'audio/mp4',\n  'm4i': 'audio/mp4',\n  'm4a': 'audio/mp4',\n  // MPEG2-TS also uses video/ for audio: https://bit.ly/TsMse\n  'ts': 'video/mp2t',\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.VIDEO_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'video/mp4',\n  'm4s': 'video/mp4',\n  'm4i': 'video/mp4',\n  'm4v': 'video/mp4',\n  'ts': 'video/mp2t',\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.TEXT_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'application/mp4',\n  'm4s': 'application/mp4',\n  'm4i': 'application/mp4',\n  'vtt': 'text/vtt',\n  'ttml': 'application/ttml+xml',\n};\n\n\n/**\n * @const {!Object.<string, !Object.<string, string>>}\n * @private\n */\nshaka.hls.HlsParser.EXTENSION_MAP_BY_CONTENT_TYPE_ = {\n  'audio': shaka.hls.HlsParser.AUDIO_EXTENSIONS_TO_MIME_TYPES_,\n  'video': shaka.hls.HlsParser.VIDEO_EXTENSIONS_TO_MIME_TYPES_,\n  'text': shaka.hls.HlsParser.TEXT_EXTENSIONS_TO_MIME_TYPES_,\n};\n\n\n/**\n * @typedef {function(!shaka.hls.Tag):?shaka.extern.DrmInfo}\n * @private\n */\nshaka.hls.HlsParser.DrmParser_;\n\n\n/**\n * @param {!shaka.hls.Tag} drmTag\n * @return {?shaka.extern.DrmInfo}\n * @private\n */\nshaka.hls.HlsParser.widevineDrmParser_ = function(drmTag) {\n  const HlsParser = shaka.hls.HlsParser;\n  let method = HlsParser.getRequiredAttributeValue_(drmTag, 'METHOD');\n  shaka.Deprecate.deprecateFeature(\n      2, 6,\n      'HLS SAMPLE-AES-CENC',\n      'SAMPLE-AES-CENC will no longer be supported, see Issue #1227');\n  const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n  if (!VALID_METHODS.includes(method)) {\n    shaka.log.error('Widevine in HLS is only supported with [',\n                    VALID_METHODS.join(', '), '], not', method);\n    return null;\n  }\n\n  let uri = HlsParser.getRequiredAttributeValue_(drmTag, 'URI');\n  let parsedData = shaka.net.DataUriPlugin.parse(uri);\n\n  // The data encoded in the URI is a PSSH box to be used as init data.\n  let pssh = new Uint8Array(parsedData.data);\n  let drmInfo = shaka.util.ManifestParserUtils.createDrmInfo(\n      'com.widevine.alpha', [\n        {initDataType: 'cenc', initData: pssh},\n      ]);\n\n  let keyId = drmTag.getAttributeValue('KEYID');\n  if (keyId) {\n    // This value should begin with '0x':\n    goog.asserts.assert(keyId.startsWith('0x'), 'Incorrect KEYID format!');\n    // But the output should not contain the '0x':\n    drmInfo.keyIds = [keyId.substr(2).toLowerCase()];\n  }\n  return drmInfo;\n};\n\n\n/**\n * Called when the update timer ticks. Because parsing a manifest is async,\n * this method is async. To work with this, this method will schedule the next\n * update when it finished instead of using a repeating-start.\n *\n * @return {!Promise}\n * @private\n */\nshaka.hls.HlsParser.prototype.onUpdate_ = async function() {\n  shaka.log.info('Updating manifest...');\n\n  goog.asserts.assert(\n      this.updatePlaylistDelay_ > 0,\n      'We should only call |onUpdate_| when we are suppose to be updating.');\n\n  // Detect a call to stop()\n  if (!this.playerInterface_) {\n    return;\n  }\n\n  try {\n    await this.update();\n\n    const delay = this.updatePlaylistDelay_;\n    this.updatePlaylistTimer_.tickAfter(/* seconds= */ delay);\n  } catch (error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Should only receive a Shaka error');\n\n    // We will retry updating, so override the severity of the error.\n    error.severity = shaka.util.Error.Severity.RECOVERABLE;\n    this.playerInterface_.onError(error);\n\n    // Try again very soon.\n    this.updatePlaylistTimer_.tickAfter(/* seconds= */ 0.1);\n  }\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.hls.HlsParser.prototype.isLive_ = function() {\n  const PresentationType = shaka.hls.HlsParser.PresentationType_;\n  return this.presentationType_ != PresentationType.VOD;\n};\n\n\n/**\n * @param {shaka.hls.HlsParser.PresentationType_} type\n * @private\n */\nshaka.hls.HlsParser.prototype.setPresentationType_ = function(type) {\n  this.presentationType_ = type;\n\n  if (this.presentationTimeline_) {\n    this.presentationTimeline_.setStatic(!this.isLive_());\n  }\n\n  // If this manifest is not for live content, then we have no reason to\n  // update it.\n  if (!this.isLive_()) {\n    this.updatePlaylistTimer_.stop();\n  }\n};\n\n\n/**\n * Create a networking request. This will manage the request using the parser's\n * operation manager. If the parser has already been stopped, the request will\n * not be made.\n *\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @return {!Promise.<shaka.extern.Response>}\n * @private\n */\nshaka.hls.HlsParser.prototype.makeNetworkRequest_ = function(request, type) {\n  if (!this.operationManager_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n\n  const op = this.playerInterface_.networkingEngine.request(type, request);\n  this.operationManager_.manage(op);\n\n  return op.promise;\n};\n\n\n/**\n * @const {!Object.<string, shaka.hls.HlsParser.DrmParser_>}\n * @private\n */\nshaka.hls.HlsParser.KEYFORMATS_TO_DRM_PARSERS_ = {\n  /* TODO: https://github.com/google/shaka-player/issues/382\n  'com.apple.streamingkeydelivery':\n      shaka.hls.HlsParser.fairplayDrmParser_,\n  */\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed':\n      shaka.hls.HlsParser.widevineDrmParser_,\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nshaka.hls.HlsParser.PresentationType_ = {\n  VOD: 'VOD',\n  EVENT: 'EVENT',\n  LIVE: 'LIVE',\n};\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.TS_TIMESCALE_ = 90000;\n\n\n/**\n * At this value, timestamps roll over in TS content.\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.TS_ROLLOVER_ = 0x200000000;\n\n\n/**\n * The amount of data from the start of a segment we will try to fetch when we\n * need to know the segment start time.  This allows us to avoid fetching the\n * entire segment in many cases.\n *\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.PARTIAL_SEGMENT_SIZE_ = 2048;\n\n\nshaka.media.ManifestParser.registerParserByExtension(\n    'm3u8', shaka.hls.HlsParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/x-mpegurl', shaka.hls.HlsParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/vnd.apple.mpegurl', shaka.hls.HlsParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.ActiveStreamMap');\n\n\n/**\n * A structure used to track which streams were last used in any given period.\n *\n * @final\n */\nshaka.media.ActiveStreamMap = class {\n  constructor() {\n    /**\n     * A mapping between a period and the content last streamed in that period.\n     *\n     * @private {!Map.<shaka.extern.Period, !shaka.media.ActiveStreamMap.Frame>}\n     */\n    this.history_ = new Map();\n  }\n\n  /**\n   * Clear the history.\n   */\n  clear() {\n    // Clear the map to release references to the periods (the key). This\n    // assumes that the references will be broken by doing this.\n    this.history_.clear();\n  }\n\n  /**\n   * Set the variant that was last playing in |period|. Setting it to |null| is\n   * the same as saying \"we were playing no variant in this period\".\n   *\n   * @param {shaka.extern.Period} period\n   * @param {?shaka.extern.Variant} variant\n   */\n  useVariant(period, variant) {\n    this.getFrameFor_(period).variant = variant;\n  }\n\n  /**\n   * Set the text stream that was last displayed in |period|. Setting it to\n   * |null| is the same as saying \"we were displaying no text in this period\".\n   *\n   * @param {shaka.extern.Period} period\n   * @param {?shaka.extern.Stream} stream\n   */\n  useText(period, stream) {\n    this.getFrameFor_(period).text = stream;\n  }\n\n  /**\n   * Get the variant that was playing in the given period. If no variant  was\n   * playing this period or the period had not started playing, then |null| will\n   * be returned.\n   *\n   * @param {shaka.extern.Period} period\n   * @return {?shaka.extern.Variant}\n   */\n  getVariant(period) {\n    return this.getFrameFor_(period).variant;\n  }\n\n  /**\n   * Get the text stream that was playing in the given period. If no text\n   * stream was playing this period or the period had not started playing, then\n   * |null| will be returned.\n   *\n   * @param {shaka.extern.Period} period\n   * @return {?shaka.extern.Stream}\n   */\n  getText(period) {\n    return this.getFrameFor_(period).text;\n  }\n\n  /**\n   * Get the frame for a period. This will ensure that a frame exists for the\n   * given period.\n   *\n   * @param {shaka.extern.Period} period\n   * @return {!shaka.media.ActiveStreamMap.Frame}\n   * @private\n   */\n  getFrameFor_(period) {\n    if (!this.history_.has(period)) {\n      const frame = new shaka.media.ActiveStreamMap.Frame();\n      this.history_.set(period, frame);\n    }\n\n    return this.history_.get(period);\n  }\n};\n\n\n/**\n * A structure used to track which streams were played during a specific\n * time frame.\n *\n * @final\n */\nshaka.media.ActiveStreamMap.Frame = class {\n  constructor() {\n    /** @type {?shaka.extern.Variant} */\n    this.variant = null;\n    /** @type {?shaka.extern.Stream} */\n    this.text = null;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.AdaptationSet');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * A set of variants that we want to adapt between.\n *\n * @final\n */\nshaka.media.AdaptationSet = class {\n  /**\n   * @param {shaka.extern.Variant} root\n   *    The variant that all other variants will be tested against when being\n   *    added to the adaptation set. If a variant is not compatible with the\n   *    root, it will not be added.\n   * @param {!Iterable.<shaka.extern.Variant>=} candidates\n   *    Variants that may be compatible with the root and should be added if\n   *    compatible. If a candidate is not compatible, it will not end up in the\n   *    adaptation set.\n   */\n  constructor(root, candidates) {\n    /** @private {shaka.extern.Variant} */\n    this.root_ = root;\n    /** @private {!Set.<shaka.extern.Variant>} */\n    this.variants_ = new Set([root]);\n\n    // Try to add all the candidates. If they cannot be added (because they\n    // are not compatible with the root, they will be rejected by |add|.\n    candidates = candidates || [];\n    for (const candidate of candidates) {\n      this.add(candidate);\n    }\n  }\n\n  /**\n   * @param {shaka.extern.Variant} variant\n   * @return {boolean}\n   */\n  add(variant) {\n    if (this.canInclude(variant)) {\n      this.variants_.add(variant);\n      return true;\n    }\n\n    // To be nice, issue a warning if someone is trying to add something that\n    // they shouldn't.\n    shaka.log.warning('Rejecting variant - not compatible with root.');\n    return false;\n  }\n\n  /**\n   * Check if |variant| can be included with the set. If |canInclude| returns\n   * |false|, calling |add| will result in it being ignored.\n   *\n   * @param {shaka.extern.Variant} variant\n   * @return {boolean}\n   */\n  canInclude(variant) {\n    return shaka.media.AdaptationSet.areAdaptable(this.root_, variant);\n  }\n\n  /**\n   * @param {shaka.extern.Variant} a\n   * @param {shaka.extern.Variant} b\n   * @return {boolean}\n   */\n  static areAdaptable(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n\n    // All variants should have audio or should all not have audio.\n    if (!!a.audio != !!b.audio) {\n      return false;\n    }\n\n    // All variants should have video or should all not have video.\n    if (!!a.video != !!b.video) {\n      return false;\n    }\n\n    // If the languages don't match, we should not adapt between them.\n    if (a.language != b.language) {\n      return false;\n    }\n\n    goog.asserts.assert(\n        !!a.audio == !!b.audio,\n        'Both should either have audio or not have audio.');\n    if (a.audio && b.audio &&\n        !AdaptationSet.areAudiosCompatible_(a.audio, b.audio)) {\n      return false;\n    }\n\n    goog.asserts.assert(\n        !!a.video == !!b.video,\n        'Both should either have video or not have video.');\n    if (a.video && b.video &&\n        !AdaptationSet.areVideosCompatible_(a.video, b.video)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * @return {!Iterable.<shaka.extern.Variant>}\n   */\n  values() {\n    return this.variants_.values();\n  }\n\n  /**\n   * Check if we can switch between two audio streams.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static areAudiosCompatible_(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n\n    // Audio channel counts must not change between adaptations.\n    if (a.channelsCount != b.channelsCount) {\n      return false;\n    }\n\n    // We can only adapt between base-codecs.\n    if (!AdaptationSet.canTransitionBetween_(a, b)) {\n      return false;\n    }\n\n    // Audio roles must not change between adaptations.\n    if (!AdaptationSet.areRolesEqual_(a.roles, b.roles)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if we can switch between two video streams.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static areVideosCompatible_(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n\n    // We can only adapt between base-codecs.\n    if (!AdaptationSet.canTransitionBetween_(a, b)) {\n      return false;\n    }\n\n    // Video roles must not change between adaptations.\n    if (!AdaptationSet.areRolesEqual_(a.roles, b.roles)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if we can switch between two streams based on their codec and mime\n   * type.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static canTransitionBetween_(a, b) {\n    if (a.mimeType != b.mimeType) {\n      return false;\n    }\n\n\n    // Get the base codec of each codec in each stream.\n    const codecsA = shaka.util.MimeUtils.splitCodecs(a.codecs).map((codec) => {\n      return shaka.util.MimeUtils.getCodecBase(codec);\n    });\n    const codecsB = shaka.util.MimeUtils.splitCodecs(b.codecs).map((codec) => {\n      return shaka.util.MimeUtils.getCodecBase(codec);\n    });\n\n    // We don't want to allow switching between transmuxed and non-transmuxed\n    // content so the number of codecs should be the same.\n    //\n    // To avoid the case where an codec is used for audio and video we will\n    // codecs using arrays (not sets). While at this time, there are no codecs\n    // that work for audio and video, it is possible for \"raw\" codecs to be\n    // which would share the same name.\n    if (codecsA.length != codecsB.length) {\n      return false;\n    }\n\n    // Sort them so that we can walk through them and compare them\n    // element-by-element.\n    codecsA.sort();\n    codecsB.sort();\n\n    for (let i = 0; i < codecsA.length; i++) {\n      if (codecsA[i] != codecsB[i]) { return false; }\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if two role lists are the equal. This will take into account all\n   * unique behaviours when comparing roles.\n   *\n   * @param {!Iterable.<string>} a\n   * @param {!Iterable.<string>} b\n   * @return {boolean}\n   * @private\n   */\n  static areRolesEqual_(a, b) {\n    const aSet = new Set(a);\n    const bSet = new Set(b);\n\n    // Remove the main role from the role lists (we expect to see them only\n    // in dash manifests).\n    const mainRole = 'main';\n    aSet.delete(mainRole);\n    bSet.delete(mainRole);\n\n    // Make sure that we have the same number roles in each list. Make sure to\n    // do it after correcting for 'main'.\n    if (aSet.size != bSet.size) { return false; }\n\n    // Because we know the two sets are the same size, if any item is missing\n    // if means that they are not the same.\n    for (const x of aSet) {\n      if (!bSet.has(x)) { return false; }\n    }\n\n    return true;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.AdaptationSetCriteria');\ngoog.provide('shaka.media.ExampleBasedCriteria');\ngoog.provide('shaka.media.PreferenceBasedCriteria');\n\ngoog.require('shaka.media.AdaptationSet');\n\n\n/**\n * An adaptation set criteria is a unit of logic that can take a set of\n * variants and return a subset of variants that should (and can) be\n * adapted between.\n *\n * @interface\n */\nshaka.media.AdaptationSetCriteria = class {\n  /**\n   * Take a set of variants, and return a subset of variants that can be\n   * adapted between.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @return {!shaka.media.AdaptationSet}\n   */\n  create(variants) {}\n};\n\n\n/**\n * @implements {shaka.media.AdaptationSetCriteria}\n * @final\n */\nshaka.media.ExampleBasedCriteria = class {\n  /**\n   * @param {shaka.extern.Variant} example\n   */\n  constructor(example) {\n    /** @private {shaka.extern.Variant} */\n    this.example_ = example;\n\n    // We can't know what role is really the most important, so we don't use\n    // role for this.\n    const role = '';\n    const channelCount = example.audio && example.audio.channelsCount ?\n                         example.audio.channelsCount :\n                         0;\n\n    /** @private {!shaka.media.AdaptationSetCriteria} */\n    this.fallback_ = new shaka.media.PreferenceBasedCriteria(\n        example.language, role, channelCount);\n  }\n\n  /** @override */\n  create(variants) {\n    // We can't assume that the example is |variants| because it could actually\n    // be from another period.\n    const shortList = variants.filter((variant) => {\n      return shaka.media.AdaptationSet.areAdaptable(this.example_, variant);\n    });\n\n    if (shortList.length) {\n      // Use the first item in the short list as the root. It should not matter\n      // which element we use as all items in the short list should already be\n      // compatible.\n      return new shaka.media.AdaptationSet(shortList[0], shortList);\n    } else {\n      return this.fallback_.create(variants);\n    }\n  }\n};\n\n\n/**\n * @implements {shaka.media.AdaptationSetCriteria}\n * @final\n */\nshaka.media.PreferenceBasedCriteria = class {\n  /**\n   * @param {string} language\n   * @param {string} role\n   * @param {number} channelCount\n   */\n  constructor(language, role, channelCount) {\n    /** @private {string} */\n    this.language_ = language;\n    /** @private {string} */\n    this.role_ = role;\n    /** @private {number} */\n    this.channelCount_ = channelCount;\n  }\n\n  /** @override */\n  create(variants) {\n    const Class = shaka.media.PreferenceBasedCriteria;\n    const StreamUtils = shaka.util.StreamUtils;\n\n    let current = [];\n\n    const byLanguage = Class.filterByLanguage_(variants, this.language_);\n    const byPrimary = variants.filter((variant) => variant.primary);\n\n    if (byLanguage.length) {\n      current = byLanguage;\n    } else if (byPrimary.length) {\n      current = byPrimary;\n    } else {\n      current = variants;\n    }\n\n    // Now refine the choice based on role preference.\n    if (this.role_) {\n      const byRole = Class.filterVariantsByRole_(current, this.role_);\n      if (byRole.length) {\n        current = byRole;\n      } else {\n        shaka.log.warning('No exact match for variant role could be found.');\n      }\n    }\n\n    if (this.channelCount_) {\n      const byChannel = StreamUtils.filterVariantsByAudioChannelCount(\n          current, this.channelCount_);\n      if (byChannel.length) {\n        current = byChannel;\n      } else {\n        shaka.log.warning(\n            'No exact match for the channel count could be found.');\n      }\n    }\n\n    // Make sure we only return a valid adaptation set.\n    const set = new shaka.media.AdaptationSet(current[0]);\n    for (const variant of current) {\n      if (set.canInclude(variant)) {\n        set.add(variant);\n      }\n    }\n\n    return set;\n  }\n\n  /**\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @param {string} preferredLanguage\n   * @return {!Array.<shaka.extern.Variant>}\n   * @private\n   */\n  static filterByLanguage_(variants, preferredLanguage) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    /** @type {string} */\n    const preferredLocale = LanguageUtils.normalize(preferredLanguage);\n\n    /** @type {?string} */\n    const closestLocale = LanguageUtils.findClosestLocale(\n        preferredLocale,\n        variants.map((variant) => LanguageUtils.getLocaleForVariant(variant)));\n\n    // There were no locales close to what we preferred.\n    if (!closestLocale) {\n      return [];\n    }\n\n    // Find the variants that use the closest variant.\n    return variants.filter((variant) => {\n      return closestLocale == LanguageUtils.getLocaleForVariant(variant);\n    });\n  }\n\n  /**\n   * Filter Variants by role.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @param {string} preferredRole\n   * @return {!Array.<shaka.extern.Variant>}\n   * @private\n   */\n  static filterVariantsByRole_(variants, preferredRole) {\n    return variants.filter((variant) => {\n      const audio = variant.audio;\n      const video = variant.video;\n      return (audio && audio.roles.indexOf(preferredRole) >= 0) ||\n             (video && video.roles.indexOf(preferredRole) >= 0);\n    });\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.BufferingObserver');\n\n\n/**\n * The buffering observer watches how much content has been buffered and raises\n * events when the state changes (enough => not enough or vice versa).\n *\n * @final\n */\nshaka.media.BufferingObserver = class {\n  /**\n   * @param {number} thresholdWhenStarving\n   * @param {number} thresholdWhenSatisfied\n   */\n  constructor(thresholdWhenStarving, thresholdWhenSatisfied) {\n    const State = shaka.media.BufferingObserver.State;\n\n    /** @private {shaka.media.BufferingObserver.State} */\n    this.previousState_ = State.SATISFIED;\n\n    /** @private {!Map.<shaka.media.BufferingObserver.State, number>} */\n    this.thresholds_ = new Map()\n        .set(State.SATISFIED, thresholdWhenSatisfied)\n        .set(State.STARVING, thresholdWhenStarving);\n  }\n\n  /**\n   * Update the observer by telling it how much content has been buffered (in\n   * seconds) and if we are buffered to the end of the presentation. If the\n   * controller believes the state has changed, it will return |true|.\n   *\n   * @param {number} bufferLead\n   * @param {boolean} bufferedToEnd\n   * @return {boolean}\n   */\n  update(bufferLead, bufferedToEnd) {\n    const State = shaka.media.BufferingObserver.State;\n\n    /**\n     * Our threshold for how much we need before we declare ourselves as\n     * starving is based on whether or not we were just starving. If we\n     * were just starving, we are more likely to starve again, so we require\n     * more content to be buffered than if we were not just starving.\n     *\n     * @type {number}\n     */\n    const threshold = this.thresholds_.get(this.previousState_);\n\n    const oldState = this.previousState_;\n    const newState = (bufferedToEnd || bufferLead >= threshold) ?\n                     (State.SATISFIED) :\n                     (State.STARVING);\n\n    // Save the new state now so that calls to |getState| from any callbacks\n    // will be accurate.\n    this.previousState_ = newState;\n\n    // Return |true| only when the state has changed.\n    return oldState != newState;\n  }\n\n  /**\n   * Set which state that the observer should think playback was in.\n   *\n   * @param {shaka.media.BufferingObserver.State} state\n   */\n  setState(state) {\n    this.previousState_ = state;\n  }\n\n  /**\n   * Get the state that the observer last thought playback was in.\n   *\n   * @return {shaka.media.BufferingObserver.State}\n   */\n  getState() {\n    return this.previousState_;\n  }\n};\n\n/**\n * Rather than using booleans to communicate what state we are in, we have this\n * enum.\n *\n * @enum {number}\n */\nshaka.media.BufferingObserver.State = {\n  STARVING: 0,\n  SATISFIED: 1,\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.StallDetector');\ngoog.provide('shaka.media.StallDetector.Implementation');\ngoog.provide('shaka.media.StallDetector.MediaElementImplementation');\n\n/**\n * Some platforms/browsers can get stuck in the middle of a buffered range (e.g.\n * when seeking in a background tab). Detect when we get stuck so that the\n * player can respond.\n *\n * @implements {shaka.util.IReleasable}\n * @final\n */\nshaka.media.StallDetector = class {\n  /**\n   * @param {shaka.media.StallDetector.Implementation} implementation\n   * @param {number} stallThresholdSeconds\n   */\n  constructor(implementation, stallThresholdSeconds) {\n    /** @private {shaka.media.StallDetector.Implementation} */\n    this.implementation_ = implementation;\n\n    /** @private {boolean} */\n    this.wasMakingProgress_ = implementation.shouldBeMakingProgress();\n    /** @private {number} */\n    this.value_ = implementation.getPresentationSeconds();\n    /** @private {number} */\n    this.lastUpdateSeconds_ = implementation.getWallSeconds();\n\n    /**\n     * The amount of time in seconds that we must have the same value of\n     * |value_| before we declare it as a stall.\n     *\n     * @private {number}\n     */\n    this.stallThresholdSeconds_ = stallThresholdSeconds;\n\n    /** @private {function(number, number)} */\n    this.onStall_ = () => {};\n  }\n\n  /** @override */\n  release() {\n    // Drop external references to make things easier on the GC.\n    this.implementation_ = null;\n    this.onStall_ = () => {};\n  }\n\n  /**\n   * Set the callback that should be called when a stall is detected. Calling\n   * this will override any previous calls to |onStall|.\n   *\n   * @param {function(number, number)} doThis\n   */\n  onStall(doThis) {\n    this.onStall_ = doThis;\n  }\n\n  /**\n   * Have the detector update itself and fire the \"on stall\" callback if a stall\n   * was detected.\n   */\n  poll() {\n    const impl = this.implementation_;\n\n    const shouldBeMakingProgress = impl.shouldBeMakingProgress();\n    const value = impl.getPresentationSeconds();\n    const wallTimeSeconds = impl.getWallSeconds();\n\n    const acceptUpdate = this.value_ != value ||\n                         this.wasMakingProgress_ != shouldBeMakingProgress;\n\n    if (acceptUpdate) {\n      this.lastUpdateSeconds_ = wallTimeSeconds;\n      this.value_ = value;\n      this.wasMakingProgress_ = shouldBeMakingProgress;\n    }\n\n    const stallSeconds = wallTimeSeconds - this.lastUpdateSeconds_;\n\n    const triggerCallback = stallSeconds >= this.stallThresholdSeconds_ &&\n                            shouldBeMakingProgress;\n\n    if (triggerCallback) {\n      this.onStall_(this.value_, stallSeconds);\n    }\n  }\n};\n\n/**\n * @interface\n */\nshaka.media.StallDetector.Implementation = class {\n  /**\n   * Check if the presentation time should be changing. This will return |true|\n   * when we expect the presentation time to change.\n   *\n   * @return {boolean}\n   */\n  shouldBeMakingProgress() {}\n\n  /**\n   * Get the presentation time in seconds.\n   *\n   * @return {number}\n   */\n  getPresentationSeconds() {}\n\n  /**\n   * Get the time wall time in seconds.\n   *\n   * @return {number}\n   */\n  getWallSeconds() {}\n};\n\n\n/**\n * Some platforms/browsers can get stuck in the middle of a buffered range (e.g.\n * when seeking in a background tab). Force a seek to help get it going again.\n *\n * @implements {shaka.media.StallDetector.Implementation}\n * @final\n */\nshaka.media.StallDetector.MediaElementImplementation = class {\n  /**\n   * @param {!HTMLMediaElement} mediaElement\n   */\n  constructor(mediaElement) {\n    /** @private {!HTMLMediaElement} */\n    this.mediaElement_ = mediaElement;\n  }\n\n  /** @override */\n  shouldBeMakingProgress() {\n    // If we are not trying to play, the lack of change could be misidentified\n    // as a stall.\n    if (this.mediaElement_.paused) { return false; }\n    if (this.mediaElement_.playbackRate == 0) { return false; }\n\n    // If we have don't have enough content, we are not stalled, we are\n    // buffering.\n    if (this.mediaElement_.buffered == null) { return false; }\n\n    return shaka.media.StallDetector.MediaElementImplementation.hasContentFor_(\n        this.mediaElement_.buffered,\n        /* timeInSeconds= */ this.mediaElement_.currentTime);\n  }\n\n  /** @override */\n  getPresentationSeconds() {\n    return this.mediaElement_.currentTime;\n  }\n\n  /** @override */\n  getWallSeconds() {\n    return Date.now() / 1000;\n  }\n\n  /**\n   * Check if we have buffered enough content to play at |timeInSeconds|. Ignore\n   * the end of the buffered range since it may not play any more on all\n   * platforms.\n   *\n   * @param {!TimeRanges} buffered\n   * @param {number} timeInSeconds\n   * @return {boolean}\n   * @private\n   */\n  static hasContentFor_(buffered, timeInSeconds) {\n    for (let i = 0; i < buffered.length; i++) {\n      const bufferedStart = buffered.start(i);\n      const bufferedEnd = buffered.end(i);\n\n      if (timeInSeconds < bufferedStart) { continue; }\n      if (timeInSeconds > bufferedEnd - 0.5) { continue; }\n\n      return true;\n    }\n\n    return false;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.GapJumpingController');\n\ngoog.require('shaka.log');\ngoog.require('shaka.media.StallDetector');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IReleasable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a new GapJumpingController that handles jumping gaps that appear\n * within the content.  This will only jump gaps between two buffered ranges,\n * so we should not have to worry about the availability window.\n *\n * @param {!HTMLMediaElement} video\n * @param {!shaka.media.PresentationTimeline} timeline\n * @param {shaka.extern.StreamingConfiguration} config\n * @param {shaka.media.StallDetector} stallDetector\n *   The stall detector is used to keep the playhead moving while in a playable\n *   region. The gap jumping controller takes ownership over the stall detector.\n *   If no stall detection logic is desired, |null| may be provided.\n * @param {function(!Event)} onEvent Called when an event is raised to be sent\n *   to the application.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IReleasable}\n */\nshaka.media.GapJumpingController = function(\n    video, timeline, config, stallDetector, onEvent) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {?shaka.media.PresentationTimeline} */\n  this.timeline_ = timeline;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = config;\n\n  /** @private {?function(!Event)} */\n  this.onEvent_ = onEvent;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {boolean} */\n  this.seekingEventReceived_ = false;\n\n  /** @private {number} */\n  this.prevReadyState_ = video.readyState;\n\n  /** @private {boolean} */\n  this.didFireLargeGap_ = false;\n\n  /**\n   * The stall detector tries to keep the playhead moving forward. It is managed\n   * by the gap-jumping controller to avoid conflicts. On some platforms, the\n   * stall detector is not wanted, so it may be null.\n   *\n   * @private {shaka.media.StallDetector}\n   */\n  this.stallDetector_ = stallDetector;\n\n  /** @private {boolean} */\n  this.hadSegmentAppended_ = false;\n\n  this.eventManager_.listen(video, 'waiting', () => this.onPollGapJump_());\n\n  /**\n   * We can't trust |readyState| or 'waiting' events on all platforms. To make\n   * up for this, we poll the current time. If we think we are in a gap, jump\n   * out of it.\n   *\n   * See: https://bit.ly/2McuXxm and https://bit.ly/2K5xmJO\n   *\n   * @private {?shaka.util.Timer}\n   */\n  this.gapJumpTimer_ = new shaka.util.Timer(() => {\n    this.onPollGapJump_();\n  }).tickEvery(/* seconds= */ 0.25);\n};\n\n\n/**\n * The limit, in seconds, for the gap size that we will assume the browser will\n * handle for us.\n * @const\n */\nshaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE = 0.001;\n\n\n/** @override */\nshaka.media.GapJumpingController.prototype.release = function() {\n  if (this.eventManager_) {\n    this.eventManager_.release();\n    this.eventManager_ = null;\n  }\n\n  if (this.gapJumpTimer_ != null) {\n    this.gapJumpTimer_.stop();\n    this.gapJumpTimer_ = null;\n  }\n\n  if (this.stallDetector_) {\n    this.stallDetector_.release();\n    this.stallDetector_ = null;\n  }\n\n  this.onEvent_ = null;\n  this.timeline_ = null;\n  this.video_ = null;\n};\n\n\n/**\n * Called when a segment is appended by StreamingEngine, but not when a clear is\n * pending.  This means StreamingEngine will continue buffering forward from\n * what is buffered.  So we know about any gaps before the start.\n */\nshaka.media.GapJumpingController.prototype.onSegmentAppended = function() {\n  this.hadSegmentAppended_ = true;\n  this.onPollGapJump_();\n};\n\n\n/** Called when a seek has started. */\nshaka.media.GapJumpingController.prototype.onSeeking = function() {\n  this.seekingEventReceived_ = true;\n  this.hadSegmentAppended_ = false;\n  this.didFireLargeGap_ = false;\n};\n\n\n/**\n * Called on a recurring timer to check for gaps in the media.  This is also\n * called in a 'waiting' event.\n *\n * @private\n */\nshaka.media.GapJumpingController.prototype.onPollGapJump_ = function() {\n  // Don't gap jump before the video is ready to play.\n  if (this.video_.readyState == 0) return;\n  // Do not gap jump if seeking has begun, but the seeking event has not\n  // yet fired for this particular seek.\n  if (this.video_.seeking) {\n    if (!this.seekingEventReceived_) {\n      return;\n    }\n  } else {\n    this.seekingEventReceived_ = false;\n  }\n  // Don't gap jump while paused, so that you don't constantly jump ahead while\n  // paused on a livestream.\n  if (this.video_.paused) return;\n\n\n  // When the ready state changes, we have moved on, so we should fire the large\n  // gap event if we see one.\n  if (this.video_.readyState != this.prevReadyState_) {\n    this.didFireLargeGap_ = false;\n    this.prevReadyState_ = this.video_.readyState;\n  }\n\n  const smallGapLimit = this.config_.smallGapLimit;\n  let currentTime = this.video_.currentTime;\n  let buffered = this.video_.buffered;\n\n  let gapIndex = shaka.media.TimeRangesUtils.getGapIndex(buffered, currentTime);\n\n  // The current time is unbuffered or is too far from a gap.\n  if (gapIndex == null) {\n    if (this.stallDetector_) {\n      this.stallDetector_.poll();\n    }\n\n    return;\n  }\n\n  // If we are before the first buffered range, this could be an unbuffered\n  // seek.  So wait until a segment is appended so we are sure it is a gap.\n  if (gapIndex == 0 && !this.hadSegmentAppended_) {\n    return;\n  }\n\n  // StreamingEngine can buffer past the seek end, but still don't allow seeking\n  // past it.\n  let jumpTo = buffered.start(gapIndex);\n  let seekEnd = this.timeline_.getSeekRangeEnd();\n  if (jumpTo >= seekEnd) {\n    return;\n  }\n\n  let jumpSize = jumpTo - currentTime;\n  let isGapSmall = jumpSize <= smallGapLimit;\n  let jumpLargeGap = false;\n\n  // If we jump to exactly the gap start, we may detect a small gap due to\n  // rounding errors or browser bugs.  We can ignore these extremely small gaps\n  // since the browser should play through them for us.\n  if (jumpSize < shaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE) {\n    return;\n  }\n\n  if (!isGapSmall && !this.didFireLargeGap_) {\n    this.didFireLargeGap_ = true;\n\n    // Event firing is synchronous.\n    let event = new shaka.util.FakeEvent(\n        'largegap', {'currentTime': currentTime, 'gapSize': jumpSize});\n    event.cancelable = true;\n    this.onEvent_(event);\n\n    if (this.config_.jumpLargeGaps && !event.defaultPrevented) {\n      jumpLargeGap = true;\n    } else {\n      shaka.log.info('Ignoring large gap at', currentTime, 'size', jumpSize);\n    }\n  }\n\n  if (isGapSmall || jumpLargeGap) {\n    if (gapIndex == 0) {\n      shaka.log.info(\n          'Jumping forward', jumpSize,\n          'seconds because of gap before start time of', jumpTo);\n    } else {\n      shaka.log.info(\n          'Jumping forward', jumpSize, 'seconds because of gap starting at',\n          buffered.end(gapIndex - 1), 'and ending at', jumpTo);\n    }\n\n    this.video_.currentTime = jumpTo;\n  }\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.IPlayheadObserver');\ngoog.provide('shaka.media.PlayheadObserverManager');\n\ngoog.require('shaka.util.IReleasable');\n\n\n/**\n * A playhead observer is a system that watches for meaningful changes in state\n * that are dependent on playhead information. The observer is responsible for\n * managing its own listeners.\n *\n * @extends {shaka.util.IReleasable}\n * @interface\n */\nshaka.media.IPlayheadObserver = class {\n  /**\n   * Check again (using an update playhead summary) if an event should be fired.\n   * If an event should be fired, fire it.\n   *\n   * @param {number} positionInSeconds\n   * @param {boolean} wasSeeking\n   */\n  poll(positionInSeconds, wasSeeking) {}\n};\n\n\n/**\n * The playhead observer mananger is responsible for owning playhead observer\n * instances and polling them when needed. Destroying the manager will destroy\n * all observers managed by the manager.\n *\n * @implements {shaka.util.IReleasable}\n * @final\n */\nshaka.media.PlayheadObserverManager = class {\n  /**\n   * @param {!HTMLMediaElement} mediaElement\n   */\n  constructor(mediaElement) {\n    /** @private {HTMLMediaElement} */\n    this.mediaElement_ = mediaElement;\n\n    /**\n     * The set of all observers that this manager is responsible for updating.\n     * We are using a set to ensure that we don't double update an observer if\n     * it is accidentally added twice.\n     *\n     * @private {!Set.<shaka.media.IPlayheadObserver>}\n     */\n    this.observers_ = new Set();\n\n    /**\n     * To fire events semi-accurately, poll the observers 4 times a second. This\n     * should be frequent enough to trigger an event close enough to its actual\n     * occurrence without the user noticing a delay.\n     *\n     * @private {shaka.util.Timer}\n     */\n    this.pollingLoop_ = new shaka.util.Timer(() => {\n      this.pollAllObservers_(/* seeking= */ false);\n    }).tickEvery(/* seconds= */ 0.25);\n  }\n\n  /** @override */\n  release() {\n    // We need to stop the loop or else we may try to use a released resource.\n    this.pollingLoop_.stop();\n\n    for (const observer of this.observers_) {\n      observer.release();\n    }\n\n    this.observers_.clear();\n  }\n\n  /**\n   * Have the playhead observer manager manage a new observer. This will ensure\n   * that observers are only tracked once within the manager. After this call,\n   * the manager will be responsible for the life cycle of |observer|.\n   *\n   * @param {!shaka.media.IPlayheadObserver} observer\n   */\n  manage(observer) {\n    this.observers_.add(observer);\n  }\n\n  /**\n   * Notify all the observers that we just seeked.\n   */\n  notifyOfSeek() {\n    this.pollAllObservers_(/* seeking= */ true);\n  }\n\n  /**\n   * @param {boolean} seeking\n   * @private\n   */\n  pollAllObservers_(seeking) {\n    for (const observer of this.observers_) {\n      observer.poll(\n          this.mediaElement_.currentTime,\n          seeking);\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Periods');\n\n\n/**\n * This is a collection of period-focused utility methods.\n *\n * @final\n */\nshaka.util.Periods = class {\n  /**\n   * Get all the variants across all periods.\n   *\n   * @param {!Iterable.<shaka.extern.Period>} periods\n   * @return {!Array.<shaka.extern.Variant>}\n   */\n  static getAllVariantsFrom(periods) {\n    const found = [];\n\n    for (const period of periods) {\n      for (const variant of period.variants) {\n        found.push(variant);\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * Find our best guess at which period contains the given time. If\n   * |timeInSeconds| starts before the first period, then |null| will be\n   * returned.\n   *\n   * @param {!Iterable.<shaka.extern.Period>} periods\n   * @param {number} timeInSeconds\n   * @return {?shaka.extern.Period}\n   */\n  static findPeriodForTime(periods, timeInSeconds) {\n    let bestGuess = null;\n\n    // Go period-by-period and see if the period started before our current\n    // time. If so, we could be in that period. Since periods are supposed to be\n    // in order by start time, we can allow later periods to override our best\n    // guess.\n    for (const period of periods) {\n      if (timeInSeconds >= period.startTime) {\n        bestGuess = period;\n      }\n    }\n\n    return bestGuess;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.PeriodObserver');\n\ngoog.require('shaka.media.IPlayheadObserver');\ngoog.require('shaka.util.Periods');\n\n\n/**\n * The period observer keeps track of which period we are in and calls the\n * |onPeriodChange| callback whenever we change periods.\n *\n * @implements {shaka.media.IPlayheadObserver}\n * @final\n */\nshaka.media.PeriodObserver = class {\n  /**\n   * The period observer needs an always-up-to-date collection of periods,\n   * and right now the only way to have that is to reference the manifest.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   */\n  constructor(manifest) {\n    /** @private {?shaka.extern.Manifest} */\n    this.manifest_ = manifest;\n\n    /**\n     * This will be which period we think the playhead is currently in. If it is\n     * |null|, it means we don't know. We say \"we think\" because this may become\n     * out-of-date between updates.\n     *\n     * @private {?shaka.extern.Period}\n     */\n    this.currentPeriod_ = null;\n\n    /**\n     * The callback for when we change periods. To avoid null-checks, assign it\n     * a no-op when there is no external callback assigned to it. When we move\n     * into a new period, this callback will be called with the new period.\n     *\n     * @private {function(shaka.extern.Period)}\n     */\n    this.onChangedPeriods_ = (period) => {};\n  }\n\n  /** @override */\n  release() {\n    // Break all internal references.\n    this.manifest_ = null;\n    this.currentPeriod_ = null;\n    this.onChangedPeriods_ = (period) => {};\n  }\n\n  /** @override */\n  poll(positionInSeconds, wasSeeking) {\n    // We detect changes in period by comparing where we think we are against\n    // where we actually are.\n    const expectedPeriod = this.currentPeriod_;\n    const actualPeriod = this.findCurrentPeriod_(positionInSeconds);\n    if (expectedPeriod != actualPeriod) {\n      this.onChangedPeriods_(actualPeriod);\n    }\n    // Make sure we are up-to-date.\n    this.currentPeriod_ = actualPeriod;\n  }\n\n  /**\n   * Set all callbacks. This will override any previous calls to |setListeners|.\n   *\n   * @param {function(shaka.extern.Period)} onChangedPeriods\n   *    The callback for when we move to a new period.\n   */\n  setListeners(onChangedPeriods) {\n    this.onChangedPeriods_ = onChangedPeriods;\n  }\n\n  /**\n   * Find which period we are most likely in based on the current manifest and\n   * current time. The value here may be different than |this.currentPeriod_|,\n   * if that is true, it means we changed periods since the last time we updated\n   * |this.currentPeriod_|.\n   *\n   * @param {number} currentTimeSeconds\n   * @return {shaka.extern.Period}\n   * @private\n   */\n  findCurrentPeriod_(currentTimeSeconds) {\n    const periods = this.manifest_.periods;\n\n    const found = shaka.util.Periods.findPeriodForTime(\n        periods,\n        currentTimeSeconds);\n\n    // Fallback to periods[0] so that it can never be null. If we join a live\n    // stream, periods[0].startTime may be non-zero. We can't guarantee that\n    // video.currentTime will always be inside the seek range so it may be\n    // possible to call findCurrentPeriod_(beforeFirstPeriod).\n    return found || periods[0];\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.PlayRateController');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.IReleasable');\ngoog.require('shaka.util.Timer');\n\n/**\n * The play rate controller controls the playback rate on the media element.\n * This provides some missing functionality (e.g. negative playback rate). If\n * the playback rate on the media element can change outside of the controller,\n * the playback controller will need to be updated to stay in-sync.\n *\n * TODO: Try not to manage buffering above the browser with playbackRate=0.\n *\n * @implements {shaka.util.IReleasable}\n * @final\n */\nshaka.media.PlayRateController = class {\n  /**\n   * @param {shaka.media.PlayRateController.Harness} harness\n   */\n  constructor(harness) {\n    /** @private {?shaka.media.PlayRateController.Harness} */\n    this.harness_ = harness;\n\n    /** @private {boolean} */\n    this.isBuffering_ = false;\n\n    /** @private {number} */\n    this.rate_ = this.harness_.getRate();\n\n    /** @private {number} */\n    this.pollRate_ = 0.25;\n\n    /** @private {shaka.util.Timer} */\n    this.timer_ = new shaka.util.Timer(() => {\n      this.harness_.movePlayhead(this.rate_ * this.pollRate_);\n    });\n  }\n\n  /** @override */\n  release() {\n    if (this.timer_) {\n      this.timer_.stop();\n      this.timer_ = null;\n    }\n\n    this.harness_ = null;\n  }\n\n  /**\n   * Sets the buffering flag, which controls the effective playback rate.\n   *\n   * @param {boolean} isBuffering If true, forces playback rate to 0 internally.\n   */\n  setBuffering(isBuffering) {\n    this.isBuffering_ = isBuffering;\n    this.apply_();\n  }\n\n  /**\n   * Set the playback rate. This rate will only be used as provided when the\n   * player is not buffering. You should never set the rate to 0.\n   *\n   * @param {number} rate\n   */\n  set(rate) {\n    goog.asserts.assert(rate != 0, 'Should never set rate of 0 explicitly!');\n    this.rate_ = rate;\n    this.apply_();\n  }\n\n  /**\n   * Get the rate that the user will experience. This means that if we are using\n   * trick play, this will report the trick play rate. If we are buffering, this\n   * will report zero. If playback is occurring as normal, this will report 1.\n   *\n   * @return {number}\n   */\n  getActiveRate() {\n    return this.calculateCurrentRate_();\n  }\n\n  /**\n   * Reapply the effects of |this.rate_| and |this.active_| to the media\n   * element. This will only update the rate via the harness if the desired rate\n   * has changed.\n   *\n   * @private\n   */\n  apply_() {\n    // Always stop the timer. We may not start it again.\n    this.timer_.stop();\n\n    /** @type {number} */\n    const rate = this.calculateCurrentRate_();\n\n    if (rate >= 0) {\n      try {\n        this.applyRate_(rate);\n        return;\n      } catch (e) {\n        // Fall through to the next clause.\n        //\n        // Fast forward is accomplished through setting video.playbackRate.\n        // If the play rate value is not supported by the browser (too big),\n        // the browsers will throw.\n        // Use this as a cue to fall back to fast forward through repeated\n        // seeking, which is what we do for rewind as well.\n      }\n    }\n\n    // When moving backwards or forwards in large steps,\n    // set the playback rate to 0 so that we can manually\n    // seek backwards with out fighting the playhead.\n    this.timer_.tickEvery(this.pollRate_);\n    this.applyRate_(0);\n  }\n\n  /**\n   * Calculate the rate that the controller wants the media element to have\n   * based on the current state of the controller.\n   *\n   * @return {number}\n   * @private\n   */\n  calculateCurrentRate_() {\n    return this.isBuffering_ ? 0 : this.rate_;\n  }\n\n  /**\n   * If the new rate is different than the media element's playback rate, this\n   * will change the playback rate. If the rate does not need to change, it will\n   * not be set. This will avoid unnecessary ratechange events.\n   *\n   * @param {number} newRate\n   * @return {boolean}\n   * @private\n   */\n  applyRate_(newRate) {\n    const oldRate = this.harness_.getRate();\n\n    if (oldRate != newRate) {\n      this.harness_.setRate(newRate);\n    }\n\n    return oldRate != newRate;\n  }\n};\n\n\n/**\n * @typedef {{\n *   getRate: function():number,\n *   setRate: function(number),\n *   movePlayhead: function(number)\n * }}\n *\n * @description\n *   A layer of abstraction between the controller and what it is controlling.\n *   In tests this will be implemented with spies. In production this will be\n *   implemented using a media element.\n *\n * @property {function():number} getRate\n *   Get the current playback rate being seen by the user.\n *\n * @property {function(number)} setRate\n *   Set the playback rate that the user should see.\n *\n * @property {function(number)} movePlayhead\n *   Move the playhead N seconds. If N is positive, the playhead will move\n *   forward abs(N) seconds. If N is negative, the playhead will move backwards\n *   abs(N) seconds.\n */\nshaka.media.PlayRateController.Harness;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.VideoWrapper');\ngoog.provide('shaka.media.VideoWrapper.PlayheadMover');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.IReleasable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a new VideoWrapper that manages setting current time and playback\n * rate.  This handles seeks before content is loaded and ensuring the video\n * time is set properly.  This doesn't handle repositioning within the\n * presentation window.\n *\n * @param {!HTMLMediaElement} video\n * @param {function()} onSeek Called when the video seeks.\n * @param {number} startTime The time to start at.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IReleasable}\n */\nshaka.media.VideoWrapper = function(video, onSeek, startTime) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {function()} */\n  this.onSeek_ = onSeek;\n\n  /** @private {number} */\n  this.startTime_ = startTime;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {shaka.media.VideoWrapper.PlayheadMover} */\n  this.mover_ = new shaka.media.VideoWrapper.PlayheadMover(\n      /* mediaElement= */ video,\n      /* maxAttempts= */ 10);\n\n  // Before we can set the start time, we must check if the video element is\n  // ready. If the video element is not ready, we cannot set the time. To work\n  // around this, we will wait for the \"loadedmetadata\" event which tells us\n  // that the media element is now ready.\n  if (video.readyState > 0) {\n    this.setStartTime_(startTime);\n  } else {\n    this.delaySetStartTime_(startTime);\n  }\n};\n\n\n/** @override */\nshaka.media.VideoWrapper.prototype.release = function() {\n  if (this.eventManager_) {\n    this.eventManager_.release();\n    this.eventManager_ = null;\n  }\n\n  if (this.mover_ != null) {\n    this.mover_.release();\n    this.mover_ = null;\n  }\n\n  this.onSeek_ = () => {};\n  this.video_ = null;\n};\n\n\n/**\n * Gets the video's current (logical) position.\n *\n * @return {number}\n */\nshaka.media.VideoWrapper.prototype.getTime = function() {\n  return this.video_.readyState > 0 ?\n         this.video_.currentTime :\n         this.startTime_;\n};\n\n\n/**\n * Sets the current time of the video.\n *\n * @param {number} time\n */\nshaka.media.VideoWrapper.prototype.setTime = function(time) {\n  if (this.video_.readyState > 0) {\n    this.mover_.moveTo(time);\n  } else {\n    this.delaySetStartTime_(time);\n  }\n};\n\n/**\n * If the media element is not ready, we can't set |currentTime|. To work around\n * this we will listen for the \"loadedmetadata\" event so that we can set the\n * start time once the element is ready.\n *\n * @param {number} startTime\n */\nshaka.media.VideoWrapper.prototype.delaySetStartTime_ = function(startTime) {\n  const readyEvent = 'loadedmetadata';\n\n  // Since we are going to override what the start time should be, we need to\n  // save it so that |getTime| can return the most accurate start time possible.\n  this.startTime_ = startTime;\n\n  // The media element is not ready to accept changes to current time. We need\n  // to cache them and then execute them once the media element is ready.\n  this.eventManager_.unlisten(this.video_, readyEvent);\n\n  this.eventManager_.listenOnce(this.video_, readyEvent, () => {\n    this.setStartTime_(startTime);\n  });\n};\n\n\n/**\n * Set the start time for the content. The given start time will be ignored if\n * the content does not start at 0.\n *\n * @param {number} startTime\n * @private\n */\nshaka.media.VideoWrapper.prototype.setStartTime_ = function(startTime) {\n  // If we start close enough to our intended start time, then we won't do\n  // anything special.\n  if (Math.abs(this.video_.currentTime - startTime) < 0.001) {\n    this.startListeningToSeeks_();\n    return;\n  }\n\n  // We will need to delay adding our normal seeking listener until we have\n  // seen the first seek event. We will force the first seek event later in this\n  // method.\n  this.eventManager_.listenOnce(this.video_, 'seeking', () => {\n    this.startListeningToSeeks_();\n  });\n\n  // If the currentTime != 0, it indicates that the user has seeked after\n  // calling |Player.load|, meaning that |currentTime| is more meaningful than\n  // |startTime|.\n  //\n  // Seeking to the current time is a work around for Issue 1298. If we don't\n  // do this, the video may get stuck and not play.\n  //\n  // TODO: Need further investigation why it happens. Before and after\n  // setting the current time, video.readyState is 1, video.paused is true,\n  // and video.buffered's TimeRanges length is 0.\n  // See: https://github.com/google/shaka-player/issues/1298\n  this.mover_.moveTo(\n      this.video_.currentTime == 0 ?\n      startTime :\n      this.video_.currentTime);\n};\n\n\n/**\n * Add the listener for seek-events. This will call the externally-provided\n * |onSeek| callback whenever the media element seeks.\n *\n * @private\n */\nshaka.media.VideoWrapper.prototype.startListeningToSeeks_ = function() {\n  goog.asserts.assert(\n      this.video_.readyState > 0,\n      'The media element should be ready before we listen for seeking.');\n\n  this.eventManager_.listen(this.video_, 'seeking', () => this.onSeek_());\n};\n\n\n/**\n * A class used to move the playhead away from its current time.  Sometimes, IE\n * and Edge ignore re-seeks. After changing the current time, check every 100ms,\n * retrying if the change was not accepted.\n *\n * Delay stats over 100 runs of a re-seeking integration test:\n *   IE     -   0ms -  47%\n *   IE     - 100ms -  63%\n *   Edge   -   0ms -   2%\n *   Edge   - 100ms -  40%\n *   Edge   - 200ms -  32%\n *   Edge   - 300ms -  24%\n *   Edge   - 400ms -   2%\n *   Chrome -   0ms - 100%\n *\n * TODO: File a bug on IE/Edge about this.\n *\n * @implements {shaka.util.IReleasable}\n * @final\n */\nshaka.media.VideoWrapper.PlayheadMover = class {\n  /**\n   * @param {!HTMLMediaElement} mediaElement\n   *    The media element that the mover can manipulate.\n   *\n   * @param {number} maxAttempts\n   *    To prevent us from infinitely trying to change the current time, the\n   *    mover accepts a max attempts value. At most, the mover will check if the\n   *    video moved |maxAttempts| times. If this is zero of negative, no\n   *    attempts will be made.\n   */\n  constructor(mediaElement, maxAttempts) {\n    /** @private {HTMLMediaElement} */\n    this.mediaElement_ = mediaElement;\n\n    /** @private {number} */\n    this.maxAttempts_ = maxAttempts;\n\n    /** @private {number} */\n    this.remainingAttempts_ = 0;\n\n    /** @private {number} */\n    this.originTime_ = 0;\n\n    /** @private {number} */\n    this.targetTime_ = 0;\n\n    /** @private {shaka.util.Timer} */\n    this.timer_ = new shaka.util.Timer(() => this.onTick_());\n  }\n\n  /** @override */\n  release() {\n    if (this.timer_) {\n      this.timer_.stop();\n      this.timer_ = null;\n    }\n\n    this.mediaElement_ = null;\n  }\n\n  /**\n   * Try forcing the media element to move to |timeInSeconds|. If a previous\n   * call to |moveTo| is still in progress, this will override it.\n   *\n   * @param {number} timeInSeconds\n   */\n  moveTo(timeInSeconds) {\n    this.originTime_ = this.mediaElement_.currentTime;\n    this.targetTime_ = timeInSeconds;\n\n    this.remainingAttempts_ = this.maxAttempts_;\n\n    // Set the time and then start the timer. The timer will check if the set\n    // was successful, and retry if not.\n    this.mediaElement_.currentTime = timeInSeconds;\n    this.timer_.tickEvery(/* seconds= */ 0.1);\n  }\n\n  /**\n   * @private\n   */\n  onTick_() {\n    // Sigh... We ran out of retries...\n    if (this.remainingAttempts_ <= 0) {\n      shaka.log.warning([\n        'Failed to move playhead from', this.originTime_,\n        'to', this.targetTime_,\n      ].join(' '));\n\n      this.timer_.stop();\n      return;\n    }\n\n    // Yay! We were successful.\n    if (this.mediaElement_.currentTime != this.originTime_) {\n      this.timer_.stop();\n      return;\n    }\n\n    // Sigh... Try again...\n    this.mediaElement_.currentTime = this.targetTime_;\n    this.remainingAttempts_--;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.MediaSourcePlayhead');\ngoog.provide('shaka.media.Playhead');\ngoog.provide('shaka.media.SrcEqualsPlayhead');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.GapJumpingController');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.media.VideoWrapper');\ngoog.require('shaka.util.IReleasable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a Playhead, which manages the video's current time.\n *\n * The Playhead provides mechanisms for setting the presentation's start time,\n * restricting seeking to valid time ranges, and stopping playback for startup\n * and re-buffering.\n *\n * @extends {shaka.util.IReleasable}\n * @interface\n */\nshaka.media.Playhead = class {\n  /**\n   * Set the start time. If the content has already started playback, this will\n   * be ignored.\n   *\n   * @param {number} startTime\n   */\n  setStartTime(startTime) {}\n\n  /**\n   * Get the current playhead position. The position will be restricted to valid\n   * time ranges.\n   *\n   * @return {number}\n   */\n  getTime() {}\n\n  /**\n   * Notify the playhead that the buffered ranges have changed.\n   */\n  notifyOfBufferingChange() {}\n};\n\n\n/**\n * A playhead implementation that only relies on the media element.\n *\n * @implements {shaka.media.Playhead}\n * @final\n */\nshaka.media.SrcEqualsPlayhead = class {\n  /**\n   * @param {!HTMLMediaElement} mediaElement\n   */\n  constructor(mediaElement) {\n    /** @private {HTMLMediaElement} */\n    this.mediaElement_ = mediaElement;\n    /** @private {boolean} */\n    this.started_ = false;\n    /** @private {?number} */\n    this.startTime_ = null;\n\n    /** @private {shaka.util.EventManager} */\n    this.eventManager_ = new shaka.util.EventManager();\n\n    // We listen for the loaded-metadata-event so that we know when we can\n    // interact with |currentTime|.\n    const onLoaded = () => {\n      this.started_ = true;\n\n      if (this.startTime_ != null) {\n        this.mediaElement_.currentTime = this.startTime_;\n      }\n    };\n    if (this.mediaElement_.readyState == 0) {\n      this.eventManager_.listenOnce(\n          this.mediaElement_, 'loadedmetadata', onLoaded);\n    } else {\n      // It's already loaded.\n      onLoaded();\n    }\n  }\n\n  /** @override */\n  release() {\n    if (this.eventManager_) {\n      this.eventManager_.release();\n      this.eventManager_ = null;\n    }\n\n    this.mediaElement_ = null;\n  }\n\n  /** @override */\n  setStartTime(startTime) {\n    // If we have already started playback, ignore updates to the start time.\n    // This is just to make things consistent.\n    this.startTime_ = this.started_ ? this.startTime_ : startTime;\n  }\n\n  /** @override */\n  getTime() {\n    // If we have not started playback yet, return the start time. However once\n    // we start playback we assume that we can always return the current time.\n    const time = this.started_ ?\n                 this.mediaElement_.currentTime :\n                 this.startTime_;\n\n    // In the case that we have not started playback, but the start time was\n    // never set, we don't know what the start time should be. To ensure we\n    // always return a number, we will default back to 0.\n    return time || 0;\n  }\n\n  /** @override */\n  notifyOfBufferingChange() {}\n};\n\n\n/**\n * A playhead implementation that relies on the media element and a manifest.\n * When provided with a manifest, we can provide more accurate control than\n * the SrcEqualsPlayhead.\n *\n * TODO: Clean up and simplify Playhead.  There are too many layers of, methods\n *       for, and conditions on timestamp adjustment.\n *\n * @implements {shaka.media.Playhead}\n * @final\n */\nshaka.media.MediaSourcePlayhead = class {\n  /**\n   * @param {!HTMLMediaElement} mediaElement\n   * @param {shaka.extern.Manifest} manifest\n   * @param {shaka.extern.StreamingConfiguration} config\n   * @param {?number} startTime\n   *     The playhead's initial position in seconds. If null, defaults to the\n   *     start of the presentation for VOD and the live-edge for live.\n   * @param {function()} onSeek\n   *     Called when the user agent seeks to a time within the presentation\n   *     timeline.\n   * @param {function(!Event)} onEvent\n   *     Called when an event is raised to be sent to the application.\n   */\n  constructor(mediaElement, manifest, config, startTime, onSeek, onEvent) {\n    /**\n     * The seek range must be at least this number of seconds long. If it is\n     * smaller than this, change it to be this big so we don't repeatedly seek\n     * to keep within a zero-width window.\n     *\n     * This is 3s long, to account for the weaker hardware on platforms like\n     * Chromecast.\n     *\n     * @private {number}\n     */\n    this.minSeekRange_ = 3.0;\n\n    /** @private {HTMLMediaElement} */\n    this.mediaElement_ = mediaElement;\n\n    /** @private {shaka.media.PresentationTimeline} */\n    this.timeline_ = manifest.presentationTimeline;\n\n    /** @private {number} */\n    this.minBufferTime_ = manifest.minBufferTime || 0;\n\n    /** @private {?shaka.extern.StreamingConfiguration} */\n    this.config_ = config;\n\n    /** @private {function()} */\n    this.onSeek_ = onSeek;\n\n    /** @private {?number} */\n    this.lastCorrectiveSeek_ = null;\n\n    /** @private {shaka.media.GapJumpingController} */\n    this.gapController_ = new shaka.media.GapJumpingController(\n        mediaElement,\n        manifest.presentationTimeline,\n        config,\n        this.createStallDetector_(mediaElement, config),\n        onEvent);\n\n    /** @private {shaka.media.VideoWrapper} */\n    this.videoWrapper_ = new shaka.media.VideoWrapper(\n        mediaElement,\n        () => this.onSeeking_(),\n        this.getStartTime_(startTime));\n\n    /** @type {shaka.util.Timer} */\n    this.checkWindowTimer_ = new shaka.util.Timer(() => {\n      this.onPollWindow_();\n    }).tickEvery(/* seconds= */ 0.25);\n  }\n\n  /** @override */\n  release() {\n    if (this.videoWrapper_) {\n      this.videoWrapper_.release();\n      this.videoWrapper_ = null;\n    }\n\n    if (this.gapController_) {\n      this.gapController_.release();\n      this.gapController_= null;\n    }\n\n    if (this.checkWindowTimer_) {\n      this.checkWindowTimer_.stop();\n      this.checkWindowTimer_ = null;\n    }\n\n    this.config_ = null;\n    this.timeline_ = null;\n    this.videoWrapper_ = null;\n    this.mediaElement_ = null;\n\n    this.onSeek_ = () => {};\n  }\n\n  /** @override */\n  setStartTime(startTime) {\n    this.videoWrapper_.setTime(startTime);\n  }\n\n  /** @override */\n  getTime() {\n    const time = this.videoWrapper_.getTime();\n\n    // Although we restrict the video's currentTime elsewhere, clamp it here to\n    // ensure timing issues don't cause us to return a time outside the segment\n    // availability window.  E.g., the user agent seeks and calls this function\n    // before we receive the 'seeking' event.\n    //\n    // We don't buffer when the livestream video is paused and the playhead time\n    // is out of the seek range; thus, we do not clamp the current time when the\n    // video is paused.\n    // https://github.com/google/shaka-player/issues/1121\n    if (this.mediaElement_.readyState > 0 && !this.mediaElement_.paused) {\n      return this.clampTime_(time);\n    }\n\n    return time;\n  }\n\n  /**\n   * Gets the playhead's initial position in seconds.\n   *\n   * @param {?number} startTime\n   * @return {number}\n   * @private\n   */\n  getStartTime_(startTime) {\n    if (startTime == null) {\n      if (this.timeline_.getDuration() < Infinity) {\n        // If the presentation is VOD, or if the presentation is live but has\n        // finished broadcasting, then start from the beginning.\n        startTime = this.timeline_.getSeekRangeStart();\n      } else {\n        // Otherwise, start near the live-edge.\n        startTime = this.timeline_.getSeekRangeEnd();\n      }\n    } else if (startTime < 0) {\n      // For live streams, if the startTime is negative, start from a certain\n      // offset time from the live edge.  If the offset from the live edge is\n      // not available, start from the current available segment start point\n      // instead, handled by clampTime_().\n      startTime = this.timeline_.getSeekRangeEnd() + startTime;\n    }\n\n    return this.clampSeekToDuration_(this.clampTime_(startTime));\n  }\n\n  /** @override */\n  notifyOfBufferingChange() {\n    this.gapController_.onSegmentAppended();\n  }\n\n  /**\n   * Called on a recurring timer to keep the playhead from falling outside the\n   * availability window.\n   *\n   * @private\n   */\n  onPollWindow_() {\n    // Don't catch up to the seek range when we are paused or empty.\n    // The definition of \"seeking\" says that we are seeking until the buffered\n    // data intersects with the playhead.  If we fall outside of the seek range,\n    // it doesn't matter if we are in a \"seeking\" state.  We can and should go\n    // ahead and catch up while seeking.\n    if (this.mediaElement_.readyState == 0 || this.mediaElement_.paused) {\n      return;\n    }\n\n    let currentTime = this.mediaElement_.currentTime;\n    let seekStart = this.timeline_.getSeekRangeStart();\n    let seekEnd = this.timeline_.getSeekRangeEnd();\n\n    if (seekEnd - seekStart < this.minSeekRange_) {\n      seekStart = seekEnd - this.minSeekRange_;\n    }\n\n    if (currentTime < seekStart) {\n      // The seek range has moved past the playhead.  Move ahead to catch up.\n      let targetTime = this.reposition_(currentTime);\n      shaka.log.info('Jumping forward ' + (targetTime - currentTime) +\n                     ' seconds to catch up with the seek range.');\n      this.mediaElement_.currentTime = targetTime;\n    }\n  }\n\n  /**\n   * Handles when a seek happens on the video.\n   *\n   * @private\n   */\n  onSeeking_() {\n    this.gapController_.onSeeking();\n    let currentTime = this.videoWrapper_.getTime();\n    let targetTime = this.reposition_(currentTime);\n\n    const gapLimit = shaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE;\n    if (Math.abs(targetTime - currentTime) > gapLimit) {\n      // You can only seek like this every so often. This is to prevent an\n      // infinite loop on systems where changing currentTime takes a significant\n      // amount of time (e.g. Chromecast).\n      let time = new Date().getTime() / 1000;\n      if (!this.lastCorrectiveSeek_ || this.lastCorrectiveSeek_ < time - 1) {\n        this.lastCorrectiveSeek_ = time;\n        this.videoWrapper_.setTime(targetTime);\n        return;\n      }\n    }\n\n    shaka.log.v1('Seek to ' + currentTime);\n    this.onSeek_();\n  }\n\n  /**\n   * Clamp seek times and playback start times so that we never seek to the\n   * presentation duration.  Seeking to or starting at duration does not work\n   * consistently across browsers.\n   *\n   * @see https://github.com/google/shaka-player/issues/979\n   * @param {number} time\n   * @return {number} The adjusted seek time.\n   * @private\n   */\n  clampSeekToDuration_(time) {\n    let duration = this.timeline_.getDuration();\n    if (time >= duration) {\n      goog.asserts.assert(this.config_.durationBackoff >= 0,\n                          'Duration backoff must be non-negative!');\n      return duration - this.config_.durationBackoff;\n    }\n    return time;\n  }\n\n  /**\n   * Computes a new playhead position that's within the presentation timeline.\n   *\n   * @param {number} currentTime\n   * @return {number} The time to reposition the playhead to.\n   * @private\n   */\n  reposition_(currentTime) {\n    goog.asserts.assert(\n        this.config_,\n        'Cannot reposition playhead when it has beeen destroyed');\n\n    /** @type {function(number)} */\n    let isBuffered = shaka.media.TimeRangesUtils.isBuffered.bind(\n        null, this.mediaElement_.buffered);\n\n    let rebufferingGoal = Math.max(\n        this.minBufferTime_,\n        this.config_.rebufferingGoal);\n\n    const safeSeekOffset = this.config_.safeSeekOffset;\n\n    let start = this.timeline_.getSeekRangeStart();\n    let end = this.timeline_.getSeekRangeEnd();\n    let duration = this.timeline_.getDuration();\n\n    if (end - start < this.minSeekRange_) {\n      start = end - this.minSeekRange_;\n    }\n\n    // With live content, the beginning of the availability window is moving\n    // forward.  This means we cannot seek to it since we will \"fall\" outside\n    // the window while we buffer.  So we define a \"safe\" region that is far\n    // enough away.  For VOD, |safe == start|.\n    let safe = this.timeline_.getSafeSeekRangeStart(rebufferingGoal);\n\n    // These are the times to seek to rather than the exact destinations.  When\n    // we seek, we will get another event (after a slight delay) and these steps\n    // will run again.  So if we seeked directly to |start|, |start| would move\n    // on the next call and we would loop forever.\n    let seekStart = this.timeline_.getSafeSeekRangeStart(safeSeekOffset);\n    let seekSafe = this.timeline_.getSafeSeekRangeStart(\n        rebufferingGoal + safeSeekOffset);\n\n    if (currentTime >= duration) {\n      shaka.log.v1('Playhead past duration.');\n      return this.clampSeekToDuration_(currentTime);\n    }\n\n    if (currentTime > end) {\n      shaka.log.v1('Playhead past end.');\n      return end;\n    }\n\n    if (currentTime < start) {\n      if (isBuffered(seekStart)) {\n        shaka.log.v1('Playhead before start & start is buffered');\n        return seekStart;\n      } else {\n        shaka.log.v1('Playhead before start & start is unbuffered');\n        return seekSafe;\n      }\n    }\n\n    if (currentTime >= safe || isBuffered(currentTime)) {\n      shaka.log.v1('Playhead in safe region or in buffered region.');\n      return currentTime;\n    } else {\n      shaka.log.v1('Playhead outside safe region & in unbuffered region.');\n      return seekSafe;\n    }\n  }\n\n  /**\n   * Clamps the given time to the seek range.\n   *\n   * @param {number} time The time in seconds.\n   * @return {number} The clamped time in seconds.\n   * @private\n   */\n  clampTime_(time) {\n    let start = this.timeline_.getSeekRangeStart();\n    if (time < start) return start;\n\n    let end = this.timeline_.getSeekRangeEnd();\n    if (time > end) return end;\n\n    return time;\n  }\n\n  /**\n   * Create and configure a stall detector using the player's streaming\n   * configuration settings. If the player is configured to have no stall\n   * detector, this will return |null|.\n   *\n   * @param {!HTMLMediaElement} mediaElement\n   * @param {shaka.extern.StreamingConfiguration} config\n   * @return {shaka.media.StallDetector}\n   * @private\n   */\n  createStallDetector_(mediaElement, config) {\n    if (!config.stallEnabled) {\n      return null;\n    }\n\n    // Cache the values from the config so that changes to the config won't\n    // change the initialized behaviour.\n    const threshold = config.stallThreshold;\n    const skip = config.stallSkip;\n\n    // When we see a stall, we will try to \"jump-start\" playback by moving the\n    // playhead forward.\n    const detector = new shaka.media.StallDetector(\n        new shaka.media.StallDetector.MediaElementImplementation(mediaElement),\n        threshold);\n\n    detector.onStall((at, duration) => {\n      shaka.log.debug([\n        'Stall detected at', at, 'for', duration, 'seconds. Seeking forward',\n        skip, 'seconds.',\n      ].join(' '));\n\n      mediaElement.currentTime += skip;\n    });\n\n    return detector;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.RegionTimeline');\n\ngoog.require('shaka.util.IReleasable');\n\n\n/**\n * The region timeline is a set of unique timeline region info entries. When\n * a new entry is added, the |onAddRegion| callback will be called.\n *\n * @implements {shaka.util.IReleasable}\n * @final\n */\nshaka.media.RegionTimeline = class {\n  constructor() {\n    /** @private {function(shaka.extern.TimelineRegionInfo)} */\n    this.onAddRegion_ = (region) => {};\n    /** @private {!Set.<shaka.extern.TimelineRegionInfo>} */\n    this.regions_ = new Set();\n  }\n\n  /** @override */\n  release() {\n    // Prevent us from holding onto any external references via the callback.\n    this.onAddRegion_ = (region) => {};\n    this.regions_.clear();\n  }\n\n  /**\n   * Set the callbacks for events. This will override any previous calls to\n   * |setListeners|.\n   *\n   * @param {function(shaka.extern.TimelineRegionInfo)} onAddRegion\n   *    Set the callback for when we add a new region. This callback will only\n   *    be called when a region is unique (we reject duplicate regions).\n   */\n  setListeners(onAddRegion) {\n    this.onAddRegion_ = onAddRegion;\n  }\n\n  /**\n   * @param {shaka.extern.TimelineRegionInfo} region\n   */\n  addRegion(region) {\n    const similarRegion = this.findSimilarRegion_(region);\n\n    // Make sure we don't add duplicate regions. We keep track of this here\n    // instead of making the parser track it.\n    if (similarRegion == null) {\n      this.regions_.add(region);\n      this.onAddRegion_(region);\n    }\n  }\n\n  /**\n   * Find a region in the timeline that has the same scheme id uri, start time,\n   * and end time. If these three parameters match, we assume it to be the same\n   * region. If no similar region can be found, |null| will be returned.\n   *\n   * @param {shaka.extern.TimelineRegionInfo} region\n   * @return {?shaka.extern.TimelineRegionInfo}\n   * @private\n   */\n  findSimilarRegion_(region) {\n    for (const existing of this.regions_) {\n      // The same scheme ID and time range means that it is similar-enough to\n      // be the same region.\n      const isSimilar = existing.schemeIdUri == region.schemeIdUri &&\n                        existing.startTime == region.startTime &&\n                        existing.endTime == region.endTime;\n\n      if (isSimilar) {\n        return existing;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get an iterable for all the regions in the timeline. This will allow\n   * others to see what regions are in the timeline while not being able to\n   * change the collection.\n   *\n   * @return {!Iterable.<shaka.extern.TimelineRegionInfo>}\n   */\n  regions() {\n    return this.regions_;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.RegionObserver');\n\ngoog.require('shaka.media.RegionTimeline');\n\n\n/**\n * The region observer watches a region timeline and playhead, and fires events\n * (onEnter, onExit, and onSkip) as the playhead moves.\n *\n * @implements {shaka.media.IPlayheadObserver}\n * @final\n */\nshaka.media.RegionObserver = class {\n  /**\n   * Create a region observer for the given timeline. The observer does not\n   * own the timeline, only uses it. This means that the observer should NOT\n   * destroy the timeline.\n   *\n   * @param {!shaka.media.RegionTimeline} timeline\n   */\n  constructor(timeline) {\n    /** @private {shaka.media.RegionTimeline} */\n    this.timeline_ = timeline;\n\n    /**\n     * A mapping between a region and where we previously were relative to it.\n     * When the value here differs from what we calculate, it means we moved and\n     * should fire an event.\n     *\n     * @private {!Map.<shaka.extern.TimelineRegionInfo,\n     *                 shaka.media.RegionObserver.RelativePosition_>}\n     */\n    this.oldPosition_ = new Map();\n\n    /** @private {shaka.media.RegionObserver.EventListener} */\n    this.onEnter_ = (region, seeking) => {};\n    /** @private {shaka.media.RegionObserver.EventListener} */\n    this.onExit_ = (region, seeking) => {};\n    /** @private {shaka.media.RegionObserver.EventListener} */\n    this.onSkip_ = (region, seeking) => {};\n\n    // To make the rules easier to read, alias all the relative positions.\n    const RelativePosition = shaka.media.RegionObserver.RelativePosition_;\n    const BEFORE_THE_REGION = RelativePosition.BEFORE_THE_REGION;\n    const IN_THE_REGION = RelativePosition.IN_THE_REGION;\n    const AFTER_THE_REGION = RelativePosition.AFTER_THE_REGION;\n\n    /**\n     * A read-only collection of rules for what to do when we change position\n     * relative to a region.\n     *\n     * @private {!Iterable.<shaka.media.RegionObserver.Rule_>}\n     */\n    this.rules_ = [\n      {\n        weWere: null,\n        weAre: IN_THE_REGION,\n        invoke: (region, seeking) => this.onEnter_(region, seeking),\n      },\n      {\n        weWere: BEFORE_THE_REGION,\n        weAre: IN_THE_REGION,\n        invoke: (region, seeking) => this.onEnter_(region, seeking),\n      },\n      {\n        weWere: AFTER_THE_REGION,\n        weAre: IN_THE_REGION,\n        invoke: (region, seeking) => this.onEnter_(region, seeking),\n      },\n      {\n        weWere: IN_THE_REGION,\n        weAre: BEFORE_THE_REGION,\n        invoke: (region, seeking) => this.onExit_(region, seeking),\n      },\n      {\n        weWere: IN_THE_REGION,\n        weAre: AFTER_THE_REGION,\n        invoke: (region, seeking) => this.onExit_(region, seeking),\n      },\n      {\n        weWere: BEFORE_THE_REGION,\n        weAre: AFTER_THE_REGION,\n        invoke: (region, seeking) => this.onSkip_(region, seeking),\n      },\n      {\n        weWere: AFTER_THE_REGION,\n        weAre: BEFORE_THE_REGION,\n        invoke: (region, seeking) => this.onSkip_(region, seeking),\n      },\n    ];\n  }\n\n  /** @override */\n  release() {\n    this.timeline_ = null;\n\n    // Clear our maps so that we are not holding onto any more information than\n    // needed.\n    this.oldPosition_.clear();\n\n    // Clear the callbacks so that we don't hold onto any references external\n    // to this class.\n    this.onEnter_ = (region, seeking) => {};\n    this.onExit_ = (region, seeking) => {};\n    this.onSkip_ = (region, seeking) => {};\n  }\n\n  /** @override */\n  poll(positionInSeconds, wasSeeking) {\n    const RegionObserver = shaka.media.RegionObserver;\n\n    for (const region of this.timeline_.regions()) {\n      const previousPosition = this.oldPosition_.get(region);\n      const currentPosition = RegionObserver.determinePositionRelativeTo_(\n          region, positionInSeconds);\n\n      // We will only use |previousPosition| and |currentPosition|, so we can\n      // update our state now.\n      this.oldPosition_.set(region, currentPosition);\n\n      for (const rule of this.rules_) {\n        if (rule.weWere == previousPosition && rule.weAre == currentPosition) {\n          rule.invoke(region, wasSeeking);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set all the listeners. This overrides any previous calls to |setListeners|.\n   *\n   * @param {shaka.media.RegionObserver.EventListener} onEnter\n   *    The callback for when we move from outside a region to inside a region.\n   * @param {shaka.media.RegionObserver.EventListener} onExit\n   *    The callback for when we move from inside a region to outside a region.\n   * @param {shaka.media.RegionObserver.EventListener} onSkip\n   *    The callback for when we move from before to after a region or from\n   *    after to before a region.\n   */\n  setListeners(onEnter, onExit, onSkip) {\n    this.onEnter_ = onEnter;\n    this.onExit_ = onExit;\n    this.onSkip_ = onSkip;\n  }\n\n  /**\n   * Get the relative position of the playhead to |region| when the playhead is\n   * at |seconds|. We treat the region's start and end times as inclusive\n   * bounds.\n   *\n   * @param {shaka.extern.TimelineRegionInfo} region\n   * @param {number} seconds\n   * @return {shaka.media.RegionObserver.RelativePosition_}\n   * @private\n   */\n  static determinePositionRelativeTo_(region, seconds) {\n    const RelativePosition = shaka.media.RegionObserver.RelativePosition_;\n\n    if (seconds < region.startTime) {\n      return RelativePosition.BEFORE_THE_REGION;\n    }\n\n    if (seconds > region.endTime) {\n      return RelativePosition.AFTER_THE_REGION;\n    }\n\n    return RelativePosition.IN_THE_REGION;\n  }\n};\n\n/**\n * An enum of relative positions between the playhead and a region. Each is\n * phrased so that it works in \"The playhead is X\" where \"X\" is any value in\n * the enum.\n *\n * @enum {number}\n * @private\n */\nshaka.media.RegionObserver.RelativePosition_ = {\n  BEFORE_THE_REGION: 1,\n  IN_THE_REGION: 2,\n  AFTER_THE_REGION: 3,\n};\n\n/**\n * All region observer events (onEnter, onExit, and onSkip) will be passed the\n * region that the playhead is interacting with and whether or not the playhead\n * moving is part of a seek event.\n *\n * @typedef {function(shaka.extern.TimelineRegionInfo, boolean)}\n */\nshaka.media.RegionObserver.EventListener;\n\n/**\n * @typedef {{\n *    weWere: ?shaka.media.RegionObserver.RelativePosition_,\n *    weAre: ?shaka.media.RegionObserver.RelativePosition_,\n *    invoke: shaka.media.RegionObserver.EventListener\n * }}\n *\n * @private\n */\nshaka.media.RegionObserver.Rule_;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.StreamingEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.net.Backoff');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.DelayedTick');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Iterables');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.Networking');\ngoog.require('shaka.util.Periods');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * Creates a StreamingEngine.\n *\n * The StreamingEngine is responsible for setting up the Manifest's Streams\n * (i.e., for calling each Stream's createSegmentIndex() function), for\n * downloading segments, for co-ordinating audio, video, and text buffering,\n * and for handling Period transitions. The StreamingEngine provides an\n * interface to switch between Streams, but it does not choose which Streams to\n * switch to.\n *\n * The StreamingEngine notifies its owner when it needs to buffer a new Period,\n * so its owner can choose which Streams within that Period to initially\n * buffer. Moreover, the StreamingEngine also notifies its owner when any\n * Stream within the current Period may be switched to, so its owner can switch\n * bitrates, resolutions, or languages.\n *\n * The StreamingEngine does not need to be notified about changes to the\n * Manifest's SegmentIndexes; however, it does need to be notified when new\n * Periods are added to the Manifest, so it can set up that Period's Streams.\n *\n * To start the StreamingEngine the owner must first call configure() followed\n * by init(). The StreamingEngine will then call onChooseStreams(p) when it\n * needs to buffer Period p; it will then switch to the Streams returned from\n * that function. The StreamingEngine will call onCanSwitch() when any\n * Stream within the current Period may be switched to.\n *\n * The owner must call seeked() each time the playhead moves to a new location\n * within the presentation timeline; however, the owner may forego calling\n * seeked() when the playhead moves outside the presentation timeline.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.media.StreamingEngine.PlayerInterface} playerInterface\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.StreamingEngine = function(manifest, playerInterface) {\n  /** @private {?shaka.media.StreamingEngine.PlayerInterface} */\n  this.playerInterface_ = playerInterface;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = manifest;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = null;\n\n  /** @private {number} */\n  this.bufferingGoalScale_ = 1;\n\n  /** @private {Promise} */\n  this.setupPeriodPromise_ = Promise.resolve();\n\n  /**\n   * Maps a Period's index to an object that indicates that either\n   *   1. the Period has not been set up (undefined).\n   *   2. the Period is being set up ([a PublicPromise, false]).\n   *   3. the Period is set up (i.e., all Streams within the Period are set up)\n   *      and can be switched to ([a PublicPromise, true]).\n   *\n   * @private {Array.<?{promise: shaka.util.PublicPromise, resolved: boolean}>}\n   */\n  this.canSwitchPeriod_ = [];\n\n  /**\n   * Maps a Stream's ID to an object that indicates that either\n   *   1. the Stream has not been set up (undefined).\n   *   2. the Stream is being set up ([a Promise instance, false]).\n   *   3. the Stream is set up and can be switched to\n   *      ([a Promise instance, true]).\n   *\n   * @private {!Map.<number,\n   *                 ?{promise: shaka.util.PublicPromise, resolved: boolean}>}\n   */\n  this.canSwitchStream_ = new Map();\n\n  /**\n   * Maps a content type, e.g., 'audio', 'video', or 'text', to a MediaState.\n   *\n   * @private {!Map.<shaka.util.ManifestParserUtils.ContentType,\n                       !shaka.media.StreamingEngine.MediaState_>}\n   */\n  this.mediaStates_ = new Map();\n\n  /**\n   * Set to true once one segment of each content type has been buffered.\n   *\n   * @private {boolean}\n   */\n  this.startupComplete_ = false;\n\n  /**\n   * Used for delay and backoff of failure callbacks, so that apps do not retry\n   * instantly.\n   *\n   * @private {shaka.net.Backoff}\n   */\n  this.failureCallbackBackoff_ = null;\n\n  /**\n   * Set to true on fatal error.  Interrupts fetchAndAppend_().\n   *\n   * @private {boolean}\n   */\n  this.fatalError_ = false;\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /**\n   * Set to true when a request to unload text stream comes in. This is used\n   * since loading new text stream is async, the request of unloading text\n   * stream might come in before setting up new text stream is finished.\n   * @private {boolean}\n   */\n  this.unloadingTextStream_ = false;\n\n  /** @private {number} */\n  this.textStreamSequenceId_ = 0;\n};\n\n\n/**\n * @typedef {{\n *   variant: (?shaka.extern.Variant|undefined),\n *   text: ?shaka.extern.Stream\n * }}\n *\n * @property {(?shaka.extern.Variant|undefined)} variant\n *   The chosen variant.  May be omitted for text re-init.\n * @property {?shaka.extern.Stream} text\n *   The chosen text stream.\n */\nshaka.media.StreamingEngine.ChosenStreams;\n\n\n/**\n * @typedef {{\n *   getPresentationTime: function():number,\n *   getBandwidthEstimate: function():number,\n *   mediaSourceEngine: !shaka.media.MediaSourceEngine,\n *   netEngine: shaka.net.NetworkingEngine,\n *   onChooseStreams: function(!shaka.extern.Period):\n *                        shaka.media.StreamingEngine.ChosenStreams,\n *   onCanSwitch: function(),\n *   onError: function(!shaka.util.Error),\n *   onEvent: function(!Event),\n *   onManifestUpdate: function(),\n *   onSegmentAppended: function(),\n *   onInitialStreamsSetup: (function()|undefined),\n *   onStartupComplete: (function()|undefined)\n * }}\n *\n * @property {function():number} getPresentationTime\n *   Get the position in the presentation (in seconds) of the content that the\n *   viewer is seeing on screen right now.\n * @property {function():number} getBandwidthEstimate\n *   Get the estimated bandwidth in bits per second.\n * @property {!shaka.media.MediaSourceEngine} mediaSourceEngine\n *   The MediaSourceEngine. The caller retains ownership.\n * @property {shaka.net.NetworkingEngine} netEngine\n *   The NetworkingEngine instance to use. The caller retains ownership.\n * @property {function(!shaka.extern.Period):\n *                shaka.media.StreamingEngine.ChosenStreams} onChooseStreams\n *   Called by StreamingEngine when the given Period needs to be buffered.\n *   StreamingEngine will switch to the variant and text stream returned from\n *   this function.\n *   The owner cannot call switch() directly until the StreamingEngine calls\n *   onCanSwitch().\n * @property {function()} onCanSwitch\n *   Called by StreamingEngine when the Period is set up and switching is\n *   permitted.\n * @property {function(!shaka.util.Error)} onError\n *   Called when an error occurs. If the error is recoverable (see\n *   {@link shaka.util.Error}) then the caller may invoke either\n *   StreamingEngine.switch*() or StreamingEngine.seeked() to attempt recovery.\n * @property {function(!Event)} onEvent\n *   Called when an event occurs that should be sent to the app.\n * @property {function()} onManifestUpdate\n *   Called when an embedded 'emsg' box should trigger a manifest update.\n * @property {function()} onSegmentAppended\n *   Called after a segment is successfully appended to a MediaSource.\n * @property {(function()|undefined)} onInitialStreamsSetup\n *   Optional callback which is called when the initial set of Streams have been\n *   setup. Intended to be used by tests.\n * @property {(function()|undefined)} onStartupComplete\n *   Optional callback which is called when startup has completed. Intended to\n *   be used by tests.\n */\nshaka.media.StreamingEngine.PlayerInterface;\n\n\n/**\n * @typedef {{\n *   type: shaka.util.ManifestParserUtils.ContentType,\n *   stream: shaka.extern.Stream,\n *   lastStream: ?shaka.extern.Stream,\n *   lastSegmentReference: shaka.media.SegmentReference,\n *   restoreStreamAfterTrickPlay: ?shaka.extern.Stream,\n *   needInitSegment: boolean,\n *   needPeriodIndex: number,\n *   endOfStream: boolean,\n *   performingUpdate: boolean,\n *   updateTimer: shaka.util.DelayedTick,\n *   waitingToClearBuffer: boolean,\n *   waitingToFlushBuffer: boolean,\n *   clearBufferSafeMargin: number,\n *   clearingBuffer: boolean,\n *   recovering: boolean,\n *   hasError: boolean,\n *   resumeAt: number,\n *   operation: shaka.net.NetworkingEngine.PendingRequest\n * }}\n *\n * @description\n * Contains the state of a logical stream, i.e., a sequence of segmented data\n * for a particular content type. At any given time there is a Stream object\n * associated with the state of the logical stream.\n *\n * @property {shaka.util.ManifestParserUtils.ContentType} type\n *   The stream's content type, e.g., 'audio', 'video', or 'text'.\n * @property {shaka.extern.Stream} stream\n *   The current Stream.\n * @property {?shaka.extern.Stream} lastStream\n *   The Stream of the last segment that was appended.\n * @property {shaka.media.SegmentReference} lastSegmentReference\n *   The SegmentReference of the last segment that was appended.\n * @property {?shaka.extern.Stream} restoreStreamAfterTrickPlay\n *   The Stream to restore after trick play mode is turned off.\n * @property {boolean} needInitSegment\n *   True indicates that |stream|'s init segment must be inserted before the\n *   next media segment is appended.\n * @property {boolean} endOfStream\n *   True indicates that the end of the buffer has hit the end of the\n *   presentation.\n * @property {number} needPeriodIndex\n *   The index of the Period which needs to be buffered.\n * @property {boolean} performingUpdate\n *   True indicates that an update is in progress.\n * @property {shaka.util.DelayedTick} updateTimer\n *   A timer used to update the media state.\n * @property {boolean} waitingToClearBuffer\n *   True indicates that the buffer must be cleared after the current update\n *   finishes.\n * @property {boolean} waitingToFlushBuffer\n *   True indicates that the buffer must be flushed after it is cleared.\n * @property {number} clearBufferSafeMargin\n *   The amount of buffer to retain when clearing the buffer after the update.\n * @property {boolean} clearingBuffer\n *   True indicates that the buffer is being cleared.\n * @property {boolean} recovering\n *   True indicates that the last segment was not appended because it could not\n *   fit in the buffer.\n * @property {boolean} hasError\n *   True indicates that the stream has encountered an error and has stopped\n *   updating.\n * @property {number} resumeAt\n *   An override for the time to start performing updates at.  If the playhead\n *   is behind this time, update_() will still start fetching segments from\n *   this time.  If the playhead is ahead of the time, this field is ignored.\n * @property {shaka.net.NetworkingEngine.PendingRequest} operation\n *   Operation with the number of bytes to be downloaded.\n */\nshaka.media.StreamingEngine.MediaState_;\n\n\n/**\n * The fudge factor for appendWindowStart.  By adjusting the window backward, we\n * avoid rounding errors that could cause us to remove the keyframe at the start\n * of the Period.\n *\n * NOTE: This was increased as part of the solution to\n * https://github.com/google/shaka-player/issues/1281\n *\n * @const {number}\n * @private\n */\nshaka.media.StreamingEngine.APPEND_WINDOW_START_FUDGE_ = 0.1;\n\n\n/**\n * The fudge factor for appendWindowEnd.  By adjusting the window backward, we\n * avoid rounding errors that could cause us to remove the last few samples of\n * the Period.  This rounding error could then create an artificial gap and a\n * stutter when the gap-jumping logic takes over.\n *\n * https://github.com/google/shaka-player/issues/1597\n *\n * @const {number}\n * @private\n */\nshaka.media.StreamingEngine.APPEND_WINDOW_END_FUDGE_ = 0.01;\n\n\n/**\n * The maximum number of segments by which a stream can get ahead of other\n * streams.\n *\n * Introduced to keep StreamingEngine from letting one media type get too far\n * ahead of another.  For example, audio segments are typically much smaller\n * than video segments, so in the time it takes to fetch one video segment, we\n * could fetch many audio segments.  This doesn't help with buffering, though,\n * since the intersection of the two buffered ranges is what counts.\n *\n * @const {number}\n * @private\n */\nshaka.media.StreamingEngine.MAX_RUN_AHEAD_SEGMENTS_ = 1;\n\n\n/** @override */\nshaka.media.StreamingEngine.prototype.destroy = function() {\n  for (const state of this.mediaStates_.values()) {\n    this.cancelUpdate_(state);\n  }\n\n  this.mediaStates_.clear();\n  this.canSwitchStream_.clear();\n\n  this.playerInterface_ = null;\n  this.manifest_ = null;\n  this.setupPeriodPromise_ = null;\n  this.canSwitchPeriod_ = null;\n  this.config_ = null;\n\n  this.destroyed_ = true;\n\n  return Promise.resolve();\n};\n\n\n/**\n * Called by the Player to provide an updated configuration any time it changes.\n * Must be called at least once before init().\n *\n * @param {shaka.extern.StreamingConfiguration} config\n */\nshaka.media.StreamingEngine.prototype.configure = function(config) {\n  this.config_ = config;\n\n  // Create separate parameters for backoff during streaming failure.\n\n  /** @type {shaka.extern.RetryParameters} */\n  let failureRetryParams = {\n    // The term \"attempts\" includes the initial attempt, plus all retries.\n    // In order to see a delay, there would have to be at least 2 attempts.\n    maxAttempts: Math.max(config.retryParameters.maxAttempts, 2),\n    baseDelay: config.retryParameters.baseDelay,\n    backoffFactor: config.retryParameters.backoffFactor,\n    fuzzFactor: config.retryParameters.fuzzFactor,\n    timeout: 0,  // irrelevant\n  };\n\n  // We don't want to ever run out of attempts.  The application should be\n  // allowed to retry streaming infinitely if it wishes.\n  let autoReset = true;\n  this.failureCallbackBackoff_ =\n      new shaka.net.Backoff(failureRetryParams, autoReset);\n};\n\n\n/**\n * Initialize and start streaming.\n *\n * By calling this method, streaming engine will choose the initial streams by\n * calling out to |onChooseStreams| followed by |onCanSwitch|. When streaming\n * engine switches periods, it will call |onChooseStreams| followed by\n * |onCanSwitch|.\n *\n * Asking streaming engine to switch streams between |onChooseStreams| and\n * |onChangeSwitch| is not supported.\n *\n * After the StreamingEngine calls onChooseStreams(p) for the first time, it\n * will begin setting up the Streams returned from that function and\n * subsequently switch to them. However, the StreamingEngine will not begin\n * setting up any other Streams until at least one segment from each of the\n * initial set of Streams has been buffered (this reduces startup latency).\n *\n * After the StreamingEngine completes this startup phase it will begin setting\n * up each Period's Streams (while buffering in parrallel).\n *\n * When the StreamingEngine needs to buffer the next Period it will have\n * already set up that Period's Streams. So, when the StreamingEngine calls\n * onChooseStreams(p) after the first time, the StreamingEngine will\n * immediately switch to the Streams returned from that function.\n *\n * @return {!Promise}\n */\nshaka.media.StreamingEngine.prototype.start = async function() {\n  goog.asserts.assert(this.config_,\n      'StreamingEngine configure() must be called before init()!');\n\n  // Determine which Period we must buffer.\n  const presentationTime = this.playerInterface_.getPresentationTime();\n  const needPeriodIndex = this.findPeriodForTime_(presentationTime);\n\n  // Get the initial set of Streams.\n  const initialStreams = this.playerInterface_.onChooseStreams(\n      this.manifest_.periods[needPeriodIndex]);\n  if (!initialStreams.variant && !initialStreams.text) {\n    shaka.log.error('init: no Streams chosen');\n    return new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STREAMING,\n        shaka.util.Error.Code.INVALID_STREAMS_CHOSEN);\n  }\n\n  // Setup the initial set of Streams and then begin each update cycle. After\n  // startup completes onUpdate_() will set up the remaining Periods.\n  await this.initStreams_(\n      initialStreams.variant ? initialStreams.variant.audio : null,\n      initialStreams.variant ? initialStreams.variant.video : null,\n      initialStreams.text,\n      presentationTime);\n\n  if (this.destroyed_) {\n    return;\n  }\n\n  shaka.log.debug('init: completed initial Stream setup');\n\n  // Subtlety: onInitialStreamsSetup() may call switch() or seeked(), so we\n  // must schedule an update beforehand so |updateTimer| is set.\n  if (this.playerInterface_ && this.playerInterface_.onInitialStreamsSetup) {\n    shaka.log.v1('init: calling onInitialStreamsSetup()...');\n    this.playerInterface_.onInitialStreamsSetup();\n  }\n};\n\n\n/**\n * Gets the Period in which we are currently buffering.  This might be different\n * from the Period which contains the Playhead.\n * @return {?shaka.extern.Period}\n */\nshaka.media.StreamingEngine.prototype.getBufferingPeriod = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const video = this.mediaStates_.get(ContentType.VIDEO);\n  if (video) { return this.manifest_.periods[video.needPeriodIndex]; }\n\n  const audio = this.mediaStates_.get(ContentType.AUDIO);\n  if (audio) { return this.manifest_.periods[audio.needPeriodIndex]; }\n\n  return null;\n};\n\n\n/**\n * Get the audio stream which we are currently buffering.  Returns null if there\n * is no audio streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getBufferingAudio = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.AUDIO);\n};\n\n\n/**\n * Get the video stream which we are currently buffering.  Returns null if there\n * is no video streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getBufferingVideo = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.VIDEO);\n};\n\n\n/**\n * Get the text stream which we are currently buffering.  Returns null if there\n * is no text streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getBufferingText = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.TEXT);\n};\n\n\n/**\n * Get the stream of the given type which we are currently buffering.  Returns\n * null if there is no stream for the given type.\n * @param {shaka.util.ManifestParserUtils.ContentType} type\n * @return {?shaka.extern.Stream}\n * @private\n*/\nshaka.media.StreamingEngine.prototype.getStream_ = function(type) {\n  const state = this.mediaStates_.get(type);\n\n  if (state) {\n    // Don't tell the caller about trick play streams.  If we're in trick\n    // play, return the stream we will go back to after we exit trick play.\n    return state.restoreStreamAfterTrickPlay || state.stream;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Notifies StreamingEngine that a new text stream was added to the manifest.\n * This initializes the given stream. This returns a Promise that resolves when\n * the stream has been set up, and a media state has been created.\n *\n * @param {shaka.extern.Stream} stream\n * @return {!Promise}\n */\nshaka.media.StreamingEngine.prototype.loadNewTextStream = async function(\n    stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Clear MediaSource's buffered text, so that the new text stream will\n  // properly replace the old buffered text.\n  await this.playerInterface_.mediaSourceEngine.clear(ContentType.TEXT);\n\n  // Since setupStreams_() is async, if the user hides/shows captions quickly,\n  // there would be a race condition that a new text media state is created\n  // but the old media state is not yet deleted.\n  // The Sequence Id is to avoid that race condition.\n  this.textStreamSequenceId_++;\n  this.unloadingTextStream_ = false;\n  let currentSequenceId = this.textStreamSequenceId_;\n\n  let mediaSourceEngine = this.playerInterface_.mediaSourceEngine;\n\n  const streamMap = new Map();\n  const streamSet = new Set();\n\n  streamMap.set(ContentType.TEXT, stream);\n  streamSet.add(stream);\n\n  await mediaSourceEngine.init(streamMap, /** forceTansmuxTS */ false);\n  if (this.destroyed_) { return; }\n\n  await this.setupStreams_(streamSet);\n  if (this.destroyed_) { return; }\n\n  const showText = this.playerInterface_\n      .mediaSourceEngine\n      .getTextDisplayer()\n      .isTextVisible();\n\n  const streamText = showText || this.config_.alwaysStreamText;\n\n  if ((this.textStreamSequenceId_ == currentSequenceId) &&\n      !this.mediaStates_.has(ContentType.TEXT) &&\n      !this.unloadingTextStream_ && streamText) {\n    const presentationTime = this.playerInterface_.getPresentationTime();\n    const needPeriodIndex = this.findPeriodForTime_(presentationTime);\n\n    const state = this.createMediaState_(stream,\n                                         needPeriodIndex,\n                                         /* resumeAt= */ 0);\n\n    this.mediaStates_.set(ContentType.TEXT, state);\n    this.scheduleUpdate_(state, 0);\n  }\n};\n\n\n/**\n * Stop fetching text stream when the user chooses to hide the captions.\n */\nshaka.media.StreamingEngine.prototype.unloadTextStream = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  this.unloadingTextStream_ = true;\n\n  const state = this.mediaStates_.get(ContentType.TEXT);\n  if (state) {\n    this.cancelUpdate_(state);\n    this.mediaStates_.delete(ContentType.TEXT);\n  }\n};\n\n\n/**\n * Set trick play on or off.\n * If trick play is on, related trick play streams will be used when possible.\n * @param {boolean} on\n */\nshaka.media.StreamingEngine.prototype.setTrickPlay = function(on) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const mediaState = this.mediaStates_.get(ContentType.VIDEO);\n  if (!mediaState) return;\n\n  let stream = mediaState.stream;\n  if (!stream) return;\n\n  shaka.log.debug('setTrickPlay', on);\n  if (on) {\n    let trickModeVideo = stream.trickModeVideo;\n    if (!trickModeVideo) return;  // Can't engage trick play.\n\n    let normalVideo = mediaState.restoreStreamAfterTrickPlay;\n    if (normalVideo) return;  // Already in trick play.\n\n    shaka.log.debug('Engaging trick mode stream', trickModeVideo);\n    this.switchInternal_(trickModeVideo, /* clearBuffer= */ false,\n        /* safeMargin= */ 0, /* force= */ false);\n    mediaState.restoreStreamAfterTrickPlay = stream;\n  } else {\n    let normalVideo = mediaState.restoreStreamAfterTrickPlay;\n    if (!normalVideo) return;\n\n    shaka.log.debug('Restoring non-trick-mode stream', normalVideo);\n    mediaState.restoreStreamAfterTrickPlay = null;\n    this.switchInternal_(normalVideo, /* clearBuffer= */ true,\n        /* safeMargin= */ 0, /* force= */ false);\n  }\n};\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @param {boolean} clearBuffer\n * @param {number} safeMargin\n */\nshaka.media.StreamingEngine.prototype.switchVariant =\n    function(variant, clearBuffer, safeMargin) {\n  if (variant.video) {\n    this.switchInternal_(variant.video, /* clearBuffer= */ clearBuffer,\n        /* safeMargin= */ safeMargin, /* force= */ false);\n  }\n  if (variant.audio) {\n    this.switchInternal_(variant.audio, /* clearBuffer= */ clearBuffer,\n        /* safeMargin= */ safeMargin, /* force= */ false);\n  }\n};\n\n\n/**\n * @param {shaka.extern.Stream} textStream\n */\nshaka.media.StreamingEngine.prototype.switchTextStream = function(textStream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  goog.asserts.assert(textStream && textStream.type == ContentType.TEXT,\n      'Wrong stream type passed to switchTextStream!');\n  this.switchInternal_(textStream, /* clearBuffer= */ true, /* safeMargin= */ 0,\n      /* force= */ false);\n};\n\n\n/** Reload the current text stream. */\nshaka.media.StreamingEngine.prototype.reloadTextStream = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const mediaState = this.mediaStates_.get(ContentType.TEXT);\n  if (mediaState) { // Don't reload if there's no text to begin with.\n    this.switchInternal_(mediaState.stream, /* clearBuffer= */ true,\n        /* safeMargin= */ 0, /* force= */ true);\n  }\n};\n\n\n/**\n * Switches to the given Stream. |stream| may be from any Variant or any Period.\n *\n * @param {shaka.extern.Stream} stream\n * @param {boolean} clearBuffer\n * @param {number} safeMargin\n * @param {boolean} force\n *   If true, reload the text stream even if it did not change.\n * @private\n */\nshaka.media.StreamingEngine.prototype.switchInternal_ = function(\n    stream, clearBuffer, safeMargin, force) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const type = /** @type {!ContentType} */(stream.type);\n  const mediaState = this.mediaStates_.get(type);\n\n  if (!mediaState && stream.type == ContentType.TEXT &&\n      this.config_.ignoreTextStreamFailures) {\n    this.loadNewTextStream(stream);\n    return;\n  }\n  goog.asserts.assert(mediaState, 'switch: expected mediaState to exist');\n  if (!mediaState) return;\n\n  // If we are selecting a stream from a different Period, then we need to\n  // handle a Period transition. Simply ignore the given stream, assuming that\n  // Player will select the same track in onChooseStreams.\n  let periodIndex = this.findPeriodContainingStream_(stream);\n  const mediaStates = Array.from(this.mediaStates_.values());\n  const needSamePeriod = mediaStates.every((ms) => {\n    return ms.needPeriodIndex == mediaState.needPeriodIndex;\n  });\n  if (clearBuffer && periodIndex != mediaState.needPeriodIndex &&\n      needSamePeriod) {\n    shaka.log.debug('switch: switching to stream in another Period; clearing ' +\n                    'buffer and changing Periods');\n    // handlePeriodTransition_ will be called on the next update because the\n    // current Period won't match the playhead Period.\n    this.mediaStates_.forEach((mediaState) => {\n      this.forceClearBuffer_(mediaState);\n    });\n    return;\n  }\n\n  if (mediaState.restoreStreamAfterTrickPlay) {\n    shaka.log.debug('switch during trick play mode', stream);\n\n    // Already in trick play mode, so stick with trick mode tracks if possible.\n    if (stream.trickModeVideo) {\n      // Use the trick mode stream, but revert to the new selection later.\n      mediaState.restoreStreamAfterTrickPlay = stream;\n      stream = stream.trickModeVideo;\n      shaka.log.debug('switch found trick play stream', stream);\n    } else {\n      // There is no special trick mode video for this stream!\n      mediaState.restoreStreamAfterTrickPlay = null;\n      shaka.log.debug('switch found no special trick play stream');\n    }\n  }\n\n  // Ensure the Period is ready.\n  let canSwitchRecord = this.canSwitchPeriod_[periodIndex];\n  goog.asserts.assert(\n      canSwitchRecord && canSwitchRecord.resolved,\n      'switch: expected Period ' + periodIndex + ' to be ready');\n  if (!canSwitchRecord || !canSwitchRecord.resolved) return;\n\n  // Sanity check. If the Period is ready then the Stream should be ready too.\n  canSwitchRecord = this.canSwitchStream_.get(stream.id);\n  goog.asserts.assert(canSwitchRecord && canSwitchRecord.resolved,\n                      'switch: expected Stream ' + stream.id + ' to be ready');\n  if (!canSwitchRecord || !canSwitchRecord.resolved) return;\n\n  if (mediaState.stream == stream && !force) {\n    const streamTag = shaka.media.StreamingEngine.logPrefix_(mediaState);\n    shaka.log.debug('switch: Stream ' + streamTag + ' already active');\n    return;\n  }\n\n  if (stream.type == ContentType.TEXT) {\n    // Mime types are allowed to change for text streams.\n    // Reinitialize the text parser, but only if we are going to fetch the init\n    // segment again.\n    let fullMimeType = shaka.util.MimeUtils.getFullType(\n        stream.mimeType, stream.codecs);\n    this.playerInterface_.mediaSourceEngine.reinitText(fullMimeType);\n  }\n\n  mediaState.stream = stream;\n  mediaState.needInitSegment = true;\n\n  let streamTag = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.debug('switch: switching to Stream ' + streamTag);\n\n  if (this.shouldAbortCurrentRequest_(mediaState, periodIndex)) {\n    shaka.log.info('Aborting current segment request to switch.');\n    mediaState.operation.abort();\n  }\n\n  if (clearBuffer) {\n    if (mediaState.clearingBuffer) {\n      // We are already going to clear the buffer, but make sure it is also\n      // flushed.\n      mediaState.waitingToFlushBuffer = true;\n    } else if (mediaState.performingUpdate) {\n      // We are performing an update, so we have to wait until it's finished.\n      // onUpdate_() will call clearBuffer_() when the update has finished.\n      // We need to save the safe margin because its value will be needed when\n      // clearing the buffer after the update.\n      mediaState.waitingToClearBuffer = true;\n      mediaState.clearBufferSafeMargin = safeMargin;\n      mediaState.waitingToFlushBuffer = true;\n    } else {\n      // Cancel the update timer, if any.\n      this.cancelUpdate_(mediaState);\n      // Clear right away.\n      this.clearBuffer_(mediaState, /* flush */ true, safeMargin)\n          .catch((error) => {\n            if (this.playerInterface_) {\n              this.playerInterface_.onError(\n                  /** @type {!shaka.util.Error} */ (error));\n            }\n          });\n    }\n  }\n};\n\n\n/**\n * Returns whether we should abort the current request.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} periodIndex\n * @return {boolean}\n */\nshaka.media.StreamingEngine.prototype.shouldAbortCurrentRequest_ =\n    function(mediaState, periodIndex) {\n  // If the operation is completed, it will be set to null, and there's no need\n  // to abort the request.\n  if (!mediaState.operation) {\n    return false;\n  }\n\n  const presentationTime = this.playerInterface_.getPresentationTime();\n  const bufferEnd =\n      this.playerInterface_.mediaSourceEngine.bufferEnd(mediaState.type);\n\n  // The next segment to append from the current stream.  This doesn't account\n  // for a pending network request and will likely be different from that since\n  // we just switched.\n  const newSegment = this.getSegmentReferenceNeeded_(\n      mediaState, presentationTime, bufferEnd, periodIndex);\n  let newSegmentSize = newSegment ? newSegment.getSize() : null;\n  if (newSegmentSize == null) {\n    return false;\n  }\n\n  // When switching, we'll need to download the init segment.\n  const init = mediaState.stream.initSegmentReference;\n  if (init) {\n    newSegmentSize += init.getSize() || 0;\n  }\n\n  const bandwidthEstimate = this.playerInterface_.getBandwidthEstimate();\n\n  // The estimate is in bits per second, and the size is in bytes.  The time\n  // remaining is in seconds after this calculation.\n  const timeToFetchNewSegment = (newSegmentSize * 8) / bandwidthEstimate;\n\n  // If the new segment can be finished in time without risking a buffer\n  // underflow, we should abort the old one and switch.\n  const bufferedAhead = bufferEnd - presentationTime;\n  const safetyBuffer = Math.max(\n      this.manifest_.minBufferTime || 0,\n      this.config_.rebufferingGoal);\n  const safeBufferedAhead = bufferedAhead - safetyBuffer;\n  if (timeToFetchNewSegment < safeBufferedAhead) {\n    return true;\n  }\n\n  // If the thing we want to switch to will be done more quickly than what\n  // we've got in progress, we should abort the old one and switch.\n  const bytesRemaining = mediaState.operation.getBytesRemaining();\n  if (bytesRemaining > newSegmentSize) {\n    return true;\n  }\n\n  // Otherwise, complete the operation in progress.\n  return false;\n};\n\n\n/**\n * Notifies the StreamingEngine that the playhead has moved to a valid time\n * within the presentation timeline.\n */\nshaka.media.StreamingEngine.prototype.seeked = function() {\n  const Iterables = shaka.util.Iterables;\n  const presentationTime = this.playerInterface_.getPresentationTime();\n  const smallGapLimit = this.config_.smallGapLimit;\n  const checkBuffered = (type) => {\n    return this.playerInterface_.mediaSourceEngine.isBuffered(\n        type, presentationTime, smallGapLimit);\n  };\n\n  let streamCleared = false;\n  const atPeriodIndex = this.findPeriodForTime_(presentationTime);\n  const allSeekingWithinSamePeriod = Iterables.every(\n      this.mediaStates_.values(),\n      (state) => state.needPeriodIndex == atPeriodIndex);\n  if (allSeekingWithinSamePeriod) {\n    // If seeking to the same period you were in before, clear buffers\n    // individually as desired.\n    for (const type of this.mediaStates_.keys()) {\n      if (!checkBuffered(type)) {\n        // This stream exists, and isn't buffered.\n        this.forceClearBuffer_(this.mediaStates_.get(type));\n        streamCleared = true;\n      }\n    }\n  } else {\n    // Only treat this as a buffered seek if every media state has a buffer.\n    // For example, if we have buffered text but not video, we should still\n    // clear every buffer so all media states need the same Period.\n    const isAllBuffered = Iterables.every(\n        this.mediaStates_.keys(), checkBuffered);\n    if (!isAllBuffered) {\n      // This was an unbuffered seek for at least one stream, so clear all\n      // buffers.\n      // Don't clear only some of the buffers because we can become stalled\n      // since the media states are waiting for different Periods.\n      shaka.log.debug('(all): seeked: unbuffered seek: clearing all buffers');\n      this.mediaStates_.forEach((mediaState) => {\n        this.forceClearBuffer_(mediaState);\n      });\n      streamCleared = true;\n    }\n  }\n\n  if (!streamCleared) {\n    shaka.log.debug(\n        '(all): seeked: buffered seek: presentationTime=' + presentationTime);\n  }\n};\n\n\n/**\n * Clear the buffer for a given stream.  Unlike clearBuffer_, this will handle\n * cases where a MediaState is performing an update.  After this runs, every\n * MediaState will have a pending update.\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @private\n */\nshaka.media.StreamingEngine.prototype.forceClearBuffer_ = function(\n    mediaState) {\n  const logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  if (mediaState.clearingBuffer) {\n    // We're already clearing the buffer, so we don't need to clear the\n    // buffer again.\n    shaka.log.debug(logPrefix, 'clear: already clearing the buffer');\n    return;\n  }\n\n  if (mediaState.waitingToClearBuffer) {\n    // May not be performing an update, but an update will still happen.\n    // See: https://github.com/google/shaka-player/issues/334\n    shaka.log.debug(logPrefix, 'clear: already waiting');\n    return;\n  }\n\n  if (mediaState.performingUpdate) {\n    // We are performing an update, so we have to wait until it's finished.\n    // onUpdate_() will call clearBuffer_() when the update has finished.\n    shaka.log.debug(logPrefix, 'clear: currently updating');\n    mediaState.waitingToClearBuffer = true;\n    // We can set the offset to zero to remember that this was a call to\n    // clearAllBuffers.\n    mediaState.clearBufferSafeMargin = 0;\n    return;\n  }\n\n  const type = mediaState.type;\n  if (this.playerInterface_.mediaSourceEngine.bufferStart(type) == null) {\n    // Nothing buffered.\n    shaka.log.debug(logPrefix, 'clear: nothing buffered');\n    if (mediaState.updateTimer == null) {\n      // Note: an update cycle stops when we buffer to the end of the\n      // presentation or Period, or when we raise an error.\n      this.scheduleUpdate_(mediaState, 0);\n    }\n    return;\n  }\n\n  // An update may be scheduled, but we can just cancel it and clear the\n  // buffer right away. Note: clearBuffer_() will schedule the next update.\n  shaka.log.debug(logPrefix, 'clear: handling right now');\n  this.cancelUpdate_(mediaState);\n  this.clearBuffer_(mediaState, /* flush */ false, 0).catch((error) => {\n    if (this.playerInterface_) {\n      this.playerInterface_.onError(/** @type {!shaka.util.Error} */ (error));\n    }\n  });\n};\n\n\n/**\n * Initializes the given streams and media states if required.  This will\n * schedule updates for the given types.\n *\n * @param {?shaka.extern.Stream} audio\n * @param {?shaka.extern.Stream} video\n * @param {?shaka.extern.Stream} text\n * @param {number} resumeAt\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.initStreams_ = async function(\n    audio, video, text, resumeAt) {\n  goog.asserts.assert(this.config_,\n      'StreamingEngine configure() must be called before init()!');\n\n  // Determine which Period we must buffer.\n  const presentationTime = this.playerInterface_.getPresentationTime();\n  const needPeriodIndex = this.findPeriodForTime_(presentationTime);\n\n  // Init/re-init MediaSourceEngine. Note that a re-init is only valid for text.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  /**\n   * @type {!Map.<shaka.util.ManifestParserUtils.ContentType,\n   *              shaka.extern.Stream>}\n   */\n  const streamsByType = new Map();\n  /** @type {!Set.<shaka.extern.Stream>} */\n  const streams = new Set();\n\n  if (audio) {\n    streamsByType.set(ContentType.AUDIO, audio);\n    streams.add(audio);\n  }\n\n  if (video) {\n    streamsByType.set(ContentType.VIDEO, video);\n    streams.add(video);\n  }\n\n  if (text) {\n    streamsByType.set(ContentType.TEXT, text);\n    streams.add(text);\n  }\n\n  // Init MediaSourceEngine.\n  let mediaSourceEngine = this.playerInterface_.mediaSourceEngine;\n  let forceTransmuxTS = this.config_.forceTransmuxTS;\n\n  await mediaSourceEngine.init(streamsByType, forceTransmuxTS);\n  if (this.destroyed_) { return; }\n\n  this.setDuration_();\n\n  // Setup the initial set of Streams and then begin each update cycle. After\n  // startup completes onUpdate_() will set up the remaining Periods.\n  await this.setupStreams_(streams);\n  if (this.destroyed_) { return; }\n\n  streamsByType.forEach((stream, type) => {\n    if (!this.mediaStates_.has(type)) {\n      const state = this.createMediaState_(stream, needPeriodIndex, resumeAt);\n      this.mediaStates_.set(type, state);\n      this.scheduleUpdate_(state, 0);\n    }\n  });\n};\n\n\n/**\n * Creates a media state.\n *\n * @param {shaka.extern.Stream} stream\n * @param {number} needPeriodIndex\n * @param {number} resumeAt\n * @return {shaka.media.StreamingEngine.MediaState_}\n * @private\n */\nshaka.media.StreamingEngine.prototype.createMediaState_ = function(\n    stream, needPeriodIndex, resumeAt) {\n  return /** @type {shaka.media.StreamingEngine.MediaState_} */ ({\n    stream: stream,\n    type: stream.type,\n    lastStream: null,\n    lastSegmentReference: null,\n    restoreStreamAfterTrickPlay: null,\n    needInitSegment: true,\n    needPeriodIndex: needPeriodIndex,\n    endOfStream: false,\n    performingUpdate: false,\n    updateTimer: null,\n    waitingToClearBuffer: false,\n    clearBufferSafeMargin: 0,\n    waitingToFlushBuffer: false,\n    clearingBuffer: false,\n    recovering: false,\n    hasError: false,\n    resumeAt: resumeAt || 0,\n    operation: null,\n  });\n};\n\n\n/**\n * Sets up the given Period if necessary. Calls onError() if an error occurs.\n *\n * @param {number} periodIndex The Period's index.\n * @return {!Promise} A Promise which resolves when the given Period is set up.\n * @private\n */\nshaka.media.StreamingEngine.prototype.setupPeriod_ = function(periodIndex) {\n  let canSwitchRecord = this.canSwitchPeriod_[periodIndex];\n  if (canSwitchRecord) {\n    shaka.log.debug(\n        '(all) Period ' + periodIndex + ' is being or has been set up');\n    goog.asserts.assert(canSwitchRecord.promise, 'promise must not be null');\n    return canSwitchRecord.promise;\n  }\n\n  shaka.log.debug('(all) setting up Period ' + periodIndex);\n  canSwitchRecord = {\n    promise: new shaka.util.PublicPromise(),\n    resolved: false,\n  };\n  this.canSwitchPeriod_[periodIndex] = canSwitchRecord;\n\n  const streams = new Set();\n\n  // Add all video, trick video, and audio streams.\n  for (const variant of this.manifest_.periods[periodIndex].variants) {\n    if (variant.video) {\n      streams.add(variant.video);\n    }\n    if (variant.video && variant.video.trickModeVideo) {\n      streams.add(variant.video.trickModeVideo);\n    }\n    if (variant.audio) {\n      streams.add(variant.audio);\n    }\n  }\n\n  // Add text streams\n  for (const stream of this.manifest_.periods[periodIndex].textStreams) {\n    streams.add(stream);\n  }\n\n  // Serialize Period set up.\n  this.setupPeriodPromise_ = this.setupPeriodPromise_.then(function() {\n    if (this.destroyed_) return;\n    return this.setupStreams_(streams);\n  }.bind(this)).then(function() {\n    if (this.destroyed_) return;\n    this.canSwitchPeriod_[periodIndex].promise.resolve();\n    this.canSwitchPeriod_[periodIndex].resolved = true;\n    shaka.log.v1('(all) setup Period ' + periodIndex);\n  }.bind(this)).catch(function(error) {\n    if (this.destroyed_) return;\n    this.canSwitchPeriod_[periodIndex].promise.catch(() => {});\n    this.canSwitchPeriod_[periodIndex].promise.reject();\n    delete this.canSwitchPeriod_[periodIndex];\n    shaka.log.warning('(all) failed to setup Period ' + periodIndex);\n    this.playerInterface_.onError(error);\n    // Don't stop other Periods from being set up.\n  }.bind(this));\n\n  return canSwitchRecord.promise;\n};\n\n\n/**\n * Sets up the given Streams if necessary. Does NOT call onError() if an\n * error occurs.\n *\n * @param {!Set.<!shaka.extern.Stream>} streams\n *    Use a set instead of list because duplicate ids will cause the player to\n *    hang.\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.setupStreams_ = async function(streams) {\n  // Parallelize Stream set up.\n  const parallelWork = [];\n\n  for (const stream of streams) {\n    const canSwitchRecord = this.canSwitchStream_.get(stream.id);\n\n    if (canSwitchRecord) {\n      shaka.log.debug(\n          '(all) Stream ' + stream.id + ' is being or has been set up');\n      parallelWork.push(canSwitchRecord.promise);\n    } else {\n      shaka.log.v1('(all) setting up Stream ' + stream.id);\n      this.canSwitchStream_.set(stream.id, {\n        promise: new shaka.util.PublicPromise(),\n        resolved: false,\n      });\n      parallelWork.push(stream.createSegmentIndex());\n    }\n  }\n\n  try {\n    await Promise.all(parallelWork);\n    if (this.destroyed_) return;\n  } catch (error) {\n    if (this.destroyed_) return;\n\n    for (const stream of streams) {\n      this.canSwitchStream_.get(stream.id).promise.catch(() => {});\n      this.canSwitchStream_.get(stream.id).promise.reject();\n      this.canSwitchStream_.delete(stream.id);\n    }\n\n    throw error;\n  }\n\n  for (const stream of streams) {\n    const canSwitchRecord = this.canSwitchStream_.get(stream.id);\n    if (!canSwitchRecord.resolved) {\n      canSwitchRecord.promise.resolve();\n      canSwitchRecord.resolved = true;\n      shaka.log.v1('(all) setup Stream ' + stream.id);\n    }\n  }\n};\n\n\n/**\n * Sets the MediaSource's duration.\n * @private\n */\nshaka.media.StreamingEngine.prototype.setDuration_ = function() {\n  let duration = this.manifest_.presentationTimeline.getDuration();\n  if (duration < Infinity) {\n    this.playerInterface_.mediaSourceEngine.setDuration(duration);\n  } else {\n    // Not all platforms support infinite durations, so set a finite duration\n    // so we can append segments and so the user agent can seek.\n    this.playerInterface_.mediaSourceEngine.setDuration(Math.pow(2, 32));\n  }\n};\n\n\n/**\n * Called when |mediaState|'s update timer has expired.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @private\n */\nshaka.media.StreamingEngine.prototype.onUpdate_ = function(mediaState) {\n  if (this.destroyed_) return;\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // Sanity check.\n  goog.asserts.assert(\n      !mediaState.performingUpdate && (mediaState.updateTimer != null),\n      logPrefix + ' unexpected call to onUpdate_()');\n  if (mediaState.performingUpdate || (mediaState.updateTimer == null)) return;\n\n  goog.asserts.assert(\n      !mediaState.clearingBuffer,\n      logPrefix + ' onUpdate_() should not be called when clearing the buffer');\n  if (mediaState.clearingBuffer) return;\n\n  mediaState.updateTimer = null;\n\n  // Handle pending buffer clears.\n  if (mediaState.waitingToClearBuffer) {\n    // Note: clearBuffer_() will schedule the next update.\n    shaka.log.debug(logPrefix, 'skipping update and clearing the buffer');\n    this.clearBuffer_(\n        mediaState, mediaState.waitingToFlushBuffer,\n        mediaState.clearBufferSafeMargin);\n    return;\n  }\n\n  // Update the MediaState.\n  try {\n    let delay = this.update_(mediaState);\n    if (delay != null) {\n      this.scheduleUpdate_(mediaState, delay);\n      mediaState.hasError = false;\n    }\n  } catch (error) {\n    this.handleStreamingError_(error);\n    return;\n  }\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n\n  // Check if we've buffered to the end of the Period.\n  this.handlePeriodTransition_(mediaState);\n\n  // Check if we've buffered to the end of the presentation.  We delay adding\n  // the audio and video media states, so it is possible for the text stream\n  // to be the only state and buffer to the end.  So we need to wait until we\n  // have completed startup to determine if we have reached the end.\n  if (this.startupComplete_ &&\n      mediaStates.every(function(ms) { return ms.endOfStream; })) {\n    shaka.log.v1(logPrefix, 'calling endOfStream()...');\n    this.playerInterface_.mediaSourceEngine.endOfStream().then(function() {\n      if (this.destroyed_) {\n        return;\n      }\n\n      // If the media segments don't reach the end, then we need to update the\n      // timeline duration to match the final media duration to avoid buffering\n      // forever at the end.  We should only do this if the duration needs to\n      // shrink.  Growing it by less than 1ms can actually cause buffering on\n      // replay, as in https://github.com/google/shaka-player/issues/979\n      // On some platforms, this can spuriously be 0, so ignore this case.\n      // https://github.com/google/shaka-player/issues/1967,\n      const duration = this.playerInterface_.mediaSourceEngine.getDuration();\n      if (duration != 0 &&\n          duration < this.manifest_.presentationTimeline.getDuration()) {\n        this.manifest_.presentationTimeline.setDuration(duration);\n      }\n    }.bind(this));\n  }\n};\n\n\n/**\n * Updates the given MediaState.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {?number} The number of seconds to wait until updating again or\n *   null if another update does not need to be scheduled.\n * @throws {!shaka.util.Error} if an error occurs.\n * @private\n */\nshaka.media.StreamingEngine.prototype.update_ = function(mediaState) {\n  goog.asserts.assert(this.manifest_, 'manifest_ should not be null');\n  goog.asserts.assert(this.config_, 'config_ should not be null');\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // If it's a text stream and the original id starts with 'CC', it's CEA\n  // closed captions. Do not schedule update for closed captions text\n  // mediastate, since closed captions are embedded in video streams.\n  const isCaptionState = (state) => {\n    return state.type == ContentType.TEXT &&\n        state.stream.mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE;\n  };\n  if (isCaptionState(mediaState)) {\n    this.playerInterface_.mediaSourceEngine.setSelectedClosedCaptionId(\n        mediaState.stream.originalId || '');\n    return null;\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // Compute how far we've buffered ahead of the playhead.\n  const presentationTime = this.playerInterface_.getPresentationTime();\n\n  // Get the next timestamp we need.\n  let timeNeeded = this.getTimeNeeded_(mediaState, presentationTime);\n  shaka.log.v2(logPrefix, 'timeNeeded=' + timeNeeded);\n\n  let currentPeriodIndex = this.findPeriodContainingStream_(mediaState.stream);\n  const needPeriodIndex = this.findPeriodForTime_(timeNeeded);\n\n  // Get the amount of content we have buffered, accounting for drift.  This\n  // is only used to determine if we have meet the buffering goal.  This should\n  // be the same method that PlayheadObserver uses.\n  let bufferedAhead = this.playerInterface_.mediaSourceEngine.bufferedAheadOf(\n      mediaState.type, presentationTime);\n\n  shaka.log.v2(logPrefix,\n               'update_:',\n               'presentationTime=' + presentationTime,\n               'bufferedAhead=' + bufferedAhead);\n\n  let unscaledBufferingGoal = Math.max(\n      this.manifest_.minBufferTime || 0,\n      this.config_.rebufferingGoal,\n      this.config_.bufferingGoal);\n\n  let scaledBufferingGoal = unscaledBufferingGoal * this.bufferingGoalScale_;\n\n  // Check if we've buffered to the end of the presentation.\n  if (timeNeeded >= this.manifest_.presentationTimeline.getDuration()) {\n    // We shouldn't rebuffer if the playhead is close to the end of the\n    // presentation.\n    shaka.log.debug(logPrefix, 'buffered to end of presentation');\n    mediaState.endOfStream = true;\n\n    if (mediaState.type == ContentType.VIDEO) {\n      // Since the text stream of CEA closed captions doesn't have update timer,\n      // we have to set the text endOfStream based on the video stream's\n      // endOfStream state.\n      const textState = this.mediaStates_.get(ContentType.TEXT);\n      if (textState && textState.stream.mimeType ==\n            shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n        textState.endOfStream = true;\n      }\n    }\n    return null;\n  }\n  mediaState.endOfStream = false;\n\n  // Check if we've buffered to the end of the Period. This should be done\n  // before checking segment availability because the new Period may become\n  // available once it's switched to. Note that we don't use the non-existence\n  // of SegmentReferences as an indicator to determine Period boundaries\n  // because a SegmentIndex can provide SegmentReferences outside its Period.\n  mediaState.needPeriodIndex = needPeriodIndex;\n  if (needPeriodIndex != currentPeriodIndex) {\n    shaka.log.debug(logPrefix,\n                    'need Period ' + needPeriodIndex,\n                    'presentationTime=' + presentationTime,\n                    'timeNeeded=' + timeNeeded,\n                    'currentPeriodIndex=' + currentPeriodIndex);\n    return null;\n  }\n\n  // If we've buffered to the buffering goal then schedule an update.\n  if (bufferedAhead >= scaledBufferingGoal) {\n    shaka.log.v2(logPrefix, 'buffering goal met');\n\n    // Do not try to predict the next update.  Just poll twice every second.\n    // The playback rate can change at any time, so any prediction we make now\n    // could be terribly invalid soon.\n    return 0.5;\n  }\n\n  let bufferEnd =\n      this.playerInterface_.mediaSourceEngine.bufferEnd(mediaState.type);\n  let reference = this.getSegmentReferenceNeeded_(\n      mediaState, presentationTime, bufferEnd, currentPeriodIndex);\n  if (!reference) {\n    // The segment could not be found, does not exist, or is not available.  In\n    // any case just try again... if the manifest is incomplete or is not being\n    // updated then we'll idle forever; otherwise, we'll end up getting a\n    // SegmentReference eventually.\n    return 1;\n  }\n\n  // Do not let any one stream get far ahead of any other.\n  let minTimeNeeded = Infinity;\n  const mediaStates = Array.from(this.mediaStates_.values());\n  mediaStates.forEach((otherState) => {\n    // Do not consider embedded captions in this calculation.  It could lead\n    // to hangs in streaming.\n    if (isCaptionState(otherState)) return;\n\n    const timeNeeded = this.getTimeNeeded_(otherState, presentationTime);\n    minTimeNeeded = Math.min(minTimeNeeded, timeNeeded);\n  });\n\n  const maxSegmentDuration =\n      this.manifest_.presentationTimeline.getMaxSegmentDuration();\n  const maxRunAhead =\n      maxSegmentDuration * shaka.media.StreamingEngine.MAX_RUN_AHEAD_SEGMENTS_;\n  if (timeNeeded >= minTimeNeeded + maxRunAhead) {\n    // Wait and give other media types time to catch up to this one.\n    // For example, let video buffering catch up to audio buffering before\n    // fetching another audio segment.\n    return 1;\n  }\n\n  mediaState.resumeAt = 0;\n  this.fetchAndAppend_(\n      mediaState,\n      presentationTime,\n      currentPeriodIndex,\n      reference);\n  return null;\n};\n\n\n/**\n * Gets the next timestamp needed. Returns the playhead's position if the\n * buffer is empty; otherwise, returns the time at which the last segment\n * appended ends.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime\n * @return {number} The next timestamp needed.\n * @private\n */\nshaka.media.StreamingEngine.prototype.getTimeNeeded_ = function(\n    mediaState, presentationTime) {\n  // Get the next timestamp we need. We must use |lastSegmentReference|\n  // to determine this and not the actual buffer for two reasons:\n  //   1. Actual segments end slightly before their advertised end times, so\n  //      the next timestamp we need is actually larger than |bufferEnd|.\n  //   2. There may be drift (the timestamps in the segments are ahead/behind\n  //      of the timestamps in the manifest), but we need drift-free times when\n  //      comparing times against presentation and Period boundaries.\n  if (!mediaState.lastStream || !mediaState.lastSegmentReference) {\n    return Math.max(presentationTime, mediaState.resumeAt);\n  }\n\n  let lastPeriodIndex =\n      this.findPeriodContainingStream_(mediaState.lastStream);\n  let lastPeriod = this.manifest_.periods[lastPeriodIndex];\n  return lastPeriod.startTime + mediaState.lastSegmentReference.endTime;\n};\n\n\n/**\n * Gets the SegmentReference of the next segment needed.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime\n * @param {?number} bufferEnd\n * @param {number} currentPeriodIndex\n * @return {shaka.media.SegmentReference} The SegmentReference of the\n *   next segment needed. Returns null if a segment could not be found, does not\n *   exist, or is not available.\n * @private\n */\nshaka.media.StreamingEngine.prototype.getSegmentReferenceNeeded_ = function(\n    mediaState, presentationTime, bufferEnd, currentPeriodIndex) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  if (mediaState.lastSegmentReference &&\n      mediaState.stream == mediaState.lastStream) {\n    // Something is buffered from the same Stream.\n    let position = mediaState.lastSegmentReference.position + 1;\n    shaka.log.v2(logPrefix, 'next position known:', 'position=' + position);\n\n    return this.getSegmentReferenceIfAvailable_(\n        mediaState, currentPeriodIndex, position);\n  }\n\n  let position;\n\n  if (mediaState.lastSegmentReference) {\n    // Something is buffered from another Stream.\n    goog.asserts.assert(mediaState.lastStream, 'lastStream should not be null');\n    shaka.log.v1(logPrefix, 'next position unknown: another Stream buffered');\n    let lastPeriodIndex =\n        this.findPeriodContainingStream_(mediaState.lastStream);\n    let lastPeriod = this.manifest_.periods[lastPeriodIndex];\n    position = this.lookupSegmentPosition_(\n        mediaState,\n        lastPeriod.startTime + mediaState.lastSegmentReference.endTime,\n        currentPeriodIndex);\n  } else {\n    // Either nothing is buffered, or we have cleared part of the buffer.  If\n    // we still have some buffered, use that time to find the segment, otherwise\n    // start at the playhead time.\n    goog.asserts.assert(!mediaState.lastStream, 'lastStream should be null');\n    shaka.log.v1(logPrefix, 'next position unknown: nothing buffered');\n    position = this.lookupSegmentPosition_(\n        mediaState, bufferEnd || presentationTime, currentPeriodIndex);\n  }\n\n  if (position == null) {\n    return null;\n  }\n\n  let reference = null;\n  if (bufferEnd == null) {\n    // If there's positive drift then we need to get the previous segment;\n    // however, we don't actually know how much drift there is, so we must\n    // unconditionally get the previous segment. If it turns out that there's\n    // non-positive drift then we'll just end up buffering beind the playhead a\n    // little more than we needed.\n    let optimalPosition = Math.max(0, position - 1);\n    reference = this.getSegmentReferenceIfAvailable_(\n        mediaState, currentPeriodIndex, optimalPosition);\n  }\n  return reference ||\n      this.getSegmentReferenceIfAvailable_(\n          mediaState, currentPeriodIndex, position);\n};\n\n\n/**\n * Looks up the position of the segment containing the given timestamp.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime The timestamp needed, relative to the\n *   start of the presentation.\n * @param {number} currentPeriodIndex\n * @return {?number} A segment position, or null if a segment was not be found.\n * @private\n */\nshaka.media.StreamingEngine.prototype.lookupSegmentPosition_ = function(\n    mediaState, presentationTime, currentPeriodIndex) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  shaka.log.debug(logPrefix,\n                  'looking up segment:',\n                  'presentationTime=' + presentationTime,\n                  'currentPeriod.startTime=' + currentPeriod.startTime);\n\n  let lookupTime = Math.max(0, presentationTime - currentPeriod.startTime);\n  let position = mediaState.stream.findSegmentPosition(lookupTime);\n\n  if (position == null) {\n    shaka.log.warning(logPrefix,\n                      'cannot find segment:',\n                      'currentPeriod.startTime=' + currentPeriod.startTime,\n                      'lookupTime=' + lookupTime);\n  }\n\n  return position;\n};\n\n\n/**\n * Gets the SegmentReference at the given position if it's available.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} currentPeriodIndex\n * @param {number} position\n * @return {shaka.media.SegmentReference}\n *\n * @private\n */\nshaka.media.StreamingEngine.prototype.getSegmentReferenceIfAvailable_ =\n    function(mediaState, currentPeriodIndex, position) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  let reference = mediaState.stream.getSegmentReference(position);\n  if (!reference) {\n    shaka.log.v1(logPrefix,\n                 'segment does not exist:',\n                 'currentPeriod.startTime=' + currentPeriod.startTime,\n                 'position=' + position);\n    return null;\n  }\n\n  let timeline = this.manifest_.presentationTimeline;\n  let availabilityStart = timeline.getSegmentAvailabilityStart();\n  let availabilityEnd = timeline.getSegmentAvailabilityEnd();\n\n  if ((currentPeriod.startTime + reference.endTime < availabilityStart) ||\n      (currentPeriod.startTime + reference.startTime > availabilityEnd)) {\n    shaka.log.v2(logPrefix,\n                 'segment is not available:',\n                 'currentPeriod.startTime=' + currentPeriod.startTime,\n                 'reference.startTime=' + reference.startTime,\n                 'reference.endTime=' + reference.endTime,\n                 'availabilityStart=' + availabilityStart,\n                 'availabilityEnd=' + availabilityEnd);\n    return null;\n  }\n\n  return reference;\n};\n\n\n/**\n * Fetches and appends the given segment. Sets up the given MediaState's\n * associated SourceBuffer and evicts segments if either are required\n * beforehand. Schedules another update after completing successfully.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime\n * @param {number} currentPeriodIndex The index of the current Period.\n * @param {!shaka.media.SegmentReference} reference\n * @private\n */\nshaka.media.StreamingEngine.prototype.fetchAndAppend_ = function(\n    mediaState, presentationTime, currentPeriodIndex, reference) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const StreamingEngine = shaka.media.StreamingEngine;\n  const logPrefix = StreamingEngine.logPrefix_(mediaState);\n  const currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  shaka.log.v1(logPrefix,\n               'fetchAndAppend_:',\n               'presentationTime=' + presentationTime,\n               'currentPeriod.startTime=' + currentPeriod.startTime,\n               'reference.position=' + reference.position,\n               'reference.startTime=' + reference.startTime,\n               'reference.endTime=' + reference.endTime);\n\n  // Subtlety: The playhead may move while asynchronous update operations are\n  // in progress, so we should avoid calling playhead.getTime() in any\n  // callbacks. Furthermore, switch() may be called at any time, so we should\n  // also avoid using mediaState.stream or mediaState.needInitSegment in any\n  // callbacks.\n  let stream = mediaState.stream;\n\n  // Compute the append window.\n  let duration = this.manifest_.presentationTimeline.getDuration();\n  let followingPeriod = this.manifest_.periods[currentPeriodIndex + 1];\n\n  // Rounding issues can cause us to remove the first frame of the Period, so\n  // reduce the start time slightly.\n  const appendWindowStart = Math.max(0,\n      currentPeriod.startTime - StreamingEngine.APPEND_WINDOW_START_FUDGE_);\n  const appendWindowEnd = followingPeriod ?\n      followingPeriod.startTime + StreamingEngine.APPEND_WINDOW_END_FUDGE_ :\n      duration;\n\n  goog.asserts.assert(\n      reference.startTime <= appendWindowEnd,\n      logPrefix + ' segment should start before append window end');\n\n  let initSourceBuffer = this.initSourceBuffer_(\n      mediaState, currentPeriodIndex, appendWindowStart, appendWindowEnd);\n\n  mediaState.performingUpdate = true;\n\n  // We may set |needInitSegment| to true in switch(), so set it to false here,\n  // since we want it to remain true if switch() is called.\n  mediaState.needInitSegment = false;\n\n  shaka.log.v2(logPrefix, 'fetching segment');\n  let fetchSegment = this.fetch_(mediaState, reference);\n\n\n  Promise.all([initSourceBuffer, fetchSegment]).then(function(results) {\n    if (this.destroyed_ || this.fatalError_) return;\n    return this.append_(mediaState,\n                        presentationTime,\n                        currentPeriod,\n                        stream,\n                        reference,\n                        results[1]);\n  }.bind(this)).then(function() {\n    if (this.destroyed_ || this.fatalError_) return;\n\n    mediaState.performingUpdate = false;\n    mediaState.recovering = false;\n\n    if (!mediaState.waitingToClearBuffer) {\n      this.playerInterface_.onSegmentAppended();\n    }\n\n    // Update right away.\n    this.scheduleUpdate_(mediaState, 0);\n\n    // Subtlety: handleStartup_() calls onStartupComplete() which may call\n    // switch() or seeked(), so we must schedule an update beforehand so\n    // |updateTimer| is set.\n    this.handleStartup_(mediaState, stream);\n\n    shaka.log.v1(logPrefix, 'finished fetch and append');\n  }.bind(this)).catch(function(error) {\n    if (this.destroyed_ || this.fatalError_) return;\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Should only receive a Shaka error');\n\n    mediaState.performingUpdate = false;\n\n    if (mediaState.type == ContentType.TEXT &&\n        this.config_.ignoreTextStreamFailures) {\n      if (error.code == shaka.util.Error.Code.BAD_HTTP_STATUS) {\n        shaka.log.warning(logPrefix,\n            'Text stream failed to download. Proceeding without it.');\n      } else {\n        shaka.log.warning(logPrefix,\n            'Text stream failed to parse. Proceeding without it.');\n      }\n      this.mediaStates_.delete(ContentType.TEXT);\n    } else if (error.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // If the network slows down, abort the current fetch request and start a\n      // new one, and ignore the error message.\n      mediaState.performingUpdate = false;\n      mediaState.updateTimer = null;\n      this.scheduleUpdate_(mediaState, 0);\n    } else if (error.code == shaka.util.Error.Code.QUOTA_EXCEEDED_ERROR) {\n      this.handleQuotaExceeded_(mediaState, error);\n    } else {\n      shaka.log.error(logPrefix, 'failed fetch and append: code=' + error.code);\n      mediaState.hasError = true;\n\n      error.severity = shaka.util.Error.Severity.CRITICAL;\n      this.handleStreamingError_(error);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Clear per-stream error states and retry any failed streams.\n * @return {boolean} False if unable to retry.\n */\nshaka.media.StreamingEngine.prototype.retry = function() {\n  if (this.destroyed_) {\n    shaka.log.error('Unable to retry after StreamingEngine is destroyed!');\n    return false;\n  }\n\n  if (this.fatalError_) {\n    shaka.log.error('Unable to retry after StreamingEngine encountered a ' +\n                    'fatal error!');\n    return false;\n  }\n\n  for (const mediaState of this.mediaStates_.values()) {\n    let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n    if (mediaState.hasError) {\n      shaka.log.info(logPrefix, 'Retrying after failure...');\n      mediaState.hasError = false;\n      this.scheduleUpdate_(mediaState, 0.1);\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Handles a QUOTA_EXCEEDED_ERROR.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleQuotaExceeded_ = function(\n    mediaState, error) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // The segment cannot fit into the SourceBuffer. Ideally, MediaSource would\n  // have evicted old data to accommodate the segment; however, it may have\n  // failed to do this if the segment is very large, or if it could not find\n  // a suitable time range to remove.\n  //\n  // We can overcome the latter by trying to append the segment again;\n  // however, to avoid continuous QuotaExceededErrors we must reduce the size\n  // of the buffer going forward.\n  //\n  // If we've recently reduced the buffering goals, wait until the stream\n  // which caused the first QuotaExceededError recovers. Doing this ensures\n  // we don't reduce the buffering goals too quickly.\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n  let waitingForAnotherStreamToRecover = mediaStates.some(function(ms) {\n    return ms != mediaState && ms.recovering;\n  });\n\n  if (!waitingForAnotherStreamToRecover) {\n    // Reduction schedule: 80%, 60%, 40%, 20%, 16%, 12%, 8%, 4%, fail.\n    // Note: percentages are used for comparisons to avoid rounding errors.\n    let percentBefore = Math.round(100 * this.bufferingGoalScale_);\n    if (percentBefore > 20) {\n      this.bufferingGoalScale_ -= 0.2;\n    } else if (percentBefore > 4) {\n      this.bufferingGoalScale_ -= 0.04;\n    } else {\n      shaka.log.error(\n          logPrefix, 'MediaSource threw QuotaExceededError too many times');\n      mediaState.hasError = true;\n      this.fatalError_ = true;\n      this.playerInterface_.onError(error);\n      return;\n    }\n    let percentAfter = Math.round(100 * this.bufferingGoalScale_);\n    shaka.log.warning(\n        logPrefix,\n        'MediaSource threw QuotaExceededError:',\n        'reducing buffering goals by ' + (100 - percentAfter) + '%');\n    mediaState.recovering = true;\n  } else {\n    shaka.log.debug(\n        logPrefix,\n        'MediaSource threw QuotaExceededError:',\n        'waiting for another stream to recover...');\n  }\n\n  // QuotaExceededError gets thrown if evication didn't help to make room\n  // for a segment. We want to wait for a while (4 seconds is just an\n  // arbitrary number) before updating to give the playhead a chance to\n  // advance, so we don't immidiately throw again.\n  this.scheduleUpdate_(mediaState, 4);\n};\n\n\n/**\n * Sets the given MediaState's associated SourceBuffer's timestamp offset and\n * init segment if either are required. If an error occurs then neither the\n * timestamp offset or init segment are unset, since another call to switch()\n * will end up superseding them.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} currentPeriodIndex\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.initSourceBuffer_ = function(\n    mediaState, currentPeriodIndex, appendWindowStart, appendWindowEnd) {\n  if (!mediaState.needInitSegment) {\n    return Promise.resolve();\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  // If we need an init segment then the Stream switched, so we've either\n  // changed bitrates, Periods, or both. If we've changed Periods then we must\n  // set a new timestamp offset and append window end. Note that by setting\n  // these values here, we avoid having to co-ordinate ongoing updates, which\n  // we would have to do if we instead set them in switch().\n  let timestampOffset =\n      currentPeriod.startTime - mediaState.stream.presentationTimeOffset;\n  shaka.log.v1(logPrefix, 'setting timestamp offset to ' + timestampOffset);\n  shaka.log.v1(logPrefix,\n               'setting append window start to ' + appendWindowStart);\n  shaka.log.v1(logPrefix, 'setting append window end to ' + appendWindowEnd);\n  let setStreamProperties =\n      this.playerInterface_.mediaSourceEngine.setStreamProperties(\n          mediaState.type, timestampOffset, appendWindowStart, appendWindowEnd);\n\n  if (!mediaState.stream.initSegmentReference) {\n    // The Stream is self initializing.\n    return setStreamProperties;\n  }\n\n  shaka.log.v1(logPrefix, 'fetching init segment');\n\n  let fetchInit =\n      this.fetch_(mediaState, mediaState.stream.initSegmentReference);\n  let appendInit = fetchInit.then(function(initSegment) {\n    if (this.destroyed_) return;\n    shaka.log.v1(logPrefix, 'appending init segment');\n    const hasClosedCaptions = mediaState.stream.closedCaptions &&\n        mediaState.stream.closedCaptions.size > 0;\n    return this.playerInterface_.mediaSourceEngine.appendBuffer(\n        mediaState.type, initSegment, null /* startTime */, null /* endTime */,\n        hasClosedCaptions);\n  }.bind(this)).catch(function(error) {\n    mediaState.needInitSegment = true;\n    return Promise.reject(error);\n  });\n\n  return Promise.all([setStreamProperties, appendInit]);\n};\n\n\n/**\n * Appends the given segment and evicts content if required to append.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Stream} stream\n * @param {!shaka.media.SegmentReference} reference\n * @param {!ArrayBuffer} segment\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.append_ = function(\n    mediaState, presentationTime, period, stream, reference, segment) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  const hasClosedCaptions = stream.closedCaptions &&\n      stream.closedCaptions.size > 0;\n  if (stream.emsgSchemeIdUris != null && stream.emsgSchemeIdUris.length > 0) {\n    new shaka.util.Mp4Parser()\n        .fullBox(\n            'emsg',\n            this.parseEMSG_.bind(\n                this, period, reference, stream.emsgSchemeIdUris))\n        .parse(segment);\n  }\n\n  return this.evict_(mediaState, presentationTime).then(function() {\n    if (this.destroyed_) return;\n    shaka.log.v1(logPrefix, 'appending media segment');\n\n    // MediaSourceEngine expects times relative to the start of the\n    // presentation.  Reference times are relative to the start of the period.\n    const startTime = reference.startTime + period.startTime;\n    const endTime = reference.endTime + period.startTime;\n\n    return this.playerInterface_.mediaSourceEngine.appendBuffer(\n        mediaState.type, segment, startTime, endTime, hasClosedCaptions);\n  }.bind(this)).then(function() {\n    if (this.destroyed_) return;\n    shaka.log.v2(logPrefix, 'appended media segment');\n\n    // We must use |stream| because switch() may have been called.\n    mediaState.lastStream = stream;\n    mediaState.lastSegmentReference = reference;\n\n    return Promise.resolve();\n  }.bind(this));\n};\n\n\n/**\n * Parse the EMSG box from a MP4 container.\n *\n * @param {!shaka.extern.Period} period\n * @param {!shaka.media.SegmentReference} reference\n * @param {?Array.<string>} emsgSchemeIdUris Array of emsg\n *     scheme_id_uri for which emsg boxes should be parsed.\n * @param {!shaka.extern.ParsedBox} box\n * @private\n */\nshaka.media.StreamingEngine.prototype.parseEMSG_ = function(\n    period, reference, emsgSchemeIdUris, box) {\n  let schemeId = box.reader.readTerminatedString();\n  // Read the rest of the data.\n  let value = box.reader.readTerminatedString();\n  let timescale = box.reader.readUint32();\n  let presentationTimeDelta = box.reader.readUint32();\n  let eventDuration = box.reader.readUint32();\n  let id = box.reader.readUint32();\n  let messageData = box.reader.readBytes(\n      box.reader.getLength() - box.reader.getPosition());\n\n  let startTime = period.startTime + reference.startTime +\n      (presentationTimeDelta / timescale);\n\n  // See DASH sec. 5.10.3.3.1\n  // If a DASH client detects an event message box with a scheme that is not\n  // defined in MPD, the client is expected to ignore it.\n  if (emsgSchemeIdUris.includes(schemeId)) {\n    // See DASH sec. 5.10.4.1\n    // A special scheme in DASH used to signal manifest updates.\n    if (schemeId == 'urn:mpeg:dash:event:2012') {\n      this.playerInterface_.onManifestUpdate();\n    } else {\n      /** @type {shaka.extern.EmsgInfo} */\n      let emsg = {\n        startTime: startTime,\n        endTime: startTime + (eventDuration / timescale),\n        schemeIdUri: schemeId,\n        value: value,\n        timescale: timescale,\n        presentationTimeDelta: presentationTimeDelta,\n        eventDuration: eventDuration,\n        id: id,\n        messageData: messageData,\n      };\n\n      // Dispatch an event to notify the application about the emsg box.\n      let event = new shaka.util.FakeEvent('emsg', {'detail': emsg});\n      this.playerInterface_.onEvent(event);\n    }\n  }\n};\n\n\n/**\n * Evicts media to meet the max buffer behind limit.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.evict_ = function(\n    mediaState, presentationTime) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.v2(logPrefix, 'checking buffer length');\n\n  // Use the max segment duration, if it is longer than the bufferBehind, to\n  // avoid accidentally clearing too much data when dealing with a manifest\n  // with a long keyframe interval.\n  let bufferBehind = Math.max(this.config_.bufferBehind,\n      this.manifest_.presentationTimeline.getMaxSegmentDuration());\n\n  let startTime =\n      this.playerInterface_.mediaSourceEngine.bufferStart(mediaState.type);\n  if (startTime == null) {\n    shaka.log.v2(logPrefix,\n                 'buffer behind okay because nothing buffered:',\n                 'presentationTime=' + presentationTime,\n                 'bufferBehind=' + bufferBehind);\n    return Promise.resolve();\n  }\n  let bufferedBehind = presentationTime - startTime;\n\n  let overflow = bufferedBehind - bufferBehind;\n  if (overflow <= 0) {\n    shaka.log.v2(logPrefix,\n                 'buffer behind okay:',\n                 'presentationTime=' + presentationTime,\n                 'bufferedBehind=' + bufferedBehind,\n                 'bufferBehind=' + bufferBehind,\n                 'underflow=' + (-overflow));\n    return Promise.resolve();\n  }\n\n  shaka.log.v1(logPrefix,\n               'buffer behind too large:',\n               'presentationTime=' + presentationTime,\n               'bufferedBehind=' + bufferedBehind,\n               'bufferBehind=' + bufferBehind,\n               'overflow=' + overflow);\n\n  return this.playerInterface_.mediaSourceEngine.remove(\n      mediaState.type, startTime, startTime + overflow).then(function() {\n    if (this.destroyed_) return;\n    shaka.log.v1(logPrefix, 'evicted ' + overflow + ' seconds');\n  }.bind(this));\n};\n\n\n/**\n * Sets up all known Periods when startup completes; otherwise, does nothing.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState The last\n *   MediaState updated.\n * @param {shaka.extern.Stream} stream\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleStartup_ = function(\n    mediaState, stream) {\n  const Functional = shaka.util.Functional;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (this.startupComplete_) {\n    return;\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // If the only media state is text, then we may have loaded text before\n  // any media content.  Marking as complete early will break MediaSource.\n  // See #1696.\n  const mediaStates = Array.from(this.mediaStates_.values());\n  if (mediaStates.length != 1 || mediaStates[0].type != ContentType.TEXT) {\n    this.startupComplete_ = mediaStates.every(function(ms) {\n      // Startup completes once we have buffered at least one segment from each\n      // MediaState, not counting text.\n      if (ms.type == ContentType.TEXT) return true;\n      return !ms.waitingToClearBuffer &&\n             !ms.clearingBuffer &&\n             ms.lastSegmentReference;\n    });\n  }\n\n  if (!this.startupComplete_) {\n    return;\n  }\n\n  shaka.log.debug(logPrefix, 'startup complete');\n\n  // We must use |stream| because switch() may have been called.\n  let currentPeriodIndex = this.findPeriodContainingStream_(stream);\n\n  goog.asserts.assert(\n      mediaStates.every(function(ms) {\n        // It is possible for one stream (usually text) to buffer the whole\n        // Period and need the next one.\n        return ms.needPeriodIndex == currentPeriodIndex ||\n            ms.needPeriodIndex == currentPeriodIndex + 1;\n      }),\n      logPrefix + ' expected all MediaStates to need same Period');\n\n  // Setup the current Period if necessary, which is likely since the current\n  // Period is probably the initial one.\n  if (!this.canSwitchPeriod_[currentPeriodIndex]) {\n    this.setupPeriod_(currentPeriodIndex).then(function() {\n      if (this.destroyed_) {\n        return;\n      }\n\n      shaka.log.v1(logPrefix, 'calling onCanSwitch()...');\n      this.playerInterface_.onCanSwitch();\n    }.bind(this)).catch(Functional.noop);\n  }\n\n  // Now setup all known Periods.\n  for (let i = 0; i < this.manifest_.periods.length; ++i) {\n    this.setupPeriod_(i).catch(Functional.noop);\n  }\n\n  if (this.playerInterface_.onStartupComplete) {\n    shaka.log.v1(logPrefix, 'calling onStartupComplete()...');\n    this.playerInterface_.onStartupComplete();\n  }\n};\n\n\n/**\n * Calls onChooseStreams() when necessary.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState The last\n *   MediaState updated.\n * @private\n */\nshaka.media.StreamingEngine.prototype.handlePeriodTransition_ = function(\n    mediaState) {\n  const Functional = shaka.util.Functional;\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let currentPeriodIndex = this.findPeriodContainingStream_(mediaState.stream);\n  if (mediaState.needPeriodIndex == currentPeriodIndex) {\n    return;\n  }\n\n  let needPeriodIndex = mediaState.needPeriodIndex;\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n\n  // For a Period transition to work, all media states must need the same\n  // Period.  If a stream needs a different Period than the one it currently\n  // has, it will try to transition or stop updates assuming that another stream\n  // will handle it.  This only works when all streams either need the same\n  // Period or are still performing updates.\n  goog.asserts.assert(\n      mediaStates.every(function(ms) {\n        return ms.needPeriodIndex == needPeriodIndex || ms.hasError ||\n            !shaka.media.StreamingEngine.isIdle_(ms);\n      }),\n      'All MediaStates should need the same Period or be performing updates.');\n\n  // Only call onChooseStreams() when all MediaStates need the same Period.\n  let needSamePeriod = mediaStates.every(function(ms) {\n    return ms.needPeriodIndex == needPeriodIndex;\n  });\n  if (!needSamePeriod) {\n    shaka.log.debug(\n        logPrefix, 'not all MediaStates need Period ' + needPeriodIndex);\n    return;\n  }\n\n  // Only call onChooseStreams() once per Period transition.\n  let allAreIdle = mediaStates.every(shaka.media.StreamingEngine.isIdle_);\n  if (!allAreIdle) {\n    shaka.log.debug(\n        logPrefix,\n        'all MediaStates need Period ' + needPeriodIndex + ', ' +\n        'but not all MediaStates are idle');\n    return;\n  }\n\n  shaka.log.debug(logPrefix, 'all need Period ' + needPeriodIndex);\n\n  // Ensure the Period which we need to buffer is set up and then call\n  // onChooseStreams().\n  this.setupPeriod_(needPeriodIndex).then(function() {\n    if (this.destroyed_) return;\n\n    // If we seek during a Period transition, we can start another transition.\n    // So we need to verify that:\n    //  1. We are still in need of the same Period.\n    //  2. All streams are still idle.\n    //  3. The current stream is not in the needed Period (another transition\n    //     handled it).\n    let allReady = mediaStates.every(function(ms) {\n      let isIdle = shaka.media.StreamingEngine.isIdle_(ms);\n      let currentPeriodIndex = this.findPeriodContainingStream_(ms.stream);\n      return isIdle && ms.needPeriodIndex == needPeriodIndex &&\n          currentPeriodIndex != needPeriodIndex;\n    }.bind(this));\n    if (!allReady) {\n      // TODO: Write unit tests for this case.\n      shaka.log.debug(logPrefix, 'ignoring transition to Period',\n                      needPeriodIndex, 'since another is happening');\n      return;\n    }\n\n    let needPeriod = this.manifest_.periods[needPeriodIndex];\n\n    shaka.log.v1(logPrefix, 'calling onChooseStreams()...');\n    let chosenStreams = this.playerInterface_.onChooseStreams(needPeriod);\n\n    /** @type {!Map.<!ContentType, shaka.extern.Stream>} */\n    const streamsByType = new Map();\n    if (chosenStreams.variant && chosenStreams.variant.video) {\n      streamsByType.set(ContentType.VIDEO, chosenStreams.variant.video);\n    }\n    if (chosenStreams.variant && chosenStreams.variant.audio) {\n      streamsByType.set(ContentType.AUDIO, chosenStreams.variant.audio);\n    }\n    if (chosenStreams.text) {\n      streamsByType.set(ContentType.TEXT, chosenStreams.text);\n    }\n\n    // Vet |streamsByType| before switching.\n    for (const type of this.mediaStates_.keys()) {\n      if (streamsByType.has(type) || type == ContentType.TEXT) continue;\n\n      shaka.log.error(logPrefix,\n                      'invalid Streams chosen: missing ' + type + ' Stream');\n      this.playerInterface_.onError(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STREAMING,\n          shaka.util.Error.Code.INVALID_STREAMS_CHOSEN));\n      return;\n    }\n\n    // Because we are going to modify the map, we need to create a copy of the\n    // keys, so copy the iterable to an array first.\n    for (const type of Array.from(streamsByType.keys())) {\n      if (this.mediaStates_.has(type)) continue;\n\n      if (type == ContentType.TEXT) {\n        // initStreams_ will switch streams and schedule an update.\n        this.initStreams_(\n            /* audio= */ null,\n            /* video= */ null,\n            /* text= */ streamsByType.get(ContentType.TEXT),\n            needPeriod.startTime);\n        streamsByType.delete(type);\n        continue;\n      }\n\n      shaka.log.error(logPrefix,\n                      'invalid Streams chosen: unusable ' + type + ' Stream');\n      this.playerInterface_.onError(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STREAMING,\n          shaka.util.Error.Code.INVALID_STREAMS_CHOSEN));\n      return;\n    }\n\n    // Because we are going to modify the map, we need to create a copy of the\n    // keys, so copy the iterable to an array first.\n    for (const type of Array.from(this.mediaStates_.keys())) {\n      const stream = streamsByType.get(type);\n      if (stream) {\n        this.switchInternal_(stream, /* clearBuffer= */ false,\n            /* safeMargin= */ 0, /* force= */ false);\n        this.scheduleUpdate_(this.mediaStates_.get(type), 0);\n      } else {\n        goog.asserts.assert(type == ContentType.TEXT, 'Invalid streams chosen');\n        this.mediaStates_.delete(type);\n      }\n    }\n\n    // We've already set up the Period so call onCanSwitch() right now.\n    shaka.log.v1(logPrefix, 'calling onCanSwitch()...');\n    this.playerInterface_.onCanSwitch();\n  }.bind(this)).catch(Functional.noop);\n};\n\n\n/**\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {boolean} True if the given MediaState is idle; otherwise, return\n *   false.\n * @private\n */\nshaka.media.StreamingEngine.isIdle_ = function(mediaState) {\n  return !mediaState.performingUpdate &&\n         (mediaState.updateTimer == null) &&\n         !mediaState.waitingToClearBuffer &&\n         !mediaState.clearingBuffer;\n};\n\n\n/**\n * Get the index in the manifest of the period that contains the given\n * presentation time. If |time| is before all periods, this will default to\n * returning the first period.\n *\n * @param {number} time The presentation time in seconds.\n * @return {number}\n * @private\n */\nshaka.media.StreamingEngine.prototype.findPeriodForTime_ = function(time) {\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const threshold = ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS;\n\n  // The last segment may end right before the end of the Period because of\n  // rounding issues so we bias forward a little.\n  const adjustedTime = time + threshold;\n\n  const period = shaka.util.Periods.findPeriodForTime(\n      /* periods= */ this.manifest_.periods,\n      /* time= */ adjustedTime);\n\n  return period ? this.manifest_.periods.indexOf(period) : 0;\n};\n\n\n/**\n * See if |stream| can be found in our manifest and return the period index. If\n * |stream| cannot be found, -1 will be returned.\n *\n * @param {!shaka.extern.Stream} stream\n * @return {number}\n * @private\n */\nshaka.media.StreamingEngine.prototype.findPeriodContainingStream_ = function(\n    stream) {\n  goog.asserts.assert(this.manifest_, 'Must have a manifest to find a stream.');\n\n  const periods = this.manifest_.periods;\n  for (let i = 0; i < periods.length; i++) {\n    const period = periods[i];\n\n    // Collect all the streams in this period so that we can easily check\n    // if the stream is found (regardless of type).\n    const streams = new Set();\n\n    for (const variant of period.variants) {\n      if (variant.audio) {\n        streams.add(variant.audio);\n      }\n      if (variant.video) {\n        streams.add(variant.video);\n      }\n      if (variant.video && variant.video.trickModeVideo) {\n        streams.add(variant.video.trickModeVideo);\n      }\n    }\n\n    for (const text of period.textStreams) {\n      streams.add(text);\n    }\n\n    if (streams.has(stream)) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\n/**\n * Fetches the given segment.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {(!shaka.media.InitSegmentReference|!shaka.media.SegmentReference)}\n *   reference\n *\n * @return {!Promise.<!ArrayBuffer>}\n * @private\n */\nshaka.media.StreamingEngine.prototype.fetch_ = function(mediaState, reference) {\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n\n  const request = shaka.util.Networking.createSegmentRequest(\n      reference.getUris(),\n      reference.startByte,\n      reference.endByte,\n      this.config_.retryParameters);\n\n  shaka.log.v2('fetching: reference=', reference);\n\n  const op = this.playerInterface_.netEngine.request(requestType, request);\n  mediaState.operation = op;\n  return op.promise.then(function(response) {\n    mediaState.operation = null;\n    return response.data;\n  });\n};\n\n\n/**\n * Clears the buffer and schedules another update.\n * The optional parameter safeMargin allows to retain a certain amount\n * of buffer, which can help avoiding rebuffering events.\n * The value of the safe margin should be provided by the ABR manager.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {boolean} flush\n * @param {number} safeMargin\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.clearBuffer_ =\n    async function(mediaState, flush, safeMargin) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  goog.asserts.assert(\n      !mediaState.performingUpdate && (mediaState.updateTimer == null),\n      logPrefix + ' unexpected call to clearBuffer_()');\n\n  mediaState.waitingToClearBuffer = false;\n  mediaState.waitingToFlushBuffer = false;\n  mediaState.clearBufferSafeMargin = 0;\n  mediaState.clearingBuffer = true;\n\n  shaka.log.debug(logPrefix, 'clearing buffer');\n  let p;\n  if (safeMargin) {\n    const presentationTime = this.playerInterface_.getPresentationTime();\n    let duration = this.playerInterface_.mediaSourceEngine.getDuration();\n    p = this.playerInterface_.mediaSourceEngine.remove(\n        mediaState.type, presentationTime + safeMargin, duration);\n  } else {\n    p = this.playerInterface_.mediaSourceEngine.clear(mediaState.type).then(\n        function() {\n          if (!this.destroyed_ && flush) {\n            return this.playerInterface_.mediaSourceEngine.flush(\n                mediaState.type);\n          }\n        }.bind(this));\n  }\n\n  await p;\n  if (this.destroyed_) return;\n\n  shaka.log.debug(logPrefix, 'cleared buffer');\n  mediaState.lastStream = null;\n  mediaState.lastSegmentReference = null;\n  mediaState.clearingBuffer = false;\n  mediaState.endOfStream = false;\n  this.scheduleUpdate_(mediaState, 0);\n};\n\n\n/**\n * Schedules |mediaState|'s next update.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} delay The delay in seconds.\n * @private\n */\nshaka.media.StreamingEngine.prototype.scheduleUpdate_ = function(\n    mediaState, delay) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.v2(logPrefix, 'updating in ' + delay + ' seconds');\n  goog.asserts.assert(mediaState.updateTimer == null,\n                      logPrefix + ' did not expect update to be scheduled');\n\n  mediaState.updateTimer = new shaka.util.DelayedTick(async () => {\n    try {\n      await this.onUpdate_(mediaState);\n    } catch (error) {\n      if (this.playerInterface_) {\n        this.playerInterface_.onError(error);\n      }\n    }\n  }).tickAfter(delay);\n};\n\n\n/**\n * If |mediaState| is scheduled to update, stop it.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @private\n */\nshaka.media.StreamingEngine.prototype.cancelUpdate_ = function(mediaState) {\n  if (mediaState.updateTimer == null) {\n    return;\n  }\n\n  mediaState.updateTimer.stop();\n  mediaState.updateTimer = null;\n};\n\n\n/**\n * Handle streaming errors by delaying, then notifying the application by error\n * callback and by streaming failure callback.\n *\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleStreamingError_ = function(error) {\n  // If we invoke the callback right away, the application could trigger a\n  // rapid retry cycle that could be very unkind to the server.  Instead,\n  // use the backoff system to delay and backoff the error handling.\n  this.failureCallbackBackoff_.attempt().then(function() {\n    if (this.destroyed_) {\n      return;\n    }\n\n    // First fire an error event.\n    this.playerInterface_.onError(error);\n\n    // If the error was not handled by the application, call the failure\n    // callback.\n    if (!error.handled) {\n      this.config_.failureCallback(error);\n    }\n  }.bind(this));\n};\n\n\n/**\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {string} A log prefix of the form ($CONTENT_TYPE:$STREAM_ID), e.g.,\n *   \"(audio:5)\" or \"(video:hd)\".\n * @private\n */\nshaka.media.StreamingEngine.logPrefix_ = function(mediaState) {\n  return '(' + mediaState.type + ':' + mediaState.stream.id + ')';\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpPluginUtils');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * @namespace shaka.net.HttpPluginUtils\n * @summary A set of http networking utility functions.\n * @exportDoc\n */\n\n\n/**\n * @param {!Object.<string,string>} headers\n * @param {?ArrayBuffer} data\n * @param {number} status\n * @param {string} uri\n * @param {string} responseURL\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @return {!shaka.extern.Response}\n */\nshaka.net.HttpPluginUtils.makeResponse =\n    function(headers, data, status, uri, responseURL, requestType) {\n  if (status >= 200 && status <= 299 && status != 202) {\n    // Most 2xx HTTP codes are success cases.\n    /** @type {shaka.extern.Response} */\n    let response = {\n      uri: responseURL || uri,\n      originalUri: uri,\n      data: data,\n      headers: headers,\n      fromCache: !!headers['x-shaka-from-cache'],\n    };\n    return response;\n  } else {\n    let responseText = null;\n    try {\n      responseText = shaka.util.StringUtils.fromBytesAutoDetect(data);\n    } catch (exception) {}\n    shaka.log.debug('HTTP error text:', responseText);\n\n    let severity = status == 401 || status == 403 ?\n        shaka.util.Error.Severity.CRITICAL :\n        shaka.util.Error.Severity.RECOVERABLE;\n    throw new shaka.util.Error(\n        severity,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.BAD_HTTP_STATUS,\n        uri,\n        status,\n        responseText,\n        headers,\n        requestType);\n  }\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpFetchPlugin');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.HttpPluginUtils');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.MapUtils');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle http and https URIs via the Fetch API.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {shaka.extern.ProgressUpdated} progressUpdated Called when a progress\n *   event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.HttpFetchPlugin = function(\n    uri, request, requestType, progressUpdated) {\n  const headers = new shaka.net.HttpFetchPlugin.Headers_();\n  shaka.util.MapUtils.asMap(request.headers).forEach((value, key) => {\n    headers.append(key, value);\n  });\n\n  const controller = new shaka.net.HttpFetchPlugin.AbortController_();\n\n  /** @type {!RequestInit} */\n  const init = {\n    // Edge does not treat null as undefined for body; https://bit.ly/2luyE6x\n    body: request.body || undefined,\n    headers: headers,\n    method: request.method,\n    signal: controller.signal,\n    credentials: request.allowCrossSiteCredentials ? 'include' : undefined,\n  };\n\n  /** @type {shaka.net.HttpFetchPlugin.AbortStatus} */\n  const abortStatus = {\n    canceled: false,\n    timedOut: false,\n  };\n\n  const pendingRequest = shaka.net.HttpFetchPlugin.request_(\n      uri, requestType, init, abortStatus, progressUpdated);\n\n  /** @type {!shaka.util.AbortableOperation} */\n  const op = new shaka.util.AbortableOperation(pendingRequest, () => {\n    abortStatus.canceled = true;\n    controller.abort();\n    return Promise.resolve();\n  });\n\n  // The fetch API does not timeout natively, so do a timeout manually using the\n  // AbortController.\n  const timeoutMs = request.retryParameters.timeout;\n  if (timeoutMs) {\n    const timer = new shaka.util.Timer(() => {\n      abortStatus.timedOut = true;\n      controller.abort();\n    });\n\n    timer.tickAfter(timeoutMs / 1000);\n\n    // To avoid calling |abort| on the network request after it finished, we\n    // will stop the timer when the requests resolves/rejects.\n    op.finally(() => {\n      timer.stop();\n    });\n  }\n\n  return op;\n};\n\n/**\n * @param {string} uri\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {!RequestInit} init\n * @param {shaka.net.HttpFetchPlugin.AbortStatus} abortStatus\n * @param {shaka.extern.ProgressUpdated} progressUpdated\n * @return {!Promise<!shaka.extern.Response>}\n * @private\n */\nshaka.net.HttpFetchPlugin.request_ = async function(\n    uri, requestType, init, abortStatus, progressUpdated) {\n  const fetch = shaka.net.HttpFetchPlugin.fetch_;\n  const ReadableStream = shaka.net.HttpFetchPlugin.ReadableStream_;\n  let response;\n  let arrayBuffer;\n  let loaded = 0;\n  let lastLoaded = 0;\n\n  // Last time stamp when we got a progress event.\n  let lastTime = Date.now();\n\n  try {\n    // The promise returned by fetch resolves as soon as the HTTP response\n    // headers are available. The download itself isn't done until the promise\n    // for retrieving the data (arrayBuffer, blob, etc) has resolved.\n    response = await fetch(uri, init);\n    // Getting the reader in this way allows us to observe the process of\n    // downloading the body, instead of just waiting for an opaque promise to\n    // resolve.\n    // We first clone the response because calling getReader locks the body\n    // stream; if we didn't clone it here, we would be unable to get the\n    // response's arrayBuffer later.\n    const reader = response.clone().body.getReader();\n\n    const contentLengthRaw = response.headers.get('Content-Length');\n    const contentLength = contentLengthRaw ? parseInt(contentLengthRaw, 10) : 0;\n\n    let start = (controller) => {\n      let push = async () => {\n        let readObj;\n        try {\n          readObj = await reader.read();\n        } catch (e) {\n          // If we abort the request, we'll get an error here.  Just ignore it\n          // since real errors will be reported when we read the buffer below.\n          shaka.log.v1('error reading from stream', e.message);\n          return;\n        }\n\n        if (!readObj.done) {\n          loaded += readObj.value.byteLength;\n        }\n\n        let currentTime = Date.now();\n        // If the time between last time and this time we got progress event\n        // is long enough, or if a whole segment is downloaded, call\n        // progressUpdated().\n        if (currentTime - lastTime > 100 || readObj.done) {\n          progressUpdated(currentTime - lastTime, loaded - lastLoaded,\n              contentLength - loaded);\n          lastLoaded = loaded;\n          lastTime = currentTime;\n        }\n\n        if (readObj.done) {\n          goog.asserts.assert(!readObj.value,\n                              'readObj should be unset when \"done\" is true.');\n          controller.close();\n        } else {\n          controller.enqueue(readObj.value);\n          push();\n        }\n      };\n      push();\n    };\n    // Create a ReadableStream to use the reader. We don't need to use the\n    // actual stream for anything, though, as we are using the response's\n    // arrayBuffer method to get the body, so we don't store the ReadableStream.\n    new ReadableStream({start}); // eslint-disable-line no-new\n    arrayBuffer = await response.arrayBuffer();\n  } catch (error) {\n    if (abortStatus.canceled) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.OPERATION_ABORTED,\n          uri, requestType);\n    } else if (abortStatus.timedOut) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.TIMEOUT,\n          uri, requestType);\n    } else {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.HTTP_ERROR,\n          uri, error, requestType);\n    }\n  }\n\n  const headers = {};\n  /** @type {Headers} */\n  const responseHeaders = response.headers;\n  responseHeaders.forEach(function(value, key) {\n    // Since IE/Edge incorrectly return the header with a leading new line\n    // character ('\\n'), we trim the header here.\n    headers[key.trim()] = value;\n  });\n\n  return shaka.net.HttpPluginUtils.makeResponse(headers,\n      arrayBuffer, response.status, uri, response.url, requestType);\n};\n\n/**\n * @typedef {{\n *   canceled: boolean,\n *   timedOut: boolean\n * }}\n * @property {boolean} canceled\n *   Indicates if the request was canceled.\n * @property {boolean} timedOut\n *   Indicates if the request timed out.\n */\nshaka.net.HttpFetchPlugin.AbortStatus;\n\n\n/**\n * Determine if the Fetch API is supported in the browser. Note: this is\n * deliberately exposed as a method to allow the client app to use the same\n * logic as Shaka when determining support.\n * @return {boolean}\n * @export\n */\nshaka.net.HttpFetchPlugin.isSupported = function() {\n  // On Edge, ReadableStream exists, but attempting to construct it results in\n  // an error. See https://bit.ly/2zwaFLL\n  // So this has to check that ReadableStream is present AND usable.\n  if (window.ReadableStream) {\n    try {\n      new ReadableStream({}); // eslint-disable-line no-new\n    } catch (e) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n  return !!(window.fetch && window.AbortController);\n};\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(string, !RequestInit)}\n * @private\n */\nshaka.net.HttpFetchPlugin.fetch_ = window.fetch;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: AbortController)}\n * @private\n */\nshaka.net.HttpFetchPlugin.AbortController_ = window.AbortController;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: ReadableStream, !Object)}\n * @private\n */\nshaka.net.HttpFetchPlugin.ReadableStream_ = window.ReadableStream;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: Headers)}\n * @private\n */\nshaka.net.HttpFetchPlugin.Headers_ = window.Headers;\n\n\nif (shaka.net.HttpFetchPlugin.isSupported()) {\n  shaka.net.NetworkingEngine.registerScheme('http', shaka.net.HttpFetchPlugin,\n      shaka.net.NetworkingEngine.PluginPriority.PREFERRED);\n  shaka.net.NetworkingEngine.registerScheme('https', shaka.net.HttpFetchPlugin,\n      shaka.net.NetworkingEngine.PluginPriority.PREFERRED);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpXHRPlugin');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.HttpPluginUtils');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle http and https URIs via XHR.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {shaka.extern.ProgressUpdated} progressUpdated Called when a\n *   progress event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.HttpXHRPlugin = function(uri, request, requestType, progressUpdated) {\n  let xhr = new shaka.net.HttpXHRPlugin.Xhr_();\n\n  // Last time stamp when we got a progress event.\n  let lastTime = Date.now();\n  // Last number of bytes loaded, from progress event.\n  let lastLoaded = 0;\n\n  let promise = new Promise(function(resolve, reject) {\n    xhr.open(request.method, uri, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.timeout = request.retryParameters.timeout;\n    xhr.withCredentials = request.allowCrossSiteCredentials;\n\n    xhr.onabort = function() {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.OPERATION_ABORTED,\n          uri, requestType));\n    };\n    xhr.onload = function(event) {\n      let target = event.target;\n      goog.asserts.assert(target, 'XHR onload has no target!');\n      // Since IE and Edge incorrectly return the header with a leading new line\n      // character ('\\n'), we trim the header here.\n      const headerLines = target.getAllResponseHeaders().trim().split('\\r\\n');\n      const headers = {};\n      for (const header of headerLines) {\n        /** @type {!Array.<string>} */\n        const parts = header.split(': ');\n        headers[parts[0].toLowerCase()] = parts.slice(1).join(': ');\n      }\n\n      try {\n        let response = shaka.net.HttpPluginUtils.makeResponse(headers,\n          target.response, target.status, uri, target.responseURL,\n          requestType);\n        resolve(response);\n      } catch (error) {\n        goog.asserts.assert(error instanceof shaka.util.Error,\n            'Wrong error type!');\n        reject(error);\n      }\n    };\n    xhr.onerror = function(event) {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.HTTP_ERROR,\n          uri, event, requestType));\n    };\n    xhr.ontimeout = function(event) {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.TIMEOUT,\n          uri, requestType));\n    };\n    xhr.onprogress = function(event) {\n      let currentTime = Date.now();\n      // If the time between last time and this time we got progress event\n      // is long enough, or if a whole segment is downloaded, call\n      // progressUpdated().\n      if (currentTime - lastTime > 100 ||\n          (event.lengthComputable && event.loaded == event.total)) {\n        progressUpdated(currentTime - lastTime, event.loaded - lastLoaded,\n          event.total - event.loaded);\n        lastLoaded = event.loaded;\n        lastTime = currentTime;\n      }\n    };\n\n    for (let key in request.headers) {\n      // The Fetch API automatically normalizes outgoing header keys to\n      // lowercase. For consistency's sake, do it here too.\n      let lowercasedKey = key.toLowerCase();\n      xhr.setRequestHeader(lowercasedKey, request.headers[key]);\n    }\n    xhr.send(request.body);\n  });\n\n  return new shaka.util.AbortableOperation(\n    promise,\n    () => {\n      xhr.abort();\n      return Promise.resolve();\n    });\n};\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: XMLHttpRequest)}\n * @private\n */\nshaka.net.HttpXHRPlugin.Xhr_ = window.XMLHttpRequest;\n\n\nshaka.net.NetworkingEngine.registerScheme('http', shaka.net.HttpXHRPlugin,\n    shaka.net.NetworkingEngine.PluginPriority.FALLBACK);\nshaka.net.NetworkingEngine.registerScheme('https', shaka.net.HttpXHRPlugin,\n    shaka.net.NetworkingEngine.PluginPriority.FALLBACK);\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.DownloadProgressEstimator');\n\n\n/**\n * The download progress estimator class encapsulates all the logic for tracking\n * how much content has been downloaded and estimating its progress.\n *\n * @final\n */\nshaka.offline.DownloadProgressEstimator = class {\n  constructor() {\n    /**\n     * This is the sum of all estimates passed to |open|. This is used as the\n     * denominator when measuring progress.\n     *\n     * @private {number}\n     */\n    this.estimatedTotal_ = 0;\n\n    /**\n     * This is the sum of all estimates pass to |open| but only after |close|\n     * has been called. This is used as the numerator when measuring progress so\n     * that |estimatedTotal_ == estimatedDownloaded_| after everything is\n     * downloaded.\n     *\n     * @private {number}\n     */\n    this.estimatedDownloaded_ = 0;\n\n    /**\n     * This is the total number of bytes actually downloaded. This will most\n     * likely differ from |estimatedTotal_| after everything is downloaded since\n     * our estimates will be off.\n     *\n     * @private {number}\n     */\n    this.actualDownloaded_ = 0;\n\n    /**\n     * This is a map of all pending downloads. This maps their download id (an\n     * internal id) to the estimate. This will allow us to update\n     * |estimatedDownloaded_| when |close| is called.\n     *\n     * @private {!Map.<number, number>}\n     */\n    this.pending_ = new Map();\n\n    /**\n     * This number is used to provide unique (to estimator) ids for each\n     * download. This allows us to track each download in |pending_|.\n     *\n     * @private {number}\n     */\n    this.nextId_ = 0;\n  }\n\n  /**\n   * Open a new download in the progress estimator. This will create an entry so\n   * that we can track the download progress.\n   *\n   * This will return an id for the download. This id must be passed to |close|\n   * in order for the |close| to be paired with this call to |open|.\n   *\n   * @param {number} estimate\n   * @return {number}\n   */\n  open(estimate) {\n    this.estimatedTotal_ += estimate;\n\n    const id = this.nextId_;\n    this.nextId_++;\n\n    this.pending_.set(id, estimate);\n    return id;\n  }\n\n  /**\n   * Close a download in the estimator. This will signal that we have finished\n   * downloading a segment and we can update the progress estimate.\n   *\n   * @param {number} id\n   * @param {number} actual\n   */\n  close(id, actual) {\n    if (!this.pending_.has(id)) {\n      return;\n    }\n\n    const estimate = this.pending_.get(id);\n    this.pending_.delete(id);\n\n    this.estimatedDownloaded_ += estimate;\n    this.actualDownloaded_ += actual;\n  }\n\n  /**\n   * Get the current estimate for how much progress we've made downloading the\n   * content. Progress will be between 0 and 1.\n   *\n   * Depending on the order of calls to |open| and |close|,\n   * |getEstimatedProgress| will fluctuate and is not guaranteed to always be\n   * increasing.\n   *\n   * @return {number}\n   */\n  getEstimatedProgress() {\n    return this.estimatedTotal_ == 0 ?\n           0 :\n           this.estimatedDownloaded_ / this.estimatedTotal_;\n  }\n\n  /**\n   * Get the total number of bytes that were actually downloaded.\n   *\n   * @return {number}\n   */\n  getTotalDownloaded() {\n    return this.actualDownloaded_;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.DownloadManager');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.offline.DownloadProgressEstimator');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * This manages downloading segments.\n *\n * @implements {shaka.util.IDestroyable}\n * @final\n */\nshaka.offline.DownloadManager = class {\n  /**\n   * Create a new download manager. It will use (but not own) |networkingEngine|\n   * and call |onProgress| after each download.\n   *\n   * @param {!shaka.net.NetworkingEngine} networkingEngine\n   * @param {function(number, number)} onProgress\n   */\n  constructor(networkingEngine, onProgress) {\n    /** @private {shaka.net.NetworkingEngine} */\n    this.networkingEngine_ = networkingEngine;\n\n    /**\n     * We group downloads. Within each group, the requests are executed in\n     * series. Between groups, the requests are executed in parallel. We store\n     * the promise chain that is doing the work.\n     *\n     * @private {!Map.<number, !Promise>}\n     */\n    this.groups_ = new Map();\n\n    /** @private {boolean} */\n    this.destroyed_ = false;\n\n    /**\n     * A callback for when a segment has been downloaded. The first parameter\n     * is the progress of all segments, a number between 0.0 (0% complete) and\n     * 1.0 (100% complete). The second parameter is the total number of bytes\n     * that have been downloaded.\n     *\n     * @private {function(number, number)}\n     */\n    this.onProgress_ = onProgress;\n\n    /** @private {shaka.offline.DownloadProgressEstimator} */\n    this.estimator_ = new shaka.offline.DownloadProgressEstimator();\n  }\n\n  /** @override */\n  destroy() {\n    // Setting this will cause the promise chains to stop.\n    this.destroyed_ = true;\n\n    // Append no-ops so that we ensure that no errors escape |destroy|.\n    return Promise.all(this.groups_.values()).then(() => {}, () => {});\n  }\n\n  /**\n   * Add a request to be downloaded as part of a group.\n   *\n   * @param {number} groupId\n   *    The group to add this segment to. If the group does not exist, a new\n   *    group will be created.\n   * @param {shaka.extern.Request} request\n   * @param {number} estimatedByteLength\n   * @param {function(!ArrayBuffer):!Promise} onDownloaded\n   *   The callback for when this request has been downloaded. Downloading for\n   *   |group| will pause until the promise returned by |onDownloaded| resolves.\n   */\n  queue(groupId, request, estimatedByteLength, onDownloaded) {\n    goog.asserts.assert(\n        !this.destroyed_,\n        'Do not call |queue| after |destroy|');\n\n    const id = this.estimator_.open(estimatedByteLength);\n\n    const group = this.groups_.get(groupId) || Promise.resolve();\n\n    // Add another download to the group.\n    this.groups_.set(groupId, group.then(async () => {\n      const response = await this.fetchSegment_(request);\n\n      // Make sure we stop downloading if we have been destroyed.\n      if (this.destroyed_) {\n        throw new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.OPERATION_ABORTED);\n      }\n\n      // Update all our internal stats.\n      this.estimator_.close(id, response.byteLength);\n      this.onProgress_(\n          this.estimator_.getEstimatedProgress(),\n          this.estimator_.getTotalDownloaded());\n\n      return onDownloaded(response);\n    }));\n  }\n\n  /**\n   * Get a promise that will resolve when all currently queued downloads have\n   * finished.\n   *\n   * @return {!Promise.<number>}\n   */\n  async waitToFinish() {\n    await Promise.all(this.groups_.values());\n    return this.estimator_.getTotalDownloaded();\n  }\n\n  /**\n   * Download a segment and return the data in the response.\n   *\n   * @param {shaka.extern.Request} request\n   * @return {!Promise.<!ArrayBuffer>}\n   * @private\n   */\n  async fetchSegment_(request) {\n    const type = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n    const action = this.networkingEngine_.request(type, request);\n    const response = await action.promise;\n\n    goog.asserts.assert(response.data, 'Response data should be non-null!');\n    return response.data;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.DBOperation');\n\n\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A DBOperation wraps an IndexedDB transaction in a promise.\n */\nshaka.offline.indexeddb.DBOperation = class {\n  /**\n   * @param {IDBTransaction} transaction\n   * @param {string} storeName\n   */\n  constructor(transaction, storeName) {\n    /** @private {IDBTransaction} */\n    this.transaction_ = transaction;\n    /** @private {IDBObjectStore} */\n    this.store_ = transaction.objectStore(storeName);\n    /** @private {!shaka.util.PublicPromise} */\n    this.promise_ = new shaka.util.PublicPromise();\n\n    // Connect the transaction and the promise together.\n    // |event.preventDefault()| is used on all non-successful callbacks to\n    // prevent Firefox from surfacing the error on the main thread.\n    transaction.onabort = (event) => {\n      event.preventDefault();\n      this.promise_.reject();\n    };\n    transaction.onerror = (event) => {\n      event.preventDefault();\n      this.promise_.reject();\n    };\n    transaction.oncomplete = (event) => {\n      this.promise_.resolve();\n    };\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  abort() {\n    try {\n      this.transaction_.abort();\n    } catch (e) {\n      // Ignore any exceptions that may be thrown as a result of aborting\n      // the transaction.\n    }\n\n    // Wait for the promise to be rejected, but ignore the rejection error.\n    return this.promise_.catch(() => {});\n  }\n\n  /**\n   * Calls the given callback for each entry in the database.  The callback\n   * must be synchronous, but this operation happens asynchronously.\n   *\n   * @param {function(number, T, !IDBCursorWithValue=)} callback\n   * @return {!Promise}\n   * @template T\n   */\n  forEachEntry(callback) {\n    return new Promise((resolve, reject) => {\n      const req = this.store_.openCursor();\n      req.onerror = reject;\n      req.onsuccess = (event) => {\n        // When we reach the end of the data that the cursor is iterating\n        // over, |event.target.result| will be null to signal the end of the\n        // iteration.\n        // https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continue\n        const cursor = event.target.result;\n        if (!cursor) {\n          return resolve();\n        }\n\n        callback(cursor.key, cursor.value, cursor);\n        cursor.continue();\n      };\n    });\n  }\n\n  /**\n   * Get the store that the operation can interact with. Requests can be made\n   * on the store. All requests made on the store will complete successfully\n   * before the operation's promise will resolve. If any request fails, the\n   * operation's promise will be rejected.\n   *\n   * @return {IDBObjectStore}\n   */\n  store() { return this.store_; }\n\n  /**\n   * Get the promise that wraps the transaction. This promise will resolve when\n   * all requests on the object store complete successfully and the transaction\n   * completes. If any request fails or the operation is aborted, the promise\n   * will be rejected.\n   *\n   * @return {!Promise}\n   */\n  promise() { return this.promise_; }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.DBConnection');\n\ngoog.require('shaka.offline.indexeddb.DBOperation');\ngoog.require('shaka.util.ArrayUtils');\n\n\n/**\n * DBConnection is used to manage an IndexedDB connection. It can create new\n * operations. If the connection is killed (via |destroy|) all pending\n * operations will be cancelled.\n */\nshaka.offline.indexeddb.DBConnection = class {\n  /**\n   * @param {IDBDatabase} connection A connection to an IndexedDB instance.\n   */\n  constructor(connection) {\n    /** @private {IDBDatabase} */\n    this.connection_ = connection;\n    /** @private {!Array.<shaka.offline.indexeddb.DBOperation>} */\n    this.pending_ = [];\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  destroy() {\n    return Promise.all(this.pending_.map((op) => {\n      return op.abort();\n    }));\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   */\n  startReadOnlyOperation(store) {\n    return this.startOperation_(store, 'readonly');\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   */\n  startReadWriteOperation(store) {\n    return this.startOperation_(store, 'readwrite');\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @param {string} type The type of operation being performed on the store.\n   *                      This determines what commands may be performed. This\n   *                      can either be \"readonly\" or \"readwrite\".\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   * @private\n   */\n  startOperation_(store, type) {\n    let transaction = this.connection_.transaction([store], type);\n    let operation = new shaka.offline.indexeddb.DBOperation(transaction, store);\n\n    this.pending_.push(operation);\n\n    // Once the operation is done (regardless of outcome) stop tracking it.\n    operation.promise().then(\n        () => this.stopTracking_(operation),\n        () => this.stopTracking_(operation)\n    );\n\n    return operation;\n  }\n\n  /**\n   * @param {!shaka.offline.indexeddb.DBOperation} operation\n   * @private\n   */\n  stopTracking_(operation) {\n    shaka.util.ArrayUtils.remove(this.pending_, operation);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.EmeSessionStorageCell');\n\ngoog.require('shaka.offline.indexeddb.DBConnection');\n\n\n/**\n * The implementation of the EME session storage cell.\n *\n * @implements {shaka.extern.EmeSessionStorageCell}\n */\nshaka.offline.indexeddb.EmeSessionStorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} store\n   */\n  constructor(connection, store) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.store_ = store;\n  }\n\n  /** @override */\n  destroy() { return this.connection_.destroy(); }\n\n  /** @override */\n  async getAll() {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.store_);\n    /** @type {!Array.<shaka.extern.EmeSessionDB>} */\n    const values = [];\n\n    await op.forEachEntry((key, value) => {\n      values.push(value);\n    });\n\n    await op.promise();\n    return values;\n  }\n\n  /** @override */\n  add(sessions) {\n    const op = this.connection_.startReadWriteOperation(this.store_);\n    const store = op.store();\n\n    for (const session of sessions) {\n      store.add(session);\n    }\n\n    return op.promise();\n  }\n\n  /** @override */\n  async remove(sessionIds) {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadWriteOperation(this.store_);\n\n    await op.forEachEntry((key, value, cursor) => {\n      if (sessionIds.indexOf(value.sessionId) >= 0) {\n        cursor.delete();\n      }\n    });\n\n    await op.promise();\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StorageCellHandle');\ngoog.provide('shaka.offline.StorageCellPath');\ngoog.provide('shaka.offline.StorageMuxer');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\n\n/**\n * @typedef {{\n *  mechanism: string,\n *  cell: string\n * }}\n *\n * @property {string} mechanism\n *  The name of the mechanism that holds the cell.\n * @property {string} cell\n *  The name of the cell in the mechanism.\n */\nshaka.offline.StorageCellPath;\n\n\n/**\n * @typedef {{\n *   path: shaka.offline.StorageCellPath,\n *   cell: !shaka.extern.StorageCell\n * }}\n *\n * @property {shaka.offline.StorageCellPath} path\n *   The path that maps to the cell.\n * @property {shaka.extern.StorageCell} cell\n *   The storage cell that the path points to within the storage muxer.\n */\nshaka.offline.StorageCellHandle;\n\n\n/**\n * StorageMuxer is responsible for managing StorageMechanisms and addressing\n * cells. The primary purpose of the muxer is to give the caller the correct\n * cell for the operations they want to perform.\n *\n * |findActive| will be used when the caller wants a cell that supports\n * add-operations. This will be used when saving new content to storage.\n *\n * |findAll| will be used when the caller want to look at all the content\n * in storage.\n *\n * |resolvePath| will be used to convert a path (from |findActive| and\n * |findAll|) into a cell, which it then returns.\n *\n * @implements {shaka.util.IDestroyable}\n */\nshaka.offline.StorageMuxer = class {\n  constructor() {\n    /**\n     * A key in this map is the name given when registering a StorageMechanism.\n     *\n     * @private {!Map.<string, !shaka.extern.StorageMechanism>}\n     */\n    this.mechanisms_ = new Map();\n  }\n\n  /**\n   * Free all resources used by the muxer, mechanisms, and cells. This should\n   * not affect the stored content.\n   *\n   * @override\n   */\n  destroy() {\n    /** @type {!Array.<!Promise>} */\n    const destroys = [];\n    for (const mechanism of this.mechanisms_.values()) {\n      destroys.push(mechanism.destroy());\n    }\n\n    // Empty the map so that subsequent calls will be no-ops.\n    this.mechanisms_.clear();\n\n    return Promise.all(destroys);\n  }\n\n  /**\n   * Initialize the storage muxer. This must be called before any other calls.\n   * This will initialize the muxer to use all mechanisms that have been\n   * registered with |StorageMuxer.register|.\n   *\n   * @return {!Promise}\n   */\n  init() {\n    // Add the new instance of each mechanism to the muxer.\n    const registry = shaka.offline.StorageMuxer.getRegistry_();\n    registry.forEach((factory, name) => {\n      const mech = factory();\n      if (mech) {\n        this.mechanisms_.set(name, mech);\n      } else {\n        shaka.log.info(\n            'Skipping ' + name + ' as it is not supported on this platform');\n      }\n    });\n\n    /** @type {!Array.<!Promise>} */\n    const initPromises = [];\n    for (const mechanism of this.mechanisms_.values()) {\n      initPromises.push(mechanism.init());\n    }\n\n    return Promise.all(initPromises);\n  }\n\n  /**\n   * Get a promise that will resolve with a storage cell that supports\n   * add-operations. If no cell can be found, the promise will be rejected.\n   *\n   * @return {shaka.offline.StorageCellHandle}\n   */\n  getActive() {\n    /** @type {?shaka.offline.StorageCellHandle} */\n    let handle = null;\n\n    this.mechanisms_.forEach((mechanism, mechanismName) => {\n      mechanism.getCells().forEach((cell, cellName) => {\n        // If this cell is not useful to us or we already have a handle, then\n        // we don't need to make a new handle.\n        if (cell.hasFixedKeySpace() || handle) { return; }\n\n        const path = {\n          mechanism: mechanismName,\n          cell: cellName,\n        };\n\n        handle = {\n          path: path,\n          cell: cell,\n        };\n      });\n    });\n\n    if (handle) {\n      return /** @type {shaka.offline.StorageCellHandle} */(handle);\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MISSING_STORAGE_CELL,\n        'Could not find a cell that supports add-operations');\n  }\n\n  /**\n   * @param {function(!shaka.offline.StorageCellPath,\n   *                  !shaka.extern.StorageCell)} callback\n   */\n  forEachCell(callback) {\n    this.mechanisms_.forEach((mechanism, mechanismName) => {\n      mechanism.getCells().forEach((cell, cellName) => {\n        const path = {\n          mechanism: mechanismName,\n          cell: cellName,\n        };\n\n        callback(path, cell);\n      });\n    });\n  }\n\n  /**\n   * Get a specific storage cell. The promise will resolve with the storage\n   * cell if it is found. If the storage cell is not found, the promise will\n   * be rejected.\n   *\n   * @param {string} mechanismName\n   * @param {string} cellName\n   * @return {!shaka.extern.StorageCell}\n   */\n  getCell(mechanismName, cellName) {\n    const mechanism = this.mechanisms_.get(mechanismName);\n    if (!mechanism) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.MISSING_STORAGE_CELL,\n          'Could not find mechanism with name ' + mechanismName);\n    }\n\n    const cell = mechanism.getCells().get(cellName);\n    if (!cell) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.MISSING_STORAGE_CELL,\n          'Could not find cell with name ' + cellName);\n    }\n\n    return cell;\n  }\n\n  /**\n   * @param {function(!shaka.extern.EmeSessionStorageCell)} callback\n   */\n  forEachEmeSessionCell(callback) {\n    this.mechanisms_.forEach((mechanism) => {\n      callback(mechanism.getEmeSessionCell());\n    });\n  }\n\n  /**\n   * Gets an arbitrary EME session cell that can be used for storing new session\n   * info.\n   *\n   * @return {!shaka.extern.EmeSessionStorageCell}\n   */\n  getEmeSessionCell() {\n    const mechanisms = Array.from(this.mechanisms_.keys());\n    if (!mechanisms.length) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.STORAGE_NOT_SUPPORTED,\n          'No supported storage mechanisms found');\n    }\n\n    return this.mechanisms_.get(mechanisms[0]).getEmeSessionCell();\n  }\n\n  /**\n   * Find the cell that the path points to. A path is made up of a mount point\n   * and a cell id. If a cell can be found, the cell will be returned. If no\n   * cell is found, null will be returned.\n   *\n   * @param {shaka.offline.StorageCellPath} path\n   * @return {shaka.extern.StorageCell}\n   */\n  resolvePath(path) {\n    const mechanism = this.mechanisms_.get(path.mechanism);\n\n    if (!mechanism) { return null; }\n\n    return mechanism.getCells().get(path.cell);\n  }\n\n  /**\n   * This will erase all previous content from storage. Using paths obtained\n   * before calling |erase| is discouraged, as cells may have changed during a\n   * erase.\n   *\n   * @return {!Promise}\n   */\n  async erase() {\n    // If we have initialized, we will use the existing mechanism instances.\n    /** @type {!Array.<!shaka.extern.StorageMechanism>} */\n    const mechanisms = Array.from(this.mechanisms_.values());\n    const alreadyInitialized = mechanisms.length > 0;\n\n    // If we have not initialized, we should still be able to erase.  This is\n    // critical to our ability to wipe the DB in case of a version mismatch.\n    // If there are no instances, create temporary ones and destroy them later.\n    if (!alreadyInitialized) {\n      const registry = shaka.offline.StorageMuxer.getRegistry_();\n      registry.forEach((factory, name) => {\n        const mech = factory();\n        if (mech) {\n          mechanisms.push(mech);\n        }\n      });\n    }\n\n    // Erase all storage mechanisms.\n    await Promise.all(mechanisms.map((m) => m.erase()));\n\n    // If we were erasing temporary instances, destroy them, too.\n    if (!alreadyInitialized) {\n      await Promise.all(mechanisms.map((m) => m.destroy()));\n    }\n  }\n\n  /**\n   * Register a storage mechanism for use with the default storage muxer. This\n   * will have no effect on any storage muxer already in main memory.\n   *\n   * @param {string} name\n   * @param {function():shaka.extern.StorageMechanism} factory\n   * @export\n   */\n  static register(name, factory) {\n    shaka.offline.StorageMuxer.registry_.set(name, factory);\n  }\n\n\n  /**\n   * Unregister a storage mechanism for use with the default storage muxer. This\n   * will have no effect on any storage muxer already in main memory.\n   *\n   * @param {string} name The name that the storage mechanism was registered\n   *                      under.\n   * @export\n   */\n  static unregister(name) {\n    shaka.offline.StorageMuxer.registry_.delete(name);\n  }\n\n  /**\n   * Check if there is support for storage on this platform. It is assumed that\n   * if there are any mechanisms registered, it means that storage is supported\n   * on this platform. We do not check if the mechanisms have any cells.\n   *\n   * @return {boolean}\n   */\n  static support() {\n    const registry = shaka.offline.StorageMuxer.getRegistry_();\n    // Make sure that we will have SOME mechanisms created by creating a\n    // mechanism and immediately destroying it.\n    for (const create of registry.values()) {\n      const instance = create();\n\n      if (instance) {\n        instance.destroy();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace the mechanism map used by the muxer. This should only be used\n   * in testing.\n   *\n   * @param {Map.<string, function():shaka.extern.StorageMechanism>} map\n   */\n  static overrideSupport(map) {\n    shaka.offline.StorageMuxer.override_ = map;\n  }\n\n  /**\n   * Undo a previous call to |overrideSupport|.\n   */\n  static clearOverride() {\n    shaka.offline.StorageMuxer.override_ = null;\n  }\n\n  /**\n   * Get the registry. If the support has been disabled, this will always\n   * an empty registry. Reading should always be done via |getRegistry_|.\n   *\n   * @return {!Map.<string, function():shaka.extern.StorageMechanism>}\n   * @private\n   */\n  static getRegistry_() {\n    const override = shaka.offline.StorageMuxer.override_;\n    const registry = shaka.offline.StorageMuxer.registry_;\n\n    if (COMPILED) {\n      return registry;\n    } else {\n      return override || registry;\n    }\n  }\n};\n\n\n/**\n * @private {Map.<string, function():shaka.extern.StorageMechanism>}\n */\nshaka.offline.StorageMuxer.override_ = null;\n\n\n/**\n * @private {!Map.<string, function():shaka.extern.StorageMechanism>}\n */\nshaka.offline.StorageMuxer.registry_ = new Map();\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.StorageMechanism');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.offline.indexeddb.EmeSessionStorageCell');\ngoog.require('shaka.offline.indexeddb.V1StorageCell');\ngoog.require('shaka.offline.indexeddb.V2StorageCell');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A storage mechanism to manage storage cells for an indexed db instance.\n * The cells are just for interacting with the stores that are found in the\n * database instance. The mechanism is responsible for creating new stores\n * when opening the database. If the database is too old of a version, a\n * cell will be added for the old stores but the cell won't support add\n * operations. The mechanism will create the new versions of the stores and\n * will allow add operations for those stores.\n *\n * @implements {shaka.extern.StorageMechanism}\n */\nshaka.offline.indexeddb.StorageMechanism = class {\n  constructor() {\n    /** @private {IDBDatabase} */\n    this.db_ = null;\n\n    /** @private {shaka.extern.StorageCell} */\n    this.v1_ = null;\n    /** @private {shaka.extern.StorageCell} */\n    this.v2_ = null;\n    /** @private {shaka.extern.StorageCell} */\n    this.v3_ = null;\n    /** @private {shaka.extern.EmeSessionStorageCell} */\n    this.sessions_ = null;\n  }\n\n  /**\n   * @override\n   */\n  init() {\n    const name = shaka.offline.indexeddb.StorageMechanism.DB_NAME;\n    const version = shaka.offline.indexeddb.StorageMechanism.VERSION;\n\n    let p = new shaka.util.PublicPromise();\n    let open = window.indexedDB.open(name, version);\n    open.onsuccess = (event) => {\n      let db = event.target.result;\n      this.db_ = db;\n      this.v1_ = shaka.offline.indexeddb.StorageMechanism.createV1_(db);\n      this.v2_ = shaka.offline.indexeddb.StorageMechanism.createV2_(db);\n      this.v3_ = shaka.offline.indexeddb.StorageMechanism.createV3_(db);\n      this.sessions_ =\n          shaka.offline.indexeddb.StorageMechanism.createEmeSession_(db);\n      p.resolve();\n    };\n    open.onupgradeneeded = (event) => {\n      // Add object stores for the latest version only.\n      this.createStores_(event.target.result);\n    };\n    open.onerror = (event) => {\n      p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.INDEXED_DB_ERROR,\n          open.error));\n\n      // Firefox will raise an error on the main thread unless we stop it here.\n      event.preventDefault();\n    };\n\n    return p;\n  }\n\n  /**\n   * @override\n   */\n  async destroy() {\n    if (this.v1_) { await this.v1_.destroy(); }\n    if (this.v2_) { await this.v2_.destroy(); }\n    if (this.v3_) { await this.v3_.destroy(); }\n    if (this.sessions_) { await this.sessions_.destroy(); }\n\n    // If we were never initialized, then |db_| will still be null.\n    if (this.db_) { this.db_.close(); }\n  }\n\n  /**\n   * @override\n   */\n  getCells() {\n    const map = new Map();\n\n    if (this.v1_) { map.set('v1', this.v1_); }\n    if (this.v2_) { map.set('v2', this.v2_); }\n    if (this.v3_) { map.set('v3', this.v3_); }\n\n    return map;\n  }\n\n  /**\n   * @override\n   */\n  getEmeSessionCell() {\n    goog.asserts.assert(this.sessions_, 'Cannot be destroyed.');\n    return this.sessions_;\n  }\n\n  /**\n   * @override\n   */\n  async erase() {\n    // Not all cells may have been created, so only destroy the ones that\n    // were created.\n    if (this.v1_) { await this.v1_.destroy(); }\n    if (this.v2_) { await this.v2_.destroy(); }\n    if (this.v3_) { await this.v3_.destroy(); }\n\n    // |db_| will only be null if the muxer was not initialized. We need to\n    // close the connection in order delete the database without it being\n    // blocked.\n    if (this.db_) { this.db_.close(); }\n\n    await shaka.offline.indexeddb.StorageMechanism.deleteAll_();\n\n    // Reset before initializing.\n    this.db_ = null;\n    this.v1_ = null;\n    this.v2_ = null;\n    this.v3_ = null;\n\n    await this.init();\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV1_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V1_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V1_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v1 idb storage cell');\n\n      return new shaka.offline.indexeddb.V1StorageCell(\n          db,\n          segmentStore,\n          manifestStore);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV2_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V2_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V2_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v2 idb storage cell');\n\n      return new shaka.offline.indexeddb.V2StorageCell(\n          db,\n          segmentStore,\n          manifestStore,\n          true);  // Are keys locked? Yes, this means no new additions.\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV3_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V3_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V3_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v3 idb storage cell');\n\n      // Version 3 uses the same structure as version 2, so we can use the same\n      // cells but it can support new entries.\n      return new shaka.offline.indexeddb.V2StorageCell(\n          db,\n          segmentStore,\n          manifestStore,\n          false); // Are keys locked? No, this means we can add new entries.\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.EmeSessionStorageCell}\n   * @private\n   */\n  static createEmeSession_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const store = StorageMechanism.SESSION_ID_STORE;\n    if (db.objectStoreNames.contains(store)) {\n      shaka.log.debug('Mounting session ID idb storage cell');\n      return new shaka.offline.indexeddb.EmeSessionStorageCell(db, store);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @private\n   */\n  createStores_(db) {\n    const storeNames = [\n      shaka.offline.indexeddb.StorageMechanism.V3_SEGMENT_STORE,\n      shaka.offline.indexeddb.StorageMechanism.V3_MANIFEST_STORE,\n      shaka.offline.indexeddb.StorageMechanism.SESSION_ID_STORE,\n    ];\n\n    for (const name of storeNames) {\n      if (!db.objectStoreNames.contains(name)) {\n        db.createObjectStore(name, {autoIncrement: true});\n      }\n    }\n  }\n\n  /**\n   * Delete the indexed db instance so that all stores are deleted and cleared.\n   * This will force the database to a like-new state next time it opens.\n   *\n   * @return {!Promise}\n   * @private\n   */\n  static deleteAll_() {\n    const name = shaka.offline.indexeddb.StorageMechanism.DB_NAME;\n\n    let p = new shaka.util.PublicPromise();\n\n    let del = window.indexedDB.deleteDatabase(name);\n    del.onblocked = (event) => {\n      shaka.log.warning('Deleting', name, 'is being blocked');\n    };\n    del.onsuccess = (event) => {\n      p.resolve();\n    };\n    del.onerror = (event) => {\n      p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.INDEXED_DB_ERROR,\n          del.error));\n\n      // Firefox will raise an error on the main thread unless we stop it here.\n      event.preventDefault();\n    };\n\n    return p;\n  }\n};\n\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.DB_NAME = 'shaka_offline_db';\n/** @const {number} */\nshaka.offline.indexeddb.StorageMechanism.VERSION = 4;\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V1_SEGMENT_STORE = 'segment';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V2_SEGMENT_STORE = 'segment-v2';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V3_SEGMENT_STORE = 'segment-v3';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V1_MANIFEST_STORE = 'manifest';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V2_MANIFEST_STORE = 'manifest-v2';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V3_MANIFEST_STORE = 'manifest-v3';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.SESSION_ID_STORE = 'session-ids';\n\n\n// Since this may be called before the polyfills remove indexeddb support from\n// some platforms (looking at you Chromecast), we need to check for support\n// when we create the mechanism.\n//\n// Thankfully the storage muxer api allows us to return a null mechanism\n// to indicate that the mechanism is not supported on this platform.\nshaka.offline.StorageMuxer.register(\n    'idb',\n    () => {\n      return window.indexedDB ?\n              new shaka.offline.indexeddb.StorageMechanism() :\n              null;\n    });\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.V1StorageCell');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.offline.indexeddb.DBConnection');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * The V1StorageCell is for all stores that follow the shaka.externs V2 offline\n * types. This storage cell will only work for version 1 indexed db database\n * schemes.\n *\n * @implements {shaka.extern.StorageCell}\n */\nshaka.offline.indexeddb.V1StorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} segmentStore\n   * @param {string} manifestStore\n   */\n  constructor(connection, segmentStore, manifestStore) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.segmentStore_ = segmentStore;\n    /** @private {string} */\n    this.manifestStore_ = manifestStore;\n  }\n\n  /**\n   * @override\n   */\n  destroy() { return this.connection_.destroy(); }\n\n  /**\n   * @override\n   */\n  hasFixedKeySpace() {\n    // We do not allow adding new values to V1 databases.\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  addSegments(segments) { return this.rejectAdd_(this.segmentStore_); }\n\n  /**\n   * @override\n   */\n  removeSegments(keys, onRemove) {\n    return this.remove_(this.segmentStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getSegments(keys) {\n    const convertSegmentData =\n        shaka.offline.indexeddb.V1StorageCell.convertSegmentData_;\n\n    return this.get_(this.segmentStore_, keys).then((segments) => {\n      return segments.map(convertSegmentData);\n    });\n  }\n\n  /**\n   * @override\n   */\n  addManifests(manifests) { return this.rejectAdd_(this.manifestStore_); }\n\n  /**\n   * @override\n   */\n  updateManifestExpiration(key, newExpiration) {\n    let op = this.connection_.startReadWriteOperation(this.manifestStore_);\n    let store = op.store();\n\n    let p = new shaka.util.PublicPromise();\n\n    store.get(key).onsuccess = (event) => {\n      // Make sure a defined value was found. Indexeddb treats \"no value found\"\n      // as a success with an undefined result.\n      let manifest = event.target.result;\n\n      // Indexeddb does not fail when you get a value that is not in the\n      // database. It will return an undefined value. However, we expect\n      // the value to never be null, so something is wrong if we get a\n      // falsey value.\n      if (manifest) {\n        // Since this store's scheme uses in-line keys, we don't need to specify\n        // the key with |put|.\n        goog.asserts.assert(\n            manifest.key == key,\n            'With in-line keys, the keys should match');\n\n        manifest.expiration = newExpiration;\n        store.put(manifest);\n\n        p.resolve();\n      } else {\n        p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + key));\n      }\n    };\n\n    // Only return our promise after the operation completes.\n    return op.promise().then(() => p);\n  }\n\n  /**\n   * @override\n   */\n  removeManifests(keys, onRemove) {\n    return this.remove_(this.manifestStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getManifests(keys) {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    return this.get_(this.manifestStore_, keys).then((manifests) => {\n      return manifests.map(V1StorageCell.convertManifest_);\n    });\n  }\n\n  /**\n   * @override\n   */\n  async getAllManifests() {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.manifestStore_);\n    /** @type {!Map.<number, shaka.extern.ManifestDB>} */\n    const values = new Map();\n\n    await op.forEachEntry((/** number */ key, /** !Object */ value) => {\n      values.set(key, V1StorageCell.convertManifest_(value));\n    });\n\n    await op.promise();\n    return values;\n  }\n\n  /**\n   * @param {string} storeName\n   * @return {!Promise}\n   * @private\n   */\n  rejectAdd_(storeName) {\n    return Promise.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.STORAGE,\n      shaka.util.Error.Code.NEW_KEY_OPERATION_NOT_SUPPORTED,\n      'Cannot add new value to ' + storeName));\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @param {function(number)} onRemove\n   * @return {!Promise}\n   * @private\n   */\n  remove_(storeName, keys, onRemove) {\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    keys.forEach((key) => {\n      store.delete(key).onsuccess = () => onRemove(key);\n    });\n\n    return op.promise();\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @return {!Promise.<!Array.<T>>}\n   * @template T\n   * @private\n   */\n  get_(storeName, keys) {\n    let op = this.connection_.startReadOnlyOperation(storeName);\n    let store = op.store();\n\n    let values = {};\n    let missing = [];\n\n    // Use a map to store the objects so that we can reorder the results to\n    // match the order of |keys|.\n    keys.forEach((key) => {\n      store.get(key).onsuccess = (event) => {\n        let value = event.target.result;\n        // Make sure a defined value was found. Indexeddb treats no-value found\n        // as a success with an undefined result.\n        if (value == undefined) {\n          missing.push(key);\n        }\n\n        values[key] = value;\n      };\n    });\n\n    // Wait until the operation completes or else values may be missing from\n    // |values|. Use the original key list to convert the map to a list so that\n    // the order will match.\n    return op.promise().then(() => {\n      if (missing.length) {\n        return Promise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + missing\n        ));\n      }\n\n      return keys.map((key) => values[key]);\n    });\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.ManifestDB}\n   * @private\n   */\n  static convertManifest_(old) {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    // Old Manifest Format:\n    // {\n    //   key: number,\n    //   originalManifestUri: string,\n    //   duration: number,\n    //   size: number,\n    //   expiration: number,\n    //   periods: !Array.<shaka.extern.PeriodDB>,\n    //   sessionIds: !Array.<string>,\n    //   drmInfo: ?shaka.extern.DrmInfo,\n    //   appMetadata: Object\n    //  }\n\n    goog.asserts.assert(\n        old.originalManifestUri != null,\n        'Old manifest format should have an originalManifestUri field');\n    goog.asserts.assert(\n        old.duration != null,\n        'Old manifest format should have a duration field');\n    goog.asserts.assert(\n        old.size != null,\n        'Old manifest format should have a size field');\n    goog.asserts.assert(\n        old.periods != null,\n        'Old manifest format should have a periods field');\n    goog.asserts.assert(\n        old.sessionIds != null,\n        'Old manifest format should have a session ids field');\n    goog.asserts.assert(\n        old.appMetadata != null,\n        'Old manifest format should have an app metadata field');\n\n    return {\n      originalManifestUri: old.originalManifestUri,\n      duration: old.duration,\n      size: old.size,\n      expiration: old.expiration == null ? Infinity : old.expiration,\n      periods: old.periods.map(V1StorageCell.convertPeriod_),\n      sessionIds: old.sessionIds,\n      drmInfo: old.drmInfo,\n      appMetadata: old.appMetadata,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.PeriodDB}\n   * @private\n   */\n  static convertPeriod_(old) {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    // Old Period Format:\n    // {\n    //   startTime: number,\n    //   streams: !Array.<shaka.extern.StreamDB>\n    // }\n\n    goog.asserts.assert(\n      old.startTime != null,\n      'Old period format should have a start time field');\n    goog.asserts.assert(\n      old.streams != null,\n      'Old period format should have a streams field');\n\n    // In the case that this is really old (like really old, like dinosaurs\n    // roaming the Earth old) there may be no variants, so we need to add those.\n    V1StorageCell.fillMissingVariants_(old);\n\n    old.streams.forEach((stream) => {\n      const message = 'After filling in missing variants, ' +\n                      'each stream should have variant ids';\n      goog.asserts.assert(stream.variantIds, message);\n    });\n\n    return {\n      startTime: old.startTime,\n      streams: old.streams.map(V1StorageCell.convertStream_),\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.StreamDB}\n   * @private\n   */\n  static convertStream_(old) {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    // Old Stream Format\n    // {\n    //   id: number,\n    //   primary: boolean,\n    //   presentationTimeOffset: number,\n    //   contentType: string,\n    //   mimeType: string,\n    //   codecs: string,\n    //   frameRate: (number|undefined),\n    //   kind: (string|undefined),\n    //   language: string,\n    //   label: ?string,\n    //   width: ?number,\n    //   height: ?number,\n    //   initSegmentUri: ?string,\n    //   encrypted: boolean,\n    //   keyId: ?string,\n    //   segments: !Array.<shaka.extern.SegmentDB>,\n    //   variantIds: ?Array.<number>\n    // }\n\n    goog.asserts.assert(\n        old.id != null,\n        'Old stream format should have an id field');\n    goog.asserts.assert(\n        old.primary != null,\n        'Old stream format should have a primary field');\n    goog.asserts.assert(\n        old.presentationTimeOffset != null,\n        'Old stream format should have a presentation time offset field');\n    goog.asserts.assert(\n        old.contentType != null,\n        'Old stream format should have a content type field');\n    goog.asserts.assert(\n        old.mimeType != null,\n        'Old stream format should have a mime type field');\n    goog.asserts.assert(\n        old.codecs != null,\n        'Old stream format should have a codecs field');\n    goog.asserts.assert(\n        old.language != null,\n        'Old stream format should have a language field');\n    goog.asserts.assert(\n        old.encrypted != null,\n        'Old stream format should have an encrypted field');\n    goog.asserts.assert(\n        old.segments != null,\n        'Old stream format should have a segments field');\n\n    const initSegmentKey = old.initSegmentUri ?\n        V1StorageCell.getKeyFromSegmentUri_(old.initSegmentUri) : null;\n\n    return {\n      id: old.id,\n      originalId: null,\n      primary: old.primary,\n      presentationTimeOffset: old.presentationTimeOffset,\n      contentType: old.contentType,\n      mimeType: old.mimeType,\n      codecs: old.codecs,\n      frameRate: old.frameRate,\n      kind: old.kind,\n      language: old.language,\n      label: old.label,\n      width: old.width,\n      height: old.height,\n      initSegmentKey: initSegmentKey,\n      encrypted: old.encrypted,\n      keyId: old.keyId,\n      segments: old.segments.map(V1StorageCell.convertSegment_),\n      variantIds: old.variantIds,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.SegmentDB}\n   * @private\n   */\n  static convertSegment_(old) {\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n\n    // Old Segment Format\n    // {\n    //   startTime: number,\n    //   endTime: number,\n    //   uri: string\n    // }\n\n    goog.asserts.assert(\n        old.startTime != null,\n        'The old segment format should have a start time field');\n    goog.asserts.assert(\n        old.endTime != null,\n        'The old segment format should have an end time field');\n    goog.asserts.assert(\n        old.uri != null,\n        'The old segment format should have a uri field');\n\n    // Since we don't want to use the uri anymore, we need to parse the key\n    // from it.\n    const dataKey = V1StorageCell.getKeyFromSegmentUri_(old.uri);\n\n    return {\n      startTime: old.startTime,\n      endTime: old.endTime,\n      dataKey: dataKey,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.SegmentDataDB}\n   * @private\n   */\n  static convertSegmentData_(old) {\n    // Old Segment Format:\n    // {\n    //   key: number,\n    //   data: ArrayBuffer\n    // }\n\n    goog.asserts.assert(\n        old.key != null,\n        'The old segment data format should have a key field');\n    goog.asserts.assert(\n        old.data != null,\n        'The old segment data format should have a data field');\n\n    return {data: old.data};\n  }\n\n  /**\n   * @param {string} uri\n   * @return {number}\n   * @private\n   */\n  static getKeyFromSegmentUri_(uri) {\n    let parts = null;\n\n    // Try parsing the uri as the original Shaka Player 2.0 uri.\n    parts = /^offline:[0-9]+\\/[0-9]+\\/([0-9]+)$/.exec(uri);\n    if (parts) {\n      return Number(parts[1]);\n    }\n\n    // Just before Shaka Player 2.3 the uri format was changed to remove some\n    // of the un-used information from the uri and make the segment uri and\n    // manifest uri follow a similar format. However the old storage system\n    // was still in place, so it is possible for Storage V1 Cells to have\n    // Storage V2 uris.\n    parts = /^offline:segment\\/([0-9]+)$/.exec(uri);\n    if (parts) {\n      return Number(parts[1]);\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        'Could not parse uri ' + uri);\n  }\n\n  /**\n   * Take a period and check if the streams need to have variants generated.\n   * Before Shaka Player moved to its variants model, there were no variants.\n   * This will fill missing variants into the given object.\n   *\n   * @param {!Object} period\n   * @private\n   */\n  static fillMissingVariants_(period) {\n    const AUDIO = shaka.util.ManifestParserUtils.ContentType.AUDIO;\n    const VIDEO = shaka.util.ManifestParserUtils.ContentType.VIDEO;\n\n    // There are three cases:\n    //  1. All streams' variant ids are null\n    //  2. All streams' variant ids are non-null\n    //  3. Some streams' variant ids are null and other are non-null\n    // Case 3 is invalid and should never happen in production.\n\n    let audio = period.streams.filter((s) => s.contentType == AUDIO);\n    let video = period.streams.filter((s) => s.contentType == VIDEO);\n\n    // Case 2 - There is nothing we need to do, so let's just get out of here.\n    if (audio.every((s) => s.variantIds) && video.every((s) => s.variantIds)) {\n      return;\n    }\n\n    // Case 3... We don't want to be in case three.\n    goog.asserts.assert(\n        audio.every((s) => !s.variantIds),\n        'Some audio streams have variant ids and some do not.');\n    goog.asserts.assert(\n        video.every((s) => !s.variantIds),\n        'Some video streams have variant ids and some do not.');\n\n    // Case 1 - Populate all the variant ids (putting us back to case 2).\n    // Since all the variant ids are null, we need to first make them into\n    // valid arrays.\n    audio.forEach((s) => { s.variantIds = []; });\n    video.forEach((s) => { s.variantIds = []; });\n\n    let nextId = 0;\n\n    // It is not possible in Shaka Player's pre-variant world to have audio-only\n    // and video-only content mixed in with audio-video content. So we can\n    // assume that there is only audio-only or video-only if one group is empty.\n\n    // Everything is video-only content - so each video stream gets to be its\n    // own variant.\n    if (video.length && !audio.length) {\n      shaka.log.debug('Found video-only content. Creating variants for video.');\n      let variantId = nextId++;\n      video.forEach((s) => { s.variantIds.push(variantId); });\n    }\n\n    // Everything is audio-only content - so each audio stream gets to be its\n    // own variant.\n    if (!video.length && audio.length) {\n      shaka.log.debug('Found audio-only content. Creating variants for audio.');\n      let variantId = nextId++;\n      audio.forEach((s) => { s.variantIds.push(variantId); });\n    }\n\n    // Everything is audio-video content.\n    if (video.length && audio.length) {\n      shaka.log.debug('Found audio-video content. Creating variants.');\n      audio.forEach((a) => {\n        video.forEach((v) => {\n          let variantId = nextId++;\n          a.variantIds.push(variantId);\n          v.variantIds.push(variantId);\n        });\n      });\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.V2StorageCell');\n\ngoog.require('shaka.offline.indexeddb.DBConnection');\ngoog.require('shaka.util.Error');\n\n\n/**\n * The V2StorageCell is for all stores that follow the shaka.externs V2 offline\n * types. This storage cell will work for both IndexedDB version 2 and 3 as\n * both used the shaka.externs V2 offline types.\n *\n * @implements {shaka.extern.StorageCell}\n */\nshaka.offline.indexeddb.V2StorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} segmentStore\n   * @param {string} manifestStore\n   * @param {boolean} isFixedKey\n   */\n  constructor(connection,\n              segmentStore,\n              manifestStore,\n              isFixedKey) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.segmentStore_ = segmentStore;\n    /** @private {string} */\n    this.manifestStore_ = manifestStore;\n\n    /** @private {boolean} */\n    this.isFixedKey_ = isFixedKey;\n  }\n\n  /**\n   * @override\n   */\n  destroy() { return this.connection_.destroy(); }\n\n  /**\n   * @override\n   */\n  hasFixedKeySpace() { return this.isFixedKey_; }\n\n  /**\n   * @override\n   */\n  addSegments(segments) { return this.add_(this.segmentStore_, segments); }\n\n  /**\n   * @override\n   */\n  removeSegments(keys, onRemove) {\n    return this.remove_(this.segmentStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getSegments(keys) { return this.get_(this.segmentStore_, keys); }\n\n  /**\n   * @override\n   */\n  addManifests(manifests) { return this.add_(this.manifestStore_, manifests); }\n\n  /**\n   * @override\n   */\n  updateManifestExpiration(key, newExpiration) {\n    let op = this.connection_.startReadWriteOperation(this.manifestStore_);\n    let store = op.store();\n    store.get(key).onsuccess = (e) => {\n      let found = e.target.result;\n      // If we can't find the value, then there is nothing for us to update.\n      if (found) {\n        found.expiration = newExpiration;\n        store.put(found, key);\n      }\n    };\n\n    return op.promise();\n  }\n\n  /**\n   * @override\n   */\n  removeManifests(keys, onRemove) {\n    return this.remove_(this.manifestStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getManifests(keys) { return this.get_(this.manifestStore_, keys); }\n\n  /**\n   * @override\n   */\n  async getAllManifests() {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.manifestStore_);\n    /** @type {!Map.<number, shaka.extern.ManifestDB>} */\n    const values = new Map();\n\n    await op.forEachEntry(\n        (/** number */ key, /** shaka.extern.ManifestDB */ value) => {\n          values.set(key, value);\n        });\n\n    await op.promise();\n    return values;\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<T>} values\n   * @return {!Promise.<!Array.<number>>}\n   * @template T\n   * @private\n   */\n  add_(storeName, values) {\n    // In the case that this storage cell does not support add-operations, just\n    // reject the request immediately instead of allowing it to try.\n    if (this.isFixedKey_) {\n      return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.NEW_KEY_OPERATION_NOT_SUPPORTED,\n        'Cannot add new value to ' + storeName));\n    }\n\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    /** @type {!Array.<number>} */\n    let keys = [];\n\n    // Write each segment out. When each request completes, the key will\n    // be in |event.target.result| as can be seen in\n    // https://w3c.github.io/IndexedDB/#key-generator-construct.\n    values.forEach((value) => {\n      let request = store.add(value);\n      request.onsuccess = (event) => {\n        let key = event.target.result;\n        keys.push(key);\n      };\n    });\n\n    // Wait until the operation completes or else |keys| will not be fully\n    // populated.\n    return op.promise().then(() => keys);\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @param {function(number)} onRemove\n   * @return {!Promise}\n   * @private\n   */\n  remove_(storeName, keys, onRemove) {\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    keys.forEach((key) => {\n      store.delete(key).onsuccess = () => onRemove(key);\n    });\n\n    return op.promise();\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @return {!Promise.<!Array.<T>>}\n   * @template T\n   * @private\n   */\n  get_(storeName, keys) {\n    let op = this.connection_.startReadOnlyOperation(storeName);\n    let store = op.store();\n\n    let values = {};\n    let missing = [];\n\n    // Use a map to store the objects so that we can reorder the results to\n    // match the order of |keys|.\n    keys.forEach((key) => {\n      let request = store.get(key);\n      request.onsuccess = () => {\n        // Make sure a defined value was found. Indexeddb treats no-value found\n        // as a success with an undefined result.\n        if (request.result == undefined) {\n          missing.push(key);\n        }\n\n        values[key] = request.result;\n      };\n    });\n\n    // Wait until the operation completes or else values may be missing from\n    // |values|. Use the original key list to convert the map to a list so that\n    // the order will match.\n    return op.promise().then(() => {\n      if (missing.length) {\n        return Promise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.RECOVERABLE,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + missing\n        ));\n      }\n\n      return keys.map((key) => values[key]);\n    });\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineUri');\n\n\n/**\n * The OfflineUri class contains all the components that make up the offline\n * uri. The components are:\n *    TYPE: Used to know what type of data the uri points to. It can either\n *          be \"manifest\" or \"segment\".\n *    MECHANISM: The name of the mechanism that manages the storage cell that\n *               holds the data.\n *    CELL: The name of the cell that holds the data.\n *    KEY: The key that the data is stored under in the cell.\n */\nshaka.offline.OfflineUri = class {\n  /**\n   * @param {string} type\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   */\n  constructor(type, mechanism, cell, key) {\n    /**\n     * @private {string}\n     * @const\n     */\n    this.type_ = type;\n    /**\n     * @private {string}\n     * @const\n     */\n    this.mechanism_ = mechanism;\n    /**\n     * @private {string}\n     * @const\n     */\n    this.cell_ = cell;\n    /**\n     * @private {number}\n     * @const\n     */\n    this.key_ = key;\n\n    /**\n     * @private {string}\n     * @const\n     */\n    this.asString_ = [\n      'offline:', type, '/', mechanism, '/', cell, '/', key,\n    ].join('');\n  }\n\n  /** @return {boolean} */\n  isManifest() { return this.type_ == 'manifest'; }\n\n  /** @return {boolean} */\n  isSegment() { return this.type_ == 'segment'; }\n\n  /** @return {string} */\n  mechanism() { return this.mechanism_; }\n\n  /** @return {string} */\n  cell() { return this.cell_; }\n\n  /** @return {number} */\n  key() { return this.key_; }\n\n  /** @override */\n  toString() { return this.asString_; }\n\n  /**\n   * @param {string} uri\n   * @return {?shaka.offline.OfflineUri}\n   */\n  static parse(uri) {\n    let parts = /^offline:([a-z]+)\\/([^/]+)\\/([^/]+)\\/([0-9]+)$/.exec(uri);\n    if (parts == null) { return null; }\n\n    let type = parts[1];\n    if (type != 'manifest' && type != 'segment') { return null; }\n\n    let mechanism = parts[2];\n    if (!mechanism) { return null; }\n\n    let cell = parts[3];\n    if (!cell) { return null; }\n\n    let key = Number(parts[4]);\n    if (type == null) { return null; }\n\n    return new shaka.offline.OfflineUri(type, mechanism, cell, key);\n  }\n\n  /**\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   * @return {!shaka.offline.OfflineUri}\n   */\n  static manifest(mechanism, cell, key) {\n    return new shaka.offline.OfflineUri('manifest', mechanism, cell, key);\n  }\n\n  /**\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   * @return {!shaka.offline.OfflineUri}\n   */\n  static segment(mechanism, cell, key) {\n    return new shaka.offline.OfflineUri('segment', mechanism, cell, key);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.ManifestConverter');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n * Utility class for converting database manifest objects back to normal\n * player-ready objects. Used by the offline system to convert on-disk\n * objects back to the in-memory objects.\n */\nshaka.offline.ManifestConverter = class {\n  /**\n   * Create a new manifest converter. Need to know the mechanism and cell that\n   * the manifest is from so that all segments paths can be created.\n   *\n   * @param {string} mechanism\n   * @param {string} cell\n   */\n  constructor(mechanism, cell) {\n    /** @private {string} */\n    this.mechanism_ = mechanism;\n    /** @private {string} */\n    this.cell_ = cell;\n  }\n\n  /**\n   * Convert a |shaka.extern.ManifestDB| object to a |shaka.extern.Manifest|\n   * object.\n   *\n   * @param {shaka.extern.ManifestDB} manifestDB\n   * @return {shaka.extern.Manifest}\n   */\n  fromManifestDB(manifestDB) {\n    let timeline = new shaka.media.PresentationTimeline(null, 0);\n    timeline.setDuration(manifestDB.duration);\n\n    let periods = manifestDB.periods.map((period) =>\n        this.fromPeriodDB(period, timeline));\n\n    let drmInfos = manifestDB.drmInfo ? [manifestDB.drmInfo] : [];\n    if (manifestDB.drmInfo) {\n      periods.forEach((period) => {\n        period.variants.forEach((variant) => { variant.drmInfos = drmInfos; });\n      });\n    }\n\n    return {\n      presentationTimeline: timeline,\n      minBufferTime: 2,\n      offlineSessionIds: manifestDB.sessionIds,\n      periods: periods,\n    };\n  }\n\n  /**\n   * Create a period object from a database period.\n   *\n   * @param {shaka.extern.PeriodDB} period\n   * @param {shaka.media.PresentationTimeline} timeline\n   * @return {shaka.extern.Period}\n   */\n  fromPeriodDB(period, timeline) {\n    /** @type {!Array.<shaka.extern.StreamDB>} */\n    let audioStreams = period.streams.filter((stream) => this.isAudio_(stream));\n    /** @type {!Array.<shaka.extern.StreamDB>} */\n    let videoStreams = period.streams.filter((stream) => this.isVideo_(stream));\n\n    /** @type {!Map.<number, shaka.extern.Variant>} */\n    const variants = this.createVariants(audioStreams, videoStreams);\n\n    /** @type {!Array.<shaka.extern.Stream>} */\n    let textStreams = period.streams\n        .filter((stream) => this.isText_(stream))\n        .map((stream) => this.fromStreamDB_(stream));\n\n    period.streams.forEach((stream, i) => {\n      /** @type {!Array.<!shaka.media.SegmentReference>} */\n      let refs = stream.segments.map((segment, index) => {\n        return this.fromSegmentDB_(index, segment);\n      });\n\n      timeline.notifySegments(refs, period.startTime);\n    });\n\n    return {\n      startTime: period.startTime,\n      variants: Array.from(variants.values()),\n      textStreams: textStreams,\n    };\n  }\n\n  /**\n   * Recreates Variants from audio and video StreamDB collections.\n   *\n   * @param {!Array.<!shaka.extern.StreamDB>} audios\n   * @param {!Array.<!shaka.extern.StreamDB>} videos\n   * @return {!Map.<number, !shaka.extern.Variant>}\n   */\n  createVariants(audios, videos) {\n    // Get all the variant ids from all audio and video streams.\n    /** @type {!Set.<number>} */\n    const variantIds = new Set();\n    for (const stream of audios) {\n      for (const id of stream.variantIds) { variantIds.add(id); }\n    }\n    for (const stream of videos) {\n      for (const id of stream.variantIds) { variantIds.add(id); }\n    }\n\n    /** @type {!Map.<number, shaka.extern.Variant>} */\n    const variantMap = new Map();\n    for (const id of variantIds) {\n      variantMap.set(id, this.createEmptyVariant_(id));\n    }\n\n    // Assign each audio stream to its variants.\n    for (const audio of audios) {\n      /** @type {shaka.extern.Stream} */\n      const stream = this.fromStreamDB_(audio);\n\n      for (const variantId of audio.variantIds) {\n        const variant = variantMap.get(variantId);\n\n        goog.asserts.assert(\n            !variant.audio, 'A variant should only have one audio stream');\n\n        variant.language = stream.language;\n        variant.primary = variant.primary || stream.primary;\n        variant.audio = stream;\n      }\n    }\n\n    // Assign each video stream to its variants.\n    for (const video of videos) {\n      /** @type {shaka.extern.Stream} */\n      const stream = this.fromStreamDB_(video);\n\n      for (const variantId of video.variantIds) {\n        const variant = variantMap.get(variantId);\n\n        goog.asserts.assert(\n            !variant.video, 'A variant should only have one video stream');\n\n        variant.primary = variant.primary || stream.primary;\n        variant.video = stream;\n      }\n    }\n\n    return variantMap;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} streamDB\n   * @return {shaka.extern.Stream}\n   * @private\n   */\n  fromStreamDB_(streamDB) {\n    /** @type {!Array.<!shaka.media.SegmentReference>} */\n    let segments = streamDB.segments.map((segment, index) =>\n        this.fromSegmentDB_(index, segment));\n\n    /** @type {!shaka.media.SegmentIndex} */\n    let segmentIndex = new shaka.media.SegmentIndex(segments);\n\n    /** @type {shaka.extern.Stream} */\n    let stream = {\n      id: streamDB.id,\n      originalId: streamDB.originalId,\n      createSegmentIndex: () => Promise.resolve(),\n      findSegmentPosition: (index) => segmentIndex.find(index),\n      getSegmentReference: (index) => segmentIndex.get(index),\n      initSegmentReference: null,\n      presentationTimeOffset: streamDB.presentationTimeOffset,\n      mimeType: streamDB.mimeType,\n      codecs: streamDB.codecs,\n      width: streamDB.width || undefined,\n      height: streamDB.height || undefined,\n      frameRate: streamDB.frameRate || undefined,\n      kind: streamDB.kind,\n      encrypted: streamDB.encrypted,\n      keyId: streamDB.keyId,\n      language: streamDB.language,\n      label: streamDB.label || null,\n      type: streamDB.contentType,\n      primary: streamDB.primary,\n      trickModeVideo: null,\n      // TODO(modmaker): Store offline?\n      emsgSchemeIdUris: null,\n      roles: [],\n      channelsCount: null,\n      closedCaptions: null,\n    };\n\n    if (streamDB.initSegmentKey != null) {\n      stream.initSegmentReference =\n          this.fromInitSegmentDB_(streamDB.initSegmentKey);\n    }\n\n    return stream;\n  }\n\n  /**\n   * @param {number} index\n   * @param {shaka.extern.SegmentDB} segmentDB\n   * @return {!shaka.media.SegmentReference}\n   * @private\n   */\n  fromSegmentDB_(index, segmentDB) {\n    /** @type {!shaka.offline.OfflineUri} */\n    let uri = shaka.offline.OfflineUri.segment(\n        this.mechanism_, this.cell_, segmentDB.dataKey);\n\n    return new shaka.media.SegmentReference(\n        index,\n        segmentDB.startTime,\n        segmentDB.endTime,\n        () => [uri.toString()],\n        0 /* startByte */,\n        null /*  endByte */);\n  }\n\n  /**\n   * @param {number} key\n   * @return {!shaka.media.InitSegmentReference}\n   * @private\n   */\n  fromInitSegmentDB_(key) {\n    /** @type {!shaka.offline.OfflineUri} */\n    let uri = shaka.offline.OfflineUri.segment(\n        this.mechanism_, this.cell_, key);\n\n    return new shaka.media.InitSegmentReference(\n        () => [uri.toString()],\n        0 /* startBytes*/,\n        null /* endBytes */);\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isAudio_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.AUDIO;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isVideo_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.VIDEO;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isText_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.TEXT;\n  }\n\n  /**\n   * Creates an empty Variant.\n   *\n   * @param {number} id\n   * @return {!shaka.extern.Variant}\n   * @private\n   */\n  createEmptyVariant_(id) {\n    return {\n      id: id,\n      language: '',\n      primary: false,\n      audio: null,\n      video: null,\n      bandwidth: 0,\n      drmInfos: [],\n      allowedByApplication: true,\n      allowedByKeySystem: true,\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineManifestParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.offline.ManifestConverter');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.util.Error');\n\n\n/**\n * Creates a new offline manifest parser.\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n */\nshaka.offline.OfflineManifestParser = function() {\n  /** @private {shaka.offline.OfflineUri} */\n  this.uri_ = null;\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.configure = function(config) {\n  // No-op\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.start =\n    async function(uriString, playerInterface) {\n  /** @type {shaka.offline.OfflineUri} */\n  const uri = shaka.offline.OfflineUri.parse(uriString);\n  this.uri_ = uri;\n\n  if (uri == null || !uri.isManifest()) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        uri));\n  }\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n\n  try {\n    await muxer.init();\n\n    const cell = await muxer.getCell(uri.mechanism(), uri.cell());\n\n    const manifests = await cell.getManifests([uri.key()]);\n    const manifest = manifests[0];\n\n    const converter = new shaka.offline.ManifestConverter(\n      uri.mechanism(), uri.cell());\n\n    return converter.fromManifestDB(manifest);\n  } finally {\n    await muxer.destroy();\n  }\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.stop = function() {\n  return Promise.resolve();\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.update = function() {\n  // No-op\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.onExpirationUpdated =\n    async function(sessionId, expiration) {\n  goog.asserts.assert(\n      this.uri_, 'Should not get update event before start has been called');\n\n  /** @type {!shaka.offline.OfflineUri} */\n  const uri = this.uri_;\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n\n  try {\n    await muxer.init();\n\n    const cell = await muxer.getCell(uri.mechanism(), uri.cell());\n\n    const manifests = await cell.getManifests([uri.key()]);\n    const manifest = manifests[0];\n\n    const foundSession = manifest.sessionIds.includes(sessionId);\n    const newExpiration = manifest.expiration == undefined ||\n                          manifest.expiration > expiration;\n\n    if (foundSession && newExpiration) {\n      shaka.log.debug('Updating expiration for stored content');\n      await cell.updateManifestExpiration(uri.key(), expiration);\n    }\n  } catch (e) {\n    // Ignore errors with update.\n    shaka.log.error('There was an error updating', uri, e);\n  } finally {\n    await muxer.destroy();\n  }\n};\n\n\nshaka.media.ManifestParser.registerParserByMime(\n    'application/x-offline-manifest', shaka.offline.OfflineManifestParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineScheme');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace\n * @summary A plugin that handles requests for offline content.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {shaka.extern.ProgressUpdated} progressUpdated Called when a\n *   progress event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.offline.OfflineScheme = function(\n    uri, request, requestType, progressUpdated) {\n  let offlineUri = shaka.offline.OfflineUri.parse(uri);\n\n  if (offlineUri && offlineUri.isManifest()) {\n    return shaka.offline.OfflineScheme.getManifest_(uri);\n  }\n\n  if (offlineUri && offlineUri.isSegment()) {\n    return shaka.offline.OfflineScheme.getSegment_(\n        offlineUri.key(), offlineUri);\n  }\n\n  return shaka.util.AbortableOperation.failed(\n      new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n          uri));\n};\n\n\n/**\n * @param {string} uri\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @private\n */\nshaka.offline.OfflineScheme.getManifest_ = function(uri) {\n  /** @type {shaka.extern.Response} */\n  let response = {\n    uri: uri,\n    originalUri: uri,\n    data: new ArrayBuffer(0),\n    headers: {'content-type': 'application/x-offline-manifest'},\n  };\n\n  return shaka.util.AbortableOperation.completed(response);\n};\n\n\n/**\n * @param {number} id\n * @param {!shaka.offline.OfflineUri} uri\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @private\n */\nshaka.offline.OfflineScheme.getSegment_ = function(id, uri) {\n  goog.asserts.assert(\n      uri.isSegment(),\n      'Only segment uri\\'s should be given to getSegment');\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n\n  return shaka.util.AbortableOperation.completed(undefined)\n      .chain(() => muxer.init())\n      .chain(() => muxer.getCell(uri.mechanism(), uri.cell()))\n      .chain((cell) => cell.getSegments([uri.key()]))\n      .chain((segments) => {\n        const segment = segments[0];\n\n        return {\n          uri: uri,\n          originalUri: uri,\n          data: segment.data,\n          headers: {},\n        };\n      })\n      .finally(() => muxer.destroy());\n};\n\n\nshaka.net.NetworkingEngine.registerScheme(\n    'offline', shaka.offline.OfflineScheme);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.SessionDeleter');\n\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.ArrayUtils');\n\n\n/**\n * Contains a utility method to delete persistent EME sessions.\n */\nshaka.offline.SessionDeleter = class {\n  constructor() {}\n\n  /**\n   * Deletes the given sessions.  This never fails and instead logs the error.\n   *\n   * @param {shaka.extern.DrmConfiguration} config\n   * @param {!shaka.net.NetworkingEngine} netEngine\n   * @param {!Array.<shaka.extern.EmeSessionDB>} sessions\n   * @return {!Promise.<!Array.<string>>} The session IDs that were deleted.\n   */\n  async delete(config, netEngine, sessions) {\n    const SessionDeleter = shaka.offline.SessionDeleter;\n\n    let deleted = [];\n    for (const bucket of SessionDeleter.createBuckets_(sessions)) {\n      // Run these sequentially to avoid creating multiple CDM instances at one\n      // time.  Some embedded platforms may not support multiples.\n      const p = this.doDelete_(config, netEngine, bucket);\n      const cur = await p;  // eslint-disable-line no-await-in-loop\n      deleted = deleted.concat(cur);\n    }\n    return deleted;\n  }\n\n\n  /**\n   * Performs the deletion of the given session IDs.\n   *\n   * @param {shaka.extern.DrmConfiguration} config\n   * @param {!shaka.net.NetworkingEngine} netEngine\n   * @param {shaka.offline.SessionDeleter.Bucket_} bucket\n   * @return {!Promise.<!Array.<string>>} The sessions that were deleted\n   * @private\n   */\n  async doDelete_(config, netEngine, bucket) {\n    /** @type {!shaka.media.DrmEngine} */\n    const drmEngine = new shaka.media.DrmEngine({\n      netEngine: netEngine,\n      onError: () => {},\n      onKeyStatus: () => {},\n      onExpirationUpdated: () => {},\n      onEvent: () => {},\n    });\n\n    try {\n      drmEngine.configure(config);\n      await drmEngine.initForRemoval(\n          bucket.info.keySystem, bucket.info.licenseUri,\n          bucket.info.serverCertificate,\n          bucket.info.audioCapabilities, bucket.info.videoCapabilities);\n    } catch (e) {\n      shaka.log.warning('Error initializing EME', e);\n      await drmEngine.destroy();\n      return [];\n    }\n\n    try {\n      await drmEngine.setServerCertificate();\n    } catch (e) {\n      shaka.log.warning('Error setting server certificate', e);\n      await drmEngine.destroy();\n      return [];\n    }\n\n    /** @type {!Array.<string>} */\n    const sessionIds = [];\n    await Promise.all(bucket.sessionIds.map(async (sessionId) => {\n      // This method is in a .map(), so this starts multiple removes at once,\n      // so this removes the sessions in parallel.\n      try {\n        await drmEngine.removeSession(sessionId);\n        sessionIds.push(sessionId);\n      } catch (e) {\n        shaka.log.warning('Error deleting offline session', e);\n      }\n    }));\n    await drmEngine.destroy();\n    return sessionIds;\n  }\n\n\n  /**\n   * Collects the given sessions into buckets that can be done at the same time.\n   * Since querying with different parameters can give us back different CDMs,\n   * we can't just use one CDM instance to delete everything.\n   *\n   * @param {!Array.<shaka.extern.EmeSessionDB>} sessions\n   * @return {!Array.<shaka.offline.SessionDeleter.Bucket_>}\n   * @private\n   */\n  static createBuckets_(sessions) {\n    const SessionDeleter = shaka.offline.SessionDeleter;\n\n    /** @type {!Array.<shaka.offline.SessionDeleter.Bucket_>} */\n    const ret = [];\n    for (const session of sessions) {\n      let found = false;\n      for (const bucket of ret) {\n        if (SessionDeleter.isCompatible_(bucket.info, session)) {\n          bucket.sessionIds.push(session.sessionId);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        ret.push({info: session, sessionIds: [session.sessionId]});\n      }\n    }\n\n    return ret;\n  }\n\n\n  /**\n   * Returns whether the given session infos are compatible with each other.\n   * @param {shaka.extern.EmeSessionDB} a\n   * @param {shaka.extern.EmeSessionDB} b\n   * @return {boolean}\n   * @private\n   */\n  static isCompatible_(a, b) {\n    const ArrayUtils = shaka.util.ArrayUtils;\n\n    // TODO: Add a way to change the license server in DrmEngine to avoid\n    // resetting EME for different license servers.\n    const comp = (x, y) =>\n        x.robustness == y.robustness && x.contentType == y.contentType;\n    return a.keySystem == b.keySystem && a.licenseUri == b.licenseUri &&\n        ArrayUtils.hasSameElements(\n            a.audioCapabilities, b.audioCapabilities, comp) &&\n        ArrayUtils.hasSameElements(\n            a.videoCapabilities, b.videoCapabilities, comp);\n  }\n};\n\n\n/**\n * @typedef {{\n *   info: shaka.extern.EmeSessionDB,\n *   sessionIds: !Array.<string>\n * }}\n */\nshaka.offline.SessionDeleter.Bucket_;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.routing.Walker');\ngoog.provide('shaka.routing.Walker.Implementation');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.routing.Node');\ngoog.require('shaka.routing.Payload');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * The walker moves through a graph node-by-node executing asynchronous work\n * as it enters each node.\n *\n * The walker accepts requests for where it should go next. Requests are queued\n * and executed in FIFO order. If the current request can be interrupted, it\n * will be cancelled and the next request started.\n *\n * A request says \"I want to change where we are going\". When the walker is\n * ready to change destinations, it will resolve the request, allowing the\n * destination to differ based on the current state and not the state when\n * the request was appended.\n *\n * Example (from shaka.Player):\n *  When we unload, we need to either go to the attached or detached state based\n *  on whether or not we have a video element.\n *\n *  When we are asked to unload, we don't know what other pending requests may\n *  be ahead of us (there could be attach requests or detach requests). We need\n *  to wait until its our turn to know if:\n *    - we should go to the attach state because we have a media element\n *    - we should go to the detach state because we don't have a media element\n *\n * The walker allows the caller to specify if a route can or cannot be\n * interrupted. This is to allow potentially dependent routes to wait until\n * other routes have finished.\n *\n * Example (from shaka.Player):\n *  A request to load content depends on an attach request finishing. We don't\n *  want load request to interrupt an attach request. By marking the attach\n *  request as non-interruptible we ensure that calling load before attach\n *  finishes will work.\n *\n * @implements {shaka.util.IDestroyable}\n * @final\n */\nshaka.routing.Walker = class {\n  /**\n   * Create a new walker that starts at |startingAt| and with |startingWith|.\n   * The instance of |startingWith| will be the one that the walker holds and\n   * uses for its life. No one else should reference it.\n   *\n   * The per-instance behaviour for the walker is provided via |implementation|\n   * which is used to connect this walker with the \"outside world\".\n   *\n   * @param {shaka.routing.Node} startingAt\n   * @param {shaka.routing.Payload} startingWith\n   * @param {shaka.routing.Walker.Implementation} implementation\n   */\n  constructor(startingAt, startingWith, implementation) {\n    /** @private {?shaka.routing.Walker.Implementation} */\n    this.implementation_ = implementation;\n\n    /** @private {shaka.routing.Node} */\n    this.currentlyAt_ = startingAt;\n\n    /** @private {shaka.routing.Payload} */\n    this.currentlyWith_ = startingWith;\n\n    /**\n     * When we run out of work to do, we will set this promise so that when\n     * new work is added (and this is not null) it can be resolved. The only\n     * time when this should be non-null is when we are waiting for more work.\n     *\n     * @private {shaka.util.PublicPromise}\n     */\n    this.waitForWork_ = null;\n\n    /** @private {!Array.<shaka.routing.Walker.Request_>} */\n    this.requests_ = [];\n\n    /** @private {?shaka.routing.Walker.ActiveRoute_} */\n    this.currentRoute_ = null;\n\n    /** @private {shaka.util.AbortableOperation} */\n    this.currentStep_ = null;\n\n    /**\n     * This flag is used by the main loop to know if it should keep doing work.\n     * It will be true from now until |destroy| is called.\n     *\n     * @private {boolean}\n     */\n    this.isAlive_ = true;\n\n    /**\n     * Hold a reference to the main loop's promise so that we know when it has\n     * exited. This will determine when |destroy| can resolve. Purposely make\n     * the main loop start next interpreter cycle so that the constructor will\n     * finish before it starts.\n     *\n     * @private {!Promise}\n     */\n    this.mainLoopPromise_ = Promise.resolve().then(() => this.mainLoop_());\n  }\n\n  /** @override */\n  async destroy() {\n    // By setting |isAlive_| to |false|, we are telling the main loop to exit.\n    // If the main loop is blocked waiting for new work, unblock it by\n    // notifying.\n    this.isAlive_ = false;\n\n    // If we are executing a current step, we want to interrupt it so that we\n    // can force the main loop to terminate.\n    if (this.currentStep_) {\n      this.currentStep_.abort();\n    }\n\n    // If we are waiting for more work, we want to wake-up the main loop so that\n    // it can exit on its own.\n    this.unblockMainLoop_();\n\n    // Wait for the main loop to terminate so that an async operation won't\n    // try and use state that we released.\n    await this.mainLoopPromise_;\n\n    // Any routes that we are not going to finish, we need to cancel. If we\n    // don't do this, those listening will be left hanging.\n    if (this.currentRoute_) {\n      this.currentRoute_.listeners.onCancel();\n    }\n    for (const request of this.requests_) {\n      request.listeners.onCancel();\n    }\n\n    // Release anything that could hold references to anything outside of this\n    // class.\n    this.currentRoute_ = null;\n    this.requests_ = [];\n    this.implementation_ = null;\n  }\n\n  /**\n   * Ask the walker to start a new route. When the walker is ready to start a\n   * new route, it will call |create| and |create| will provide the walker with\n   * a new route to execute.\n   *\n   * If any previous calls to |startNewRoute| created non-interruptible routes,\n   * |create| won't be called until all previous non-interruptible routes have\n   * finished.\n   *\n   * This method will return a collection of listeners that the caller can hook\n   * into. Any listener that the caller is interested should be assigned\n   * immediately after calling |startNewRoute| or else they could miss the event\n   * they want to listen for.\n   *\n   * @param {function(shaka.routing.Payload):?shaka.routing.Walker.Route} create\n   * @return {shaka.routing.Walker.Listeners}\n   */\n  startNewRoute(create) {\n    const listeners = {\n      onStart: () => {},\n      onEnd: () => {},\n      onCancel: () => {},\n      onError: (error) => {},\n      onSkip: () => {},\n      onEnter: () => {},\n    };\n\n    this.requests_.push({\n      create: create,\n      listeners: listeners,\n    });\n\n    // If we are in the middle of a step, try to abort it. If this is successful\n    // the main loop will error and the walker will enter recovery mode.\n    if (this.currentStep_) {\n      this.currentStep_.abort();\n    }\n\n    // Tell the main loop that new work is available. If the main loop was not\n    // blocked, this will be a no-op.\n    this.unblockMainLoop_();\n\n    return listeners;\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  async mainLoop_() {\n    while (this.isAlive_) {\n      // eslint-disable-next-line no-await-in-loop\n      await this.doOneThing_();\n    }\n  }\n\n  /**\n   * Do one thing to move the walker closer to its destination. This can be:\n   *   1. Starting a new route.\n   *   2. Taking one more step/finishing a route.\n   *   3. Wait for a new route.\n   *\n   * @return {!Promise}\n   * @private\n   */\n  doOneThing_() {\n    if (this.tryNewRoute_()) {\n      return Promise.resolve();\n    }\n\n    if (this.currentRoute_) {\n      return this.takeNextStep_();\n    }\n\n    goog.asserts.assert(this.waitForWork_ == null,\n                        'We should not have a promise yet.');\n\n    // We have no more work to do. We will wait until new work has been provided\n    // via request route or until we are destroyed.\n\n    this.implementation_.onIdle(this.currentlyAt_);\n\n    // Wait on a new promise so that we can be resolved by |waitForWork|. This\n    // avoids us acting like a busy-wait.\n    this.waitForWork_ = new shaka.util.PublicPromise();\n    return this.waitForWork_;\n  }\n\n  /**\n   * Check if the walker can start a new route. There are a couple ways this can\n   * happen:\n   *  1. We have a new request but no current route\n   *  2. We have a new request and our current route can be interrupted\n   *\n   * @return {boolean}\n   *    |true| when a new route was started (regardless of reason) and |false|\n   *    when no new route was started.\n   *\n   * @private\n   */\n  tryNewRoute_() {\n    goog.asserts.assert(\n        this.currentStep_ == null,\n        'We should never have a current step between taking steps.');\n\n    if (this.requests_.length == 0) {\n      return false;\n    }\n\n    // If the current route cannot be interrupted, we can't start a new route.\n    if (this.currentRoute_ && !this.currentRoute_.interruptible) {\n      return false;\n    }\n\n    // Stop any previously active routes. Even if we don't pick-up a new route,\n    // this route should stop.\n    if (this.currentRoute_) {\n      this.currentRoute_.listeners.onCancel();\n      this.currentRoute_ = null;\n    }\n\n    // Create and start the next route. We may not take any steps because it may\n    // be interrupted by the next request.\n    const request = this.requests_.shift();\n    const newRoute = request.create(this.currentlyWith_);\n\n    // Based on the current state of |payload|, a new route may not be\n    // possible. In these cases |create| will return |null| to signal that\n    // we should just stop the current route and move onto the next request\n    // (in the next main loop iteration).\n    if (newRoute) {\n      request.listeners.onStart();\n\n      // Convert the route created from the request's create method to an\n      // active route.\n      this.currentRoute_ = {\n        node: newRoute.node,\n        payload: newRoute.payload,\n        interruptible: newRoute.interruptible,\n        listeners: request.listeners,\n      };\n    } else {\n      request.listeners.onSkip();\n    }\n\n    return true;\n  }\n\n\n  /**\n   * Move forward one step on our current route. This assumes that we have a\n   * current route. A couple things can happen when moving forward:\n   *  1. An error - if an error occurs, it will signal an error occurred,\n   *     attempt to recover, and drop the route.\n   *  2. Move - if no error occurs, we will move forward. When we arrive at\n   *     our destination, it will signal the end and drop the route.\n   *\n   * In the event of an error or arriving at the destination, we drop the\n   * current route. This allows us to pick-up a new route next time the main\n   * loop iterates.\n   *\n   * @return {!Promise}\n   * @private\n   */\n  async takeNextStep_() {\n    goog.asserts.assert(\n        this.currentRoute_,\n        'We need a current route to take the next step.');\n\n    // Figure out where we are supposed to go next.\n    this.currentlyAt_ = this.implementation_.getNext(\n        this.currentlyAt_,\n        this.currentlyWith_,\n        this.currentRoute_.node,\n        this.currentRoute_.payload);\n\n    this.currentRoute_.listeners.onEnter(this.currentlyAt_);\n\n    // Enter the new node, this is where things can go wrong since it is\n    // possible for \"supported errors\" to occur - errors that the code using\n    // the walker can't predict but can recover from.\n    try {\n      this.currentStep_ = this.implementation_.enterNode(\n          /* node= */ this.currentlyAt_,\n          /* has= */ this.currentlyWith_,\n          /* wants= */ this.currentRoute_.payload);\n\n      await this.currentStep_.promise;\n      this.currentStep_ = null;\n\n      // If we are at the end of the route, we need to signal it and clear the\n      // route so that we will pick-up a new route next iteration.\n      if (this.currentlyAt_ == this.currentRoute_.node) {\n        this.currentRoute_.listeners.onEnd();\n        this.currentRoute_ = null;\n      }\n    } catch (error) {\n      if (error.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n        goog.asserts.assert(\n            this.currentRoute_.interruptible,\n            'Do not put abortable steps in non-interruptible routes!');\n        this.currentRoute_.listeners.onCancel();\n      } else {\n        // There was an error with this route, so we going to abandon it and\n        // resolve the error. We don't reset the payload because the payload may\n        // still contain useful information.\n        this.currentRoute_.listeners.onError(error);\n      }\n\n      // The route and step are done. Clear them before we handle the error or\n      // else we may attempt to abort |currrentStep_| when handling the error.\n      this.currentRoute_ = null;\n      this.currentStep_ = null;\n\n      // Still need to handle error because aborting an operation could leave us\n      // in an unexpected state.\n      this.currentlyAt_ = await this.implementation_.handleError(\n          this.currentlyWith_,\n          error);\n    }\n  }\n\n  /**\n   * If the main loop is blocked waiting for new work, then resolve the promise\n   * so that the next iteration of the main loop can execute.\n   *\n   * @private\n   */\n  unblockMainLoop_() {\n    if (this.waitForWork_) {\n      this.waitForWork_.resolve();\n      this.waitForWork_ = null;\n    }\n  }\n};\n\n/**\n * @typedef {{\n *   getNext: function(\n *       shaka.routing.Node,\n *       shaka.routing.Payload,\n *       shaka.routing.Node,\n *       shaka.routing.Payload):shaka.routing.Node,\n *   enterNode: function(\n *       shaka.routing.Node,\n *       shaka.routing.Payload,\n *       shaka.routing.Payload):!shaka.util.AbortableOperation,\n *   handleError: function(\n *       shaka.routing.Payload,\n *       !Error):!Promise.<shaka.routing.Node>,\n *   onIdle: function(shaka.routing.Node)\n * }}\n *\n * @description\n *   There are some parts of the walker that will be per-instance. This type\n *   provides those per-instance parts.\n *\n * @property {function(\n *     shaka.routing.Node,\n *     shaka.routing.Payload,\n *     shaka.routing.Node,\n *     shaka.routing.Payload):shaka.routing.Node getNext\n *   Get the next node that the walker should move to. This method will be\n *   passed (in this order) the current node, current payload, destination\n *   node, and destination payload.\n *\n * @property {function(\n *     shaka.routing.Node,\n *     shaka.routing.Payload,\n *     shaka.routing.Payload):!Promise} enterNode\n *   When the walker moves into a node, it will call |enterNode| and allow the\n *   implementation to change the current payload. This method will be passed\n *   (in this order) the node the walker is entering, the current payload, and\n *   the destination payload. This method should NOT modify the destination\n *   payload.\n *\n * @property {function(\n *     shaka.routing.Payload,\n *     !Error):!Promise.<shaka.routing.Node> handleError\n *   This is the callback for when |enterNode| fails. It is passed the current\n *   payload and the error. If a step is aborted, the error will be\n *   OPERATION_ABORTED. It should reset all external dependences, modify the\n *   payload, and return the new current node. Calls to |handleError| should\n *   always resolve and the walker should always be able to continue operating.\n *\n * @property {function(shaka.routing.Node)} onIdle\n *   This is the callback for when the walker has finished processing all route\n *   requests and needs to wait for more work. |onIdle| will be passed the\n *   current node.  After |onIdle| has been called, the walker will block until\n *   a new request is made, or the walker is destroyed.\n */\nshaka.routing.Walker.Implementation;\n\n/**\n * @typedef {{\n *   onStart: function(),\n *   onEnd: function(),\n *   onCancel: function(),\n *   onError: function(!Error),\n *   onSkip: function(),\n *   onEnter: function(shaka.routing.Node)\n * }}\n *\n * @description\n *   The collection of callbacks that the walker will call while executing a\n *   route. By setting these immediately after calling |startNewRoute|\n *   the user can react to route-specific events.\n *\n * @property {function()} onStart\n *   The callback for when the walker has accepted the route and will soon take\n *   the first step unless interrupted. Either |onStart| or |onSkip| will be\n *   called.\n *\n * @property {function()} onEnd\n *   The callback for when the walker has reached the end of the route. For\n *   every route that had |onStart| called, either |onEnd|, |onCancel|, or\n *   |onError| will be called.\n *\n * @property {function()} onCancel\n *   The callback for when the walker is stopping a route before getting to the\n *   end. This will be called either when a new route is interrupting the route,\n *   or the walker is being destroyed mid-route. |onCancel| will only be called\n *   when a route has been interrupted by another route or the walker is being\n *   destroyed.\n *\n * @property {function()} onError\n *   The callback for when the walker failed to execute the route because an\n *   unexpected error occurred. The walker will enter a recovery mode and the\n *   route will be abandoned.\n *\n * @property {function()} onSkip\n *   The callback for when the walker was ready to start the route, but the\n *   create-method returned |null|.\n *\n * @property {function()} onEnter\n *   The callback for when the walker enters a node. This will allow us to\n *   track the progress of the walker within a per-route scope.\n */\nshaka.routing.Walker.Listeners;\n\n/**\n * @typedef {{\n *   node: shaka.routing.Node,\n *   payload: shaka.routing.Payload,\n *   interruptible: boolean\n * }}\n *\n * @description\n *   The public description of where the walker should go. This is created\n *   when the callback given to |startNewRoute| is called by the walker.\n *\n * @property {shaka.routing.Node} node\n *   The node that the walker should move towards. This will be passed to\n *   |shaka.routing.Walker.Implementation.getNext| to help determine where to\n *   go next.\n *\n * @property {shaka.routing.Payload| payload\n *   The payload that the walker should have once it arrives at |node|. This\n *   will be passed to the |shaka.routing.Walker.Implementation.getNext| to\n *   help determine where to go next.\n *\n * @property {boolean} interruptible\n *   Whether or not this route can be interrupted by another request. When\n *   |true| this route will be interrupted so that a pending request can be\n *   resolved. When |false|, the route will be allowed to finished before\n *   resolving the next request.\n */\nshaka.routing.Walker.Route;\n\n/**\n * @typedef {{\n *   node: shaka.routing.Node,\n *   payload: shaka.routing.Payload,\n *   interruptible: boolean,\n *   listeners: shaka.routing.Walker.Listeners\n * }}\n *\n * @description\n *   The active route is the walker's internal representation of a route. It\n *   is the union of |shaka.routing.Walker.Request_| and the\n *   |shaka.routing.Walker.Route| created by |shaka.routing.Walker.Request_|.\n *\n * @property {shaka.routing.Node} node\n *   The node that the walker should move towards. This will be passed to\n *   |shaka.routing.Walker.Implementation.getNext| to help determine where to\n *   go next.\n *\n * @property {shaka.routing.Payload| payload\n *   The payload that the walker should have once it arrives at |node|. This\n *   will be passed to the |shaka.routing.Walker.Implementation.getNext| to\n *   help determine where to go next.\n *\n * @property {boolean} interruptible\n *   Whether or not this route can be interrupted by another request. When\n *   |true| this route will be interrupted so that a pending request can be\n *   resolved. When |false|, the route will be allowed to finished before\n *   resolving the next request.\n *\n * @property {shaka.routing.Walker.Listeners} listeners\n *   The listeners that the walker can used to communicate with whoever\n *   requested the route.\n *\n * @private\n */\nshaka.routing.Walker.ActiveRoute_;\n\n/**\n * @typedef {{\n *   create: function(shaka.routing.Payload):?shaka.routing.Walker.Route,\n *   listeners: shaka.routing.Walker.Listeners\n * }}\n *\n * @description\n *   The request is how users can talk to the walker. They can give the walker\n *   a request and when the walker is ready, it will resolve the request by\n *   calling |create|.\n *\n * @property {\n *     function(shaka.routing.Payload):?shaka.routing.Walker.Route} create\n *   The function called when the walker is ready to start a new route. This can\n *   return |null| to say that the request was not possible and should be\n *   skipped.\n *\n * @property {shaka.routing.Walker.Listeners} listeners\n *   The collection of callbacks that the walker will use to talk to whoever\n *   provided the request.\n *\n * @private\n */\nshaka.routing.Walker.Request_;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.Player');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.Deprecate');\ngoog.require('shaka.log');\ngoog.require('shaka.media.ActiveStreamMap');\ngoog.require('shaka.media.AdaptationSetCriteria');\ngoog.require('shaka.media.BufferingObserver');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.media.MuxJSClosedCaptionParser');\ngoog.require('shaka.media.NoopCaptionParser');\ngoog.require('shaka.media.PeriodObserver');\ngoog.require('shaka.media.PlayRateController');\ngoog.require('shaka.media.Playhead');\ngoog.require('shaka.media.PlayheadObserverManager');\ngoog.require('shaka.media.PreferenceBasedCriteria');\ngoog.require('shaka.media.RegionObserver');\ngoog.require('shaka.media.RegionTimeline');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.media.StreamingEngine');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.routing.Walker');\ngoog.require('shaka.text.SimpleTextDisplayer');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.MultiMap');\ngoog.require('shaka.util.Periods');\ngoog.require('shaka.util.Platform');\ngoog.require('shaka.util.PlayerConfiguration');\ngoog.require('shaka.util.Stats');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * Construct a Player.\n *\n * @param {HTMLMediaElement=} mediaElement\n *    When provided, the player will attach to |mediaElement|, similar to\n *    calling |attach|. When not provided, the player will remain detached.\n * @param {function(shaka.Player)=} dependencyInjector Optional callback\n *   which is called to inject mocks into the Player.  Used for testing.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.Player = function(mediaElement, dependencyInjector) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {shaka.Player.LoadMode} */\n  this.loadMode_ = shaka.Player.LoadMode.NOT_LOADED;\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = null;\n\n  /**\n   * Since we may not always have a text displayer created (e.g. before |load|\n   * is called), we need to track what text visibility SHOULD be so that we can\n   * ensure that when we create the text displayer. When we create our text\n   * displayer, we will use this to show (or not show) text as per the user's\n   * requests.\n   *\n   * @private {boolean}\n   */\n  this.isTextVisible_ = false;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {shaka.net.NetworkingEngine} */\n  this.networkingEngine_ = null;\n\n  /** @private {shaka.media.DrmEngine} */\n  this.drmEngine_ = null;\n\n  /** @private {shaka.media.MediaSourceEngine} */\n  this.mediaSourceEngine_ = null;\n\n  /** @private {shaka.media.Playhead} */\n  this.playhead_ = null;\n\n  /**\n   * The playhead observers are used to monitor the position of the playhead and\n   * some other source of data (e.g. buffered content), and raise events.\n   *\n   * @private {shaka.media.PlayheadObserverManager}\n   */\n  this.playheadObservers_ = null;\n\n  /**\n   * This is our control over the playback rate of the media element. This\n   * provides the missing functionality that we need to provide trick play, for\n   * example a negative playback rate.\n   *\n   * @private {shaka.media.PlayRateController}\n   */\n  this.playRateController_ = null;\n\n  // We use the buffering observer and timer to track when we move from having\n  // enough buffered content to not enough. They only exist when content has\n  // been loaded and are not re-used between loads.\n  /** @private {shaka.util.Timer} */\n  this.bufferPoller_ = null;\n\n  /** @private {shaka.media.BufferingObserver} */\n  this.bufferObserver_ = null;\n\n  /** @private {shaka.media.RegionTimeline} */\n  this.regionTimeline_ = null;\n\n  /** @private {shaka.media.StreamingEngine} */\n  this.streamingEngine_ = null;\n\n  /** @private {shaka.extern.ManifestParser} */\n  this.parser_ = null;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {?string} */\n  this.assetUri_ = null;\n\n  /** @private {shaka.extern.AbrManager} */\n  this.abrManager_ = null;\n\n  /**\n   * The factory that was used to create the abrManager_ instance.\n   * @private {?shaka.extern.AbrManager.Factory}\n   */\n  this.abrManagerFactory_ = null;\n\n  /**\n   * Contains an ID for use with creating streams.  The manifest parser should\n   * start with small IDs, so this starts with a large one.\n   * @private {number}\n   */\n  this.nextExternalStreamId_ = 1e9;\n\n  /** @private {!Set.<shaka.extern.Stream>} */\n  this.loadingTextStreams_ = new Set();\n\n  /** @private {boolean} */\n  this.switchingPeriods_ = true;\n\n  /** @private {?shaka.extern.Variant} */\n  this.deferredVariant_ = null;\n\n  /** @private {boolean} */\n  this.deferredVariantClearBuffer_ = false;\n\n  /** @private {number} */\n  this.deferredVariantClearBufferSafeMargin_ = 0;\n\n  /** @private {?shaka.extern.Stream} */\n  this.deferredTextStream_ = null;\n\n  /**\n   * A mapping of which streams are/were active in each period. Used when the\n   * current period (the one containing playhead) differs from the active\n   * period (the one being streamed in by streaming engine).\n   *\n   * @private {!shaka.media.ActiveStreamMap}\n   */\n  this.activeStreams_ = new shaka.media.ActiveStreamMap();\n\n  /** @private {?shaka.extern.PlayerConfiguration} */\n  this.config_ = this.defaultConfig_();\n\n  /**\n   * The TextDisplayerFactory that was last used to make a text displayer.\n   * Stored so that we can tell if a new type of text displayer is desired.\n   * @private {?shaka.extern.TextDisplayer.Factory}\n   */\n  this.lastTextFactory_;\n\n  /** @private {{width: number, height: number}} */\n  this.maxHwRes_ = {width: Infinity, height: Infinity};\n\n  /** @private {shaka.util.Stats} */\n  this.stats_ = null;\n\n  /** @private {!shaka.media.AdaptationSetCriteria} */\n  this.currentAdaptationSetCriteria_ = new shaka.media.PreferenceBasedCriteria(\n      this.config_.preferredAudioLanguage,\n      this.config_.preferredVariantRole,\n      this.config_.preferredAudioChannelCount);\n\n  /** @private {string} */\n  this.currentTextLanguage_ = this.config_.preferredTextLanguage;\n\n  /** @private {string} */\n  this.currentTextRole_ = this.config_.preferredTextRole;\n\n  if (dependencyInjector) {\n    dependencyInjector(this);\n  }\n\n  this.networkingEngine_ = this.createNetworkingEngine();\n\n  // If the browser comes back online after being offline, then try to play\n  // again.\n  this.eventManager_.listen(window, 'online', () => {\n    this.retryStreaming();\n  });\n\n  /** @private {shaka.routing.Node} */\n  this.detachNode_ = {name: 'detach'};\n  /** @private {shaka.routing.Node} */\n  this.attachNode_ = {name: 'attach'};\n  /** @private {shaka.routing.Node} */\n  this.unloadNode_ = {name: 'unload'};\n  /** @private {shaka.routing.Node} */\n  this.parserNode_ = {name: 'manifest-parser'};\n  /** @private {shaka.routing.Node} */\n  this.manifestNode_ = {name: 'manifest'};\n  /** @private {shaka.routing.Node} */\n  this.mediaSourceNode_ = {name: 'media-source'};\n  /** @private {shaka.routing.Node} */\n  this.drmNode_ = {name: 'drm-engine'};\n  /** @private {shaka.routing.Node} */\n  this.loadNode_ = {name: 'load'};\n  /** @private {shaka.routing.Node} */\n  this.srcEqualsDrmNode_ = {name: 'src-equals-drm-engine'};\n  /** @private {shaka.routing.Node} */\n  this.srcEqualsNode_ = {name: 'src-equals'};\n\n  const AbortableOperation = shaka.util.AbortableOperation;\n\n  const actions = new Map();\n  actions.set(this.attachNode_, (has, wants) => {\n    return AbortableOperation.notAbortable(this.onAttach_(has, wants));\n  });\n  actions.set(this.detachNode_, (has, wants) => {\n    return AbortableOperation.notAbortable(this.onDetach_(has, wants));\n  });\n  actions.set(this.unloadNode_, (has, wants) => {\n    return AbortableOperation.notAbortable(this.onUnload_(has, wants));\n  });\n  actions.set(this.mediaSourceNode_, (has, wants) => {\n    const p = this.onInitializeMediaSourceEngine_(has, wants);\n    return AbortableOperation.notAbortable(p);\n  });\n  actions.set(this.parserNode_, (has, wants) => {\n    const p = this.onInitializeParser_(has, wants);\n    return AbortableOperation.notAbortable(p);\n  });\n  actions.set(this.manifestNode_, (has, wants) => {\n    // This action is actually abortable, so unlike the other callbacks, this\n    // one will return an abortable operation.\n    return this.onParseManifest_(has, wants);\n  });\n  actions.set(this.drmNode_, (has, wants) => {\n    const p = this.onInitializeDrm_(has, wants);\n    return AbortableOperation.notAbortable(p);\n  });\n  actions.set(this.loadNode_, (has, wants) => {\n    return AbortableOperation.notAbortable(this.onLoad_(has, wants));\n  });\n\n  actions.set(this.srcEqualsDrmNode_, (has, wants) => {\n    const p = this.onInitializeSrcEqualsDrm_(has, wants);\n    return AbortableOperation.notAbortable(p);\n  });\n  actions.set(this.srcEqualsNode_, (has, wants) => {\n    return this.onSrcEquals_(has, wants);\n  });\n\n  /** @private {shaka.routing.Walker.Implementation} */\n  const walkerImplementation = {\n    getNext: (at, has, goingTo, wants) => {\n      return this.getNextStep_(at, has, goingTo, wants);\n    },\n    enterNode: (node, has, wants) => {\n      this.dispatchEvent(new shaka.util.FakeEvent(\n          /* name= */ 'onstatechange',\n          /* data= */ {'state': node.name}));\n\n      const action = actions.get(node);\n      return action(has, wants);\n    },\n    handleError: async (has, error) => {\n      shaka.log.warning('The walker saw an error:');\n      if (error instanceof shaka.util.Error) {\n        shaka.log.warning('Error Code:', error.code);\n      } else {\n        shaka.log.warning('Error Message:', error.message);\n        shaka.log.warning('Error Stack:', error.stack);\n      }\n\n      // Regardless of what state we were in, if there is an error, we unload.\n      // This ensures that any initialized system will be torn-down and we will\n      // go back to a safe foundation. We assume that the media element is\n      // always safe to use after an error.\n      await this.onUnload_(has, this.createEmptyPayload_());\n\n      // There are only two nodes that come before we start loading content,\n      // attach and detach. If we have a media element, it means we were\n      // attached to the element, and we can safely return to the attach state\n      // (we assume that the video element is always re-usable). We favor\n      // returning to the attach node since it means that the app won't need to\n      // re-attach if it saw an error.\n      return has.mediaElement ? this.attachNode_ : this.detachNode_;\n    },\n    onIdle: (node) => {\n      this.dispatchEvent(new shaka.util.FakeEvent(\n          /* name= */ 'onstateidle',\n          /* data= */ {'state': node.name}));\n    },\n  };\n\n  /** @private {shaka.routing.Walker} */\n  this.walker_ = new shaka.routing.Walker(\n      this.detachNode_,\n      this.createEmptyPayload_(),\n      walkerImplementation);\n\n  // Even though |attach| will start in later interpreter cycles, it should be\n  // the LAST thing we do in the constructor because conceptually it relies on\n  // player having been initialized.\n  if (mediaElement) {\n    this.attach(mediaElement, /* initializeMediaSource= */ true);\n  }\n};\n\ngoog.inherits(shaka.Player, shaka.util.FakeEventTarget);\n\n\n/**\n * After destruction, a Player object cannot be used again.\n *\n * @override\n * @export\n */\nshaka.Player.prototype.destroy = async function() {\n  // Make sure we only execute the destroy logic once.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) {\n    return;\n  }\n\n  // Mark as \"dead\". This should stop external-facing calls from changing our\n  // internal state any more. This will stop calls to |attach|, |detach|, etc.\n  // from interrupting our final move to the detached state.\n  this.loadMode_ = shaka.Player.LoadMode.DESTROYED;\n\n  // Because we have set |loadMode_| to |DESTROYED| we can't call |detach|. We\n  // must talk to |this.walker_| directly.\n  const events = this.walker_.startNewRoute((currentPayload) => {\n    return {\n      node: this.detachNode_,\n      payload: this.createEmptyPayload_(),\n      interruptible: false,\n    };\n  });\n\n  // Wait until the detach has finished so that we don't interrupt it by\n  // calling |destroy| on |this.walker_|. To avoid failing here, we always\n  // resolve the promise.\n  await new Promise((resolve) => {\n    events.onStart = () => {\n      shaka.log.info('Preparing to destroy walker...');\n    };\n    events.onEnd = () => {\n      resolve();\n    };\n    events.onCancel = () => {\n      goog.asserts.assert(false,\n                          'Our final detach call should never be cancelled.');\n      resolve();\n    };\n    events.onError = () => {\n      goog.asserts.assert(false,\n                          'Our final detach call should never see an error');\n      resolve();\n    };\n    events.onSkip = () => {\n      goog.asserts.assert(false,\n                          'Our final detach call should never be skipped');\n      resolve();\n    };\n  });\n  await this.walker_.destroy();\n\n  // Tear-down the event manager to ensure messages stop moving around.\n  if (this.eventManager_) {\n    this.eventManager_.release();\n    this.eventManager_ = null;\n  }\n\n  this.abrManagerFactory_ = null;\n  this.abrManager_ = null;\n  this.config_ = null;\n\n  if (this.networkingEngine_) {\n    await this.networkingEngine_.destroy();\n    this.networkingEngine_ = null;\n  }\n};\n\n\n/**\n * @define {string} A version number taken from git at compile time.\n * @export\n */\nshaka.Player.version = 'v2.5.4-uncompiled';\n\n// Initialize the deprecation system using the version string we just set\n// on the player.\nshaka.Deprecate.init(shaka.Player.version);\n\n/**\n * @event shaka.Player.ErrorEvent\n * @description Fired when a playback error occurs.\n * @property {string} type\n *   'error'\n * @property {!shaka.util.Error} detail\n *   An object which contains details on the error.  The error's 'category' and\n *   'code' properties will identify the specific error that occurred.  In an\n *   uncompiled build, you can also use the 'message' and 'stack' properties\n *   to debug.\n * @exportDoc\n */\n\n/**\n * @event shaka.Player.StateChangeEvent\n * @description Fired when the player changes load states.\n * @property {string} type\n *    'onstatechange'\n * @property {string} state\n *    The name of the state that the player just entered.\n * @exportDoc\n */\n\n/**\n * @event shaka.Player.StateIdleEvent\n * @description Fired when the player has stopped changing states and will\n *    remain idle until a new state change request (e.g. load, attach, etc.) is\n *    made.\n * @property {string} type\n *    'onstateidle'\n * @property {string} state\n *    The name of the state that the player stopped in.\n * @exportDoc\n */\n\n/**\n * @event shaka.Player.EmsgEvent\n * @description Fired when a non-typical emsg is found in a segment.\n * @property {string} type\n *   'emsg'\n * @property {shaka.extern.EmsgInfo} detail\n *   An object which contains the content of the emsg box.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.DrmSessionUpdateEvent\n * @description Fired when the CDM has accepted the license response.\n * @property {string} type\n *   'drmsessionupdate'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionAddedEvent\n * @description Fired when a media timeline region is added.\n * @property {string} type\n *   'timelineregionadded'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionEnterEvent\n * @description Fired when the playhead enters a timeline region.\n * @property {string} type\n *   'timelineregionenter'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionExitEvent\n * @description Fired when the playhead exits a timeline region.\n * @property {string} type\n *   'timelineregionexit'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.BufferingEvent\n * @description Fired when the player's buffering state changes.\n * @property {string} type\n *   'buffering'\n * @property {boolean} buffering\n *   True when the Player enters the buffering state.\n *   False when the Player leaves the buffering state.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.LoadingEvent\n * @description Fired when the player begins loading. The start of loading is\n *   defined as when the user has communicated intent to load content (i.e.\n *   Player.load has been called).\n * @property {string} type\n *   'loading'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.UnloadingEvent\n * @description Fired when the player unloads or fails to load.\n *   Used by the Cast receiver to determine idle state.\n * @property {string} type\n *   'unloading'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TextTrackVisibilityEvent\n * @description Fired when text track visibility changes.\n * @property {string} type\n *   'texttrackvisibility'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TracksChangedEvent\n * @description Fired when the list of tracks changes.  For example, this will\n *   happen when changing periods or when track restrictions change.\n * @property {string} type\n *   'trackschanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.AdaptationEvent\n * @description Fired when an automatic adaptation causes the active tracks\n *   to change.  Does not fire when the application calls selectVariantTrack()\n *   selectTextTrack(), selectAudioLanguage() or selectTextLanguage().\n * @property {string} type\n *   'adaptation'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.VariantChangedEvent\n * @description Fired when a call from the application caused a variant change.\n *  Can be triggered by calls to selectVariantTrack() or selectAudioLanguage().\n *  Does not fire when an automatic adaptation causes a variant change.\n * @property {string} type\n *   'variantchanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TextChangedEvent\n * @description Fired when a call from the application caused a text stream\n *  change. Can be triggered by calls to selectTextTrack() or\n *  selectTextLanguage().\n * @property {string} type\n *   'textchanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.ExpirationUpdatedEvent\n * @description Fired when there is a change in the expiration times of an\n *   EME session.\n * @property {string} type\n *   'expirationupdated'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.LargeGapEvent\n * @description Fired when the playhead enters a large gap.  If\n *   |config.streaming.jumpLargeGaps| is set, the default action of this event\n *   is to jump the gap; this can be prevented by calling preventDefault() on\n *   the event object.\n * @property {string} type\n *   'largegap'\n * @property {number} currentTime\n *   The current time of the playhead.\n * @property {number} gapSize\n *   The size of the gap, in seconds.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.ManifestParsedEvent\n * @description Fired after the manifest has been parsed, but before anything\n *   else happens. The manifest may contain streams that will be filtered out,\n *   at this stage of the loading process.\n * @property {string} type\n *   'manifestparsed'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.StreamingEvent\n * @description Fired after the manifest has been parsed and track information\n *   is available, but before streams have been chosen and before any segments\n *   have been fetched.  You may use this event to configure the player based on\n *   information found in the manifest.\n * @property {string} type\n *   'streaming'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.AbrStatusChangedEvent\n * @description Fired when the state of abr has been changed.\n *    (Enabled or disabled).\n * @property {string} type\n *   'abrstatuschanged'\n * @property {boolean} newStatus\n *  The new status of the application. True for 'is enabled' and\n *  false otherwise.\n * @exportDoc\n */\n\n\n/**\n * These are the EME key statuses that represent restricted playback.\n * 'usable', 'released', 'output-downscaled', 'status-pending' are statuses\n * of the usable keys.  'expired' status is being handled separately in\n * DrmEngine.\n *\n * @const {!Array.<string>}\n * @private\n */\nshaka.Player.restrictedStatuses_ = ['output-restricted', 'internal-error'];\n\n\n/** @private {!Object.<string, function():*>} */\nshaka.Player.supportPlugins_ = {};\n\n\n/**\n * Registers a plugin callback that will be called with support().  The\n * callback will return the value that will be stored in the return value from\n * support().\n *\n * @param {string} name\n * @param {function():*} callback\n * @export\n */\nshaka.Player.registerSupportPlugin = function(name, callback) {\n  shaka.Player.supportPlugins_[name] = callback;\n};\n\n\n/**\n * Return whether the browser provides basic support.  If this returns false,\n * Shaka Player cannot be used at all.  In this case, do not construct a Player\n * instance and do not use the library.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.isBrowserSupported = function() {\n  // Basic features needed for the library to be usable.\n  const basicSupport = !!window.Promise && !!window.Uint8Array &&\n                       !!Array.prototype.forEach;\n  if (!basicSupport) return false;\n\n  // DRM support is not strictly necessary, but the APIs at least need to be\n  // there.  Our no-op DRM polyfill should handle that.\n  // TODO(#1017): Consider making even DrmEngine optional.\n  const drmSupport = shaka.media.DrmEngine.isBrowserSupported();\n  if (!drmSupport) return false;\n\n  // If we have MediaSource (MSE) support, we should be able to use Shaka.\n  if (shaka.util.Platform.supportsMediaSource()) return true;\n\n  // If we don't have MSE, we _may_ be able to use Shaka.  Look for native HLS\n  // support, and call this platform usable if we have it.\n  return shaka.util.Platform.supportsMediaType('application/x-mpegurl');\n};\n\n\n/**\n * Probes the browser to determine what features are supported.  This makes a\n * number of requests to EME/MSE/etc which may result in user prompts.  This\n * should only be used for diagnostics.\n *\n * NOTE: This may show a request to the user for permission.\n *\n * @see https://bit.ly/2ywccmH\n * @return {!Promise.<shaka.extern.SupportType>}\n * @export\n */\nshaka.Player.probeSupport = function() {\n  goog.asserts.assert(shaka.Player.isBrowserSupported(),\n                      'Must have basic support');\n  return shaka.media.DrmEngine.probeSupport().then(function(drm) {\n    let manifest = shaka.media.ManifestParser.probeSupport();\n    let media = shaka.media.MediaSourceEngine.probeSupport();\n    let ret = {\n      manifest: manifest,\n      media: media,\n      drm: drm,\n    };\n\n    let plugins = shaka.Player.supportPlugins_;\n    for (let name in plugins) {\n      ret[name] = plugins[name]();\n    }\n\n    return ret;\n  });\n};\n\n\n/**\n * Tell the player to use |mediaElement| for all |load| requests until |detach|\n * or |destroy| are called.\n *\n * Calling |attach| with |initializedMediaSource=true| will tell the player to\n * take the initial load step and initialize media source.\n *\n * Calls to |attach| will interrupt any in-progress calls to |load| but cannot\n * interrupt calls to |attach|, |detach|, or |unload|.\n *\n * @param {!HTMLMediaElement} mediaElement\n * @param {boolean=} initializeMediaSource\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.attach = function(mediaElement,\n                                         initializeMediaSource = true) {\n  // Do not allow the player to be used after |destroy| is called.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) {\n    return Promise.reject(this.createAbortLoadError_());\n  }\n\n  const payload = this.createEmptyPayload_();\n  payload.mediaElement = mediaElement;\n\n  // If the platform does not support media source, we will never want to\n  // initialize media source.\n  if (!shaka.util.Platform.supportsMediaSource()) {\n    initializeMediaSource = false;\n  }\n\n  const destination = initializeMediaSource ?\n                      this.mediaSourceNode_ :\n                      this.attachNode_;\n\n  // Do not allow this route to be interrupted because calls after this attach\n  // call will depend on the media element being attached.\n  const events = this.walker_.startNewRoute((currentPayload) => {\n    return {\n      node: destination,\n      payload: payload,\n      interruptible: false,\n    };\n  });\n\n  // List to the events that can occur with our request.\n  events.onStart = () => shaka.log.info('Starting attach...');\n  return this.wrapWalkerListenersWithPromise_(events);\n};\n\n\n/**\n * Tell the player to stop using its current media element. If the player is:\n *  - detached, this will do nothing,\n *  - attached, this will release the media element,\n *  - loading, this will abort loading, unload, and release the media element,\n *  - playing content, this will stop playback, unload, and release the media\n *    element.\n *\n * Calls to |detach| will interrupt any in-progress calls to |load| but cannot\n * interrupt calls to |attach|, |detach|, or |unload|.\n *\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.detach = function() {\n  // Do not allow the player to be used after |destroy| is called.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) {\n    return Promise.reject(this.createAbortLoadError_());\n  }\n\n  // Tell the walker to go \"detached\", but do not allow it to be interrupted. If\n  // it could be interrupted it means that our media element could fall out\n  // of sync.\n  const events = this.walker_.startNewRoute((currentPayload) => {\n    return {\n      node: this.detachNode_,\n      payload: this.createEmptyPayload_(),\n      interruptible: false,\n    };\n  });\n\n  events.onStart = () => shaka.log.info('Starting detach...');\n  return this.wrapWalkerListenersWithPromise_(events);\n};\n\n\n/**\n * Tell the player to either return to:\n *   - detached (when it does not have a media element),\n *   - attached (when it has a media element and |initializedMediaSource=false|)\n *   - media source initialized (when it has a media element and\n *     |initializedMediaSource=true|)\n *\n * Calls to |unload| will interrupt any in-progress calls to |load| but cannot\n * interrupt calls to |attach|, |detach|, or |unload|.\n *\n * @param {boolean=} initializeMediaSource\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.unload = function(initializeMediaSource = true) {\n  // Do not allow the player to be used after |destroy| is called.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) {\n    return Promise.reject(this.createAbortLoadError_());\n  }\n\n  // If the platform does not support media source, we will never want to\n  // initialize media source.\n  if (!shaka.util.Platform.supportsMediaSource()) {\n    initializeMediaSource = false;\n  }\n\n  // Since we are going either to attached or detached (through unloaded), we\n  // can't allow it to be interrupted or else we could lose track of what\n  // media element we are suppose to use.\n  //\n  // Using the current payload, we can determine which node we want to go to.\n  // If we have a media element, we want to go back to attached. If we have no\n  // media element, we want to go back to detached.\n  const payload = this.createEmptyPayload_();\n\n  const events = this.walker_.startNewRoute((currentPayload) => {\n    // When someone calls |unload| we can either be before attached or detached\n    // (there is nothing stopping someone from calling |detach| when we are\n    // already detached).\n    //\n    // If we are attached to the correct element, we can tear down the previous\n    // playback components and go to the attached media source node depending\n    // on whether or not the caller wants to pre-init media source.\n    //\n    // If we don't have a media element, we assume that we are already at the\n    // detached node - but only the walker knows that. To ensure we are actually\n    // there, we tell the walker to go to detach. While this is technically\n    // unnecessary, it ensures that we are in the state we want to be in and\n    // ready for the next request.\n    let destination = null;\n\n    if (currentPayload.mediaElement && initializeMediaSource) {\n      destination = this.mediaSourceNode_;\n    } else if (currentPayload.mediaElement) {\n      destination = this.attachNode_;\n    } else {\n      destination = this.detachNode_;\n    }\n\n    goog.asserts.assert(destination, 'We should have picked a destination.');\n\n    // Copy over the media element because we want to keep using the same\n    // element - the other values don't matter.\n    payload.mediaElement = currentPayload.mediaElement;\n\n    return {\n      node: destination,\n      payload: payload,\n      interruptible: false,\n    };\n  });\n\n  events.onStart = () => shaka.log.info('Starting unload...');\n  return this.wrapWalkerListenersWithPromise_(events);\n};\n\n\n/**\n * Tell the player to load the content at |assetUri| and start playback at\n * |startTime|. Before calling |load|, a call to |attach| must have succeeded.\n *\n * Calls to |load| will interrupt any in-progress calls to |load| but cannot\n * interrupt calls to |attach|, |detach|, or |unload|.\n *\n * @param {string} assetUri\n * @param {?number=} startTime\n *    When |startTime| is |null| or |undefined|, playback will start at the\n *    default start time (startTime=0 for VOD and startTime=liveEdge for LIVE).\n * @param {string|shaka.extern.ManifestParser.Factory=} mimeType\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.load = function(assetUri, startTime, mimeType) {\n  // Do not allow the player to be used after |destroy| is called.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) {\n    return Promise.reject(this.createAbortLoadError_());\n  }\n\n  // We dispatch the loading event when someone calls |load| because we want to\n  // surface the user intent.\n  this.dispatchEvent(new shaka.util.FakeEvent('loading'));\n\n  // Right away we know what the asset uri and start-of-load time are. We will\n  // fill-in the rest of the information later.\n  const payload = this.createEmptyPayload_();\n  payload.uri = assetUri;\n  payload.startTimeOfLoad = Date.now() / 1000;\n\n  if (mimeType && typeof mimeType != 'string') {\n    shaka.Deprecate.deprecateFeature(\n        2, 6,\n        'Loading with a manifest parser factory',\n        'Please register a manifest parser and for the mime-type.');\n    const Factory =\n        /** @type {shaka.extern.ManifestParser.Factory} */ (mimeType);\n    payload.factory = () => new Factory();\n  }\n\n  if (mimeType && typeof mimeType == 'string') {\n    payload.mimeType = /** @type {string} */ (mimeType);\n  }\n\n  // Because we allow |startTime| to be optional, it means that it will be\n  // |undefined| when not provided. This means that we need to re-map\n  // |undefined| to |null| while preserving |0| as a meaningful value.\n  if (startTime !== undefined) {\n    payload.startTime = startTime;\n  }\n\n  // TODO: Refactor to determine whether it's a manifest or not, and whether or\n  // not we can play it.  Then we could return a better error than\n  // UNABLE_TO_GUESS_MANIFEST_TYPE for WebM in Safari.\n  const useSrcEquals = this.shouldUseSrcEquals_(payload);\n  const destination = useSrcEquals ? this.srcEqualsNode_ : this.loadNode_;\n\n  // Allow this request to be interrupted, this will allow other requests to\n  // cancel a load and quickly start a new load.\n  const events = this.walker_.startNewRoute((currentPayload) => {\n    if (currentPayload.mediaElement == null) {\n      // Because we return null, this \"new route\" will not be used.\n      return null;\n    }\n\n    // Keep using whatever media element we have right now.\n    payload.mediaElement = currentPayload.mediaElement;\n\n    return {\n      node: destination,\n      payload: payload,\n      interruptible: true,\n    };\n  });\n\n  // Load's request is a little different, so we can't use our normal\n  // listeners-to-promise method. It is the only request where we may skip the\n  // request, so we need to set the on skip callback to reject with a specific\n  // error.\n  events.onStart = () => shaka.log.info('Starting load of ' + assetUri + '...');\n  return new Promise((resolve, reject) => {\n    events.onSkip = () => reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.NO_VIDEO_ELEMENT));\n\n    events.onEnd = () => resolve();\n    events.onCancel = () => reject(this.createAbortLoadError_());\n    events.onError = (e) => reject(e);\n  });\n};\n\n\n/**\n * Check if src= should be used to load the asset at |uri|. Assume that media\n * source is the default option, and that src= is for special cases.\n *\n * @param {shaka.routing.Payload} payload\n * @return {boolean}\n *    |true| if the content should be loaded with src=, |false| if the content\n *    should be loaded with MediaSource.\n * @private\n */\nshaka.Player.prototype.shouldUseSrcEquals_ = function(payload) {\n  const Platform = shaka.util.Platform;\n\n  // If an explicit ManifestParser factory has been given, we can't do src=.\n  if (payload.factory) {\n    return false;\n  }\n\n  // If we are using a platform that does not support media source, we will\n  // fall back to src= to handle all playback.\n  if (!Platform.supportsMediaSource()) {\n    return true;\n  }\n\n  // The most accurate way to tell the player how to load the content is via\n  // MIME type.  We can fall back to features of the URI if needed.\n  let mimeType = payload.mimeType;\n  const uri = payload.uri || '';\n\n  // If we don't have a MIME type, try to guess based on the file extension.\n  // TODO: Too generic to belong to ManifestParser now.  Refactor.\n  if (!mimeType) {\n    // Try using the uri extension.\n    const extension = shaka.media.ManifestParser.getExtension(uri);\n    mimeType = {\n      'mp4': 'video/mp4',\n      'm4v': 'video/mp4',\n      'm4a': 'audio/mp4',\n      'webm': 'video/webm',\n      'ts': 'video/mp2t',\n      'm3u8': 'application/x-mpegurl',\n      'mp3': 'audio/mpeg',\n      'aac': 'audio/aac',\n      'flac': 'audio/flac',\n    }[extension];\n  }\n\n  // TODO: The load graph system has a design limitation that requires routing\n  // destination to be chosen synchronously.  This means we can only make the\n  // right choice about src= consistently if we have a well-known file extension\n  // or API-provided MIME type.  Detection of MIME type from a HEAD request (as\n  // is done for manifest types) can't be done yet.\n\n  if (mimeType) {\n    // If we have a MIME type, check if the browser can play it natively.\n    // This will cover both single files and native HLS.\n    const canPlayNatively = Platform.supportsMediaType(mimeType);\n\n    // If we can't play natively, then src= isn't an option.\n    if (!canPlayNatively) {\n      return false;\n    }\n\n    const canPlayMediaSource =\n        shaka.media.ManifestParser.isSupported(uri, mimeType);\n\n    // If MediaSource isn't an option, the native option is our only chance.\n    if (!canPlayMediaSource) {\n      return true;\n    }\n\n    // If we land here, both are feasible.\n    goog.asserts.assert(canPlayNatively && canPlayMediaSource,\n                        'Both native and MSE playback should be possible!');\n\n    // We would prefer MediaSource in some cases, and src= in others.  For\n    // example, Android has native HLS, but we'd prefer our own MediaSource\n    // version there.  But for Safari desktop, we'd prefer the native one for\n    // now, because that's the only way we get FairPlay there.  So use src= over\n    // MSE on any Apple platform.\n    return Platform.isApple();\n  }\n\n  // Unless there are good reasons to use src= (single-file playback or native\n  // HLS), we prefer MediaSource.  So the final return value for choosing src=\n  // is false.\n  return false;\n};\n\n/**\n * This should only be called by the load graph when it is time to attach to\n * a media element. The only times this may be called are when we are being\n * asked to re-attach to the current media element, or attach to a new media\n * element while not attached to a media element.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * Attaching to a media element is defined as:\n *  - Registering error listeners to the media element.\n *  - Caching the video element for use outside of the load graph.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onAttach_ = function(has, wants) {\n  // If we don't have a media element yet, it means we are entering\n  // \"attach\" from another node.\n  //\n  // If we have a media element, it should match |wants.mediaElement|\n  // because it means we are going from \"attach\" to \"attach\".\n  //\n  // These constraints should be maintained and guaranteed by the routing\n  // logic in |getNextStep_|.\n  goog.asserts.assert(\n      has.mediaElement == null || has.mediaElement == wants.mediaElement,\n      'The routing logic failed. MediaElement requirement failed.');\n\n  if (has.mediaElement == null) {\n    has.mediaElement = wants.mediaElement;\n\n    const onError = (error) => this.onVideoError_(error);\n    this.eventManager_.listen(has.mediaElement, 'error', onError);\n  }\n\n  this.video_ = has.mediaElement;\n\n  return Promise.resolve();\n};\n\n/**\n * This should only be called by the load graph when it is time to detach from\n * a media element. The only times this may be called are when we are being\n * asked to detach from the current media element, or detach when we are already\n * detached.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * Detaching from a media element is defined as:\n *  - Removing error listeners from the media element.\n *  - Dropping the cached reference to the video element.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onDetach_ = function(has, wants) {\n  // If we are going from \"detached\" to \"detached\" we wouldn't have\n  // a media element to detach from.\n  if (has.mediaElement) {\n    this.eventManager_.unlisten(has.mediaElement, 'error');\n    has.mediaElement = null;\n  }\n\n  // Clear our cached copy of the media element.\n  this.video_ = null;\n\n  return Promise.resolve();\n};\n\n\n/**\n * This should only be called by the load graph when it is time to unload all\n * currently initialized playback components. Unlike the other load actions,\n * this action is built to be more general. We need to do this because we don't\n * know what state the player will be in before unloading (including after an\n * error occurred in the middle of a transition).\n *\n * This method assumes that any component could be |null| and should be safe to\n * call from any point in the load graph.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onUnload_ = async function(has, wants) {\n  // Set the load mode to unload right away so that all the public methods will\n  // stop using the internal components. We need to make sure that we are not\n  // overriding the destroyed state because we will unload when we are\n  // destroying the player.\n  if (this.loadMode_ != shaka.Player.LoadMode.DESTROYED) {\n    this.loadMode_ = shaka.Player.LoadMode.NOT_LOADED;\n  }\n\n  this.dispatchEvent(new shaka.util.FakeEvent('unloading'));\n\n  // Remove everything that has to do with loading content from our payload\n  // since we are releasing everything that depended on it.\n  has.factory = null;\n  has.mimeType = null;\n  has.startTime = null;\n  has.uri = null;\n\n  // In most cases we should have a media element. The one exception would\n  // be if there was an error and we, by chance, did not have a media element.\n  if (has.mediaElement) {\n    this.eventManager_.unlisten(has.mediaElement, 'loadeddata');\n    this.eventManager_.unlisten(has.mediaElement, 'playing');\n    this.eventManager_.unlisten(has.mediaElement, 'pause');\n    this.eventManager_.unlisten(has.mediaElement, 'ended');\n    this.eventManager_.unlisten(has.mediaElement, 'ratechange');\n  }\n\n  // Some observers use some playback components, shutting down the observers\n  // first ensures that they don't try to use the playback components\n  // mid-destroy.\n  if (this.playheadObservers_) {\n    this.playheadObservers_.release();\n    this.playheadObservers_ = null;\n  }\n\n  if (this.bufferPoller_) {\n    this.bufferPoller_.stop();\n    this.bufferPoller_ = null;\n  }\n\n  // Stop the parser early. Since it is at the start of the pipeline, it should\n  // be start early to avoid is pushing new data downstream.\n  if (this.parser_) {\n    await this.parser_.stop();\n    this.parser_ = null;\n  }\n\n  // Abr Manager will tell streaming engine what to do, so we need to stop\n  // it before we destroy streaming engine. Unlike with the other components,\n  // we do not release the instance, we will reuse it in later loads.\n  if (this.abrManager_) {\n    await this.abrManager_.stop();\n  }\n\n  // Streaming engine will push new data to media source engine, so we need\n  // to shut it down before destroy media source engine.\n  if (this.streamingEngine_) {\n    await this.streamingEngine_.destroy();\n    this.streamingEngine_ = null;\n  }\n\n  // Playhead is used by StreamingEngine, so we can't destroy this until after\n  // StreamingEngine has stopped.\n  if (this.playhead_) {\n    this.playhead_.release();\n    this.playhead_ = null;\n  }\n\n  // Media source engine holds onto the media element, and in order to detach\n  // the media keys (with drm engine), we need to break the connection between\n  // media source engine and the media element.\n  if (this.mediaSourceEngine_) {\n    await this.mediaSourceEngine_.destroy();\n    this.mediaSourceEngine_ = null;\n  }\n\n  // In order to unload a media element, we need to remove the src attribute and\n  // and then load again. When we destroy media source engine, this will be done\n  // for us, but for src=, we need to do it here.\n  //\n  // DrmEngine requires this to be done before we destroy DrmEngine itself.\n  if (has.mediaElement && has.mediaElement.src) {\n    has.mediaElement.removeAttribute('src');\n    has.mediaElement.load();\n  }\n\n  if (this.drmEngine_) {\n    await this.drmEngine_.destroy();\n    this.drmEngine_ = null;\n  }\n\n  this.activeStreams_.clear();\n  this.assetUri_ = null;\n  this.bufferObserver_ = null;\n  this.loadingTextStreams_.clear();\n  this.manifest_ = null;\n  this.stats_ = null;\n  this.lastTextFactory_ = null;\n  this.switchingPeriods_ = true;\n\n  // Make sure that the app knows of the new buffering state.\n  this.updateBufferState_();\n};\n\n\n/**\n * This should only be called by the load graph when it is time to initialize\n * media source engine. The only time this may be called is when we are attached\n * to the same media element as in the request.\n *\n * This method assumes that it is safe for it to execute. The load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n *\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onInitializeMediaSourceEngine_ = async function(\n    has, wants) {\n  goog.asserts.assert(\n      shaka.util.Platform.supportsMediaSource(),\n      'We should not be initializing media source on a platform that does ' +\n          'not support media source.');\n  goog.asserts.assert(\n      has.mediaElement,\n      'We should have a media element when initializing media source.');\n  goog.asserts.assert(\n      has.mediaElement == wants.mediaElement,\n      '|has| and |wants| should have the same media element when ' +\n          'initializing media source.');\n\n  goog.asserts.assert(\n      this.mediaSourceEngine_ == null,\n      'We should not have a media source engine yet.');\n\n  const closedCaptionsParser =\n      shaka.media.MuxJSClosedCaptionParser.isSupported() ?\n      new shaka.media.MuxJSClosedCaptionParser() :\n      new shaka.media.NoopCaptionParser();\n\n  // When changing text visibility we need to update both the text displayer\n  // and streaming engine because we don't always stream text. To ensure that\n  // text displayer and streaming engine are always in sync, wait until they are\n  // both initialized before setting the initial value.\n  const TextDisplayerFactory = this.config_.textDisplayFactory;\n  const textDisplayer = new TextDisplayerFactory();\n  this.lastTextFactory_ = TextDisplayerFactory;\n\n  const mediaSourceEngine = this.createMediaSourceEngine(\n      has.mediaElement, closedCaptionsParser, textDisplayer);\n\n  // Wait for media source engine to finish opening. This promise should\n  // NEVER be rejected as per the media source engine implementation.\n  await mediaSourceEngine.open();\n\n  // Wait until it is ready to actually store the reference.\n  this.mediaSourceEngine_ = mediaSourceEngine;\n};\n\n\n/**\n * Create the parser for the asset located at |wants.uri|. This should only be\n * called as part of the load graph.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onInitializeParser_ = async function(has, wants) {\n  goog.asserts.assert(\n      has.mediaElement,\n      'We should have a media element when initializing the parser.');\n  goog.asserts.assert(\n      has.mediaElement == wants.mediaElement,\n      '|has| and |wants| should have the same media element when ' +\n          'initializing the parser.');\n\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Need networking engine when initializing the parser.');\n  goog.asserts.assert(\n       this.config_,\n      'Need player config when initializing the parser.');\n\n  // We are going to \"lock-in\" the factory, mime type, and uri since they are\n  // what we are going to use to create our parser and parse the manifest.\n  has.factory = wants.factory;\n  has.mimeType = wants.mimeType;\n  has.uri = wants.uri;\n\n  goog.asserts.assert(\n      has.uri,\n      'We should have an asset uri when initializing the parsing.');\n\n  // Store references to things we asserted so that we don't need to reassert\n  // them again later.\n  const assetUri = has.uri;\n  const networkingEngine = this.networkingEngine_;\n\n  // Save the uri so that it can be used outside of the load-graph.\n  this.assetUri_ = assetUri;\n\n  // Create the parser that we will use to parse the manifest.\n  if (has.factory) {\n    this.parser_ = has.factory();\n  } else {\n    this.parser_ = await shaka.media.ManifestParser.create(\n        assetUri,\n        networkingEngine,\n        this.config_.manifest.retryParameters,\n        has.mimeType);\n  }\n\n  this.parser_.configure(this.config_.manifest);\n};\n\n\n/**\n * Parse the manifest at |has.uri| using the parser that should have already\n * been created. This should only be called as part of the load graph.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!shaka.util.AbortableOperation}\n * @private\n */\nshaka.Player.prototype.onParseManifest_ = function(has, wants) {\n  goog.asserts.assert(\n      has.factory == wants.factory,\n      '|has| and |wants| should have the same factory when parsing.');\n  goog.asserts.assert(\n      has.mimeType == wants.mimeType,\n      '|has| and |wants| should have the same mime type when parsing.');\n  goog.asserts.assert(\n      has.uri == wants.uri,\n      '|has| and |wants| should have the same uri when parsing.');\n\n  goog.asserts.assert(\n      has.uri,\n      '|has| should have a valid uri when parsing.');\n  goog.asserts.assert(\n      has.uri == this.assetUri_,\n      '|has.uri| should match the cached asset uri.');\n\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Need networking engine to parse manifest.');\n  goog.asserts.assert(\n       this.config_,\n      'Need player config to parse manifest.');\n\n  goog.asserts.assert(\n      this.parser_,\n      '|this.parser_| should have been set in an earlier step.');\n\n  // Store references to things we asserted so that we don't need to reassert\n  // them again later.\n  const assetUri = has.uri;\n  const networkingEngine = this.networkingEngine_;\n\n  // This will be needed by the parser once it starts parsing, so we will\n  // initialize it now even through it appears a little out-of-place.\n  this.regionTimeline_ = new shaka.media.RegionTimeline();\n  this.regionTimeline_.setListeners(/* onRegionAdded */ (region) => {\n    this.onRegionEvent_('timelineregionadded', region);\n  });\n\n  const playerInterface = {\n    networkingEngine: networkingEngine,\n    filterNewPeriod: (period) => this.filterNewPeriod_(period),\n    filterAllPeriods: (periods) => this.filterAllPeriods_(periods),\n\n    // Called when the parser finds a timeline region. This can be called\n    // before we start playback or during playback (live/in-progress manifest).\n    onTimelineRegionAdded: (region) => this.regionTimeline_.addRegion(region),\n\n    onEvent: (event) => this.dispatchEvent(event),\n    onError: (error) => this.onError_(error),\n  };\n\n  return new shaka.util.AbortableOperation(\n      /* promise= */ Promise.resolve().then(async () => {\n        this.manifest_ = await this.parser_.start(assetUri, playerInterface);\n\n        // This event is fired after the manifest is parsed, but before any\n        // filtering takes place.\n        this.dispatchEvent(new shaka.util.FakeEvent('manifestparsed'));\n\n        // We require all manifests to have already one period.\n        if (this.manifest_.periods.length == 0) {\n          throw new shaka.util.Error(\n              shaka.util.Error.Severity.CRITICAL,\n              shaka.util.Error.Category.MANIFEST,\n              shaka.util.Error.Code.NO_PERIODS);\n        }\n\n        // Make sure that all periods are either: audio-only, video-only, or\n        // audio-video.\n        shaka.Player.filterForAVVariants_(this.manifest_.periods);\n      }),\n      /* onAbort= */ () => {\n        shaka.log.info('Aborting parser step...');\n        return this.parser_.stop();\n      });\n};\n\n\n/**\n * This should only be called by the load graph when it is time to initialize\n * drmEngine. The only time this may be called is when we are attached a\n * media element and have parsed a manifest.\n *\n * The load-graph is responsible for ensuring all assumptions made by this\n * method are valid before executing it.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n */\nshaka.Player.prototype.onInitializeDrm_ = async function(has, wants) {\n  goog.asserts.assert(\n      has.factory == wants.factory,\n      'The load graph should have ensured the factories matched.');\n  goog.asserts.assert(\n      has.mimeType == wants.mimeType,\n      'The load graph should have ensured the mime types matched.');\n  goog.asserts.assert(\n      has.uri == wants.uri,\n      'The load graph should have ensured the uris matched');\n\n  goog.asserts.assert(\n      this.networkingEngine_,\n      '|onInitializeDrm_| should never be called after |destroy|');\n  goog.asserts.assert(\n      this.config_,\n      '|onInitializeDrm_| should never be called after |destroy|');\n  goog.asserts.assert(\n      this.manifest_,\n      '|this.manifest_| should have been set in an earlier step.');\n\n  this.drmEngine_ = this.createDrmEngine({\n    netEngine: this.networkingEngine_,\n    onError: (e) => {\n      this.onError_(e);\n    },\n    onKeyStatus: (map) => {\n      this.onKeyStatus_(map);\n    },\n    onExpirationUpdated: (id, expiration) => {\n      this.onExpirationUpdated_(id, expiration);\n    },\n    onEvent: (e) => {\n      this.dispatchEvent(e);\n    },\n  });\n\n  this.drmEngine_.configure(this.config_.drm);\n\n  await this.drmEngine_.initForPlayback(\n      shaka.util.Periods.getAllVariantsFrom(this.manifest_.periods),\n      this.manifest_.offlineSessionIds);\n\n  // Now that we have drm information, filter the manifest (again) so that we\n  // can ensure we only use variants with the selected key system.\n  this.filterAllPeriods_(this.manifest_.periods);\n};\n\n/**\n * This should only be called by the load graph when it is time to load all\n * playback components needed for playback. The only times this may be called\n * is when we are attached to the same media element as in the request.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * Loading is defined as:\n *  - Attaching all playback-related listeners to the media element\n *  - Initializing playback and observers\n *  - Initializing ABR Manager\n *  - Initializing Streaming Engine\n *  - Starting playback at |wants.startTime|\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @private\n */\nshaka.Player.prototype.onLoad_ = async function(has, wants) {\n  goog.asserts.assert(\n      has.factory == wants.factory,\n      '|has| and |wants| should have the same factory when loading.');\n  goog.asserts.assert(\n      has.mimeType == wants.mimeType,\n      '|has| and |wants| should have the same mime type when loading.');\n  goog.asserts.assert(\n      has.uri == wants.uri,\n      '|has| and |wants| should have the same uri when loading.');\n\n  goog.asserts.assert(\n      has.mediaElement,\n      'We should have a media element when loading.');\n  goog.asserts.assert(\n      wants.startTimeOfLoad,\n      '|wants| should tell us when the load was originally requested');\n\n  // Since we are about to start playback, we will lock in the start time as\n  // something we are now depending on.\n  has.startTime = wants.startTime;\n\n  // Store a reference to values in |has| after asserting so that closure will\n  // know that they will still be non-null between calls to await.\n  const mediaElement = has.mediaElement;\n  const assetUri = has.uri;\n\n  // Save the uri so that it can be used outside of the load-graph.\n  this.assetUri_ = assetUri;\n\n  // Stats are for a single playback/load session. Stats must be initialized\n  // before we allow calls to |updateStateHistory|.\n  this.stats_ = new shaka.util.Stats();\n\n  const updateStateHistory = () => this.updateStateHistory_();\n  const onRateChange = () => this.onRateChange_();\n  this.eventManager_.listen(mediaElement, 'playing', updateStateHistory);\n  this.eventManager_.listen(mediaElement, 'pause', updateStateHistory);\n  this.eventManager_.listen(mediaElement, 'ended', updateStateHistory);\n  this.eventManager_.listen(mediaElement, 'ratechange', onRateChange);\n\n  const AbrManagerFactory = this.config_.abrFactory;\n  if (!this.abrManager_ || this.abrManagerFactory_ != AbrManagerFactory) {\n    this.abrManagerFactory_ = AbrManagerFactory;\n    this.abrManager_ = new AbrManagerFactory();\n    this.abrManager_.configure(this.config_.abr);\n  }\n\n  // TODO: When a manifest update adds a new period, that period's closed\n  // captions should also be turned into text streams. This should be called\n  // for each new period as well.\n  this.createTextStreamsForClosedCaptions_(this.manifest_.periods);\n\n  // Copy preferred languages from the config again, in case the config was\n  // changed between construction and playback.\n  this.currentAdaptationSetCriteria_ =\n      new shaka.media.PreferenceBasedCriteria(\n          this.config_.preferredAudioLanguage,\n          this.config_.preferredVariantRole,\n          this.config_.preferredAudioChannelCount);\n\n  this.currentTextLanguage_ = this.config_.preferredTextLanguage;\n\n  shaka.Player.applyPlayRange_(this.manifest_.presentationTimeline,\n                               this.config_.playRangeStart,\n                               this.config_.playRangeEnd);\n\n  await this.drmEngine_.attach(mediaElement);\n\n  this.abrManager_.init((variant, clearBuffer, safeMargin) => {\n    return this.switch_(variant, clearBuffer, safeMargin);\n  });\n\n  this.playhead_ = this.createPlayhead(has.startTime);\n  this.playheadObservers_ = this.createPlayheadObserversForMSE_();\n\n  this.playRateController_ = new shaka.media.PlayRateController({\n    getRate: () => has.mediaElement.playbackRate,\n    setRate: (rate) => { has.mediaElement.playbackRate = rate; },\n    movePlayhead: (delta) => { has.mediaElement.currentTime += delta; },\n  });\n\n  // We need to start the buffer management code near the end because it will\n  // set the initial buffering state and that depends on other components being\n  // initialized.\n  const rebufferThreshold = Math.max(\n      this.manifest_.minBufferTime, this.config_.streaming.rebufferingGoal);\n  this.startBufferManagement_(rebufferThreshold);\n\n  this.streamingEngine_ = this.createStreamingEngine();\n  this.streamingEngine_.configure(this.config_.streaming);\n\n  // If the content is multi-codec and the browser can play more than one of\n  // them, choose codecs now before we initialize streaming.\n  this.chooseCodecsAndFilterManifest_();\n\n  // Set the load mode to \"loaded with media source\" as late as possible so that\n  // public methods won't try to access internal components until they're all\n  // initialized. We MUST switch to loaded before calling \"streaming\" so that\n  // they can access internal information.\n  this.loadMode_ = shaka.Player.LoadMode.MEDIA_SOURCE;\n\n  // The event must be fired after we filter by restrictions but before the\n  // active stream is picked to allow those listening for the \"streaming\" event\n  // to make changes before streaming starts.\n  this.dispatchEvent(new shaka.util.FakeEvent('streaming'));\n\n  // Start streaming content. This will start the flow of content down to media\n  // source, including picking the initial streams to play.\n  await this.streamingEngine_.start();\n\n  // We MUST wait until after we create streaming engine to adjust the start\n  // time because we rely on the active audio and video streams, which are\n  // selected in |StreamingEngine.init|.\n  if (this.config_.streaming.startAtSegmentBoundary) {\n    const startTime = this.playhead_.getTime();\n    const adjustedTime = this.adjustStartTime_(startTime);\n\n    this.playhead_.setStartTime(adjustedTime);\n  }\n\n  // Re-filter the manifest after streams have been chosen.\n  this.manifest_.periods.forEach(this.filterNewPeriod_.bind(this));\n  // Dispatch a 'trackschanged' event now that all initial filtering is done.\n  this.onTracksChanged_();\n  // Since the first streams just became active, send an adaptation event.\n  this.onAdaptation_();\n\n  // Now that we've filtered out variants that aren't compatible with the\n  // active one, update abr manager with filtered variants for the current\n  // period.\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n  const hasPrimary = currentPeriod.variants.some((v) => v.primary);\n\n  if (!this.config_.preferredAudioLanguage && !hasPrimary) {\n    shaka.log.warning('No preferred audio language set.  We will choose an ' +\n                      'arbitrary language initially');\n  }\n\n  this.chooseVariant_(currentPeriod.variants);\n\n  // Wait for the 'loadeddata' event to measure load() latency.\n  this.eventManager_.listenOnce(mediaElement, 'loadeddata', () => {\n    const now = Date.now() / 1000;\n    const delta = now - wants.startTimeOfLoad;\n\n    this.stats_.setLoadLatency(delta);\n  });\n};\n\n\n/**\n * This should only be called by the load graph when it is time to initialize\n * drmEngine for src= playbacks.\n *\n * The load-graph is responsible for ensuring all assumptions made by this\n * method are valid before executing it.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!Promise}\n */\nshaka.Player.prototype.onInitializeSrcEqualsDrm_ = async function(has, wants) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  goog.asserts.assert(\n      this.networkingEngine_,\n      '|onInitializeSrcEqualsDrm_| should never be called after |destroy|');\n  goog.asserts.assert(\n      this.config_,\n      '|onInitializeSrcEqualsDrm_| should never be called after |destroy|');\n\n  this.drmEngine_ = this.createDrmEngine({\n    netEngine: this.networkingEngine_,\n    onError: (e) => {\n      this.onError_(e);\n    },\n    onKeyStatus: (map) => {\n      this.onKeyStatus_(map);\n    },\n    onExpirationUpdated: (id, expiration) => {\n      this.onExpirationUpdated_(id, expiration);\n    },\n    onEvent: (e) => {\n      this.dispatchEvent(e);\n    },\n  });\n\n  this.drmEngine_.configure(this.config_.drm);\n\n  // TODO: Instead of feeding DrmEngine with Variants, we should refactor\n  // DrmEngine so that it takes a minimal config derived from Variants.  In\n  // cases like this one or in removal of stored content, the details are\n  // largely unimportant.  We should have a saner way to initialize DrmEngine.\n  // That would also insulate DrmEngine from manifest changes in the future.\n  // For now, that is time-consuming and this synthetic Variant is easy, so I'm\n  // putting it off.  Since this is only expected to be used for native HLS in\n  // Safari, this should be safe. -JCP\n  /** @type {shaka.extern.Variant} */\n  const variant = {\n    id: 0,\n    language: 'und',\n    primary: false,\n    audio: null,\n    video: {\n      id: 0,\n      originalId: null,\n      createSegmentIndex: Promise.resolve.bind(Promise),\n      findSegmentPosition: (time) => null,\n      getSegmentReference: (ref) => null,\n      initSegmentReference: null,\n      presentationTimeOffset: 0,\n      mimeType: 'video/mp4',\n      codecs: '',\n      encrypted: true,\n      keyId: null,\n      language: 'und',\n      label: null,\n      type: ContentType.VIDEO,\n      primary: false,\n      trickModeVideo: null,\n      emsgSchemeIdUris: null,\n      roles: [],\n      channelsCount: null,\n      closedCaptions: null,\n    },\n    bandwidth: 100,\n    drmInfos: [],  // Filled in by DrmEngine config.\n    allowedByApplication: true,\n    allowedByKeySystem: true,\n  };\n\n  await this.drmEngine_.initForPlayback([variant], /* offlineSessionIds= */ []);\n  await this.drmEngine_.attach(has.mediaElement);\n};\n\n/**\n * This should only be called by the load graph when it is time to set-up the\n * media element to play content using src=. The only times this may be called\n * is when we are attached to the same media element as in the request.\n *\n * This method assumes that it is safe for it to execute, the load-graph is\n * responsible for ensuring all assumptions are true.\n *\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {!shaka.util.AbortableOperation}\n *\n * @private\n */\nshaka.Player.prototype.onSrcEquals_ = function(has, wants) {\n  goog.asserts.assert(\n      has.mediaElement,\n      'We should have a media element when loading.');\n  goog.asserts.assert(\n      wants.uri,\n      '|has| should have a valid uri when loading.');\n  goog.asserts.assert(\n      wants.startTimeOfLoad,\n      '|wants| should tell us when the load was originally requested');\n  goog.asserts.assert(\n      this.video_ == has.mediaElement,\n      'The video element should match our media element');\n\n  // Lock-in the values that we are using so that the routing logic knows what\n  // we have.\n  has.uri = wants.uri;\n  has.startTime = wants.startTime;\n\n  // Save the uri so that it can be used outside of the load-graph.\n  this.assetUri_ = has.uri;\n\n  // Stats are for a single playback/load session.\n  this.stats_ = new shaka.util.Stats();\n\n  this.playhead_ = new shaka.media.SrcEqualsPlayhead(has.mediaElement);\n\n  if (has.startTime != null) {\n    this.playhead_.setStartTime(has.startTime);\n  }\n\n  this.playRateController_ = new shaka.media.PlayRateController({\n    getRate: () => has.mediaElement.playbackRate,\n    setRate: (rate) => { has.mediaElement.playbackRate = rate; },\n    movePlayhead: (delta) => { has.mediaElement.currentTime += delta; },\n  });\n\n  // We need to start the buffer management code near the end because it will\n  // set the initial buffering state and that depends on other components being\n  // initialized.\n  const rebufferThreshold = this.config_.streaming.rebufferingGoal;\n  this.startBufferManagement_(rebufferThreshold);\n\n  // Add all media element listeners.\n  const updateStateHistory = () => this.updateStateHistory_();\n  this.eventManager_.listen(has.mediaElement, 'playing', updateStateHistory);\n  this.eventManager_.listen(has.mediaElement, 'pause', updateStateHistory);\n  this.eventManager_.listen(has.mediaElement, 'ended', updateStateHistory);\n\n  // Wait for the 'loadeddata' event to measure load() latency.\n  this.eventManager_.listenOnce(has.mediaElement, 'loadeddata', () => {\n    const now = Date.now() / 1000;\n    const delta = now - wants.startTimeOfLoad;\n\n    this.stats_.setLoadLatency(delta);\n  });\n\n  // The audio tracks are only available on Safari at the moment, but this\n  // drives the tracks API for Safari's native HLS. So when they change,\n  // fire the corresponding Shaka Player event.\n  if (this.video_.audioTracks) {\n    this.eventManager_.listen(\n        this.video_.audioTracks, 'addtrack', () => this.onTracksChanged_());\n    this.eventManager_.listen(\n        this.video_.audioTracks, 'removetrack', () => this.onTracksChanged_());\n  }\n  if (this.video_.textTracks) {\n    // This is a real EventTarget, but the compiler doesn't know that.\n    // TODO: File a bug or send a PR to the compiler externs to fix this.\n    const textTracks = /** @type {EventTarget} */(this.video_.textTracks);\n    this.eventManager_.listen(\n        textTracks, 'addtrack', () => this.onTracksChanged_());\n    this.eventManager_.listen(\n        textTracks, 'removetrack', () => this.onTracksChanged_());\n  }\n\n  // By setting |src| we are done \"loading\" with src=. We don't need to set the\n  // current time because |playhead| will do that for us.\n  has.mediaElement.src = has.uri;\n\n  // Set the load mode last so that we know that all our components are\n  // initialized.\n  this.loadMode_ = shaka.Player.LoadMode.SRC_EQUALS;\n\n  // The event doesn't mean as much for src= playback, since we don't control\n  // streaming.  But we should fire it in this path anyway since some\n  // applications may be expecting it as a life-cycle event.\n  this.dispatchEvent(new shaka.util.FakeEvent('streaming'));\n\n  // This is fully loaded when we have loaded the first frame.\n  const fullyLoaded = new shaka.util.PublicPromise();\n  if (this.video_.readyState >= HTMLMediaElement.HAVE_CURRENT_DATA) {\n    // Already done!\n    fullyLoaded.resolve();\n  } else if (this.video_.error) {\n    // Already failed!\n    fullyLoaded.reject(this.videoErrorToShakaError_());\n  } else {\n    // Wait for success or failure.\n    this.eventManager_.listenOnce(this.video_, 'loadeddata', () => {\n      fullyLoaded.resolve();\n    });\n    this.eventManager_.listenOnce(this.video_, 'error', () => {\n      fullyLoaded.reject(this.videoErrorToShakaError_());\n    });\n  }\n  return new shaka.util.AbortableOperation(fullyLoaded, /* onAbort= */ () => {\n    const abortedError = new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n    fullyLoaded.reject(abortedError);\n    return Promise.resolve();  // Abort complete.\n  });\n};\n\n/**\n * Take a series of periods and ensure that they only contain one type of\n * variant. The different options are:\n *  1. Audio-Video\n *  2. Audio-Only\n *  3. Video-Only\n *\n * A manifest can only contain a single type because once we initialize media\n * source to expect specific streams, it must always have content for those\n * streams. If we were to start period 1 with audio+video but period 2 only had\n * audio, media source would block waiting for video content.\n *\n * @param {!Array.<shaka.extern.Period>} periods\n * @private\n */\nshaka.Player.filterForAVVariants_ = function(periods) {\n  const isAVVariant = (variant) => {\n    // Audio-video variants may include both streams separately or may be single\n    // multiplexed streams with multiple codecs.\n    return (variant.video && variant.audio) ||\n           (variant.video && variant.video.codecs.includes(','));\n  };\n  const hasAVVariant = periods.some((period) => {\n    return period.variants.some(isAVVariant);\n  });\n  if (hasAVVariant) {\n    shaka.log.debug('Found variant with audio and video content, ' +\n        'so filtering out audio-only content in all periods.');\n    periods.forEach((period) => {\n      period.variants = period.variants.filter(isAVVariant);\n    });\n  }\n};\n\n\n/**\n * In case of multiple usable codecs, choose one based on lowest average\n * bandwidth and filter out the rest.\n * @private\n */\nshaka.Player.prototype.chooseCodecsAndFilterManifest_ = function() {\n  // Collect a list of variants for all periods.\n  /** @type {!Array.<shaka.extern.Variant>} */\n  let variants = this.manifest_.periods.reduce(\n      (variants, period) => variants.concat(period.variants), []);\n\n  // To start, consider a subset of variants based on audio channel preferences.\n  // For some content (#1013), surround-sound variants will use a different\n  // codec than stereo variants, so it is important to choose codecs **after**\n  // considering the audio channel config.\n  variants = shaka.util.StreamUtils.filterVariantsByAudioChannelCount(\n      variants, this.config_.preferredAudioChannelCount);\n\n  function variantCodecs(variant) {\n    // Only consider the base of the codec string.  For example, these should\n    // both be considered the same codec: avc1.42c01e, avc1.4d401f\n    let baseVideoCodec = '';\n    if (variant.video) {\n      baseVideoCodec = shaka.util.MimeUtils.getCodecBase(variant.video.codecs);\n    }\n\n    let baseAudioCodec = '';\n    if (variant.audio) {\n      baseAudioCodec = shaka.util.MimeUtils.getCodecBase(variant.audio.codecs);\n    }\n\n    return baseVideoCodec + '-' + baseAudioCodec;\n  }\n\n  // Now organize variants into buckets by codecs.\n  /** @type {!shaka.util.MultiMap.<shaka.extern.Variant>} */\n  const variantsByCodecs = new shaka.util.MultiMap();\n  variants.forEach((variant) => {\n    const group = variantCodecs(variant);\n    variantsByCodecs.push(group, variant);\n  });\n\n  // Compute the average bandwidth for each group of variants.\n  // Choose the lowest-bandwidth codecs.\n  let bestCodecs = null;\n  let lowestAverageBandwidth = Infinity;\n  variantsByCodecs.forEach((codecs, variants) => {\n    let sum = 0;\n    let num = 0;\n    variants.forEach(function(variant) {\n      sum += variant.bandwidth || 0;\n      ++num;\n    });\n    let averageBandwidth = sum / num;\n    shaka.log.debug('codecs', codecs, 'avg bandwidth', averageBandwidth);\n\n    if (averageBandwidth < lowestAverageBandwidth) {\n      bestCodecs = codecs;\n      lowestAverageBandwidth = averageBandwidth;\n    }\n  });\n  goog.asserts.assert(bestCodecs != null, 'Should have chosen codecs!');\n  goog.asserts.assert(!isNaN(lowestAverageBandwidth),\n      'Bandwidth should be a number!');\n\n  // Filter out any variants that don't match, forcing AbrManager to choose from\n  // the most efficient variants possible.\n  this.manifest_.periods.forEach(function(period) {\n    period.variants = period.variants.filter(function(variant) {\n      let codecs = variantCodecs(variant);\n      if (codecs == bestCodecs) return true;\n\n      shaka.log.debug('Dropping Variant (better codec available)', variant);\n      return false;\n    });\n  });\n};\n\n\n/**\n * Create a new DrmEngine instance. This may be replaced by tests to create fake\n * instances. Configuration and initialization will be handled after\n * |createDrmEngine|.\n *\n * @param {shaka.media.DrmEngine.PlayerInterface} playerInterface\n * @return {!shaka.media.DrmEngine}\n */\nshaka.Player.prototype.createDrmEngine = function(playerInterface) {\n  return new shaka.media.DrmEngine(playerInterface);\n};\n\n\n/**\n * Creates a new instance of NetworkingEngine.  This can be replaced by tests\n * to create fake instances instead.\n *\n * @return {!shaka.net.NetworkingEngine}\n */\nshaka.Player.prototype.createNetworkingEngine = function() {\n  /** @type {function(number, number)} */\n  const onProgressUpdated_ = (deltaTimeMs, bytesDownloaded) => {\n    // In some situations, such as during offline storage, the abr manager might\n    // not yet exist. Therefore, we need to check if abr manager has been\n    // initialized before using it.\n    if (this.abrManager_) {\n      this.abrManager_.segmentDownloaded(deltaTimeMs, bytesDownloaded);\n    }\n  };\n\n  return new shaka.net.NetworkingEngine(onProgressUpdated_);\n};\n\n\n/**\n * Creates a new instance of Playhead.  This can be replaced by tests to create\n * fake instances instead.\n *\n * @param {?number} startTime\n * @return {!shaka.media.Playhead}\n */\nshaka.Player.prototype.createPlayhead = function(startTime) {\n  goog.asserts.assert(this.manifest_, 'Must have manifest');\n  goog.asserts.assert(this.video_, 'Must have video');\n  return new shaka.media.MediaSourcePlayhead(\n      this.video_,\n      this.manifest_,\n      this.config_.streaming,\n      startTime,\n      () => this.onSeek_(),\n      (event) => this.dispatchEvent(event));\n};\n\n\n/**\n * Create the observers for MSE playback. These observers are responsible for\n * notifying the app and player of specific events during MSE playback.\n *\n * @return {!shaka.media.PlayheadObserverManager}\n * @private\n */\nshaka.Player.prototype.createPlayheadObserversForMSE_ = function() {\n  goog.asserts.assert(this.manifest_, 'Must have manifest');\n  goog.asserts.assert(this.regionTimeline_, 'Must have region timeline');\n  goog.asserts.assert(this.video_, 'Must have video element');\n\n  // Create the period observer. This will allow us to notify the app when we\n  // transition between periods.\n  const periodObserver = new shaka.media.PeriodObserver(this.manifest_);\n  periodObserver.setListeners((period) => this.onChangePeriod_());\n\n  // Create the region observer. This will allow us to notify the app when we\n  // move in and out of timeline regions.\n  const regionObserver = new shaka.media.RegionObserver(this.regionTimeline_);\n  const onEnterRegion = (region, seeking) => {\n    this.onRegionEvent_('timelineregionenter', region);\n  };\n  const onExitRegion = (region, seeking) => {\n    this.onRegionEvent_('timelineregionexit', region);\n  };\n  const onSkipRegion = (region, seeking) => {\n    // If we are seeking, we don't want to surface the enter/exit events since\n    // they didn't play through them.\n    if (!seeking) {\n      this.onRegionEvent_('timelineregionenter', region);\n      this.onRegionEvent_('timelineregionexit', region);\n    }\n  };\n  regionObserver.setListeners(onEnterRegion, onExitRegion, onSkipRegion);\n\n  // Now that we have all our observers, create a manager for them.\n  const manager = new shaka.media.PlayheadObserverManager(this.video_);\n  manager.manage(periodObserver);\n  manager.manage(regionObserver);\n\n  return manager;\n};\n\n\n/**\n * Initialize and start the buffering system (observer and timer) so that we can\n * monitor our buffer lead during playback.\n *\n * @param {number} rebufferingGoal\n */\nshaka.Player.prototype.startBufferManagement_ = function(rebufferingGoal) {\n  goog.asserts.assert(\n      !this.bufferObserver_,\n      'No buffering observer should exist before initialization.');\n\n  goog.asserts.assert(\n      !this.bufferPoller_,\n      'No buffer timer should exist before initialization.');\n\n  // The threshold to transition back to satisfied when starving.\n  const starvingThreshold = rebufferingGoal;\n  // The threshold to transition into starving when satisfied.\n  // We use a \"typical\" threshold, unless the rebufferingGoal is unusually low.\n  // Then we force the value down to half the rebufferingGoal, since\n  // starvingThreshold must be strictly larger than satisfiedThreshold for the\n  // logic in BufferingObserver to work correctly.\n  const satisfiedThreshold =\n      Math.min(shaka.Player.TYPICAL_BUFFERING_THRESHOLD_, rebufferingGoal / 2);\n\n  this.bufferObserver_ = new shaka.media.BufferingObserver(\n        starvingThreshold, satisfiedThreshold);\n\n  // Force us back to a buffering state. This ensure everything is starting in\n  // the same state.\n  this.bufferObserver_.setState(shaka.media.BufferingObserver.State.STARVING);\n  this.updateBufferState_();\n\n  // TODO: We should take some time to look into the effects of our\n  //       quarter-second refresh practice. We often use a quarter-second\n  //       but we have no documentation about why.\n  this.bufferPoller_ = new shaka.util.Timer(() => {\n    this.pollBufferState_();\n  }).tickEvery(/* seconds= */ 0.25);\n};\n\n\n/**\n * This method is called periodically to check what the buffering observer says\n * so that we can update the rest of the buffering behaviours.\n *\n * @private\n */\nshaka.Player.prototype.pollBufferState_ = function() {\n  goog.asserts.assert(\n      this.video_,\n      'Need a media element to update the buffering observer');\n\n  goog.asserts.assert(\n      this.bufferObserver_,\n      'Need a buffering observer to update');\n\n  let bufferedToEnd;\n  switch (this.loadMode_) {\n    case shaka.Player.LoadMode.SRC_EQUALS:\n      bufferedToEnd = this.isBufferedToEndSrc_();\n      break;\n    case shaka.Player.LoadMode.MEDIA_SOURCE:\n      bufferedToEnd = this.isBufferedToEndMS_();\n      break;\n    default:\n      bufferedToEnd = false;\n      break;\n  }\n\n  const bufferLead = shaka.media.TimeRangesUtils.bufferedAheadOf(\n      this.video_.buffered,\n      this.video_.currentTime);\n\n  const stateChanged = this.bufferObserver_.update(bufferLead, bufferedToEnd);\n\n  // If the state changed, we need to surface the event.\n  if (stateChanged) {\n    this.updateBufferState_();\n  }\n};\n\n\n/**\n * Create a new media source engine. This will ONLY be replaced by tests as a\n * way to inject fake media source engine instances.\n *\n * @param {!HTMLMediaElement} mediaElement\n * @param {!shaka.media.IClosedCaptionParser} closedCaptionsParser\n * @param {!shaka.extern.TextDisplayer} textDisplayer\n *\n * @return {!shaka.media.MediaSourceEngine}\n */\nshaka.Player.prototype.createMediaSourceEngine = function(\n    mediaElement, closedCaptionsParser, textDisplayer) {\n  return new shaka.media.MediaSourceEngine(\n      mediaElement, closedCaptionsParser, textDisplayer);\n};\n\n\n/**\n * Creates a new instance of StreamingEngine.  This can be replaced by tests\n * to create fake instances instead.\n *\n * @return {!shaka.media.StreamingEngine}\n */\nshaka.Player.prototype.createStreamingEngine = function() {\n  goog.asserts.assert(\n      this.playhead_ && this.abrManager_ && this.mediaSourceEngine_ &&\n      this.manifest_,\n      'Must not be destroyed');\n\n  /** @type {shaka.media.StreamingEngine.PlayerInterface} */\n  let playerInterface = {\n    getPresentationTime: () => this.playhead_.getTime(),\n    getBandwidthEstimate: () => this.abrManager_.getBandwidthEstimate(),\n    mediaSourceEngine: this.mediaSourceEngine_,\n    netEngine: this.networkingEngine_,\n    onChooseStreams: this.onChooseStreams_.bind(this),\n    onCanSwitch: this.canSwitch_.bind(this),\n    onError: this.onError_.bind(this),\n    onEvent: (event) => this.dispatchEvent(event),\n    onManifestUpdate: this.onManifestUpdate_.bind(this),\n    onSegmentAppended: this.onSegmentAppended_.bind(this),\n  };\n\n  return new shaka.media.StreamingEngine(this.manifest_, playerInterface);\n};\n\n\n/**\n * Configure the Player instance.\n *\n * The config object passed in need not be complete.  It will be merged with\n * the existing Player configuration.\n *\n * Config keys and types will be checked.  If any problems with the config\n * object are found, errors will be reported through logs and this returns\n * false.  If there are errors, valid config objects are still set.\n *\n * @param {string|!Object} config This should either be a field name or an\n *   object following the form of {@link shaka.extern.PlayerConfiguration},\n *   where you may omit any field you do not wish to change.\n * @param {*=} value This should be provided if the previous parameter\n *   was a string field name.\n * @return {boolean} True if the passed config object was valid, false if there\n *   were invalid entries.\n * @export\n */\nshaka.Player.prototype.configure = function(config, value) {\n  goog.asserts.assert(this.config_, 'Config must not be null!');\n  goog.asserts.assert(typeof(config) == 'object' || arguments.length == 2,\n                      'String configs should have values!');\n\n  // ('fieldName', value) format\n  if (arguments.length == 2 && typeof(config) == 'string') {\n    config = shaka.util.ConfigUtils.convertToConfigObject(config, value);\n  }\n\n  goog.asserts.assert(typeof(config) == 'object', 'Should be an object!');\n\n  let ret = shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_, config, this.defaultConfig_());\n\n  this.applyConfig_();\n  return ret;\n};\n\n\n/**\n * Apply config changes.\n * @private\n */\nshaka.Player.prototype.applyConfig_ = function() {\n  if (this.parser_) {\n    this.parser_.configure(this.config_.manifest);\n  }\n  if (this.drmEngine_) {\n    this.drmEngine_.configure(this.config_.drm);\n  }\n  if (this.streamingEngine_) {\n    this.streamingEngine_.configure(this.config_.streaming);\n\n    // Need to apply the restrictions to every period.\n    try {\n      // this.filterNewPeriod_() may throw.\n      this.manifest_.periods.forEach(this.filterNewPeriod_.bind(this));\n    } catch (error) {\n      this.onError_(error);\n    }\n\n    // If the stream we are playing is restricted, we need to switch.\n    let activeAudio = this.streamingEngine_.getBufferingAudio();\n    let activeVideo = this.streamingEngine_.getBufferingVideo();\n    /** @type {shaka.extern.Period} */\n    let period = this.getPresentationPeriod_();\n    let activeVariant = shaka.util.StreamUtils.getVariantByStreams(\n        activeAudio, activeVideo, period.variants);\n    if (this.abrManager_ && activeVariant &&\n        activeVariant.allowedByApplication &&\n        activeVariant.allowedByKeySystem) {\n      // Update AbrManager variants to match these new settings.\n      this.chooseVariant_(period.variants);\n    } else {\n      shaka.log.debug('Choosing new streams after changing configuration');\n      this.chooseStreamsAndSwitch_(period);\n    }\n  }\n  if (this.mediaSourceEngine_) {\n    const TextDisplayerFactory = this.config_.textDisplayFactory;\n    if (this.lastTextFactory_ != TextDisplayerFactory) {\n      const displayer = new TextDisplayerFactory();\n      this.mediaSourceEngine_.setTextDisplayer(displayer);\n      this.lastTextFactory_ = TextDisplayerFactory;\n\n      if (this.streamingEngine_) {\n        // Reload the text stream, so the cues will load again.\n        this.streamingEngine_.reloadTextStream();\n      }\n    }\n  }\n  if (this.abrManager_) {\n    this.abrManager_.configure(this.config_.abr);\n    // Simply enable/disable ABR with each call, since multiple calls to these\n    // methods have no effect.\n    if (this.config_.abr.enabled && !this.switchingPeriods_) {\n      this.abrManager_.enable();\n    } else {\n      this.abrManager_.disable();\n    }\n\n    this.onAbrStatusChanged_();\n  }\n};\n\n\n/**\n * Return a copy of the current configuration.  Modifications of the returned\n * value will not affect the Player's active configuration.  You must call\n * player.configure() to make changes.\n *\n * @return {shaka.extern.PlayerConfiguration}\n * @export\n */\nshaka.Player.prototype.getConfiguration = function() {\n  goog.asserts.assert(this.config_, 'Config must not be null!');\n\n  let ret = this.defaultConfig_();\n  shaka.util.PlayerConfiguration.mergeConfigObjects(\n      ret, this.config_, this.defaultConfig_());\n  return ret;\n};\n\n\n/**\n * Return a reference to the current configuration. Modifications to the\n * returned value will affect the Player's active configuration. This method\n * is not exported as sharing configuration with external objects is not\n * supported.\n *\n * @return {shaka.extern.PlayerConfiguration}\n */\nshaka.Player.prototype.getSharedConfiguration = function() {\n  goog.asserts.assert(\n      this.config_, 'Cannot call getSharedConfiguration after call destroy!');\n  return this.config_;\n};\n\n\n/**\n * Reset configuration to default.\n * @export\n */\nshaka.Player.prototype.resetConfiguration = function() {\n  goog.asserts.assert(this.config_, 'Cannot be destroyed');\n  // Remove the old keys so we remove open-ended dictionaries like drm.servers\n  // but keeps the same object reference.\n  for (const key in this.config_) {\n    delete this.config_[key];\n  }\n\n  shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_, this.defaultConfig_(), this.defaultConfig_());\n  this.applyConfig_();\n};\n\n\n/**\n * Get the current load mode.\n *\n * @return {shaka.Player.LoadMode}\n * @export\n */\nshaka.Player.prototype.getLoadMode = function() {\n  return this.loadMode_;\n};\n\n\n/**\n * Get the media element that the player is currently using to play loaded\n * content. If the player has not loaded content, this will return |null|.\n *\n * @return {HTMLMediaElement}\n * @export\n */\nshaka.Player.prototype.getMediaElement = function() {\n  return this.video_;\n};\n\n\n/**\n * @return {shaka.net.NetworkingEngine} A reference to the Player's networking\n *     engine.  Applications may use this to make requests through Shaka's\n *     networking plugins.\n * @export\n */\nshaka.Player.prototype.getNetworkingEngine = function() {\n  return this.networkingEngine_;\n};\n\n\n/**\n * Get the uri to the asset that the player has loaded. If the player has not\n * loaded content, this will return |null|.\n *\n * @return {?string}\n * @export\n */\nshaka.Player.prototype.getAssetUri = function() {\n  return this.assetUri_;\n};\n\n\n/**\n * Get the uri to the asset that the player has loaded. If the player has not\n * loaded content, this will return |null|.\n *\n * @deprecated\n * @return {?string}\n * @export\n */\nshaka.Player.prototype.getManifestUri = function() {\n  shaka.Deprecate.deprecateFeature(\n    2, 6, 'getManifestUri', 'Please use \"getAssetUri\" instead.');\n\n  return this.getAssetUri();\n};\n\n\n/**\n * Get if the player is playing live content. If the player has not loaded\n * content, this will return |false|.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.isLive = function() {\n  if (this.manifest_) {\n    return this.manifest_.presentationTimeline.isLive();\n  }\n\n  // For native HLS, the duration for live streams seems to be Infinity.\n  if (this.video_ && this.video_.src) {\n    return this.video_.duration == Infinity;\n  }\n\n  return false;\n};\n\n\n/**\n * Get if the player is playing in-progress content. If the player has not\n * loaded content, this will return |false|.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.isInProgress = function() {\n  return this.manifest_ ?\n         this.manifest_.presentationTimeline.isInProgress() :\n         false;\n};\n\n\n/**\n * Check if the manifest contains only audio-only content. If the player has not\n * loaded content, this will return |false|.\n *\n * The player does not support content that contain more than one type of\n * variants (i.e. mixing audio-only, video-only, audio-video). Content will be\n * filtered to only contain one type of variant.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.isAudioOnly = function() {\n  if (this.manifest_) {\n    const periods = this.manifest_.periods;\n    if (!periods.length) { return false; }\n\n    const variants = this.manifest_.periods[0].variants;\n    if (!variants.length) { return false; }\n\n    // Note that if there are some audio-only variants and some audio-video\n    // variants, the audio-only variants are removed during filtering.\n    // Therefore if the first variant has no video, that's sufficient to say it\n    // is audio-only content.\n    return !variants[0].video;\n  } else if (this.video_ && this.video_.src) {\n    // If we have video track info, use that.  It will be the least error-prone\n    // way with native HLS.  In contrast, videoHeight might be unset until\n    // the first frame is loaded.  Since isAudioOnly is queried by the UI on\n    // the 'trackschanged' event, the videoTracks info should be up-to-date.\n    if (this.video_.videoTracks) {\n      return this.video_.videoTracks.length == 0;\n    }\n\n    // We cast to the more specific HTMLVideoElement to access videoHeight.\n    // This might be an audio element, though, in which case videoHeight will\n    // be undefined at runtime.  For audio elements, this will always return\n    // true.\n    const video = /** @type {HTMLVideoElement} */(this.video_);\n    return video.videoHeight == 0;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Get the range of time (in seconds) that seeking is allowed. If the player has\n * not loaded content, this will return a range from 0 to 0.\n *\n * @return {{start: number, end: number}}\n * @export\n */\nshaka.Player.prototype.seekRange = function() {\n  if (this.manifest_) {\n    const timeline = this.manifest_.presentationTimeline;\n\n    return {\n      'start': timeline.getSeekRangeStart(),\n      'end': timeline.getSeekRangeEnd(),\n    };\n  }\n\n  // If we have loaded content with src=, we ask the video element for its\n  // seekable range.  This covers both plain mp4s and native HLS playbacks.\n  if (this.video_ && this.video_.src) {\n    const seekable = this.video_.seekable;\n    if (seekable.length) {\n      return {\n        'start': seekable.start(0),\n        'end': seekable.end(seekable.length - 1),\n      };\n    }\n  }\n\n  return {'start': 0, 'end': 0};\n};\n\n\n/**\n * Get the key system currently used by EME. If EME is not being used, this will\n * return an empty string. If the player has not loaded content, this will\n * return an empty string.\n *\n * @return {string}\n * @export\n */\nshaka.Player.prototype.keySystem = function() {\n  return this.drmEngine_ ? this.drmEngine_.keySystem() : '';\n};\n\n\n/**\n * Get the drm info used to initialize EME. If EME is not being used, this will\n * return |null|. If the player is idle or has not initialized EME yet, this\n * will return |null|.\n *\n * @return {?shaka.extern.DrmInfo}\n * @export\n */\nshaka.Player.prototype.drmInfo = function() {\n  return this.drmEngine_ ? this.drmEngine_.getDrmInfo() : null;\n};\n\n\n/**\n * Get the next known expiration time for any EME session. If the session never\n * expires, this will return |Infinity|. If there are no EME sessions, this will\n * return |Infinity|. If the player has not loaded content, this will return\n * |Infinity|.\n *\n * @return {number}\n * @export\n */\nshaka.Player.prototype.getExpiration = function() {\n  return this.drmEngine_ ? this.drmEngine_.getExpiration() : Infinity;\n};\n\n\n/**\n * Check if the player is currently in a buffering state (has too little content\n * to play smoothly). If the player has not loaded content, this will return\n * |false|.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.isBuffering = function() {\n  const State = shaka.media.BufferingObserver.State;\n  return this.bufferObserver_ ?\n         this.bufferObserver_.getState() == State.STARVING :\n         false;\n};\n\n\n/**\n * Get the playback rate of what is playing right now. If we are using trick\n * play, this will return the trick play rate. If no content is playing, this\n * will return 0. If content is buffering, this will return 0.\n *\n * If the player has not loaded content, this will return a playback rate of\n * |0|.\n *\n * @return {number}\n * @export\n */\nshaka.Player.prototype.getPlaybackRate = function() {\n  return this.playRateController_ ?\n         this.playRateController_.getActiveRate() :\n         0;\n};\n\n\n/**\n * Enable trick play to skip through content without playing by repeatedly\n * seeking. For example, a rate of 2.5 would result in 2.5 seconds of content\n * being skipped every second. A negative rate will result in moving backwards.\n *\n * If the player has not loaded content or is still loading content this will be\n * a no-op. Wait until |load| has completed before calling.\n *\n * Trick play will be canceled automatically if the playhead hits the beginning\n * or end of the seekable range for the content.\n *\n * @param {number} rate\n * @export\n */\nshaka.Player.prototype.trickPlay = function(rate) {\n  // A playbackRate of 0 is used internally when we are in a buffering state,\n  // and doesn't make sense for trick play.  If you set a rate of 0 for trick\n  // play, we will reject it and issue a warning.  If it happens during a test,\n  // we will fail the test through this assertion.\n  goog.asserts.assert(rate != 0, 'Should never set a trick play rate of 0!');\n  if (rate == 0) {\n    shaka.log.alwaysWarn('A trick play rate of 0 is unsupported!');\n    return;\n  }\n\n  if (this.video_.paused) {\n    // Our fast forward is implemented with playbackRate and needs the video to\n    // be playing (to not be paused) to take immediate effect.\n    // If the video is paused, \"unpause\" it.\n    this.video_.play();\n  }\n  this.playRateController_.set(rate);\n\n  if (this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE) {\n    this.streamingEngine_.setTrickPlay(Math.abs(rate) > 1);\n  }\n};\n\n\n/**\n * Cancel trick-play. If the player has not loaded content or is still loading\n * content this will be a no-op.\n *\n * @export\n */\nshaka.Player.prototype.cancelTrickPlay = function() {\n  if (this.loadMode_ == shaka.Player.LoadMode.SRC_EQUALS) {\n    this.playRateController_.set(1);\n  }\n\n  if (this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE) {\n    this.playRateController_.set(1);\n    this.streamingEngine_.setTrickPlay(false);\n  }\n};\n\n\n/**\n * Return a list of variant tracks that can be switched to in the current\n * period. If there are multiple periods, you must seek to the period in order\n * to get variants from that period.\n *\n * If the player has not loaded content, this will return an empty list.\n *\n * @return {!Array.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.getVariantTracks = function() {\n  if (this.manifest_ && this.playhead_) {\n    const currentVariant = this.getPresentationVariant_();\n\n    const tracks = [];\n\n    // Convert each variant to a track.\n    for (const variant of this.getSelectableVariants_()) {\n      const track = shaka.util.StreamUtils.variantToTrack(variant);\n      track.active = variant == currentVariant;\n\n      tracks.push(track);\n    }\n\n    return tracks;\n  } else if (this.video_ && this.video_.audioTracks) {\n    // Safari's native HLS always shows a single element in videoTracks.\n    // You can't use that API to change resolutions.  But we can use audioTracks\n    // to generate a variant list that is usable for changing languages.\n    const audioTracks = Array.from(this.video_.audioTracks);\n    return audioTracks.map((audio) =>\n        shaka.util.StreamUtils.html5AudioTrackToTrack(audio));\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Return a list of text tracks that can be switched to in the current period.\n * If there are multiple periods, you must seek to a period in order to get\n * text tracks from that period.\n *\n * If the player has not loaded content, this will return an empty list.\n *\n * @return {!Array.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.getTextTracks = function() {\n  if (this.manifest_ && this.playhead_) {\n    const currentText = this.getPresentationText_();\n    const tracks = [];\n\n    // Convert all selectable text streams to tracks.\n    for (const text of this.getSelectableText_()) {\n      const track = shaka.util.StreamUtils.textStreamToTrack(text);\n      track.active = text == currentText;\n\n      tracks.push(track);\n    }\n\n    return tracks;\n  } else if (this.video_ && this.video_.src && this.video_.textTracks) {\n    const textTracks = Array.from(this.video_.textTracks);\n    const StreamUtils = shaka.util.StreamUtils;\n    return textTracks.map((text) => StreamUtils.html5TextTrackToTrack(text));\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Select a specific text track from the current period. |track| should come\n * from a call to |getTextTracks|. If the track is not found in the current\n * period, this will be a no-op. If the player has not loaded content, this will\n * be a no-op.\n *\n * Note that AdaptationEvents are not fired for manual track selections.\n *\n * @param {shaka.extern.Track} track\n * @export\n */\nshaka.Player.prototype.selectTextTrack = function(track) {\n  if (this.manifest_ && this.streamingEngine_) {\n    /** @type {shaka.extern.Period} */\n    const period = this.getPresentationPeriod_();\n    const stream = period.textStreams.find((stream) => stream.id == track.id);\n\n    if (!stream) {\n      shaka.log.error('No stream with id', track.id);\n      return;\n    }\n\n    // Add entries to the history.\n    this.addTextStreamToSwitchHistory_(\n        period, stream, /* fromAdaptation= */ false);\n\n    this.switchTextStream_(stream);\n\n    // Workaround for https://github.com/google/shaka-player/issues/1299\n    // When track is selected, back-propogate the language to\n    // currentTextLanguage_.\n    this.currentTextLanguage_ = stream.language;\n  } else if (this.video_ && this.video_.src && this.video_.textTracks) {\n    const textTracks = Array.from(this.video_.textTracks);\n    for (const textTrack of textTracks) {\n      if (shaka.util.StreamUtils.html5TrackId(textTrack) == track.id) {\n        // Leave the track in 'hidden' if it's selected but not showing.\n        textTrack.mode = this.isTextVisible_ ? 'showing' : 'hidden';\n      } else {\n        // Safari allows multiple text tracks to have mode == 'showing', so be\n        // explicit in resetting the others.\n        textTrack.mode = 'disabled';\n      }\n    }\n    this.onTextChanged_();\n  }\n};\n\n\n/**\n * Find the CEA 608/708 text stream embedded in video, and switch to it.\n *\n * @deprecated\n * @export\n */\nshaka.Player.prototype.selectEmbeddedTextTrack = function() {\n  shaka.Deprecate.deprecateFeature(\n      2, 6,\n      'selectEmbeddedTextTrack',\n      [\n        'If closed captions are signaled in the manifest, a text stream will',\n        'be created to represent them. Please use SelectTextTrack.',\n      ].join(' '));\n\n  const tracks = this.getTextTracks().filter((track) => {\n    return track.mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE;\n  });\n\n  if (tracks.length > 0) {\n    this.selectTextTrack(tracks[0]);\n  } else {\n    shaka.log.warning('Unable to find the text track embedded in the video.');\n  }\n};\n\n\n/**\n * @return {boolean} True if we are using any embedded text tracks present.\n *\n * @deprecated\n * @export\n */\nshaka.Player.prototype.usingEmbeddedTextTrack = function() {\n  shaka.Deprecate.deprecateFeature(\n      2, 6,\n      'usingEmbeddedTextTrack',\n      [\n        'If closed captions are signaled in the manifest, a text stream will',\n        'be created to represent them. There should be no reason to know if',\n        'the player is playing embedded text.',\n      ].join(' '));\n\n  const activeTrack = this.getTextTracks().filter((track) => {\n    return track.active;\n  })[0];\n\n  if (activeTrack) {\n    return activeTrack.mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE;\n  }\n\n  return false;\n};\n\n\n/**\n * Select a specific variant track to play from the current period. |track|\n * should come from a call to |getVariantTracks|. If |track| cannot be found\n * in the current variant, this will be a no-op. If the player has not loaded\n * content, this will be a no-op.\n *\n * Changing variants will take effect once the currently buffered content has\n * been played. To force the change to happen sooner, use |clearBuffer| with\n * |safeMargin|. Setting |clearBuffer| to |true| will clear all buffered content\n * after |safeMargin|, allowing the new variant to start playing sooner.\n *\n * Note that AdaptationEvents are not fired for manual track selections.\n *\n * @param {shaka.extern.Track} track\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin Optional amount of buffer (in seconds) to retain\n *   when clearing the buffer. Useful for switching variant quickly without\n *   causing a buffering event. Defaults to 0 if not provided. Ignored if\n *   clearBuffer is false. Can cause hiccups on some browsers if chosen too\n *   small, e.g. The amount of two segments is a fair minimum to consider as\n *   safeMargin value.\n * @export\n */\nshaka.Player.prototype.selectVariantTrack = function(\n    track, clearBuffer, safeMargin = 0) {\n  if (this.manifest_ && this.streamingEngine_) {\n    /** @type {shaka.extern.Period} */\n    const period = this.getPresentationPeriod_();\n\n    if (this.config_.abr.enabled) {\n      shaka.log.alwaysWarn('Changing tracks while abr manager is enabled ' +\n                           'will likely result in the selected track being ' +\n                           'overriden. Consider disabling abr before calling ' +\n                           'selectVariantTrack().');\n    }\n\n    const variant = period.variants.find((variant) => variant.id == track.id);\n    if (!variant) {\n      shaka.log.error('No variant with id', track.id);\n      return;\n    }\n\n    // Double check that the track is allowed to be played. The track list\n    // should only contain playable variants, but if restrictions change and\n    // |selectVariantTrack| is called before the track list is updated, we could\n    // get a now-restricted variant.\n    if (!shaka.util.StreamUtils.isPlayable(variant)) {\n      shaka.log.error('Unable to switch to restricted track', track.id);\n      return;\n    }\n\n    // Add entries to the history.\n    this.addVariantToSwitchHistory_(period, variant,\n                                    /* fromAdaptation= */ false);\n    this.switchVariant_(variant, clearBuffer, safeMargin);\n\n    // Workaround for https://github.com/google/shaka-player/issues/1299\n    // When track is selected, back-propogate the language to\n    // currentAudioLanguage_.\n    this.currentAdaptationSetCriteria_ = new shaka.media.ExampleBasedCriteria(\n        variant);\n\n    // Update AbrManager variants to match these new settings.\n    this.chooseVariant_(period.variants);\n  } else if (this.video_ && this.video_.audioTracks) {\n    // Safari's native HLS won't let you choose an explicit variant, though you\n    // can choose audio languages this way.\n    const audioTracks = Array.from(this.video_.audioTracks);\n    for (const audioTrack of audioTracks) {\n      if (shaka.util.StreamUtils.html5TrackId(audioTrack) == track.id) {\n        // This will reset the \"enabled\" of other tracks to false.\n        audioTrack.enabled = true;\n      }\n    }\n    this.onVariantChanged_();\n  }\n};\n\n\n/**\n * Return a list of audio language-role combinations available for the current\n * period. If the player has not loaded any content, this will return an empty\n * list.\n *\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @export\n */\nshaka.Player.prototype.getAudioLanguagesAndRoles = function() {\n  return shaka.Player.getLanguageAndRolesFrom_(this.getVariantTracks());\n};\n\n\n/**\n * Return a list of text language-role combinations available for the current\n * period. If the player has not loaded any content, this will be return an\n * empty list.\n *\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @export\n */\nshaka.Player.prototype.getTextLanguagesAndRoles = function() {\n  return shaka.Player.getLanguageAndRolesFrom_(this.getTextTracks());\n};\n\n\n/**\n * Return a list of audio languages available for the current period. If the\n * player has not loaded any content, this will return an empty list.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.Player.prototype.getAudioLanguages = function() {\n  return Array.from(shaka.Player.getLanguagesFrom_(this.getVariantTracks()));\n};\n\n\n/**\n * Return a list of text languages available for the current period. If the\n * player has not loaded any content, this will return an empty list.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.Player.prototype.getTextLanguages = function() {\n  return Array.from(shaka.Player.getLanguagesFrom_(this.getTextTracks()));\n};\n\n\n/**\n * Sets currentAudioLanguage and currentVariantRole to the selected language and\n * role, and chooses a new variant if need be. If the player has not loaded any\n * content, this will be a no-op.\n *\n * @param {string} language\n * @param {string=} role\n * @export\n */\nshaka.Player.prototype.selectAudioLanguage = function(language, role) {\n  if (this.manifest_ && this.playhead_) {\n    /** @type {shaka.extern.Period} */\n    const period = this.getPresentationPeriod_();\n\n    this.currentAdaptationSetCriteria_ =\n        new shaka.media.PreferenceBasedCriteria(language, role || '', 0);\n\n    // TODO: Refactor to only change audio and not affect text.\n    this.chooseStreamsAndSwitch_(period);\n  } else if (this.video_ && this.video_.audioTracks) {\n    const audioTracks = Array.from(this.video_.audioTracks);\n    for (const audioTrack of audioTracks) {\n      if (audioTrack.language == language) {\n        // This will reset the \"enabled\" of other tracks to false.\n        audioTrack.enabled = true;\n      }\n    }\n    this.onVariantChanged_();\n  }\n};\n\n\n/**\n * Sets currentTextLanguage and currentTextRole to the selected language and\n * role, and chooses a new variant if need be. If the player has not loaded any\n * content, this will be a no-op.\n *\n * @param {string} language\n * @param {string=} role\n * @export\n */\nshaka.Player.prototype.selectTextLanguage = function(language, role) {\n  if (this.manifest_ && this.playhead_) {\n    /** @type {shaka.extern.Period} */\n    const period = this.getPresentationPeriod_();\n\n    this.currentTextLanguage_ = language;\n    this.currentTextRole_ = role || '';\n\n    const chosenText = this.chooseTextStream_(period.textStreams);\n    if (chosenText) {\n      this.addTextStreamToSwitchHistory_(\n          period, chosenText, /* fromAdaptation= */ false);\n      if (this.shouldStreamText_()) {\n        this.switchTextStream_(chosenText);\n      }\n    }\n  } else {\n    const track = this.getTextTracks().filter((t) => t.language == language)[0];\n    if (track) {\n      this.selectTextTrack(track);\n    }\n  }\n};\n\n\n/**\n * Check if the text displayer is enabled.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.isTextTrackVisible = function() {\n  const expected = this.isTextVisible_;\n\n  if (this.manifest_) {\n    // Make sure our values are still in-sync.\n    const actual = this.mediaSourceEngine_.getTextDisplayer().isTextVisible();\n    goog.asserts.assert(\n        actual == expected, 'text visibility has fallen out of sync');\n\n    // Always return the actual value so that the app has the most accurate\n    // information (in the case that the values come out of sync in prod).\n    return actual;\n  } else if (this.video_ && this.video_.src && this.video_.textTracks) {\n    const textTracks = Array.from(this.video_.textTracks);\n    return textTracks.some((t) => t.mode == 'showing');\n  }\n\n  return expected;\n};\n\n\n/**\n * Enable or disable the text displayer.  If the player is in an unloaded state,\n * the request will be applied next time content is loaded.\n *\n * @param {boolean} isVisible\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.setTextTrackVisibility = async function(isVisible) {\n  const oldVisibilty = this.isTextVisible_;\n  const newVisibility = isVisible;\n\n  if (oldVisibilty == newVisibility) {\n    return;\n  }\n\n  this.isTextVisible_ = newVisibility;\n\n  // Hold of on setting the text visibility until we have all the components we\n  // need. This ensures that they stay in-sync.\n  if (this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE) {\n    this.mediaSourceEngine_.getTextDisplayer().setTextVisibility(isVisible);\n\n    // When the user wants to see captions, we stream captions. When the user\n    // doesn't want to see captions, we don't stream captions. This is to avoid\n    // bandwidth consumption by an unused resource. The app developer can\n    // override this and configure us to always stream captions.\n    if (!this.config_.streaming.alwaysStreamText) {\n      if (isVisible) {\n        // Find the text stream that best matches the user's preferences.\n        /** @type {shaka.extern.Period} */\n        const period = this.getPresentationPeriod_();\n        const streams = shaka.util.StreamUtils.filterStreamsByLanguageAndRole(\n            period.textStreams, this.currentTextLanguage_,\n            this.currentTextRole_);\n\n        // It is possible that there are no streams to play.\n        if (streams.length > 0) {\n          await this.streamingEngine_.loadNewTextStream(streams[0]);\n        }\n      } else {\n        this.streamingEngine_.unloadTextStream();\n      }\n    }\n  } else if (this.video_ && this.video_.src && this.video_.textTracks) {\n    const textTracks = Array.from(this.video_.textTracks);\n\n    // Find the active track by looking for one which is not disabled.  This is\n    // the only way to identify the track which is currently displayed.\n    // Set it to 'showing' or 'hidden' based on isVisible.\n    for (const textTrack of textTracks) {\n      if (textTrack.mode != 'disabled') {\n        textTrack.mode = isVisible ? 'showing' : 'hidden';\n      }\n    }\n  }\n\n  // We need to fire the event after we have updated everything so that\n  // everything will be in a stable state when the app responds to the\n  // event.\n  this.onTextTrackVisibility_();\n};\n\n\n/**\n * Get the current playhead position as a date. This should only be called when\n * the player has loaded a live stream. If the player has not loaded a live\n * stream, this will return |null|.\n *\n * @return {Date}\n * @export\n */\nshaka.Player.prototype.getPlayheadTimeAsDate = function() {\n  if (!this.isLive()) {\n    shaka.log.warning('getPlayheadTimeAsDate is for live streams!');\n    return null;\n  }\n\n  if (this.manifest_) {\n    const timeline = this.manifest_.presentationTimeline;\n    const startTime = timeline.getPresentationStartTime();\n    const presentationTime = this.video_.currentTime;\n    return new Date(/* ms= */ (startTime + presentationTime) * 1000);\n  } else if (this.video_ && this.video_.getStartDate) {\n    // Apple's native HLS gives us getStartDate(), which is only available if\n    // EXT-X-PROGRAM-DATETIME is in the playlist.\n    const startDate = this.video_.getStartDate();\n    if (isNaN(startDate.getTime())) {\n      shaka.log.warning(\n          'EXT-X-PROGRAM-DATETIME required to get playhead time as Date!');\n      return null;\n    }\n    return new Date(startDate.getTime() + (this.video_.currentTime * 1000));\n  } else {\n    shaka.log.warning('No way to get playhead time as Date!');\n    return null;\n  }\n};\n\n\n/**\n * Get the presentation start time as a date. This should only be called when\n * the player has loaded a live stream. If the player has not loaded a live\n * stream, this will return |null|.\n *\n * @return {Date}\n * @export\n */\nshaka.Player.prototype.getPresentationStartTimeAsDate = function() {\n  if (!this.isLive()) {\n    shaka.log.warning('getPresentationStartTimeAsDate is for live streams!');\n    return null;\n  }\n\n  if (this.manifest_) {\n    const timeline = this.manifest_.presentationTimeline;\n    const startTime = timeline.getPresentationStartTime();\n    return new Date(/* ms= */ startTime * 1000);\n  } else if (this.video_ && this.video_.getStartDate) {\n    // Apple's native HLS gives us getStartDate(), which is only available if\n    // EXT-X-PROGRAM-DATETIME is in the playlist.\n    const startDate = this.video_.getStartDate();\n    if (isNaN(startDate.getTime())) {\n      shaka.log.warning(\n          'EXT-X-PROGRAM-DATETIME required to get presentation start time as ' +\n          'Date!');\n      return null;\n    }\n    return startDate;\n  } else {\n    shaka.log.warning('No way to get presentation start time as Date!');\n    return null;\n  }\n};\n\n\n/**\n * Get information about what the player has buffered. If the player has not\n * loaded content or is currently loading content, the buffered content will be\n * empty.\n *\n * @return {shaka.extern.BufferedInfo}\n * @export\n */\nshaka.Player.prototype.getBufferedInfo = function() {\n  const info = {\n    total: [],\n    audio: [],\n    video: [],\n    text: [],\n  };\n\n  if (this.loadMode_ == shaka.Player.LoadMode.SRC_EQUALS) {\n    const TimeRangesUtils = shaka.media.TimeRangesUtils;\n    info.total = TimeRangesUtils.getBufferedInfo(this.video_.buffered);\n  }\n\n  if (this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE) {\n    this.mediaSourceEngine_.getBufferedInfo(info);\n  }\n\n  return info;\n};\n\n\n/**\n * Get statistics for the current playback session. If the player is not playing\n * content, this will return an empty stats object.\n *\n * @return {shaka.extern.Stats}\n * @export\n */\nshaka.Player.prototype.getStats = function() {\n  // If the Player is not in a fully-loaded state, then return an empty stats\n  // blob so that this call will never fail.\n  const loaded = this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE ||\n                 this.loadMode_ == shaka.Player.LoadMode.SRC_EQUALS;\n  if (!loaded) {\n    return shaka.util.Stats.getEmptyBlob();\n  }\n\n  this.updateStateHistory_();\n\n  goog.asserts.assert(this.video_, 'If we have stats, we should have video_');\n  const element = /** @type {!HTMLVideoElement} */ (this.video_);\n\n  if (element.getVideoPlaybackQuality) {\n    const info = element.getVideoPlaybackQuality();\n\n    this.stats_.setDroppedFrames(\n        Number(info.droppedVideoFrames),\n        Number(info.totalVideoFrames));\n  }\n\n  if (this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE) {\n    // Event through we are loaded, it is still possible that we don't have a\n    // presentation variant yet because we set the load mode before we select\n    // the first variant to stream.\n    const variant = this.getPresentationVariant_();\n\n    if (variant) {\n      this.stats_.setVariantBandwidth(variant.bandwidth);\n    }\n\n    if (variant && variant.video) {\n      this.stats_.setResolution(\n          /* width= */ variant.video.width || NaN,\n          /* height= */ variant.video.height || NaN);\n    }\n\n    const estimate = this.abrManager_.getBandwidthEstimate();\n    this.stats_.setBandwidthEstimate(estimate);\n  }\n\n  return this.stats_.getBlob();\n};\n\n\n/**\n * Adds the given text track to the current Period.  load() must resolve before\n * calling.  The current Period or the presentation must have a duration.  This\n * returns a Promise that will resolve with the track that was created, when\n * that track can be switched to.\n *\n * @param {string} uri\n * @param {string} language\n * @param {string} kind\n * @param {string} mime\n * @param {string=} codec\n * @param {string=} label\n * @return {!Promise.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.addTextTrack = async function(\n    uri, language, kind, mime, codec, label) {\n  // TODO: Add an actual error for this.\n  if (this.loadMode_ == shaka.Player.LoadMode.SRC_EQUALS) {\n    shaka.log.error('Cannot add text when loaded with src=');\n    throw new Error('State error!');\n  }\n  if (this.loadMode_ != shaka.Player.LoadMode.MEDIA_SOURCE) {\n    shaka.log.error(\n        'Must call load() and wait for it to resolve before adding text ' +\n        'tracks.');\n    throw new Error('State error!');\n  }\n\n  /** @type {shaka.extern.Period} */\n  const period = this.getPresentationPeriod_();\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Get the Period duration.\n  /** @type {number} */\n  const periodIndex = this.manifest_.periods.indexOf(period);\n  /** @type {number} */\n  const nextPeriodIndex = periodIndex + 1;\n  /** @type {number} */\n  const nextPeriodStart = nextPeriodIndex >= this.manifest_.periods.length ?\n                          this.manifest_.presentationTimeline.getDuration() :\n                          this.manifest_.periods[nextPeriodIndex].startTime;\n  /** @type {number} */\n  const periodDuration = nextPeriodStart - period.startTime;\n  if (periodDuration == Infinity) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM);\n  }\n\n  /** @type {!shaka.media.SegmentReference} */\n  const segmentReference = new shaka.media.SegmentReference(\n      1, 0, periodDuration, () => [uri], 0, null);\n\n  /** @type {shaka.extern.Stream} */\n  const stream = {\n    id: this.nextExternalStreamId_++,\n    originalId: null,\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: (time) => 1,\n    getSegmentReference: (ref) => {\n      return ref == 1 ? segmentReference : null;\n    },\n    initSegmentReference: null,\n    presentationTimeOffset: 0,\n    mimeType: mime,\n    codecs: codec || '',\n    kind: kind,\n    encrypted: false,\n    keyId: null,\n    language: language,\n    label: label || null,\n    type: ContentType.TEXT,\n    primary: false,\n    trickModeVideo: null,\n    emsgSchemeIdUris: null,\n    roles: [],\n    channelsCount: null,\n    closedCaptions: null,\n  };\n\n  // Add the stream to the loading list to ensure it isn't switched to while it\n  // is initializing.\n  this.loadingTextStreams_.add(stream);\n  period.textStreams.push(stream);\n\n  await this.streamingEngine_.loadNewTextStream(stream);\n  goog.asserts.assert(period, 'The period should still be non-null here.');\n\n  const activeText = this.streamingEngine_.getBufferingText();\n  if (activeText) {\n    // If this was the first text stream, StreamingEngine will start streaming\n    // it in loadNewTextStream.  To reflect this, update the active stream.\n    this.activeStreams_.useText(period, activeText);\n  }\n\n  // Remove the stream from the loading list.\n  this.loadingTextStreams_.delete(stream);\n\n  shaka.log.debug('Choosing new streams after adding a text stream');\n  this.chooseStreamsAndSwitch_(period);\n  this.onTracksChanged_();\n\n  return shaka.util.StreamUtils.textStreamToTrack(stream);\n};\n\n\n/**\n * Set the maximum resolution that the platform's hardware can handle.\n * This will be called automatically by shaka.cast.CastReceiver to enforce\n * limitations of the Chromecast hardware.\n *\n * @param {number} width\n * @param {number} height\n * @export\n */\nshaka.Player.prototype.setMaxHardwareResolution = function(width, height) {\n  this.maxHwRes_.width = width;\n  this.maxHwRes_.height = height;\n};\n\n\n/**\n * Retry streaming after a streaming failure has occurred. When the player has\n * not loaded content or is loading content, this will be a no-op and will\n * return |false|.\n *\n * If the player has loaded content, and streaming has not seen an error, this\n * will return |false|.\n *\n * if the player has loaded content, and streaming seen an error, but the could\n * not resume streaming, this will return |false|.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.prototype.retryStreaming = function() {\n  return this.loadMode_ == shaka.Player.LoadMode.MEDIA_SOURCE ?\n         this.streamingEngine_.retry() :\n         false;\n};\n\n\n/**\n * Get the manifest that the player has loaded. If the player has not loaded any\n * content, this will return |null|.\n *\n * @return {?shaka.extern.Manifest}\n * @export\n */\nshaka.Player.prototype.getManifest = function() {\n  return this.manifest_;\n};\n\n\n/**\n * Get the type of manifest parser that the player is using. If the player has\n * not loaded any content, this will return |null|.\n *\n * @return {?shaka.extern.ManifestParser.Factory}\n * @export\n */\nshaka.Player.prototype.getManifestParserFactory = function() {\n  return this.parser_ ? this.parser_.constructor : null;\n};\n\n\n/**\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Variant} variant\n * @param {boolean} fromAdaptation\n * @private\n */\nshaka.Player.prototype.addVariantToSwitchHistory_ = function(\n    period, variant, fromAdaptation) {\n  this.activeStreams_.useVariant(period, variant);\n  this.stats_.getSwitchHistory().updateCurrentVariant(variant, fromAdaptation);\n};\n\n\n/**\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Stream} textStream\n * @param {boolean} fromAdaptation\n * @private\n */\nshaka.Player.prototype.addTextStreamToSwitchHistory_ = function(\n    period, textStream, fromAdaptation) {\n  this.activeStreams_.useText(period, textStream);\n  this.stats_.getSwitchHistory().updateCurrentText(textStream, fromAdaptation);\n};\n\n\n/**\n * @return {shaka.extern.PlayerConfiguration}\n * @private\n */\nshaka.Player.prototype.defaultConfig_ = function() {\n  const config = shaka.util.PlayerConfiguration.createDefault();\n\n  config.streaming.failureCallback = (error) => {\n    this.defaultStreamingFailureCallback_(error);\n  };\n\n  // Because this.video_ may not be set when the config is built, the default\n  // TextDisplay factory must capture a reference to \"this\" as \"self\" to use at\n  // the time we call the factory.  Bind can't be used here because we call the\n  // factory with \"new\", effectively removing any binding to \"this\".\n  const self = this;\n  config.textDisplayFactory = function() {\n    return new shaka.text.SimpleTextDisplayer(self.video_);\n  };\n\n  return config;\n};\n\n\n/**\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.Player.prototype.defaultStreamingFailureCallback_ = function(error) {\n  let retryErrorCodes = [\n    shaka.util.Error.Code.BAD_HTTP_STATUS,\n    shaka.util.Error.Code.HTTP_ERROR,\n    shaka.util.Error.Code.TIMEOUT,\n  ];\n\n  if (this.isLive() && retryErrorCodes.includes(error.code)) {\n    error.severity = shaka.util.Error.Severity.RECOVERABLE;\n\n    shaka.log.warning('Live streaming error.  Retrying automatically...');\n    this.retryStreaming();\n  }\n};\n\n\n/**\n * For CEA closed captions embedded in the video streams, create dummy text\n * stream.\n * @param {!Array.<!shaka.extern.Period>} periods\n * @private\n */\nshaka.Player.prototype.createTextStreamsForClosedCaptions_ = function(periods) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  for (let periodIndex = 0; periodIndex < periods.length; periodIndex++) {\n    const period = periods[periodIndex];\n    // A map of the closed captions id and the new dummy text stream.\n    let closedCaptionsMap = new Map();\n    for (let variant of period.variants) {\n      if (variant.video && variant.video.closedCaptions) {\n        let video = variant.video;\n        for (const id of video.closedCaptions.keys()) {\n          if (!closedCaptionsMap.has(id)) {\n            let textStream = {\n              id: this.nextExternalStreamId_++,  // A globally unique ID.\n              originalId: id, // The CC ID string, like 'CC1', 'CC3', etc.\n              createSegmentIndex: Promise.resolve.bind(Promise),\n              findSegmentPosition: (time) => { return null; },\n              getSegmentReference: (ref) => { return null; },\n              initSegmentReference: null,\n              presentationTimeOffset: 0,\n              mimeType: shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE,\n              codecs: '',\n              kind:\n                  shaka.util.ManifestParserUtils.TextStreamKind.CLOSED_CAPTION,\n              encrypted: false,\n              keyId: null,\n              language: video.closedCaptions.get(id),\n              label: null,\n              type: ContentType.TEXT,\n              primary: false,\n              trickModeVideo: null,\n              emsgSchemeIdUris: null,\n              roles: video.roles,\n              channelsCount: null,\n              closedCaptions: null,\n            };\n            closedCaptionsMap.set(id, textStream);\n          }\n        }\n      }\n    }\n    for (const textStream of closedCaptionsMap.values()) {\n      period.textStreams.push(textStream);\n    }\n  }\n};\n\n\n/**\n * Filters a list of periods.\n * @param {!Array.<!shaka.extern.Period>} periods\n * @private\n */\nshaka.Player.prototype.filterAllPeriods_ = function(periods) {\n  goog.asserts.assert(this.video_, 'Must not be destroyed');\n  const ArrayUtils = shaka.util.ArrayUtils;\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio =\n      this.streamingEngine_ ? this.streamingEngine_.getBufferingAudio() : null;\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo =\n      this.streamingEngine_ ? this.streamingEngine_.getBufferingVideo() : null;\n\n  let filterPeriod = StreamUtils.filterNewPeriod.bind(\n      null, this.drmEngine_, activeAudio, activeVideo);\n  periods.forEach(filterPeriod);\n\n  let validPeriodsCount = ArrayUtils.count(periods, function(period) {\n    return period.variants.some(StreamUtils.isPlayable);\n  });\n\n  // If none of the periods are playable, throw CONTENT_UNSUPPORTED_BY_BROWSER.\n  if (validPeriodsCount == 0) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.CONTENT_UNSUPPORTED_BY_BROWSER);\n  }\n\n  // If only some of the periods are playable, throw UNPLAYABLE_PERIOD.\n  if (validPeriodsCount < periods.length) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.UNPLAYABLE_PERIOD);\n  }\n\n  periods.forEach(function(period) {\n    let tracksChanged = shaka.util.StreamUtils.applyRestrictions(\n        period.variants, this.config_.restrictions, this.maxHwRes_);\n    if (tracksChanged && this.streamingEngine_ &&\n        this.getPresentationPeriod_() == period) {\n      this.onTracksChanged_();\n    }\n\n    this.checkRestrictedVariants_(period.variants);\n  }.bind(this));\n};\n\n\n/**\n * Filters a new period.\n * @param {shaka.extern.Period} period\n * @private\n */\nshaka.Player.prototype.filterNewPeriod_ = function(period) {\n  goog.asserts.assert(this.video_, 'Must not be destroyed');\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio =\n      this.streamingEngine_ ? this.streamingEngine_.getBufferingAudio() : null;\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo =\n      this.streamingEngine_ ? this.streamingEngine_.getBufferingVideo() : null;\n\n  StreamUtils.filterNewPeriod(\n      this.drmEngine_, activeAudio, activeVideo, period);\n\n  /** @type {!Array.<shaka.extern.Variant>} */\n  let variants = period.variants;\n\n  // Check for playable variants before restrictions, so that we can give a\n  // special error when there were tracks but they were all filtered.\n  const hasPlayableVariant = variants.some(StreamUtils.isPlayable);\n  if (!hasPlayableVariant) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.UNPLAYABLE_PERIOD);\n  }\n\n  this.checkRestrictedVariants_(period.variants);\n\n  const tracksChanged = shaka.util.StreamUtils.applyRestrictions(\n      variants, this.config_.restrictions, this.maxHwRes_);\n\n  // Trigger the track change event if the restrictions now prevent use from\n  // using a variant that we previously thought we could use.\n  if (tracksChanged && this.streamingEngine_ &&\n      this.getPresentationPeriod_() == period) {\n    this.onTracksChanged_();\n  }\n\n  // For new Periods, we may need to create new sessions for any new init data.\n  const curDrmInfo = this.drmEngine_ ? this.drmEngine_.getDrmInfo() : null;\n  if (curDrmInfo) {\n    for (const variant of variants) {\n      for (const drmInfo of variant.drmInfos) {\n        // Ignore any data for different key systems.\n        if (drmInfo.keySystem == curDrmInfo.keySystem) {\n          for (const initData of (drmInfo.initData || [])) {\n            this.drmEngine_.newInitData(\n                initData.initDataType, initData.initData);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Switches to the given variant, deferring if needed.\n * @param {shaka.extern.Variant} variant\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin\n * @private\n */\nshaka.Player.prototype.switchVariant_ =\n    function(variant, clearBuffer = false, safeMargin = 0) {\n  if (this.switchingPeriods_) {\n    // Store this action for later.\n    this.deferredVariant_ = variant;\n    this.deferredVariantClearBuffer_ = clearBuffer;\n    this.deferredVariantClearBufferSafeMargin_ = safeMargin;\n  } else {\n    // Act now.\n    this.streamingEngine_.switchVariant(variant, clearBuffer, safeMargin);\n    // Dispatch a 'variantchanged' event\n    this.onVariantChanged_();\n  }\n};\n\n\n/**\n * Switches to the given text stream, deferring if needed.\n * @param {shaka.extern.Stream} textStream\n * @private\n */\nshaka.Player.prototype.switchTextStream_ = function(textStream) {\n  if (this.switchingPeriods_) {\n    // Store this action for later.\n    this.deferredTextStream_ = textStream;\n  } else {\n    // Act now.\n    this.streamingEngine_.switchTextStream(textStream);\n    this.onTextChanged_();\n  }\n};\n\n\n/**\n * Verifies that the active streams according to the player match those in\n * StreamingEngine.\n * @private\n */\nshaka.Player.prototype.assertCorrectActiveStreams_ = function() {\n  if (!this.streamingEngine_ || !this.manifest_ || !goog.DEBUG) return;\n\n  const activePeriod = this.streamingEngine_.getBufferingPeriod();\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n  if (activePeriod == null || activePeriod != currentPeriod) {\n    return;\n  }\n\n  let activeAudio = this.streamingEngine_.getBufferingAudio();\n  let activeVideo = this.streamingEngine_.getBufferingVideo();\n  let activeText = this.streamingEngine_.getBufferingText();\n\n  // If we have deferred variants/text we want to compare against those rather\n  // than what we are actually streaming.\n  const expectedAudio = this.deferredVariant_ ?\n                        this.deferredVariant_.audio :\n                        activeAudio;\n\n  const expectedVideo = this.deferredVariant_ ?\n                        this.deferredVariant_.video :\n                        activeVideo;\n\n  const expectedText = this.deferredTextStream_ || activeText;\n\n  const actualVariant = this.activeStreams_.getVariant(currentPeriod);\n  const actualText = this.activeStreams_.getText(currentPeriod);\n\n  goog.asserts.assert(\n      actualVariant.audio == expectedAudio,\n      'Inconsistent active audio stream');\n  goog.asserts.assert(\n      actualVariant.video == expectedVideo,\n      'Inconsistent active video stream');\n\n  // Because we always set a text stream to be active in the active stream map,\n  // regardless of whether or not we are actually streaming text, it is possible\n  // for these to be out of line.\n  goog.asserts.assert(\n      expectedText == null || actualText == expectedText,\n      'Inconsistent active text stream');\n};\n\n\n/**\n * @param {number} time\n * @return {number}\n * @private\n */\nshaka.Player.prototype.adjustStartTime_ = function(time) {\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio = this.streamingEngine_.getBufferingAudio();\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo = this.streamingEngine_.getBufferingVideo();\n  /** @type {shaka.extern.Period} */\n  let period = this.getPresentationPeriod_();\n\n  // This method is called after StreamingEngine.init resolves, which means that\n  // all the active streams have had createSegmentIndex called.\n  function getAdjustedTime(stream, time) {\n    if (!stream) return null;\n    let idx = stream.findSegmentPosition(time - period.startTime);\n    if (idx == null) return null;\n    let ref = stream.getSegmentReference(idx);\n    if (!ref) return null;\n    let refTime = ref.startTime + period.startTime;\n    goog.asserts.assert(refTime <= time, 'Segment should start before time');\n    return refTime;\n  }\n\n  let audioStartTime = getAdjustedTime(activeAudio, time);\n  let videoStartTime = getAdjustedTime(activeVideo, time);\n\n  // If we have both video and audio times, pick the larger one.  If we picked\n  // the smaller one, that one will download an entire segment to buffer the\n  // difference.\n  if (videoStartTime != null && audioStartTime != null) {\n    return Math.max(videoStartTime, audioStartTime);\n  } else if (videoStartTime != null) {\n    return videoStartTime;\n  } else if (audioStartTime != null) {\n    return audioStartTime;\n  } else {\n    return time;\n  }\n};\n\n\n/**\n * Update the buffering state to be either \"we are buffering\" or \"we are not\n * buffering\", firing events to the app as needed.\n *\n * @private\n */\nshaka.Player.prototype.updateBufferState_ = function() {\n  const isBuffering = this.isBuffering();\n\n  // Make sure we have all the components we need before we consider ourselves\n  // as being loaded.\n  // TODO: Make the check for \"loaded\" simpler.\n  const loaded = this.stats_ && this.bufferObserver_ && this.playhead_;\n\n  if (loaded) {\n    this.playRateController_.setBuffering(isBuffering);\n    this.updateStateHistory_();\n  }\n\n  // Surface the buffering event so that the app knows if/when we are buffering.\n  let event = new shaka.util.FakeEvent('buffering', {'buffering': isBuffering});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Callback from PlayheadObserver.\n * @private\n */\nshaka.Player.prototype.onChangePeriod_ = function() {\n  this.onTracksChanged_();\n};\n\n\n/**\n * A callback for when the playback rate changes. We need to watch the playback\n * rate so that if the playback rate on the media element changes (that was not\n * caused by our play rate controller) we can notify the controller so that it\n * can stay in-sync with the change.\n *\n * @private\n */\nshaka.Player.prototype.onRateChange_ = function() {\n  /** @type {number} */\n  const newRate = this.video_.playbackRate;\n\n  // On Edge, when someone seeks using the native controls, it will set the\n  // playback rate to zero until they finish seeking, after which it will\n  // return the playback rate.\n  //\n  // If the playback rate changes while seeking, Edge will cache the playback\n  // rate and use it after seeking.\n  //\n  // https://github.com/google/shaka-player/issues/951\n  if (newRate == 0) {\n    return;\n  }\n\n  // The playback rate has changed. This could be us or someone else.\n  // If this was us, setting the rate again will be a no-op.\n  this.playRateController_.set(newRate);\n};\n\n\n/**\n * Try updating the state history. If the player has not finished initializing,\n * this will be a no-op.\n *\n * @private\n */\nshaka.Player.prototype.updateStateHistory_ = function() {\n  // If we have not finish initializing, this will be a no-op.\n  if (!this.stats_) { return; }\n  if (!this.bufferObserver_) { return; }\n\n  const State = shaka.media.BufferingObserver.State;\n\n  const history = this.stats_.getStateHistory();\n\n  if (this.bufferObserver_.getState() == State.STARVING) {\n    history.update('buffering');\n  } else if (this.video_.paused) {\n    history.update('paused');\n  } else if (this.video_.ended) {\n    history.update('ended');\n  } else {\n    history.update('playing');\n  }\n};\n\n\n/**\n * Callback from Playhead.\n *\n * @private\n */\nshaka.Player.prototype.onSeek_ = function() {\n  if (this.playheadObservers_) {\n    this.playheadObservers_.notifyOfSeek();\n  }\n  if (this.streamingEngine_) {\n    this.streamingEngine_.seeked();\n  }\n};\n\n\n/**\n * Chooses a variant from all possible variants while taking into account\n * restrictions, preferences, and ABR.\n *\n * On error, this dispatches an error event and returns null.\n *\n * @param {!Array.<shaka.extern.Variant>} allVariants\n * @return {?shaka.extern.Variant}\n * @private\n */\nshaka.Player.prototype.chooseVariant_ = function(allVariants) {\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  try {\n    // |variants| are the filtered variants, use |period.variants| so we know\n    // why they we restricted.\n    this.checkRestrictedVariants_(allVariants);\n  } catch (e) {\n    this.onError_(e);\n    return null;\n  }\n\n  goog.asserts.assert(\n      allVariants.length, 'Should have thrown for no Variants.');\n\n  const playableVariants = allVariants.filter((variant) => {\n    return shaka.util.StreamUtils.isPlayable(variant);\n  });\n\n  // Update the abr manager with newly filtered variants.\n  const adaptationSet = this.currentAdaptationSetCriteria_.create(\n      playableVariants);\n  this.abrManager_.setVariants(Array.from(adaptationSet.values()));\n  return this.abrManager_.chooseVariant();\n};\n\n\n/**\n * Choose a text stream from all possible text streams while taking into\n * account user preference.\n *\n * @param {!Array.<shaka.extern.Stream>} textStreams\n * @return {?shaka.extern.Stream}\n * @private\n */\nshaka.Player.prototype.chooseTextStream_ = function(textStreams) {\n  const subset = shaka.util.StreamUtils.filterStreamsByLanguageAndRole(\n      textStreams,\n      this.currentTextLanguage_,\n      this.currentTextRole_);\n\n  return subset[0] || null;\n};\n\n\n/**\n * Chooses streams from the given Period and switches to them.\n * Called after a config change, a new text stream, a key status event, or an\n * explicit language change.\n *\n * @param {!shaka.extern.Period} period\n * @private\n */\nshaka.Player.prototype.chooseStreamsAndSwitch_ = function(period) {\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  // Because we're running this after a config change (manual language change),\n  // a new text stream, or a key status event, and because switching to an\n  // active stream is a no-op, it is always okay to clear the buffer here.\n  const chosenVariant = this.chooseVariant_(period.variants);\n  if (chosenVariant) {\n    this.addVariantToSwitchHistory_(\n        period, chosenVariant, /* fromAdaptation= */ true);\n    this.switchVariant_(chosenVariant, /* clearBuffers */ true);\n  }\n\n  // Only switch text if we should be streaming text right now.\n  const chosenText = this.chooseTextStream_(period.textStreams);\n  if (chosenText && this.shouldStreamText_()) {\n    this.addTextStreamToSwitchHistory_(\n      period, chosenText, /* fromAdaptation= */ true);\n    this.switchTextStream_(chosenText);\n  }\n\n  // Send an adaptation event so that the UI can show the new language/tracks.\n  this.onAdaptation_();\n};\n\n\n/**\n * Callback from StreamingEngine, invoked when a period starts. This method\n * must always \"succeed\" so it may not throw an error. Any errors must be\n * routed to |onError|.\n *\n * @param {!shaka.extern.Period} period\n * @return {shaka.media.StreamingEngine.ChosenStreams}\n *    An object containing the chosen variant and text stream.\n * @private\n */\nshaka.Player.prototype.onChooseStreams_ = function(period) {\n  shaka.log.debug('onChooseStreams_', period);\n\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  try {\n    shaka.log.v2('onChooseStreams_, choosing variant from ', period.variants);\n    shaka.log.v2('onChooseStreams_, choosing text from ', period.textStreams);\n\n    const chosen = this.chooseStreams_(period);\n\n    shaka.log.v2('onChooseStreams_, chose variant ', chosen.variant);\n    shaka.log.v2('onChooseStreams_, chose text ', chosen.text);\n\n    return chosen;\n  } catch (e) {\n    this.onError_(e);\n    return {variant: null, text: null};\n  }\n};\n\n\n/**\n * This is the internal logic for |onChooseStreams_|. This separation is done\n * to allow this implementation to throw errors without consequence.\n *\n * @param {shaka.extern.Period} period\n *    The period that we are selecting streams from.\n * @return {shaka.media.StreamingEngine.ChosenStreams}\n *    An object containing the chosen variant and text stream.\n * @private\n */\nshaka.Player.prototype.chooseStreams_ = function(period) {\n  // We are switching Periods, so the AbrManager will be disabled.  But if we\n  // want to abr.enabled, we do not want to call AbrManager.enable before\n  // canSwitch_ is called.\n  this.switchingPeriods_ = true;\n  this.abrManager_.disable();\n  this.onAbrStatusChanged_();\n\n  shaka.log.debug('Choosing new streams after period changed');\n\n  let chosenVariant = this.chooseVariant_(period.variants);\n  let chosenText = this.chooseTextStream_(period.textStreams);\n\n  // Ignore deferred variant or text streams only if we are starting a new\n  // period.  In this case, any deferred switches were from an older period, so\n  // they do not apply.  We can still have deferred switches from the current\n  // period in the case of an early call to select*Track while we are setting up\n  // the first period.  This can happen with the 'streaming' event.\n  if (this.deferredVariant_) {\n    if (period.variants.includes(this.deferredVariant_)) {\n      chosenVariant = this.deferredVariant_;\n    }\n    this.deferredVariant_ = null;\n  }\n\n  if (this.deferredTextStream_) {\n    if (period.textStreams.includes(this.deferredTextStream_)) {\n      chosenText = this.deferredTextStream_;\n    }\n    this.deferredTextStream_ = null;\n  }\n\n  if (chosenVariant) {\n    this.addVariantToSwitchHistory_(\n        period, chosenVariant, /* fromAdaptation= */ true);\n  }\n\n  if (chosenText) {\n    this.addTextStreamToSwitchHistory_(\n        period, chosenText, /* fromAdaptation= */ true);\n  }\n\n  // Check if we should show text (based on difference between audio and text\n  // languages). Only check this during startup so we don't \"pop-up\" captions\n  // mid playback.\n  const startingUp = !this.streamingEngine_.getBufferingPeriod();\n  const chosenAudio = chosenVariant ? chosenVariant.audio : null;\n  if (startingUp && chosenText) {\n    if (chosenAudio && this.shouldShowText_(chosenAudio, chosenText)) {\n      this.isTextVisible_ = true;\n    }\n    if (this.isTextVisible_) {\n      // If the cached value says to show text, then update the text displayer\n      // since it defaults to not shown.  Note that returning the |chosenText|\n      // below will make StreamingEngine stream the text.\n      this.mediaSourceEngine_.getTextDisplayer().setTextVisibility(true);\n      goog.asserts.assert(this.shouldStreamText_(), 'Should be streaming text');\n    }\n    this.onTextTrackVisibility_();\n  }\n\n  // Don't fire a tracks-changed event since we aren't inside the new Period\n  // yet.\n  // Don't initialize with a text stream unless we should be streaming text.\n  if (this.shouldStreamText_()) {\n    return {variant: chosenVariant, text: chosenText};\n  } else {\n    return {variant: chosenVariant, text: null};\n  }\n};\n\n\n/**\n * Check if we should show text on screen automatically.\n *\n * The text should automatically be shown if the text is language-compatible\n * with the user's text language preference, but not compatible with the audio.\n *\n * For example:\n *   preferred | chosen | chosen |\n *   text      | text   | audio  | show\n *   -----------------------------------\n *   en-CA     | en     | jp     | true\n *   en        | en-US  | fr     | true\n *   fr-CA     | en-US  | jp     | false\n *   en-CA     | en-US  | en-US  | false\n *\n * @param {shaka.extern.Stream} audioStream\n * @param {shaka.extern.Stream} textStream\n * @return {boolean}\n * @private\n */\nshaka.Player.prototype.shouldShowText_ = function(audioStream, textStream) {\n  const LanguageUtils = shaka.util.LanguageUtils;\n\n  /** @type {string} */\n  const preferredTextLocale =\n      LanguageUtils.normalize(this.config_.preferredTextLanguage);\n  /** @type {string} */\n  const audioLocale = LanguageUtils.normalize(audioStream.language);\n  /** @type {string} */\n  const textLocale = LanguageUtils.normalize(textStream.language);\n\n  return LanguageUtils.areLanguageCompatible(textLocale, preferredTextLocale) &&\n         !LanguageUtils.areLanguageCompatible(audioLocale, textLocale);\n};\n\n\n/**\n * Callback from StreamingEngine, invoked when the period is set up.\n *\n * @private\n */\nshaka.Player.prototype.canSwitch_ = function() {\n  shaka.log.debug('canSwitch_');\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  this.switchingPeriods_ = false;\n\n  if (this.config_.abr.enabled) {\n    this.abrManager_.enable();\n    this.onAbrStatusChanged_();\n  }\n\n  // If we still have deferred switches, switch now.\n  if (this.deferredVariant_) {\n    this.streamingEngine_.switchVariant(\n        this.deferredVariant_, this.deferredVariantClearBuffer_,\n        this.deferredVariantClearBufferSafeMargin_);\n    this.onVariantChanged_();\n    this.deferredVariant_ = null;\n  }\n  if (this.deferredTextStream_) {\n    this.streamingEngine_.switchTextStream(this.deferredTextStream_);\n    this.onTextChanged_();\n    this.deferredTextStream_ = null;\n  }\n};\n\n\n/**\n * Callback from StreamingEngine.\n *\n * @private\n */\nshaka.Player.prototype.onManifestUpdate_ = function() {\n  if (this.parser_ && this.parser_.update) {\n    this.parser_.update();\n  }\n};\n\n\n/**\n * Callback from StreamingEngine.\n *\n * @private\n */\nshaka.Player.prototype.onSegmentAppended_ = function() {\n  // When we append a segment to media source (via streaming engine) we are\n  // changing what data we have buffered, so notify the playhead of the change.\n  if (this.playhead_) {\n    this.playhead_.notifyOfBufferingChange();\n  }\n};\n\n\n/**\n * Callback from AbrManager.\n *\n * @param {shaka.extern.Variant} variant\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin Optional amount of buffer (in seconds) to retain\n *   when clearing the buffer.\n *   Defaults to 0 if not provided. Ignored if clearBuffer is false.\n * @private\n */\nshaka.Player.prototype.switch_ = function(\n    variant, clearBuffer = false, safeMargin = 0) {\n  shaka.log.debug('switch_');\n  goog.asserts.assert(this.config_.abr.enabled,\n      'AbrManager should not call switch while disabled!');\n  goog.asserts.assert(!this.switchingPeriods_,\n      'AbrManager should not call switch while transitioning between Periods!');\n  goog.asserts.assert(this.manifest_, 'We need a manifest to switch variants.');\n\n  const period = this.findPeriodWithVariant_(variant);\n  goog.asserts.assert(period, 'A period should contain the variant.');\n\n  this.addVariantToSwitchHistory_(period, variant, /* fromAdaptation */ true);\n\n  if (!this.streamingEngine_) {\n    // There's no way to change it.\n    return;\n  }\n\n  this.streamingEngine_.switchVariant(variant, clearBuffer, safeMargin);\n  this.onAdaptation_();\n};\n\n\n/**\n * Dispatches an 'adaptation' event.\n * @private\n */\nshaka.Player.prototype.onAdaptation_ = function() {\n  // Delay the 'adaptation' event so that StreamingEngine has time to absorb\n  // the changes before the user tries to query it.\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('adaptation'));\n};\n\n\n/**\n * Dispatches a 'trackschanged' event.\n * @private\n */\nshaka.Player.prototype.onTracksChanged_ = function() {\n  // Delay the 'trackschanged' event so StreamingEngine has time to absorb the\n  // changes before the user tries to query it.\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('trackschanged'));\n};\n\n\n/**\n * Dispatches a 'variantchanged' event.\n * @private\n */\nshaka.Player.prototype.onVariantChanged_ = function() {\n  // Delay the 'variantchanged' event so StreamingEngine has time to absorb the\n  // changes before the user tries to query it.\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('variantchanged'));\n};\n\n\n/**\n * Dispatches a 'textchanged' event.\n * @private\n */\nshaka.Player.prototype.onTextChanged_ = function() {\n  // Delay the 'textchanged' event so StreamingEngine time to absorb the\n  // changes before the user tries to query it.\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('textchanged'));\n};\n\n\n/** @private */\nshaka.Player.prototype.onTextTrackVisibility_ = function() {\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('texttrackvisibility'));\n};\n\n\n/** @private */\nshaka.Player.prototype.onAbrStatusChanged_ = function() {\n  this.delayDispatchEvent_(new shaka.util.FakeEvent('abrstatuschanged', {\n    newStatus: this.config_.abr.enabled,\n  }));\n};\n\n\n/**\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.Player.prototype.onError_ = function(error) {\n  goog.asserts.assert(error instanceof shaka.util.Error, 'Wrong error type!');\n\n  // Errors dispatched after |destroy| is called are not meaningful and should\n  // be safe to ignore.\n  if (this.loadMode_ == shaka.Player.LoadMode.DESTROYED) { return; }\n\n  let event = new shaka.util.FakeEvent('error', {'detail': error});\n  this.dispatchEvent(event);\n  if (event.defaultPrevented) {\n    error.handled = true;\n  }\n};\n\n\n/**\n * When we fire region events, we need to copy the information out of the region\n * to break the connection with the player's internal data. We do the copy here\n * because this is the transition point between the player and the app.\n *\n * @param {string} eventName\n * @param {shaka.extern.TimelineRegionInfo} region\n *\n * @private\n */\nshaka.Player.prototype.onRegionEvent_ = function(eventName, region) {\n  // Always make a copy to avoid exposing our internal data to the app.\n  const clone = {\n    schemeIdUri: region.schemeIdUri,\n    value: region.value,\n    startTime: region.startTime,\n    endTime: region.endTime,\n    id: region.id,\n    eventElement: region.eventElement,\n  };\n\n  this.dispatchEvent(new shaka.util.FakeEvent(eventName, {detail: clone}));\n};\n\n\n/**\n * Turn the media element's error object into a Shaka Player error object.\n *\n * @return {shaka.util.Error}\n * @private\n */\nshaka.Player.prototype.videoErrorToShakaError_ = function() {\n  goog.asserts.assert(this.video_.error, 'Video error expected, but missing!');\n  if (!this.video_.error) {\n    return null;\n  }\n\n  const code = this.video_.error.code;\n  if (code == 1 /* MEDIA_ERR_ABORTED */) {\n    // Ignore this error code, which should only occur when navigating away or\n    // deliberately stopping playback of HTTP content.\n    return null;\n  }\n\n  // Extra error information from MS Edge and IE11:\n  let extended = this.video_.error.msExtendedCode;\n  if (extended) {\n    // Convert to unsigned:\n    if (extended < 0) {\n      extended += Math.pow(2, 32);\n    }\n    // Format as hex:\n    extended = extended.toString(16);\n  }\n\n  // Extra error information from Chrome:\n  const message = this.video_.error.message;\n\n  return new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.VIDEO_ERROR,\n      code, extended, message);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.Player.prototype.onVideoError_ = function(event) {\n  const error = this.videoErrorToShakaError_();\n  if (!error) {\n    return;\n  }\n  this.onError_(error);\n};\n\n\n/**\n * @param {!Object.<string, string>} keyStatusMap A map of hex key IDs to\n *   statuses.\n * @private\n */\nshaka.Player.prototype.onKeyStatus_ = function(keyStatusMap) {\n  if (!this.streamingEngine_) {\n    // We can't use this info to manage restrictions in src= mode, so ignore it.\n    return;\n  }\n\n  const restrictedStatuses = shaka.Player.restrictedStatuses_;\n\n  /** @type {shaka.extern.Period} */\n  const period = this.getPresentationPeriod_();\n  let tracksChanged = false;\n\n  let keyIds = Object.keys(keyStatusMap);\n  if (keyIds.length == 0) {\n    shaka.log.warning(\n        'Got a key status event without any key statuses, so we don\\'t know ' +\n        'the real key statuses. If we don\\'t have all the keys, you\\'ll need ' +\n        'to set restrictions so we don\\'t select those tracks.');\n  }\n\n  // If EME is using a synthetic key ID, the only key ID is '00' (a single 0\n  // byte).  In this case, it is only used to report global success/failure.\n  // See note about old platforms in: https://bit.ly/2tpez5Z\n  let isGlobalStatus = keyIds.length == 1 && keyIds[0] == '00';\n\n  if (isGlobalStatus) {\n    shaka.log.warning(\n        'Got a synthetic key status event, so we don\\'t know the real key ' +\n        'statuses. If we don\\'t have all the keys, you\\'ll need to set ' +\n        'restrictions so we don\\'t select those tracks.');\n  }\n\n  // Only filter tracks for keys if we have some key statuses to look at.\n  if (keyIds.length) {\n    period.variants.forEach(function(variant) {\n      const streams = shaka.util.StreamUtils.getVariantStreams(variant);\n\n      streams.forEach(function(stream) {\n        let originalAllowed = variant.allowedByKeySystem;\n\n        // Only update if we have a key ID for the stream.\n        // If the key isn't present, then we don't have that key and the track\n        // should be restricted.\n        if (stream.keyId) {\n          let keyStatus = keyStatusMap[isGlobalStatus ? '00' : stream.keyId];\n          variant.allowedByKeySystem =\n              !!keyStatus && !restrictedStatuses.includes(keyStatus);\n        }\n\n        if (originalAllowed != variant.allowedByKeySystem) {\n          tracksChanged = true;\n        }\n      });  // streams.forEach\n    });  // period.variants.forEach\n  }  // if (keyIds.length)\n\n  // TODO: Get StreamingEngine to track variants and create\n  // getBufferingVariant()\n  let activeAudio = this.streamingEngine_.getBufferingAudio();\n  let activeVideo = this.streamingEngine_.getBufferingVideo();\n  let activeVariant = shaka.util.StreamUtils.getVariantByStreams(\n      activeAudio, activeVideo, period.variants);\n\n  if (activeVariant && !activeVariant.allowedByKeySystem) {\n    shaka.log.debug('Choosing new streams after key status changed');\n    this.chooseStreamsAndSwitch_(period);\n  }\n\n  if (tracksChanged) {\n    this.onTracksChanged_();\n    this.chooseVariant_(period.variants);\n  }\n};\n\n\n/**\n * Callback from DrmEngine\n * @param {string} keyId\n * @param {number} expiration\n * @private\n */\nshaka.Player.prototype.onExpirationUpdated_ = function(keyId, expiration) {\n  if (this.parser_ && this.parser_.onExpirationUpdated) {\n    this.parser_.onExpirationUpdated(keyId, expiration);\n  }\n\n  let event = new shaka.util.FakeEvent('expirationupdated');\n  this.dispatchEvent(event);\n};\n\n/**\n * @return {boolean} true if we should stream text right now.\n * @private\n */\nshaka.Player.prototype.shouldStreamText_ = function() {\n  return this.config_.streaming.alwaysStreamText || this.isTextTrackVisible();\n};\n\n\n/**\n * Applies playRangeStart and playRangeEnd to the given timeline. This will\n * only affect non-live content.\n *\n * @param {shaka.media.PresentationTimeline} timeline\n * @param {number} playRangeStart\n * @param {number} playRangeEnd\n *\n * @private\n */\nshaka.Player.applyPlayRange_ = function(timeline,\n                                        playRangeStart,\n                                        playRangeEnd) {\n  if (playRangeStart > 0) {\n    if (timeline.isLive()) {\n      shaka.log.warning(\n          '|playRangeStart| has been configured for live content. ' +\n          'Ignoring the setting.');\n    } else {\n      timeline.setUserSeekStart(playRangeStart);\n    }\n  }\n\n  // If the playback has been configured to end before the end of the\n  // presentation, update the duration unless it's live content.\n  const fullDuration = timeline.getDuration();\n  if (playRangeEnd < fullDuration) {\n    if (timeline.isLive()) {\n      shaka.log.warning(\n          '|playRangeEnd| has been configured for live content. ' +\n          'Ignoring the setting.');\n    } else {\n      timeline.setDuration(playRangeEnd);\n    }\n  }\n};\n\n\n/**\n * Checks the given variants and if they are all restricted, throw an\n * appropriate exception.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @private\n */\nshaka.Player.prototype.checkRestrictedVariants_ = function(variants) {\n  const restrictedStatuses = shaka.Player.restrictedStatuses_;\n  const keyStatusMap = this.drmEngine_ ? this.drmEngine_.getKeyStatuses() : {};\n  const keyIds = Object.keys(keyStatusMap);\n  const isGlobalStatus = keyIds.length && keyIds[0] == '00';\n\n  let hasPlayable = false;\n  let hasAppRestrict = false;\n  let missingKeys = [];\n  let badKeyStatuses = [];\n\n  for (let variant of variants) {\n    // TODO: Combine with onKeyStatus_.\n    let streams = [];\n    if (variant.audio) streams.push(variant.audio);\n    if (variant.video) streams.push(variant.video);\n\n    for (let stream of streams) {\n      if (stream.keyId) {\n        let keyStatus = keyStatusMap[isGlobalStatus ? '00' : stream.keyId];\n        if (!keyStatus) {\n          if (!missingKeys.includes(stream.keyId)) {\n            missingKeys.push(stream.keyId);\n          }\n        } else if (restrictedStatuses.includes(keyStatus)) {\n          if (!badKeyStatuses.includes(keyStatus)) {\n            badKeyStatuses.push(keyStatus);\n          }\n        }\n      }\n    }\n\n    if (!variant.allowedByApplication) {\n      hasAppRestrict = true;\n    } else if (variant.allowedByKeySystem) {\n      hasPlayable = true;\n    }\n  }\n\n  if (!hasPlayable) {\n    /** @type {shaka.extern.RestrictionInfo} */\n    let data = {\n      hasAppRestrictions: hasAppRestrict,\n      missingKeys: missingKeys,\n      restrictedKeyStatuses: badKeyStatuses,\n    };\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.RESTRICTIONS_CANNOT_BE_MET,\n        data);\n  }\n};\n\n\n/**\n * Fire an event, but wait a little bit so that the immediate execution can\n * complete before the event is handled.\n *\n * @param {!shaka.util.FakeEvent} event\n * @private\n */\nshaka.Player.prototype.delayDispatchEvent_ = async function(event) {\n  // Wait until the next interpreter cycle.\n  await Promise.resolve();\n\n  // Only dispatch the event if we are still alive.\n  if (this.loadMode_ != shaka.Player.LoadMode.DESTROYED) {\n    this.dispatchEvent(event);\n  }\n};\n\n/**\n * Get the normalized languages for a group of tracks.\n *\n * @param {!Array.<?shaka.extern.Track>} tracks\n * @return {!Set.<string>}\n * @private\n */\nshaka.Player.getLanguagesFrom_ = function(tracks) {\n  const languages = new Set();\n\n  for (const track of tracks) {\n    if (track.language) {\n      languages.add(shaka.util.LanguageUtils.normalize(track.language));\n    } else {\n      languages.add('und');\n    }\n  }\n\n  return languages;\n};\n\n\n/**\n * Get all permutations of normalized languages and role for a group of tracks.\n *\n * @param {!Array.<?shaka.extern.Track>} tracks\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @private\n */\nshaka.Player.getLanguageAndRolesFrom_ = function(tracks) {\n  /** @type {!Map.<string, !Set>} */\n  const languageToRoles = new Map();\n\n  for (const track of tracks) {\n    let language = 'und';\n    let roles = [];\n\n    if (track.language) {\n      language = shaka.util.LanguageUtils.normalize(track.language);\n    }\n\n    if (track.type == 'variant') {\n      roles = track.audioRoles;\n    } else {\n      roles = track.roles;\n    }\n\n    if (!roles || !roles.length) {\n      // We must have an empty role so that we will still get a language-role\n      // entry from our Map.\n      roles = [''];\n    }\n\n    if (!languageToRoles.has(language)) {\n      languageToRoles.set(language, new Set());\n    }\n\n    for (const role of roles) {\n      languageToRoles.get(language).add(role);\n    }\n  }\n\n  // Flatten our map to an array of language-role pairs.\n  const pairings = [];\n  languageToRoles.forEach((roles, language) => {\n    for (const role of roles) {\n      pairings.push({\n        language: language,\n        role: role,\n      });\n    }\n  });\n  return pairings;\n};\n\n\n/**\n * Get the variants that the user can select. The variants will be based on\n * the period that the playhead is in and what variants are playable.\n *\n * @return {!Array.<shaka.extern.Variant>}\n * @private\n */\nshaka.Player.prototype.getSelectableVariants_ = function() {\n  // Use the period that is currently playing, allowing the change to affect\n  // the \"now\".\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n\n  // If we have been called before we load content or after we have unloaded\n  // content, then we should return no variants.\n  if (currentPeriod == null) { return []; }\n\n  this.assertCorrectActiveStreams_();\n\n  return currentPeriod.variants.filter((variant) => {\n    return shaka.util.StreamUtils.isPlayable(variant);\n  });\n};\n\n\n/**\n * Get the text streams that the user can select. The streams will be based on\n * the period that the playhead is in and what streams have finished loading.\n *\n * @return {!Array.<shaka.extern.Stream>}\n * @private\n */\nshaka.Player.prototype.getSelectableText_ = function() {\n  // Use the period that is currently playing, allowing the change to affect\n  // the \"now\".\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n\n  // If we have been called before we load content or after we have unloaded\n  // content, then we should return no streams.\n  if (currentPeriod == null) { return []; }\n\n  this.assertCorrectActiveStreams_();\n\n  // Don't show return streams that are still loading.\n  return currentPeriod.textStreams.filter((stream) => {\n    return !this.loadingTextStreams_.has(stream);\n  });\n};\n\n/**\n * Get the period that is on the screen. This will return |null| if nothing\n * is loaded.\n *\n * @return {shaka.extern.Period}\n * @private\n */\nshaka.Player.prototype.getPresentationPeriod_ = function() {\n  goog.asserts.assert(this.manifest_ && this.playhead_,\n      'Only ask for the presentation period when loaded with media source.');\n\n  const presentationTime = this.playhead_.getTime();\n\n  let lastPeriod = null;\n\n  // Periods are ordered by |startTime|. If we always keep the last period that\n  // started before our presentation time, it means we will have the best guess\n  // at which period we are presenting.\n  for (const period of this.manifest_.periods) {\n    if (period.startTime <= presentationTime) {\n      lastPeriod = period;\n    }\n  }\n\n  goog.asserts.assert(lastPeriod, 'Should have found a period.');\n  return lastPeriod;\n};\n\n\n/**\n * Get the variant that we are currently presenting to the user. If we are not\n * showing anything, then we will return |null|.\n *\n * @return {?shaka.extern.Variant}\n * @private\n */\nshaka.Player.prototype.getPresentationVariant_ = function() {\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n  return this.activeStreams_.getVariant(currentPeriod);\n};\n\n\n/**\n * Get the text stream that we are either currently presenting to the user or\n * will be presenting will captions are enabled. If we have no text to display,\n * this will return |null|.\n *\n * @return {?shaka.extern.Stream}\n * @private\n */\nshaka.Player.prototype.getPresentationText_ = function() {\n  /** @type {shaka.extern.Period} */\n  const currentPeriod = this.getPresentationPeriod_();\n\n  // Can't have a text stream when there is no period.\n  if (currentPeriod == null) { return null; }\n\n  // This is a workaround for the demo page to be able to display the list of\n  // text tracks. If no text track is currently active, pick  the one that's\\\n  // going to be streamed when captions are enabled and mark it as active.\n  if (!this.activeStreams_.getText(currentPeriod)) {\n    const textStreams = shaka.util.StreamUtils.filterStreamsByLanguageAndRole(\n        currentPeriod.textStreams,\n        this.currentTextLanguage_,\n        this.currentTextRole_);\n\n    if (textStreams.length) {\n      this.activeStreams_.useText(currentPeriod, textStreams[0]);\n    }\n  }\n\n  return this.activeStreams_.getText(currentPeriod);\n};\n\n\n/**\n * Assuming the player is playing content with media source, check if the player\n * has buffered enough content to make it to the end of the presentation.\n *\n * @return {boolean}\n * @private\n */\nshaka.Player.prototype.isBufferedToEndMS_ = function() {\n  goog.asserts.assert(\n      this.video_,\n      'We need a video element to get buffering information');\n  goog.asserts.assert(\n      this.mediaSourceEngine_,\n      'We need a media source engine to get buffering information');\n  goog.asserts.assert(\n      this.manifest_,\n      'We need a manifest to get buffering information');\n\n  // This is a strong guarantee that we are buffered to the end, because it\n  // means the playhead is already at that end.\n  if (this.video_.ended) {\n    return true;\n  }\n\n  // This means that MediaSource has buffered the final segment in all\n  // SourceBuffers and is no longer accepting additional segments.\n  if (this.mediaSourceEngine_.ended()) {\n    return true;\n  }\n\n  // Live streams are \"buffered to the end\" when they have buffered to the live\n  // edge or beyond (into the region covered by the presentation delay).\n  if (this.manifest_.presentationTimeline.isLive()) {\n    const liveEdge =\n        this.manifest_.presentationTimeline.getSegmentAvailabilityEnd();\n    const bufferEnd =\n        shaka.media.TimeRangesUtils.bufferEnd(this.video_.buffered);\n\n    if (bufferEnd >= liveEdge) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Assuming the player is playing content with src=, check if the player has\n * buffered enough content to make it to the end of the presentation.\n *\n * @return {boolean}\n * @private\n */\nshaka.Player.prototype.isBufferedToEndSrc_ = function() {\n  goog.asserts.assert(\n      this.video_,\n      'We need a video element to get buffering information');\n\n  // This is a strong guarantee that we are buffered to the end, because it\n  // means the playhead is already at that end.\n  if (this.video_.ended) {\n    return true;\n  }\n\n  // If we have buffered to the duration of the content, it means we will have\n  // enough content to buffer to the end of the presentation.\n  const bufferEnd = shaka.media.TimeRangesUtils.bufferEnd(this.video_.buffered);\n\n  // Because Safari's native HLS reports slightly inaccurate values for\n  // bufferEnd here, we use a fudge factor.  Without this, we can end up in a\n  // buffering state at the end of the stream.\n  // TODO: Try to remove the fudge here once we no longer manage buffering state\n  // above the browser with playbackRate=0.\n  const fudge = 0.1;  // 100 ms\n  return bufferEnd >= this.video_.duration - fudge;\n};\n\n\n/**\n * Find the period in |this.manifest_| that contains |variant|. If no period\n * contains |variant| this will return |null|.\n *\n * @param {shaka.extern.Variant} variant\n * @return {?shaka.extern.Period}\n * @private\n */\nshaka.Player.prototype.findPeriodWithVariant_ = function(variant) {\n  for (const period of this.manifest_.periods) {\n    if (period.variants.includes(variant)) {\n      return period;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Create an error for when we purposely interrupt a load operation.\n *\n * @return {!shaka.util.Error}\n * @private\n */\nshaka.Player.prototype.createAbortLoadError_ = function() {\n  return new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.PLAYER,\n      shaka.util.Error.Code.LOAD_INTERRUPTED);\n};\n\n\n/**\n * Key\n * ----------------------\n * D   : Detach Node\n * A   : Attach Node\n * MS  : Media Source Node\n * P   : Manifest Parser Node\n * M   : Manifest Node\n * DRM : Drm Engine Node\n * L   : Load Node\n * U   : Unloading Node\n * SRC : Src Equals Node\n *\n * Graph Topology\n * ----------------------\n *\n *        [SRC]-----+\n *         ^        |\n *         |        v\n * [D]<-->[A]<-----[U]\n *         |        ^\n *         v        |\n *        [MS]------+\n *         |        |\n *         v        |\n *        [P]-------+\n *         |        |\n *         v        |\n *        [M]-------+\n *         |        |\n *         v        |\n *        [DRM]-----+\n *         |        |\n *         v        |\n *        [L]-------+\n *\n * @param {!shaka.routing.Node} currentlyAt\n * @param {shaka.routing.Payload} currentlyWith\n * @param {!shaka.routing.Node} wantsToBeAt\n * @param {shaka.routing.Payload} wantsToHave\n * @return {?shaka.routing.Node}\n * @private\n */\nshaka.Player.prototype.getNextStep_ = function(\n    currentlyAt, currentlyWith, wantsToBeAt, wantsToHave) {\n  let next = null;\n\n  // Detach is very simple, either stay in detach (because |detach| was called\n  // while in detached) or go somewhere that requires us to attach to an\n  // element.\n  if (currentlyAt == this.detachNode_) {\n    next = wantsToBeAt == this.detachNode_ ?\n           this.detachNode_ :\n           this.attachNode_;\n  }\n\n  if (currentlyAt == this.attachNode_) {\n    next = this.getNextAfterAttach_(wantsToBeAt, currentlyWith, wantsToHave);\n  }\n\n  if (currentlyAt == this.mediaSourceNode_) {\n    next = this.getNextAfterMediaSource_(\n        wantsToBeAt, currentlyWith, wantsToHave);\n  }\n\n  if (currentlyAt == this.parserNode_) {\n    next = this.getNextMatchingAllDependencies_(\n        /* destination= */ this.loadNode_,\n        /* next= */ this.manifestNode_,\n        /* reset= */ this.unloadNode_,\n        /* goingTo= */ wantsToBeAt,\n        /* has= */ currentlyWith,\n        /* wants= */ wantsToHave);\n  }\n\n  if (currentlyAt == this.manifestNode_) {\n    next = this.getNextMatchingAllDependencies_(\n        /* destination= */ this.loadNode_,\n        /* next= */ this.drmNode_,\n        /* reset= */ this.unloadNode_,\n        /* goingTo= */ wantsToBeAt,\n        /* has= */ currentlyWith,\n        /* wants= */ wantsToHave);\n  }\n\n  // For DRM, we have two options \"load\" or \"unload\". If all our constraints are\n  // met, we can go to \"load\". If anything is off, we must go back to \"unload\"\n  // to reset.\n  if (currentlyAt == this.drmNode_) {\n    next = this.getNextMatchingAllDependencies_(\n        /* destination= */ this.loadNode_,\n        /* next= */ this.loadNode_,\n        /* reset= */ this.unloadNode_,\n        /* goingTo= */ wantsToBeAt,\n        /* has= */ currentlyWith,\n        /* wants= */ wantsToHave);\n  }\n\n  // For DRM w/ src= playback, we only care about destination and media element.\n  if (currentlyAt == this.srcEqualsDrmNode_) {\n    if (wantsToBeAt == this.srcEqualsNode_ &&\n        currentlyWith.mediaElement == wantsToHave.mediaElement) {\n      next = this.srcEqualsNode_;\n    } else {\n      next = this.unloadNode_;\n    }\n  }\n\n  // After we load content, always go through unload because we can't safely\n  // use components after we have started playback.\n  if (currentlyAt == this.loadNode_ || currentlyAt == this.srcEqualsNode_) {\n    next = this.unloadNode_;\n  }\n\n  if (currentlyAt == this.unloadNode_) {\n    next = this.getNextAfterUnload_(wantsToBeAt, currentlyWith, wantsToHave);\n  }\n\n  goog.asserts.assert(next, 'Missing next step!');\n  return next;\n};\n\n\n/**\n * @param {!shaka.routing.Node} goingTo\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {?shaka.routing.Node}\n * @private\n */\nshaka.Player.prototype.getNextAfterAttach_ = function(goingTo, has, wants) {\n  // Attach and detach are the only two nodes that we can directly go\n  // back-and-forth between.\n  if (goingTo == this.detachNode_) { return this.detachNode_; }\n\n  // If we are going anywhere other than detach, then we need the media element\n  // to match, if they don't match, we need to go through detach first.\n  if (has.mediaElement != wants.mediaElement) { return this.detachNode_; }\n\n  // If we are already in attached, and someone calls |attach| again (to the\n  // same video element), we can handle the redundant request by re-entering\n  // our current state.\n  if (goingTo == this.attachNode_) { return this.attachNode_; }\n\n  // The next step from attached to loaded is through media source.\n  if (goingTo == this.mediaSourceNode_ || goingTo == this.loadNode_) {\n    return this.mediaSourceNode_;\n  }\n\n  // If we are going to src=, then we should set up DRM first.  This will\n  // support cases like FairPlay HLS on Safari.\n  if (goingTo == this.srcEqualsNode_) {\n    return this.srcEqualsDrmNode_;\n  }\n\n  // We are missing a rule, the null will get caught by a common check in\n  // the routing system.\n  return null;\n};\n\n\n/**\n * @param {!shaka.routing.Node} goingTo\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {?shaka.routing.Node}\n * @private\n */\nshaka.Player.prototype.getNextAfterMediaSource_ = function(\n    goingTo, has, wants) {\n  // We can only go to parse manifest or unload. If we want to go to load and\n  // we have the right media element, we can go to parse manifest. If we don't,\n  // no matter where we want to go, we must go through unload.\n  if (goingTo == this.loadNode_ && has.mediaElement == wants.mediaElement) {\n    return this.parserNode_;\n  }\n\n  // Right now the unload node is responsible for tearing down all playback\n  // components (including media source). So since we have created media\n  // source, we need to unload since our dependencies are not compatible.\n  //\n  // TODO: We are structured this way to maintain a historic structure. Going\n  //       forward, there is no reason to restrict ourselves to this. Going\n  //       forward we should explore breaking apart |onUnload| and develop\n  //       more meaningful terminology around tearing down playback resources.\n  return this.unloadNode_;\n};\n\n\n/**\n * After unload there are only two options, attached or detached. This choice is\n * based on whether or not we have a media element. If we have a media element,\n * then we go to attach. If we don't have a media element, we go to detach.\n *\n * @param {!shaka.routing.Node} goingTo\n * @param {shaka.routing.Payload} has\n * @param {shaka.routing.Payload} wants\n * @return {?shaka.routing.Node}\n * @private\n */\nshaka.Player.prototype.getNextAfterUnload_ = function(goingTo, has, wants) {\n  // If we don't want a media element, detach.\n  // If we have the wrong media element, detach.\n  // Otherwise it means we want to attach to a media element and it is safe to\n  // do so.\n  return !wants.mediaElement || has.mediaElement != wants.mediaElement ?\n         this.detachNode_ :\n         this.attachNode_;\n};\n\n\n/**\n * A general method used to handle routing when we can either than one step\n * toward our destination (while all our dependencies match) or go to a node\n * that will reset us so we can try again.\n *\n * @param {!shaka.routing.Node} destinationNode\n *   What |goingTo| must be for us to step toward |nextNode|. Otherwise we will\n *   go to |resetNode|.\n * @param {!shaka.routing.Node} nextNode\n *   The node we will go to next if |goingTo == destinationNode| and all\n *   dependencies match.\n * @param {!shaka.routing.Node} resetNode\n *   The node we will go to next if |goingTo != destinationNode| or any\n *   dependency does not match.\n * @param {!shaka.routing.Node} goingTo\n *   The node that the walker is trying to go to.\n * @param {shaka.routing.Payload} has\n *   The payload that the walker currently has.\n * @param {shaka.routing.Payload} wants\n *   The payload that the walker wants to have when iy gets to |goingTo|.\n * @return {shaka.routing.Node}\n * @private\n */\nshaka.Player.prototype.getNextMatchingAllDependencies_ = function(\n        destinationNode, nextNode, resetNode, goingTo, has, wants) {\n  if (goingTo == destinationNode &&\n      has.mediaElement == wants.mediaElement &&\n      has.uri == wants.uri &&\n      has.mimeType == wants.mimeType &&\n      has.factory == wants.factory) {\n    return nextNode;\n  }\n\n  return resetNode;\n};\n\n\n/**\n * @return {shaka.routing.Payload}\n * @private\n */\nshaka.Player.prototype.createEmptyPayload_ = function() {\n  return {\n    factory: null,\n    mediaElement: null,\n    mimeType: null,\n    startTime: null,\n    startTimeOfLoad: null,\n    uri: null,\n  };\n};\n\n\n/**\n * Using a promise, wrap the listeners returned by |Walker.startNewRoute|. This\n * will work for most usages in |Player| but should not be used for special\n * cases.\n *\n * This will connect |onCancel|, |onEnd|, |onError|, and |onSkip| with |resolve|\n * and |reject| but will leave |onStart| unset.\n *\n * @param {shaka.routing.Walker.Listeners} listeners\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.wrapWalkerListenersWithPromise_ = function(listeners) {\n  return new Promise((resolve, reject) => {\n    listeners.onCancel = () => reject(this.createAbortLoadError_());\n    listeners.onEnd = () => resolve();\n    listeners.onError = (e) => reject(e);\n    listeners.onSkip = () => reject(this.createAbortLoadError_());\n  });\n};\n\n/**\n * In order to know what method of loading the player used for some content, we\n * have this enum. It lets us know if content has not been loaded, loaded with\n * media source, or loaded with src equals.\n *\n * This enum has a low resolution, because it is only meant to express the\n * outer limits of the various states that the player is in. For example, when\n * someone calls a public method on player, it should not matter if they have\n * initialized drm engine, it should only matter if they finished loading\n * content.\n *\n * @enum {number}\n * @export\n */\nshaka.Player.LoadMode = {\n  'DESTROYED': 0,\n  'NOT_LOADED': 1,\n  'MEDIA_SOURCE': 2,\n  'SRC_EQUALS': 3,\n};\n\n/**\n * The typical buffering threshold.  When we have less than this buffered (in\n * seconds), we enter a buffering state.  This specific value is based on manual\n * testing and evaluation across a variety of platforms.\n *\n * To make the buffering logic work in all cases, this \"typical\" threshold will\n * be overridden if the rebufferingGoal configuration is too low.\n *\n * @const {number}\n * @private\n */\nshaka.Player.TYPICAL_BUFFERING_THRESHOLD_ = 0.5;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.SimpleTextDisplayer');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\n\n\n/**\n * <p>\n * This defines the default text displayer plugin. An instance of this\n * class is used when no custom displayer is given.\n * </p>\n * <p>\n * This class simply converts shaka.text.Cue objects to\n * TextTrackCues and feeds them to the browser.\n * </p>\n *\n * @param {HTMLMediaElement} video\n * @constructor\n * @struct\n * @implements {shaka.extern.TextDisplayer}\n * @export\n */\nshaka.text.SimpleTextDisplayer = function(video) {\n  /** @private {TextTrack} */\n  this.textTrack_ = null;\n\n  // TODO: Test that in all cases, the built-in CC controls in the video element\n  // are toggling our TextTrack.\n\n  // If the video element has TextTracks, disable them.  If we see one that\n  // was created by a previous instance of Shaka Player, reuse it.\n  for (let i = 0; i < video.textTracks.length; ++i) {\n    let track = video.textTracks[i];\n    track.mode = 'disabled';\n\n    if (track.label == shaka.text.SimpleTextDisplayer.TextTrackLabel_) {\n      this.textTrack_ = track;\n    }\n  }\n\n  if (!this.textTrack_) {\n    // As far as I can tell, there is no observable difference between setting\n    // kind to 'subtitles' or 'captions' when creating the TextTrack object.\n    // The individual text tracks from the manifest will still have their own\n    // kinds which can be displayed in the app's UI.\n    this.textTrack_ = video.addTextTrack(\n        'subtitles', shaka.text.SimpleTextDisplayer.TextTrackLabel_);\n  }\n  this.textTrack_.mode = 'hidden';\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.remove = function(start, end) {\n  // Check that the displayer hasn't been destroyed.\n  if (!this.textTrack_) return false;\n\n  let removeInRange = (cue) => {\n    const inside = cue.startTime < end && cue.endTime > start;\n    return inside;\n  };\n\n  shaka.text.SimpleTextDisplayer.removeWhere_(this.textTrack_, removeInRange);\n\n  return true;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.append = function(cues) {\n  const convertToTextTrackCue =\n      shaka.text.SimpleTextDisplayer.convertToTextTrackCue_;\n\n  // Convert cues.\n  let textTrackCues = [];\n  for (let i = 0; i < cues.length; i++) {\n    let cue = convertToTextTrackCue(cues[i]);\n    if (cue) {\n      textTrackCues.push(cue);\n    }\n  }\n\n  // Sort the cues based on start/end times.  Make a copy of the array so\n  // we can get the index in the original ordering.  Out of order cues are\n  // rejected by IE/Edge.  See https://bit.ly/2K9VX3s\n  let sortedCues = textTrackCues.slice().sort(function(a, b) {\n    if (a.startTime != b.startTime) {\n      return a.startTime - b.startTime;\n    } else if (a.endTime != b.endTime) {\n      return a.endTime - b.startTime;\n    } else {\n      // The browser will display cues with identical time ranges from the\n      // bottom up.  Reversing the order of equal cues means the first one\n      // parsed will be at the top, as you would expect.\n      // See https://github.com/google/shaka-player/issues/848 for more info.\n      return textTrackCues.indexOf(b) - textTrackCues.indexOf(a);\n    }\n  });\n\n  sortedCues.forEach(function(cue) {\n    this.textTrack_.addCue(cue);\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.destroy = function() {\n  if (this.textTrack_) {\n    let removeIt = (cue) => true;\n    shaka.text.SimpleTextDisplayer.removeWhere_(this.textTrack_, removeIt);\n  }\n\n  this.textTrack_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.isTextVisible = function() {\n  return this.textTrack_.mode == 'showing';\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.setTextVisibility = function(on) {\n  this.textTrack_.mode = on ? 'showing' : 'hidden';\n};\n\n\n/**\n * @param {!shaka.extern.Cue} shakaCue\n * @return {TextTrackCue}\n * @private\n */\nshaka.text.SimpleTextDisplayer.convertToTextTrackCue_ = function(shakaCue) {\n  if (shakaCue.startTime >= shakaCue.endTime) {\n    // IE/Edge will throw in this case.\n    // See issue #501\n    shaka.log.warning('Invalid cue times: ' + shakaCue.startTime +\n                      ' - ' + shakaCue.endTime);\n    return null;\n  }\n\n  const Cue = shaka.text.Cue;\n  /** @type {VTTCue} */\n  let vttCue = new VTTCue(shakaCue.startTime,\n                          shakaCue.endTime,\n                          shakaCue.payload);\n\n  // NOTE: positionAlign and lineAlign settings are not supported by Chrome\n  // at the moment, so setting them will have no effect.\n  // The bug on chromium to implement them:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=633690\n\n  vttCue.lineAlign = shakaCue.lineAlign;\n  vttCue.positionAlign = shakaCue.positionAlign;\n  vttCue.size = shakaCue.size;\n  try {\n    // Safari 10 seems to throw on align='center'.\n    vttCue.align = shakaCue.textAlign;\n  } catch (exception) {}\n\n  if (shakaCue.textAlign == 'center' && vttCue.align != 'center') {\n    // We want vttCue.position = 'auto'. By default, |position| is set to\n    // \"auto\". If we set it to \"auto\" safari will throw an exception, so we\n    // must rely on the default value.\n    vttCue.align = 'middle';\n  }\n\n  if (shakaCue.writingMode ==\n          Cue.writingMode.VERTICAL_LEFT_TO_RIGHT) {\n    vttCue.vertical = 'lr';\n  } else if (shakaCue.writingMode ==\n           Cue.writingMode.VERTICAL_RIGHT_TO_LEFT) {\n    vttCue.vertical = 'rl';\n  }\n\n  // snapToLines flag is true by default\n  if (shakaCue.lineInterpretation == Cue.lineInterpretation.PERCENTAGE) {\n    vttCue.snapToLines = false;\n  }\n\n  if (shakaCue.line != null) {\n    vttCue.line = shakaCue.line;\n  }\n\n  if (shakaCue.position != null) {\n    vttCue.position = shakaCue.position;\n  }\n\n  return vttCue;\n};\n\n\n/**\n * Iterate over all the cues in a text track and remove all those for which\n * |predicate(cue)| returns true.\n *\n * @param {!TextTrack} track\n * @param {function(!TextTrackCue):boolean} predicate\n * @private\n */\nshaka.text.SimpleTextDisplayer.removeWhere_ = function(track, predicate) {\n  // Since |track.cues| can be null if |track.mode| is \"disabled\", force it to\n  // something other than \"disabled\".\n  //\n  // If the track is already showing, then we should keep it as showing. But if\n  // it something else, we will use hidden so that we don't \"flash\" cues on the\n  // screen.\n  let oldState = track.mode;\n  let tempState = oldState == 'showing' ? 'showing' : 'hidden';\n\n  track.mode = tempState;\n\n  goog.asserts.assert(\n      track.cues,\n      'Cues should be accessible when mode is set to \"' + tempState + '\".');\n\n  // Go backward so that if a removal is done, it should not cause problems\n  // with future indexing. In the case that the underlying implementation\n  // returns a copy (and not a shared instance) cache a copy of the tracks.\n  let cues = track.cues;\n  for (let i = cues.length - 1; i >= 0; i--) {\n    let cue = cues[i];\n    if (cue && predicate(cue)) {\n      track.removeCue(cue);\n    }\n  }\n\n  track.mode = oldState;\n};\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.SimpleTextDisplayer.TextTrackLabel_ = 'Shaka Player TextTrack';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ConfigUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\n\n\n/**\n * @param {!Object} destination\n * @param {!Object} source\n * @param {!Object} template supplies default values\n * @param {!Object} overrides\n *   Supplies override type checking.  When the current path matches the key in\n *   this object, each sub-value must match the type in this object.  If this\n *   contains an Object, it is used as the template.\n * @param {string} path to this part of the config\n * @return {boolean}\n * @export\n */\nshaka.util.ConfigUtils.mergeConfigObjects =\n    function(destination, source, template, overrides, path) {\n  goog.asserts.assert(destination, 'Destination config must not be null!');\n\n  /**\n   * @type {boolean}\n   * If true, don't validate the keys in the next level.\n   */\n  let ignoreKeys = path in overrides;\n\n  let isValid = true;\n\n  for (let k in source) {\n    let subPath = path + '.' + k;\n    let subTemplate = ignoreKeys ? overrides[path] : template[k];\n\n    // The order of these checks is important.\n    if (!ignoreKeys && !(k in template)) {\n      shaka.log.error('Invalid config, unrecognized key ' + subPath);\n      isValid = false;\n    } else if (source[k] === undefined) {\n      // An explicit 'undefined' value causes the key to be deleted from the\n      // destination config and replaced with a default from the template if\n      // possible.\n      if (subTemplate === undefined || ignoreKeys) {\n        // There is nothing in the template, so delete.\n        delete destination[k];\n      } else {\n        // There is something in the template, so go back to that.\n        destination[k] = shaka.util.ObjectUtils.cloneObject(subTemplate);\n      }\n    } else if (subTemplate.constructor == Object &&\n               source[k] &&\n               source[k].constructor == Object) {\n      // These are plain Objects with no other constructor.\n\n      if (!destination[k]) {\n        // Initialize the destination with the template so that normal merging\n        // and type-checking can happen.\n        destination[k] = shaka.util.ObjectUtils.cloneObject(subTemplate);\n      }\n\n      let subMergeValid = shaka.util.ConfigUtils.mergeConfigObjects(\n          destination[k], source[k], subTemplate, overrides, subPath);\n      isValid = isValid && subMergeValid;\n    } else if (typeof source[k] != typeof subTemplate ||\n               source[k] == null ||\n               source[k].constructor != subTemplate.constructor) {\n      // The source is the wrong type.  This check allows objects to be nulled,\n      // but does not allow null for any non-object fields.\n      shaka.log.error('Invalid config, wrong type for ' + subPath);\n      isValid = false;\n    } else if (typeof template[k] == 'function' &&\n               template[k].length != source[k].length) {\n      shaka.log.warning(\n          'Invalid config, wrong number of arguments for ' + subPath);\n      destination[k] = source[k];\n    } else {\n      destination[k] = source[k];\n    }\n  }\n\n  return isValid;\n};\n\n\n/**\n * Convert config from ('fieldName', value) format to a partial config object.\n *\n * E. g. from ('manifest.retryParameters.maxAttempts', 1) to\n * { manifest: { retryParameters: { maxAttempts: 1 }}}.\n *\n * @param {string} fieldName\n * @param {*} value\n * @return {!Object}\n * @export\n */\nshaka.util.ConfigUtils.convertToConfigObject = function(fieldName, value) {\n  const configObject = {};\n  let last = configObject;\n  let searchIndex = 0;\n  let nameStart = 0;\n  while (true) {  // eslint-disable-line no-constant-condition\n    const idx = fieldName.indexOf('.', searchIndex);\n    if (idx < 0) {\n      break;\n    }\n    if (idx == 0 || fieldName[idx - 1] != '\\\\') {\n      const part = fieldName.substring(nameStart, idx).replace(/\\\\\\./g, '.');\n      last[part] = {};\n      last = last[part];\n      nameStart = idx + 1;\n    }\n    searchIndex = idx + 1;\n  }\n\n  last[fieldName.substring(nameStart).replace(/\\\\\\./g, '.')] = value;\n  return configObject;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.PlayerConfiguration');\n\ngoog.require('shaka.abr.SimpleAbrManager');\ngoog.require('shaka.util.ConfigUtils');\n\n\n// TODO(vaage): Many times in our configs, we need to create an empty\n//  implementation of a method, but to avoid closure from removing unused\n//  parameters (and breaking our merge config code) we need to use each\n//  parameter. Is there a better solution to this problem than what we are\n//  doing now?\n//\n//  NOTE: Chrome App Content Security Policy prohibits usage of new Function()\n\n/**\n * @final\n * @export\n */\nshaka.util.PlayerConfiguration = class {\n  /** @return {shaka.extern.PlayerConfiguration} */\n  static createDefault() {\n    // This is a relatively safe default, since 3G cell connections\n    // are faster than this.  For slower connections, such as 2G,\n    // the default estimate may be too high.\n    let bandwidthEstimate = 500e3; // 500kbps\n\n    let abrMaxHeight = Infinity;\n\n    // Some browsers implement the Network Information API, which allows\n    // retrieving information about a user's network connection.\n    if (navigator.connection) {\n      // If it's available, get the bandwidth estimate from the browser (in\n      // megabits per second) and use it as defaultBandwidthEstimate.\n      bandwidthEstimate = navigator.connection.downlink * 1e6;\n      // TODO: Move this into AbrManager, where changes to the estimate can be\n      // observed and absorbed.\n\n      // If the user has checked a box in the browser to ask it to use less\n      // data, the browser will expose this intent via connection.saveData.\n      // When that is true, we will default the max ABR height to 360p. Apps\n      // can override this if they wish.\n      //\n      // The decision to use 360p was somewhat arbitrary. We needed a default\n      // limit, and rather than restrict to a certain bandwidth, we decided to\n      // restrict resolution. This will implicitly restrict bandwidth and\n      // therefore save data. We (Shaka+Chrome) judged that:\n      //   - HD would be inappropriate\n      //   - If a user is asking their browser to save data, 360p it reasonable\n      //   - 360p would not look terrible on small mobile device screen\n      // We also found that:\n      //   - YouTube's website on mobile defaults to 360p (as of 2018)\n      //   - iPhone 6, in portrait mode, has a physical resolution big enough\n      //     for 360p widescreen, but a little smaller than 480p widescreen\n      //     (https://apple.co/2yze4es)\n      // If the content's lowest resolution is above 360p, AbrManager will use\n      // the lowest resolution.\n      if (navigator.connection.saveData) {\n        abrMaxHeight = 360;\n      }\n    }\n\n    const drm = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      // These will all be verified by special cases in mergeConfigObjects_():\n      servers: {},    // key is arbitrary key system ID, value must be string\n      clearKeys: {},  // key is arbitrary key system ID, value must be string\n      advanced: {},    // key is arbitrary key system ID, value is a record type\n      delayLicenseRequestUntilPlayed: false,\n    };\n\n    const manifest = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      availabilityWindowOverride: NaN,\n      dash: {\n        // Reference node to keep closure from removing it.\n        // If the argument is removed, it breaks our function length check\n        // in mergeConfigObjects_().\n        customScheme: (node) => {\n          if (node) return null;\n        },\n        clockSyncUri: '',\n        ignoreDrmInfo: false,\n        xlinkFailGracefully: false,\n        defaultPresentationDelay: 10,\n        ignoreMinBufferTime: false,\n        autoCorrectDrift: true,\n      },\n    };\n\n    const streaming = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      // Need some operation in the callback or else closure may remove calls\n      // to the function as it would be a no-op.\n      failureCallback: (error) => {\n        shaka.log.error('Unhandled streaming error', error);\n      },\n      rebufferingGoal: 2,\n      bufferingGoal: 10,\n      bufferBehind: 30,\n      ignoreTextStreamFailures: false,\n      alwaysStreamText: false,\n      startAtSegmentBoundary: false,\n      smallGapLimit: 0.5,\n      jumpLargeGaps: false,\n      durationBackoff: 1,\n      forceTransmuxTS: false,\n      // Offset by 5 seconds since Chromecast takes a few seconds to start\n      // playing after a seek, even when buffered.\n      safeSeekOffset: 5,\n      stallEnabled: true,\n      stallThreshold: 1 /* seconds */,\n      stallSkip: 0.1 /* seconds */,\n    };\n\n    // WebOS has a long hardware pipeline that responds slowly, making it easy\n    // to misidentify stalls. To avoid this, by default disable stall detection\n    // on WebOS.\n    if (shaka.util.Platform.isWebOS()) {\n      streaming.stallEnabled = false;\n    }\n\n    const offline = {\n      // We need to set this to a throw-away implementation for now as our\n      // default implementation will need to reference other fields in the\n      // config. We will set it to our intended implementation after we have\n      // the top-level object created.\n      trackSelectionCallback: (tracks) => tracks,\n\n      // Need some operation in the callback or else closure may remove calls\n      // to the function as it would be a no-op.\n      progressCallback: (content, progress) => {\n        shaka.log.v2('Offline operation on',\n                     content.originalManifestUri,\n                     'progress at',\n                     progress);\n      },\n\n      // By default we use persistent licenses as forces errors to surface if\n      // a platform does not support offline licenses rather than causing\n      // unexpected behaviours when someone tries to plays downloaded content\n      // without a persistent license.\n      usePersistentLicense: true,\n    };\n\n    const abr = {\n      enabled: true,\n      defaultBandwidthEstimate: bandwidthEstimate,\n      switchInterval: 8,\n      bandwidthUpgradeTarget: 0.85,\n      bandwidthDowngradeTarget: 0.95,\n      restrictions: {\n        minWidth: 0,\n        maxWidth: Infinity,\n        minHeight: 0,\n        maxHeight: abrMaxHeight,\n        minPixels: 0,\n        maxPixels: Infinity,\n        minBandwidth: 0,\n        maxBandwidth: Infinity,\n      },\n    };\n\n    /** @type {shaka.extern.PlayerConfiguration} */\n    const config = {\n      drm: drm,\n      manifest: manifest,\n      streaming: streaming,\n      offline: offline,\n      abrFactory: shaka.abr.SimpleAbrManager,\n      abr: abr,\n      preferredAudioLanguage: '',\n      preferredTextLanguage: '',\n      preferredVariantRole: '',\n      preferredTextRole: '',\n      preferredAudioChannelCount: 2,\n      restrictions: {\n        minWidth: 0,\n        maxWidth: Infinity,\n        minHeight: 0,\n        maxHeight: Infinity,\n        minPixels: 0,\n        maxPixels: Infinity,\n        minBandwidth: 0,\n        maxBandwidth: Infinity,\n      },\n      playRangeStart: 0,\n      playRangeEnd: Infinity,\n      textDisplayFactory: () => null,\n    };\n\n    // Add this callback so that we can reference the preferred audio language\n    // through the config object so that if it gets updated, we have the\n    // updated value.\n    offline.trackSelectionCallback = (tracks) => {\n      return shaka.util.PlayerConfiguration.defaultTrackSelect(\n          tracks, config.preferredAudioLanguage);\n    };\n\n    return config;\n  }\n\n  /**\n   * Merges the given configuration changes into the given destination.  This\n   * uses the default Player configurations as the template.\n   *\n   * @param {shaka.extern.PlayerConfiguration} destination\n   * @param {!Object} updates\n   * @param {shaka.extern.PlayerConfiguration=} template\n   * @return {boolean}\n   * @export\n   */\n  static mergeConfigObjects(destination, updates, template) {\n    const overrides = {\n      '.drm.servers': '',\n      '.drm.clearKeys': '',\n      '.drm.advanced': {\n        distinctiveIdentifierRequired: false,\n        persistentStateRequired: false,\n        videoRobustness: '',\n        audioRobustness: '',\n        serverCertificate: new Uint8Array(0),\n        individualizationServer: '',\n      },\n    };\n    return shaka.util.ConfigUtils.mergeConfigObjects(\n        destination, updates,\n        template || shaka.util.PlayerConfiguration.createDefault(), overrides,\n        '');\n  }\n\n  /**\n   * @param {!Array.<shaka.extern.Track>} tracks\n   * @param {string} preferredAudioLanguage\n   * @return {!Array.<shaka.extern.Track>}\n   */\n  static defaultTrackSelect(tracks, preferredAudioLanguage) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    const allVariants = tracks.filter((track) => track.type == 'variant');\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let selectedVariants = [];\n\n    // Find the locale that best matches our preferred audio locale.\n    const closestLocale = LanguageUtils.findClosestLocale(\n        preferredAudioLanguage,\n        allVariants.map((variant) => variant.language));\n    // If we found a locale that was close to our preference, then only use\n    // variants that use that locale.\n    if (closestLocale) {\n      selectedVariants = allVariants.filter((variant) => {\n        const locale = LanguageUtils.normalize(variant.language);\n        return locale == closestLocale;\n      });\n    }\n\n    // If we failed to get a language match, go with primary.\n    if (selectedVariants.length == 0) {\n      selectedVariants = allVariants.filter((variant) => {\n        return variant.primary;\n      });\n    }\n\n    // Otherwise, there is no good way to choose the language, so we don't\n    // choose a language at all.\n    if (selectedVariants.length == 0) {\n      // Issue a warning, but only if the content has multiple languages.\n      // Otherwise, this warning would just be noise.\n      const languages = new Set(allVariants.map((track) => {\n        return track.language;\n      }));\n\n      if (languages.size > 1) {\n        shaka.log.warning('Could not choose a good audio track based on ' +\n                          'language preferences or primary tracks.  An ' +\n                          'arbitrary language will be stored!');\n      }\n\n      // Default back to all variants.\n      selectedVariants = allVariants;\n    }\n\n    // From previously selected variants, choose the SD ones (height <= 480).\n    const tracksByHeight = selectedVariants.filter((track) => {\n      return track.height && track.height <= 480;\n    });\n\n    // If variants don't have video or no video with height <= 480 was\n    // found, proceed with the previously selected tracks.\n    if (tracksByHeight.length) {\n      // Sort by resolution, then select all variants which match the height\n      // of the highest SD res.  There may be multiple audio bitrates for the\n      // same video resolution.\n      tracksByHeight.sort((a, b) => b.height - a.height);\n      selectedVariants = tracksByHeight.filter((track) => {\n        return track.height == tracksByHeight[0].height;\n      });\n    }\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    const selectedTracks = [];\n\n    // If there are multiple matches at different audio bitrates, select the\n    // middle bandwidth one.\n    if (selectedVariants.length) {\n      const middleIndex = Math.floor(selectedVariants.length / 2);\n      selectedVariants.sort((a, b) => a.bandwidth - b.bandwidth);\n      selectedTracks.push(selectedVariants[middleIndex]);\n    }\n\n    // Since this default callback is used primarily by our own demo app and by\n    // app developers who haven't thought about which tracks they want, we\n    // should select all text tracks, regardless of language.  This makes for a\n    // better demo for us, and does not rely on user preferences for the\n    // unconfigured app.\n    for (const track of tracks) {\n      if (track.type == ContentType.TEXT) { selectedTracks.push(track); }\n    }\n\n    return selectedTracks;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.StateHistory');\n\ngoog.require('goog.asserts');\n\n\n/**\n * This class is used to track the time spent in arbitrary states. When told of\n * a state, it will assume that state was active until a new state is provided.\n * When provided with identical states back-to-back, the existing entry will be\n * updated.\n *\n * @final\n */\nshaka.util.StateHistory = class {\n  constructor() {\n    /**\n     * The state that we think is still the current change. It is \"open\" for\n     * updating.\n     *\n     * @private {?shaka.extern.StateChange}\n     */\n    this.open_ = null;\n\n    /**\n     * The stats that are \"closed\" for updating. The \"open\" state becomes closed\n     * once we move to a new state.\n     *\n     * @private {!Array.<shaka.extern.StateChange>}\n     */\n    this.closed_ = [];\n  }\n\n  /**\n   * @param {string} state\n   */\n  update(state) {\n    // |open_| will only be |null| when we first call |update|.\n    if (this.open_ == null) {\n      this.start_(state);\n    } else {\n      this.update_(state);\n    }\n  }\n\n  /**\n   * Go through all entries in the history and count how much time was spend in\n   * the given state.\n   *\n   * @param {string} state\n   * @return {number}\n   */\n  getTimeSpentIn(state) {\n    let sum = 0;\n\n    if (this.open_ && this.open_.state == state) {\n      sum += this.open_.duration;\n    }\n\n    for (const entry of this.closed_) {\n      sum += entry.state == state ? entry.duration : 0;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Get a copy of each state change entry in the history. A copy of each entry\n   * is created to break the reference to the internal data.\n   *\n   * @return {!Array.<shaka.extern.StateChange>}\n   */\n  getCopy() {\n    const clone = (entry) => {\n      return {\n        timestamp: entry.timestamp,\n        state: entry.state,\n        duration: entry.duration,\n      };\n    };\n\n    const copy = [];\n    for (const entry of this.closed_) {\n      copy.push(clone(entry));\n    }\n    if (this.open_) {\n      copy.push(clone(this.open_));\n    }\n\n    return copy;\n  }\n\n  /**\n   * @param {string} state\n   * @private\n   */\n  start_(state) {\n    goog.asserts.assert(\n        this.open_ == null,\n        'There must be no open entry in order when we start');\n\n    this.open_ = {\n      timestamp: this.getNowInSeconds_(),\n      state: state,\n      duration: 0,\n    };\n  }\n\n  /**\n   * @param {string} state\n   * @private\n   */\n  update_(state) {\n    goog.asserts.assert(\n        this.open_,\n        'There must be an open entry in order to update it');\n\n    const currentTimeSeconds = this.getNowInSeconds_();\n\n    // Always update the duration so that it can always be as accurate as\n    // possible.\n    this.open_.duration = currentTimeSeconds - this.open_.timestamp;\n\n    // If the state has not changed, there is no need to add a new entry.\n    if (this.open_.state == state) {\n      return;\n    }\n\n    // We have changed states, so \"close\" the open state.\n    this.closed_.push(this.open_);\n    this.open_ = {\n      timestamp: currentTimeSeconds,\n      state: state,\n      duration: 0,\n    };\n  }\n\n  /**\n   * Get the system time in seconds.\n   *\n   * @return {number}\n   * @private\n   */\n  getNowInSeconds_() {\n    return Date.now() / 1000;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.SwitchHistory');\n\n\n/**\n * This class is used to track changes in variant and text selections. This\n * class will make sure that redundant switches are not recorded in the history.\n *\n * @final\n */\nshaka.util.SwitchHistory = class {\n  constructor() {\n    /** @private {?shaka.extern.Variant} */\n    this.currentVariant_ = null;\n\n    /** @private {?shaka.extern.Stream} */\n    this.currentText_ = null;\n\n    /** @private {!Array.<shaka.extern.TrackChoice>} */\n    this.history_ = [];\n  }\n\n  /**\n   * Update the history to show that we are currently playing |newVariant|. If\n   * we are already playing |newVariant|, this update will be ignored.\n   *\n   * @param {shaka.extern.Variant} newVariant\n   * @param {boolean} fromAdaptation\n   */\n  updateCurrentVariant(newVariant, fromAdaptation) {\n    if (this.currentVariant_ == newVariant) { return; }\n\n    this.currentVariant_ = newVariant;\n    this.history_.push({\n      timestamp: this.getNowInSeconds_(),\n      id: newVariant.id,\n      type: 'variant',\n      fromAdaptation: fromAdaptation,\n      bandwidth: newVariant.bandwidth,\n    });\n  }\n\n  /**\n   * Update the history to show that we are currently playing |newText|. If we\n   * are already playing |newText|, this update will be ignored.\n   *\n   * @param {shaka.extern.Stream} newText\n   * @param {boolean} fromAdaptation\n   */\n  updateCurrentText(newText, fromAdaptation) {\n    if (this.currentText_ == newText) { return; }\n\n    this.currentText_ = newText;\n    this.history_.push({\n      timestamp: this.getNowInSeconds_(),\n      id: newText.id,\n      type: 'text',\n      fromAdaptation: fromAdaptation,\n      bandwidth: null,\n    });\n  }\n\n  /**\n   * Get a copy of the switch history. This will make sure to expose no internal\n   * references.\n   *\n   * @return {!Array.<shaka.extern.TrackChoice>}\n   */\n  getCopy() {\n    const copy = [];\n\n    for (const entry of this.history_) {\n      copy.push(this.clone_(entry));\n    }\n\n    return copy;\n  }\n\n  /**\n   * Get the system time in seconds.\n   *\n   * @return {number}\n   * @private\n   */\n  getNowInSeconds_() {\n    return Date.now() / 1000;\n  }\n\n  /**\n   * @param {shaka.extern.TrackChoice} entry\n   * @return {shaka.extern.TrackChoice}\n   * @private\n   */\n  clone_(entry) {\n    return {\n      timestamp: entry.timestamp,\n      id: entry.id,\n      type: entry.type,\n      fromAdaptation: entry.fromAdaptation,\n      bandwidth: entry.bandwidth,\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Stats');\n\ngoog.require('shaka.util.StateHistory');\ngoog.require('shaka.util.SwitchHistory');\n\n\n/**\n * This class tracks all the various components (some optional) that are used to\n * populate |shaka.extern.Stats| which is passed to the app.\n *\n * @final\n */\nshaka.util.Stats = class {\n  constructor() {\n    /** @private {number} */\n    this.width_ = NaN;\n    /** @private {number} */\n    this.height_ = NaN;\n\n    /** @private {number} */\n    this.totalDroppedFrames_ = NaN;\n    /** @private {number} */\n    this.totalDecodedFrames_ = NaN;\n\n    /** @private {number} */\n    this.loadLatencySeconds_ = NaN;\n\n    /** @private {number} */\n    this.variantBandwidth_ = NaN;\n    /** @private {number} */\n    this.bandwidthEstimate_ = NaN;\n\n    /** @private {!shaka.util.StateHistory} */\n    this.stateHistory_ = new shaka.util.StateHistory();\n\n    /** @private {!shaka.util.SwitchHistory} */\n    this.switchHistory_ = new shaka.util.SwitchHistory();\n  }\n\n  /**\n   * Update the ratio of dropped frames to total frames. This will replace the\n   * previous values.\n   *\n   * @param {number} dropped\n   * @param {number} decoded\n   */\n  setDroppedFrames(dropped, decoded) {\n    this.totalDroppedFrames_ = dropped;\n    this.totalDecodedFrames_ = decoded;\n  }\n\n  /**\n   * Set the width and height of the video we are currently playing.\n   *\n   * @param {number} width\n   * @param {number} height\n   */\n  setResolution(width, height) {\n    this.width_ = width;\n    this.height_ = height;\n  }\n\n  /**\n   * Record the time it took between the user signalling \"I want to play this\"\n   * to \"I am now seeing this\".\n   *\n   * @param {number} seconds\n   */\n  setLoadLatency(seconds) {\n    this.loadLatencySeconds_ = seconds;\n  }\n\n  /**\n   * @param {number} bandwidth\n   */\n  setVariantBandwidth(bandwidth) {\n    this.variantBandwidth_ = bandwidth;\n  }\n\n  /**\n   * @param {number} bandwidth\n   */\n  setBandwidthEstimate(bandwidth) {\n    this.bandwidthEstimate_ = bandwidth;\n  }\n\n  /**\n   * @return {!shaka.util.StateHistory}\n   */\n  getStateHistory() {\n    return this.stateHistory_;\n  }\n\n  /**\n   * @return {!shaka.util.SwitchHistory}\n   */\n  getSwitchHistory() {\n    return this.switchHistory_;\n  }\n\n  /**\n   * Create a stats blob that we can pass up to the app. This blob will not\n   * reference any internal data.\n   *\n   * @return {shaka.extern.Stats}\n   */\n  getBlob() {\n    return {\n      width: this.width_,\n      height: this.height_,\n      streamBandwidth: this.variantBandwidth_,\n      decodedFrames: this.totalDecodedFrames_,\n      droppedFrames: this.totalDroppedFrames_,\n      estimatedBandwidth: this.bandwidthEstimate_,\n      loadLatency: this.loadLatencySeconds_,\n      playTime: this.stateHistory_.getTimeSpentIn('playing'),\n      pauseTime: this.stateHistory_.getTimeSpentIn('paused'),\n      bufferingTime: this.stateHistory_.getTimeSpentIn('buffering'),\n      stateHistory: this.stateHistory_.getCopy(),\n      switchHistory: this.switchHistory_.getCopy(),\n    };\n  }\n\n  /**\n   * Create an empty stats blob. This resembles the stats when we are not\n   * playing any content.\n   *\n   * @return {shaka.extern.Stats}\n   */\n  static getEmptyBlob() {\n    return {\n      width: NaN,\n      height: NaN,\n      streamBandwidth: NaN,\n      decodedFrames: NaN,\n      droppedFrames: NaN,\n      estimatedBandwidth: NaN,\n      loadLatency: NaN,\n      playTime: NaN,\n      pauseTime: NaN,\n      bufferingTime: NaN,\n      switchHistory: [],\n      stateHistory: [],\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StoredContentUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.offline.ManifestConverter');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * A utility class used to create |shaka.extern.StoredContent| from different\n * types of input.\n */\nshaka.offline.StoredContentUtils = class {\n  /**\n   * @param {string} originalUri\n   * @param {shaka.extern.Manifest} manifest\n   * @param {number} size\n   * @param {!Object} metadata\n   * @return {shaka.extern.StoredContent}\n   */\n  static fromManifest(originalUri, manifest, size, metadata) {\n    goog.asserts.assert(\n        manifest.periods.length,\n        'Cannot create stored content from manifest with no periods.');\n\n    /** @type {number} */\n    let expiration = manifest.expiration == undefined ?\n                     Infinity :\n                     manifest.expiration;\n\n    /** @type {number} */\n    let duration = manifest.presentationTimeline.getDuration();\n\n    /** @type {shaka.extern.Period} */\n    let firstPeriod = manifest.periods[0];\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let tracks = shaka.offline.StoredContentUtils.getTracks_(firstPeriod);\n\n    /** @type {shaka.extern.StoredContent} */\n    let content = {\n      offlineUri: null,\n      originalManifestUri: originalUri,\n      duration: duration,\n      size: size,\n      expiration: expiration,\n      tracks: tracks,\n      appMetadata: metadata,\n    };\n\n    return content;\n  }\n\n\n  /**\n   * @param {!shaka.offline.OfflineUri} offlineUri\n   * @param {shaka.extern.ManifestDB} manifestDB\n   * @return {shaka.extern.StoredContent}\n   */\n  static fromManifestDB(offlineUri, manifestDB) {\n    goog.asserts.assert(\n        manifestDB.periods.length,\n        'Cannot create stored content from manifestDB with no periods.');\n\n    let converter = new shaka.offline.ManifestConverter(\n        offlineUri.mechanism(), offlineUri.cell());\n\n    /** @type {shaka.extern.PeriodDB} */\n    let firstPeriodDB = manifestDB.periods[0];\n    /** @type {!shaka.media.PresentationTimeline} */\n    let timeline = new shaka.media.PresentationTimeline(null, 0);\n\n\n    /** @type {shaka.extern.Period} */\n    let firstPeriod = converter.fromPeriodDB(firstPeriodDB, timeline);\n\n    /** @type {!Object} */\n    let metadata = manifestDB.appMetadata || {};\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let tracks = shaka.offline.StoredContentUtils.getTracks_(firstPeriod);\n\n    /** @type {shaka.extern.StoredContent} */\n    let content = {\n      offlineUri: offlineUri.toString(),\n      originalManifestUri: manifestDB.originalManifestUri,\n      duration: manifestDB.duration,\n      size: manifestDB.size,\n      expiration: manifestDB.expiration,\n      tracks: tracks,\n      appMetadata: metadata,\n    };\n\n    return content;\n  }\n\n\n  /**\n   * Gets track representations of all playable variants and all text streams.\n   *\n   * @param {shaka.extern.Period} period\n   * @return {!Array.<shaka.extern.Track>}\n   * @private\n   */\n  static getTracks_(period) {\n    const StreamUtils = shaka.util.StreamUtils;\n\n    const tracks = [];\n\n    const variants = StreamUtils.getPlayableVariants(period.variants);\n    for (const variant of variants) {\n      tracks.push(StreamUtils.variantToTrack(variant));\n    }\n\n    const textStreams = period.textStreams;\n    for (const stream of textStreams) {\n      tracks.push(StreamUtils.textStreamToTrack(stream));\n    }\n\n    return tracks;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StreamBandwidthEstimator');\n\ngoog.require('shaka.log');\n\n\n/**\n * A utility class to help estimate the size of streams based on stream and\n * variant bandwidths. This class's main purpose is to isolate the logic in\n * creating non-zero bandwidth estimates for all streams so that each stream\n * will have some influence over the progress of the download.\n */\nshaka.offline.StreamBandwidthEstimator = class {\n  constructor() {\n    /** @private {!Object.<number, number>} */\n    this.estimateByStreamId_ = {};\n  }\n\n  /**\n   * Add a new variant to the estimator. This will update the estimates for all\n   * streams in the variant.\n   *\n   * @param {shaka.extern.Variant} variant\n   */\n  addVariant(variant) {\n    // Three cases:\n    //  1 - Only Audio\n    //  2 - Only Video\n    //  3 - Audio and Video\n\n    let audio = variant.audio;\n    let video = variant.video;\n\n    // Case 1\n    if (audio && !video) {\n      let audioBitRate = audio.bandwidth || variant.bandwidth;\n      this.setBitrate_(audio.id, audioBitRate);\n    }\n\n    // Case 2\n    if (!audio && video) {\n      let videoBitRate = video.bandwidth || variant.bandwidth;\n      this.setBitrate_(video.id, videoBitRate);\n    }\n\n    // Case 3\n    if (audio && video) {\n      // Get the audio's bandwidth. If it is missing, default to our default\n      // audio bandwidth.\n      let audioBitRate =\n          audio.bandwidth ||\n          shaka.offline.StreamBandwidthEstimator.DEFAULT_AUDIO_BITRATE_;\n\n      // Get the video's bandwidth. If it is missing, use the variant bandwidth\n      // less the audio. If we get a negative bit rate, fall back to our\n      // default video bandwidth.\n      let videoBitRate = video.bandwidth || (variant.bandwidth - audioBitRate);\n      if (videoBitRate <= 0) {\n        shaka.log.warning(\n            'Audio bit rate consumes variants bandwidth. Setting video ' +\n            'bandwidth to match variant\\'s bandwidth.');\n        videoBitRate = variant.bandwidth;\n      }\n\n      this.setBitrate_(audio.id, audioBitRate);\n      this.setBitrate_(video.id, videoBitRate);\n    }\n  }\n\n  /**\n   * @param {number} stream\n   * @param {number} bitRate\n   * @private\n   */\n  setBitrate_(stream, bitRate) {\n    this.estimateByStreamId_[stream] = bitRate;\n  }\n\n  /**\n   * Create an estimate for the text stream.\n   *\n   * @param {shaka.extern.Stream} text\n   */\n  addText(text) {\n    this.estimateByStreamId_[text.id] =\n        shaka.offline.StreamBandwidthEstimator.DEFAULT_TEXT_BITRATE_;\n  }\n\n  /**\n   * Get the estimate for a segment that is part of a stream that has already\n   * added to the estimator.\n   *\n   * @param {number} id\n   * @param {!shaka.media.SegmentReference} segment\n   * @return {number}\n   */\n  getSegmentEstimate(id, segment) {\n    let duration = segment.endTime - segment.startTime;\n    return this.getEstimate_(id) * duration;\n  }\n\n  /**\n   * Get the estimate for an init segment for a stream that has already\n   * added to the estimator.\n   *\n   * @param {number} id\n   * @return {number}\n   */\n  getInitSegmentEstimate(id) {\n    // Assume that the init segment is worth approximately half a second of\n    // content.\n    let duration = 0.5;\n    return this.getEstimate_(id) * duration;\n  }\n\n  /**\n   * @param {number} id\n   * @return {number}\n   * @private\n   */\n  getEstimate_(id) {\n    let bitRate = this.estimateByStreamId_[id];\n\n    if (bitRate == null) {\n      bitRate = 0;\n      shaka.log.error(\n          'Asking for bitrate of stream not given to the estimator');\n    }\n\n    if (bitRate == 0) {\n      shaka.log.warning(\n          'Using bitrate of 0, this stream won\\'t affect progress');\n    }\n\n    return bitRate;\n  }\n};\n\n\n/**\n * Since audio bandwidth does not vary much, we are going to use a constant\n * approximation for audio bit rate allowing use to more accurately guess at\n * the video bitrate.\n *\n * YouTube's suggested bitrate for stereo audio is 384 kbps so we are going to\n * assume that: https://support.google.com/youtube/answer/1722171?hl=en\n *\n * @const {number}\n * @private\n */\nshaka.offline.StreamBandwidthEstimator.DEFAULT_AUDIO_BITRATE_ = 393216;\n\n\n/**\n * Since we don't normally get the bitrate for text, we still want to create\n * some approximation so that it can influence progress. This will use the\n * bitrate from \"Tears of Steal\" to give some kind of data-driven result.\n *\n * The file size for English subtitles is 4.7 KB. The video is 12:14 long,\n * which means that the text's bit rate is around 52 bps.\n *\n * @const {number}\n * @private\n */\nshaka.offline.StreamBandwidthEstimator.DEFAULT_TEXT_BITRATE_ = 52;\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Destroyer');\n\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A utility class to help work with |shaka.util.IDestroyable| objects.\n *\n * @final\n */\nshaka.util.Destroyer = class {\n  /**\n   * @param {function():!Promise} callback\n   *    A callback to destroy an object. This callback will only be called once\n   *    regardless of how many times |destroy| is called.\n   */\n  constructor(callback) {\n    /** @private {boolean} */\n    this.destroyed_ = false;\n\n    /** @private {!shaka.util.PublicPromise} */\n    this.waitOnDestroy_ = new shaka.util.PublicPromise();\n\n    /** @private {function():!Promise} */\n    this.onDestroy_ = callback;\n  }\n\n  /**\n   * Check if |destroy| has been called. This returning |true| does not mean\n   * that the promise returned by |destroy| has resolved yet.\n   *\n   * @return {boolean}\n   * @final\n   */\n  destroyed() {\n    return this.destroyed_;\n  }\n\n  /**\n   * Request that the destroy callback be called. Will return a promise that\n   * will resolve once the callback terminates. The promise will never be\n   * rejected.\n   *\n   * @return {!Promise}\n   * @final\n   */\n  destroy() {\n    if (this.destroyed_) {\n      return this.waitOnDestroy_;\n    }\n\n    // We have started destroying this object, so we should never get here\n    // again.\n    this.destroyed_ = true;\n\n    return this.onDestroy_().then(\n        () => { this.waitOnDestroy_.resolve(); },\n        () => { this.waitOnDestroy_.resolve(); });\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ManifestFilter');\n\ngoog.require('goog.asserts');\n\n\n/**\n * This utility class contains all the functions used to filter manifests\n * before playback and before storage.\n */\nshaka.util.ManifestFilter = class {\n  /**\n   * Filter the variants in |manifest| to only include the variants that meet\n   * the given restrictions.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {shaka.extern.Restrictions} restrictions\n   * @param {{width: number, height:number}} maxHwResolution\n   */\n  static filterByRestrictions(manifest, restrictions, maxHwResolution) {\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        return shaka.util.StreamUtils.meetsRestrictions(\n            variant, restrictions, maxHwResolution);\n      });\n    }\n  }\n\n\n  /**\n   * Filter the variants in the |manifest| to only include those that are\n   * supported by media source.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   */\n  static filterByMediaSourceSupport(manifest) {\n    const MediaSourceEngine = shaka.media.MediaSourceEngine;\n\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        let supported = true;\n        if (variant.audio) {\n          supported =\n              supported && MediaSourceEngine.isStreamSupported(variant.audio);\n        }\n        if (variant.video) {\n          supported =\n              supported && MediaSourceEngine.isStreamSupported(variant.video);\n        }\n        return supported;\n      });\n    }\n  }\n\n  /**\n   * Filter the variants in |manifest| to only include those that are supported\n   * by |drm|.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {!shaka.media.DrmEngine} drmEngine\n   */\n  static filterByDrmSupport(manifest, drmEngine) {\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        return drmEngine.supportsVariant(variant);\n      });\n    }\n  }\n\n  /**\n   * Filter the variants in |manifest| to only include those that use codecs\n   * that will be supported in each variant. This ensures playback from the\n   * first period to the last period by \"jumping between\" compatible variants.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   */\n  static filterByCommonCodecs(manifest) {\n    goog.asserts.assert(manifest.periods.length > 0,\n                        'There should be at least be one period');\n\n    const ManifestFilter = shaka.util.ManifestFilter;\n\n    // Create a set of summaries that occur in each period.\n    /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n    const common = new shaka.util.ManifestFilter.VariantCodecSummarySet();\n\n    manifest.periods.forEach((period, index) => {\n      /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n      const next = ManifestFilter.VariantCodecSummarySet.fromVariants(\n          period.variants);\n\n      if (index == 0) {\n        common.includeAll(next);\n      } else {\n        common.onlyKeep(next);\n      }\n    });\n\n    // Filter the variants in the period by whether they match a summary that\n    // occurs in every period.\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        const summary = new ManifestFilter.VariantCodecSummary(variant);\n        return common.contains(summary);\n      });\n    }\n  }\n\n  /**\n   * Go through each period and apply the filter to the set of variants.\n   * |filter| will only be given the set of variants in the current period that\n   * are compatible with at least one variant in the previous period.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {function(shaka.extern.Period)} filter\n   */\n  static rollingFilter(manifest, filter) {\n    const ManifestFilter = shaka.util.ManifestFilter;\n\n    // Store a reference to the variants so that the next period can easily\n    // reference them too.\n    /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n    let previous = new ManifestFilter.VariantCodecSummarySet();\n\n    manifest.periods.forEach((period, index) => {\n      // Remove all variants that don't have a compatible variant in the\n      // previous period. If we were to only use the first variant, we would\n      // risk a variant being removed from a later period that would break that\n      // path across all periods.\n      if (index > 0) {\n        period.variants = period.variants.filter((variant) => {\n          const summary = new ManifestFilter.VariantCodecSummary(variant);\n          return previous.contains(summary);\n        });\n      }\n\n      filter(period);\n\n      // Use the results of filtering this period as the \"previous\" for the\n      // next period.\n      previous =\n          ManifestFilter.VariantCodecSummarySet.fromVariants(period.variants);\n    });\n  }\n};\n\n\n/**\n * The variant codec summary is a summary of the codec information for a given\n * codec. This can be used to test the compatibility between variants by\n * checking that their summaries contain the same information.\n *\n * @final\n */\nshaka.util.ManifestFilter.VariantCodecSummary = class {\n  /**\n   * @param {shaka.extern.Variant} variant\n   */\n  constructor(variant) {\n    // We summarize a variant based on the basic mime type and the basic\n    // codec because they must match for two variants to be compatible. For\n    // example, we can't adapt between WebM and MP4, nor can we adapt between\n    // mp4a.* to ec-3.\n\n    const audio = variant.audio;\n    const video = variant.video;\n\n    /** @private {?string} */\n    this.audioMime_ = audio ? audio.mimeType : null;\n    /** @private {?string} */\n    this.audioCodec_ = audio ? audio.codecs.split('.')[0] : null;\n    /** @private {?string} */\n    this.videoMime_ = video ? video.mimeType : null;\n    /** @private {?string} */\n    this.videoCodec_ = video ? video.codecs.split('.')[0] : null;\n  }\n\n  /**\n   * Check if this summaries is equal to another.\n   *\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} other\n   * @return {boolean}\n   */\n  equals(other) {\n    return this.audioMime_ == other.audioMime_ &&\n           this.audioCodec_ == other.audioCodec_ &&\n           this.videoMime_ == other.videoMime_ &&\n           this.videoCodec_ == other.videoCodec_;\n  }\n};\n\n\n/**\n * @final\n */\nshaka.util.ManifestFilter.VariantCodecSummarySet = class {\n  constructor() {\n    /** @private {!Array.<!shaka.util.ManifestFilter.VariantCodecSummary>} */\n    this.all_ = [];\n  }\n\n  /**\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} summary\n   */\n  add(summary) {\n    if (!this.contains(summary)) {\n      this.all_.push(summary);\n    }\n  }\n\n  /**\n   * Add all items from |other| to |this|.\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummarySet} other\n   */\n  includeAll(other) {\n    for (const item of other.all_) {\n      this.add(item);\n    }\n  }\n\n  /**\n   * Remove all items from |this| that are not in |other|.\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummarySet} other\n   */\n  onlyKeep(other) {\n    this.all_ = this.all_.filter((x) => other.contains(x));\n  }\n\n  /**\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} summary\n   * @return {boolean}\n   */\n  contains(summary) {\n    return this.all_.some((x) => summary.equals(x));\n  }\n\n  /**\n   * Create a set of variant codec summaries for a list of variants. The set\n   * may have fewer elements than the list if there are variants with similar\n   * codecs.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @return {!shaka.util.ManifestFilter.VariantCodecSummarySet}\n   */\n  static fromVariants(variants) {\n    const set = new shaka.util.ManifestFilter.VariantCodecSummarySet();\n    for (const variant of variants) {\n      set.add(new shaka.util.ManifestFilter.VariantCodecSummary(variant));\n    }\n    return set;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.Storage');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.Deprecate');\ngoog.require('shaka.Player');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.offline.DownloadManager');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.SessionDeleter');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.offline.StoredContentUtils');\ngoog.require('shaka.offline.StreamBandwidthEstimator');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestFilter');\ngoog.require('shaka.util.Networking');\ngoog.require('shaka.util.Periods');\ngoog.require('shaka.util.Platform');\ngoog.require('shaka.util.PlayerConfiguration');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * This manages persistent offline data including storage, listing, and deleting\n * stored manifests.  Playback of offline manifests are done through the Player\n * using a special URI (see shaka.offline.OfflineUri).\n *\n * First, check support() to see if offline is supported by the platform.\n * Second, configure() the storage object with callbacks to your application.\n * Third, call store(), remove(), or list() as needed.\n * When done, call destroy().\n *\n * @param {!shaka.Player=} player\n *    A player instance to share a networking engine and configuration with.\n *    When initializing with a player, storage is only valid as long as\n *    |destroy| has not been called on the player instance. When omitted,\n *    storage will manage its own networking engine and configuration.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n * @export\n */\nshaka.offline.Storage = function(player) {\n  // It is an easy mistake to make to pass a Player proxy from CastProxy.\n  // Rather than throw a vague exception later, throw an explicit and clear one\n  // now.\n  //\n  // TODO(vaage): After we decide whether or not we want to support\n  //  initializing storage with a player proxy, we should either remove\n  //  this error or rename the error.\n  if (player && player.constructor != shaka.Player) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.LOCAL_PLAYER_INSTANCE_REQUIRED);\n  }\n\n  /** @private {?shaka.extern.PlayerConfiguration} */\n  this.config_ = null;\n\n  /** @private {shaka.net.NetworkingEngine} */\n  this.networkingEngine_ = null;\n\n  // Initialize |config_| and |networkingEngine_| based on whether or not\n  // we were given a player instance.\n  if (player) {\n    this.config_ = player.getSharedConfiguration();\n    this.networkingEngine_ = player.getNetworkingEngine();\n\n    goog.asserts.assert(\n        this.networkingEngine_,\n        'Storage should not be initialized with a player that had |destroy| ' +\n            'called on it.');\n  } else {\n    this.config_ = shaka.util.PlayerConfiguration.createDefault();\n    this.networkingEngine_ = new shaka.net.NetworkingEngine();\n  }\n\n  /** @private {boolean} */\n  this.storeInProgress_ = false;\n\n  /**\n   * A list of segment ids for all the segments that were added during the\n   * current store. If the store fails or is aborted, these need to be\n   * removed from storage.\n   * @private {!Array.<number>}\n   */\n  this.segmentsFromStore_ = [];\n\n  /**\n   * A list of open operations that are being performed by this instance of\n   * |shaka.offline.Storage|.\n   *\n   * @private {!Array.<!Promise>}\n   */\n  this.openOperations_ = [];\n\n  /**\n   * Storage should only destroy the networking engine if it was initialized\n   * without a player instance. Store this as a flag here to avoid including\n   * the player object in the destoyer's closure.\n   *\n   * @type {boolean}\n   */\n  const destroyNetworkingEngine = !player;\n\n  /** @private {!shaka.util.Destroyer} */\n  this.destroyer_ = new shaka.util.Destroyer(async () => {\n    // Wait for all the open operations to end. Wrap each operations so that a\n    // single rejected promise won't cause |Promise.all| to return early or to\n    // return a rejected Promise.\n    const noop = () => {};\n    await Promise.all(this.openOperations_.map((op) => op.then(noop, noop)));\n\n    // Wait until after all the operations have finished before we destroy\n    // the networking engine to avoid any unexpected errors.\n    if (destroyNetworkingEngine) {\n      await this.networkingEngine_.destroy();\n    }\n\n    // Drop all references to internal objects to help with GC.\n    this.config_ = null;\n    this.networkingEngine_ = null;\n  });\n};\n\n\n/**\n * Gets whether offline storage is supported.  Returns true if offline storage\n * is supported for clear content.  Support for offline storage of encrypted\n * content will not be determined until storage is attempted.\n *\n * @return {boolean}\n * @export\n */\nshaka.offline.Storage.support = function() {\n  // Our Storage system is useless without MediaSource.  MediaSource allows us\n  // to pull data from anywhere (including our Storage system) and feed it to\n  // the video element.\n  if (!shaka.util.Platform.supportsMediaSource()) return false;\n\n  return shaka.offline.StorageMuxer.support();\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.offline.Storage.prototype.destroy = function() {\n  return this.destroyer_.destroy();\n};\n\n\n/**\n * Sets configuration values for Storage.  This is associated with\n * Player.configure and will change the player instance given at\n * initialization.\n *\n * @param {string|!Object} config This should either be a field name or an\n *   object following the form of {@link shaka.extern.PlayerConfiguration},\n *   where you may omit any field you do not wish to change.\n * @param {*=} value This should be provided if the previous parameter\n *   was a string field name.\n * @return {boolean}\n * @export\n */\nshaka.offline.Storage.prototype.configure = function(config, value) {\n  goog.asserts.assert(typeof(config) == 'object' || arguments.length == 2,\n                      'String configs should have values!');\n\n  // ('fieldName', value) format\n  if (arguments.length == 2 && typeof(config) == 'string') {\n    config = shaka.util.ConfigUtils.convertToConfigObject(config, value);\n  }\n\n  goog.asserts.assert(typeof(config) == 'object', 'Should be an object!');\n\n  shaka.offline.Storage.verifyConfig_(config);\n\n  goog.asserts.assert(\n      this.config_, 'Cannot reconfigure stroage after calling destroy.');\n  return shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_ /* destination */, config /* updates */);\n};\n\n\n/**\n * Return a copy of the current configuration.  Modifications of the returned\n * value will not affect the Storage instance's active configuration.  You must\n * call storage.configure() to make changes.\n *\n * @return {shaka.extern.PlayerConfiguration}\n * @export\n */\nshaka.offline.Storage.prototype.getConfiguration = function() {\n  goog.asserts.assert(this.config_, 'Config must not be null!');\n\n  let ret = shaka.util.PlayerConfiguration.createDefault();\n  shaka.util.PlayerConfiguration.mergeConfigObjects(\n      ret, this.config_, shaka.util.PlayerConfiguration.createDefault());\n  return ret;\n};\n\n\n/**\n * Return the networking engine that storage is using. If storage was\n * initialized with a player instance, then the networking engine returned\n * will be the same as |player.getNetworkingEngine()|.\n *\n * The returned value will only be null if |destroy| was called before\n * |getNetworkingEngine|.\n *\n * @return {shaka.net.NetworkingEngine}\n * @export\n */\nshaka.offline.Storage.prototype.getNetworkingEngine = function() {\n  return this.networkingEngine_;\n};\n\n\n/**\n * Stores the given manifest.  If the content is encrypted, and encrypted\n * content cannot be stored on this platform, the Promise will be rejected with\n * error code 6001, REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE.\n *\n * @param {string} uri The URI of the manifest to store.\n * @param {!Object=} appMetadata An arbitrary object from the application\n *   that will be stored along-side the offline content.  Use this for any\n *   application-specific metadata you need associated with the stored content.\n *   For details on the data types that can be stored here, please refer to\n *   {@link https://bit.ly/StructClone}\n * @param {string|shaka.extern.ManifestParser.Factory=} mimeType\n *   The mime type for the content |manifestUri| points to or a manifest parser\n *   factory to override auto-detection or use an unregistered parser. Passing\n *   a manifest parser factory is deprecated and will be removed.\n * @return {!Promise.<shaka.extern.StoredContent>}  A Promise to a structure\n *   representing what was stored.  The \"offlineUri\" member is the URI that\n *   should be given to Player.load() to play this piece of content offline.\n *   The \"appMetadata\" member is the appMetadata argument you passed to store().\n * @export\n */\nshaka.offline.Storage.prototype.store = function(uri, appMetadata, mimeType) {\n  const getParser = async () => {\n    if (mimeType && typeof mimeType != 'string') {\n        shaka.Deprecate.deprecateFeature(\n            2, 6,\n            'Storing with a manifest parser factory',\n            'Please register a manifest parser and for the mime-type.');\n\n      const Factory =\n          /** @type {shaka.extern.ManifestParser.Factory} */(mimeType);\n      return new Factory();\n    }\n\n    goog.asserts.assert(\n        this.networkingEngine_, 'Should not call |store| after |destroy|');\n\n    const parser = await shaka.media.ManifestParser.create(\n        uri,\n        this.networkingEngine_,\n        this.config_.manifest.retryParameters,\n        /** @type {?string} */ (mimeType));\n\n    return parser;\n  };\n\n  return this.startOperation_(this.store_(uri, appMetadata || {}, getParser));\n};\n\n\n/**\n * Returns true if an asset is currently downloading.\n *\n * @return {boolean}\n * @export\n */\nshaka.offline.Storage.prototype.getStoreInProgress = function() {\n  return this.storeInProgress_;\n};\n\n\n/**\n * See |shaka.offline.Storage.store| for details.\n *\n * @param {string} uri\n * @param {!Object} appMetadata\n * @param {function():!Promise.<shaka.extern.ManifestParser>} getParser\n * @return {!Promise.<shaka.extern.StoredContent>}\n * @private\n */\nshaka.offline.Storage.prototype.store_ = async function(\n    uri, appMetadata, getParser) {\n  // TODO: Create a way for a download to be canceled while being downloaded.\n  this.requireSupport_();\n\n  if (this.storeInProgress_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.STORE_ALREADY_IN_PROGRESS));\n  }\n  this.storeInProgress_ = true;\n\n  const manifest = await this.parseManifest(uri, getParser);\n\n  // Check if we were asked to destroy ourselves while we were \"away\"\n  // downloading the manifest.\n  this.checkDestroyed_();\n\n  // Check if we can even download this type of manifest before trying to\n  // create the drm engine.\n  const canDownload = !manifest.presentationTimeline.isLive() &&\n                      !manifest.presentationTimeline.isInProgress();\n  if (!canDownload) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.CANNOT_STORE_LIVE_OFFLINE,\n        uri);\n  }\n\n\n  // Since we will need to use |drmEngine|, |activeHandle|, and |muxer| in the\n  // catch/finally blocks, we need to define them out here. Since they may not\n  // get initialized when we enter the catch/finally block, we need to assume\n  // that they may be null/undefined when we get there.\n  /** @type {?shaka.media.DrmEngine} */\n  let drmEngine = null;\n  /** @type {shaka.offline.StorageMuxer} */\n  let muxer = new shaka.offline.StorageMuxer();\n  /** @type {?shaka.offline.StorageCellHandle} */\n  let activeHandle = null;\n\n  // This will be used to store any errors from drm engine. Whenever drm engine\n  // is passed to another function to do work, we should check if this was\n  // set.\n  let drmError = null;\n\n  try {\n    drmEngine = await this.createDrmEngine(\n        manifest,\n        (e) => { drmError = drmError || e; });\n\n    // We could have been asked to destroy ourselves while we were \"away\"\n    // creating the drm engine.\n    this.checkDestroyed_();\n    if (drmError) { throw drmError; }\n\n    this.filterManifest_(manifest, drmEngine);\n\n    await muxer.init();\n    this.checkDestroyed_();\n\n    // Get the cell that we are saving the manifest to. Once we get a cell\n    // we will only reference the cell and not the muxer so that the manifest\n    // and segments will all be saved to the same cell.\n    activeHandle = await muxer.getActive();\n    this.checkDestroyed_();\n\n    goog.asserts.assert(drmEngine, 'drmEngine should be non-null here.');\n\n    const manifestDB = await this.downloadManifest_(\n        activeHandle.cell, drmEngine, manifest, uri, appMetadata);\n    this.checkDestroyed_();\n    if (drmError) { throw drmError; }\n\n    const ids = await activeHandle.cell.addManifests([manifestDB]);\n    this.checkDestroyed_();\n\n    const offlineUri = shaka.offline.OfflineUri.manifest(\n        activeHandle.path.mechanism, activeHandle.path.cell, ids[0]);\n\n    return shaka.offline.StoredContentUtils.fromManifestDB(\n        offlineUri, manifestDB);\n  } catch (e) {\n    // If we did start saving some data, we need to remove it all to avoid\n    // wasting storage. However if the muxer did not manage to initialize, then\n    // we won't have an active cell to remove the segments from.\n    if (activeHandle) {\n      await activeHandle.cell.removeSegments(this.segmentsFromStore_, () => {});\n    }\n\n    // If we already had an error, ignore this error to avoid hiding\n    // the original error.\n    throw drmError || e;\n  } finally {\n    this.storeInProgress_ = false;\n    this.segmentsFromStore_ = [];\n\n    await muxer.destroy();\n    if (drmEngine) {\n      await drmEngine.destroy();\n    }\n  }\n};\n\n\n/**\n * Filter |manifest| such that it will only contain the variants and text\n * streams that we want to store and can actually play.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {!shaka.media.DrmEngine} drmEngine\n * @private\n */\nshaka.offline.Storage.prototype.filterManifest_ = function(\n    manifest, drmEngine) {\n  // Filter the manifest based on the restrictions given in the player\n  // configuration.\n  const maxHwRes = {width: Infinity, height: Infinity};\n  shaka.util.ManifestFilter.filterByRestrictions(\n      manifest, this.config_.restrictions, maxHwRes);\n\n  // Filter the manifest based on what we know media source will be able to\n  // play later (no point storing something we can't play).\n  shaka.util.ManifestFilter.filterByMediaSourceSupport(manifest);\n\n  // Filter the manifest based on what we know our drm system will support\n  // playing later.\n  shaka.util.ManifestFilter.filterByDrmSupport(manifest, drmEngine);\n\n  // Filter the manifest so that it will only use codecs that are available in\n  // all periods.\n  shaka.util.ManifestFilter.filterByCommonCodecs(manifest);\n\n  // Filter each variant based on what the app says they want to store. The app\n  // will only be given variants that are compatible with all previous\n  // post-filtered periods.\n  shaka.util.ManifestFilter.rollingFilter(manifest, (period) => {\n    const StreamUtils = shaka.util.StreamUtils;\n    const allTracks = [];\n\n    for (const variant of period.variants) {\n      goog.asserts.assert(\n          StreamUtils.isPlayable(variant),\n          'We should have already filtered by \"is playable\"');\n\n      allTracks.push(StreamUtils.variantToTrack(variant));\n    }\n\n    for (const text of period.textStreams) {\n      allTracks.push(StreamUtils.textStreamToTrack(text));\n    }\n\n    const chosenTracks = this.config_.offline.trackSelectionCallback(allTracks);\n\n    /** @type {!Set.<number>} */\n    const variantIds = new Set();\n    /** @type {!Set.<number>} */\n    const textIds = new Set();\n\n    for (const track of chosenTracks) {\n      if (track.type == 'variant') { variantIds.add(track.id); }\n      if (track.type == 'text') { textIds.add(track.id); }\n    }\n\n    period.variants =\n        period.variants.filter((variant) => variantIds.has(variant.id));\n    period.textStreams =\n        period.textStreams.filter((stream) => textIds.has(stream.id));\n  });\n\n  // Check the post-filtered manifest for characteristics that may indicate\n  // issues with how the app selected tracks.\n  shaka.offline.Storage.validateManifest_(manifest);\n};\n\n\n/**\n * Create a download manager and download the manifest.\n *\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {string} uri\n * @param {!Object} metadata\n * @return {!Promise.<shaka.extern.ManifestDB>}\n * @private\n */\nshaka.offline.Storage.prototype.downloadManifest_ = async function(\n    storage, drmEngine, manifest, uri, metadata) {\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Cannot call |downloadManifest_| after calling |destroy|.');\n\n  const pendingContent = shaka.offline.StoredContentUtils.fromManifest(\n      uri, manifest, /* size */ 0, metadata);\n\n  /** @type {!shaka.offline.DownloadManager} */\n  const downloader = new shaka.offline.DownloadManager(\n      this.networkingEngine_,\n      (progress, size) => {\n        // Update the size of the stored content before issuing a progress\n        // update.\n        pendingContent.size = size;\n        this.config_.offline.progressCallback(pendingContent, progress);\n      });\n\n  try {\n    const manifestDB = this.createOfflineManifest_(\n        downloader, storage, drmEngine, manifest, uri, metadata);\n\n    manifestDB.size = await downloader.waitToFinish();\n\n    return manifestDB;\n  } finally {\n    await downloader.destroy();\n  }\n};\n\n\n/**\n * Removes the given stored content.  This will also attempt to release the\n * licenses, if any.\n *\n * @param {string} contentUri\n * @return {!Promise}\n * @export\n */\nshaka.offline.Storage.prototype.remove = function(contentUri) {\n  return this.startOperation_(this.remove_(contentUri));\n};\n\n\n/**\n * See |shaka.offline.Storage.remove| for details.\n *\n * @param {string} contentUri\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.remove_ = async function(contentUri) {\n  this.requireSupport_();\n\n  const nullableUri = shaka.offline.OfflineUri.parse(contentUri);\n  if (nullableUri == null || !nullableUri.isManifest()) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        contentUri));\n  }\n\n  /** @type {!shaka.offline.OfflineUri} */\n  const uri = nullableUri;\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n\n  try {\n    await muxer.init();\n\n    const cell = await muxer.getCell(uri.mechanism(), uri.cell());\n    const manifests = await cell.getManifests([uri.key()]);\n    const manifest = manifests[0];\n\n    await Promise.all([\n      this.removeFromDRM_(uri, manifest, muxer),\n      this.removeFromStorage_(cell, uri, manifest),\n    ]);\n  } finally {\n    await muxer.destroy();\n  }\n};\n\n\n/**\n * @param {shaka.extern.ManifestDB} manifestDb\n * @param {boolean} isVideo\n * @return {!Array.<MediaKeySystemMediaCapability>}\n * @private\n */\nshaka.offline.Storage.getCapabilities_ = function(manifestDb, isVideo) {\n  const MimeUtils = shaka.util.MimeUtils;\n\n  const ret = [];\n  for (const period of manifestDb.periods) {\n    for (const stream of period.streams) {\n      if (isVideo && stream.contentType == 'video') {\n        ret.push({\n          contentType: MimeUtils.getFullType(stream.mimeType, stream.codecs),\n          robustness: manifestDb.drmInfo.videoRobustness,\n        });\n      } else if (!isVideo && stream.contentType == 'audio') {\n        ret.push({\n          contentType: MimeUtils.getFullType(stream.mimeType, stream.codecs),\n          robustness: manifestDb.drmInfo.audioRobustness,\n        });\n      }\n    }\n  }\n  return ret;\n};\n\n\n/**\n * @param {!shaka.offline.OfflineUri} uri\n * @param {shaka.extern.ManifestDB} manifestDb\n * @param {!shaka.offline.StorageMuxer} muxer\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.removeFromDRM_ = async function(\n    uri, manifestDb, muxer) {\n  goog.asserts.assert(this.networkingEngine_, 'Cannot be destroyed');\n  await shaka.offline.Storage.deleteLicenseFor_(\n      this.networkingEngine_, this.config_.drm, muxer, manifestDb);\n};\n\n\n/**\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.offline.OfflineUri} uri\n * @param {shaka.extern.ManifestDB} manifest\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.removeFromStorage_ = function(\n    storage, uri, manifest) {\n  /** @type {!Array.<number>} */\n  let segmentIds = shaka.offline.Storage.getAllSegmentIds_(manifest);\n\n  // Count(segments) + Count(manifests)\n  let toRemove = segmentIds.length + 1;\n  let removed = 0;\n\n  let pendingContent = shaka.offline.StoredContentUtils.fromManifestDB(\n      uri, manifest);\n\n  let onRemove = (key) => {\n    removed += 1;\n    this.config_.offline.progressCallback(pendingContent, removed / toRemove);\n  };\n\n  return Promise.all([\n    storage.removeSegments(segmentIds, onRemove),\n    storage.removeManifests([uri.key()], onRemove),\n  ]);\n};\n\n\n/**\n * Removes any EME sessions that were not successfully removed before.  This\n * returns whether all the sessions were successfully removed.\n *\n * @return {!Promise.<boolean>}\n * @export\n */\nshaka.offline.Storage.prototype.removeEmeSessions = function() {\n  return this.startOperation_(this.removeEmeSessions_());\n};\n\n/**\n * @return {!Promise.<boolean>}\n * @private\n */\nshaka.offline.Storage.prototype.removeEmeSessions_ = async function() {\n  this.requireSupport_();\n\n  goog.asserts.assert(this.networkingEngine_, 'Cannot be destroyed');\n  const net = this.networkingEngine_;\n  const config = this.config_.drm;\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n  /** @type {!shaka.offline.SessionDeleter} */\n  const deleter = new shaka.offline.SessionDeleter();\n\n  let hasRemaining = false;\n\n  try {\n    await muxer.init();\n\n    /** @type {!Array.<shaka.extern.EmeSessionStorageCell>} */\n    const cells = [];\n    muxer.forEachEmeSessionCell((c) => cells.push(c));\n\n    // Run these sequentially to avoid creating too many DrmEngine instances\n    // and having multiple CDMs alive at once.  Some embedded platforms may\n    // not support that.\n    let p = Promise.resolve();\n\n    for (const sessionIdCell of cells) {\n      p = p.then(async () => {\n        const sessions = await sessionIdCell.getAll();\n        const deletedSessionIds = await deleter.delete(config, net, sessions);\n        await sessionIdCell.remove(deletedSessionIds);\n\n        if (deletedSessionIds.length != sessions.length) {\n          hasRemaining = true;\n        }\n      });\n    }\n\n    await p;\n  } finally {\n    await muxer.destroy();\n  }\n\n  return !hasRemaining;\n};\n\n\n/**\n * Lists all the stored content available.\n *\n * @return {!Promise.<!Array.<shaka.extern.StoredContent>>}  A Promise to an\n *   array of structures representing all stored content.  The \"offlineUri\"\n *   member of the structure is the URI that should be given to Player.load()\n *   to play this piece of content offline.  The \"appMetadata\" member is the\n *   appMetadata argument you passed to store().\n * @export\n */\nshaka.offline.Storage.prototype.list = function() {\n  return this.startOperation_(this.list_());\n};\n\n\n/**\n * See |shaka.offline.Storage.list| for details.\n *\n * @return {!Promise.<!Array.<shaka.extern.StoredContent>>}\n * @private\n */\nshaka.offline.Storage.prototype.list_ = async function() {\n  this.requireSupport_();\n\n  /** @type {!Array.<shaka.extern.StoredContent>} */\n  const result = [];\n\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n  try {\n    await muxer.init();\n\n    let p = Promise.resolve();\n    muxer.forEachCell((path, cell) => {\n      p = p.then(async () => {\n        const manifests = await cell.getAllManifests();\n\n        manifests.forEach((manifest, key) => {\n          const uri = shaka.offline.OfflineUri.manifest(\n              path.mechanism,\n              path.cell,\n              key);\n\n          const content = shaka.offline.StoredContentUtils.fromManifestDB(\n              uri,\n              manifest);\n\n          result.push(content);\n        });\n      });\n    });\n\n    await p;\n  } finally {\n    await muxer.destroy();\n  }\n\n  return result;\n};\n\n\n/**\n * This method is public so that it can be overridden in testing.\n *\n * @param {string} uri\n * @param {function():!Promise.<shaka.extern.ManifestParser>} getParser\n * @return {!Promise.<shaka.extern.Manifest>}\n */\nshaka.offline.Storage.prototype.parseManifest = async function(\n    uri, getParser) {\n  let error = null;\n\n  const networkingEngine = this.networkingEngine_;\n  goog.asserts.assert(networkingEngine, 'Should be initialized!');\n\n  /** @type {shaka.extern.ManifestParser.PlayerInterface} */\n  const playerInterface = {\n    networkingEngine: networkingEngine,\n\n    // Don't bother filtering now. We will do that later when we have all the\n    // information we need to filter.\n    filterAllPeriods: () => {},\n    filterNewPeriod: () => {},\n\n    onTimelineRegionAdded: () => {},\n    onEvent: () => {},\n\n    // Used to capture an error from the manifest parser. We will check the\n    // error before returning.\n    onError: (e) => {\n      error = e;\n    },\n  };\n\n  const parser = await getParser();\n  parser.configure(this.config_.manifest);\n\n  // We may have been destroyed while we were waiting on |getParser| to\n  // resolve.\n  this.checkDestroyed_();\n\n  try {\n    const manifest = await parser.start(uri, playerInterface);\n\n    // We may have been destroyed while we were waiting on |start| to\n    // resolve.\n    this.checkDestroyed_();\n\n    // Get all the streams that are used in the manifest.\n    const streams = shaka.offline.Storage.getStreamSet_(manifest);\n\n    // Wait for each stream to create their segment indexes.\n    await Promise.all(Array.from(streams).map((stream) => {\n      return stream.createSegmentIndex();\n    }));\n\n    // We may have been destroyed while we were waiting on |createSegmentIndex|\n    // to resolve for each stream.\n    this.checkDestroyed_();\n\n    // If we saw an error while parsing, surface the error.\n    if (error) {\n      throw error;\n    }\n\n    return manifest;\n  } finally {\n    await parser.stop();\n  }\n};\n\n\n/**\n * This method is public so that it can be override in testing.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {function(shaka.util.Error)} onError\n * @return {!Promise.<!shaka.media.DrmEngine>}\n */\nshaka.offline.Storage.prototype.createDrmEngine = async function(\n    manifest, onError) {\n  goog.asserts.assert(\n      this.networkingEngine_, 'Cannot call |createDrmEngine| after |destroy|');\n\n  /** @type {!shaka.media.DrmEngine} */\n  const drmEngine = new shaka.media.DrmEngine({\n    netEngine: this.networkingEngine_,\n    onError: onError,\n    onKeyStatus: () => {},\n    onExpirationUpdated: () => {},\n    onEvent: () => {},\n  });\n\n  const variants = shaka.util.Periods.getAllVariantsFrom(manifest.periods);\n\n  const config = this.config_;\n  drmEngine.configure(config.drm);\n  await drmEngine.initForStorage(variants, config.offline.usePersistentLicense);\n  await drmEngine.setServerCertificate();\n  await drmEngine.createOrLoad();\n\n  return drmEngine;\n};\n\n\n/**\n * Creates an offline 'manifest' for the real manifest.  This does not store the\n * segments yet, only adds them to the download manager through createPeriod_.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {string} originalManifestUri\n * @param {!Object} metadata\n * @return {shaka.extern.ManifestDB}\n * @private\n */\nshaka.offline.Storage.prototype.createOfflineManifest_ = function(\n    downloader, storage, drmEngine, manifest, originalManifestUri, metadata) {\n  let estimator = new shaka.offline.StreamBandwidthEstimator();\n\n  let periods = manifest.periods.map((period) => {\n    return this.createPeriod_(\n        downloader, storage, estimator, drmEngine, manifest, period);\n  });\n\n  let drmInfo = drmEngine.getDrmInfo();\n  let sessions = drmEngine.getSessionIds();\n\n  if (drmInfo && this.config_.offline.usePersistentLicense) {\n    if (!sessions.length) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.NO_INIT_DATA_FOR_OFFLINE, originalManifestUri);\n    }\n    // Don't store init data, since we have stored sessions.\n    drmInfo.initData = [];\n  }\n\n  return {\n    originalManifestUri: originalManifestUri,\n    duration: manifest.presentationTimeline.getDuration(),\n    size: 0,\n    expiration: drmEngine.getExpiration(),\n    periods: periods,\n    sessionIds: this.config_.offline.usePersistentLicense ? sessions : [],\n    drmInfo: drmInfo,\n    appMetadata: metadata,\n  };\n};\n\n\n/**\n * Converts a manifest Period to a database Period.  This will use the current\n * configuration to get the tracks to use, then it will search each segment\n * index and add all the segments to the download manager through createStream_.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {shaka.offline.StreamBandwidthEstimator} estimator\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Period} period\n * @return {shaka.extern.PeriodDB}\n * @private\n */\nshaka.offline.Storage.prototype.createPeriod_ = function(\n    downloader, storage, estimator, drmEngine, manifest, period) {\n  // Pass all variants and text streams to the estimator so that we can\n  // get the best estimate for each stream later.\n  manifest.periods.forEach((period) => {\n    period.variants.forEach((variant) => { estimator.addVariant(variant); });\n    period.textStreams.forEach((text) => { estimator.addText(text); });\n  });\n\n  // Find the streams we want to download and create a stream db instance\n  // for each of them.\n  const streamSet = shaka.offline.Storage.getStreamSet_(manifest);\n  const streamDBs = new Map();\n\n  for (const stream of streamSet) {\n    const streamDB = this.createStream_(\n        downloader, storage, estimator, manifest, period, stream);\n    streamDBs.set(stream.id, streamDB);\n  }\n\n  // Connect streams and variants together.\n  period.variants.forEach((variant) => {\n    if (variant.audio) {\n      streamDBs.get(variant.audio.id).variantIds.push(variant.id);\n    }\n    if (variant.video) {\n      streamDBs.get(variant.video.id).variantIds.push(variant.id);\n    }\n  });\n\n  return {\n    startTime: period.startTime,\n    streams: Array.from(streamDBs.values()),\n  };\n};\n\n\n/**\n * Converts a manifest stream to a database stream.  This will search the\n * segment index and add all the segments to the download manager.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {shaka.offline.StreamBandwidthEstimator} estimator\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Stream} stream\n * @return {shaka.extern.StreamDB}\n * @private\n */\nshaka.offline.Storage.prototype.createStream_ = function(\n    downloader, storage, estimator, manifest, period, stream) {\n  /** @type {shaka.extern.StreamDB} */\n  let streamDb = {\n    id: stream.id,\n    originalId: stream.originalId,\n    primary: stream.primary,\n    presentationTimeOffset: stream.presentationTimeOffset || 0,\n    contentType: stream.type,\n    mimeType: stream.mimeType,\n    codecs: stream.codecs,\n    frameRate: stream.frameRate,\n    kind: stream.kind,\n    language: stream.language,\n    label: stream.label,\n    width: stream.width || null,\n    height: stream.height || null,\n    initSegmentKey: null,\n    encrypted: stream.encrypted,\n    keyId: stream.keyId,\n    segments: [],\n    variantIds: [],\n  };\n\n  /** @type {number} */\n  let startTime =\n      manifest.presentationTimeline.getSegmentAvailabilityStart();\n\n  // Download each stream in parallel.\n  let downloadGroup = stream.id;\n\n  shaka.offline.Storage.forEachSegment_(stream, startTime, (segment) => {\n    const request = shaka.util.Networking.createSegmentRequest(\n        segment.getUris(),\n        segment.startByte,\n        segment.endByte,\n        this.config_.streaming.retryParameters);\n\n    downloader.queue(\n        downloadGroup,\n        request,\n        estimator.getSegmentEstimate(stream.id, segment),\n        (data) => {\n          return storage.addSegments([{data: data}]).then((ids) => {\n            this.segmentsFromStore_.push(ids[0]);\n\n            streamDb.segments.push({\n              startTime: segment.startTime,\n              endTime: segment.endTime,\n              dataKey: ids[0],\n            });\n          });\n        });\n  });\n\n  let initSegment = stream.initSegmentReference;\n  if (initSegment) {\n    const request = shaka.util.Networking.createSegmentRequest(\n        initSegment.getUris(),\n        initSegment.startByte,\n        initSegment.endByte,\n        this.config_.streaming.retryParameters);\n\n    downloader.queue(\n        downloadGroup,\n        request,\n        estimator.getInitSegmentEstimate(stream.id),\n        (data) => {\n          return storage.addSegments([{data: data}]).then((ids) => {\n            this.segmentsFromStore_.push(ids[0]);\n            streamDb.initSegmentKey = ids[0];\n          });\n        });\n  }\n\n  return streamDb;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @param {number} startTime\n * @param {function(!shaka.media.SegmentReference)} callback\n * @private\n */\nshaka.offline.Storage.forEachSegment_ = function(stream, startTime, callback) {\n  /** @type {?number} */\n  let i = stream.findSegmentPosition(startTime);\n  /** @type {?shaka.media.SegmentReference} */\n  let ref = i == null ? null : stream.getSegmentReference(i);\n\n  while (ref) {\n    callback(ref);\n    ref = stream.getSegmentReference(++i);\n  }\n};\n\n\n/**\n * Throws an error if the object is destroyed.\n * @private\n */\nshaka.offline.Storage.prototype.checkDestroyed_ = function() {\n  if (this.destroyer_.destroyed()) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n};\n\n\n/**\n * Used by functions that need storage support to ensure that the current\n * platform has storage support before continuing. This should only be\n * needed to be used at the start of public methods.\n *\n * @private\n */\nshaka.offline.Storage.prototype.requireSupport_ = function() {\n  if (!shaka.offline.Storage.support()) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.STORAGE_NOT_SUPPORTED);\n  }\n};\n\n\n/**\n * Perform an action. Track the action's progress so that when we destroy\n * we will wait until all the actions have completed before allowing destroy\n * to resolve.\n *\n * @param {!Promise<T>} action\n * @return {!Promise<T>}\n * @template T\n * @private\n */\nshaka.offline.Storage.prototype.startOperation_ = async function(action) {\n  this.openOperations_.push(action);\n\n  try {\n    // Await |action| so we can use the finally statement to remove |action|\n    // from |openOperations_| when we still have a reference to |action|.\n    return await action;\n  } finally {\n    shaka.util.ArrayUtils.remove(this.openOperations_, action);\n  }\n};\n\n\n/**\n * @param {shaka.extern.ManifestDB} manifest\n * @return {!Array.<number>}\n * @private\n */\nshaka.offline.Storage.getAllSegmentIds_ = function(manifest) {\n  /** @type {!Array.<number>} */\n  let ids = [];\n\n  // Get every segment for every stream in the manifest.\n  manifest.periods.forEach(function(period) {\n    period.streams.forEach(function(stream) {\n      if (stream.initSegmentKey != null) {\n        ids.push(stream.initSegmentKey);\n      }\n\n      stream.segments.forEach(function(segment) {\n        ids.push(segment.dataKey);\n      });\n    });\n  });\n\n  return ids;\n};\n\n\n/**\n * Delete the on-disk storage and all the content it contains. This should not\n * be done in normal circumstances. Only do it when storage is rendered\n * unusable, such as by a version mismatch. No business logic will be run, and\n * licenses will not be released.\n *\n * @return {!Promise}\n * @export\n */\nshaka.offline.Storage.deleteAll = async function() {\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n  try {\n    // Wipe all content from all storage mechanisms.\n    await muxer.erase();\n  } finally {\n    // Destroy the muxer, whether or not erase() succeeded.\n    await muxer.destroy();\n  }\n};\n\n\n/**\n * @param {!shaka.net.NetworkingEngine} net\n * @param {!shaka.extern.DrmConfiguration} drmConfig\n * @param {!shaka.offline.StorageMuxer} muxer\n * @param {shaka.extern.ManifestDB} manifestDb\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.deleteLicenseFor_ = async function(\n    net, drmConfig, muxer, manifestDb) {\n  if (!manifestDb.drmInfo) {\n    return;\n  }\n\n  const sessionIdCell = muxer.getEmeSessionCell();\n\n  /** @type {!Array.<shaka.extern.EmeSessionDB>} */\n  const sessions = manifestDb.sessionIds.map((sessionId) => {\n    return {\n      sessionId: sessionId,\n      keySystem: manifestDb.drmInfo.keySystem,\n      licenseUri: manifestDb.drmInfo.licenseServerUri,\n      serverCertificate: manifestDb.drmInfo.serverCertificate,\n      audioCapabilities: shaka.offline.Storage.getCapabilities_(\n          manifestDb,\n          /* isVideo */ false),\n      videoCapabilities: shaka.offline.Storage.getCapabilities_(\n          manifestDb,\n          /* isVideo */ true),\n    };\n  });\n  // Try to delete the sessions; any sessions that weren't deleted get stored\n  // in the database so we can try to remove them again later.  This allows us\n  // to still delete the stored content but not \"forget\" about these sessions.\n  // Later, we can remove the sessions to free up space.\n  const deleter = new shaka.offline.SessionDeleter();\n  const deletedSessionIds = await deleter.delete(drmConfig, net, sessions);\n  await sessionIdCell.remove(deletedSessionIds);\n  await sessionIdCell.add(sessions.filter(\n      (session) => deletedSessionIds.indexOf(session.sessionId) == -1));\n};\n\n\n/**\n * Get the set of all streams in |manifest|.\n *\n * @param {shaka.extern.Manifest} manifest\n * @return {!Set.<shaka.extern.Stream>}\n * @private\n */\nshaka.offline.Storage.getStreamSet_ = function(manifest) {\n  /** @type {!Set.<shaka.extern.Stream>} */\n  const set = new Set();\n\n  for (const period of manifest.periods) {\n    for (const text of period.textStreams) {\n      set.add(text);\n    }\n\n    for (const variant of period.variants) {\n      if (variant.audio) { set.add(variant.audio); }\n      if (variant.video) { set.add(variant.video); }\n    }\n  }\n\n  return set;\n};\n\n\n/**\n * Make sure that the given configuration object follows the correct structure\n * expected by |configure|. This function should be removed in v2.6 when\n * backward-compatibility is no longer needed.\n *\n * @param {!Object} config\n *    The config fields that the app wants to update. This object will be\n *    change by this function.\n * @private\n */\nshaka.offline.Storage.verifyConfig_ = function(config) {\n  // To avoid printing a deprecated warning multiple times, track all\n  // infractions and then print it once at the end.\n  let usedLegacyConfig = false;\n\n  // For each field in the legacy config structure\n  // (shaka.extern.OfflineConfiguration), move any occurances to the correct\n  // location in the player configuration.\n  if (config.trackSelectionCallback != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.trackSelectionCallback = config.trackSelectionCallback;\n    delete config.trackSelectionCallback;\n  }\n\n  if (config.progressCallback != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.progressCallback = config.progressCallback;\n    delete config.progressCallback;\n  }\n\n  if (config.usePersistentLicense != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.usePersistentLicense = config.usePersistentLicense;\n    delete config.usePersistentLicense;\n  }\n\n  if (usedLegacyConfig) {\n    shaka.Deprecate.deprecateFeature(\n        2, 6,\n        'Storage.configure with OfflineConfig',\n        'Please configure storage with a player configuration.');\n  }\n};\n\n\n/**\n * Go over a manifest and issue warnings for any suspicious properties.\n *\n * @param {shaka.extern.Manifest} manifest\n * @private\n */\nshaka.offline.Storage.validateManifest_ = function(manifest) {\n  // Make sure that the period has not been reduced to nothing.\n  if (manifest.periods.length == 0) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.NO_PERIODS);\n  }\n\n  for (const period of manifest.periods) {\n    shaka.offline.Storage.validatePeriod_(period);\n  }\n};\n\n\n/**\n * Go over a period and issue warnings for any suspicious properties.\n *\n * @param {shaka.extern.Period} period\n * @private\n */\nshaka.offline.Storage.validatePeriod_ = function(period) {\n  const videos = new Set(period.variants.map((v) => v.video));\n  const audios = new Set(period.variants.map((v) => v.audio));\n  const texts = period.textStreams;\n\n  if (videos.size > 1) {\n    shaka.log.warning('Multiple video tracks selected to be stored');\n  }\n\n  for (const audio1 of audios) {\n    for (const audio2 of audios) {\n      if (audio1 != audio2 && audio1.language == audio2.language) {\n        shaka.log.warning(\n            'Similar audio tracks were selected to be stored',\n            audio1.id,\n            audio2.id);\n      }\n    }\n  }\n\n  for (const text1 of texts) {\n    for (const text2 of texts) {\n      if (text1 != text2 && text1.language == text2.language) {\n        shaka.log.warning(\n            'Similar text tracks were selected to be stored',\n            text1.id,\n            text2.id);\n      }\n    }\n  }\n};\n\nshaka.Player.registerSupportPlugin('offline', shaka.offline.Storage.support);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.installAll');\ngoog.provide('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill\n * @summary A one-stop installer for all polyfills.\n * @see http://enwp.org/polyfill\n * @exportDoc\n */\n\n\n/**\n * Install all polyfills.\n * @export\n */\nshaka.polyfill.installAll = function() {\n  for (let i = 0; i < shaka.polyfill.polyfills_.length; ++i) {\n    shaka.polyfill.polyfills_[i].callback();\n  }\n};\n\n\n/**\n * Contains the polyfills that will be installed.\n * @private {!Array.<{priority: number, callback: function()}>}\n */\nshaka.polyfill.polyfills_ = [];\n\n\n/**\n * Registers a new polyfill to be installed.\n *\n * @param {function()} polyfill\n * @param {number=} priority An optional number priority.  Higher priorities\n *   will be executed before lower priority ones.  Default is 0.\n * @export\n */\nshaka.polyfill.register = function(polyfill, priority) {\n  priority = priority || 0;\n  const item = {priority: priority, callback: polyfill};\n  for (let i = 0; i < shaka.polyfill.polyfills_.length; i++) {\n    if (shaka.polyfill.polyfills_[i].priority < priority) {\n      shaka.polyfill.polyfills_.splice(i, 0, item);\n      return;\n    }\n  }\n  shaka.polyfill.polyfills_.push(item);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysApple');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysApple\n *\n * @summary A polyfill to implement modern, standardized EME on top of Apple's\n * prefixed EME in Safari.\n */\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysApple.install = function() {\n  if (!window.HTMLVideoElement || !window.WebKitMediaKeys) {\n    // No HTML5 video or no prefixed EME.\n    return;\n  }\n\n  // TODO: Prefer unprefixed EME once we know how to use it.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=197433\n  /*\n  if (navigator.requestMediaKeySystemAccess &&\n      MediaKeySystemAccess.prototype.getConfiguration) {\n    // Prefixed EME is preferable.\n    return;\n  }\n  */\n\n  shaka.log.info('Using Apple-prefixed EME');\n\n  // Alias\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n\n  // Construct a fake key ID.  This is not done at load-time to avoid exceptions\n  // on unsupported browsers.  This particular fake key ID was suggested in\n  // w3c/encrypted-media#32.\n  PatchedMediaKeysApple.MediaKeyStatusMap.KEY_ID_ =\n      (new Uint8Array([0])).buffer;\n\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysApple.setMediaKeys;\n\n  // Install patches\n  window.MediaKeys = PatchedMediaKeysApple.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysApple.MediaKeySystemAccess;\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysApple.requestMediaKeySystemAccess;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysApple.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysApple.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n  // Alias.\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n  try {\n    const access = new PatchedMediaKeysApple.MediaKeySystemAccess(\n        keySystem, supportedConfigurations);\n    return Promise.resolve(/** @type {!MediaKeySystemAccess} */ (access));\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySystemAccess.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @implements {MediaKeySystemAccess}\n * @throws {Error} if the key system is not supported.\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySystemAccess');\n\n  /** @type {string} */\n  this.keySystem = keySystem;\n\n  /** @private {!MediaKeySystemConfiguration} */\n  this.configuration_;\n\n  // Optimization: WebKitMediaKeys.isTypeSupported delays responses by a\n  // significant amount of time, possibly to discourage fingerprinting.\n  // Since we know only FairPlay is supported here, let's skip queries for\n  // anything else to speed up the process.\n  if (keySystem.startsWith('com.apple.fps')) {\n    for (const cfg of supportedConfigurations) {\n      const newCfg = this.checkConfig_(cfg);\n      if (newCfg) {\n        this.configuration_ = newCfg;\n        return;\n      }\n    }\n  }\n\n  // As per the spec, this should be a DOMException, but there is not a public\n  // constructor for DOMException.\n  const unsupportedKeySystemError = new Error('Unsupported keySystem');\n  unsupportedKeySystemError.name = 'NotSupportedError';\n  unsupportedKeySystemError.code = DOMException.NOT_SUPPORTED_ERR;\n  throw unsupportedKeySystemError;\n};\n\n\n/**\n * Check a single config for MediaKeySystemAccess.\n *\n * @param {MediaKeySystemConfiguration} cfg The requested config.\n * @return {?MediaKeySystemConfiguration} A matching config we can support, or\n *   null if the input is not supportable.\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySystemAccess.prototype.\n    checkConfig_ = function(cfg) {\n  if (cfg.persistentState == 'required') {\n    // Not supported by the prefixed API.\n    return null;\n  }\n\n  // Create a new config object and start adding in the pieces which we find\n  // support for.  We will return this from getConfiguration() later if asked.\n\n  /** @type {!MediaKeySystemConfiguration} */\n  const newCfg = {\n    'audioCapabilities': [],\n    'videoCapabilities': [],\n    // It is technically against spec to return these as optional, but we\n    // don't truly know their values from the prefixed API:\n    'persistentState': 'optional',\n    'distinctiveIdentifier': 'optional',\n    // Pretend the requested init data types are supported, since we don't\n    // really know that either:\n    'initDataTypes': cfg.initDataTypes,\n    'sessionTypes': ['temporary'],\n    'label': cfg.label,\n  };\n\n  // PatchedMediaKeysApple tests for key system availability through\n  // WebKitMediaKeys.isTypeSupported.\n  let ranAnyTests = false;\n  let success = false;\n\n  if (cfg.audioCapabilities) {\n    for (const cap of cfg.audioCapabilities) {\n      if (cap.contentType) {\n        ranAnyTests = true;\n\n        const contentType = cap.contentType.split(';')[0];\n        if (WebKitMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n          newCfg.audioCapabilities.push(cap);\n          success = true;\n        }\n      }\n    }\n  }\n\n  if (cfg.videoCapabilities) {\n    for (const cap of cfg.videoCapabilities) {\n      if (cap.contentType) {\n        ranAnyTests = true;\n\n        const contentType = cap.contentType.split(';')[0];\n        if (WebKitMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n          newCfg.videoCapabilities.push(cap);\n          success = true;\n        }\n      }\n    }\n  }\n\n  if (!ranAnyTests) {\n    // If no specific types were requested, we check all common types to find\n    // out if the key system is present at all.\n    success = WebKitMediaKeys.isTypeSupported(this.keySystem, 'video/mp4');\n  }\n\n  if (success) {\n    return newCfg;\n  }\n  return null;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySystemAccess.createMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n\n  const mediaKeys = new PatchedMediaKeysApple.MediaKeys(this.keySystem);\n  return Promise.resolve(/** @type {!MediaKeys} */ (mediaKeys));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {\n  shaka.log.debug(\n      'PatchedMediaKeysApple.MediaKeySystemAccess.getConfiguration');\n  return this.configuration_;\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysApple.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysApple.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n\n  const newMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysApple.MediaKeys} */ (\n      mediaKeys);\n  const oldMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysApple.MediaKeys} */ (\n      this.mediaKeys);\n\n  if (oldMediaKeys && oldMediaKeys != newMediaKeys) {\n    goog.asserts.assert(oldMediaKeys instanceof PatchedMediaKeysApple.MediaKeys,\n                        'non-polyfill instance of oldMediaKeys');\n    // Have the old MediaKeys stop listening to events on the video tag.\n    oldMediaKeys.setMedia(null);\n  }\n\n  delete this['mediaKeys'];  // in case there is an existing getter\n  this['mediaKeys'] = mediaKeys;  // work around read-only declaration\n\n  if (newMediaKeys) {\n    goog.asserts.assert(newMediaKeys instanceof PatchedMediaKeysApple.MediaKeys,\n                        'non-polyfill instance of newMediaKeys');\n    return newMediaKeys.setMedia(this);\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * An implementation of MediaKeys.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeys = function(keySystem) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeys');\n\n  /** @private {!WebKitMediaKeys} */\n  this.nativeMediaKeys_ = new WebKitMediaKeys(keySystem);\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @type {Uint8Array} */\n  this.certificate = null;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeys.prototype.\n    createSession = function(sessionType) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeys.createSession');\n\n  sessionType = sessionType || 'temporary';\n  // For now, only the 'temporary' type is supported.\n  if (sessionType != 'temporary') {\n    throw new TypeError('Session type ' + sessionType +\n        ' is unsupported on this platform.');\n  }\n\n  // Alias\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n\n  return new PatchedMediaKeysApple.MediaKeySession(\n      this.nativeMediaKeys_, sessionType);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeys.prototype.\n    setServerCertificate = function(serverCertificate) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeys.setServerCertificate');\n\n  this.certificate =\n      serverCertificate ? new Uint8Array(serverCertificate) : null;\n\n  return Promise.resolve(true);\n};\n\n\n/**\n * @param {HTMLMediaElement} media\n * @protected\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeys.prototype.\n    setMedia = function(media) {\n  // Alias\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n\n  // Remove any old listeners.\n  this.eventManager_.removeAll();\n\n  // It is valid for media to be null; null is used to flag that event handlers\n  // need to be cleaned up.\n  if (!media) {\n    return Promise.resolve();\n  }\n\n  // Intercept and translate these prefixed EME events.\n  this.eventManager_.listen(media, 'webkitneedkey',\n      /** @type {shaka.util.EventManager.ListenerType} */\n      (PatchedMediaKeysApple.onWebkitNeedKey_));\n\n  // Wrap native HTMLMediaElement.webkitSetMediaKeys with a Promise.\n  try {\n    // Some browsers require that readyState >=1 before mediaKeys can be set, so\n    // check this and wait for loadedmetadata if we are not in the correct state\n    if (media.readyState >= 1) {\n      media.webkitSetMediaKeys(this.nativeMediaKeys_);\n    } else {\n      this.eventManager_.listenOnce(media, 'loadedmetadata', () => {\n        media.webkitSetMediaKeys(this.nativeMediaKeys_);\n      });\n    }\n\n    return Promise.resolve();\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySession.\n *\n * @constructor\n * @struct\n * @param {WebKitMediaKeys} nativeMediaKeys\n * @param {string} sessionType\n * @implements {MediaKeySession}\n * @extends {shaka.util.FakeEventTarget}\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession =\n    function(nativeMediaKeys, sessionType) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession');\n  shaka.util.FakeEventTarget.call(this);\n\n  /** The native MediaKeySession, which will be created in generateRequest.\n   * @private {WebKitMediaKeySession} */\n  this.nativeMediaKeySession_ = null;\n\n  /** @private {WebKitMediaKeys} */\n  this.nativeMediaKeys_ = nativeMediaKeys;\n\n  // Promises that are resolved later\n  /** @private {shaka.util.PublicPromise} */\n  this.generateRequestPromise_ = null;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.updatePromise_ = null;\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @type {string} */\n  this.sessionId = '';\n\n  /** @type {number} */\n  this.expiration = NaN;\n\n  /** @type {!shaka.util.PublicPromise} */\n  this.closed = new shaka.util.PublicPromise();\n\n  /** @type {!shaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap} */\n  this.keyStatuses =\n      new shaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap();\n};\ngoog.inherits(shaka.polyfill.PatchedMediaKeysApple.MediaKeySession,\n    shaka.util.FakeEventTarget);\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    generateRequest = function(initDataType, initData) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession.generateRequest');\n\n  this.generateRequestPromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // This EME spec version requires a MIME content type as the 1st param\n    // to createSession, but doesn't seem to matter what the value is.\n    // It also only accepts Uint8Array, not ArrayBuffer, so explicitly make\n    // initData into a Uint8Array.\n    this.nativeMediaKeySession_ = this.nativeMediaKeys_.createSession(\n        'video/mp4', new Uint8Array(initData));\n\n    // Attach session event handlers here.\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'webkitkeymessage',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onWebkitKeyMessage_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'webkitkeyadded',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onWebkitKeyAdded_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'webkitkeyerror',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onWebkitKeyError_.bind(this)));\n\n    this.updateKeyStatus_('status-pending');\n  } catch (exception) {\n    this.generateRequestPromise_.reject(exception);\n  }\n\n  return this.generateRequestPromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    load = function() {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession.load');\n\n  return Promise.reject(new Error('MediaKeySession.load not yet supported'));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    update = function(response) {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession.update');\n\n  this.updatePromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // Pass through to the native session.\n    this.nativeMediaKeySession_.update(new Uint8Array(response));\n  } catch (exception) {\n    this.updatePromise_.reject(exception);\n  }\n\n  return this.updatePromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    close = function() {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession.close');\n\n  try {\n    // Pass through to the native session.\n    this.nativeMediaKeySession_.close();\n\n    this.closed.resolve();\n    this.eventManager_.removeAll();\n  } catch (exception) {\n    this.closed.reject(exception);\n  }\n\n  return this.closed;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    remove = function() {\n  shaka.log.debug('PatchedMediaKeysApple.MediaKeySession.remove');\n\n  return Promise.reject(new Error('MediaKeySession.remove is only ' +\n      'applicable for persistent licenses, which are not supported on ' +\n      'this platform'));\n};\n\n\n/**\n * Rebuild FairPlay init data according to Apple's docs.  It's unclear why this\n * is not done by the browser, or if the unprefixed version will do it for us.\n *\n * @param {BufferSource} initData\n * @param {BufferSource} certificate\n * @return {BufferSource}\n */\nshaka.polyfill.PatchedMediaKeysApple.rebuildInitData_ =\n    function(initData, certificate) {\n  // TODO: Move this into DrmEngine if it is still needed with unprefixed EME.\n  // FairPlay init data is in two parts and must be processed a bit.\n  // The first part is a 4 byte little-endian int, which is the length of the\n  // second part.\n  const initDataArray = new Uint8Array(initData);\n  const dataview = new DataView(initDataArray.buffer);\n  const length = dataview.getUint32(\n      /* position= */ 0, /* littleEndian= */ true);\n  if (length + 4 != initDataArray.byteLength) {\n    throw new Error('Malformed init data!');\n  }\n\n  // The second part is a UTF-16 LE URI from the manifest.\n  const uriString = shaka.util.StringUtils.fromUTF16(\n      initDataArray.slice(4), /* littleEndian= */ true);\n\n  // The domain of that URI is the content ID according to Apple's FPS sample.\n  const uri = new goog.Uri(uriString);\n  const contentId = uri.getDomain();\n\n  // From that, we build a new init data to use in the session.  This is\n  // composed of several parts.  First, the raw init data we already got.\n  // Second, a 4-byte LE length followed by the content ID in UTF-16-LE.\n  // Third, a 4-byte LE length followed by the certificate.\n  const contentIdArray = new Uint8Array(\n      shaka.util.StringUtils.toUTF16(contentId, /* littleEndian= */ true));\n\n  const rebuiltInitData = new Uint8Array(\n      initDataArray.byteLength +\n      4 + contentIdArray.byteLength +\n      4 + certificate.byteLength);\n\n  let offset = 0;\n  /** @param {!Uint8Array} array */\n  const append = (array) => {\n    rebuiltInitData.set(array, offset);\n    offset += array.byteLength;\n  };\n  /** @param {!Uint8Array} array */\n  const appendWithLength = (array) => {\n    const view = new DataView(rebuiltInitData.buffer);\n    const value = array.byteLength;\n    view.setUint32(offset, value, /* littleEndian= */ true);\n    offset += 4;\n    append(array);\n  };\n\n  append(initDataArray);\n  appendWithLength(contentIdArray);\n  appendWithLength(new Uint8Array(certificate));\n\n  return rebuiltInitData;\n};\n\n\n/**\n * Handler for the native media elements webkitneedkey event.\n *\n * @this {!HTMLMediaElement}\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.onWebkitNeedKey_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysApple.onWebkitNeedKey_', event);\n\n  const PatchedMediaKeysApple = shaka.polyfill.PatchedMediaKeysApple;\n  const mediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysApple.MediaKeys} */(\n          this.mediaKeys);\n  goog.asserts.assert(mediaKeys instanceof PatchedMediaKeysApple.MediaKeys,\n                      'non-polyfill instance of newMediaKeys');\n\n  goog.asserts.assert(event.initData != null, 'missing init data!');\n\n  const certificate = mediaKeys.certificate;\n  goog.asserts.assert(certificate != null, 'missing certificate!');\n\n  // NOTE: Because \"this\" is a real EventTarget, the event we dispatch here must\n  // also be a real Event.\n  const event2 = new Event('encrypted');\n  // TODO: validate this initDataType against the unprefixed version\n  event2.initDataType = 'cenc';\n  event2.initData = PatchedMediaKeysApple.rebuildInitData_(\n      event.initData, certificate);\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Handler for the native keymessage event on WebKitMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    onWebkitKeyMessage_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysApple.onWebkitKeyMessage_', event);\n\n  // We can now resolve this.generateRequestPromise, which should be non-null.\n  goog.asserts.assert(this.generateRequestPromise_,\n                      'generateRequestPromise_ should be set before now!');\n  if (this.generateRequestPromise_) {\n    this.generateRequestPromise_.resolve();\n    this.generateRequestPromise_ = null;\n  }\n\n  const isNew = this.keyStatuses.getStatus() == undefined;\n\n  const event2 = new shaka.util.FakeEvent('message', {\n    messageType: isNew ? 'license-request' : 'license-renewal',\n    message: event.message.buffer,\n  });\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Handler for the native keyadded event on WebKitMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    onWebkitKeyAdded_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysApple.onWebkitKeyAdded_', event);\n\n  // This shouldn't fire while we're in the middle of generateRequest, but if it\n  // does, we will need to change the logic to account for it.\n  goog.asserts.assert(!this.generateRequestPromise_,\n      'Key added during generate!');\n\n  // We can now resolve this.updatePromise, which should be non-null.\n  goog.asserts.assert(this.updatePromise_,\n                      'updatePromise_ should be set before now!');\n  if (this.updatePromise_) {\n    this.updateKeyStatus_('usable');\n    this.updatePromise_.resolve();\n    this.updatePromise_ = null;\n  }\n};\n\n\n/**\n * Handler for the native keyerror event on WebKitMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    onWebkitKeyError_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysApple.onWebkitKeyError_', event);\n\n  const error = new Error('EME PatchedMediaKeysApple key error');\n  error.errorCode = this.nativeMediaKeySession_.error;\n\n  if (this.generateRequestPromise_ != null) {\n    this.generateRequestPromise_.reject(error);\n    this.generateRequestPromise_ = null;\n  } else if (this.updatePromise_ != null) {\n    this.updatePromise_.reject(error);\n    this.updatePromise_ = null;\n  } else {\n    // Unexpected error - map native codes to standardised key statuses.\n    // Possible values of this.nativeMediaKeySession_.error.code:\n    // MEDIA_KEYERR_UNKNOWN        = 1\n    // MEDIA_KEYERR_CLIENT         = 2\n    // MEDIA_KEYERR_SERVICE        = 3\n    // MEDIA_KEYERR_OUTPUT         = 4\n    // MEDIA_KEYERR_HARDWARECHANGE = 5\n    // MEDIA_KEYERR_DOMAIN         = 6\n\n    switch (this.nativeMediaKeySession_.error.code) {\n      case WebKitMediaKeyError.MEDIA_KEYERR_OUTPUT:\n      case WebKitMediaKeyError.MEDIA_KEYERR_HARDWARECHANGE:\n        this.updateKeyStatus_('output-not-allowed');\n        break;\n      default:\n        this.updateKeyStatus_('internal-error');\n        break;\n    }\n  }\n};\n\n\n/**\n * Updates key status and dispatch a 'keystatuseschange' event.\n *\n * @param {string} status\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeySession.prototype.\n    updateKeyStatus_ = function(status) {\n  this.keyStatuses.setStatus(status);\n  const event = new shaka.util.FakeEvent('keystatuseschange');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * An implementation of MediaKeyStatusMap.\n * This fakes a map with a single key ID.\n *\n * @constructor\n * @struct\n * @implements {MediaKeyStatusMap}\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap = function() {\n  /**\n   * @type {number}\n   */\n  this.size = 0;\n\n  /**\n   * @private {string|undefined}\n   */\n  this.status_ = undefined;\n};\n\n\n/**\n * @const {!ArrayBuffer}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.KEY_ID_;\n\n\n/**\n * An internal method used by the session to set key status.\n * @param {string|undefined} status\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    setStatus = function(status) {\n  this.size = status == undefined ? 0 : 1;\n  this.status_ = status;\n};\n\n\n/**\n * An internal method used by the session to get key status.\n * @return {string|undefined}\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    getStatus = function() {\n  return this.status_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    forEach = function(fn) {\n  if (this.status_) {\n    const fakeKeyId =\n        shaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.KEY_ID_;\n    fn(this.status_, fakeKeyId);\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    get = function(keyId) {\n  if (this.has(keyId)) {\n    return this.status_;\n  }\n  return undefined;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    has = function(keyId) {\n  const fakeKeyId =\n      shaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.KEY_ID_;\n  if (this.status_ &&\n      shaka.util.Uint8ArrayUtils.equal(\n          new Uint8Array(keyId), new Uint8Array(fakeKeyId))) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    entries = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    keys = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysApple.MediaKeyStatusMap.prototype.\n    values = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysApple.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysMs');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.Pssh');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysMs\n *\n * @summary A polyfill to implement\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015}\n * on top of ms-prefixed\n * {@link https://www.w3.org/TR/2014/WD-encrypted-media-20140218/ EME v20140218}\n */\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysMs.install = function() {\n  if (!window.HTMLVideoElement || !window.MSMediaKeys ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  shaka.log.info('Using ms-prefixed EME v20140218');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // Construct a fake key ID.  This is not done at load-time to avoid exceptions\n  // on unsupported browsers.  This particular fake key ID was suggested in\n  // w3c/encrypted-media#32.\n  PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_ = (new Uint8Array([0])).buffer;\n\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysMs.setMediaKeys;\n\n  // Install patches\n  window.MediaKeys = PatchedMediaKeysMs.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysMs.MediaKeySystemAccess;\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysMs.requestMediaKeySystemAccess;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysMs.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysMs.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n  // Alias.\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n  try {\n    let access = new PatchedMediaKeysMs.MediaKeySystemAccess(\n        keySystem, supportedConfigurations);\n    return Promise.resolve(/** @type {!MediaKeySystemAccess} */ (access));\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySystemAccess.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @implements {MediaKeySystemAccess}\n * @throws {Error} if the key system is not supported.\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess');\n\n  /** @type {string} */\n  this.keySystem = keySystem;\n\n  /** @private {!MediaKeySystemConfiguration} */\n  this.configuration_;\n\n  let allowPersistentState = false;\n\n  let success = false;\n  for (let i = 0; i < supportedConfigurations.length; ++i) {\n    let cfg = supportedConfigurations[i];\n\n    // Create a new config object and start adding in the pieces which we\n    // find support for.  We will return this from getConfiguration() if asked.\n    /** @type {!MediaKeySystemConfiguration} */\n    let newCfg = {\n      'audioCapabilities': [],\n      'videoCapabilities': [],\n      // It is technically against spec to return these as optional, but we\n      // don't truly know their values from the prefixed API:\n      'persistentState': 'optional',\n      'distinctiveIdentifier': 'optional',\n      // Pretend the requested init data types are supported, since we don't\n      // really know that either:\n      'initDataTypes': cfg.initDataTypes,\n      'sessionTypes': ['temporary'],\n      'label': cfg.label,\n    };\n\n    // PatchedMediaKeysMs tests for key system availability through\n    // MSMediaKeys.isTypeSupported\n    let ranAnyTests = false;\n    if (cfg.audioCapabilities) {\n      for (let j = 0; j < cfg.audioCapabilities.length; ++j) {\n        let cap = cfg.audioCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          let contentType = cap.contentType.split(';')[0];\n          if (MSMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n            newCfg.audioCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n    if (cfg.videoCapabilities) {\n      for (let j = 0; j < cfg.videoCapabilities.length; ++j) {\n        let cap = cfg.videoCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          let contentType = cap.contentType.split(';')[0];\n          if (MSMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n            newCfg.videoCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n\n    if (!ranAnyTests) {\n      // If no specific types were requested, we check all common types to find\n      // out if the key system is present at all.\n      success = MSMediaKeys.isTypeSupported(this.keySystem, 'video/mp4');\n    }\n    if (cfg.persistentState == 'required') {\n      if (allowPersistentState) {\n        newCfg.persistentState = 'required';\n        newCfg.sessionTypes = ['persistent-license'];\n      } else {\n        success = false;\n      }\n    }\n\n    if (success) {\n      this.configuration_ = newCfg;\n      return;\n    }\n  }  // for each cfg in supportedConfigurations\n\n  // As per the spec, this should be a DOMException, but there is not a public\n  // constructor for this.\n  let unsupportedKeySystemError = new Error('Unsupported keySystem');\n  unsupportedKeySystemError.name = 'NotSupportedError';\n  unsupportedKeySystemError.code = DOMException.NOT_SUPPORTED_ERR;\n  throw unsupportedKeySystemError;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess.createMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  let mediaKeys = new PatchedMediaKeysMs.MediaKeys(this.keySystem);\n  return Promise.resolve(/** @type {!MediaKeys} */ (mediaKeys));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess.getConfiguration');\n  return this.configuration_;\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysMs.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysMs.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  let newMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysMs.MediaKeys} */ (\n      mediaKeys);\n  let oldMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysMs.MediaKeys} */ (\n      this.mediaKeys);\n\n  if (oldMediaKeys && oldMediaKeys != newMediaKeys) {\n    goog.asserts.assert(oldMediaKeys instanceof PatchedMediaKeysMs.MediaKeys,\n                        'non-polyfill instance of oldMediaKeys');\n    // Have the old MediaKeys stop listening to events on the video tag.\n    oldMediaKeys.setMedia(null);\n  }\n\n  delete this['mediaKeys'];  // in case there is an existing getter\n  this['mediaKeys'] = mediaKeys;  // work around read-only declaration\n\n  if (newMediaKeys) {\n    goog.asserts.assert(newMediaKeys instanceof PatchedMediaKeysMs.MediaKeys,\n                        'non-polyfill instance of newMediaKeys');\n    return newMediaKeys.setMedia(this);\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * An implementation of MediaKeys.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys = function(keySystem) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys');\n\n  /** @private {!MSMediaKeys} */\n  this.nativeMediaKeys_ = new MSMediaKeys(keySystem);\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    createSession = function(sessionType) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys.createSession');\n\n  sessionType = sessionType || 'temporary';\n  // For now, only the 'temporary' type is supported.\n  if (sessionType != 'temporary') {\n    throw new TypeError('Session type ' + sessionType +\n        ' is unsupported on this platform.');\n  }\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  return new PatchedMediaKeysMs.MediaKeySession(\n      this.nativeMediaKeys_, sessionType);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    setServerCertificate = function(serverCertificate) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys.setServerCertificate');\n\n  // There is no equivalent in PatchedMediaKeysMs, so return failure.\n  return Promise.resolve(false);\n};\n\n\n/**\n * @param {HTMLMediaElement} media\n * @protected\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    setMedia = function(media) {\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // Remove any old listeners.\n  this.eventManager_.removeAll();\n\n  // It is valid for media to be null; null is used to flag that event handlers\n  // need to be cleaned up.\n  if (!media) {\n    return Promise.resolve();\n  }\n\n  // Intercept and translate these prefixed EME events.\n  this.eventManager_.listen(media, 'msneedkey',\n      /** @type {shaka.util.EventManager.ListenerType} */\n      (PatchedMediaKeysMs.onMsNeedKey_));\n\n  let self = this;\n  function setMediaKeysDeferred() {\n    media.msSetMediaKeys(self.nativeMediaKeys_);\n    media.removeEventListener('loadedmetadata', setMediaKeysDeferred);\n  }\n\n  // Wrap native HTMLMediaElement.msSetMediaKeys with a Promise.\n  try {\n    // IE11/Edge requires that readyState >=1 before mediaKeys can be set, so\n    // check this and wait for loadedmetadata if we are not in the correct state\n    if (media.readyState >= 1) {\n      media.msSetMediaKeys(this.nativeMediaKeys_);\n    } else {\n      media.addEventListener('loadedmetadata', setMediaKeysDeferred);\n    }\n\n    return Promise.resolve();\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySession.\n *\n * @constructor\n * @struct\n * @param {MSMediaKeys} nativeMediaKeys\n * @param {string} sessionType\n * @implements {MediaKeySession}\n * @extends {shaka.util.FakeEventTarget}\n */\nshaka.polyfill.PatchedMediaKeysMs.\n    MediaKeySession = function(nativeMediaKeys, sessionType) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession');\n  shaka.util.FakeEventTarget.call(this);\n\n  // The native MediaKeySession, which will be created in generateRequest.\n  /** @private {MSMediaKeySession} */\n  this.nativeMediaKeySession_ = null;\n\n  /** @private {MSMediaKeys} */\n  this.nativeMediaKeys_ = nativeMediaKeys;\n\n  // Promises that are resolved later\n  /** @private {shaka.util.PublicPromise} */\n  this.generateRequestPromise_ = null;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.updatePromise_ = null;\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @type {string} */\n  this.sessionId = '';\n\n  /** @type {number} */\n  this.expiration = NaN;\n\n  /** @type {!shaka.util.PublicPromise} */\n  this.closed = new shaka.util.PublicPromise();\n\n  /** @type {!shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap} */\n  this.keyStatuses =\n      new shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap();\n};\ngoog.inherits(shaka.polyfill.PatchedMediaKeysMs.MediaKeySession,\n    shaka.util.FakeEventTarget);\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    generateRequest = function(initDataType, initData) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.generateRequest');\n\n  this.generateRequestPromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // This EME spec version requires a MIME content type as the 1st param\n    // to createSession, but doesn't seem to matter what the value is.\n\n    // NOTE: IE11 takes either Uint8Array or ArrayBuffer, but Edge 12 only\n    // accepts Uint8Array.\n    this.nativeMediaKeySession_ = this.nativeMediaKeys_\n        .createSession('video/mp4', new Uint8Array(initData), null);\n\n    // Attach session event handlers here.\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeymessage',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyMessage_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeyadded',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyAdded_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeyerror',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyError_.bind(this)));\n\n    this.updateKeyStatus_('status-pending');\n  } catch (exception) {\n    this.generateRequestPromise_.reject(exception);\n  }\n\n  return this.generateRequestPromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    load = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.load');\n\n  return Promise.reject(new Error('MediaKeySession.load not yet supported'));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    update = function(response) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.update');\n\n  this.updatePromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // Pass through to the native session.\n    // NOTE: IE11 takes either Uint8Array or ArrayBuffer, but Edge 12 only\n    // accepts Uint8Array.\n    this.nativeMediaKeySession_.update(new Uint8Array(response));\n  } catch (exception) {\n    this.updatePromise_.reject(exception);\n  }\n\n  return this.updatePromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    close = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.close');\n\n  try {\n    // Pass through to the native session.\n    // NOTE: IE seems to have a spec discrepancy here - v2010218 should have\n    // MediaKeySession.release, but actually uses \"close\". The next version\n    // of the spec is the initial Promise based one, so it's not the target spec\n    // either.\n    this.nativeMediaKeySession_.close();\n\n    this.closed.resolve();\n    this.eventManager_.removeAll();\n  } catch (exception) {\n    this.closed.reject(exception);\n  }\n\n  return this.closed;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    remove = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.remove');\n\n  return Promise.reject(new Error('MediaKeySession.remove is only ' +\n      'applicable for persistent licenses, which are not supported on ' +\n      'this platform'));\n};\n\n\n/**\n * Handler for the native media elements msNeedKey event.\n *\n * @this {!HTMLMediaElement}\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.onMsNeedKey_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsNeedKey_', event);\n  if (!event.initData) {\n    return;\n  }\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // NOTE: Because \"this\" is a real EventTarget, on IE, the event we dispatch\n  // here must also be a real Event.\n  let event2 = /** @type {!CustomEvent} */(document.createEvent('CustomEvent'));\n  event2.initCustomEvent('encrypted', false, false, null);\n  event2.initDataType = 'cenc';\n  event2.initData = PatchedMediaKeysMs.normaliseInitData_(event.initData);\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Normalise the initData array. This is to apply browser specific work-arounds,\n * e.g. removing duplicates which appears to occur intermittently when the\n * native msneedkey event fires (i.e. event.initData contains dupes).\n *\n * @param {?Uint8Array} initData\n * @private\n * @return {?Uint8Array}\n */\nshaka.polyfill.PatchedMediaKeysMs.normaliseInitData_ = function(initData) {\n  if (!initData) {\n    return initData;\n  }\n\n  let pssh = new shaka.util.Pssh(initData);\n\n  // If there is only a single pssh, return the original array.\n  if (pssh.dataBoundaries.length <= 1) {\n    return initData;\n  }\n\n  let unfilteredInitDatas = [];\n  for (let i = 0; i < pssh.dataBoundaries.length; i++) {\n    let currPssh = initData.subarray(\n        pssh.dataBoundaries[i].start,\n        pssh.dataBoundaries[i].end + 1); // End is exclusive, hence the +1.\n\n    unfilteredInitDatas.push(currPssh);\n  }\n\n  // Dedupe psshData.\n  const dedupedInitDatas = [];\n  for (const initData of unfilteredInitDatas) {\n    const found = dedupedInitDatas.some((x) => {\n      return shaka.util.Uint8ArrayUtils.equal(x, initData);\n    });\n\n    if (!found) {\n      dedupedInitDatas.push(initData);\n    }\n  }\n\n  let targetLength = 0;\n  for (const initData of dedupedInitDatas) {\n    targetLength += initData.length;\n  }\n\n  // Flatten the array of Uint8Arrays back into a single Uint8Array.\n  const normalisedInitData = new Uint8Array(targetLength);\n  let offset = 0;\n  for (const initData of dedupedInitDatas) {\n    normalisedInitData.set(initData, offset);\n    offset += initData.length;\n  }\n\n  return normalisedInitData;\n};\n\n\n/**\n * Handler for the native keymessage event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyMessage_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyMessage_', event);\n\n  // We can now resolve this.generateRequestPromise, which should be non-null.\n  goog.asserts.assert(this.generateRequestPromise_,\n                      'generateRequestPromise_ not set in onMsKeyMessage_');\n  if (this.generateRequestPromise_) {\n    this.generateRequestPromise_.resolve();\n    this.generateRequestPromise_ = null;\n  }\n\n  let isNew = this.keyStatuses.getStatus() == undefined;\n\n  let event2 = new shaka.util.FakeEvent('message', {\n    messageType: isNew ? 'license-request' : 'license-renewal',\n    message: event.message.buffer,\n  });\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Handler for the native keyadded event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyAdded_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyAdded_', event);\n\n  // PlayReady's concept of persistent licenses makes emulation difficult here.\n  // A license policy can say that the license persists, which causes the CDM to\n  // store it for use in a later session.  The result is that in IE11, the CDM\n  // fires 'mskeyadded' without ever firing 'mskeymessage'.\n  if (this.generateRequestPromise_) {\n    shaka.log.debug('Simulating completion for a PR persistent license.');\n    goog.asserts.assert(!this.updatePromise_,\n        'updatePromise_ and generateRequestPromise_ set in onMsKeyAdded_');\n    this.updateKeyStatus_('usable');\n    this.generateRequestPromise_.resolve();\n    this.generateRequestPromise_ = null;\n    return;\n  }\n\n  // We can now resolve this.updatePromise, which should be non-null.\n  goog.asserts.assert(this.updatePromise_,\n                      'updatePromise_ not set in onMsKeyAdded_');\n  if (this.updatePromise_) {\n    this.updateKeyStatus_('usable');\n    this.updatePromise_.resolve();\n    this.updatePromise_ = null;\n  }\n};\n\n\n/**\n * Handler for the native keyerror event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyError_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyError_', event);\n\n  let error = new Error('EME PatchedMediaKeysMs key error');\n  error.errorCode = this.nativeMediaKeySession_.error;\n\n  if (this.generateRequestPromise_ != null) {\n    this.generateRequestPromise_.reject(error);\n    this.generateRequestPromise_ = null;\n  } else if (this.updatePromise_ != null) {\n    this.updatePromise_.reject(error);\n    this.updatePromise_ = null;\n  } else {\n    // Unexpected error - map native codes to standardised key statuses.\n    // Possible values of this.nativeMediaKeySession_.error.code:\n    // MS_MEDIA_KEYERR_UNKNOWN        = 1\n    // MS_MEDIA_KEYERR_CLIENT         = 2\n    // MS_MEDIA_KEYERR_SERVICE        = 3\n    // MS_MEDIA_KEYERR_OUTPUT         = 4\n    // MS_MEDIA_KEYERR_HARDWARECHANGE = 5\n    // MS_MEDIA_KEYERR_DOMAIN         = 6\n\n    switch (this.nativeMediaKeySession_.error.code) {\n      case MSMediaKeyError.MS_MEDIA_KEYERR_OUTPUT:\n      case MSMediaKeyError.MS_MEDIA_KEYERR_HARDWARECHANGE:\n        this.updateKeyStatus_('output-not-allowed');\n        break;\n      default:\n        this.updateKeyStatus_('internal-error');\n        break;\n    }\n  }\n};\n\n\n/**\n * Updates key status and dispatch a 'keystatuseschange' event.\n *\n * @param {string} status\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    updateKeyStatus_ = function(status) {\n  this.keyStatuses.setStatus(status);\n  let event = new shaka.util.FakeEvent('keystatuseschange');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * An implementation of MediaKeyStatusMap.\n * This fakes a map with a single key ID.\n *\n * @constructor\n * @struct\n * @implements {MediaKeyStatusMap}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap = function() {\n  /**\n   * @type {number}\n   */\n  this.size = 0;\n\n  /**\n   * @private {string|undefined}\n   */\n  this.status_ = undefined;\n};\n\n\n/**\n * @const {!ArrayBuffer}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n\n\n/**\n * An internal method used by the session to set key status.\n * @param {string|undefined} status\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    setStatus = function(status) {\n  this.size = status == undefined ? 0 : 1;\n  this.status_ = status;\n};\n\n\n/**\n * An internal method used by the session to get key status.\n * @return {string|undefined}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    getStatus = function() {\n  return this.status_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    forEach = function(fn) {\n  if (this.status_) {\n    let fakeKeyId =\n        shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n    fn(this.status_, fakeKeyId);\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    get = function(keyId) {\n  if (this.has(keyId)) {\n    return this.status_;\n  }\n  return undefined;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    has = function(keyId) {\n  let fakeKeyId =\n      shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n  if (this.status_ &&\n      shaka.util.Uint8ArrayUtils.equal(\n          new Uint8Array(keyId), new Uint8Array(fakeKeyId))) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    entries = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    keys = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    values = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysMs.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.Fullscreen');\n\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.Fullscreen\n *\n * @summary A polyfill to unify fullscreen APIs across browsers.\n * Many browsers have prefixed fullscreen methods on Element and document.\n * See {@link https://mzl.la/2K0xcHo Using fullscreen mode} on MDN for more\n * information.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.Fullscreen.install = function() {\n  if (!window.Document) {\n    // Avoid errors on very old browsers.\n    return;\n  }\n\n  let proto = Element.prototype;\n  proto.requestFullscreen = proto.requestFullscreen ||\n                            proto.mozRequestFullScreen ||\n                            proto.msRequestFullscreen ||\n                            proto.webkitRequestFullscreen;\n\n  proto = Document.prototype;\n  proto.exitFullscreen = proto.exitFullscreen ||\n                         proto.mozCancelFullScreen ||\n                         proto.msExitFullscreen ||\n                         proto.webkitExitFullscreen;\n\n  if (!('fullscreenElement' in document)) {\n    Object.defineProperty(document, 'fullscreenElement', {\n      get: function() {\n        return document.mozFullScreenElement ||\n               document.msFullscreenElement ||\n               document.webkitFullscreenElement;\n      },\n    });\n    Object.defineProperty(document, 'fullscreenEnabled', {\n      get: function() {\n        return document.mozFullScreenEnabled ||\n               document.msFullscreenEnabled ||\n               document.webkitSupportsFullscreen ||\n               document.webkitFullscreenEnabled;\n      },\n    });\n  }\n\n  let proxy = shaka.polyfill.Fullscreen.proxyEvent_;\n  document.addEventListener('webkitfullscreenchange', proxy);\n  document.addEventListener('webkitfullscreenerror', proxy);\n  document.addEventListener('mozfullscreenchange', proxy);\n  document.addEventListener('mozfullscreenerror', proxy);\n  document.addEventListener('MSFullscreenChange', proxy);\n  document.addEventListener('MSFullscreenError', proxy);\n};\n\n\n/**\n * Proxy fullscreen events after changing their name.\n * @param {!Event} event\n * @private\n */\nshaka.polyfill.Fullscreen.proxyEvent_ = function(event) {\n  let eventType = event.type.replace(/^(webkit|moz|MS)/, '').toLowerCase();\n\n  let newEvent;\n  // IE 11 does not have an Event constructor\n  if (typeof(Event) === 'function') {\n    newEvent = new Event(eventType, /** @type {EventInit} */(event));\n  } else {\n    newEvent = document.createEvent('Event');\n    newEvent.initEvent(eventType, event.bubbles, event.cancelable);\n  }\n\n  event.target.dispatchEvent(newEvent);\n};\n\n\nshaka.polyfill.register(shaka.polyfill.Fullscreen.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.InputEvent');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.InputEvent\n *\n * @summary A polyfill to patch 'input' event support in IE11.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.InputEvent.install = function() {\n  shaka.log.debug('InputEvent.install');\n\n  // IE11 doesn't treat the 'input' event correctly.\n  // https://bit.ly/2loLsuX\n\n  if (!shaka.util.Platform.isIE()) {\n    // Not IE, so don't patch anything.\n    return;\n  }\n\n  // In our tests, we can end up with multiple independent \"shaka\" namespaces.\n  // So we can't compare addEventListener with the polyfill directly.\n  // Instead, store the original in a globally accessible place and check if\n  // that has been used yet.\n  if (HTMLInputElement.prototype['originalAddEventListener']) {\n    // The polyfill was already installed.\n    return;\n  }\n\n  shaka.log.info('Patching input event support on IE.');\n\n  HTMLInputElement.prototype['originalAddEventListener'] =\n      HTMLInputElement.prototype.addEventListener;\n\n  HTMLInputElement.prototype['addEventListener'] =\n      shaka.polyfill.InputEvent.addEventListener_;\n};\n\n\n/**\n * Add an event listener to this object and translate the event types to those\n * that work on IE11.\n *\n * @param {string} type\n * @param {EventListener|function(!Event):(boolean|undefined)} listener\n * @param {(!AddEventListenerOptions|boolean)=} options\n * @this {HTMLInputElement}\n * @private\n */\nshaka.polyfill.InputEvent.addEventListener_ =\n    function(type, listener, options) {\n  if (type == 'input') {\n    // Based on the type of input element, translate the HTML5 'input' event to\n    // one that IE11 will actually dispatch.\n\n    switch (this.type) {\n      // For range inputs, we use the 'change' event.\n      case 'range':\n        type = 'change';\n        break;\n    }\n  }\n\n  HTMLInputElement.prototype['originalAddEventListener'].call(\n      this, type, listener, options);\n};\n\n\nshaka.polyfill.register(shaka.polyfill.InputEvent.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.MediaSource');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Platform');\n\n/**\n * @namespace shaka.polyfill.MediaSource\n *\n * @summary A polyfill to patch MSE bugs.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.MediaSource.install = function() {\n  shaka.log.debug('MediaSource.install');\n\n  // MediaSource bugs are difficult to detect without checking for the affected\n  // platform.  SourceBuffer is not always exposed on window, for example, and\n  // instances are only accessible after setting up MediaSource on a video\n  // element.  Because of this, we use UA detection and other platform detection\n  // tricks to decide which patches to install.\n\n  if (!window.MediaSource) {\n    shaka.log.info('No MSE implementation available.');\n  } else if (window.cast && cast.__platform__ &&\n             cast.__platform__.canDisplayType) {\n    shaka.log.info('Patching Chromecast MSE bugs.');\n    // Chromecast cannot make accurate determinations via isTypeSupported.\n    shaka.polyfill.MediaSource.patchCastIsTypeSupported_();\n  } else if (shaka.util.Platform.isApple()) {\n    let version = navigator.appVersion;\n\n    // TS content is broken on Safari in general.\n    // See https://github.com/google/shaka-player/issues/743\n    // and https://bugs.webkit.org/show_bug.cgi?id=165342\n    shaka.polyfill.MediaSource.rejectTsContent_();\n\n    if (version.includes('Version/8')) {\n      // Safari 8 does not implement appendWindowEnd.  If we ignore the\n      // incomplete MSE implementation, some content (especially multi-period)\n      // will fail to play correctly.  The best we can do is blacklist Safari 8.\n      shaka.log.info('Blacklisting Safari 8 MSE.');\n      shaka.polyfill.MediaSource.blacklist_();\n    } else if (version.includes('Version/9')) {\n      shaka.log.info('Patching Safari 9 MSE bugs.');\n      // Safari 9 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() causes a decoder failure, rather than resetting the\n      // decode timestamp as called for by the spec.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=160316\n      shaka.polyfill.MediaSource.stubAbort_();\n    } else if (version.includes('Version/10')) {\n      shaka.log.info('Patching Safari 10 MSE bugs.');\n      // Safari 10 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() before appending a segment causes that segment to be\n      // incomplete in buffer.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165342\n      shaka.polyfill.MediaSource.stubAbort_();\n      // Safari 10 fires spurious 'updateend' events after endOfStream().\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165336\n      shaka.polyfill.MediaSource.patchEndOfStreamEvents_();\n    } else if (version.includes('Version/11') ||\n               version.includes('Version/12')) {\n      shaka.log.info('Patching Safari 11/12 MSE bugs.');\n      // Safari 11 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() before appending a segment causes that segment to be\n      // incomplete in the buffer.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165342\n      shaka.polyfill.MediaSource.stubAbort_();\n      // If you remove up to a keyframe, Safari 11 incorrectly will also remove\n      // that keyframe and the content up to the next.\n      // Offsetting the end of the removal range seems to help.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=177884\n      shaka.polyfill.MediaSource.patchRemovalRange_();\n    }\n  } else if (shaka.util.Platform.isTizen()) {\n    // Tizen's implementation of MSE does not work well with opus. To prevent\n    // the player from trying to play opus on Tizen, we will override media\n    // source to always reject opus content.\n\n    shaka.polyfill.MediaSource.rejectCodec_('opus');\n  } else {\n    shaka.log.info('Using native MSE as-is.');\n  }\n};\n\n\n/**\n * Blacklist the current browser by removing media source. A side-effect of this\n * will be to make |shaka.util.Platform.supportsMediaSource| return |false|.\n *\n * @private\n */\nshaka.polyfill.MediaSource.blacklist_ = function() {\n  window['MediaSource'] = null;\n};\n\n\n/**\n * Stub out abort().  On some buggy MSE implementations, calling abort() causes\n * various problems.\n *\n * @private\n */\nshaka.polyfill.MediaSource.stubAbort_ = function() {\n  const addSourceBuffer = MediaSource.prototype.addSourceBuffer;\n  MediaSource.prototype.addSourceBuffer = function(...varArgs) {\n    let sourceBuffer = addSourceBuffer.apply(this, varArgs);\n    sourceBuffer.abort = function() {};  // Stub out for buggy implementations.\n    return sourceBuffer;\n  };\n};\n\n\n/**\n * Patch remove().  On Safari 11, if you call remove() to remove the content up\n * to a keyframe, Safari will also remove the keyframe and all of the data up to\n * the next one. For example, if the keyframes are at 0s, 5s, and 10s, and you\n * tried to remove 0s-5s, it would instead remove 0s-10s.\n *\n * Offsetting the end of the range seems to be a usable workaround.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchRemovalRange_ = function() {\n  const originalRemove = SourceBuffer.prototype.remove;\n\n  SourceBuffer.prototype.remove = function(startTime, endTime) {\n    return originalRemove.call(this, startTime, endTime - 0.001);\n  };\n};\n\n\n/**\n * Patch endOfStream() to get rid of 'updateend' events that should not fire.\n * These extra events confuse MediaSourceEngine, which relies on correct events\n * to manage SourceBuffer state.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchEndOfStreamEvents_ = function() {\n  const endOfStream = MediaSource.prototype.endOfStream;\n  MediaSource.prototype.endOfStream = function(...varArgs) {\n    // This bug manifests only when endOfStream() results in the truncation\n    // of the MediaSource's duration.  So first we must calculate what the\n    // new duration will be.\n    let newDuration = 0;\n    for (let i = 0; i < this.sourceBuffers.length; ++i) {\n      let buffer = this.sourceBuffers[i];\n      let bufferEnd = buffer.buffered.end(buffer.buffered.length - 1);\n      newDuration = Math.max(newDuration, bufferEnd);\n    }\n\n    // If the duration is going to be reduced, suppress the next 'updateend'\n    // event on each SourceBuffer.\n    if (!isNaN(this.duration) &&\n        newDuration < this.duration) {\n      this.ignoreUpdateEnd_ = true;\n      for (let i = 0; i < this.sourceBuffers.length; ++i) {\n        let buffer = this.sourceBuffers[i];\n        buffer.eventSuppressed_ = false;\n      }\n    }\n\n    return endOfStream.apply(this, varArgs);\n  };\n\n  let cleanUpHandlerInstalled = false;\n  let addSourceBuffer = MediaSource.prototype.addSourceBuffer;\n  MediaSource.prototype.addSourceBuffer = function(...varArgs) {\n    // After adding a new source buffer, add an event listener to allow us to\n    // suppress events.\n    let sourceBuffer = addSourceBuffer.apply(this, varArgs);\n    sourceBuffer['mediaSource_'] = this;\n    sourceBuffer.addEventListener('updateend',\n        shaka.polyfill.MediaSource.ignoreUpdateEnd_, false);\n\n    if (!cleanUpHandlerInstalled) {\n      // If we haven't already, install an event listener to allow us to clean\n      // up listeners when MediaSource is torn down.\n      this.addEventListener('sourceclose',\n          shaka.polyfill.MediaSource.cleanUpListeners_, false);\n      cleanUpHandlerInstalled = true;\n    }\n    return sourceBuffer;\n  };\n};\n\n\n/**\n * An event listener for 'updateend' which selectively suppresses the events.\n *\n * @see shaka.polyfill.MediaSource.patchEndOfStreamEvents_\n *\n * @param {Event} event\n * @private\n */\nshaka.polyfill.MediaSource.ignoreUpdateEnd_ = function(event) {\n  let sourceBuffer = event.target;\n  let mediaSource = sourceBuffer['mediaSource_'];\n\n  if (mediaSource.ignoreUpdateEnd_) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    sourceBuffer.eventSuppressed_ = true;\n\n    for (let i = 0; i < mediaSource.sourceBuffers.length; ++i) {\n      let buffer = mediaSource.sourceBuffers[i];\n      if (buffer.eventSuppressed_ == false) {\n        // More events need to be suppressed.\n        return;\n      }\n    }\n\n    // All events have been suppressed, all buffers are out of 'updating'\n    // mode.  Stop suppressing events.\n    mediaSource.ignoreUpdateEnd_ = false;\n  }\n};\n\n\n/**\n * An event listener for 'sourceclose' which cleans up listeners for 'updateend'\n * to avoid memory leaks.\n *\n * @see shaka.polyfill.MediaSource.patchEndOfStreamEvents_\n * @see shaka.polyfill.MediaSource.ignoreUpdateEnd_\n *\n * @param {Event} event\n * @private\n */\nshaka.polyfill.MediaSource.cleanUpListeners_ = function(event) {\n  let mediaSource = /** @type {!MediaSource} */ (event.target);\n  for (let i = 0; i < mediaSource.sourceBuffers.length; ++i) {\n    let buffer = mediaSource.sourceBuffers[i];\n    buffer.removeEventListener('updateend',\n        shaka.polyfill.MediaSource.ignoreUpdateEnd_, false);\n  }\n  mediaSource.removeEventListener('sourceclose',\n      shaka.polyfill.MediaSource.cleanUpListeners_, false);\n};\n\n\n/**\n * Patch isTypeSupported() to reject TS content.  Used to avoid TS-related MSE\n * bugs on Safari.\n *\n * @private\n */\nshaka.polyfill.MediaSource.rejectTsContent_ = function() {\n  const originalIsTypeSupported = MediaSource.isTypeSupported;\n\n  MediaSource.isTypeSupported = function(mimeType) {\n    // Parse the basic MIME type from its parameters.\n    let pieces = mimeType.split(/ *; */);\n    let basicMimeType = pieces[0];\n    let container = basicMimeType.split('/')[1];\n\n    if (container.toLowerCase() == 'mp2t') {\n      return false;\n    }\n\n    return originalIsTypeSupported(mimeType);\n  };\n};\n\n\n/**\n * Patch |MediaSource.isTypeSupported| to always reject |codec|. This is used\n * when we know that we are on a platform that does not work well with a given\n * codec.\n *\n * @param {string} codec\n * @private\n */\nshaka.polyfill.MediaSource.rejectCodec_ = function(codec) {\n  const isTypeSupported = MediaSource.isTypeSupported;\n\n  MediaSource.isTypeSupported = (mimeType) => {\n    const actualCodec = shaka.util.MimeUtils.getCodecBase(mimeType);\n    return actualCodec != codec && isTypeSupported(mimeType);\n  };\n};\n\n\n/**\n * Patch isTypeSupported() to parse for HDR-related clues and chain to a private\n * API on the Chromecast which can query for support.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchCastIsTypeSupported_ = function() {\n  const originalIsTypeSupported = MediaSource.isTypeSupported;\n\n  // Docs from Dolby detailing profile names: https://bit.ly/2T2wKbu\n  let dolbyVisionRegex = /^dv(?:h[e1]|a[v1])\\./;\n\n  MediaSource.isTypeSupported = function(mimeType) {\n    // Parse the basic MIME type from its parameters.\n    let pieces = mimeType.split(/ *; */);\n    let basicMimeType = pieces[0];\n\n    // Parse the parameters into key-value pairs.\n    /** @type {Object.<string, string>} */\n    let parameters = {};\n    for (let i = 1; i < pieces.length; ++i) {\n      let kv = pieces[i].split('=');\n      let k = kv[0];\n      let v = kv[1].replace(/\"(.*)\"/, '$1');\n      parameters[k] = v;\n    }\n\n    let codecs = parameters['codecs'];\n    if (!codecs) {\n      return originalIsTypeSupported(mimeType);\n    }\n\n    let isHDR = false;\n    let isDolbyVision = false;\n\n    let codecList = codecs.split(',').filter(function(codec) {\n      if (dolbyVisionRegex.test(codec)) {\n        isDolbyVision = true;\n      }\n\n      // We take this string as a signal for HDR, but don't remove it.\n      if (/^(hev|hvc)1\\.2/.test(codec)) {\n        isHDR = true;\n      }\n\n      // Keep all other strings in the list.\n      return true;\n    });\n\n    // If the content uses Dolby Vision, we take this as a sign that the content\n    // is not HDR after all.\n    if (isDolbyVision) isHDR = false;\n\n    // Reconstruct the \"codecs\" parameter from the results of the filter.\n    parameters['codecs'] = codecList.join(',');\n\n    // If the content is HDR, we add this additional parameter so that the Cast\n    // platform will check for HDR support.\n    if (isHDR) {\n      parameters['eotf'] = 'smpte2084';\n    }\n\n    // Reconstruct the MIME type, possibly with additional parameters.\n    let extendedMimeType = basicMimeType;\n    for (let k in parameters) {\n      let v = parameters[k];\n      extendedMimeType += '; ' + k + '=\"' + v + '\"';\n    }\n    return cast.__platform__.canDisplayType(extendedMimeType);\n  };\n};\n\n\nshaka.polyfill.register(shaka.polyfill.MediaSource.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Pssh');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Parse a PSSH box and extract the system IDs.\n *\n * @param {!Uint8Array} psshBox\n * @constructor\n * @struct\n * @throws {shaka.util.Error} if a PSSH box is truncated or contains a size\n *   field over 53 bits.\n */\nshaka.util.Pssh = function(psshBox) {\n  /**\n   * In hex.\n   * @type {!Array.<string>}\n   */\n  this.systemIds = [];\n\n  /**\n   * In hex.\n   * @type {!Array.<string>}\n   */\n  this.cencKeyIds = [];\n\n  /*\n  * Array of tuples that define the startIndex + size for each\n  * discrete pssh within |psshBox|\n  * */\n  this.dataBoundaries = [];\n\n  new shaka.util.Mp4Parser()\n      .fullBox('pssh', this.parseBox_.bind(this)).parse(psshBox.buffer);\n\n  if (this.dataBoundaries.length == 0) {\n    shaka.log.warning('No pssh box found!');\n  }\n};\n\n\n/**\n * @param {!shaka.extern.ParsedBox} box\n * @private\n */\nshaka.util.Pssh.prototype.parseBox_ = function(box) {\n  goog.asserts.assert(\n      box.version != null,\n      'PSSH boxes are full boxes and must have a valid version');\n\n  goog.asserts.assert(\n      box.flags != null,\n      'PSSH boxes are full boxes and must have a valid flag');\n\n  if (box.version > 1) {\n    shaka.log.warning('Unrecognized PSSH version found!');\n    return;\n  }\n\n  let systemId = shaka.util.Uint8ArrayUtils.toHex(box.reader.readBytes(16));\n  let keyIds = [];\n  if (box.version > 0) {\n    let numKeyIds = box.reader.readUint32();\n    for (let i = 0; i < numKeyIds; ++i) {\n      let keyId = shaka.util.Uint8ArrayUtils.toHex(box.reader.readBytes(16));\n      keyIds.push(keyId);\n    }\n  }\n\n  let dataSize = box.reader.readUint32();\n  box.reader.skip(dataSize);  // Ignore the data section.\n\n  // Now that everything has been succesfully parsed from this box,\n  // update member variables.\n  this.cencKeyIds.push.apply(this.cencKeyIds, keyIds);\n  this.systemIds.push(systemId);\n  this.dataBoundaries.push({\n    start: box.start,\n    end: box.start + box.size - 1,\n  });\n\n  if (box.reader.getPosition() != box.reader.getLength()) {\n    shaka.log.warning('Mismatch between box size and data size!');\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysNop');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysNop\n *\n * @summary A polyfill to stub out\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015} on browsers without\n * EME.\n * All methods will fail.\n */\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysNop.install = function() {\n  if (!window.HTMLVideoElement ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  shaka.log.info('EME not available.');\n\n  // Alias.\n  const PatchedMediaKeysNop = shaka.polyfill.PatchedMediaKeysNop;\n\n  // Install patches.\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysNop.requestMediaKeySystemAccess;\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysNop.setMediaKeys;\n  // These are not usable, but allow Player.isBrowserSupported to pass.\n  window.MediaKeys = PatchedMediaKeysNop.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysNop.MediaKeySystemAccess;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysNop.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysNop.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n\n  return Promise.reject(new Error(\n      'The key system specified is not supported.'));\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysNop.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysNop.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  if (mediaKeys == null) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject(new Error('MediaKeys not supported.'));\n};\n\n\n/**\n * An unusable constructor for MediaKeys.\n * @constructor\n * @struct\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys = function() {\n  throw new TypeError('Illegal constructor.');\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.createSession =\n    function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.setServerCertificate =\n    function() {};\n\n\n/**\n * An unusable constructor for MediaKeySystemAccess.\n * @constructor\n * @struct\n * @implements {MediaKeySystemAccess}\n */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess = function() {\n  throw new TypeError('Illegal constructor.');\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    keySystem;\n\n\n// A low priority ensures this is the last and acts as a fallback.\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysNop.install, -10);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.IndexedDB');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.IndexedDB\n *\n * @summary A polyfill to patch IndexedDB bugs.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.IndexedDB.install = function() {\n  shaka.log.debug('IndexedDB.install');\n\n  if (shaka.util.Platform.isChromecast()) {\n    shaka.log.debug('Removing IndexedDB from ChromeCast');\n    delete window.indexedDB;\n    goog.asserts.assert(\n        !window.indexedDB, 'Failed to override window.indexedDB');\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.IndexedDB.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.Languages');\n\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.Languages\n *\n * @summary A polyfill to provide navigator.languages on all browsers.\n * This is necessary for IE and possibly others we have yet to discover.\n */\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.Languages.install = function() {\n  if (navigator.languages) {\n    // No need.\n    return;\n  }\n\n  Object.defineProperty(navigator, 'languages', {\n    get: () => {\n      // If the browser provides a single language (all that we've seen), then\n      // make an array out of that.  Otherwise, return English.\n      if (navigator.language) {\n        return [navigator.language];\n      }\n      return ['en'];\n    },\n  });\n};\n\nshaka.polyfill.register(shaka.polyfill.Languages.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ngoog.provide('shaka.polyfill.MathRound');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n/**\n * @namespace shaka.polyfill.MathRound\n *\n * @summary A polyfill to patch math round bug on some browsers.\n * @see https://stackoverflow.com/q/12830742\n */\n\n\n/**\n @const {number}\n @private\n */\nshaka.polyfill.MathRound.MAX_ACCURATE_INPUT_ = 0x10000000000000;\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.MathRound.install = function() {\n  shaka.log.debug('mathRound.install');\n\n  let testNumber = shaka.polyfill.MathRound.MAX_ACCURATE_INPUT_ + 1;\n  if (Math.round(testNumber) != testNumber) {\n    shaka.log.debug('polyfill Math.round');\n    let originalMathRound = Math.round;\n    Math.round = function(number) {\n      let result = number;\n      // Due to the precision of JavaScript numbers, the number must be integer.\n      if (number <= shaka.polyfill.MathRound.MAX_ACCURATE_INPUT_) {\n        result = originalMathRound(number);\n      }\n      return result;\n    };\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.MathRound.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysWebkit');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Timer');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysWebkit\n *\n * @summary A polyfill to implement\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015} on top of\n * webkit-prefixed {@link https://bit.ly/Eme01b EME v0.1b}.\n */\n\n\n/**\n * Store api prefix.\n *\n * @private {string}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.prefix_ = '';\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysWebkit.install = function() {\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  const prefixApi = PatchedMediaKeysWebkit.prefixApi_;\n\n  if (!window.HTMLVideoElement ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  if (HTMLMediaElement.prototype.webkitGenerateKeyRequest) {\n    shaka.log.info('Using webkit-prefixed EME v0.1b');\n    PatchedMediaKeysWebkit.prefix_ = 'webkit';\n  } else if (HTMLMediaElement.prototype.generateKeyRequest) {\n    shaka.log.info('Using nonprefixed EME v0.1b');\n  } else {\n    return;\n  }\n\n  goog.asserts.assert(\n      HTMLMediaElement.prototype[prefixApi('generateKeyRequest')],\n                      'PatchedMediaKeysWebkit APIs not available!');\n\n  // Construct a fake key ID.  This is not done at load-time to avoid exceptions\n  // on unsupported browsers.  This particular fake key ID was suggested in\n  // w3c/encrypted-media#32.\n  PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_ =\n      (new Uint8Array([0])).buffer;\n\n  // Install patches.\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysWebkit.requestMediaKeySystemAccess;\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysWebkit.setMediaKeys;\n  window.MediaKeys = PatchedMediaKeysWebkit.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysWebkit.MediaKeySystemAccess;\n};\n\n\n/**\n * Prefix the api with the stored prefix.\n *\n * @param {string} api\n * @return {string}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.prefixApi_ = function(api) {\n  let prefix = shaka.polyfill.PatchedMediaKeysWebkit.prefix_;\n  if (prefix) {\n    return prefix + api.charAt(0).toUpperCase() + api.slice(1);\n  }\n  return api;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysWebkit.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  try {\n    let access = new PatchedMediaKeysWebkit.MediaKeySystemAccess(\n        keySystem, supportedConfigurations);\n    return Promise.resolve(/** @type {!MediaKeySystemAccess} */ (access));\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysWebkit.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n\n  let newMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys} */ (\n          mediaKeys);\n  let oldMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys} */ (\n          this.mediaKeys);\n\n  if (oldMediaKeys && oldMediaKeys != newMediaKeys) {\n    goog.asserts.assert(\n        oldMediaKeys instanceof PatchedMediaKeysWebkit.MediaKeys,\n        'non-polyfill instance of oldMediaKeys');\n    // Have the old MediaKeys stop listening to events on the video tag.\n    oldMediaKeys.setMedia(null);\n  }\n\n  delete this['mediaKeys'];  // In case there is an existing getter.\n  this['mediaKeys'] = mediaKeys;  // Work around the read-only declaration.\n\n  if (newMediaKeys) {\n    goog.asserts.assert(\n        newMediaKeys instanceof PatchedMediaKeysWebkit.MediaKeys,\n        'non-polyfill instance of newMediaKeys');\n    newMediaKeys.setMedia(this);\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * For some of this polyfill's implementation, we need to query a video element.\n * But for some embedded systems, it is memory-expensive to create multiple\n * video elements.  Therefore, we check the document to see if we can borrow one\n * to query before we fall back to creating one temporarily.\n *\n * @return {!HTMLVideoElement}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.getVideoElement_ = function() {\n  let videos = document.getElementsByTagName('video');\n  let tmpVideo = videos.length ? videos[0] : document.createElement('video');\n  return /** @type {!HTMLVideoElement} */(tmpVideo);\n};\n\n\n/**\n * An implementation of MediaKeySystemAccess.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @implements {MediaKeySystemAccess}\n * @throws {Error} if the key system is not supported.\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySystemAccess');\n\n  /** @type {string} */\n  this.keySystem = keySystem;\n\n  /** @private {string} */\n  this.internalKeySystem_ = keySystem;\n\n  /** @private {!MediaKeySystemConfiguration} */\n  this.configuration_;\n\n  // This is only a guess, since we don't really know from the prefixed API.\n  let allowPersistentState = false;\n\n  if (keySystem == 'org.w3.clearkey') {\n    // ClearKey's string must be prefixed in v0.1b.\n    this.internalKeySystem_ = 'webkit-org.w3.clearkey';\n    // ClearKey doesn't support persistence.\n    allowPersistentState = false;\n  }\n\n  let success = false;\n  let tmpVideo = shaka.polyfill.PatchedMediaKeysWebkit.getVideoElement_();\n  for (let i = 0; i < supportedConfigurations.length; ++i) {\n    let cfg = supportedConfigurations[i];\n\n    // Create a new config object and start adding in the pieces which we\n    // find support for.  We will return this from getConfiguration() if asked.\n    /** @type {!MediaKeySystemConfiguration} */\n    let newCfg = {\n      'audioCapabilities': [],\n      'videoCapabilities': [],\n      // It is technically against spec to return these as optional, but we\n      // don't truly know their values from the prefixed API:\n      'persistentState': 'optional',\n      'distinctiveIdentifier': 'optional',\n      // Pretend the requested init data types are supported, since we don't\n      // really know that either:\n      'initDataTypes': cfg.initDataTypes,\n      'sessionTypes': ['temporary'],\n      'label': cfg.label,\n    };\n\n    // v0.1b tests for key system availability with an extra argument on\n    // canPlayType.\n    let ranAnyTests = false;\n    if (cfg.audioCapabilities) {\n      for (let j = 0; j < cfg.audioCapabilities.length; ++j) {\n        let cap = cfg.audioCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          // In Chrome <= 40, if you ask about Widevine-encrypted audio support,\n          // you get a false-negative when you specify codec information.\n          // Work around this by stripping codec info for audio types.\n          let contentType = cap.contentType.split(';')[0];\n          if (tmpVideo.canPlayType(contentType, this.internalKeySystem_)) {\n            newCfg.audioCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n    if (cfg.videoCapabilities) {\n      for (let j = 0; j < cfg.videoCapabilities.length; ++j) {\n        let cap = cfg.videoCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          if (tmpVideo.canPlayType(cap.contentType, this.internalKeySystem_)) {\n            newCfg.videoCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n\n    if (!ranAnyTests) {\n      // If no specific types were requested, we check all common types to find\n      // out if the key system is present at all.\n      success = tmpVideo.canPlayType('video/mp4', this.internalKeySystem_) ||\n                tmpVideo.canPlayType('video/webm', this.internalKeySystem_);\n    }\n    if (cfg.persistentState == 'required') {\n      if (allowPersistentState) {\n        newCfg.persistentState = 'required';\n        newCfg.sessionTypes = ['persistent-license'];\n      } else {\n        success = false;\n      }\n    }\n\n    if (success) {\n      this.configuration_ = newCfg;\n      return;\n    }\n  }  // for each cfg in supportedConfigurations\n\n  let message = 'Unsupported keySystem';\n  if (keySystem == 'org.w3.clearkey' || keySystem == 'com.widevine.alpha') {\n    message = 'None of the requested configurations were supported.';\n  }\n  let unsupportedError = new Error(message);\n  unsupportedError.name = 'NotSupportedError';\n  unsupportedError.code = DOMException.NOT_SUPPORTED_ERR;\n  throw unsupportedError;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {\n  shaka.log.debug(\n      'PatchedMediaKeysWebkit.MediaKeySystemAccess.createMediaKeys');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  let mediaKeys = new PatchedMediaKeysWebkit.MediaKeys(this.internalKeySystem_);\n  return Promise.resolve(/** @type {!MediaKeys} */ (mediaKeys));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {\n  shaka.log.debug(\n      'PatchedMediaKeysWebkit.MediaKeySystemAccess.getConfiguration');\n  return this.configuration_;\n};\n\n\n/**\n * An implementation of MediaKeys.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys = function(keySystem) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys');\n\n  /** @private {string} */\n  this.keySystem_ = keySystem;\n\n  /** @private {HTMLMediaElement} */\n  this.media_ = null;\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /**\n   * @private {!Array.<!shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession>}\n   */\n  this.newSessions_ = [];\n\n  /**\n   * @private {!Object.<string,\n   *                    !shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession>}\n   */\n  this.sessionMap_ = {};\n};\n\n\n/**\n * @param {HTMLMediaElement} media\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setMedia =\n    function(media) {\n  this.media_ = media;\n\n  // Remove any old listeners.\n  this.eventManager_.removeAll();\n\n  let prefix = shaka.polyfill.PatchedMediaKeysWebkit.prefix_;\n  if (media) {\n    // Intercept and translate these prefixed EME events.\n    this.eventManager_.listen(media, prefix + 'needkey',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitNeedKey_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keymessage',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyMessage_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keyadded',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyAdded_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keyerror',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyError_.bind(this)));\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.createSession =\n    function(sessionType) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.createSession');\n\n  sessionType = sessionType || 'temporary';\n  if (sessionType != 'temporary' && sessionType != 'persistent-license') {\n    throw new TypeError('Session type ' + sessionType +\n                        ' is unsupported on this platform.');\n  }\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n\n  // Unprefixed EME allows for session creation without a video tag or src.\n  // Prefixed EME requires both a valid HTMLMediaElement and a src.\n  let media = this.media_ || /** @type {!HTMLMediaElement} */(\n      document.createElement('video'));\n  if (!media.src) media.src = 'about:blank';\n\n  let session = new PatchedMediaKeysWebkit.MediaKeySession(\n      media, this.keySystem_, sessionType);\n  this.newSessions_.push(session);\n  return session;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setServerCertificate =\n    function(serverCertificate) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.setServerCertificate');\n\n  // There is no equivalent in v0.1b, so return failure.\n  return Promise.resolve(false);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitNeedKey_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitNeedKey_', event);\n  goog.asserts.assert(this.media_, 'media_ not set in onWebkitNeedKey_');\n\n  let event2 =\n      /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n  event2.initCustomEvent('encrypted', false, false, null);\n\n  // not used by v0.1b EME, but given a valid value\n  event2.initDataType = 'webm';\n  event2.initData = event.initData;\n\n  this.media_.dispatchEvent(event2);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyMessage_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyMessage_', event);\n\n  let session = this.findSession_(event.sessionId);\n  if (!session) {\n    shaka.log.error('Session not found', event.sessionId);\n    return;\n  }\n\n  let isNew = session.keyStatuses.getStatus() == undefined;\n\n  let event2 = new shaka.util.FakeEvent('message', {\n    messageType: isNew ? 'licenserequest' : 'licenserenewal',\n    message: event.message,\n  });\n\n  session.generated();\n  session.dispatchEvent(event2);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyAdded_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyAdded_', event);\n\n  let session = this.findSession_(event.sessionId);\n  goog.asserts.assert(session, 'unable to find session in onWebkitKeyAdded_');\n  if (session) {\n    session.ready();\n  }\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyError_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyError_', event);\n\n  let session = this.findSession_(event.sessionId);\n  goog.asserts.assert(session, 'unable to find session in onWebkitKeyError_');\n  if (session) {\n    session.handleError(event);\n  }\n};\n\n\n/**\n * @param {string} sessionId\n * @return {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.findSession_ =\n    function(sessionId) {\n  let session = this.sessionMap_[sessionId];\n  if (session) {\n    shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.findSession_', session);\n    return session;\n  }\n\n  session = this.newSessions_.shift();\n  if (session) {\n    session.sessionId = sessionId;\n    this.sessionMap_[sessionId] = session;\n    shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.findSession_', session);\n    return session;\n  }\n\n  return null;\n};\n\n\n/**\n * An implementation of MediaKeySession.\n *\n * @param {!HTMLMediaElement} media\n * @param {string} keySystem\n * @param {string} sessionType\n *\n * @constructor\n * @struct\n * @implements {MediaKeySession}\n * @extends {shaka.util.FakeEventTarget}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession =\n    function(media, keySystem, sessionType) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession');\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {!HTMLMediaElement} */\n  this.media_ = media;\n\n  /** @private {boolean} */\n  this.initialized_ = false;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.generatePromise_ = null;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.updatePromise_ = null;\n\n  /** @private {string} */\n  this.keySystem_ = keySystem;\n\n  /** @private {string} */\n  this.type_ = sessionType;\n\n  /** @type {string} */\n  this.sessionId = '';\n\n  /** @type {number} */\n  this.expiration = NaN;\n\n  /** @type {!shaka.util.PublicPromise} */\n  this.closed = new shaka.util.PublicPromise();\n\n  /** @type {!shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap} */\n  this.keyStatuses =\n      new shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap();\n};\ngoog.inherits(shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession,\n              shaka.util.FakeEventTarget);\n\n\n/**\n * Signals that the license request has been generated.  This resolves the\n * 'generateRequest' promise.\n *\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generated =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.generated');\n\n  if (this.generatePromise_) {\n    this.generatePromise_.resolve();\n    this.generatePromise_ = null;\n  }\n};\n\n\n/**\n * Signals that the session is 'ready', which is the terminology used in older\n * versions of EME.  The new signal is to resolve the 'update' promise.  This\n * translates between the two.\n *\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.ready =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.ready');\n\n  this.updateKeyStatus_('usable');\n\n  if (this.updatePromise_) {\n    this.updatePromise_.resolve();\n  }\n  this.updatePromise_ = null;\n};\n\n\n/**\n * Either rejects a promise, or dispatches an error event, as appropriate.\n *\n * @param {!MediaKeyEvent} event\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.handleError =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.handleError', event);\n\n  // This does not match the DOMException we get in current WD EME, but it will\n  // at least provide some information which can be used to look into the\n  // problem.\n  let error = new Error('EME v0.1b key error');\n  error.errorCode = event.errorCode;\n  error.errorCode.systemCode = event.systemCode;\n\n  // The presence or absence of sessionId indicates whether this corresponds to\n  // generateRequest() or update().\n  if (!event.sessionId && this.generatePromise_) {\n    error.method = 'generateRequest';\n    if (event.systemCode == 45) {\n      error.message = 'Unsupported session type.';\n    }\n    this.generatePromise_.reject(error);\n    this.generatePromise_ = null;\n  } else if (event.sessionId && this.updatePromise_) {\n    error.method = 'update';\n    this.updatePromise_.reject(error);\n    this.updatePromise_ = null;\n  } else {\n    // This mapping of key statuses is imperfect at best.\n    let code = event.errorCode.code;\n    let systemCode = event.systemCode;\n    if (code == MediaKeyError['MEDIA_KEYERR_OUTPUT']) {\n      this.updateKeyStatus_('output-restricted');\n    } else if (systemCode == 1) {\n      this.updateKeyStatus_('expired');\n    } else {\n      this.updateKeyStatus_('internal-error');\n    }\n  }\n};\n\n\n/**\n * Logic which is shared between generateRequest() and load(), both of which\n * are ultimately implemented with webkitGenerateKeyRequest in prefixed EME.\n *\n * @param {?BufferSource} initData\n * @param {?string} offlineSessionId\n * @return {!Promise}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generate_ =\n    function(initData, offlineSessionId) {\n  if (this.initialized_) {\n    return Promise.reject(new Error('The session is already initialized.'));\n  }\n\n  this.initialized_ = true;\n\n  /** @type {!Uint8Array} */\n  let mangledInitData;\n\n  try {\n    if (this.type_ == 'persistent-license') {\n      const StringUtils = shaka.util.StringUtils;\n      if (!offlineSessionId) {\n        // Persisting the initial license.\n        // Prefix the init data with a tag to indicate persistence.\n        let prefix = StringUtils.toUTF8('PERSISTENT|');\n        let result = new Uint8Array(prefix.byteLength + initData.byteLength);\n        result.set(new Uint8Array(prefix), 0);\n        result.set(new Uint8Array(initData), prefix.byteLength);\n        mangledInitData = result;\n      } else {\n        // Loading a stored license.\n        // Prefix the init data (which is really a session ID) with a tag to\n        // indicate that we are loading a persisted session.\n        mangledInitData = new Uint8Array(\n            StringUtils.toUTF8('LOAD_SESSION|' + offlineSessionId));\n      }\n    } else {\n      // Streaming.\n      goog.asserts.assert(this.type_ == 'temporary',\n                          'expected temporary session');\n      goog.asserts.assert(!offlineSessionId,\n                          'unexpected offline session ID');\n      mangledInitData = new Uint8Array(initData);\n    }\n\n    goog.asserts.assert(mangledInitData,\n                        'init data not set!');\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n\n  goog.asserts.assert(this.generatePromise_ == null,\n                      'generatePromise_ should be null');\n  this.generatePromise_ = new shaka.util.PublicPromise();\n\n  // Because we are hacking media.src in createSession to better emulate\n  // unprefixed EME's ability to create sessions and license requests without a\n  // video tag, we can get ourselves into trouble.  It seems that sometimes,\n  // the setting of media.src hasn't been processed by some other thread, and\n  // GKR can throw an exception.  If this occurs, wait 10 ms and try again at\n  // most once.  This situation should only occur when init data is available\n  // ahead of the 'needkey' event.\n\n  let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n  let generateKeyRequestName = prefixApi('generateKeyRequest');\n  try {\n    this.media_[generateKeyRequestName](this.keySystem_, mangledInitData);\n  } catch (exception) {\n    if (exception.name != 'InvalidStateError') {\n      this.generatePromise_ = null;\n      return Promise.reject(exception);\n    }\n\n    const timer = new shaka.util.Timer(() => {\n      try {\n        this.media_[generateKeyRequestName](this.keySystem_, mangledInitData);\n      } catch (exception2) {\n        this.generatePromise_.reject(exception2);\n        this.generatePromise_ = null;\n      }\n    });\n\n    timer.tickAfter(/* seconds= */ 0.01);\n  }\n\n  return this.generatePromise_;\n};\n\n\n/**\n * An internal version of update which defers new calls while old ones are in\n * progress.\n *\n * @param {!shaka.util.PublicPromise} promise  The promise associated with this\n *   call.\n * @param {?BufferSource} response\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update_ =\n    function(promise, response) {\n  if (this.updatePromise_) {\n    // We already have an update in-progress, so defer this one until after the\n    // old one is resolved.  Execute this whether the original one succeeds or\n    // fails.\n    this.updatePromise_.then(\n        this.update_.bind(this, promise, response)\n    ).catch(\n        this.update_.bind(this, promise, response)\n    );\n    return;\n  }\n\n  this.updatePromise_ = promise;\n\n  let key;\n  let keyId;\n\n  if (this.keySystem_ == 'webkit-org.w3.clearkey') {\n    // The current EME version of clearkey wants a structured JSON response.\n    // The v0.1b version wants just a raw key.  Parse the JSON response and\n    // extract the key and key ID.\n    const StringUtils = shaka.util.StringUtils;\n    const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n    let licenseString = StringUtils.fromUTF8(response);\n    let jwkSet = /** @type {JWKSet} */ (JSON.parse(licenseString));\n    let kty = jwkSet.keys[0].kty;\n    if (kty != 'oct') {\n      // Reject the promise.\n      let error = new Error('Response is not a valid JSON Web Key Set.');\n      this.updatePromise_.reject(error);\n      this.updatePromise_ = null;\n    }\n    key = Uint8ArrayUtils.fromBase64(jwkSet.keys[0].k);\n    keyId = Uint8ArrayUtils.fromBase64(jwkSet.keys[0].kid);\n  } else {\n    // The key ID is not required.\n    key = new Uint8Array(response);\n    keyId = null;\n  }\n\n  let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n  let addKeyName = prefixApi('addKey');\n  try {\n    this.media_[addKeyName](this.keySystem_, key, keyId, this.sessionId);\n  } catch (exception) {\n    // Reject the promise.\n    this.updatePromise_.reject(exception);\n    this.updatePromise_ = null;\n  }\n};\n\n\n/**\n * Update key status and dispatch a 'keystatuseschange' event.\n *\n * @param {string} status\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.\n    updateKeyStatus_ = function(status) {\n  this.keyStatuses.setStatus(status);\n  let event = new shaka.util.FakeEvent('keystatuseschange');\n  this.dispatchEvent(event);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.\n    generateRequest = function(initDataType, initData) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.generateRequest');\n  return this.generate_(initData, null);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.load =\n    function(sessionId) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.load');\n  if (this.type_ == 'persistent-license') {\n    return this.generate_(null, sessionId);\n  } else {\n    return Promise.reject(new Error('Not a persistent session.'));\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update =\n    function(response) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.update', response);\n  goog.asserts.assert(this.sessionId, 'update without session ID');\n\n  let nextUpdatePromise = new shaka.util.PublicPromise();\n  this.update_(nextUpdatePromise, response);\n  return nextUpdatePromise;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.close =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.close');\n\n  // This will remove a persistent session, but it's also the only way to\n  // free CDM resources on v0.1b.\n  if (this.type_ != 'persistent-license') {\n    // sessionId may reasonably be null if no key request has been generated\n    // yet.  Unprefixed EME will return a rejected promise in this case.\n    // We will use the same error message that Chrome 41 uses in its EME\n    // implementation.\n    if (!this.sessionId) {\n      this.closed.reject(new Error('The session is not callable.'));\n      return this.closed;\n    }\n\n    // This may throw an exception, but we ignore it because we are only using\n    // it to clean up resources in v0.1b.  We still consider the session closed.\n    // We can't let the exception propagate because MediaKeySession.close()\n    // should not throw.\n    let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n    let cancelKeyRequestName = prefixApi('cancelKeyRequest');\n    try {\n      this.media_[cancelKeyRequestName](this.keySystem_, this.sessionId);\n    } catch (exception) {}\n  }\n\n  // Resolve the 'closed' promise and return it.\n  this.closed.resolve();\n  return this.closed;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.remove =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.remove');\n\n  if (this.type_ != 'persistent-license') {\n    return Promise.reject(new Error('Not a persistent session.'));\n  }\n\n  return this.close();\n};\n\n\n/**\n * An implementation of MediaKeyStatusMap.\n * This fakes a map with a single key ID.\n *\n * @constructor\n * @struct\n * @implements {MediaKeyStatusMap}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap = function() {\n  /**\n   * @type {number}\n   */\n  this.size = 0;\n\n  /**\n   * @private {string|undefined}\n   */\n  this.status_ = undefined;\n};\n\n\n/**\n * @const {!ArrayBuffer}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n\n\n/**\n * An internal method used by the session to set key status.\n * @param {string|undefined} status\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.setStatus =\n    function(status) {\n  this.size = status == undefined ? 0 : 1;\n  this.status_ = status;\n};\n\n\n/**\n * An internal method used by the session to get key status.\n * @return {string|undefined}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.getStatus =\n    function() {\n  return this.status_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.forEach =\n    function(fn) {\n  if (this.status_) {\n    let fakeKeyId =\n        shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n    fn(this.status_, fakeKeyId);\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.get =\n    function(keyId) {\n  if (this.has(keyId)) {\n    return this.status_;\n  }\n  return undefined;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.has =\n    function(keyId) {\n  let fakeKeyId =\n      shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n  if (this.status_ &&\n      shaka.util.Uint8ArrayUtils.equal(\n          new Uint8Array(keyId), new Uint8Array(fakeKeyId))) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    entries = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    keys = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    values = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysWebkit.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PiPWebkit');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n/**\n * @namespace shaka.polyfill.PiPWebkit\n *\n * @summary A polyfill to provide PiP support in Safari.\n * Note that Safari only supports PiP on video elements, not audio.\n */\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.PiPWebkit.install = function() {\n  if (!window.HTMLVideoElement) {\n    // Avoid errors on very old browsers.\n    return;\n  }\n\n  const proto = HTMLVideoElement.prototype;\n  if (proto.requestPictureInPicture &&\n    document.exitPictureInPicture) {\n    // No polyfill needed.\n    return;\n  }\n\n  if (!proto.webkitSupportsPresentationMode) {\n    // No Webkit PiP API available.\n    return;\n  }\n\n  const PiPWebkit = shaka.polyfill.PiPWebkit;\n  shaka.log.debug('PiPWebkit.install');\n\n  // Polyfill document.pictureInPictureEnabled.\n  // It's definitely enabled now.  :-)\n  document.pictureInPictureEnabled = true;\n\n  // Polyfill document.pictureInPictureElement.\n  // This is initially empty.  We don't need getter or setter because we don't\n  // need any special handling when this is set.  We assume in good faith that\n  // applications won't try to set this directly.\n  document.pictureInPictureElement = null;\n\n  // Polyfill HTMLVideoElement.requestPictureInPicture.\n  proto.requestPictureInPicture = PiPWebkit.requestPictureInPicture_;\n\n  // Polyfill document.exitPictureInPicture.\n  document.exitPictureInPicture = PiPWebkit.exitPictureInPicture_;\n\n  // Use the \"capturing\" event phase to get the webkit presentation mode event\n  // from the document.  This way, we get the event on its way from document to\n  // the target element without having to intercept events in every possible\n  // video element.\n  document.addEventListener(\n      'webkitpresentationmodechanged', PiPWebkit.proxyEvent_,\n      /* useCapture= */ true);\n};\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.polyfill.PiPWebkit.proxyEvent_ = function(event) {\n  const PiPWebkit = shaka.polyfill.PiPWebkit;\n  const element = /** @type {!HTMLVideoElement} */(event.target);\n\n  if (element.webkitPresentationMode == PiPWebkit.PIP_MODE_) {\n    // Keep track of the PiP element.  This element just entered PiP mode.\n    document.pictureInPictureElement = element;\n\n    // Dispatch a standard event to match.\n    const event2 = new Event('enterpictureinpicture');\n    element.dispatchEvent(event2);\n  } else {\n    // Keep track of the PiP element.  This element just left PiP mode.\n    // If something else hasn't already take its place, clear it.\n    if (document.pictureInPictureElement == element) {\n      document.pictureInPictureElement = null;\n    }\n\n    // Dispatch a standard event to match.\n    const event2 = new Event('leavepictureinpicture');\n    element.dispatchEvent(event2);\n  }\n};\n\n/**\n * @this {HTMLVideoElement}\n * @return {!Promise}\n * @private\n */\nshaka.polyfill.PiPWebkit.requestPictureInPicture_ = function() {\n  const PiPWebkit = shaka.polyfill.PiPWebkit;\n  // NOTE: \"this\" here is the video element.\n\n  // Check if PiP is enabled for this element.\n  if (!this.webkitSupportsPresentationMode(PiPWebkit.PIP_MODE_)) {\n    const error = new Error('PiP not allowed by video element');\n    return Promise.reject(error);\n  } else {\n    // Enter PiP mode.\n    this.webkitSetPresentationMode(PiPWebkit.PIP_MODE_);\n    document.pictureInPictureElement = this;\n    return Promise.resolve();\n  }\n};\n\n/**\n * @this {Document}\n * @return {!Promise}\n * @private\n */\nshaka.polyfill.PiPWebkit.exitPictureInPicture_ = function() {\n  const PiPWebkit = shaka.polyfill.PiPWebkit;\n\n  const pipElement =\n      /** @type {HTMLVideoElement} */(document.pictureInPictureElement);\n  if (pipElement) {\n    // Exit PiP mode.\n    pipElement.webkitSetPresentationMode(PiPWebkit.INLINE_MODE_);\n    document.pictureInPictureElement = null;\n    return Promise.resolve();\n  } else {\n    const error = new Error('No picture in picture element found');\n    return Promise.reject(error);\n  }\n};\n\n/**\n * The presentation mode string used to indicate PiP mode in Safari.\n *\n * @const {string}\n * @private\n */\nshaka.polyfill.PiPWebkit.PIP_MODE_ = 'picture-in-picture';\n\n/**\n * The presentation mode string used to indicate inline mode in Safari.\n *\n * @const {string}\n * @private\n */\nshaka.polyfill.PiPWebkit.INLINE_MODE_ = 'inline';\n\nshaka.polyfill.register(shaka.polyfill.PiPWebkit.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VideoPlaybackQuality');\n\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VideoPlaybackQuality\n *\n * @summary A polyfill to provide MSE VideoPlaybackQuality metrics.\n * Many browsers do not yet provide this API, and Chrome currently provides\n * similar data through individual prefixed attributes on HTMLVideoElement.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VideoPlaybackQuality.install = function() {\n  if (!window.HTMLVideoElement) {\n    // Avoid errors on very old browsers.\n    return;\n  }\n\n  let proto = HTMLVideoElement.prototype;\n  if (proto.getVideoPlaybackQuality) {\n    // No polyfill needed.\n    return;\n  }\n\n  if ('webkitDroppedFrameCount' in proto) {\n    proto.getVideoPlaybackQuality =\n        shaka.polyfill.VideoPlaybackQuality.webkit_;\n  }\n};\n\n\n/**\n * @this {HTMLVideoElement}\n * @return {!VideoPlaybackQuality}\n * @private\n */\nshaka.polyfill.VideoPlaybackQuality.webkit_ = function() {\n  return {\n    'droppedVideoFrames': this.webkitDroppedFrameCount,\n    'totalVideoFrames': this.webkitDecodedFrameCount,\n    // Not provided by this polyfill:\n    'corruptedVideoFrames': 0,\n    'creationTime': NaN,\n    'totalFrameDelay': 0,\n  };\n};\n\n\nshaka.polyfill.register(shaka.polyfill.VideoPlaybackQuality.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VTTCue');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VTTCue\n *\n * @summary A polyfill to provide VTTCue.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VTTCue.install = function() {\n  if (window.VTTCue) {\n    shaka.log.info('Using native VTTCue.');\n    return;\n  }\n\n  if (!window.TextTrackCue) {\n    shaka.log.error('VTTCue not available.');\n    return;\n  }\n\n  let constructorLength = TextTrackCue.length;\n  if (constructorLength == 3) {\n    shaka.log.info('Using VTTCue polyfill from 3 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from3ArgsTextTrackCue_;\n  } else if (constructorLength == 6) {\n    shaka.log.info('Using VTTCue polyfill from 6 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from6ArgsTextTrackCue_;\n  } else if (shaka.polyfill.VTTCue.canUse3ArgsTextTrackCue_()) {\n    shaka.log.info('Using VTTCue polyfill from 3 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from3ArgsTextTrackCue_;\n  }\n};\n\n\n/**\n * Draft spec TextTrackCue with 3 constructor arguments.\n * @see {@link https://bit.ly/2IdyKbA W3C Working Draft 25 October 2012}.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} text\n * @return {TextTrackCue}\n * @private\n */\nshaka.polyfill.VTTCue.from3ArgsTextTrackCue_ = function(startTime, endTime,\n    text) {\n  return new window.TextTrackCue(startTime, endTime, text);\n};\n\n\n/**\n * Draft spec TextTrackCue with 6 constructor arguments (5th & 6th are\n * optional).\n * @see {@link https://bit.ly/2KaGSP2 W3C Working Draft 29 March 2012}.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} text\n * @return {TextTrackCue}\n * @private\n */\nshaka.polyfill.VTTCue.from6ArgsTextTrackCue_ = function(startTime, endTime,\n    text) {\n  let id = startTime + '-' + endTime + '-' + text;\n  // Quoting the access to the TextTrackCue object to satisfy the compiler.\n  return new window['TextTrackCue'](id, startTime, endTime, text);\n};\n\n\n/**\n * IE10, IE11 and Edge return TextTrackCue.length = 0, although they accept 3\n * constructor arguments.\n *\n * @return {boolean}\n * @private\n */\nshaka.polyfill.VTTCue.canUse3ArgsTextTrackCue_ = function() {\n  try {\n    return !!shaka.polyfill.VTTCue.from3ArgsTextTrackCue_(1, 2, '');\n  } catch (error) {\n    return false;\n  }\n};\n\n\nshaka.polyfill.register(shaka.polyfill.VTTCue.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.TtmlTextParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.CueRegion');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.TtmlTextParser = function() {};\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.TtmlTextParser.parameterNs_ = 'http://www.w3.org/ns/ttml#parameter';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.TtmlTextParser.styleNs_ = 'http://www.w3.org/ns/ttml#styling';\n\n\n/** @override */\nshaka.text.TtmlTextParser.prototype.parseInit = function(data) {\n  goog.asserts.assert(false, 'TTML does not have init segments');\n};\n\n\n/** @override */\nshaka.text.TtmlTextParser.prototype.parseMedia = function(data, time) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttpNs = TtmlTextParser.parameterNs_;\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  let ret = [];\n  let parser = new DOMParser();\n  let xml = null;\n\n  try {\n    xml = parser.parseFromString(str, 'text/xml');\n  } catch (exception) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_XML);\n  }\n\n  if (xml) {\n    // Try to get the framerate, subFrameRate and frameRateMultiplier\n    // if applicable\n    let frameRate = null;\n    let subFrameRate = null;\n    let frameRateMultiplier = null;\n    let tickRate = null;\n    let spaceStyle = null;\n    let extent = null;\n    let tts = xml.getElementsByTagName('tt');\n    let tt = tts[0];\n    // TTML should always have tt element.\n    if (!tt) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.TEXT,\n          shaka.util.Error.Code.INVALID_XML);\n    } else {\n      frameRate = XmlUtils.getAttributeNS(tt, ttpNs, 'frameRate');\n      subFrameRate = XmlUtils.getAttributeNS(tt, ttpNs, 'subFrameRate');\n      frameRateMultiplier =\n          XmlUtils.getAttributeNS(tt, ttpNs, 'frameRateMultiplier');\n      tickRate = XmlUtils.getAttributeNS(tt, ttpNs, 'tickRate');\n      spaceStyle = tt.getAttribute('xml:space') || 'default';\n      extent = tt.getAttribute('tts:extent');\n    }\n\n    if (spaceStyle != 'default' && spaceStyle != 'preserve') {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.TEXT,\n          shaka.util.Error.Code.INVALID_XML);\n    }\n    let whitespaceTrim = spaceStyle == 'default';\n\n    let rateInfo = new TtmlTextParser.RateInfo_(\n        frameRate, subFrameRate, frameRateMultiplier, tickRate);\n\n    const metadataElements = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('metadata')[0]);\n    let styles = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('styling')[0]);\n    let regionElements = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('layout')[0]);\n    let cueRegions = [];\n    for (let i = 0; i < regionElements.length; i++) {\n      let cueRegion = TtmlTextParser.parseCueRegion_(\n          regionElements[i], styles, extent);\n      if (cueRegion) {\n        cueRegions.push(cueRegion);\n      }\n    }\n\n    let textNodes = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('body')[0]);\n\n    for (let i = 0; i < textNodes.length; i++) {\n      let cue = TtmlTextParser.parseCue_(textNodes[i],\n                                         time.periodStart,\n                                         rateInfo,\n                                         metadataElements,\n                                         styles,\n                                         regionElements,\n                                         cueRegions,\n                                         whitespaceTrim);\n      if (cue) {\n        ret.push(cue);\n      }\n    }\n  }\n\n  return ret;\n};\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 50% 10%\n */\nshaka.text.TtmlTextParser.percentValues_ = /^(\\d{1,2}|100)% (\\d{1,2}|100)%$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 100px\n */\nshaka.text.TtmlTextParser.unitValues_ = /^(\\d+px|\\d+em)$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 100px\n */\nshaka.text.TtmlTextParser.pixelValues_ = /^(\\d+)px (\\d+)px$/;\n\n/**\n * @const\n * @private {!RegExp}\n * @example 00:00:40:07 (7 frames) or 00:00:40:07.1 (7 frames, 1 subframe)\n */\nshaka.text.TtmlTextParser.timeColonFormatFrames_ =\n    /^(\\d{2,}):(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d+)?$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 00:00:40 or 00:40\n */\nshaka.text.TtmlTextParser.timeColonFormat_ = /^(?:(\\d{2,}):)?(\\d{2}):(\\d{2})$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 01:02:43.0345555 or 02:43.03\n */\nshaka.text.TtmlTextParser.timeColonFormatMilliseconds_ =\n    /^(?:(\\d{2,}):)?(\\d{2}):(\\d{2}\\.\\d{2,})$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 75f or 75.5f\n */\nshaka.text.TtmlTextParser.timeFramesFormat_ = /^(\\d*(?:\\.\\d*)?)f$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 50t or 50.5t\n */\nshaka.text.TtmlTextParser.timeTickFormat_ = /^(\\d*(?:\\.\\d*)?)t$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 3.45h, 3m or 4.20s\n */\nshaka.text.TtmlTextParser.timeHMSFormat_ =\n    new RegExp(['^(?:(\\\\d*(?:\\\\.\\\\d*)?)h)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)m)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)s)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)ms)?$'].join(''));\n\n\n/**\n * @const\n * @private {!Object.<string, shaka.text.Cue.lineAlign>}\n */\nshaka.text.TtmlTextParser.textAlignToLineAlign_ = {\n  'left': shaka.text.Cue.lineAlign.START,\n  'center': shaka.text.Cue.lineAlign.CENTER,\n  'right': shaka.text.Cue.lineAlign.END,\n  'start': shaka.text.Cue.lineAlign.START,\n  'end': shaka.text.Cue.lineAlign.END,\n};\n\n\n/**\n * @const\n * @private {!Object.<string, shaka.text.Cue.positionAlign>}\n */\nshaka.text.TtmlTextParser.textAlignToPositionAlign_ = {\n  'left': shaka.text.Cue.positionAlign.LEFT,\n  'center': shaka.text.Cue.positionAlign.CENTER,\n  'right': shaka.text.Cue.positionAlign.RIGHT,\n};\n\n\n/**\n * Gets the leaf nodes of the xml node tree. Ignores the text, br elements\n * and the spans positioned inside paragraphs\n *\n * @param {Element} element\n * @return {!Array.<!Element>}\n * @private\n */\nshaka.text.TtmlTextParser.getLeafNodes_ = function(element) {\n  let result = [];\n  if (!element) {\n    return result;\n  }\n\n  let childNodes = element.childNodes;\n  for (let i = 0; i < childNodes.length; i++) {\n    // Currently we don't support styles applicable to span\n    // elements, so they are ignored.\n    let isSpanChildOfP = childNodes[i].nodeName == 'span' &&\n        element.nodeName == 'p';\n    if (childNodes[i].nodeType == Node.ELEMENT_NODE &&\n        childNodes[i].nodeName != 'br' && !isSpanChildOfP) {\n      // Get the leaves the child might contain.\n      goog.asserts.assert(childNodes[i] instanceof Element,\n                          'Node should be Element!');\n      let leafChildren = shaka.text.TtmlTextParser.getLeafNodes_(\n          /** @type {Element} */(childNodes[i]));\n      goog.asserts.assert(leafChildren.length > 0,\n                          'Only a null Element should return no leaves!');\n      result = result.concat(leafChildren);\n    }\n  }\n\n  // if no result at this point, the element itself must be a leaf.\n  if (!result.length) {\n    result.push(element);\n  }\n  return result;\n};\n\n\n/**\n * Inserts \\n where <br> tags are found.\n *\n * @param {!Node} element\n * @param {boolean} whitespaceTrim\n * @private\n */\nshaka.text.TtmlTextParser.addNewLines_ = function(element, whitespaceTrim) {\n  let childNodes = element.childNodes;\n\n  for (let i = 0; i < childNodes.length; i++) {\n    if (childNodes[i].nodeName == 'br' && i > 0) {\n      childNodes[i - 1].textContent += '\\n';\n    } else if (childNodes[i].childNodes.length > 0) {\n      shaka.text.TtmlTextParser.addNewLines_(childNodes[i], whitespaceTrim);\n    } else if (whitespaceTrim) {\n      // Trim leading and trailing whitespace.\n      let trimmed = childNodes[i].textContent.trim();\n      // Collapse multiple spaces into one.\n      trimmed = trimmed.replace(/\\s+/g, ' ');\n\n      childNodes[i].textContent = trimmed;\n    }\n  }\n};\n\n\n/**\n * Parses an Element into a TextTrackCue or VTTCue.\n *\n * @param {!Element} cueElement\n * @param {number} offset\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {!Array.<!Element>} metadataElements\n * @param {!Array.<!Element>} styles\n * @param {!Array.<!Element>} regionElements\n * @param {!Array.<!shaka.text.CueRegion>} cueRegions\n * @param {boolean} whitespaceTrim\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.TtmlTextParser.parseCue_ = function(\n    cueElement, offset, rateInfo, metadataElements, styles,\n    regionElements, cueRegions, whitespaceTrim) {\n  // Disregard empty elements:\n  // TTML allows for empty elements like <div></div>.\n  // If cueElement has neither time attributes, nor\n  // non-whitespace text, don't try to make a cue out of it.\n  if (!cueElement.hasAttribute('begin') &&\n      !cueElement.hasAttribute('end') &&\n      /^\\s*$/.test(cueElement.textContent)) {\n    return null;\n  }\n\n  shaka.text.TtmlTextParser.addNewLines_(cueElement, whitespaceTrim);\n\n  // Get time.\n  let start = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('begin'), rateInfo);\n  let end = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('end'), rateInfo);\n  let duration = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('dur'), rateInfo);\n  let payload = cueElement.textContent;\n\n  if (end == null && duration != null) {\n    end = start + duration;\n  }\n\n  if (start == null || end == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_CUE);\n  }\n\n  start += offset;\n  end += offset;\n\n  let cue = new shaka.text.Cue(start, end, payload);\n\n  // Get other properties if available.\n  let regionElement = shaka.text.TtmlTextParser.getElementFromCollection_(\n      cueElement, 'region', regionElements, /* prefix= */ '');\n  if (regionElement && regionElement.getAttribute('xml:id')) {\n    let regionId = regionElement.getAttribute('xml:id');\n    let regionsWithId = cueRegions.filter(function(region) {\n      return region.id == regionId;\n    });\n    cue.region = regionsWithId[0];\n  }\n  const imageElement = shaka.text.TtmlTextParser.getElementFromCollection_(\n      cueElement, 'smpte:backgroundImage', metadataElements, '#');\n  shaka.text.TtmlTextParser.addStyle_(\n      cue,\n      cueElement,\n      regionElement,\n      imageElement,\n      styles);\n\n  return cue;\n};\n\n\n/**\n * Parses an Element into a TextTrackCue or VTTCue.\n *\n * @param {!Element} regionElement\n * @param {!Array.<!Element>} styles Defined in the top of tt  element and\n * used principally for images.\n * @param {string} globalExtent\n * @return {shaka.text.CueRegion}\n * @private\n */\nshaka.text.TtmlTextParser.parseCueRegion_ = function(regionElement, styles,\n  globalExtent) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  let region = new shaka.text.CueRegion();\n  let id = regionElement.getAttribute('xml:id');\n  if (!id) {\n    shaka.log.warning('TtmlTextParser parser encountered a region with ' +\n                      'no id. Region will be ignored.');\n    return null;\n  }\n  region.id = id;\n\n  let globalResults = null;\n  if (globalExtent) {\n    globalResults = TtmlTextParser.percentValues_.exec(globalExtent) ||\n      TtmlTextParser.pixelValues_.exec(globalExtent);\n  }\n  const globalWidth = globalResults ? Number(globalResults[1]) : null;\n  const globalHeight = globalResults ? Number(globalResults[2]) : null;\n\n  let results = null;\n  let percentage = null;\n  let extent = TtmlTextParser.getStyleAttributeFromRegion_(\n      regionElement, styles, 'extent');\n  if (extent) {\n    percentage = TtmlTextParser.percentValues_.exec(extent);\n    results = percentage || TtmlTextParser.pixelValues_.exec(extent);\n    if (results != null) {\n      if (globalWidth != null) {\n        region.width = Number(results[1]) * 100 / globalWidth;\n      } else {\n        region.width = Number(results[1]);\n      }\n      if (globalHeight != null) {\n        region.height = Number(results[2]) * 100 / globalHeight;\n      } else {\n        region.height = Number(results[2]);\n      }\n      region.widthUnits = percentage || globalWidth != null ?\n                         shaka.text.CueRegion.units.PERCENTAGE :\n                         shaka.text.CueRegion.units.PX;\n\n      region.heightUnits = percentage || globalHeight != null ?\n                         shaka.text.CueRegion.units.PERCENTAGE :\n                         shaka.text.CueRegion.units.PX;\n    }\n  }\n\n  let origin = TtmlTextParser.getStyleAttributeFromRegion_(\n      regionElement, styles, 'origin');\n  if (origin) {\n    percentage = TtmlTextParser.percentValues_.exec(origin);\n    results = percentage || TtmlTextParser.pixelValues_.exec(origin);\n    if (results != null) {\n      if (globalHeight != null) {\n        region.viewportAnchorX = Number(results[1]) * 100 / globalHeight;\n      } else {\n        region.viewportAnchorX = Number(results[1]);\n      }\n      if (globalWidth != null) {\n        region.viewportAnchorY = Number(results[2]) * 100 / globalWidth;\n      } else {\n        region.viewportAnchorY = Number(results[2]);\n      }\n      region.viewportAnchorUnits = percentage || globalWidth != null ?\n                shaka.text.CueRegion.units.PERCENTAGE :\n                shaka.text.CueRegion.units.PX;\n    }\n  }\n\n  return region;\n};\n\n/**\n * Adds applicable style properties to a cue.\n *\n * @param {!shaka.text.Cue} cue\n * @param {!Element} cueElement\n * @param {Element} region\n * @param {Element} imageElement\n * @param {!Array.<!Element>} styles\n * @private\n */\nshaka.text.TtmlTextParser.addStyle_ = function(\n    cue, cueElement, region, imageElement, styles) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  const Cue = shaka.text.Cue;\n\n  let direction = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'direction');\n  if (direction == 'rtl') {\n    cue.direction = Cue.direction.HORIZONTAL_RIGHT_TO_LEFT;\n  }\n\n  // Direction attribute specifies one-dimentional writing direction\n  // (left to right or right to left). Writing mode specifies that\n  // plus whether text is vertical or horizontal.\n  // They should not contradict each other. If they do, we give\n  // preference to writing mode.\n  let writingMode = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'writingMode');\n  // Set cue's direction if the text is horizontal, and cue's writingMode if\n  // it's vertical.\n  if (writingMode == 'tb' || writingMode == 'tblr') {\n    cue.writingMode = Cue.writingMode.VERTICAL_LEFT_TO_RIGHT;\n  } else if (writingMode == 'tbrl') {\n    cue.writingMode = Cue.writingMode.VERTICAL_RIGHT_TO_LEFT;\n  } else if (writingMode == 'rltb' || writingMode == 'rl') {\n    cue.direction = Cue.direction.HORIZONTAL_RIGHT_TO_LEFT;\n  } else if (writingMode) {\n    cue.direction = Cue.direction.HORIZONTAL_LEFT_TO_RIGHT;\n  }\n\n  let align = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'textAlign');\n  if (align) {\n    cue.positionAlign = TtmlTextParser.textAlignToPositionAlign_[align];\n    cue.lineAlign = TtmlTextParser.textAlignToLineAlign_[align];\n\n    goog.asserts.assert(align.toUpperCase() in Cue.textAlign,\n                        align.toUpperCase() +\n                        ' Should be in Cue.textAlign values!');\n\n    cue.textAlign = Cue.textAlign[align.toUpperCase()];\n  }\n\n  let displayAlign = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'displayAlign');\n  if (displayAlign) {\n    goog.asserts.assert(displayAlign.toUpperCase() in Cue.displayAlign,\n                        displayAlign.toUpperCase() +\n                        ' Should be in Cue.displayAlign values!');\n    cue.displayAlign = Cue.displayAlign[displayAlign.toUpperCase()];\n  }\n\n  let color = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'color');\n  if (color) {\n    cue.color = color;\n  }\n\n  let backgroundColor = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'backgroundColor');\n  if (backgroundColor) {\n    cue.backgroundColor = backgroundColor;\n  }\n\n  let fontFamily = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontFamily');\n  if (fontFamily) {\n    cue.fontFamily = fontFamily;\n  }\n\n  let fontWeight = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontWeight');\n  if (fontWeight && fontWeight == 'bold') {\n    cue.fontWeight = Cue.fontWeight.BOLD;\n  }\n\n  let wrapOption = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'wrapOption');\n  if (wrapOption && wrapOption == 'noWrap') {\n    cue.wrapLine = false;\n  }\n\n  let lineHeight = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'lineHeight');\n  if (lineHeight && lineHeight.match(TtmlTextParser.unitValues_)) {\n    cue.lineHeight = lineHeight;\n  }\n\n  let fontSize = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontSize');\n  if (fontSize && fontSize.match(TtmlTextParser.unitValues_)) {\n    cue.fontSize = fontSize;\n  }\n\n  let fontStyle = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontStyle');\n  if (fontStyle) {\n    goog.asserts.assert(fontStyle.toUpperCase() in Cue.fontStyle,\n                        fontStyle.toUpperCase() +\n                        ' Should be in Cue.fontStyle values!');\n    cue.fontStyle = Cue.fontStyle[fontStyle.toUpperCase()];\n  }\n\n  if (imageElement) {\n    const backgroundImageType = imageElement.getAttribute('imagetype');\n    const backgroundImageEncoding = imageElement.getAttribute('encoding');\n    const backgroundImageData = imageElement.textContent.trim();\n    if (backgroundImageType == 'PNG' &&\n        backgroundImageEncoding == 'Base64' &&\n        backgroundImageData) {\n      cue.backgroundImage = 'data:image/png;base64,' + backgroundImageData;\n    }\n  }\n\n  // Text decoration is an array of values which can come both from the\n  // element's style or be inherited from elements' parent nodes. All of those\n  // values should be applied as long as they don't contradict each other. If\n  // they do, elements' own style gets preference.\n  let textDecorationRegion = TtmlTextParser.getStyleAttributeFromRegion_(\n      region, styles, 'textDecoration');\n  if (textDecorationRegion) {\n    TtmlTextParser.addTextDecoration_(cue, textDecorationRegion);\n  }\n\n  let textDecorationElement = TtmlTextParser.getStyleAttributeFromElement_(\n      cueElement, styles, 'textDecoration');\n  if (textDecorationElement) {\n    TtmlTextParser.addTextDecoration_(cue, textDecorationElement);\n  }\n};\n\n\n/**\n * Parses text decoration values and adds/removes them to/from the cue.\n *\n * @param {!shaka.text.Cue} cue\n * @param {string} decoration\n * @private\n */\nshaka.text.TtmlTextParser.addTextDecoration_ = function(cue, decoration) {\n  const Cue = shaka.text.Cue;\n  let values = decoration.split(' ');\n  for (let i = 0; i < values.length; i++) {\n    switch (values[i]) {\n      case 'underline':\n        if (!cue.textDecoration.includes(Cue.textDecoration.UNDERLINE)) {\n          cue.textDecoration.push(Cue.textDecoration.UNDERLINE);\n        }\n        break;\n      case 'noUnderline':\n        if (cue.textDecoration.includes(Cue.textDecoration.UNDERLINE)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.UNDERLINE);\n        }\n        break;\n      case 'lineThrough':\n        if (!cue.textDecoration.includes(Cue.textDecoration.LINE_THROUGH)) {\n          cue.textDecoration.push(Cue.textDecoration.LINE_THROUGH);\n        }\n        break;\n      case 'noLineThrough':\n        if (cue.textDecoration.includes(Cue.textDecoration.LINE_THROUGH)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.LINE_THROUGH);\n        }\n        break;\n      case 'overline':\n        if (!cue.textDecoration.includes(Cue.textDecoration.OVERLINE)) {\n          cue.textDecoration.push(Cue.textDecoration.OVERLINE);\n        }\n        break;\n      case 'noOverline':\n        if (cue.textDecoration.includes(Cue.textDecoration.OVERLINE)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.OVERLINE);\n        }\n        break;\n    }\n  }\n};\n\n\n/**\n * Finds a specified attribute on either the original cue element or its\n * associated region and returns the value if the attribute was found.\n *\n * @param {!Element} cueElement\n * @param {Element} region\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttribute_ = function(\n    cueElement, region, styles, attribute) {\n  // An attribute can be specified on region level or in a styling block\n  // associated with the region or original element.\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  let attr = TtmlTextParser.getStyleAttributeFromElement_(\n      cueElement, styles, attribute);\n  if (attr) {\n    return attr;\n  }\n\n  return TtmlTextParser.getStyleAttributeFromRegion_(\n      region, styles, attribute);\n};\n\n\n/**\n * Finds a specified attribute on the element's associated region\n * and returns the value if the attribute was found.\n *\n * @param {Element} region\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttributeFromRegion_ = function(\n    region, styles, attribute) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttsNs = shaka.text.TtmlTextParser.styleNs_;\n\n  let regionChildren = shaka.text.TtmlTextParser.getLeafNodes_(region);\n  for (let i = 0; i < regionChildren.length; i++) {\n    let attr = XmlUtils.getAttributeNS(regionChildren[i], ttsNs, attribute);\n    if (attr) {\n      return attr;\n    }\n  }\n\n  let style = shaka.text.TtmlTextParser.getElementFromCollection_(\n      region, 'style', styles, /* prefix= */ '');\n  if (style) {\n    return XmlUtils.getAttributeNS(style, ttsNs, attribute);\n  }\n  return null;\n};\n\n\n/**\n * Finds a specified attribute on the cue element and returns the value\n * if the attribute was found.\n *\n * @param {!Element} cueElement\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttributeFromElement_ = function(\n    cueElement, styles, attribute) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttsNs = shaka.text.TtmlTextParser.styleNs_;\n\n  let getElementFromCollection_ =\n      shaka.text.TtmlTextParser.getElementFromCollection_;\n  let style = getElementFromCollection_(\n      cueElement, 'style', styles, /* prefix= */ '');\n  if (style) {\n    return XmlUtils.getAttributeNS(style, ttsNs, attribute);\n  }\n  return null;\n};\n\n\n/**\n * Selects an item from |collection| whose id matches |attributeName|\n * from |element|.\n *\n * @param {Element} element\n * @param {string} attributeName\n * @param {!Array.<Element>} collection\n * @param {string} prefixName\n * @return {Element}\n * @private\n */\nshaka.text.TtmlTextParser.getElementFromCollection_ = function(\n    element, attributeName, collection, prefixName) {\n  if (!element || collection.length < 1) {\n    return null;\n  }\n  let item = null;\n  let itemName = shaka.text.TtmlTextParser.getInheritedAttribute_(\n      element, attributeName);\n  if (itemName) {\n    for (let i = 0; i < collection.length; i++) {\n      if ((prefixName + collection[i].getAttribute('xml:id')) == itemName) {\n        item = collection[i];\n        break;\n      }\n    }\n  }\n\n  return item;\n};\n\n\n/**\n * Traverses upwards from a given node until a given attribute is found.\n *\n * @param {!Element} element\n * @param {string} attributeName\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getInheritedAttribute_ = function(\n    element, attributeName) {\n  let ret = null;\n  while (element) {\n    ret = element.getAttribute(attributeName);\n    if (ret) {\n      break;\n    }\n\n    // Element.parentNode can lead to XMLDocument, which is not an Element and\n    // has no getAttribute().\n    let parentNode = element.parentNode;\n    if (parentNode instanceof Element) {\n      element = parentNode;\n    } else {\n      break;\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Parses a TTML time from the given word.\n *\n * @param {string} text\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTime_ = function(text, rateInfo) {\n  let ret = null;\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n\n  if (TtmlTextParser.timeColonFormatFrames_.test(text)) {\n    ret = TtmlTextParser.parseColonTimeWithFrames_(rateInfo, text);\n  } else if (TtmlTextParser.timeColonFormat_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeColonFormat_, text);\n  } else if (TtmlTextParser.timeColonFormatMilliseconds_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeColonFormatMilliseconds_, text);\n  } else if (TtmlTextParser.timeFramesFormat_.test(text)) {\n    ret = TtmlTextParser.parseFramesTime_(rateInfo, text);\n  } else if (TtmlTextParser.timeTickFormat_.test(text)) {\n    ret = TtmlTextParser.parseTickTime_(rateInfo, text);\n  } else if (TtmlTextParser.timeHMSFormat_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeHMSFormat_, text);\n  }\n\n  return ret;\n};\n\n\n/**\n * Parses a TTML time in frame format.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseFramesTime_ = function(rateInfo, text) {\n  // 75f or 75.5f\n  let results = shaka.text.TtmlTextParser.timeFramesFormat_.exec(text);\n  let frames = Number(results[1]);\n\n  return frames / rateInfo.frameRate;\n};\n\n\n/**\n * Parses a TTML time in tick format.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTickTime_ = function(rateInfo, text) {\n  // 50t or 50.5t\n  let results = shaka.text.TtmlTextParser.timeTickFormat_.exec(text);\n  let ticks = Number(results[1]);\n\n  return ticks / rateInfo.tickRate;\n};\n\n\n/**\n * Parses a TTML colon formatted time containing frames.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseColonTimeWithFrames_ = function(\n    rateInfo, text) {\n  // 01:02:43:07 ('07' is frames) or 01:02:43:07.1 (subframes)\n  let results = shaka.text.TtmlTextParser.timeColonFormatFrames_.exec(text);\n\n  let hours = Number(results[1]);\n  let minutes = Number(results[2]);\n  let seconds = Number(results[3]);\n  let frames = Number(results[4]);\n  let subframes = Number(results[5]) || 0;\n\n  frames += subframes / rateInfo.subFrameRate;\n  seconds += frames / rateInfo.frameRate;\n\n  return seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * Parses a TTML time with a given regex. Expects regex to be some\n * sort of a time-matcher to match hours, minutes, seconds and milliseconds\n *\n * @param {!RegExp} regex\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTimeFromRegex_ = function(regex, text) {\n  let results = regex.exec(text);\n  if (results == null || results[0] == '') {\n    return null;\n  }\n  // This capture is optional, but will still be in the array as undefined,\n  // in which case it is 0.\n  let hours = Number(results[1]) || 0;\n  let minutes = Number(results[2]) || 0;\n  let seconds = Number(results[3]) || 0;\n  let miliseconds = Number(results[4]) || 0;\n\n  return (miliseconds / 1000) + seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * Contains information about frame/subframe rate\n * and frame rate multiplier for time in frame format.\n *\n * @example 01:02:03:04(4 frames) or 01:02:03:04.1(4 frames, 1 subframe)\n * @param {?string} frameRate\n * @param {?string} subFrameRate\n * @param {?string} frameRateMultiplier\n * @param {?string} tickRate\n * @constructor\n * @struct\n * @private\n */\nshaka.text.TtmlTextParser.RateInfo_ = function(\n    frameRate, subFrameRate, frameRateMultiplier, tickRate) {\n  /**\n   * @type {number}\n   */\n  this.frameRate = Number(frameRate) || 30;\n\n  /**\n   * @type {number}\n   */\n  this.subFrameRate = Number(subFrameRate) || 1;\n\n  /**\n   * @type {number}\n   */\n  this.tickRate = Number(tickRate);\n  if (this.tickRate == 0) {\n    if (frameRate) {\n      this.tickRate = this.frameRate * this.subFrameRate;\n    } else {\n      this.tickRate = 1;\n    }\n  }\n\n  if (frameRateMultiplier) {\n    const multiplierResults = /^(\\d+) (\\d+)$/g.exec(frameRateMultiplier);\n    if (multiplierResults) {\n      const numerator = Number(multiplierResults[1]);\n      const denominator = Number(multiplierResults[2]);\n      const multiplierNum = numerator / denominator;\n      this.frameRate *= multiplierNum;\n    }\n  }\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/ttml+xml',\n    shaka.text.TtmlTextParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VideoPlayPromise');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VideoPlayPromise\n *\n * @summary A polyfill to silence the play() Promise in HTML5 video.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VideoPlayPromise.install = function() {\n  shaka.log.debug('VideoPlayPromise.install');\n\n  if (window.HTMLMediaElement) {\n    const originalPlay = HTMLMediaElement.prototype.play;\n    HTMLMediaElement.prototype.play = function() {\n      let p = originalPlay.apply(this);\n      if (p) {\n        // This browser is returning a Promise from play().\n        // If the play() call fails or is interrupted, the Promise will be\n        // rejected.  Some apps, however, don't listen to this Promise,\n        // especially since it is not available cross-browser.  If the Promise\n        // is rejected without anyone listening for the failure, an error will\n        // appear in the JS console.\n        // To avoid confusion over this innocuous \"error\", we will install a\n        // catch handler on the Promise.  This does not prevent the app from\n        // also catching failures and handling them.  It only prevents the\n        // console message.\n        p.catch(function() {});\n      }\n      return p;\n    };\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.VideoPlayPromise.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Mp4TtmlParser');\n\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.text.TtmlTextParser');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Mp4Parser');\n\n\n/**\n * @struct\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.Mp4TtmlParser = function() {\n  /**\n   * @type {!shaka.extern.TextParser}\n   * @private\n   */\n  this.parser_ = new shaka.text.TtmlTextParser();\n};\n\n\n/** @override **/\nshaka.text.Mp4TtmlParser.prototype.parseInit = function(data) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawSTPP = false;\n\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .box('minf', Mp4Parser.children)\n      .box('stbl', Mp4Parser.children)\n      .fullBox('stsd', Mp4Parser.sampleDescription)\n      .box('stpp', function(box) {\n        sawSTPP = true;\n        box.parser.stop();\n      }).parse(data);\n\n  if (!sawSTPP) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_TTML);\n  }\n};\n\n\n/** @override **/\nshaka.text.Mp4TtmlParser.prototype.parseMedia = function(data, time) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawMDAT = false;\n  let payload = [];\n\n  new Mp4Parser()\n      .box('mdat', Mp4Parser.allData(function(data) {\n        sawMDAT = true;\n        // Join this to any previous payload, in case the mp4 has multiple\n        // mdats.\n        payload = payload.concat(this.parser_.parseMedia(data, time));\n      }.bind(this))).parse(data);\n\n  if (!sawMDAT) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_TTML);\n  }\n\n  return payload;\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"stpp\"',\n    shaka.text.Mp4TtmlParser);\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"stpp.TTML.im1t\"',\n    shaka.text.Mp4TtmlParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.VttTextParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.CueRegion');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.VttTextParser = function() {};\n\n\n/** @override */\nshaka.text.VttTextParser.prototype.parseInit = function(data) {\n  goog.asserts.assert(false, 'VTT does not have init segments');\n};\n\n\n/**\n * @override\n * @throws {shaka.util.Error}\n */\nshaka.text.VttTextParser.prototype.parseMedia = function(data, time) {\n  const VttTextParser = shaka.text.VttTextParser;\n  // Get the input as a string.  Normalize newlines to \\n.\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  str = str.replace(/\\r\\n|\\r(?=[^\\n]|$)/gm, '\\n');\n  let blocks = str.split(/\\n{2,}/m);\n\n  if (!/^WEBVTT($|[ \\t\\n])/m.test(blocks[0])) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_HEADER);\n  }\n\n  let offset = time.segmentStart;\n  if (offset == null) {\n    // This is a probe, such as the HLS parser makes.  We don't know the segment\n    // start time, so we will use the X-TIMESTAMP-MAP header, if present, to get\n    // the segment start time.  By only doing this when segmentStart == null, we\n    // protect against rollover in the MPEGTS field.\n\n    // In case the attempt below doesn't work out, assume an offset of 0.\n    offset = 0;\n\n    if (blocks[0].includes('X-TIMESTAMP-MAP')) {\n      // https://bit.ly/2K92l7y\n      // The 'X-TIMESTAMP-MAP' header is used in HLS to align text with\n      // the rest of the media.\n      // The header format is 'X-TIMESTAMP-MAP=MPEGTS:n,LOCAL:m'\n      // (the attributes can go in any order)\n      // where n is MPEG-2 time and m is cue time it maps to.\n      // For example 'X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:900000'\n      // means an offset of 10 seconds\n      // 900000/MPEG_TIMESCALE - cue time.\n      const cueTimeMatch =\n          blocks[0].match(/LOCAL:((?:(\\d{1,}):)?(\\d{2}):(\\d{2})\\.(\\d{3}))/m);\n\n      const mpegTimeMatch = blocks[0].match(/MPEGTS:(\\d+)/m);\n      if (cueTimeMatch && mpegTimeMatch) {\n        const parser = new shaka.util.TextParser(cueTimeMatch[1]);\n        const cueTime = shaka.text.VttTextParser.parseTime_(parser);\n        if (cueTime == null) {\n          throw new shaka.util.Error(\n              shaka.util.Error.Severity.CRITICAL,\n              shaka.util.Error.Category.TEXT,\n              shaka.util.Error.Code.INVALID_TEXT_HEADER);\n        }\n\n        const mpegTime = Number(mpegTimeMatch[1]);\n        const mpegTimescale = shaka.text.VttTextParser.MPEG_TIMESCALE_;\n        // Apple-encoded HLS content uses absolute timestamps, so assume the\n        // presence of the map tag means the content uses absolute timestamps.\n        offset = time.periodStart + (mpegTime / mpegTimescale - cueTime);\n      }\n    }\n  }\n\n  // Parse VTT regions.\n  /* !Array.<!shaka.extern.CueRegion> */\n  let regions = [];\n  let lines = blocks[0].split('\\n');\n  for (let i = 1; i < lines.length; i++) {\n    if (/^Region:/.test(lines[i])) {\n      let region = VttTextParser.parseRegion_(lines[i]);\n      regions.push(region);\n    }\n  }\n\n  // Parse cues.\n  let ret = [];\n  for (let i = 1; i < blocks.length; i++) {\n    lines = blocks[i].split('\\n');\n    let cue = VttTextParser.parseCue_(lines, offset, regions);\n    if (cue) {\n      ret.push(cue);\n    }\n    }\n\n  return ret;\n};\n\n\n/**\n * Parses a string into a Region object.\n *\n * @param {string} text\n * @return {!shaka.extern.CueRegion}\n * @private\n */\nshaka.text.VttTextParser.parseRegion_ = function(text) {\n  const VttTextParser = shaka.text.VttTextParser;\n  let parser = new shaka.util.TextParser(text);\n  // The region string looks like this:\n  // Region: id=fred width=50% lines=3 regionanchor=0%,100%\n  //         viewportanchor=10%,90% scroll=up\n  let region = new shaka.text.CueRegion();\n\n  // Skip 'Region:'\n  parser.readWord();\n  parser.skipWhitespace();\n\n  let word = parser.readWord();\n  while (word) {\n    if (!VttTextParser.parseRegionSetting_(region, word)) {\n      shaka.log.warning('VTT parser encountered an invalid VTTRegion setting: ',\n                        word,\n                        ' The setting will be ignored.');\n    }\n    parser.skipWhitespace();\n    word = parser.readWord();\n  }\n\n  return region;\n};\n\n\n/**\n * Parses a text block into a Cue object.\n *\n * @param {!Array.<string>} text\n * @param {number} timeOffset\n * @param {!Array.<!shaka.extern.CueRegion>} regions\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.VttTextParser.parseCue_ = function(text, timeOffset, regions) {\n  const VttTextParser = shaka.text.VttTextParser;\n\n  // Skip empty blocks.\n  if (text.length == 1 && !text[0]) {\n    return null;\n  }\n\n  // Skip comment blocks.\n  if (/^NOTE($|[ \\t])/.test(text[0])) {\n    return null;\n  }\n\n  // Skip style blocks.\n  if (text[0] == 'STYLE') {\n    return null;\n  }\n\n  let id = null;\n  if (!text[0].includes('-->')) {\n    id = text[0];\n    text.splice(0, 1);\n  }\n\n  // Parse the times.\n  let parser = new shaka.util.TextParser(text[0]);\n  let start = VttTextParser.parseTime_(parser);\n  let expect = parser.readRegex(/[ \\t]+-->[ \\t]+/g);\n  let end = VttTextParser.parseTime_(parser);\n\n  if (start == null || expect == null || end == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_CUE);\n  }\n\n  start += timeOffset;\n  end += timeOffset;\n\n  // Get the payload.\n  let payload = text.slice(1).join('\\n').trim();\n\n  let cue = new shaka.text.Cue(start, end, payload);\n\n  // Parse optional settings.\n  parser.skipWhitespace();\n  let word = parser.readWord();\n  while (word) {\n    if (!VttTextParser.parseCueSetting(cue, word, regions)) {\n      shaka.log.warning('VTT parser encountered an invalid VTT setting: ',\n                        word,\n                        ' The setting will be ignored.');\n    }\n    parser.skipWhitespace();\n    word = parser.readWord();\n  }\n\n  if (id != null) {\n    cue.id = id;\n  }\n  return cue;\n};\n\n\n/**\n * Parses a WebVTT setting from the given word.\n *\n * @param {!shaka.text.Cue} cue\n * @param {string} word\n * @param {!Array.<!shaka.text.CueRegion>} regions\n * @return {boolean} True on success.\n */\nshaka.text.VttTextParser.parseCueSetting = function(cue, word, regions) {\n  const VttTextParser = shaka.text.VttTextParser;\n  let results = null;\n  if ((results = /^align:(start|middle|center|end|left|right)$/.exec(word))) {\n    VttTextParser.setTextAlign_(cue, results[1]);\n  } else if ((results = /^vertical:(lr|rl)$/.exec(word))) {\n    VttTextParser.setVerticalWritingMode_(cue, results[1]);\n  } else if ((results = /^size:([\\d.]+)%$/.exec(word))) {\n    cue.size = Number(results[1]);\n  } else if ((results =\n      /^position:([\\d.]+)%(?:,(line-left|line-right|center|start|end))?$/\n      .exec(word))) {\n    cue.position = Number(results[1]);\n    if (results[2]) {\n      VttTextParser.setPositionAlign_(cue, results[2]);\n    }\n  } else if ((results = /^region:(.*)$/.exec(word))) {\n    let region = VttTextParser.getRegionById_(regions, results[1]);\n    if (region) {\n      cue.region = region;\n    }\n  } else {\n    return VttTextParser.parsedLineValueAndInterpretation_(cue, word);\n  }\n\n  return true;\n};\n\n\n/**\n *\n * @param {!Array.<!shaka.text.CueRegion>} regions\n * @param {string} id\n * @return {?shaka.text.CueRegion}\n * @private\n */\nshaka.text.VttTextParser.getRegionById_ = function(regions, id) {\n  let regionsWithId = regions.filter(function(region) {\n    return region.id == id;\n  });\n  if (!regionsWithId.length) {\n    shaka.log.warning('VTT parser could not find a region with id: ',\n                  id,\n                  ' The region will be ignored.');\n    return null;\n  }\n  goog.asserts.assert(regionsWithId.length == 1,\n                      'VTTRegion ids should be unique!');\n\n  return regionsWithId[0];\n};\n\n\n/**\n * Parses a WebVTTRegion setting from the given word.\n *\n * @param {!shaka.text.CueRegion} region\n * @param {string} word\n * @return {boolean} True on success.\n * @private\n */\nshaka.text.VttTextParser.parseRegionSetting_ = function(region, word) {\n  let results = null;\n  if ((results = /^id=(.*)$/.exec(word))) {\n    region.id = results[1];\n  } else if ((results = /^width=(\\d{1,2}|100)%$/.exec(word))) {\n    region.width = Number(results[1]);\n  } else if ((results = /^lines=(\\d+)$/.exec(word))) {\n    region.height = Number(results[1]);\n    region.heightUnits = shaka.text.CueRegion.units.LINES;\n  } else if ((results = /^regionanchor=(\\d{1,2}|100)%,(\\d{1,2}|100)%$/\n            .exec(word))) {\n    region.regionAnchorX = Number(results[1]);\n    region.regionAnchorY = Number(results[2]);\n  } else if ((results = /^viewportanchor=(\\d{1,2}|100)%,(\\d{1,2}|100)%$/\n            .exec(word))) {\n    region.viewportAnchorX = Number(results[1]);\n    region.viewportAnchorY = Number(results[2]);\n  } else if ((results = /^scroll=up$/.exec(word))) {\n    region.scroll = shaka.text.CueRegion.scrollMode.UP;\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} align\n * @private\n */\nshaka.text.VttTextParser.setTextAlign_ = function(cue, align) {\n  const Cue = shaka.text.Cue;\n  if (align == 'middle') {\n    cue.textAlign = Cue.textAlign.CENTER;\n  } else {\n    goog.asserts.assert(align.toUpperCase() in Cue.textAlign,\n                        align.toUpperCase() +\n                        ' Should be in Cue.textAlign values!');\n\n    cue.textAlign = Cue.textAlign[align.toUpperCase()];\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} align\n * @private\n */\nshaka.text.VttTextParser.setPositionAlign_ = function(cue, align) {\n  const Cue = shaka.text.Cue;\n  if (align == 'line-left' || align == 'start') {\n    cue.positionAlign = Cue.positionAlign.LEFT;\n  } else if (align == 'line-right' || align == 'end') {\n    cue.positionAlign = Cue.positionAlign.RIGHT;\n  } else {\n    cue.positionAlign = Cue.positionAlign.CENTER;\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} value\n * @private\n */\nshaka.text.VttTextParser.setVerticalWritingMode_ = function(cue, value) {\n  const Cue = shaka.text.Cue;\n  if (value == 'lr') {\n    cue.writingMode = Cue.writingMode.VERTICAL_LEFT_TO_RIGHT;\n  } else {\n    cue.writingMode = Cue.writingMode.VERTICAL_RIGHT_TO_LEFT;\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} word\n * @return {boolean}\n * @private\n */\nshaka.text.VttTextParser.parsedLineValueAndInterpretation_ =\n    function(cue, word) {\n  const Cue = shaka.text.Cue;\n  let results = null;\n  if ((results = /^line:([\\d.]+)%(?:,(start|end|center))?$/.exec(word))) {\n    cue.lineInterpretation = Cue.lineInterpretation.PERCENTAGE;\n    cue.line = Number(results[1]);\n    if (results[2]) {\n      goog.asserts.assert(results[2].toUpperCase() in Cue.lineAlign,\n                          results[2].toUpperCase() +\n                          ' Should be in Cue.lineAlign values!');\n      cue.lineAlign = Cue.lineAlign[results[2].toUpperCase()];\n    }\n  } else if ((results = /^line:(-?\\d+)(?:,(start|end|center))?$/.exec(word))) {\n    cue.lineInterpretation = Cue.lineInterpretation.LINE_NUMBER;\n    cue.line = Number(results[1]);\n    if (results[2]) {\n      goog.asserts.assert(results[2].toUpperCase() in Cue.lineAlign,\n                          results[2].toUpperCase() +\n                          ' Should be in Cue.lineAlign values!');\n      cue.lineAlign = Cue.lineAlign[results[2].toUpperCase()];\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * Parses a WebVTT time from the given parser.\n *\n * @param {!shaka.util.TextParser} parser\n * @return {?number}\n * @private\n */\nshaka.text.VttTextParser.parseTime_ = function(parser) {\n  // 00:00.000 or 00:00:00.000 or 0:00:00.000\n  let results = parser.readRegex(/(?:(\\d{1,}):)?(\\d{2}):(\\d{2})\\.(\\d{3})/g);\n  if (results == null) {\n    return null;\n  }\n  // This capture is optional, but will still be in the array as undefined,\n  // in which case it is 0.\n  let hours = Number(results[1]) || 0;\n  let minutes = Number(results[2]);\n  let seconds = Number(results[3]);\n  let miliseconds = Number(results[4]);\n  if (minutes > 59 || seconds > 59) {\n    return null;\n  }\n\n  return (miliseconds / 1000) + seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.text.VttTextParser.MPEG_TIMESCALE_ = 90000;\n\nshaka.text.TextEngine.registerParser(\n    'text/vtt',\n    shaka.text.VttTextParser);\n\nshaka.text.TextEngine.registerParser(\n    'text/vtt; codecs=\"vtt\"',\n    shaka.text.VttTextParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Mp4VttParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.text.VttTextParser');\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * @struct\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.Mp4VttParser = function() {\n  /**\n   * The current time scale used by the VTT parser.\n   *\n   * @type {?number}\n   * @private\n   */\n  this.timescale_ = null;\n};\n\n\n/** @override */\nshaka.text.Mp4VttParser.prototype.parseInit = function(data) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawWVTT = false;\n\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .fullBox('mdhd', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'MDHD version can only be 0 or 1');\n        if (box.version == 0) {\n          box.reader.skip(4); // Skip \"creation_time\".\n          box.reader.skip(4); // Skip \"modification_time\".\n          this.timescale_ = box.reader.readUint32();\n          box.reader.skip(4); // Skip \"duration\".\n        } else {\n          box.reader.skip(8); // Skip \"creation_time\".\n          box.reader.skip(8); // Skip \"modification_time\".\n          this.timescale_ = box.reader.readUint32();\n          box.reader.skip(8); // Skip \"duration\".\n        }\n        box.reader.skip(4); // Skip \"pad\", \"language\", and \"pre-defined\".\n      }.bind(this))\n      .box('minf', Mp4Parser.children)\n      .box('stbl', Mp4Parser.children)\n      .fullBox('stsd', Mp4Parser.sampleDescription)\n      .box('wvtt', function(box) {\n        // A valid vtt init segment, though we have no actual subtitles yet.\n        sawWVTT = true;\n      }).parse(data);\n\n  if (!this.timescale_) {\n    // Missing timescale for VTT content. It should be located in the MDHD.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  if (!sawWVTT) {\n    // A WVTT box should have been seen (a valid vtt init segment with no\n    // actual subtitles).\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n};\n\n\n/** @override */\nshaka.text.Mp4VttParser.prototype.parseMedia = function(data, time) {\n  if (!this.timescale_) {\n    // Missing timescale for VTT content. We should have seen the init segment.\n    shaka.log.error('No init segment for MP4+VTT!');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  const Mp4VttParser = shaka.text.Mp4VttParser;\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let baseTime = 0;\n  /** @type {!Array.<shaka.text.Mp4VttParser.TimeSegment>} */\n  let presentations = [];\n  /** @type {Uint8Array} */\n  let rawPayload;\n  /** @type {!Array.<shaka.text.Cue>} */\n  let cues = [];\n\n  let sawTFDT = false;\n  let sawTRUN = false;\n  let sawMDAT = false;\n  let defaultDuration = null;\n\n  new Mp4Parser()\n      .box('moof', Mp4Parser.children)\n      .box('traf', Mp4Parser.children)\n      .fullBox('tfdt', function(box) {\n        sawTFDT = true;\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'TFDT version can only be 0 or 1');\n        baseTime = (box.version == 0) ?\n            box.reader.readUint32() :\n            box.reader.readUint64();\n      })\n      .fullBox('tfhd', function(box) {\n        goog.asserts.assert(\n            box.flags != null,\n            'A TFHD box should have a valid flags value');\n        defaultDuration = Mp4VttParser.parseTFHD_(\n            box.flags, box.reader);\n      })\n      .fullBox('trun', function(box) {\n        sawTRUN = true;\n        goog.asserts.assert(\n            box.version != null,\n            'A TRUN box should have a valid version value');\n        goog.asserts.assert(\n            box.flags != null,\n            'A TRUN box should have a valid flags value');\n        presentations = Mp4VttParser.parseTRUN_(\n            box.version, box.flags, box.reader);\n      })\n      .box('mdat', Mp4Parser.allData(function(data) {\n        goog.asserts.assert(!sawMDAT,\n            'VTT cues in mp4 with multiple MDAT are not currently supported!');\n        sawMDAT = true;\n        rawPayload = data;\n      })).parse(data);\n\n  if (!sawMDAT && !sawTFDT && !sawTRUN) {\n    // A required box is missing.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  let currentTime = baseTime;\n\n  let dataView = new DataView(\n      rawPayload.buffer, rawPayload.byteOffset, rawPayload.byteLength);\n  /** @type {!shaka.util.DataViewReader} */\n  let reader = new shaka.util.DataViewReader(\n      dataView, shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  presentations.forEach((presentation) => {\n    // If one presentation corresponds to multiple payloads, it is assumed\n    // that all of those payloads have the same start time and duration.\n    let duration = presentation.duration || defaultDuration;\n    let startTime = presentation.timeOffset ?\n                    baseTime + presentation.timeOffset :\n                    currentTime;\n    currentTime = startTime + (duration || 0);\n\n    // Read samples until it adds up to the given size.\n    let totalSize = 0;\n    do {\n      // Read the payload size.\n      let payloadSize = reader.readUint32();\n      totalSize += payloadSize;\n\n      // Skip the type.\n      let payloadType = reader.readUint32();\n      let payloadName = shaka.util.Mp4Parser.typeToString(payloadType);\n\n      // Read the data payload.\n      /** @type {Uint8Array} */\n      let payload = null;\n      if (payloadName == 'vttc') {\n        if (payloadSize > 8) {\n          payload = reader.readBytes(payloadSize - 8);\n        }\n      } else if (payloadName == 'vtte') {\n        // It's a vtte, which is a vtt cue that is empty. Ignore any data that\n        // does exist.\n        reader.skip(payloadSize - 8);\n      } else {\n        shaka.log.error('Unknown box ' + payloadName + '! Skipping!');\n        reader.skip(payloadSize - 8);\n      }\n\n      if (duration) {\n        if (payload) {\n          goog.asserts.assert(\n              this.timescale_ != null, 'Timescale should not be null!');\n          cues.push(shaka.text.Mp4VttParser.parseVTTC_(\n              payload,\n              time.periodStart + startTime / this.timescale_,\n              time.periodStart + currentTime / this.timescale_));\n        }\n      } else {\n        shaka.log.error('WVTT sample duration unknown, and no default found!');\n      }\n\n      goog.asserts.assert(\n          !presentation.sampleSize || totalSize <= presentation.sampleSize,\n          'The samples do not fit evenly into the sample sizes given in the ' +\n          'TRUN box!');\n\n      // If no sampleSize was specified, it's assumed that this presentation\n      // corresponds to only a single cue.\n    } while (presentation.sampleSize && (totalSize < presentation.sampleSize));\n  });\n\n  goog.asserts.assert(\n      !reader.hasMoreData(),\n      'MDAT which contain VTT cues and non-VTT data are not currently ' +\n      'supported!');\n\n  return /** @type {!Array.<!shaka.extern.Cue>} */ (\n      cues.filter(shaka.util.Functional.isNotNull));\n};\n\n\n/**\n * @typedef {{\n *    duration: ?number,\n *    sampleSize: ?number,\n *    timeOffset: ?number\n *  }}\n *\n * @property {?number} duration\n *    The length of the segment in timescale units.\n * @property {?number} sampleSize\n *    The size of the segment in bytes.\n * @property {?number} timeOffset\n *    The time since the start of the segment in timescale units. Time\n *    offset is based of the start of the segment. If this value is\n *    missing, the accumated durations preceeding this time segment will\n *    be used to create the start time.\n */\nshaka.text.Mp4VttParser.TimeSegment;\n\n\n/**\n * @param {number} flags\n * @param {!shaka.util.DataViewReader} reader\n * @return {?number} The default_sample_duration field, if present.\n * @private\n */\nshaka.text.Mp4VttParser.parseTFHD_ = function(flags, reader) {\n  // Skip \"track_ID\".\n  reader.skip(4);\n\n  // Skip \"base_data_offset\" if present.\n  if (flags & 0x000001) { reader.skip(8); }\n\n  // Skip \"sample_description_index\" if present.\n  if (flags & 0x000002) { reader.skip(4); }\n\n  // Read and return \"default_sample_duration\" if present.\n  if (flags & 0x000008) { return reader.readUint32(); }\n\n  // There is no \"default_sample_duration\".\n  return null;\n};\n\n\n/**\n * @param {number} version\n * @param {number} flags\n * @param {!shaka.util.DataViewReader} reader\n * @return {!Array.<shaka.text.Mp4VttParser.TimeSegment>}\n * @private\n */\nshaka.text.Mp4VttParser.parseTRUN_ = function(version, flags, reader) {\n  let sampleCount = reader.readUint32();\n\n  // Skip \"data_offset\" if present.\n  if (flags & 0x000001) { reader.skip(4); }\n\n  // Skip \"first_sample_flags\" if present.\n  if (flags & 0x000004) { reader.skip(4); }\n\n  let samples = [];\n\n  for (let sampleIndex = 0; sampleIndex < sampleCount; sampleIndex++) {\n    /** @type {shaka.text.Mp4VttParser.TimeSegment} */\n    let sample = {\n      duration: null,\n      sampleSize: null,\n      timeOffset: null,\n    };\n\n    // Read \"sample duration\" if present.\n    if (flags & 0x000100) { sample.duration = reader.readUint32(); }\n\n    // Read \"sample_size\" if present.\n    if (flags & 0x000200) { sample.sampleSize = reader.readUint32(); }\n\n    // Skip \"sample_flags\" if present.\n    if (flags & 0x000400) { reader.skip(4); }\n\n    // Read \"sample_time_offset\" if present.\n    if (flags & 0x000800) {\n      sample.timeOffset = version == 0 ?\n          reader.readUint32() :\n          reader.readInt32();\n    }\n\n    samples.push(sample);\n  }\n\n  return samples;\n};\n\n\n/**\n * Parses a vttc box into a cue.\n *\n * @param {!Uint8Array} data\n * @param {number} startTime\n * @param {number} endTime\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.Mp4VttParser.parseVTTC_ = function(data, startTime, endTime) {\n  let payload;\n  let id;\n  let settings;\n\n  new shaka.util.Mp4Parser()\n      .box('payl', shaka.util.Mp4Parser.allData(function(data) {\n        payload = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .box('iden', shaka.util.Mp4Parser.allData(function(data) {\n        id = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .box('sttg', shaka.util.Mp4Parser.allData(function(data) {\n        settings = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .parse(data);\n\n  if (payload) {\n    return shaka.text.Mp4VttParser.assembleCue_(payload,\n                                                id,\n                                                settings,\n                                                startTime,\n                                                endTime);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Take the individual components that make a cue and create a vttc cue.\n *\n * @param {string} payload\n * @param {?string} id\n * @param {?string} settings\n * @param {number} startTime\n * @param {number} endTime\n * @return {!shaka.text.Cue}\n * @private\n */\nshaka.text.Mp4VttParser.assembleCue_ = function(payload,\n                                                id,\n                                                settings,\n                                                startTime,\n                                                endTime) {\n  let cue = new shaka.text.Cue(\n      startTime,\n      endTime,\n      payload);\n\n  if (id) {\n    cue.id = id;\n  }\n\n  if (settings) {\n    let parser = new shaka.util.TextParser(settings);\n\n    let word = parser.readWord();\n\n    while (word) {\n      // TODO: Check WebVTTConfigurationBox for region info.\n      if (!shaka.text.VttTextParser.parseCueSetting(cue, word,\n                                                    /* VTTRegions */ [])) {\n        shaka.log.warning('VTT parser encountered an invalid VTT setting: ',\n                          word,\n                          ' The setting will be ignored.');\n      }\n\n      parser.skipWhitespace();\n      word = parser.readWord();\n    }\n  }\n\n  return cue;\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"wvtt\"',\n    shaka.text.Mp4VttParser);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.1.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Polyfills para compatibilidade com Tizen TV e navegadores mais antigos\r\n\r\n/**\r\n * Polyfill para String.prototype.padStart\r\n * Necessário para Tizen TV que não suporta ES2017\r\n */\r\nif (!String.prototype.padStart) {\r\n  String.prototype.padStart = function padStart(targetLength, padString) {\r\n    targetLength = Math.floor(targetLength) || 0;\r\n    if (targetLength < this.length) return String(this);\r\n    \r\n    padString = padString !== undefined ? String(padString) : ' ';\r\n    if (padString.length === 0) return String(this);\r\n    \r\n    const str = String(this);\r\n    const padLength = targetLength - str.length;\r\n    \r\n    if (padLength <= 0) return str;\r\n    \r\n    // Repetir padString quantas vezes necessário\r\n    let pad = '';\r\n    let repeatCount = Math.ceil(padLength / padString.length);\r\n    for (let i = 0; i < repeatCount; i++) {\r\n      pad += padString;\r\n    }\r\n    \r\n    return pad.slice(0, padLength) + str;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para String.prototype.padEnd\r\n * Para completude, caso seja necessário no futuro\r\n */\r\nif (!String.prototype.padEnd) {\r\n  String.prototype.padEnd = function padEnd(targetLength, padString) {\r\n    targetLength = Math.floor(targetLength) || 0;\r\n    if (targetLength < this.length) return String(this);\r\n    \r\n    padString = padString !== undefined ? String(padString) : ' ';\r\n    if (padString.length === 0) return String(this);\r\n    \r\n    const str = String(this);\r\n    const padLength = targetLength - str.length;\r\n    \r\n    if (padLength <= 0) return str;\r\n    \r\n    // Repetir padString quantas vezes necessário\r\n    let pad = '';\r\n    let repeatCount = Math.ceil(padLength / padString.length);\r\n    for (let i = 0; i < repeatCount; i++) {\r\n      pad += padString;\r\n    }\r\n    \r\n    return str + pad.slice(0, padLength);\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para Array.prototype.includes\r\n * Tizen TV mais antigo pode não suportar\r\n */\r\nif (!Array.prototype.includes) {\r\n  Array.prototype.includes = function includes(valueToFind, fromIndex) {\r\n    return this.indexOf(valueToFind, fromIndex) !== -1;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para Array.prototype.find\r\n * Necessário para Tizen TV\r\n */\r\nif (!Array.prototype.find) {\r\n  Array.prototype.find = function find(predicate) {\r\n    if (this == null) {\r\n      throw new TypeError('Array.prototype.find called on null or undefined');\r\n    }\r\n    if (typeof predicate !== 'function') {\r\n      throw new TypeError('predicate must be a function');\r\n    }\r\n    const list = Object(this);\r\n    const length = parseInt(list.length) || 0;\r\n    const thisArg = arguments[1];\r\n    for (let i = 0; i < length; i++) {\r\n      const element = list[i];\r\n      if (predicate.call(thisArg, element, i, list)) {\r\n        return element;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para Array.prototype.findIndex\r\n * Útil para encontrar índices\r\n */\r\nif (!Array.prototype.findIndex) {\r\n  Array.prototype.findIndex = function findIndex(predicate) {\r\n    if (this == null) {\r\n      throw new TypeError('Array.prototype.findIndex called on null or undefined');\r\n    }\r\n    if (typeof predicate !== 'function') {\r\n      throw new TypeError('predicate must be a function');\r\n    }\r\n    const list = Object(this);\r\n    const length = parseInt(list.length) || 0;\r\n    const thisArg = arguments[1];\r\n    for (let i = 0; i < length; i++) {\r\n      const element = list[i];\r\n      if (predicate.call(thisArg, element, i, list)) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para String.prototype.includes\r\n * Tizen TV pode não suportar\r\n */\r\nif (!String.prototype.includes) {\r\n  String.prototype.includes = function includes(search, start) {\r\n    if (typeof start !== 'number') {\r\n      start = 0;\r\n    }\r\n    if (start + search.length > this.length) {\r\n      return false;\r\n    } else {\r\n      return this.indexOf(search, start) !== -1;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para String.prototype.startsWith\r\n * Tizen TV pode não suportar\r\n */\r\nif (!String.prototype.startsWith) {\r\n  String.prototype.startsWith = function startsWith(searchString, position) {\r\n    position = position || 0;\r\n    return this.substr(position, searchString.length) === searchString;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para String.prototype.endsWith\r\n * Tizen TV pode não suportar\r\n */\r\nif (!String.prototype.endsWith) {\r\n  String.prototype.endsWith = function endsWith(searchString, length) {\r\n    if (length === undefined || length > this.length) {\r\n      length = this.length;\r\n    }\r\n    return this.substring(length - searchString.length, length) === searchString;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para Object.entries\r\n * Útil para iteração de objetos\r\n */\r\nif (!Object.entries) {\r\n  Object.entries = function entries(obj) {\r\n    const ownProps = Object.keys(obj);\r\n    let i = ownProps.length;\r\n    const resArray = new Array(i);\r\n    while (i--) {\r\n      resArray[i] = [ownProps[i], obj[ownProps[i]]];\r\n    }\r\n    return resArray;\r\n  };\r\n}\r\n\r\n/**\r\n * Polyfill para Object.values\r\n * Útil para extrair valores de objetos\r\n */\r\nif (!Object.values) {\r\n  Object.values = function values(obj) {\r\n    const ownProps = Object.keys(obj);\r\n    let i = ownProps.length;\r\n    const resArray = new Array(i);\r\n    while (i--) {\r\n      resArray[i] = obj[ownProps[i]];\r\n    }\r\n    return resArray;\r\n  };\r\n}\r\n\r\n/**\r\n * Função auxiliar para formatação de números com zeros à esquerda\r\n * Alternativa segura ao padStart para casos específicos\r\n */\r\nexport const padNumber = (num, length = 2, char = '0') => {\r\n  const str = String(num);\r\n  if (str.length >= length) return str;\r\n  \r\n  const pad = Array(length - str.length + 1).join(char);\r\n  return pad + str;\r\n};\r\n\r\n/**\r\n * Função auxiliar para formatação de episódios\r\n * Uso: formatEpisode(1, 5) -> \"S01E05\"\r\n */\r\nexport const formatEpisode = (season, episode) => {\r\n  return `S${padNumber(season, 2)}E${padNumber(episode, 2)}`;\r\n};\r\n\r\n/**\r\n * Função auxiliar para formatação de duração\r\n * Uso: formatDuration(125) -> \"2h 5min\"\r\n */\r\nexport const formatDuration = (minutes) => {\r\n  if (!minutes || minutes < 1) return 'N/A';\r\n  \r\n  if (minutes < 60) {\r\n    return `${minutes}min`;\r\n  }\r\n  \r\n  const hours = Math.floor(minutes / 60);\r\n  const remainingMinutes = minutes % 60;\r\n  \r\n  if (remainingMinutes === 0) {\r\n    return `${hours}h`;\r\n  }\r\n  \r\n  return `${hours}h ${remainingMinutes}min`;\r\n};\r\n\r\n/**\r\n * Função para verificar suporte a recursos\r\n */\r\nexport const featureSupport = {\r\n  padStart: typeof String.prototype.padStart === 'function',\r\n  scrollTo: typeof Element.prototype.scrollTo === 'function',\r\n  customElements: typeof window.customElements !== 'undefined',\r\n  promises: typeof Promise !== 'undefined',\r\n  fetch: typeof fetch !== 'undefined'\r\n};\r\n\r\n// Log de inicialização dos polyfills\r\nconsole.log('🔧 Polyfills carregados para Tizen TV:', {\r\n  padStart: typeof String.prototype.padStart === 'function',\r\n  padEnd: typeof String.prototype.padEnd === 'function',\r\n  arrayIncludes: typeof Array.prototype.includes === 'function',\r\n  arrayFind: typeof Array.prototype.find === 'function',\r\n  arrayFindIndex: typeof Array.prototype.findIndex === 'function',\r\n  stringIncludes: typeof String.prototype.includes === 'function',\r\n  stringStartsWith: typeof String.prototype.startsWith === 'function',\r\n  stringEndsWith: typeof String.prototype.endsWith === 'function',\r\n  objectEntries: typeof Object.entries === 'function',\r\n  objectValues: typeof Object.values === 'function'\r\n}); ","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import React, { useState } from 'react';\nimport './LoginScreen.css';\n\nconst LoginScreen = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleContinue = () => {\n    // Por enquanto, faz login direto como no app antigo\n    // TODO: Implementar validação real quando necessário\n    onLogin();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleContinue();\n    }\n  };\n\n  return (\n    <div className=\"login-screen\">\n      <img \n        src=\"/images/image-mesh-gradient.png\" \n        className=\"background-image\" \n        alt=\"Background\" \n      />\n      <div className=\"login-form\">\n        <img \n          src=\"/images/BIGTV-transparente.png\" \n          className=\"logo-login\" \n          alt=\"BIGTV Logo\" \n        />\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          onKeyPress={handleKeyPress}\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Senha\"\n          onKeyPress={handleKeyPress}\n        />\n        <button \n          id=\"continueButton\" \n          onClick={handleContinue}\n        >\n          Continuar\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen; ","// IPTV API Service\r\n// Baseado no sistema original do APP-bigtv-main\r\n\r\nconst API_BASE_URL = 'https://rota66.bar/player_api.php';\r\nconst API_CREDENTIALS = {\r\n  username: 'zBB82J',\r\n  password: 'AMeDHq'\r\n};\r\n\r\n// URLs da API (migradas do app antigo)\r\nexport const API_ENDPOINTS = {\r\n  // Categorias\r\n  vodCategories: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_vod_categories`,\r\n  seriesCategories: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_series_categories`,\r\n  liveCategories: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_live_categories`,\r\n  \r\n  // Conteúdo específico (IDs do app antigo)\r\n  lancamentos: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_vod_streams&category_id=82`,\r\n  telenovelas: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_series&category_id=81`,\r\n  classicos: `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=get_vod_streams&category_id=50`,\r\n};\r\n\r\n// Função para construir URLs dinâmicas\r\nexport const buildApiUrl = (action, categoryId = null) => {\r\n  let url = `${API_BASE_URL}?username=${API_CREDENTIALS.username}&password=${API_CREDENTIALS.password}&action=${action}`;\r\n  if (categoryId) {\r\n    url += `&category_id=${categoryId}`;\r\n  }\r\n  return url;\r\n};\r\n\r\n// Função genérica para fazer requisições\r\nconst fetchApiData = async (url) => {\r\n  try {\r\n    console.log('Fetching:', url);\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Erro ao buscar dados da API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Serviços específicos\r\nexport const iptvApi = {\r\n  // Categorias\r\n  getVodCategories: () => fetchApiData(API_ENDPOINTS.vodCategories),\r\n  getSeriesCategories: () => fetchApiData(API_ENDPOINTS.seriesCategories),\r\n  getLiveCategories: () => fetchApiData(API_ENDPOINTS.liveCategories),\r\n  \r\n  // Conteúdo por categoria\r\n  getVodStreams: (categoryId) => fetchApiData(buildApiUrl('get_vod_streams', categoryId)),\r\n  getSeries: (categoryId) => fetchApiData(buildApiUrl('get_series', categoryId)),\r\n  getLiveStreams: (categoryId) => fetchApiData(buildApiUrl('get_live_streams', categoryId)),\r\n  \r\n  // Conteúdo específico (home)\r\n  getLancamentos: () => fetchApiData(API_ENDPOINTS.lancamentos),\r\n  getTelenovelas: () => fetchApiData(API_ENDPOINTS.telenovelas),\r\n  getClassicos: () => fetchApiData(API_ENDPOINTS.classicos),\r\n  \r\n  // Busca (para implementar no futuro)\r\n  search: (query) => {\r\n    // TODO: Implementar busca quando disponível na API\r\n    console.log('Search not implemented yet:', query);\r\n    return Promise.resolve([]);\r\n  }\r\n};\r\n\r\nexport default iptvApi; ","// Utilitários de scroll seguros para compatibilidade com Tizen TV\r\n\r\n/**\r\n * Função auxiliar para scroll seguro compatível com Tizen\r\n * @param {Element} element - Elemento para fazer scroll\r\n * @param {Object} options - Opções de scroll (left, top, behavior)\r\n */\r\nexport const safeScrollTo = (element, options) => {\r\n  if (!element) return;\r\n  \r\n  try {\r\n    // Verifica se scrollTo está disponível e é uma função\r\n    if (typeof element.scrollTo === 'function') {\r\n      element.scrollTo(options);\r\n    } else {\r\n      // Fallback para navegadores que não suportam scrollTo\r\n      if (options.left !== undefined) {\r\n        element.scrollLeft = options.left;\r\n      }\r\n      if (options.top !== undefined) {\r\n        element.scrollTop = options.top;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.warn('Erro no scroll, usando fallback:', error);\r\n    // Fallback manual em caso de erro\r\n    if (options.left !== undefined) {\r\n      element.scrollLeft = options.left;\r\n    }\r\n    if (options.top !== undefined) {\r\n      element.scrollTop = options.top;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Função auxiliar para scrollIntoView seguro\r\n * @param {Element} element - Elemento para fazer scroll\r\n * @param {Object} options - Opções de scrollIntoView\r\n */\r\nexport const safeScrollIntoView = (element, options = {}) => {\r\n  if (!element) return;\r\n  \r\n  try {\r\n    if (typeof element.scrollIntoView === 'function') {\r\n      element.scrollIntoView(options);\r\n    } else {\r\n      // Fallback simples para navegadores que não suportam scrollIntoView\r\n      const rect = element.getBoundingClientRect();\r\n      const scrollTop = window.pageYOffset + rect.top - (window.innerHeight / 2);\r\n      \r\n      // Usa safeScrollTo para window também\r\n      if (typeof window.scrollTo === 'function') {\r\n        window.scrollTo({\r\n          top: Math.max(0, scrollTop),\r\n          behavior: options.behavior || 'smooth'\r\n        });\r\n      } else {\r\n        window.scrollTop = Math.max(0, scrollTop);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.warn('Erro no scrollIntoView, usando fallback:', error);\r\n    // Fallback básico\r\n    try {\r\n      element.scrollIntoView();\r\n    } catch (fallbackError) {\r\n      console.warn('Fallback também falhou:', fallbackError);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Função para scroll horizontal em carrosséis\r\n * @param {Element} container - Container do carrossel\r\n * @param {Element} targetElement - Elemento alvo\r\n * @param {String} behavior - Comportamento do scroll ('smooth' ou 'auto')\r\n */\r\nexport const scrollToElementInCarousel = (container, targetElement, behavior = 'smooth') => {\r\n  if (!container || !targetElement) return;\r\n  \r\n  const elementWidth = targetElement.offsetWidth;\r\n  const containerWidth = container.offsetWidth;\r\n  const scrollLeft = targetElement.offsetLeft - (containerWidth / 2) + (elementWidth / 2);\r\n  \r\n  safeScrollTo(container, {\r\n    left: Math.max(0, scrollLeft),\r\n    behavior: behavior\r\n  });\r\n};\r\n\r\n/**\r\n * Verifica se o elemento está visível no viewport\r\n * @param {Element} element - Elemento para verificar\r\n * @param {Element} container - Container de referência (opcional)\r\n * @returns {boolean} - True se visível\r\n */\r\nexport const isElementVisible = (element, container = null) => {\r\n  if (!element) return false;\r\n  \r\n  try {\r\n    const rect = element.getBoundingClientRect();\r\n    const containerRect = container ? container.getBoundingClientRect() : {\r\n      top: 0,\r\n      left: 0,\r\n      bottom: window.innerHeight,\r\n      right: window.innerWidth\r\n    };\r\n    \r\n    return (\r\n      rect.left >= containerRect.left &&\r\n      rect.right <= containerRect.right &&\r\n      rect.top >= containerRect.top &&\r\n      rect.bottom <= containerRect.bottom\r\n    );\r\n  } catch (error) {\r\n    console.warn('Erro ao verificar visibilidade:', error);\r\n    return false;\r\n  }\r\n}; ","import React, { useState, useEffect, useRef } from 'react';\nimport { iptvApi } from '../services/iptvApi';\nimport { safeScrollTo, safeScrollIntoView } from '../utils/scrollUtils';\nimport './Home.css';\n\nconst Home = ({ onMenu, menuFocus, shelfFocus, itemFocus }) => {\n  const [lancamentos, setLancamentos] = useState([]);\n  const [telenovelas, setTelenovelas] = useState([]);\n  const [classicos, setClassicos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [featuredContent, setFeaturedContent] = useState(null);\n  const [previewContent, setPreviewContent] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  \n  const previewTimeoutRef = useRef(null);\n  const shelfRefs = useRef([]);\n  const itemRefs = useRef([]);\n  const heroButtonRefs = useRef([]);\n\n  // Carregar dados da API quando o componente montar\n  useEffect(() => {\n    const loadHomeData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Carregar dados em paralelo com timeout para TV\n        const timeout = new Promise((_, reject) => \n          setTimeout(() => reject(new Error('Timeout na requisição')), 10000)\n        );\n        \n        const [lancamentosData, telenovelaData, classicosData] = await Promise.race([\n          Promise.all([\n            iptvApi.getLancamentos(),\n            iptvApi.getTelenovelas(),\n            iptvApi.getClassicos()\n          ]),\n          timeout\n        ]);\n\n        // Limitar a 10 itens por prateleira para navegação correta\n        const lancamentosFiltered = Array.isArray(lancamentosData) ? lancamentosData.slice(0, 10) : [];\n        const telenovelaFiltered = Array.isArray(telenovelaData) ? telenovelaData.slice(0, 10) : [];\n        const classicosFiltered = Array.isArray(classicosData) ? classicosData.slice(0, 10) : [];\n        \n        setLancamentos(lancamentosFiltered);\n        setTelenovelas(telenovelaFiltered);\n        setClassicos(classicosFiltered);\n        \n        // Definir conteúdo em destaque (primeiro item dos lançamentos ou qualquer disponível)\n        const featured = lancamentosFiltered[0] || telenovelaFiltered[0] || classicosFiltered[0];\n        if (featured) {\n          setFeaturedContent({\n            ...featured,\n            type: lancamentosFiltered[0] ? 'movie' : telenovelaFiltered[0] ? 'series' : 'movie'\n          });\n        }\n        \n      } catch (error) {\n        console.error('Erro ao carregar dados do home:', error);\n        setError('Erro ao carregar conteúdo. Verifique sua conexão.');\n        // Definir dados vazios em caso de erro\n        setLancamentos([]);\n        setTelenovelas([]);\n        setClassicos([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadHomeData();\n  }, []);\n\n  // Definir prateleiras com dados carregados\n  const shelves = [\n    { \n      id: 'lancamentos',\n      title: '🎬 Lançamentos em Destaque', \n      items: lancamentos, \n      type: 'movie',\n      emptyMessage: 'Nenhum lançamento disponível'\n    },\n    { \n      id: 'telenovelas',\n      title: '📺 Séries e Telenovelas', \n      items: telenovelas, \n      type: 'series',\n      emptyMessage: 'Nenhuma série disponível'\n    },\n    { \n      id: 'classicos',\n      title: '🏆 Clássicos do Cinema', \n      items: classicos, \n      type: 'movie',\n      emptyMessage: 'Nenhum clássico disponível'\n    }\n  ];\n\n  // Scroll automático para o item focado\n  useEffect(() => {\n    if (onMenu) {\n      return;\n    }\n\n    // Foco nos botões do Hero\n    if (shelfFocus === -1 && itemFocus !== null && heroButtonRefs.current[itemFocus]) {\n      safeScrollIntoView(heroButtonRefs.current[itemFocus], {\n        behavior: 'smooth',\n        block: 'center'\n      });\n    } \n    // Foco nas prateleiras\n    else if (shelfFocus !== null && shelfFocus > -1 && itemFocus !== null) {\n      const currentShelfRef = shelfRefs.current[shelfFocus];\n      const currentItemRef = itemRefs.current[`${shelfFocus}-${itemFocus}`];\n      \n      if (currentShelfRef && currentItemRef) {\n        // Scroll da prateleira para mostrar o item focado\n        const shelfContainer = currentShelfRef.querySelector('.carousel-track');\n        if (shelfContainer) {\n          const itemRect = currentItemRef.getBoundingClientRect();\n          const containerRect = shelfContainer.getBoundingClientRect();\n          \n          if (itemRect.left < containerRect.left || itemRect.right > containerRect.right) {\n            const scrollLeft = currentItemRef.offsetLeft - (shelfContainer.offsetWidth / 2) + (currentItemRef.offsetWidth / 2);\n            safeScrollTo(shelfContainer, {\n              left: Math.max(0, scrollLeft),\n              behavior: 'smooth'\n            });\n          }\n        }\n        \n        // Scroll da página para mostrar a prateleira focada\n        const shelfRect = currentShelfRef.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n        \n        if (shelfRect.top < 100 || shelfRect.bottom > windowHeight - 100) {\n          safeScrollIntoView(currentShelfRef, {\n            behavior: 'smooth',\n            block: 'center'\n          });\n        }\n      }\n    }\n  }, [onMenu, shelfFocus, itemFocus]);\n\n  // Função para lidar com foco em item (preview após delay)\n  const handleItemFocus = (item, type) => {\n    // Limpar timeout anterior\n    if (previewTimeoutRef.current) {\n      clearTimeout(previewTimeoutRef.current);\n    }\n    \n    // Definir novo timeout para preview\n    previewTimeoutRef.current = setTimeout(() => {\n      setPreviewContent({ ...item, type });\n      setShowPreview(true);\n    }, 1000); // 1 segundo de delay\n  };\n\n  // Função para lidar com saída de foco\n  const handleItemBlur = () => {\n    if (previewTimeoutRef.current) {\n      clearTimeout(previewTimeoutRef.current);\n    }\n    setShowPreview(false);\n    setPreviewContent(null);\n  };\n\n  const handleItemClick = (item, type) => {\n    console.log('Item selecionado:', item, 'Tipo:', type);\n    \n    // Disparar evento customizado para o App.js processar\n    const playEvent = new CustomEvent('playContent', {\n      detail: {\n        streamUrl: type === 'series' \n          ? `https://rota66.bar/series/${item.series_id}/${item.season || 1}/${item.episode || 1}.m3u8`\n          : `https://rota66.bar/movie/${item.stream_id}.m3u8`,\n        streamInfo: {\n          name: item.name,\n          type: type,\n          poster: item.stream_icon || item.cover,\n          ...item\n        }\n      }\n    });\n    window.dispatchEvent(playEvent);\n  };\n\n  const handleFeaturedPlay = () => {\n    if (featuredContent) {\n      handleItemClick(featuredContent, featuredContent.type);\n    }\n  };\n\n  const handleFeaturedInfo = () => {\n    if (featuredContent && featuredContent.type === 'series') {\n      const seriesDetailsEvent = new CustomEvent('showSeriesDetails', {\n        detail: {\n          seriesData: featuredContent\n        }\n      });\n      window.dispatchEvent(seriesDetailsEvent);\n    }\n  };\n\n  // Limpar timeout ao desmontar componente\n  useEffect(() => {\n    return () => {\n      if (previewTimeoutRef.current) {\n        clearTimeout(previewTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Listener para cliques nos botões do hero via navegação\n  useEffect(() => {\n    const handleHeroButtonClick = (event) => {\n      const { buttonIndex } = event.detail;\n      \n      if (buttonIndex === 0) {\n        // Botão \"Assistir\"\n        handleFeaturedPlay();\n      } else if (buttonIndex === 1) {\n        // Botão \"Mais Informações\"\n        handleFeaturedInfo();\n      }\n    };\n\n    window.addEventListener('heroButtonClick', handleHeroButtonClick);\n    return () => window.removeEventListener('heroButtonClick', handleHeroButtonClick);\n  }, [featuredContent]);\n\n  // Estado de loading otimizado para TV\n  if (loading) {\n    return (\n      <div className=\"home-loading\">\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\">\n            <div className=\"spinner-ring\"></div>\n          </div>\n          <h2 className=\"loading-title\">BIGTV</h2>\n          <p className=\"loading-text\">Carregando seu entretenimento...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Estado de erro\n  if (error) {\n    return (\n      <div className=\"home-error\">\n        <div className=\"error-content\">\n          <div className=\"error-icon\">\n            <i className=\"fa-solid fa-wifi\"></i>\n          </div>\n          <h2 className=\"error-title\">Ops! Algo deu errado</h2>\n          <p className=\"error-message\">{error}</p>\n          <button \n            className=\"error-retry-btn\"\n            onClick={() => window.location.reload()}\n          >\n            <i className=\"fa-solid fa-refresh\"></i>\n            Tentar Novamente\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"home-container\">\n      {/* Hero Banner - Estilo Netflix */}\n      {featuredContent && (\n        <section className=\"hero-banner\">\n          <div className=\"hero-background\">\n            <img \n              src={featuredContent.stream_icon || featuredContent.cover || '/images/banner (1).jpg'} \n              alt={featuredContent.name}\n              className=\"hero-bg-image\"\n              loading=\"eager\"\n            />\n            <div className=\"hero-color\"></div>\n          </div>\n          \n          <div className=\"hero-content\">\n            <div className=\"hero-info\">\n              <div className=\"hero-logo\">\n                <img \n                  src=\"/images/BIGTV-transparente.png\" \n                  alt=\"BIGTV\" \n                  className=\"brand-logo\"\n                />\n              </div>\n              \n              <h1 className=\"hero-title\">{featuredContent.name}</h1>\n              \n              <div className=\"hero-meta\">\n                <span className=\"content-type\">\n                  {featuredContent.type === 'series' ? 'SÉRIE' : 'FILME'}\n                </span>\n                {featuredContent.rating && (\n                  <span className=\"content-rating\">\n                    <i className=\"fa-solid fa-star\"></i>\n                    {featuredContent.rating}\n                  </span>\n                )}\n                <span className=\"content-year\">2024</span>\n              </div>\n              \n              <p className=\"hero-description\">\n                {featuredContent.plot || \n                 `${featuredContent.type === 'series' ? 'Uma série' : 'Um filme'} imperdível que vai te manter grudado na tela. Entretenimento de qualidade com a melhor experiência de streaming.`}\n              </p>\n              \n              <div className=\"hero-actions\">\n                <button \n                  ref={el => (heroButtonRefs.current[0] = el)}\n                  className={`hero-btn primary ${!onMenu && shelfFocus === -1 && itemFocus === 0 ? 'focused' : ''}`}\n                  onClick={handleFeaturedPlay}\n                >\n                  <i className=\"fa-solid fa-play\"></i>\n                  Assistir\n                </button>\n                \n                {featuredContent.type === 'series' && (\n                  <button\n                    ref={el => (heroButtonRefs.current[1] = el)}\n                    className={`hero-btn secondary ${!onMenu && shelfFocus === -1 && itemFocus === 1 ? 'focused' : ''}`}\n                    onClick={handleFeaturedInfo}\n                  >\n                    <i className=\"fa-solid fa-info-circle\"></i>\n                    Mais Informações\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Prateleiras de Conteúdo - Estilo Streaming */}\n      <section className=\"content-shelves\">\n        {shelves.map((shelf, shelfIndex) => (\n          <div \n            key={shelf.id} \n            className=\"content-shelf\"\n            ref={el => shelfRefs.current[shelfIndex] = el}\n          >\n            <h2 className=\"shelf-title\">{shelf.title}</h2>\n            \n            <div className=\"shelf-carousel\">\n              {shelf.items.length > 0 ? (\n                <div className=\"carousel-track\">\n                  {shelf.items.map((item, itemIndex) => {\n                    const isFocused = !onMenu && shelfFocus === shelfIndex && itemFocus === itemIndex;\n                    \n                    return (\n                      <div\n                        key={item.stream_id || item.series_id || itemIndex}\n                        ref={el => itemRefs.current[`${shelfIndex}-${itemIndex}`] = el}\n                        className={`content-card ${isFocused ? 'focused' : ''}`}\n                        onClick={() => handleItemClick(item, shelf.type)}\n                        onMouseEnter={() => handleItemFocus(item, shelf.type)}\n                        onMouseLeave={handleItemBlur}\n                      >\n                        <div className=\"card-image\">\n                          <img\n                            src={item.stream_icon || item.cover || '/images/BIGTV-transparente.png'}\n                            alt={item.name}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              e.target.src = '/images/BIGTV-transparente.png';\n                            }}\n                          />\n                          \n                          <div className=\"card-overlay\">\n                            <div className=\"play-button\">\n                              <i className=\"fa-solid fa-play\"></i>\n                            </div>\n                          </div>\n                          \n                          {item.rating && (\n                            <div className=\"card-rating\">\n                              <i className=\"fa-solid fa-star\"></i>\n                              <span>{item.rating}</span>\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div className=\"card-info\">\n                          <h3 className=\"card-title\">{item.name}</h3>\n                          <div className=\"card-meta\">\n                            <span className=\"card-type\">\n                              {shelf.type === 'series' ? 'Série' : 'Filme'}\n                            </span>\n                            {item.episode_run_time && (\n                              <span className=\"card-duration\">\n                                {item.episode_run_time}min\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      \n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"shelf-empty\">\n                  <div className=\"empty-content\">\n                    <i className=\"fa-solid fa-film\"></i>\n                    <p>{shelf.emptyMessage}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </section>\n\n      {/* Navegação Helper - Canto inferior */}\n      <div className=\"navigation-helper\">\n        <div className=\"nav-hint\">\n          <i className=\"fa-solid fa-gamepad\"></i>\n          <span>Use as setas para navegar • OK para assistir • Voltar para menu</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home; ","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst menuItems = [\r\n  { id: 'search', label: 'Pesquisar', icon: 'fa-magnifying-glass' },\r\n  { id: 'home', label: 'Home', icon: 'fa-house' },\r\n  { id: 'channels', label: 'Canais Ao Vivo', icon: 'fa-tv' },\r\n  { id: 'movies', label: 'Filmes', icon: 'fa-film' },\r\n  { id: 'series', label: 'Séries', icon: 'fa-video' },\r\n];\r\n\r\nconst Sidebar = ({ currentSection, onMenu, menuFocus, onSectionChange }) => {\r\n  const handleItemClick = (sectionId) => {\r\n    onSectionChange(sectionId);\r\n  };\r\n\r\n  return (\r\n    <nav className={`sidebar ${onMenu ? 'expanded' : 'collapsed'}`}>\r\n      <div className=\"sidebar-logo\">\r\n        <img \r\n          src=\"/images/BIGTV-transparente.png\" \r\n          alt=\"BIGTV Logo\" \r\n          className=\"sidebar-logo-img\"\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"sidebar-menu\">\r\n        {menuItems.map((item, idx) => (\r\n          <div \r\n            key={item.id} \r\n            className={`sidebar-menu-item ${\r\n              currentSection === item.id ? 'active' : ''\r\n            } ${\r\n              onMenu && menuFocus === idx ? 'focused' : ''\r\n            }`}\r\n            onClick={() => handleItemClick(item.id)}\r\n            data-tooltip={item.label}\r\n          >\r\n            <div className=\"menu-item-icon\">\r\n              <i className={`fa-solid ${item.icon}`}></i>\r\n            </div>\r\n            <span className=\"menu-item-label\">{item.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { iptvApi } from '../services/iptvApi';\r\nimport { safeScrollIntoView } from '../utils/scrollUtils';\r\nimport './Channels.css';\r\n\r\nconst Channels = ({ isActive }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [channelsLoading, setChannelsLoading] = useState(false);\r\n  \r\n  // Estados de navegação\r\n  const [focusArea, setFocusArea] = useState('categories'); // 'categories' ou 'channels'\r\n  const [categoryFocus, setCategoryFocus] = useState(0);\r\n  const [channelFocus, setChannelFocus] = useState(0);\r\n\r\n  // Estados de paginação (corrigidos para ficar igual ao Series.js)\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const ITEMS_PER_PAGE = 15; // 5 colunas x 3 linhas\r\n  const GRID_COLUMNS = 5;\r\n  const GRID_ROWS = 3;\r\n\r\n  // Referencias para navegação\r\n  const categoriesRef = useRef([]);\r\n  const channelsRef = useRef([]);\r\n  const containerRef = useRef(null);\r\n\r\n  const API_BASE_URL = 'https://rota66.bar/player_api.php';\r\n  const API_CREDENTIALS = 'username=zBB82J&password=AMeDHq';\r\n\r\n  // Função para carregar categorias de canais ao vivo\r\n  const loadLiveCategories = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_live_categories`\r\n      );\r\n      const data = await response.json();\r\n      setCategories(data);\r\n      \r\n      // Selecionar primeira categoria automaticamente\r\n      if (data.length > 0) {\r\n        setSelectedCategory(data[0].category_id);\r\n        setCategoryFocus(0);\r\n        loadLiveChannels(data[0].category_id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar categorias:', error);\r\n      setCategories([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Função para carregar canais de uma categoria\r\n  const loadLiveChannels = useCallback(async (categoryId) => {\r\n    setChannelsLoading(true);\r\n    setChannelFocus(0); // Reset channel focus\r\n    setCurrentPage(0); // Resetar para primeira página\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_live_streams&category_id=${categoryId}`\r\n      );\r\n      const data = await response.json();\r\n      setChannels(data);\r\n      \r\n      // Se estivermos no grid de canais, voltar o foco para os canais\r\n      if (focusArea === 'channels') {\r\n        setChannelFocus(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar canais:', error);\r\n      setChannels([]);\r\n    } finally {\r\n      setChannelsLoading(false);\r\n    }\r\n  }, [focusArea]);\r\n\r\n  // Calcular canais da página atual\r\n  const getCurrentPageChannels = useCallback(() => {\r\n    const startIndex = currentPage * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    return channels.slice(startIndex, endIndex);\r\n  }, [currentPage, channels]);\r\n\r\n  const totalPages = Math.ceil(channels.length / ITEMS_PER_PAGE);\r\n  const currentPageChannels = getCurrentPageChannels();\r\n\r\n  // Função para selecionar canal\r\n  const handleChannelSelect = useCallback((channel) => {\r\n    console.log('Canal selecionado:', channel);\r\n    \r\n    // Construir URL do stream com a estrutura correta\r\n    const streamUrl = `https://rota66.bar/${API_CREDENTIALS.split('&')[0].split('=')[1]}/${API_CREDENTIALS.split('&')[1].split('=')[1]}/${channel.stream_id}`;\r\n    \r\n    // Informações do canal para o player\r\n    const streamInfo = {\r\n      name: channel.name,\r\n      category: selectedCategory ? categories.find(cat => cat.category_id === selectedCategory)?.category_name : 'Canal',\r\n      description: `Canal ao vivo - ${channel.name}`,\r\n      type: 'live'\r\n    };\r\n\r\n    // Disparar evento para reproduzir no VideoPlayer\r\n    const playEvent = new CustomEvent('playContent', {\r\n      detail: { streamUrl, streamInfo }\r\n    });\r\n    window.dispatchEvent(playEvent);\r\n  }, [API_CREDENTIALS, selectedCategory, categories]);\r\n\r\n  // Função para clicar em categoria\r\n  const handleCategoryClick = useCallback((categoryId) => {\r\n    setSelectedCategory(categoryId);\r\n    const categoryIndex = categories.findIndex(cat => cat.category_id === categoryId);\r\n    setCategoryFocus(categoryIndex);\r\n    loadLiveChannels(categoryId);\r\n    setFocusArea('channels'); // Mover foco para os canais\r\n  }, [categories, loadLiveChannels]);\r\n\r\n  // Carregar categorias de canais ao vivo\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      loadLiveCategories();\r\n    }\r\n  }, [isActive, loadLiveCategories]);\r\n\r\n  // Efeito para auto-scroll baseado no foco\r\n  useEffect(() => {\r\n    // Limpar focos anteriores\r\n    categoriesRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n    channelsRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n\r\n    // Auto-scroll para categoria focada\r\n    if (focusArea === 'categories' && categoriesRef.current[categoryFocus]) {\r\n      categoriesRef.current[categoryFocus].classList.add('focused');\r\n      safeScrollIntoView(categoriesRef.current[categoryFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n    // Auto-scroll para canal focado\r\n    else if (focusArea === 'channels' && channelsRef.current[channelFocus]) {\r\n      channelsRef.current[channelFocus].classList.add('focused');\r\n      safeScrollIntoView(channelsRef.current[channelFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n  }, [focusArea, categoryFocus, channelFocus]);\r\n\r\n  // Função de navegação das categorias\r\n  const handleCategoriesNavigation = useCallback((keyCode) => {\r\n    if (keyCode === 38) { // Cima\r\n      setCategoryFocus(prev => Math.max(0, prev - 1));\r\n    } else if (keyCode === 40) { // Baixo\r\n      setCategoryFocus(prev => Math.min(categories.length - 1, prev + 1));\r\n    } else if (keyCode === 37) { // Esquerda - voltar para sidebar\r\n      const backEvent = new CustomEvent('backToSidebar');\r\n      window.dispatchEvent(backEvent);\r\n    } else if (keyCode === 39) { // Direita - ir para canais\r\n      if (channels.length > 0) {\r\n        setFocusArea('channels');\r\n        setChannelFocus(0);\r\n      }\r\n    } else if (keyCode === 13) { // OK - selecionar categoria\r\n      if (categories[categoryFocus]) {\r\n        const selectedCat = categories[categoryFocus];\r\n        setSelectedCategory(selectedCat.category_id);\r\n        loadLiveChannels(selectedCat.category_id);\r\n      }\r\n    }\r\n  }, [categories, categoryFocus, channels.length, loadLiveChannels]);\r\n\r\n  // Função de navegação dos canais (corrigida para ficar igual ao Series.js)\r\n  const handleChannelsNavigationInternal = useCallback((keyCode) => {\r\n    const currentPageChannelsCount = currentPageChannels.length;\r\n\r\n    if (keyCode === 38) { // Cima\r\n      const currentRow = Math.floor(channelFocus / GRID_COLUMNS);\r\n      \r\n      if (currentRow > 0) {\r\n        const newFocus = Math.max(0, channelFocus - GRID_COLUMNS);\r\n        setChannelFocus(newFocus);\r\n      } else {\r\n        // Se estiver na primeira linha e houver página anterior\r\n        if (currentPage > 0) {\r\n          setCurrentPage(currentPage - 1);\r\n          const currentCol = channelFocus % GRID_COLUMNS;\r\n          const newFocusAttempt = (GRID_ROWS - 1) * GRID_COLUMNS + currentCol;\r\n          const lastPageStartIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n          const previousPageChannelsCount = channels.slice(lastPageStartIndex, lastPageStartIndex + ITEMS_PER_PAGE).length;\r\n          setChannelFocus(Math.min(newFocusAttempt, previousPageChannelsCount - 1));\r\n        }\r\n      }\r\n    } else if (keyCode === 40) { // Baixo\r\n      const currentRow = Math.floor(channelFocus / GRID_COLUMNS);\r\n      const maxRow = Math.floor((currentPageChannelsCount - 1) / GRID_COLUMNS);\r\n      \r\n      if (currentRow < maxRow) {\r\n        const newFocus = Math.min(currentPageChannelsCount - 1, channelFocus + GRID_COLUMNS);\r\n        setChannelFocus(newFocus);\r\n      } else {\r\n        // Se estiver na última linha e houver próxima página\r\n        if (currentPage < totalPages - 1) {\r\n          setCurrentPage(currentPage + 1);\r\n          setChannelFocus(channelFocus % GRID_COLUMNS); // Manter coluna, ir para primeira linha da próxima página\r\n        }\r\n      }\r\n    } else if (keyCode === 37) { // Esquerda\r\n      const currentCol = channelFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol > 0) {\r\n        setChannelFocus(channelFocus - 1);\r\n      } else {\r\n        // Se estiver na primeira coluna, voltar para categorias\r\n        setFocusArea('categories');\r\n        const selectedIndex = categories.findIndex(cat => cat.category_id === selectedCategory);\r\n        setCategoryFocus(selectedIndex >= 0 ? selectedIndex : 0);\r\n      }\r\n    } else if (keyCode === 39) { // Direita\r\n      const currentCol = channelFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol < GRID_COLUMNS - 1 && channelFocus < currentPageChannelsCount - 1) {\r\n        // Mover para próximo item na mesma linha\r\n        setChannelFocus(channelFocus + 1);\r\n      } else if (currentCol === GRID_COLUMNS - 1) {\r\n        // Estamos na última coluna\r\n        const currentRow = Math.floor(channelFocus / GRID_COLUMNS);\r\n        const maxRow = Math.floor((currentPageChannelsCount - 1) / GRID_COLUMNS);\r\n        \r\n        if (currentRow < maxRow) {\r\n          // Há linha abaixo na mesma página → descer para primeira coluna da próxima linha\r\n          setChannelFocus((currentRow + 1) * GRID_COLUMNS);\r\n        } else if (currentPage < totalPages - 1) {\r\n          // Última linha da página → mudar página\r\n          setCurrentPage(currentPage + 1);\r\n          setChannelFocus(0); // Ir para primeiro item da nova página\r\n        }\r\n      }\r\n    } else if (keyCode === 13) { // OK - selecionar canal\r\n      if (currentPageChannels[channelFocus]) {\r\n        const actualChannelIndex = currentPage * ITEMS_PER_PAGE + channelFocus;\r\n        handleChannelSelect(channels[actualChannelIndex]);\r\n      }\r\n    }\r\n  }, [\r\n    currentPageChannels,\r\n    channelFocus,\r\n    currentPage,\r\n    totalPages,\r\n    channels,\r\n    categories,\r\n    selectedCategory,\r\n    handleChannelSelect\r\n  ]);\r\n\r\n  // Sistema de navegação por controle remoto\r\n  useEffect(() => {\r\n    if (!isActive) return;\r\n\r\n    const handleChannelsNavigation = (event) => {\r\n      const { keyCode } = event.detail;\r\n      \r\n      if (focusArea === 'categories') {\r\n        handleCategoriesNavigation(keyCode);\r\n      } else if (focusArea === 'channels') {\r\n        handleChannelsNavigationInternal(keyCode);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('channelsNavigation', handleChannelsNavigation);\r\n    return () => window.removeEventListener('channelsNavigation', handleChannelsNavigation);\r\n  }, [isActive, focusArea, handleCategoriesNavigation, handleChannelsNavigationInternal]);\r\n\r\n  // Função para tratar erros de imagem\r\n  const handleImageError = (e) => {\r\n    e.target.style.display = 'none';\r\n  };\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div className=\"channels-page\" ref={containerRef}>\r\n      <div className=\"category-sidebar\">\r\n        {loading ? (\r\n          <div className=\"loading\">Carregando categorias...</div>\r\n        ) : (\r\n          <div className=\"category-list\">\r\n            {categories.map((category, index) => (\r\n              <button\r\n                key={category.category_id}\r\n                ref={el => categoriesRef.current[index] = el}\r\n                className={`category-button ${\r\n                  selectedCategory === category.category_id ? 'active' : ''\r\n                }`}\r\n                onClick={() => handleCategoryClick(category.category_id)}\r\n              >\r\n                {category.category_name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"main-content-area\">\r\n        <div className=\"channels-content\">\r\n          {channelsLoading ? (\r\n            <div className=\"loading\">Carregando canais...</div>\r\n          ) : (\r\n            <>\r\n              {totalPages > 1 && (\r\n                <div className=\"pagination-info\">\r\n                  <span>Página {currentPage + 1} de {totalPages}</span>\r\n                  <span className=\"channels-count\">\r\n                    {channels.length} canais • {currentPageChannels.length} nesta página\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div className=\"channels-grid\">\r\n                {currentPageChannels.map((channel, index) => (\r\n                  <div\r\n                    key={channel.stream_id}\r\n                    ref={el => channelsRef.current[index] = el}\r\n                    className=\"channel\"\r\n                    onClick={() => {\r\n                      const actualChannelIndex = currentPage * ITEMS_PER_PAGE + index;\r\n                      handleChannelSelect(channels[actualChannelIndex]);\r\n                    }}\r\n                  >\r\n                    <div className=\"channel-poster\">\r\n                      {channel.stream_icon && (\r\n                        <img\r\n                          src={channel.stream_icon}\r\n                          alt={channel.name}\r\n                          onError={handleImageError}\r\n                        />\r\n                      )}\r\n                      <div className=\"channel-overlay\">\r\n                        <h3 className=\"channel-title\">{channel.name}</h3>\r\n                        <div className=\"channel-actions\">\r\n                          <span className=\"action-hint\">ENTER Assistir</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Channels; ","import React, { useState, useEffect, useCallback } from 'react';\nimport './MoviePreview.css';\n\nconst MoviePreview = ({ movie, isActive, onBack }) => {\n  const [focusedElement, setFocusedElement] = useState('play');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [focusArea, setFocusArea] = useState('actions');\n\n  // Credenciais da API (exemplo, idealmente viria de config)\n  const API_USERNAME = 'zBB82J';\n  const API_PASSWORD = 'AMeDHq';\n\n  // Detectar ambiente Tizen TV\n  const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\n  const isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n  const handleAction = useCallback((action) => {\n    switch (action) {\n      case 'play':\n        console.log('🎬 Reproduzindo filme:', movie);\n        console.log('🔧 Ambiente detectado:', { isTizenTV, isDevelopment });\n        \n        // Construir a URL de stream correta para filmes\n        const streamUrl = `https://rota66.bar/movie/${API_USERNAME}/${API_PASSWORD}/${movie.stream_id}.mp4`;\n\n        // Simplificado para despachar o evento de forma síncrona e direta.\n        // O setTimeout e a lógica de branch do Tizen foram removidos para evitar congelamento.\n        const playEvent = new CustomEvent('playContent', {\n          detail: {\n            streamUrl: streamUrl,\n            streamInfo: {\n              name: movie.name,\n              type: 'movie',\n              category: movie.category_name || 'Filme',\n              description: movie.plot || 'Descrição não disponível',\n              year: movie.releasedate || 'N/A',\n              rating: movie.rating || 'N/A',\n              poster: movie.stream_icon\n            }\n          }\n        });\n\n        console.log('📺 Disparando evento playContent para filme...');\n        window.dispatchEvent(playEvent);\n        break;\n      \n      case 'favorite':\n        toggleFavorite();\n        break;\n      \n      default:\n        break;\n    }\n  }, [movie, isTizenTV, isDevelopment]);\n\n  const toggleFavorite = useCallback(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites') || '{}');\n    const movieKey = `movie_${movie.stream_id}`;\n    \n    if (favorites[movieKey]) {\n      delete favorites[movieKey];\n      setIsFavorite(false);\n    } else {\n      favorites[movieKey] = {\n        ...movie,\n        type: 'movie',\n        addedAt: new Date().toISOString()\n      };\n      setIsFavorite(true);\n    }\n    \n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [movie]);\n\n  // Navegação das ações (botões Play/Favoritos)\n  const handleActionsNavigation = useCallback((keyCode) => {\n    if (keyCode === 37) { // Esquerda\n      setFocusedElement(focusedElement === 'play' ? 'favorite' : 'play');\n    } else if (keyCode === 39) { // Direita\n      setFocusedElement(focusedElement === 'play' ? 'favorite' : 'play');\n    } else if (keyCode === 13) { // Enter - executar ação\n      handleAction(focusedElement);\n    }\n  }, [focusedElement, handleAction]);\n\n  // Inicialização\n  useEffect(() => {\n    if (!isActive || !movie) return;\n\n    // Reset do estado quando a página fica ativa\n    setFocusedElement('play');\n    setFocusArea('actions');\n    \n    const favorites = JSON.parse(localStorage.getItem('favorites') || '{}');\n    const movieKey = `movie_${movie.stream_id}`;\n    setIsFavorite(!!favorites[movieKey]);\n  }, [isActive, movie]);\n\n  // Sistema de navegação por controle remoto\n  useEffect(() => {\n    if (!isActive) return;\n\n    const handleMovieDetailsNavigation = (event) => {\n      const { keyCode } = event.detail;\n      \n      // Tratar tecla de voltar\n      if (keyCode === 8 || keyCode === 10009) { // Backspace ou Return\n        onBack();\n        return;\n      }\n      \n      // Delegar navegação baseada na área de foco\n      if (focusArea === 'actions') {\n        handleActionsNavigation(keyCode);\n      }\n    };\n\n    window.addEventListener('movieDetailsNavigation', handleMovieDetailsNavigation);\n    return () => window.removeEventListener('movieDetailsNavigation', handleMovieDetailsNavigation);\n  }, [\n    isActive,\n    focusArea,\n    handleActionsNavigation,\n    onBack\n  ]);\n\n  if (!isActive || !movie) return null;\n\n  return (\n    <div className=\"movie-details-page\">\n      <div className=\"movie-main-layout\">\n        <div className=\"movie-info-panel\">\n          <div className=\"movie-header-info\">\n            <img \n              src=\"/images/logo-provider.png\" \n              alt=\"Provider Logo\" \n              className=\"movie-provider-logo\"\n              onError={(e) => { e.target.style.display = 'none'; }}\n            />\n            \n            <div className=\"new-movie-badge\">\n              Filme em Destaque\n            </div>\n            \n            <h1 className=\"movie-title-main\">{movie.name}</h1>\n            \n            <div className=\"movie-meta-info\">\n              <div className=\"meta-item age-rating\">\n                <i className=\"fas fa-shield-alt\"></i>\n                <span>14+</span>\n              </div>\n              <div className=\"meta-item movie-year\">\n                <i className=\"fas fa-calendar-alt\"></i>\n                <span>{movie.releasedate || 'N/A'}</span>\n              </div>\n              <div className=\"meta-item movie-rating\">\n                <i className=\"fas fa-star\"></i>\n                <span>⭐ {movie.rating || 'N/A'}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"movie-synopsis\">\n            <p className=\"synopsis-text expanded\">\n              {movie.plot || 'Descrição não disponível para este filme.'}\n            </p>\n          </div>\n          \n          <div className=\"movie-genres\">\n            <div className=\"genre-tag\">{movie.category_name || 'Filme'}</div>\n            <div className=\"genre-tag\">HD</div>\n            <div className=\"genre-tag\">Legendado</div>\n          </div>\n          \n          <div className=\"movie-action-buttons\">\n            <button \n              className={`primary-action-btn ${focusArea === 'actions' && focusedElement === 'play' ? 'focused' : ''}`}\n              onClick={() => handleAction('play')}\n            >\n              <i className=\"fas fa-play\"></i>\n              Assistir Filme\n            </button>\n            \n            <button \n              className={`secondary-action-btn ${focusArea === 'actions' && focusedElement === 'favorite' ? 'focused' : ''}`}\n              onClick={() => handleAction('favorite')}\n            >\n              <i className={`fas ${isFavorite ? 'fa-heart' : 'fa-plus'}`}></i>\n              {isFavorite ? 'Na Minha Lista' : 'Minha Lista'}\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"movie-promotional-art\">\n          <img \n            src={movie.stream_icon || '/images/placeholder-movie.jpg'} \n            alt={movie.name}\n            className=\"promotional-image\"\n            loading=\"lazy\"\n            onError={(e) => {\n              e.target.src = '/images/placeholder-movie.jpg';\n            }}\n          />\n          <div className=\"promotional-overlay\"></div>\n        </div>\n      </div>\n\n      <div className=\"movie-info-area\">\n        <div className=\"movie-additional-info\">\n          <div className=\"info-section\">\n            <h3>Informações do Filme</h3>\n            <div className=\"info-grid\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Ano:</span>\n                <span className=\"info-value\">{movie.releasedate || 'N/A'}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Categoria:</span>\n                <span className=\"info-value\">{movie.category_name || 'Filme'}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Avaliação:</span>\n                <span className=\"info-value\">⭐ {movie.rating || 'N/A'}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Qualidade:</span>\n                <span className=\"info-value\">HD 1080p</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"movie-controls-hint\">\n            <div className=\"control-item\">\n              <i className=\"fas fa-arrow-left\"></i>\n              <i className=\"fas fa-arrow-right\"></i>\n              <span>Navegar</span>\n            </div>\n            <div className=\"control-item\">\n              <span>ENTER</span>\n              <span>Selecionar</span>\n            </div>\n            <div className=\"control-item\">\n              <span>VOLTAR</span>\n              <span>Retornar</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePreview; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport MoviePreview from './MoviePreview';\r\nimport { buildStreamUrl, buildApiUrl } from '../config/serverConfig';\r\nimport { iptvApi } from '../services/iptvApi';\r\nimport { safeScrollIntoView } from '../utils/scrollUtils';\r\nimport './Movies.css';\r\n\r\nconst Movies = ({ isActive }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [moviesLoading, setMoviesLoading] = useState(false);\r\n  \r\n  // Estados de navegação\r\n  const [focusArea, setFocusArea] = useState('categories'); // 'categories' ou 'movies'\r\n  const [categoryFocus, setCategoryFocus] = useState(0);\r\n  const [movieFocus, setMovieFocus] = useState(0);\r\n\r\n  // Estados de paginação (corrigidos para ficar igual ao Series.js/Channels.js)\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const ITEMS_PER_PAGE = 15; // 5 colunas x 3 linhas\r\n  const GRID_COLUMNS = 5;\r\n  const GRID_ROWS = 3;\r\n\r\n  // Estado para o modal de preview\r\n  const [previewMovie, setPreviewMovie] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n\r\n  // Referencias para navegação\r\n  const categoriesRef = useRef([]);\r\n  const moviesRef = useRef([]);\r\n  const containerRef = useRef(null);\r\n\r\n  const API_BASE_URL = 'https://rota66.bar/player_api.php';\r\n  const API_CREDENTIALS = 'username=zBB82J&password=AMeDHq';\r\n\r\n  // Detectar ambiente Tizen TV\r\n  const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\r\n  const isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n\r\n  // Função para carregar categorias VOD\r\n  const loadVODCategories = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_vod_categories`\r\n      );\r\n      const data = await response.json();\r\n      setCategories(data);\r\n      \r\n      // Selecionar primeira categoria automaticamente\r\n      if (data.length > 0) {\r\n        setSelectedCategory(data[0].category_id);\r\n        setCategoryFocus(0);\r\n        loadVOD(data[0].category_id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar categorias de filmes:', error);\r\n      setCategories([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Função para carregar filmes de uma categoria\r\n  const loadVOD = useCallback(async (categoryId) => {\r\n    setMoviesLoading(true);\r\n    setMovieFocus(0); // Reset movie focus\r\n    setCurrentPage(0); // Resetar para primeira página\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_vod_streams&category_id=${categoryId}`\r\n      );\r\n      const data = await response.json();\r\n      setMovies(data);\r\n      \r\n      // Se estivermos no grid de filmes, voltar o foco para os filmes\r\n      if (focusArea === 'movies') {\r\n        setMovieFocus(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar filmes:', error);\r\n      setMovies([]);\r\n    } finally {\r\n      setMoviesLoading(false);\r\n    }\r\n  }, [focusArea]);\r\n\r\n  // Calcular filmes da página atual\r\n  const getCurrentPageMovies = useCallback(() => {\r\n    const startIndex = currentPage * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    return movies.slice(startIndex, endIndex);\r\n  }, [currentPage, movies]);\r\n\r\n  const totalPages = Math.ceil(movies.length / ITEMS_PER_PAGE);\r\n  const currentPageMovies = getCurrentPageMovies();\r\n\r\n  // Função para selecionar filme\r\n  const handleMovieSelect = useCallback((movie) => {\r\n    console.log('Filme selecionado:', movie);\r\n    console.log('🔧 Ambiente detectado:', { isTizenTV, isDevelopment });\r\n    \r\n    // Construir URL do stream com a estrutura correta (mesma dos canais que funcionam)\r\n    const streamUrl = `https://rota66.bar/movie/${API_CREDENTIALS.split('&')[0].split('=')[1]}/${API_CREDENTIALS.split('&')[1].split('=')[1]}/${movie.stream_id}.mp4`;\r\n    \r\n    // Informações do filme para o player\r\n    const streamInfo = {\r\n      name: movie.name,\r\n      category: selectedCategory ? categories.find(cat => cat.category_id === selectedCategory)?.category_name : 'Filme',\r\n      description: movie.plot || `Filme - ${movie.name}`,\r\n      year: movie.releaseDate ? new Date(movie.releaseDate).getFullYear() : null,\r\n      rating: movie.rating,\r\n      type: 'movie'\r\n    };\r\n\r\n    // Para Tizen TV, usar configuração específica que força player interno\r\n    if (isTizenTV) {\r\n      console.log('📺 Configuração Tizen TV ativada para filme');\r\n      \r\n      // Evento personalizado com configurações específicas para TV\r\n      const playEvent = new CustomEvent('playContent', {\r\n        detail: {\r\n          streamUrl,\r\n          streamInfo: {\r\n            ...streamInfo,\r\n            // Flags específicas para Tizen TV\r\n            forceTizenPlayer: true,\r\n            preventBrowserRedirect: true,\r\n            useInternalPlayer: true\r\n          }\r\n        },\r\n        bubbles: false, // Não permitir propagação que pode causar redirect\r\n        cancelable: false // Não permitir cancelamento por outros handlers\r\n      });\r\n      \r\n      // Prevenir qualquer comportamento padrão que possa causar redirect\r\n      setTimeout(() => {\r\n        console.log('📺 Disparando evento playContent para Tizen TV (filme)');\r\n        window.dispatchEvent(playEvent);\r\n      }, 100); // Pequeno delay para garantir que o evento seja tratado corretamente\r\n      \r\n    } else {\r\n      // Para outros ambientes, usar o comportamento padrão\r\n      console.log('💻 Configuração padrão ativada para filme');\r\n      \r\n      // Disparar evento para reproduzir no VideoPlayer\r\n      const playEvent = new CustomEvent('playContent', {\r\n        detail: { streamUrl, streamInfo }\r\n      });\r\n      window.dispatchEvent(playEvent);\r\n    }\r\n  }, [API_CREDENTIALS, selectedCategory, categories, isTizenTV, isDevelopment]);\r\n\r\n  // Função para mostrar preview do filme\r\n  const handleMoviePreview = useCallback((movie) => {\r\n    const categoryInfo = categories.find(cat => cat.category_id === selectedCategory);\r\n    const movieWithCategory = {\r\n      ...movie,\r\n      category_name: categoryInfo?.category_name || 'Filme'\r\n    };\r\n    setPreviewMovie(movieWithCategory);\r\n    setShowPreview(true);\r\n    \r\n    // Informar ao App.js que o preview está ativo\r\n    const previewActiveEvent = new CustomEvent('moviePreviewActive', {\r\n      detail: { active: true }\r\n    });\r\n    window.dispatchEvent(previewActiveEvent);\r\n  }, [categories, selectedCategory]);\r\n\r\n  // Função para clicar em categoria\r\n  const handleCategoryClick = useCallback((categoryId) => {\r\n    setSelectedCategory(categoryId);\r\n    const categoryIndex = categories.findIndex(cat => cat.category_id === categoryId);\r\n    setCategoryFocus(categoryIndex);\r\n    loadVOD(categoryId);\r\n    setFocusArea('movies'); // Mover foco para os filmes\r\n  }, [categories, loadVOD]);\r\n\r\n  // Carregar categorias de filmes\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      loadVODCategories();\r\n    }\r\n  }, [isActive, loadVODCategories]);\r\n\r\n  // Efeito para auto-scroll baseado no foco\r\n  useEffect(() => {\r\n    // Limpar focos anteriores\r\n    categoriesRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n    moviesRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n\r\n    // Auto-scroll para categoria focada\r\n    if (focusArea === 'categories' && categoriesRef.current[categoryFocus]) {\r\n      categoriesRef.current[categoryFocus].classList.add('focused');\r\n      safeScrollIntoView(categoriesRef.current[categoryFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n    // Auto-scroll para filme focado\r\n    else if (focusArea === 'movies' && moviesRef.current[movieFocus]) {\r\n      moviesRef.current[movieFocus].classList.add('focused');\r\n      safeScrollIntoView(moviesRef.current[movieFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n  }, [focusArea, categoryFocus, movieFocus]);\r\n\r\n  // Função de navegação das categorias\r\n  const handleCategoriesNavigation = useCallback((keyCode) => {\r\n    if (keyCode === 38) { // Cima\r\n      setCategoryFocus(prev => Math.max(0, prev - 1));\r\n    } else if (keyCode === 40) { // Baixo\r\n      setCategoryFocus(prev => Math.min(categories.length - 1, prev + 1));\r\n    } else if (keyCode === 37) { // Esquerda - voltar para sidebar\r\n      const backEvent = new CustomEvent('backToSidebar');\r\n      window.dispatchEvent(backEvent);\r\n    } else if (keyCode === 39) { // Direita - ir para filmes\r\n      if (movies.length > 0) {\r\n        setFocusArea('movies');\r\n        setMovieFocus(0);\r\n      }\r\n    } else if (keyCode === 13) { // OK - selecionar categoria\r\n      if (categories[categoryFocus]) {\r\n        const selectedCat = categories[categoryFocus];\r\n        setSelectedCategory(selectedCat.category_id);\r\n        loadVOD(selectedCat.category_id);\r\n      }\r\n    }\r\n  }, [categories, categoryFocus, movies.length, loadVOD]);\r\n\r\n  // Função de navegação dos filmes (corrigida para ficar igual ao Series.js/Channels.js)\r\n  const handleMoviesNavigationInternal = useCallback((keyCode) => {\r\n    const currentPageMoviesCount = currentPageMovies.length;\r\n\r\n    if (keyCode === 38) { // Cima\r\n      const currentRow = Math.floor(movieFocus / GRID_COLUMNS);\r\n      \r\n      if (currentRow > 0) {\r\n        const newFocus = Math.max(0, movieFocus - GRID_COLUMNS);\r\n        setMovieFocus(newFocus);\r\n      } else {\r\n        // Se estiver na primeira linha e houver página anterior\r\n        if (currentPage > 0) {\r\n          setCurrentPage(currentPage - 1);\r\n          const currentCol = movieFocus % GRID_COLUMNS;\r\n          const newFocusAttempt = (GRID_ROWS - 1) * GRID_COLUMNS + currentCol;\r\n          const lastPageStartIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n          const previousPageMoviesCount = movies.slice(lastPageStartIndex, lastPageStartIndex + ITEMS_PER_PAGE).length;\r\n          setMovieFocus(Math.min(newFocusAttempt, previousPageMoviesCount - 1));\r\n        }\r\n      }\r\n    } else if (keyCode === 40) { // Baixo\r\n      const currentRow = Math.floor(movieFocus / GRID_COLUMNS);\r\n      const maxRow = Math.floor((currentPageMoviesCount - 1) / GRID_COLUMNS);\r\n      \r\n      if (currentRow < maxRow) {\r\n        const newFocus = Math.min(currentPageMoviesCount - 1, movieFocus + GRID_COLUMNS);\r\n        setMovieFocus(newFocus);\r\n      } else {\r\n        // Se estiver na última linha e houver próxima página\r\n        if (currentPage < totalPages - 1) {\r\n          setCurrentPage(currentPage + 1);\r\n          setMovieFocus(movieFocus % GRID_COLUMNS); // Manter coluna, ir para primeira linha da próxima página\r\n        }\r\n      }\r\n    } else if (keyCode === 37) { // Esquerda\r\n      const currentCol = movieFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol > 0) {\r\n        setMovieFocus(movieFocus - 1);\r\n      } else {\r\n        // Se estiver na primeira coluna, voltar para categorias\r\n        setFocusArea('categories');\r\n        const selectedIndex = categories.findIndex(cat => cat.category_id === selectedCategory);\r\n        setCategoryFocus(selectedIndex >= 0 ? selectedIndex : 0);\r\n      }\r\n    } else if (keyCode === 39) { // Direita\r\n      const currentCol = movieFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol < GRID_COLUMNS - 1 && movieFocus < currentPageMoviesCount - 1) {\r\n        // Mover para próximo item na mesma linha\r\n        setMovieFocus(movieFocus + 1);\r\n      } else if (currentCol === GRID_COLUMNS - 1) {\r\n        // Estamos na última coluna\r\n        const currentRow = Math.floor(movieFocus / GRID_COLUMNS);\r\n        const maxRow = Math.floor((currentPageMoviesCount - 1) / GRID_COLUMNS);\r\n        \r\n        if (currentRow < maxRow) {\r\n          // Há linha abaixo na mesma página → descer para primeira coluna da próxima linha\r\n          setMovieFocus((currentRow + 1) * GRID_COLUMNS);\r\n        } else if (currentPage < totalPages - 1) {\r\n          // Última linha da página → mudar página\r\n          setCurrentPage(currentPage + 1);\r\n          setMovieFocus(0); // Ir para primeiro item da nova página\r\n        }\r\n      }\r\n    } else if (keyCode === 13) { // OK - abrir preview do filme\r\n      if (currentPageMovies[movieFocus]) {\r\n        const actualMovieIndex = currentPage * ITEMS_PER_PAGE + movieFocus;\r\n        handleMoviePreview(movies[actualMovieIndex]);\r\n      }\r\n    } else if (keyCode === 73) { // Tecla 'I' - Info/Preview (alternativa)\r\n      if (currentPageMovies[movieFocus]) {\r\n        const actualMovieIndex = currentPage * ITEMS_PER_PAGE + movieFocus;\r\n        handleMoviePreview(movies[actualMovieIndex]);\r\n      }\r\n    }\r\n  }, [\r\n    currentPageMovies,\r\n    movieFocus,\r\n    currentPage,\r\n    totalPages,\r\n    movies,\r\n    categories,\r\n    selectedCategory,\r\n    handleMoviePreview\r\n  ]);\r\n\r\n  // Sistema de navegação por controle remoto\r\n  useEffect(() => {\r\n    if (!isActive) return;\r\n\r\n    const handleMoviesNavigation = (event) => {\r\n      const { keyCode } = event.detail;\r\n      \r\n      if (focusArea === 'categories') {\r\n        handleCategoriesNavigation(keyCode);\r\n      } else if (focusArea === 'movies') {\r\n        handleMoviesNavigationInternal(keyCode);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('moviesNavigation', handleMoviesNavigation);\r\n    return () => window.removeEventListener('moviesNavigation', handleMoviesNavigation);\r\n  }, [isActive, focusArea, handleCategoriesNavigation, handleMoviesNavigationInternal]);\r\n\r\n  const closePreview = () => {\r\n    setShowPreview(false);\r\n    setPreviewMovie(null);\r\n    \r\n    // Informar ao App.js que o preview foi fechado\r\n    const previewActiveEvent = new CustomEvent('moviePreviewActive', {\r\n      detail: { active: false }\r\n    });\r\n    window.dispatchEvent(previewActiveEvent);\r\n  };\r\n\r\n  // Função para tratar erros de imagem\r\n  const handleImageError = (e) => {\r\n    e.target.style.display = 'none';\r\n  };\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div className=\"movies-page\" ref={containerRef}>\r\n      <div className=\"category-sidebar\">\r\n        {loading ? (\r\n          <div className=\"loading\">Carregando categorias...</div>\r\n        ) : (\r\n          <div className=\"category-list\">\r\n            {categories.map((category, index) => (\r\n              <button\r\n                key={category.category_id}\r\n                ref={el => categoriesRef.current[index] = el}\r\n                className={`category-button ${\r\n                  selectedCategory === category.category_id ? 'active' : ''\r\n                }`}\r\n                onClick={() => handleCategoryClick(category.category_id)}\r\n              >\r\n                {category.category_name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"main-content-area\">\r\n        <div className=\"movies-content\">\r\n          {moviesLoading ? (\r\n            <div className=\"loading\">Carregando filmes...</div>\r\n          ) : (\r\n            <>\r\n              {totalPages > 1 && (\r\n                <div className=\"pagination-info\">\r\n                  <span>Página {currentPage + 1} de {totalPages}</span>\r\n                  <span className=\"movies-count\">\r\n                    {movies.length} filmes • {currentPageMovies.length} nesta página\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div className=\"movies-grid\">\r\n                {currentPageMovies.map((movie, index) => (\r\n                  <div\r\n                    key={movie.stream_id}\r\n                    ref={el => moviesRef.current[index] = el}\r\n                    className=\"movie\"\r\n                    onClick={() => {\r\n                      const actualMovieIndex = currentPage * ITEMS_PER_PAGE + index;\r\n                      handleMovieSelect(movies[actualMovieIndex]);\r\n                    }}\r\n                  >\r\n                    <div className=\"movie-poster\">\r\n                      {(movie.stream_icon || movie.cover) && (\r\n                        <img\r\n                          src={movie.stream_icon || movie.cover}\r\n                          alt={movie.name}\r\n                          onError={handleImageError}\r\n                        />\r\n                      )}\r\n                      <div className=\"movie-overlay\">\r\n                        <h3 className=\"movie-title\">{movie.name}</h3>\r\n                        <div className=\"movie-info\">\r\n                          <span className=\"movie-year\">{movie.releaseDate ? new Date(movie.releaseDate).getFullYear() : 'N/A'}</span>\r\n                          <span className=\"movie-rating\">\r\n                            ⭐ {movie.rating || 'N/A'}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"movie-description\">\r\n                          {movie.plot ? \r\n                            (movie.plot.length > 120 ? \r\n                              movie.plot.substring(0, 120) + '...' : \r\n                              movie.plot\r\n                            ) : \r\n                            'Descrição não disponível'\r\n                          }\r\n                        </p>\r\n                        <div className=\"movie-actions\">\r\n                          <span className=\"action-hint\">ENTER Preview</span>\r\n                          <span className=\"action-hint\">I Info</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showPreview && (\r\n        <MoviePreview\r\n          movie={previewMovie}\r\n          isActive={showPreview}\r\n          onBack={closePreview}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies; ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { safeScrollTo, scrollToElementInCarousel } from '../utils/scrollUtils';\nimport { formatEpisode, padNumber } from '../utils/polyfills';\nimport './SeriesDetailsPage.css';\n\nconst SeriesDetailsPage = ({ series, isActive, onBack }) => {\n  const [focusedElement, setFocusedElement] = useState('play');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [seasons, setSeasons] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [selectedEpisode, setSelectedEpisode] = useState(0);\n  const [focusArea, setFocusArea] = useState('actions');\n  const [seasonFocus, setSeasonFocus] = useState(0);\n  const [episodeFocus, setEpisodeFocus] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [episodesAreaExpanded, setEpisodesAreaExpanded] = useState(false);\n\n  // Referencias para navegação com foco\n  const actionButtonsRef = useRef([]);\n  const seasonElementsRef = useRef([]);\n  const episodeElementsRef = useRef([]);\n  \n  // Detectar ambiente Tizen TV\n  const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\n  const isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n  \n  const API_BASE_URL = 'https://rota66.bar/player_api.php';\n  const API_CREDENTIALS = 'username=zBB82J&password=AMeDHq';\n\n  // Função para scroll do carrossel de episódios\n  const scrollEpisodeIntoView = useCallback((index) => {\n    if (episodeElementsRef.current[index]) {\n      const element = episodeElementsRef.current[index];\n      const container = element.parentElement;\n      \n      // Usar função utilitária para scroll seguro em carrossel\n      scrollToElementInCarousel(container, element, 'auto');\n    }\n  }, []);\n\n  // Função otimizada para carregar episódios - sem requestAnimationFrame\n  const loadEpisodes = useCallback(async (seasonNumber) => {\n    try {\n      setLoading(true);\n      \n      const response = await fetch(\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_info&series_id=${series.series_id}`\n      );\n      const data = await response.json();\n      \n      if (data.episodes && data.episodes[seasonNumber]) {\n        setEpisodes(data.episodes[seasonNumber]);\n        setSelectedEpisode(0);\n        setEpisodeFocus(0);\n        setEpisodesAreaExpanded(true);\n        setFocusArea('episodes');\n      } else {\n        setEpisodes([]);\n        setEpisodesAreaExpanded(true);\n        setFocusArea('episodes');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar episódios:', error);\n      setEpisodes([]);\n      setEpisodesAreaExpanded(true);\n      setFocusArea('episodes');\n    } finally {\n      setLoading(false);\n    }\n  }, [series?.series_id]);\n\n  const selectSeason = useCallback((seasonNumber) => {\n    if (selectedSeason === seasonNumber) return;\n    \n    setSelectedSeason(seasonNumber);\n    const seasonIndex = seasons.findIndex(s => s.season_number === seasonNumber);\n    setSeasonFocus(seasonIndex);\n    loadEpisodes(seasonNumber);\n  }, [selectedSeason, seasons, loadEpisodes]);\n\n  const playEpisode = useCallback((episode) => {\n    console.log('🎬 Reproduzindo episódio:', episode);\n    console.log('🔧 Ambiente detectado:', { isTizenTV, isDevelopment });\n    \n    const streamUrl = `https://rota66.bar/series/zBB82J/AMeDHq/${episode.id || episode.stream_id}.mp4`;\n    \n    // Lógica unificada e síncrona para disparar o evento de reprodução.\n    // O setTimeout foi removido por ser a causa provável do congelamento no Tizen.\n    const playEvent = new CustomEvent('playContent', {\n      detail: {\n        streamUrl: streamUrl,\n        streamInfo: {\n          name: `${series.name} - ${formatEpisode(selectedSeason, episode.episode_num || 1)} - ${episode.title || episode.name || 'Episódio'}`,\n          type: 'series',\n          category: series.category_name || 'Série',\n          description: episode.plot || episode.info?.plot || series.plot || 'Descrição não disponível',\n          year: series.releasedate || 'N/A',\n          rating: series.rating || episode.rating || 'N/A',\n          poster: series.cover || series.stream_icon\n        }\n      }\n    });\n    \n    console.log('📺 Disparando evento playContent...');\n    window.dispatchEvent(playEvent);\n    \n  }, [series, selectedSeason, isTizenTV, isDevelopment]);\n\n  const loadFirstEpisode = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_info&series_id=${series.series_id}`\n      );\n      const data = await response.json();\n      \n      if (data.episodes && Object.keys(data.episodes).length > 0) {\n        const firstSeason = Object.keys(data.episodes)[0];\n        const firstEpisode = data.episodes[firstSeason][0];\n        if (firstEpisode) {\n          console.log('🎬 Reproduzindo primeiro episódio via loadFirstEpisode');\n          playEpisode(firstEpisode);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar primeiro episódio:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [series?.series_id, playEpisode]);\n\n  const toggleFavorite = useCallback(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites') || '{}');\n    const seriesKey = `series_${series.series_id}`;\n    \n    if (isFavorite) {\n      delete favorites[seriesKey];\n    } else {\n      favorites[seriesKey] = {\n        series_id: series.series_id,\n        name: series.name,\n        cover: series.cover,\n        stream_icon: series.stream_icon,\n        plot: series.plot,\n        category_name: series.category_name,\n        rating: series.rating,\n        releasedate: series.releasedate,\n        addedAt: new Date().toISOString()\n      };\n    }\n    \n    localStorage.setItem('favorites', JSON.stringify(favorites));\n    setIsFavorite(!isFavorite);\n  }, [series, isFavorite]);\n\n  const loadSeriesInfo = useCallback(async () => {\n    if (!series?.series_id) return;\n    \n    try {\n      setLoading(true);\n      const response = await fetch(\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_info&series_id=${series.series_id}`\n      );\n      const data = await response.json();\n      \n      if (data.seasons) {\n        setSeasons(data.seasons);\n        \n        if (data.seasons.length > 0) {\n          const firstSeason = data.seasons[0].season_number;\n          setSelectedSeason(firstSeason);\n          \n          if (data.episodes && data.episodes[firstSeason]) {\n            setEpisodes(data.episodes[firstSeason]);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar informações da série:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [series?.series_id]);\n\n  // Navegação das ações (botões Play/Favoritos)\n  const handleActionsNavigation = useCallback((keyCode) => {\n    if (keyCode === 37) { // Esquerda\n      setFocusedElement(focusedElement === 'play' ? 'favorite' : 'play');\n    } else if (keyCode === 39) { // Direita\n      setFocusedElement(focusedElement === 'play' ? 'favorite' : 'play');\n    } else if (keyCode === 40) { // Baixo - ir para temporadas ou episódios\n      if (seasons.length > 0) {\n        setFocusArea('seasons');\n        setSeasonFocus(0);\n        setEpisodesAreaExpanded(true);\n      } else {\n        setFocusArea('episodes');\n        setEpisodeFocus(0);\n        setEpisodesAreaExpanded(true);\n        setTimeout(() => scrollEpisodeIntoView(0), 100);\n      }\n    } else if (keyCode === 13) { // Enter - executar ação\n      if (focusedElement === 'play') {\n        if (episodes.length > 0 && episodes[selectedEpisode]) {\n          playEpisode(episodes[selectedEpisode]);\n        } else {\n          loadFirstEpisode();\n        }\n      } else if (focusedElement === 'favorite') {\n        toggleFavorite();\n      }\n    }\n  }, [focusedElement, seasons.length, episodes, selectedEpisode, playEpisode, loadFirstEpisode, toggleFavorite, scrollEpisodeIntoView]);\n\n  // Navegação das temporadas\n  const handleSeasonsNavigation = useCallback((keyCode) => {\n    if (keyCode === 38) { // Cima - voltar para ações\n      if (seasonFocus > 0) {\n        setSeasonFocus(seasonFocus - 1);\n      } else {\n        setFocusArea('actions');\n        setFocusedElement('play');\n        setEpisodesAreaExpanded(false);\n      }\n    } else if (keyCode === 40) { // Baixo - ir para episódios\n      setFocusArea('episodes');\n      setEpisodeFocus(0);\n      setTimeout(() => scrollEpisodeIntoView(0), 100);\n    } else if (keyCode === 37) { // Esquerda\n      const newFocus = seasonFocus > 0 ? seasonFocus - 1 : seasons.length - 1;\n      setSeasonFocus(newFocus);\n      const season = seasons[newFocus];\n      if (season) {\n        selectSeason(season.season_number);\n      }\n    } else if (keyCode === 39) { // Direita\n      const newFocus = seasonFocus < seasons.length - 1 ? seasonFocus + 1 : 0;\n      setSeasonFocus(newFocus);\n      const season = seasons[newFocus];\n      if (season) {\n        selectSeason(season.season_number);\n      }\n    } else if (keyCode === 13) { // Enter - selecionar temporada\n      const season = seasons[seasonFocus];\n      if (season) {\n        selectSeason(season.season_number);\n      }\n    }\n  }, [seasonFocus, seasons, selectSeason, scrollEpisodeIntoView]);\n\n  // Navegação dos episódios\n  const handleEpisodesNavigation = useCallback((keyCode) => {\n    if (keyCode === 38) { // Cima - voltar para temporadas ou ações\n      if (seasons.length > 0) {\n        setFocusArea('seasons');\n      } else {\n        setFocusArea('actions');\n        setFocusedElement('play');\n        setEpisodesAreaExpanded(false);\n      }\n    } else if (keyCode === 37) { // Esquerda\n      if (episodeFocus > 0) {\n        const newFocus = episodeFocus - 1;\n        setEpisodeFocus(newFocus);\n        scrollEpisodeIntoView(newFocus);\n      }\n    } else if (keyCode === 39) { // Direita\n      if (episodeFocus < episodes.length - 1) {\n        const newFocus = episodeFocus + 1;\n        setEpisodeFocus(newFocus);\n        scrollEpisodeIntoView(newFocus);\n      }\n    } else if (keyCode === 13) { // Enter - reproduzir episódio\n      if (episodes[episodeFocus]) {\n        const episode = episodes[episodeFocus];\n        setSelectedEpisode(episodeFocus);\n        playEpisode(episode);\n      }\n    }\n  }, [episodeFocus, episodes, seasons.length, playEpisode, scrollEpisodeIntoView]);\n\n  // Função otimizada para scroll central - sem requestAnimationFrame\n  const scrollToCenter = useCallback((element, container) => {\n    if (!element || !container) return;\n    \n    try {\n      // Usar função utilitária para scroll seguro\n      scrollToElementInCarousel(container, element, 'auto');\n    } catch (error) {\n      console.warn('Erro no scroll central:', error);\n    }\n  }, []);\n\n  // Inicialização simplificada\n  useEffect(() => {\n    if (!isActive || !series) return;\n\n    // Reset do estado quando a página fica ativa\n    setFocusedElement('play');\n    setFocusArea('actions');\n    setEpisodesAreaExpanded(false);\n    setSeasonFocus(0);\n    setEpisodeFocus(0);\n    \n    const favorites = JSON.parse(localStorage.getItem('favorites') || '{}');\n    const seriesKey = `series_${series.series_id}`;\n    setIsFavorite(!!favorites[seriesKey]);\n    \n    loadSeriesInfo();\n  }, [isActive, series, loadSeriesInfo]);\n\n  // Sistema de navegação por controle remoto - seguindo padrão das outras páginas\n  useEffect(() => {\n    if (!isActive) return;\n\n    const handleSeriesDetailsNavigation = (event) => {\n      const { keyCode } = event.detail;\n      \n      // Tratar tecla de voltar\n      if (keyCode === 8 || keyCode === 10009) { // Backspace ou Return\n        if (episodesAreaExpanded && (focusArea === 'episodes' || focusArea === 'seasons')) {\n          setEpisodesAreaExpanded(false);\n          setFocusArea('actions');\n          setFocusedElement('play');\n        } else {\n          onBack();\n        }\n        return;\n      }\n      \n      // Delegar navegação baseada na área de foco\n      if (focusArea === 'actions') {\n        handleActionsNavigation(keyCode);\n      } else if (focusArea === 'seasons') {\n        handleSeasonsNavigation(keyCode);\n      } else if (focusArea === 'episodes') {\n        handleEpisodesNavigation(keyCode);\n      }\n    };\n\n    window.addEventListener('seriesDetailsNavigation', handleSeriesDetailsNavigation);\n    return () => window.removeEventListener('seriesDetailsNavigation', handleSeriesDetailsNavigation);\n  }, [\n    isActive,\n    focusArea,\n    episodesAreaExpanded,\n    handleActionsNavigation,\n    handleSeasonsNavigation,\n    handleEpisodesNavigation,\n    onBack\n  ]);\n\n  if (!isActive || !series) return null;\n\n  return (\n    <div className=\"series-details-page\">\n      <div className={`series-main-layout ${episodesAreaExpanded ? 'episodes-focused' : ''}`}>\n        <div className={`series-info-panel ${episodes.length > 0 ? 'has-episodes' : ''}`}>\n          <div className=\"series-header-info\">\n            <img \n              src=\"/images/logo-provider.png\" \n              alt=\"Provider Logo\" \n              className=\"series-provider-logo\"\n              onError={(e) => { e.target.style.display = 'none'; }}\n            />\n            \n            <div className=\"new-episode-badge\">\n              Novo Episódio\n            </div>\n            \n            <h1 className=\"series-title-main\">{series.name}</h1>\n            \n            <div className=\"series-meta-info\">\n              <div className=\"meta-item age-rating\">\n                <i className=\"fas fa-shield-alt\"></i>\n                <span>14+</span>\n              </div>\n              <div className=\"meta-item season-count\">\n                <i className=\"fas fa-list\"></i>\n                <span>{seasons.length} Temporadas</span>\n              </div>  \n            </div>\n          </div>\n          \n          <div className=\"series-synopsis\">\n            <p className=\"synopsis-text expanded\">\n              {series.plot || 'Descrição não disponível para esta série.'}\n            </p>\n          </div>\n          \n          <div className=\"series-genres\">\n            <div className=\"genre-tag\">Comédia</div>\n            <div className=\"genre-tag\">Animação</div>\n            <div className=\"genre-tag\">Adulto</div>\n          </div>\n          \n          <div className=\"series-action-buttons\">\n            <button \n              className={`primary-action-btn ${focusArea === 'actions' && focusedElement === 'play' ? 'focused' : ''}`}\n              onClick={() => {\n                if (episodes.length > 0 && episodes[selectedEpisode]) {\n                  playEpisode(episodes[selectedEpisode]);\n                } else {\n                  loadFirstEpisode();\n                }\n              }}\n              ref={(el) => (actionButtonsRef.current[0] = el)}\n            >\n              <i className=\"fas fa-play\"></i>\n              <span>Assistir T1 Ep. 1</span>\n            </button>\n            \n            <button \n              className={`secondary-action-btn ${focusArea === 'actions' && focusedElement === 'favorite' ? 'focused' : ''}`}\n              onClick={() => toggleFavorite()}\n              ref={(el) => (actionButtonsRef.current[1] = el)}\n            >\n              <i className={`fas ${isFavorite ? 'fa-heart' : 'fa-plus'}`}></i>\n              <span>\n              {isFavorite ? 'Na Minha Lista' : 'Minha Lista'}\n              </span>\n            </button>\n          </div>\n\n          {episodes.length > 0 && !episodesAreaExpanded && focusArea === 'actions'}\n        </div>\n        \n        <div className=\"series-promotional-art\">\n          <img \n            src={series.backdrop_path?.[0] || series.cover || series.stream_icon} \n            alt={series.name}\n            className=\"promotional-image\"\n            loading=\"lazy\"\n            onError={(e) => {\n              e.target.src = series.cover || series.stream_icon || '/images/placeholder-series.jpg';\n            }}\n          />\n          <div className=\"promotional-overlay\"></div>\n        </div>\n      </div>\n\n      <div className={`series-episodes-area ${episodesAreaExpanded ? 'episodes-focused' : ''}`}>\n        <div className=\"tab-content active\">\n          <div className=\"episodes-tab-content\">\n            {loading && (\n              <div className=\"loading\">\n                <i className=\"fas fa-spinner\"></i>\n                <span>Carregando informações da série...</span>\n              </div>\n            )}\n            \n            {!loading && (\n              <>\n                <div className=\"episodes-section-header\">\n                  <h2 className=\"episodes-section-title\">Episódios</h2>\n                  <p className=\"episodes-section-subtitle\">\n                    {episodes.length > 0 \n                      ? `Temporada ${selectedSeason} • ${episodes.length} episódio${episodes.length !== 1 ? 's' : ''}`\n                      : 'Carregando episódios...'\n                    }\n                  </p>\n                </div>\n\n                {seasons.length > 0 && (\n                  <div className=\"season-selector-hbo\">\n                    <span className=\"season-title-fixed\">Temporada</span>\n                    <div className=\"season-numbers-container\">\n                      {seasons.map((season, index) => (\n                        <div\n                          key={season.season_number}\n                          className={`season-number-item ${\n                            selectedSeason === season.season_number ? 'active' : ''\n                          } ${\n                            focusArea === 'seasons' && seasonFocus === index ? 'focused' : ''\n                          }`}\n                          onClick={() => selectSeason(season.season_number)}\n                          ref={(el) => (seasonElementsRef.current[index] = el)}\n                        >\n                          {season.season_number}\n                        </div>\n                      ))}\n                      <div className=\"season-indicator-bar\"></div>\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"episodes-grid-container\">\n                  {episodes.length > 0 ? (\n                    <div className=\"episodes-grid-new\">\n                      {episodes.map((episode, index) => (\n                        <div\n                          key={episode.id || index}\n                          className={`episode-card-new ${\n                            selectedEpisode === index ? 'active' : ''\n                          } ${\n                            focusArea === 'episodes' && episodeFocus === index ? 'focused' : ''\n                          }`}\n                          onClick={() => {\n                            setSelectedEpisode(index);\n                            playEpisode(episode);\n                          }}\n                          ref={(el) => (episodeElementsRef.current[index] = el)}\n                        >\n                          <div className=\"episode-thumbnail\">\n                            <img \n                              src={episode.info?.movie_image || series.cover || '/images/placeholder-episode.jpg'}\n                              alt={episode.title || episode.name || 'Episode'}\n                              loading=\"lazy\"\n                              onError={(e) => {\n                                e.target.src = '/images/placeholder-episode.jpg';\n                              }}\n                            />\n                            <div className=\"episode-play-overlay\">\n                              <i className=\"fas fa-play\"></i>\n                            </div>\n                          </div>\n                          \n                          <div className=\"episode-details\">\n                            <div className=\"episode-header\">\n                              <div className=\"episode-number-badge\">\n                                E{padNumber(episode.episode_num || index + 1, 2)}\n                              </div>\n                              <span className=\"episode-duration\">22 min</span>\n                            </div>\n                            \n                            <h4 className=\"episode-title-new\">\n                              {episode.title || episode.name || `Episódio ${episode.episode_num || index + 1}`}\n                            </h4>\n                            \n                            <div className=\"episode-meta\">\n                              <span>2023</span>\n                              <span>14+</span>\n                            </div>\n                            \n                            {episode.plot && (\n                              <p className=\"episode-description-new\">{episode.plot}</p>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"no-episodes-message\">\n                      <i className=\"fas fa-film\"></i>\n                      <h3>Episódios em carregamento...</h3>\n                      <p>Aguarde enquanto carregamos os episódios desta série.</p>\n                    </div>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SeriesDetailsPage; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { iptvApi } from '../services/iptvApi';\r\nimport { safeScrollIntoView } from '../utils/scrollUtils';\r\nimport { formatEpisode } from '../utils/polyfills';\r\nimport SeriesDetailsPage from './SeriesDetailsPage';\r\nimport './Series.css';\r\n\r\nconst Series = ({ isActive }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [seriesLoading, setSeriesLoading] = useState(false);\r\n  \r\n  // Estados de navegação\r\n  const [focusArea, setFocusArea] = useState('categories'); // 'categories' ou 'series'\r\n  const [categoryFocus, setCategoryFocus] = useState(0);\r\n  const [seriesFocus, setSeriesFocus] = useState(0);\r\n  \r\n  // Estados de paginação\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const ITEMS_PER_PAGE = 15; // 5 colunas x 3 linhas\r\n  const GRID_COLUMNS = 5;\r\n  const GRID_ROWS = 3;\r\n\r\n  // Referencias para navegação\r\n  const categoriesRef = useRef([]);\r\n  const seriesRef = useRef([]);\r\n  const containerRef = useRef(null);\r\n\r\n  // Detectar ambiente Tizen TV\r\n  const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\r\n  const isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n\r\n  const API_BASE_URL = 'https://rota66.bar/player_api.php';\r\n  const API_CREDENTIALS = 'username=zBB82J&password=AMeDHq';\r\n\r\n  // Carregar categorias de séries\r\n  useEffect(() => {\r\n    const loadSeriesCategories = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_categories`\r\n        );\r\n        const data = await response.json();\r\n        setCategories(data);\r\n        \r\n        // Selecionar primeira categoria automaticamente\r\n        if (data.length > 0) {\r\n          setSelectedCategory(data[0].category_id);\r\n          setCategoryFocus(0);\r\n          loadSeries(data[0].category_id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias de séries:', error);\r\n        setCategories([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const loadSeries = async (categoryId) => {\r\n      setSeriesLoading(true);\r\n      setSeriesFocus(0); // Reset series focus\r\n      setCurrentPage(0); // Reset para primeira página\r\n      try {\r\n        const response = await fetch(\r\n          `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series&category_id=${categoryId}`\r\n        );\r\n        const data = await response.json();\r\n        setSeries(data);\r\n        \r\n        // Se estivermos no grid de series, voltar o foco para as series\r\n        if (focusArea === 'series') {\r\n          setSeriesFocus(0);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar series:', error);\r\n        setSeries([]);\r\n      } finally {\r\n        setSeriesLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isActive) {\r\n      loadSeriesCategories();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isActive]);\r\n\r\n  // Efeito para auto-scroll baseado no foco\r\n  useEffect(() => {\r\n    // Limpar focos anteriores\r\n    categoriesRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n    seriesRef.current.forEach(ref => ref?.classList.remove('focused'));\r\n\r\n    // Auto-scroll para categoria focada\r\n    if (focusArea === 'categories' && categoriesRef.current[categoryFocus]) {\r\n      categoriesRef.current[categoryFocus].classList.add('focused');\r\n      safeScrollIntoView(categoriesRef.current[categoryFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n    // Auto-scroll para série focada\r\n    else if (focusArea === 'series' && seriesRef.current[seriesFocus]) {\r\n      seriesRef.current[seriesFocus].classList.add('focused');\r\n      safeScrollIntoView(seriesRef.current[seriesFocus], {\r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n  }, [focusArea, categoryFocus, seriesFocus]);\r\n\r\n  // Função para carregar séries de uma categoria\r\n  const loadSeries = useCallback(async (categoryId) => {\r\n    setSeriesLoading(true);\r\n    setSeriesFocus(0); // Reset series focus\r\n    setCurrentPage(0); // Reset para primeira página\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series&category_id=${categoryId}`\r\n      );\r\n      const data = await response.json();\r\n      setSeries(data);\r\n      \r\n      // Se estivermos no grid de series, voltar o foco para as series\r\n      if (focusArea === 'series') {\r\n        setSeriesFocus(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar series:', error);\r\n      setSeries([]);\r\n    } finally {\r\n      setSeriesLoading(false);\r\n    }\r\n  }, [API_BASE_URL, API_CREDENTIALS, focusArea]);\r\n\r\n  // Função para navegar para detalhes da série\r\n  const handleSeriesDetails = useCallback((series) => {\r\n    const categoryInfo = categories.find(cat => cat.category_id === selectedCategory);\r\n    const seriesWithCategory = {\r\n      ...series,\r\n      category_name: categoryInfo?.category_name || 'Série'\r\n    };\r\n    \r\n    // Disparar evento para navegar para a página de detalhes\r\n    const showDetailsEvent = new CustomEvent('showSeriesDetails', {\r\n      detail: { series: seriesWithCategory }\r\n    });\r\n    window.dispatchEvent(showDetailsEvent);\r\n  }, [categories, selectedCategory]);\r\n\r\n  // Função para reproduzir série diretamente (primeira temporada, primeiro episódio)\r\n  const handleSeriesSelect = useCallback(async (series) => {\r\n    console.log('🎬 Série selecionada:', series);\r\n    console.log('🔧 Ambiente detectado:', { isTizenTV, isDevelopment });\r\n    \r\n    try {\r\n      // Tentar carregar informações da série para reproduzir primeiro episódio\r\n      const response = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_info&series_id=${series.series_id}`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      if (data.episodes && Object.keys(data.episodes).length > 0) {\r\n        const firstSeason = Object.keys(data.episodes)[0];\r\n        const firstEpisode = data.episodes[firstSeason][0];\r\n        \r\n        if (firstEpisode) {\r\n          // URL com .mp4 para usar com HTML5 player\r\n          const streamUrl = `https://rota66.bar/series/zBB82J/AMeDHq/${firstEpisode.id || firstEpisode.stream_id}.mp4`;\r\n          \r\n          const streamInfo = {\r\n            name: `${series.name} - ${formatEpisode(firstSeason, firstEpisode.episode_num || 1)} - ${firstEpisode.title || firstEpisode.name || 'Episódio'}`,\r\n            type: 'series',\r\n            category: selectedCategory ? categories.find(cat => cat.category_id === selectedCategory)?.category_name : 'Série',\r\n            description: firstEpisode.plot || firstEpisode.info?.plot || series.plot || 'Descrição não disponível',\r\n            year: series.releasedate || 'N/A',\r\n            rating: series.rating || firstEpisode.rating || 'N/A',\r\n            poster: series.cover || series.stream_icon\r\n          };\r\n          \r\n          // Para Tizen TV, usar configuração específica que força player interno\r\n          if (isTizenTV) {\r\n            console.log('📺 Configuração Tizen TV ativada para série');\r\n            \r\n            const playEvent = new CustomEvent('playContent', {\r\n              detail: {\r\n                streamUrl,\r\n                streamInfo: {\r\n                  ...streamInfo,\r\n                  // Flags específicas para Tizen TV\r\n                  forceTizenPlayer: true,\r\n                  preventBrowserRedirect: true,\r\n                  useInternalPlayer: true\r\n                }\r\n              },\r\n              bubbles: false,\r\n              cancelable: false\r\n            });\r\n            \r\n            setTimeout(() => {\r\n              console.log('📺 Disparando evento playContent para Tizen TV (série)');\r\n              window.dispatchEvent(playEvent);\r\n            }, 100);\r\n            \r\n          } else {\r\n            console.log('💻 Configuração padrão ativada para série');\r\n            \r\n            const playEvent = new CustomEvent('playContent', {\r\n              detail: { streamUrl, streamInfo }\r\n            });\r\n            window.dispatchEvent(playEvent);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao carregar informações da série:', error);\r\n      \r\n      // Fallback: tentar reproduzir primeiro episódio com URL genérica\r\n      const streamUrl = `https://rota66.bar/series/zBB82J/AMeDHq/${series.series_id}.mp4`;\r\n      \r\n      const streamInfo = {\r\n        name: series.name,\r\n        category: selectedCategory ? categories.find(cat => cat.category_id === selectedCategory)?.category_name : 'Série',\r\n        description: `Série - ${series.name}`,\r\n        type: 'series'\r\n      };\r\n\r\n      // Para Tizen TV, usar configuração específica no fallback também\r\n      if (isTizenTV) {\r\n        console.log('📺 Configuração Tizen TV ativada para série (fallback)');\r\n        \r\n        const playEvent = new CustomEvent('playContent', {\r\n          detail: { \r\n            streamUrl, \r\n            streamInfo: {\r\n              ...streamInfo,\r\n              forceTizenPlayer: true,\r\n              preventBrowserRedirect: true,\r\n              useInternalPlayer: true\r\n            }\r\n          },\r\n          bubbles: false,\r\n          cancelable: false\r\n        });\r\n        \r\n        setTimeout(() => {\r\n          console.log('📺 Disparando evento playContent para Tizen TV (série fallback)');\r\n          window.dispatchEvent(playEvent);\r\n        }, 100);\r\n        \r\n      } else {\r\n        console.log('💻 Configuração padrão ativada para série (fallback)');\r\n        \r\n        const playEvent = new CustomEvent('playContent', {\r\n          detail: { streamUrl, streamInfo }\r\n        });\r\n        window.dispatchEvent(playEvent);\r\n      }\r\n    }\r\n  }, [selectedCategory, categories, API_BASE_URL, API_CREDENTIALS, isTizenTV, isDevelopment]);\r\n\r\n  // Calcular séries da página atual\r\n  const getCurrentPageSeries = useCallback(() => {\r\n    const startIndex = currentPage * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    return series.slice(startIndex, endIndex);\r\n  }, [currentPage, series]);\r\n\r\n  const totalPages = Math.ceil(series.length / ITEMS_PER_PAGE);\r\n  const currentPageSeries = getCurrentPageSeries();\r\n\r\n  // Função de navegação das categorias\r\n  const handleCategoriesNavigation = useCallback((keyCode) => {\r\n    if (keyCode === 38) { // Cima\r\n      setCategoryFocus(prev => Math.max(0, prev - 1));\r\n    } else if (keyCode === 40) { // Baixo\r\n      setCategoryFocus(prev => Math.min(categories.length - 1, prev + 1));\r\n    } else if (keyCode === 37) { // Esquerda - voltar para sidebar\r\n      const backEvent = new CustomEvent('backToSidebar');\r\n      window.dispatchEvent(backEvent);\r\n    } else if (keyCode === 39) { // Direita - ir para séries\r\n      if (series.length > 0) {\r\n        setFocusArea('series');\r\n        setSeriesFocus(0);\r\n      }\r\n    } else if (keyCode === 13) { // OK - selecionar categoria\r\n      if (categories[categoryFocus]) {\r\n        const selectedCat = categories[categoryFocus];\r\n        setSelectedCategory(selectedCat.category_id);\r\n        loadSeries(selectedCat.category_id);\r\n      }\r\n    }\r\n  }, [categories, categoryFocus, series.length, loadSeries]);\r\n\r\n  // Função de navegação das séries\r\n  const handleSeriesNavigationInternal = useCallback((keyCode) => {\r\n    const currentPageSeriesCount = currentPageSeries.length;\r\n    \r\n    if (keyCode === 38) { // Cima\r\n      const currentRow = Math.floor(seriesFocus / GRID_COLUMNS);\r\n      \r\n      if (currentRow > 0) {\r\n        const newFocus = Math.max(0, seriesFocus - GRID_COLUMNS);\r\n        setSeriesFocus(newFocus);\r\n      } else {\r\n        // Se estiver na primeira linha e houver página anterior\r\n        if (currentPage > 0) {\r\n          setCurrentPage(currentPage - 1);\r\n          const currentCol = seriesFocus % GRID_COLUMNS;\r\n          setSeriesFocus((GRID_ROWS - 1) * GRID_COLUMNS + currentCol); // Ir para última linha da página anterior, mesma coluna\r\n        }\r\n      }\r\n    } else if (keyCode === 40) { // Baixo\r\n      const currentRow = Math.floor(seriesFocus / GRID_COLUMNS);\r\n      const maxRow = Math.floor((currentPageSeriesCount - 1) / GRID_COLUMNS);\r\n      \r\n      if (currentRow < maxRow) {\r\n        const newFocus = Math.min(currentPageSeriesCount - 1, seriesFocus + GRID_COLUMNS);\r\n        setSeriesFocus(newFocus);\r\n      } else {\r\n        // Se estiver na última linha e houver próxima página\r\n        if (currentPage < totalPages - 1) {\r\n          setCurrentPage(currentPage + 1);\r\n          setSeriesFocus(seriesFocus % GRID_COLUMNS); // Manter coluna, ir para primeira linha da próxima página\r\n        }\r\n      }\r\n    } else if (keyCode === 37) { // Esquerda\r\n      const currentCol = seriesFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol > 0) {\r\n        setSeriesFocus(seriesFocus - 1);\r\n      } else {\r\n        // Se estiver na primeira coluna, voltar para categorias\r\n        setFocusArea('categories');\r\n        const selectedIndex = categories.findIndex(cat => cat.category_id === selectedCategory);\r\n        setCategoryFocus(selectedIndex >= 0 ? selectedIndex : 0);\r\n      }\r\n    } else if (keyCode === 39) { // Direita\r\n      const currentCol = seriesFocus % GRID_COLUMNS;\r\n      \r\n      if (currentCol < GRID_COLUMNS - 1 && seriesFocus < currentPageSeriesCount - 1) {\r\n        // Mover para próximo item na mesma linha\r\n        setSeriesFocus(seriesFocus + 1);\r\n      } else if (currentCol === GRID_COLUMNS - 1) {\r\n        // Estamos na última coluna\r\n        const currentRow = Math.floor(seriesFocus / GRID_COLUMNS);\r\n        const maxRow = Math.floor((currentPageSeriesCount - 1) / GRID_COLUMNS);\r\n        \r\n        if (currentRow < maxRow) {\r\n          // Há linha abaixo na mesma página → descer para primeira coluna da próxima linha\r\n          setSeriesFocus((currentRow + 1) * GRID_COLUMNS);\r\n        } else if (currentPage < totalPages - 1) {\r\n          // Última linha da página → mudar página\r\n          setCurrentPage(currentPage + 1);\r\n          setSeriesFocus(0); // Ir para primeiro item da nova página\r\n        }\r\n      }\r\n    } else if (keyCode === 13) { // OK - abrir detalhes\r\n      if (currentPageSeries[seriesFocus]) {\r\n        const actualSeriesIndex = currentPage * ITEMS_PER_PAGE + seriesFocus;\r\n        handleSeriesDetails(series[actualSeriesIndex]);\r\n      }\r\n    } else if (keyCode === 80) { // P - reproduzir diretamente\r\n      if (currentPageSeries[seriesFocus]) {\r\n        const actualSeriesIndex = currentPage * ITEMS_PER_PAGE + seriesFocus;\r\n        handleSeriesSelect(series[actualSeriesIndex]);\r\n      }\r\n    }\r\n  }, [\r\n    currentPageSeries, \r\n    seriesFocus, \r\n    currentPage, \r\n    totalPages, \r\n    categories, \r\n    selectedCategory,\r\n    series,\r\n    handleSeriesDetails,\r\n    handleSeriesSelect\r\n  ]);\r\n\r\n  // Sistema de navegação por controle remoto\r\n  useEffect(() => {\r\n    if (!isActive) return;\r\n\r\n    const handleSeriesNavigation = (event) => {\r\n      const { keyCode } = event.detail;\r\n      \r\n      if (focusArea === 'categories') {\r\n        handleCategoriesNavigation(keyCode);\r\n      } else if (focusArea === 'series') {\r\n        handleSeriesNavigationInternal(keyCode);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('seriesNavigation', handleSeriesNavigation);\r\n    return () => window.removeEventListener('seriesNavigation', handleSeriesNavigation);\r\n  }, [isActive, focusArea, handleCategoriesNavigation, handleSeriesNavigationInternal]);\r\n\r\n  // Função para tratar erros de imagem\r\n  const handleImageError = (e) => {\r\n    e.target.style.display = 'none';\r\n  };\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div className=\"series-page\" ref={containerRef}>\r\n      <div className=\"category-sidebar\">\r\n        \r\n        {loading ? (\r\n          <div className=\"loading\">Carregando categorias...</div>\r\n        ) : (\r\n          <div className=\"category-list\">\r\n            {categories.map((category, index) => (\r\n              <button\r\n                key={category.category_id}\r\n                ref={el => categoriesRef.current[index] = el}\r\n                className={`category-button ${\r\n                  selectedCategory === category.category_id ? 'active' : ''\r\n                }`}\r\n                onClick={() => {\r\n                  setSelectedCategory(category.category_id);\r\n                  setCategoryFocus(index);\r\n                  loadSeries(category.category_id);\r\n                }}\r\n              >\r\n                {category.category_name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"main-content-area\">\r\n        <div className=\"series-content\">\r\n          {seriesLoading ? (\r\n            <div className=\"loading\">Carregando séries...</div>\r\n          ) : (\r\n            <>\r\n              {totalPages > 1 && (\r\n                <div className=\"pagination-info\">\r\n                  <span>Página {currentPage + 1} de {totalPages}</span>\r\n                  <span className=\"series-count\">\r\n                    {series.length} séries • {currentPageSeries.length} nesta página\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div className=\"series-grid\">\r\n                {currentPageSeries.map((series, index) => (\r\n                  <div\r\n                    key={series.series_id}\r\n                    ref={el => seriesRef.current[index] = el}\r\n                    className=\"serie\"\r\n                    onClick={() => {\r\n                      const actualSeriesIndex = currentPage * ITEMS_PER_PAGE + index;\r\n                      handleSeriesDetails(series[actualSeriesIndex]);\r\n                    }}\r\n                  >\r\n                    <div className=\"serie-poster\">\r\n                      <img\r\n                        src={series.cover}\r\n                        alt={series.name}\r\n                        onError={handleImageError}\r\n                      />\r\n                      <div className=\"serie-overlay\">\r\n                        <h3 className=\"serie-title\">{series.name}</h3>\r\n                        <div className=\"serie-info\">\r\n                          <span className=\"serie-year\">{series.year || 'N/A'}</span>\r\n                          <span className=\"serie-rating\">\r\n                            ⭐ {series.rating || 'N/A'}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"serie-description\">\r\n                          {series.plot ? \r\n                            (series.plot.length > 120 ? \r\n                              series.plot.substring(0, 120) + '...' : \r\n                              series.plot\r\n                            ) : \r\n                            'Descrição não disponível'\r\n                          }\r\n                        </p>\r\n                        <div className=\"serie-actions\">\r\n                          <span className=\"action-hint\">ENTER Ver detalhes</span>\r\n                          <span className=\"action-hint\">P Reproduzir</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Series; ","export const API_BASE_URL = 'https://rota66.bar/player_api.php';\r\nexport const API_CREDENTIALS = 'username=zBB82J&password=AMeDHq'; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { safeScrollIntoView } from '../utils/scrollUtils';\r\nimport { API_BASE_URL, API_CREDENTIALS } from '../config/apiConfig';\r\nimport './Search.css';\r\n\r\nconst Search = ({ isActive }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState({\r\n    channels: [],\r\n    movies: [],\r\n    series: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('keyboard'); // 'keyboard', 'results'\r\n  const [selectedKey, setSelectedKey] = useState({ row: 0, col: 0 });\r\n  const [resultFocus, setResultFocus] = useState({ section: 'channels', index: 0 });\r\n\r\n  // Referencias para navegação\r\n  const keyboardRef = useRef(null);\r\n  const resultsRef = useRef({\r\n    channels: [],\r\n    movies: [],\r\n    series: []\r\n  });\r\n\r\n  // Layout do teclado virtual\r\n  const keyboardLayout = [\r\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\r\n    ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'],\r\n    ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', '⌫'],\r\n    ['Z', 'X', 'C', 'V', 'B', 'N', 'M', ',', '.', '🔍'],\r\n    ['ESPAÇO', 'LIMPAR']\r\n  ];\r\n\r\n  const handleResultClick = useCallback((item, type) => {\r\n    console.log('Item selecionado:', { item, type });\r\n    \r\n    let streamUrl = '';\r\n    let streamInfo = {};\r\n\r\n    // Construir URL e informações baseado no tipo (estrutura correta da API)\r\n    switch (type) {\r\n      case 'channel':\r\n        streamUrl = `https://rota66.bar/${API_CREDENTIALS.split('&')[0].split('=')[1]}/${API_CREDENTIALS.split('&')[1].split('=')[1]}/${item.stream_id}`;\r\n        streamInfo = {\r\n          name: item.name,\r\n          category: 'Canal',\r\n          description: `Canal ao vivo - ${item.name}`,\r\n          type: 'live'\r\n        };\r\n        break;\r\n        \r\n      case 'movie':\r\n        streamUrl = `https://rota66.bar/${API_CREDENTIALS.split('&')[0].split('=')[1]}/${API_CREDENTIALS.split('&')[1].split('=')[1]}/${item.stream_id}`;\r\n        streamInfo = {\r\n          name: item.name,\r\n          category: 'Filme',\r\n          description: item.plot || `Filme - ${item.name}`,\r\n          year: item.releaseDate ? new Date(item.releaseDate).getFullYear() : null,\r\n          rating: item.rating,\r\n          type: 'movie'\r\n        };\r\n        break;\r\n        \r\n      case 'serie':\r\n        // Para séries da busca, usar URL genérica (estrutura correta)\r\n        streamUrl = `https://rota66.bar/${API_CREDENTIALS.split('&')[0].split('=')[1]}/${API_CREDENTIALS.split('&')[1].split('=')[1]}/${item.series_id}`;\r\n        streamInfo = {\r\n          name: item.name,\r\n          category: 'Série',\r\n          description: item.plot || `Série - ${item.name}`,\r\n          year: item.year,\r\n          rating: item.rating,\r\n          type: 'series'\r\n        };\r\n        break;\r\n        \r\n      default:\r\n        console.error('Tipo de conteúdo não reconhecido:', type);\r\n        return;\r\n    }\r\n\r\n    // Disparar evento para reproduzir no VideoPlayer\r\n    const playEvent = new CustomEvent('playContent', {\r\n      detail: { streamUrl, streamInfo }\r\n    });\r\n    window.dispatchEvent(playEvent);\r\n  }, []);\r\n\r\n  const fetchAllChannels = useCallback(async () => {\r\n    try {\r\n      // Buscar todas as categorias de canais\r\n      const categoriesResponse = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_live_categories`\r\n      );\r\n      const categories = await categoriesResponse.json();\r\n      \r\n      // Buscar canais de todas as categorias\r\n      const channelsPromises = categories.slice(0, 5).map(category => // Limitar a 5 categorias para performance\r\n        fetch(`${API_BASE_URL}?${API_CREDENTIALS}&action=get_live_streams&category_id=${category.category_id}`)\r\n          .then(res => res.json())\r\n          .catch(() => [])\r\n      );\r\n      \r\n      const channelsArrays = await Promise.all(channelsPromises);\r\n      return channelsArrays.reduce((acc, val) => acc.concat(val), []);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar canais:', error);\r\n      return [];\r\n    }\r\n  }, []);\r\n\r\n  const fetchAllMovies = useCallback(async () => {\r\n    try {\r\n      // Buscar algumas categorias principais de filmes\r\n      const categoriesResponse = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_vod_categories`\r\n      );\r\n      const categories = await categoriesResponse.json();\r\n      \r\n      const moviesPromises = categories.slice(0, 3).map(category => // Limitar a 3 categorias para performance\r\n        fetch(`${API_BASE_URL}?${API_CREDENTIALS}&action=get_vod_streams&category_id=${category.category_id}`)\r\n          .then(res => res.json())\r\n          .catch(() => [])\r\n      );\r\n      \r\n      const moviesArrays = await Promise.all(moviesPromises);\r\n      return moviesArrays.reduce((acc, val) => acc.concat(val), []);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar filmes:', error);\r\n      return [];\r\n    }\r\n  }, []);\r\n\r\n  const fetchAllSeries = useCallback(async () => {\r\n    try {\r\n      // Buscar algumas categorias principais de séries\r\n      const categoriesResponse = await fetch(\r\n        `${API_BASE_URL}?${API_CREDENTIALS}&action=get_series_categories`\r\n      );\r\n      const categories = await categoriesResponse.json();\r\n      \r\n      const seriesPromises = categories.slice(0, 3).map(category => // Limitar a 3 categorias para performance\r\n        fetch(`${API_BASE_URL}?${API_CREDENTIALS}&action=get_series&category_id=${category.category_id}`)\r\n          .then(res => res.json())\r\n          .catch(() => [])\r\n      );\r\n      \r\n      const seriesArrays = await Promise.all(seriesPromises);\r\n      return seriesArrays.reduce((acc, val) => acc.concat(val), []);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar séries:', error);\r\n      return [];\r\n    }\r\n  }, []);\r\n\r\n  const performSearch = useCallback(async () => {\r\n    if (!searchQuery.trim()) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Buscar em paralelo em todas as categorias\r\n      const [channelsData, moviesData, seriesData] = await Promise.all([\r\n        fetchAllChannels(),\r\n        fetchAllMovies(),\r\n        fetchAllSeries()\r\n      ]);\r\n\r\n      // Filtrar resultados pelo termo de busca\r\n      const query = searchQuery.toLowerCase();\r\n      \r\n      const filteredChannels = channelsData.filter(channel => \r\n        channel.name && channel.name.toLowerCase().includes(query)\r\n      ).slice(0, 20); // Limitar a 20 resultados\r\n\r\n      const filteredMovies = moviesData.filter(movie => \r\n        movie.name && movie.name.toLowerCase().includes(query)\r\n      ).slice(0, 20);\r\n\r\n      const filteredSeries = seriesData.filter(serie => \r\n        serie.name && serie.name.toLowerCase().includes(query)\r\n      ).slice(0, 20);\r\n\r\n      setSearchResults({\r\n        channels: filteredChannels,\r\n        movies: filteredMovies,\r\n        series: filteredSeries\r\n      });\r\n\r\n      // Se há resultados, mover foco para a primeira seção com resultados\r\n      if (filteredChannels.length > 0) {\r\n        setActiveSection('results');\r\n        setResultFocus({ section: 'channels', index: 0 });\r\n      } else if (filteredMovies.length > 0) {\r\n        setActiveSection('results');\r\n        setResultFocus({ section: 'movies', index: 0 });\r\n      } else if (filteredSeries.length > 0) {\r\n        setActiveSection('results');\r\n        setResultFocus({ section: 'series', index: 0 });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Erro na busca:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [searchQuery, fetchAllChannels, fetchAllMovies, fetchAllSeries, setActiveSection, setResultFocus, setSearchResults]);\r\n\r\n  const handleKeyPress = useCallback((key) => {\r\n    if (key === '⌫') {\r\n      // Backspace\r\n      setSearchQuery(prev => prev.slice(0, -1));\r\n    } else if (key === '🔍') {\r\n      // Buscar\r\n      if (searchQuery.trim()) {\r\n        performSearch();\r\n      }\r\n    } else if (key === 'LIMPAR') {\r\n      // Limpar tudo\r\n      setSearchQuery('');\r\n      setSearchResults({ channels: [], movies: [], series: [] });\r\n    } else if (key === 'ESPAÇO') {\r\n      // Espaço\r\n      setSearchQuery(prev => prev + ' ');\r\n    } else {\r\n      // Caractere normal\r\n      setSearchQuery(prev => prev + key);\r\n    }\r\n\r\n    // Buscar automaticamente quando digitar (debounce)\r\n    if (key !== '🔍' && key !== 'LIMPAR') {\r\n      setTimeout(() => {\r\n        if (searchQuery.trim().length >= 2) {\r\n          performSearch();\r\n        }\r\n      }, 500);\r\n    }\r\n  }, [performSearch, searchQuery, setSearchQuery, setSearchResults]);\r\n\r\n  const handleKeyboardNavigation = useCallback((keyCode) => {\r\n    const maxRows = keyboardLayout.length;\r\n    const currentRow = selectedKey.row;\r\n    const currentCol = selectedKey.col;\r\n    const maxCols = keyboardLayout[currentRow].length;\r\n\r\n    if (keyCode === 38) { // Cima\r\n      if (currentRow > 0) {\r\n        const newRow = currentRow - 1;\r\n        const newMaxCols = keyboardLayout[newRow].length;\r\n        setSelectedKey({\r\n          row: newRow,\r\n          col: Math.min(currentCol, newMaxCols - 1)\r\n        });\r\n      }\r\n    } else if (keyCode === 40) { // Baixo\r\n      if (currentRow < maxRows - 1) {\r\n        const newRow = currentRow + 1;\r\n        const newMaxCols = keyboardLayout[newRow].length;\r\n        setSelectedKey({\r\n          row: newRow,\r\n          col: Math.min(currentCol, newMaxCols - 1)\r\n        });\r\n      } else if (searchResults.channels.length > 0 || searchResults.movies.length > 0 || searchResults.series.length > 0) {\r\n        // Ir para resultados se existirem\r\n        setActiveSection('results');\r\n        setResultFocus({ section: 'channels', index: 0 });\r\n      }\r\n    } else if (keyCode === 37) { // Esquerda\r\n      if (currentCol > 0) {\r\n        setSelectedKey(prev => ({ ...prev, col: prev.col - 1 }));\r\n      }\r\n    } else if (keyCode === 39) { // Direita\r\n      if (currentCol < maxCols - 1) {\r\n        setSelectedKey(prev => ({ ...prev, col: prev.col + 1 }));\r\n      }\r\n    } else if (keyCode === 13) { // OK - pressionar tecla\r\n      const selectedKeyValue = keyboardLayout[currentRow][currentCol];\r\n      handleKeyPress(selectedKeyValue);\r\n    }\r\n  }, [keyboardLayout, searchResults, selectedKey, handleKeyPress, setActiveSection]);\r\n\r\n  const handleResultsNavigation = useCallback((keyCode) => {\r\n    const sections = ['channels', 'movies', 'series'];\r\n    const currentSectionIndex = sections.indexOf(resultFocus.section);\r\n    const currentResults = searchResults[resultFocus.section];\r\n    const itemsPerRow = 5; // Aproximação para o grid\r\n\r\n    if (!currentResults) return;\r\n\r\n    if (keyCode === 38) { // Cima\r\n      if (resultFocus.index >= itemsPerRow) {\r\n        setResultFocus(prev => ({ ...prev, index: prev.index - itemsPerRow }));\r\n      } else {\r\n        // Ir para seção anterior ou voltar ao teclado\r\n        if (currentSectionIndex > 0) {\r\n          const prevSection = sections[currentSectionIndex - 1];\r\n          const prevSectionLength = searchResults[prevSection].length;\r\n          if (prevSectionLength > 0) {\r\n            setResultFocus({ \r\n              section: prevSection, \r\n              index: Math.max(0, prevSectionLength - 1) \r\n            });\r\n          }\r\n        } else {\r\n          setActiveSection('keyboard');\r\n        }\r\n      }\r\n    } else if (keyCode === 40) { // Baixo\r\n      if (resultFocus.index + itemsPerRow < currentResults.length) {\r\n        setResultFocus(prev => ({ ...prev, index: prev.index + itemsPerRow }));\r\n      } else {\r\n        // Ir para próxima seção\r\n        if (currentSectionIndex < sections.length - 1) {\r\n          const nextSection = sections[currentSectionIndex + 1];\r\n          if (searchResults[nextSection].length > 0) {\r\n            setResultFocus({ section: nextSection, index: 0 });\r\n          }\r\n        }\r\n      }\r\n    } else if (keyCode === 37) { // Esquerda\r\n      if (resultFocus.index > 0) {\r\n        setResultFocus(prev => ({ ...prev, index: prev.index - 1 }));\r\n      }\r\n    } else if (keyCode === 39) { // Direita\r\n      if (resultFocus.index < currentResults.length - 1) {\r\n        setResultFocus(prev => ({ ...prev, index: prev.index + 1 }));\r\n      }\r\n    } else if (keyCode === 13) { // OK - selecionar resultado\r\n      const selectedItem = currentResults[resultFocus.index];\r\n      // FIX: 'channels' -> 'channel', 'movies' -> 'movie', etc.\r\n      const type = resultFocus.section.endsWith('s')\r\n        ? resultFocus.section.slice(0, -1)\r\n        : resultFocus.section;\r\n      handleResultClick(selectedItem, type);\r\n    }\r\n  }, [resultFocus, searchResults, handleResultClick, setActiveSection]);\r\n  \r\n  // Sistema de navegação por controle remoto\r\n  useEffect(() => {\r\n    if (!isActive) return;\r\n\r\n    const handleSearchNavigation = (event) => {\r\n      const { keyCode } = event.detail;\r\n      \r\n      if (activeSection === 'keyboard') {\r\n        handleKeyboardNavigation(keyCode);\r\n      } else if (activeSection === 'results') {\r\n        handleResultsNavigation(keyCode);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('searchNavigation', handleSearchNavigation);\r\n    return () => window.removeEventListener('searchNavigation', handleSearchNavigation);\r\n  }, [isActive, activeSection, handleKeyboardNavigation, handleResultsNavigation]);\r\n\r\n  // Atualizar foco visual\r\n  const updateFocusVisual = useCallback(() => {\r\n    // Remover foco de todos os elementos\r\n    document.querySelectorAll('.keyboard-key, .search-result-item').forEach(el => {\r\n      el.classList.remove('focused');\r\n    });\r\n\r\n    if (activeSection === 'keyboard') {\r\n      const keyboardKeys = document.querySelectorAll('.keyboard-key');\r\n      const keyIndex = selectedKey.row * 10 + selectedKey.col; // Aproximação\r\n      if (keyboardKeys[keyIndex]) {\r\n        keyboardKeys[keyIndex].classList.add('focused');\r\n      }\r\n    } else if (activeSection === 'results') {\r\n      const sectionResults = resultsRef.current[resultFocus.section];\r\n      if (sectionResults && sectionResults[resultFocus.index]) {\r\n        sectionResults[resultFocus.index].classList.add('focused');\r\n        sectionResults[resultFocus.index].scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'nearest' \r\n        });\r\n      }\r\n    }\r\n  }, [activeSection, selectedKey, resultFocus]);\r\n\r\n  useEffect(() => {\r\n    updateFocusVisual();\r\n  }, [updateFocusVisual]);\r\n\r\n  const handleImageError = (e) => {\r\n    e.target.style.display = 'none';\r\n  };\r\n\r\n  // Efeito para auto-scroll baseado no foco\r\n  useEffect(() => {\r\n    if (resultFocus.section !== null && resultFocus.index !== null) {\r\n      const sectionResults = resultsRef.current[resultFocus.section];\r\n      if (sectionResults && sectionResults[resultFocus.index]) {\r\n        sectionResults[resultFocus.index].classList.add('focused');\r\n        safeScrollIntoView(sectionResults[resultFocus.index], {\r\n          behavior: 'smooth',\r\n          block: 'nearest'\r\n        });\r\n      }\r\n    }\r\n  }, [resultFocus]);\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <div className=\"search-layout\">\r\n        {/* Área de busca e teclado */}\r\n        <div className=\"search-input-area\">\r\n          <div className=\"search-header\">\r\n            <h2>🔍 Pesquisar</h2>\r\n            <div className=\"search-input-display\">\r\n              <span className=\"search-query\">{searchQuery}</span>\r\n              <span className=\"cursor\">|</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Teclado Virtual */}\r\n          <div className=\"virtual-keyboard\" ref={keyboardRef}>\r\n            {keyboardLayout.map((row, rowIndex) => (\r\n              <div key={rowIndex} className=\"keyboard-row\">\r\n                {row.map((key, colIndex) => (\r\n                  <button\r\n                    key={`${rowIndex}-${colIndex}`}\r\n                    className={`keyboard-key ${key.length > 1 ? 'special-key' : ''}`}\r\n                    onClick={() => handleKeyPress(key)}\r\n                  >\r\n                    {key}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Resultados da busca */}\r\n        <div className=\"search-results\">\r\n          {loading && (\r\n            <div className=\"loading\">Buscando...</div>\r\n          )}\r\n\r\n          {!loading && searchQuery && (\r\n            <>\r\n              {/* Canais */}\r\n              {searchResults.channels.length > 0 && (\r\n                <div className=\"results-section\">\r\n                  <h3>📺 Canais ({searchResults.channels.length})</h3>\r\n                  <div className=\"results-grid\">\r\n                    {searchResults.channels.map((channel, index) => (\r\n                      <div\r\n                        key={`channel-${channel.stream_id || index}`}\r\n                        ref={el => resultsRef.current.channels[index] = el}\r\n                        className=\"search-result-item channel-result\"\r\n                        onClick={() => handleResultClick(channel, 'channel')}\r\n                      >\r\n                        <img\r\n                          src={channel.stream_icon}\r\n                          alt={channel.name}\r\n                          onError={handleImageError}\r\n                        />\r\n                        <div className=\"result-info\">\r\n                          <h4>{channel.name}</h4>\r\n                          <span className=\"result-type\">Canal</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Filmes */}\r\n              {searchResults.movies.length > 0 && (\r\n                <div className=\"results-section\">\r\n                  <h3>🎬 Filmes ({searchResults.movies.length})</h3>\r\n                  <div className=\"results-grid\">\r\n                    {searchResults.movies.map((movie, index) => (\r\n                      <div\r\n                        key={`movie-${movie.stream_id || index}`}\r\n                        ref={el => resultsRef.current.movies[index] = el}\r\n                        className=\"search-result-item movie-result\"\r\n                        onClick={() => handleResultClick(movie, 'movie')}\r\n                      >\r\n                        <img\r\n                          src={movie.stream_icon}\r\n                          alt={movie.name}\r\n                          onError={handleImageError}\r\n                        />\r\n                        <div className=\"result-info\">\r\n                          <h4>{movie.name}</h4>\r\n                          <span className=\"result-type\">Filme</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Séries */}\r\n              {searchResults.series.length > 0 && (\r\n                <div className=\"results-section\">\r\n                  <h3>📺 Séries ({searchResults.series.length})</h3>\r\n                  <div className=\"results-grid\">\r\n                    {searchResults.series.map((serie, index) => (\r\n                      <div\r\n                        key={`serie-${serie.series_id || index}`}\r\n                        ref={el => resultsRef.current.series[index] = el}\r\n                        className=\"search-result-item serie-result\"\r\n                        onClick={() => handleResultClick(serie, 'serie')}\r\n                      >\r\n                        <img\r\n                          src={serie.cover}\r\n                          alt={serie.name}\r\n                          onError={handleImageError}\r\n                        />\r\n                        <div className=\"result-info\">\r\n                          <h4>{serie.name}</h4>\r\n                          <span className=\"result-type\">Série</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Nenhum resultado */}\r\n              {searchResults.channels.length === 0 && \r\n               searchResults.movies.length === 0 && \r\n               searchResults.series.length === 0 && (\r\n                <div className=\"no-results\">\r\n                  <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n                  <h3>Nenhum resultado encontrado</h3>\r\n                  <p>Tente buscar com outras palavras-chave</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!searchQuery && (\r\n            <div className=\"search-placeholder\">\r\n              <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n              <h3>Digite algo para pesquisar</h3>\r\n              <p>Busque por canais, filmes ou séries</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search; ","import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport mpegts from 'mpegts.js';\nimport shaka from 'shaka-player';\n\nimport './VideoPlayer.css';\n\n// Instalar polyfills do Shaka Player para garantir compatibilidade\nshaka.polyfill.installAll();\n\n// A versão do Shaka Player foi fixada em 2.5.4, a mesma usada nos exemplos da Samsung\n// para garantir máxima compatibilidade com TVs Tizen mais antigas.\n\nconst VideoPlayer = ({ isActive, streamUrl, streamInfo, onBack }) => {\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n\n  const initializingRef = useRef(false);\n  const errorTimeoutRef = useRef(null); \n  const previousStreamUrlRef = useRef(null);\n  const blobUrlRef = useRef(null);\n  const controlsTimeoutRef = useRef(null);\n  \n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Carregando...');\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playerType, setPlayerType] = useState(null);\n  const [isControlsVisible, setIsControlsVisible] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [dateTime, setDateTime] = useState(new Date());\n\n\n  // Detectar ambiente (desenvolvimento vs produção)\n  const isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n  const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\n\n  // Função para analisar e corrigir URLs problemáticas\n  const analyzeAndFixUrl = (url) => {\n    const analysis = {\n      original: url,\n      protocol: null,\n      domain: null,\n      hasToken: false,\n      needsHttps: false,\n      suggestions: [],\n      alternatives: []\n    };\n\n    try {\n      const urlObj = new URL(url);\n      analysis.protocol = urlObj.protocol;\n      analysis.domain = urlObj.hostname;\n      analysis.hasToken = urlObj.searchParams.has('token') || url.includes('token=');\n      \n      if (urlObj.protocol === 'http:' && !isDevelopment) {\n        analysis.needsHttps = true;\n        analysis.suggestions.push('Tentar HTTPS');\n      }\n      \n      const alternatives = [];\n      alternatives.push({ type: 'original', url: url });\n      \n      if (analysis.needsHttps) {\n        alternatives.push({ \n          type: 'https', \n          url: url.replace('http://', 'https://') \n        });\n      }\n      \n      if (analysis.hasToken) {\n        const urlWithoutToken = url.split('?')[0];\n        alternatives.push({ \n          type: 'no-token', \n          url: urlWithoutToken \n        });\n        \n        if (analysis.needsHttps) {\n             alternatives.push({ \n                type: 'https-no-token', \n                url: urlWithoutToken.replace('http://', 'https://') \n            });\n        }\n      }\n      \n      analysis.alternatives = alternatives.slice(0, 4);\n      \n    } catch (err) {\n      analysis.alternatives = [{ type: 'original', url: url }];\n    }\n    \n    return analysis;\n  };\n\n  // Headers seguros para HLS (sem os bloqueados pelo navegador)\n  const getSafeHeaders = () => ({\n    'Accept': '*/*',\n    'Accept-Language': 'pt-BR,pt;q=0.9,en;q=0.8',\n    'Cache-Control': 'no-cache'\n  });\n\n  // Função para detectar tipo de player necessário\n  const detectPlayerType = (url, info) => {\n    const type = info?.type;\n    \n    // 1. Streams ao vivo continuam usando mpegts.js\n    if (type === 'live' || url.includes('.ts')) {\n        return 'mpegts-live';\n    }\n\n    // 2. Para VOD (filmes/séries)\n    if (type === 'movie' || type === 'series' || url.includes('.mp4')) {\n        // No Tizen, usamos Shaka Player v2.5.4, que é a versão de referência da Samsung.\n        if (isTizenTV) {\n            console.log(\"Detector: VOD no Tizen. Usando Shaka Player v2.5.4.\");\n            return 'shaka';\n        }\n        // Para outros, o método direto é suficiente.\n        return 'html5-direct';\n    }\n    \n    // 3. Fallback para streams ao vivo.\n    return 'mpegts-live';\n  };\n\n  // Limpar timeouts ativos\n  const clearTimeouts = () => {\n    if (errorTimeoutRef.current) {\n      clearTimeout(errorTimeoutRef.current);\n      errorTimeoutRef.current = null;\n    }\n  };\n\n  // Limpar Blob URLs\n  const cleanupBlobUrls = () => {\n    if (blobUrlRef.current) {\n      URL.revokeObjectURL(blobUrlRef.current);\n      blobUrlRef.current = null;\n    }\n  };\n\n  // Função memoizada para inicialização\n  const initializeIfNeeded = useCallback(() => {\n    if (!isActive || !streamUrl || initializingRef.current) return;\n\n    // Verificar se a URL mudou\n    if (previousStreamUrlRef.current === streamUrl && !error) {\n      return;\n    }\n\n    if (initializingRef.current) {\n      return;\n    }\n\n    console.log('🎬 Iniciando reprodução para:', streamUrl);\n    \n    // Analisar URL primeiro\n    const analysis = analyzeAndFixUrl(streamUrl);\n    \n    // Limpar player anterior se existir e a URL mudou\n    if (previousStreamUrlRef.current !== streamUrl) {\n      cleanupPlayer();\n    }\n    \n    previousStreamUrlRef.current = streamUrl;\n    \n    const detectedPlayerType = detectPlayerType(streamUrl, streamInfo);\n    console.log('🎯 Tipo de player detectado:', detectedPlayerType);\n    setPlayerType(detectedPlayerType);\n    initializingRef.current = true;\n\n    // Função de inicialização integrada\n    const initPlayer = async (type) => {\n      if (!videoRef.current || !streamUrl) {\n        initializingRef.current = false;\n        return;\n      }\n\n      console.log(`🚀 Inicializando player ${type} com URL:`, streamUrl);\n      setIsLoading(true);\n      setLoadingMessage('Carregando...');\n      setLoadingProgress(5);\n      setError(null);\n      setIsPlaying(false);\n      \n      clearTimeouts();\n\n      const videoElement = videoRef.current;\n\n      try {\n        if (type === 'shaka') {\n          console.log('✨ Usando Shaka Player para VOD');\n          await initShakaPlayer(streamUrl, videoElement);\n        } else if (type === 'mpegts-vod') {\n          console.log('📽️ Usando mpegts para MP4/VOD (Modo de Segurança)');\n          await initMpegtsVodPlayer(streamUrl, videoElement);\n        } else if (type === 'mpegts-live') {\n          console.log('📡 Usando mpegts para live stream');\n          await initMpegtsLivePlayer(streamUrl, videoElement);\n        } else if (type === 'html5-direct') {\n          console.log('⚡ Usando HTML5 direto');\n          const urlToTry = analysis.alternatives && analysis.alternatives.length > 0 ? analysis.alternatives[0].url : streamUrl;\n          await initHtml5PlayerDirect(urlToTry, videoElement);\n        } else {\n          // Fallback para mpegts live (ou outro se preferir, mas HLS e iframe removidos)\n          console.log('📡 Usando mpegts player para stream (fallback principal agora)');\n          await initMpegtsLivePlayer(streamUrl, videoElement);\n        }\n\n      } catch (err) {\n        console.error('💥 Erro ao criar player:', err);\n        clearTimeouts();\n        \n        setError(`Erro ao inicializar player: ${err.message}`);\n        setIsLoading(false);\n        initializingRef.current = false;\n      }\n    };\n\n    // Chamar função de inicialização\n    initPlayer(detectedPlayerType);\n  }, [isActive, streamUrl, streamInfo, isDevelopment, isTizenTV]);\n\n  // Função para inicializar o Shaka Player (v2.5.4)\n  const initShakaPlayer = async (url, videoElement) => {\n    return new Promise((resolve, reject) => {\n      try {\n        const player = new shaka.Player(videoElement);\n        playerRef.current = player; // Armazena a instância do player\n\n        // Configuração mínima e segura para Tizen, baseada na versão 2.5.4\n        // Menos configurações complexas significam menos pontos de falha no Tizen.\n        player.configure({\n          streaming: {\n            // Aumenta o tempo que o player espera por dados antes de dar erro.\n            // Ajuda em conexões lentas ou com instabilidade.\n            bufferingGoal: 120, // 2 minutos\n            rebufferingGoal: 2,\n            retryParameters: {\n              timeout: 30000, // 30 segundos\n              maxAttempts: 5,\n            }\n          }\n        });\n\n        // Listeners para sucesso e erro\n        player.addEventListener('error', (event) => {\n          console.error('💥 Erro no Shaka Player:', event.detail);\n          reject(new Error(`Erro no Shaka Player: ${event.detail.code}`));\n        });\n\n        // Event listeners para progresso\n        videoElement.addEventListener('loadstart', () => {\n          setLoadingProgress(20);\n        });\n\n        videoElement.addEventListener('loadeddata', () => {\n          setLoadingProgress(60);\n        });\n\n        videoElement.addEventListener('canplay', () => {\n          setLoadingProgress(85);\n        });\n\n        videoElement.addEventListener('playing', () => {\n          setLoadingProgress(100);\n          // O estado isPlaying será gerenciado por um useEffect central\n          setTimeout(() => {\n            setIsLoading(false);\n            setLoadingProgress(0);\n          }, 500);\n          initializingRef.current = false;\n        });\n\n        // Carregar a mídia\n        player.load(url).then(() => {\n          console.log('✅ Shaka Player carregou a mídia com sucesso.');\n          setLoadingProgress(90);\n          resolve();\n        }).catch((error) => {\n          console.error('💥 Erro ao carregar mídia no Shaka Player:', error);\n          reject(error);\n        });\n\n      } catch (error) {\n        console.error('💥 Falha ao inicializar o Shaka Player:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Função para inicializar HTML5 player direto (sem fetch)\n  const initHtml5PlayerDirect = async (url, videoElement) => {\n    return new Promise((resolve, reject) => {\n      const handleLoadStart = () => {\n        setLoadingProgress(10);\n        setLoadingMessage('Carregando...');\n      };\n\n      const handleLoadedData = () => {\n        setLoadingProgress(50);\n        setLoadingMessage('Preparando...');\n      };\n\n      const handleCanPlay = () => {\n        setLoadingProgress(80);\n        setLoadingMessage('Iniciando...');\n      };\n\n      const handlePlaying = () => {\n        clearTimeouts();\n        setLoadingProgress(100);\n        // O estado isPlaying será gerenciado por um useEffect central\n        // Pequeno delay antes de esconder o loading para mostrar 100%\n        setTimeout(() => {\n          setIsLoading(false);\n          setLoadingProgress(0);\n          setError(null);\n          initializingRef.current = false;\n          resolve();\n        }, 500);\n      };\n\n      const handleError = (err) => {\n        clearTimeouts();\n        \n        // Tentar diagnóstico do erro\n        if (videoElement.error) {\n          const errorDetails = {\n            1: 'MEDIA_ERR_ABORTED - Download abortado',\n            2: 'MEDIA_ERR_NETWORK - Erro de rede',\n            3: 'MEDIA_ERR_DECODE - Erro de decodificação',\n            4: 'MEDIA_ERR_SRC_NOT_SUPPORTED - Formato não suportado'\n          };\n          console.error('Detalhes do erro HTML5:', errorDetails[videoElement.error.code] || 'Erro desconhecido no elemento video');\n        }\n        \n        reject(new Error('Erro na reprodução HTML5 direta'));\n      };\n\n      // Limpar listeners anteriores\n      const events = ['loadstart', 'loadeddata', 'canplay', 'playing', 'error'];\n      events.forEach(event => {\n        videoElement.removeEventListener(event, () => {});\n      });\n\n      // Adicionar event listeners\n      videoElement.addEventListener('loadstart', handleLoadStart);\n      videoElement.addEventListener('loadeddata', handleLoadedData);\n      videoElement.addEventListener('canplay', handleCanPlay);\n      videoElement.addEventListener('playing', handlePlaying);\n      videoElement.addEventListener('error', handleError);\n\n      // Configurar crossOrigin para tentar contornar CORS\n      if (isDevelopment) {\n        videoElement.crossOrigin = 'anonymous';\n      } else if (isTizenTV) {\n        videoElement.crossOrigin = null; // Tizen pode não precisar\n      } else {\n        videoElement.crossOrigin = 'use-credentials';\n      }\n\n      // Timeout para HTML5\n      errorTimeoutRef.current = setTimeout(() => {\n        if (initializingRef.current) {\n          reject(new Error('Timeout na reprodução direta'));\n        }\n      }, 30000);\n\n      // Configurar e carregar vídeo\n      videoElement.src = url;\n      videoElement.load();\n      \n      // Auto-play após pequeno delay\n      setTimeout(() => {\n        if (videoRef.current && initializingRef.current) {\n          videoRef.current.play().catch(playError => {\n            console.error('Erro no auto-play:', playError);\n            // Não rejeitar imediatamente, aguardar timeout\n          });\n        }\n      }, 500);\n    });\n  };\n\n  // Função para inicializar mpegts player para VOD (filmes/séries MP4)\n  const initMpegtsVodPlayer = async (url, videoElement) => {\n    return new Promise((resolve, reject) => {\n      try {\n        setLoadingMessage('Carregando vídeo...');\n        \n        const mediaDataSource = {\n          type: 'mp4',\n          isLive: false,\n          url: url\n        };\n\n        // Configuração ultra-mínima para máxima estabilidade no Tizen.\n        // O objetivo primário é evitar o congelamento da UI. O tempo de carregamento\n        // pode ser longo, mas o app deve permanecer responsivo.\n        const playerConfig = {\n          enableWorker: false, // Essencial para Tizen\n        };\n\n        const player = mpegts.createPlayer(mediaDataSource, playerConfig);\n        playerRef.current = player;\n\n        player.on(mpegts.Events.ERROR, (errorType, errorDetail, errorInfo) => {\n          console.error('❌ Erro mpegts VOD:', errorType, errorDetail, errorInfo);\n          reject(new Error(`mpegts VOD error: ${errorType} - ${errorDetail}`));\n        });\n        \n        const handlePlaying = () => {\n          console.log('✅ mpegts VOD: Reproduzindo');\n          clearTimeouts();\n          setLoadingProgress(100);\n          // O estado isPlaying será gerenciado por um useEffect central\n          setTimeout(() => {\n            setIsLoading(false);\n            setLoadingProgress(0);\n          }, 500);\n          setError(null);\n          initializingRef.current = false;\n          resolve();\n        };\n        \n        videoElement.addEventListener('playing', handlePlaying, { once: true });\n\n        player.attachMediaElement(videoElement);\n        player.load();\n        \n        // Timeout longo para permitir o carregamento de arquivos grandes\n        errorTimeoutRef.current = setTimeout(() => {\n          if (initializingRef.current) {\n            console.error(`❌ Timeout mpegts VOD após 3 minutos para URL: ${url}`);\n            reject(new Error(`Timeout mpegts VOD (${streamInfo?.title || 'Filme/Série'})`));\n          }\n        }, 180000); // 3 minutos\n\n      } catch (err) {\n        console.error('💥 Erro ao criar mpegts VOD player:', err);\n        reject(err);\n      }\n    });\n  };\n\n  // Função para inicializar mpegts player para Live (canais ao vivo)\n  const initMpegtsLivePlayer = async (url, videoElement) => {\n    return new Promise((resolve, reject) => {\n      try {\n        setLoadingMessage('Carregando...');\n        \n        const player = mpegts.createPlayer({\n          type: 'mpegts',\n          isLive: true,\n          url: url\n        });\n\n        playerRef.current = player;\n\n        player.on(mpegts.Events.ERROR, (errorType, errorDetail, errorInfo) => {\n          console.error('❌ Erro mpegts Live:', errorType, errorDetail, errorInfo);\n          reject(new Error(`mpegts Live error: ${errorType} - ${errorDetail}`));\n        });\n\n        player.on(mpegts.Events.LOADING_COMPLETE, () => {\n          setLoadingMessage('Iniciando...');\n          setLoadingProgress(90);\n        });\n\n        const handlePlaying = () => {\n          console.log('✅ mpegts Live: Reproduzindo');\n          clearTimeouts();\n          setLoadingProgress(100);\n          // O estado isPlaying será gerenciado por um useEffect central\n          setTimeout(() => {\n            setIsLoading(false);\n            setLoadingProgress(0);\n          }, 500);\n          setError(null);\n          initializingRef.current = false;\n          resolve();\n        };\n\n        videoElement.addEventListener('playing', handlePlaying);\n\n        player.attachMediaElement(videoElement);\n        player.load();\n\n        // Para live, tentar autoplay\n        setTimeout(() => {\n          if (playerRef.current && videoRef.current && initializingRef.current) {\n            playerRef.current.play().catch(playError => {\n              console.warn('⚠️ Autoplay falhou, aguardando interação do usuário:', playError);\n              // Para live streams, isso é aceitável\n            });\n          }\n        }, 500);\n\n        // Timeout para live\n        errorTimeoutRef.current = setTimeout(() => {\n          if (initializingRef.current) {\n            reject(new Error('Timeout mpegts Live - verifique a conexão'));\n          }\n        }, 10000);\n\n      } catch (err) {\n        console.error('💥 Erro ao criar mpegts Live player:', err);\n        reject(err);\n      }\n    });\n  };\n\n  // Função para limpar player\n  const cleanupPlayer = useCallback(() => {\n    clearTimeouts();\n    cleanupBlobUrls();\n    \n  \n    // Limpar elemento video\n    if (videoRef.current) {\n      const videoElement = videoRef.current;\n      \n      try {\n        const events = ['loadstart', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'error', 'stalled'];\n        events.forEach(event => {\n          videoElement.removeEventListener(event, () => {});\n        });\n        \n        if (videoElement.pause) videoElement.pause();\n        if (videoElement.src !== undefined) videoElement.src = '';\n        if (videoElement.load) videoElement.load();\n      } catch (err) {\n        console.log('Erro ao limpar video element:', err);\n      }\n    }\n\n    // Limpar player mpegts\n    if (playerRef.current) {\n      try {\n        const player = playerRef.current;\n        \n        if (player.isLoaded && player.isLoaded()) {\n          if (player.pause) player.pause();\n          if (player.unload) player.unload();\n        }\n        \n        if (player.detachMediaElement) player.detachMediaElement();\n        if (player.destroy) player.destroy();\n        \n      } catch (err) {\n        console.error('Erro ao limpar player mpegts:', err);\n      }\n      \n      playerRef.current = null;\n    }\n    \n    setIsLoading(false);\n    setLoadingMessage('Carregando...');\n    setLoadingProgress(0);\n    setError(null);\n    setIsPlaying(false);\n    setPlayerType(null);\n    setCurrentTime(0);\n    setDuration(0);\n    setIsControlsVisible(true);\n    \n    initializingRef.current = false;\n    previousStreamUrlRef.current = null;\n  }, []);\n\n  // Função para voltar/sair\n  const handleBack = useCallback(() => {\n    cleanupPlayer();\n    if (onBack) {\n      onBack();\n    }\n  }, [cleanupPlayer, onBack]);\n\n  useEffect(() => {\n    if (isActive && streamUrl && !initializingRef.current) {\n      initializeIfNeeded();\n    }\n\n    return () => {\n      if (!isActive) {\n        cleanupPlayer();\n      }\n    };\n  }, [isActive, streamUrl, initializeIfNeeded, cleanupPlayer]);\n\n  // Prevenir redirecionamentos em Tizen TV\n  useEffect(() => {\n    if (!isActive || !isTizenTV || !streamInfo?.preventBrowserRedirect) return;\n    \n    const preventRedirect = (event) => {\n      // Prevenir navegação automática para URLs de vídeo\n      if (event.target.tagName === 'A' || event.target.tagName === 'VIDEO') {\n        const href = event.target.href || event.target.src;\n        if (href && (href.includes('.mp4') || href.includes('.mkv') || href.includes('.avi'))) {\n          event.preventDefault();\n          event.stopPropagation();\n          return false;\n        }\n      }\n    };\n    \n    const preventWindowOpen = () => {\n      return null;\n    };\n    \n    // Substituir window.open temporariamente\n    const originalWindowOpen = window.open;\n    window.open = preventWindowOpen;\n    \n    // Adicionar listeners para prevenir cliques automáticos\n    document.addEventListener('click', preventRedirect, true);\n    document.addEventListener('mousedown', preventRedirect, true);\n    \n    return () => {\n      // Restaurar comportamento original\n      window.open = originalWindowOpen;\n      document.removeEventListener('click', preventRedirect, true);\n      document.removeEventListener('mousedown', preventRedirect, true);\n    };\n  }, [isActive, isTizenTV, streamInfo?.preventBrowserRedirect]);\n\n  // Efeito para o relógio da UI de canal ao vivo\n  useEffect(() => {\n    if (isActive && streamInfo?.type === 'live') {\n      const timer = setInterval(() => {\n        setDateTime(new Date());\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [isActive, streamInfo?.type]);\n\n  // Formatar tempo para HH:MM:SS ou MM:SS\n  const formatTime = (timeInSeconds) => {\n    if (isNaN(timeInSeconds) || timeInSeconds < 0) {\n      return '00:00';\n    }\n    const hours = Math.floor(timeInSeconds / 3600);\n    const minutes = Math.floor((timeInSeconds % 3600) / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n\n    const pad = (num) => num.toString().padStart(2, '0');\n\n    if (hours > 0) {\n      return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n    }\n    return `${pad(minutes)}:${pad(seconds)}`;\n  };\n\n  const showControls = useCallback(() => {\n    setIsControlsVisible(true);\n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    controlsTimeoutRef.current = setTimeout(() => {\n      // Apenas esconde se estiver tocando\n      if (videoRef.current && !videoRef.current.paused) {\n        setIsControlsVisible(false);\n      }\n    }, 4000); // Esconder após 4 segundos\n  }, []);\n\n  const togglePlayPause = useCallback(() => {\n    if (videoRef.current) {\n      // Para canais ao vivo, a pausa não é permitida. Apenas tentamos play.\n      if (streamInfo?.type === 'live') {\n        if (videoRef.current.paused) {\n          videoRef.current.play();\n        }\n        // Se estiver tocando, não faz nada.\n      } else {\n        // Comportamento padrão para VOD (filmes/séries)\n        if (videoRef.current.paused) {\n          videoRef.current.play();\n        } else {\n          videoRef.current.pause();\n        }\n      }\n      showControls();\n    }\n  }, [showControls, streamInfo?.type]);\n\n  const handleSeek = useCallback((forward) => {\n    if (videoRef.current && duration > 0) {\n      const seekTime = 10; // Pular 10 segundos\n      const newTime = forward\n        ? Math.min(videoRef.current.currentTime + seekTime, duration)\n        : Math.max(videoRef.current.currentTime - seekTime, 0);\n      videoRef.current.currentTime = newTime;\n      setCurrentTime(newTime); // Atualiza o estado imediatamente\n    }\n  }, [duration]);\n\n  // Efeito para gerenciar estado do vídeo (tempo, duração, play/pause)\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!isActive || !video) return;\n\n    const handleTimeUpdate = () => setCurrentTime(video.currentTime);\n    const handleDurationChange = () => {\n      if (!isNaN(video.duration) && isFinite(video.duration)) {\n        setDuration(video.duration);\n      }\n    };\n    const handlePlay = () => {\n      setIsPlaying(true);\n      showControls();\n    };\n    const handlePause = () => {\n      setIsPlaying(false);\n      showControls(); // Mantém os controles visíveis quando pausado\n    };\n    \n    video.addEventListener('timeupdate', handleTimeUpdate);\n    video.addEventListener('durationchange', handleDurationChange);\n    video.addEventListener('loadedmetadata', handleDurationChange);\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('pause', handlePause);\n\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n      video.removeEventListener('durationchange', handleDurationChange);\n      video.removeEventListener('loadedmetadata', handleDurationChange);\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('pause', handlePause);\n    };\n  }, [isActive, showControls]);\n\n  // Sistema de navegação por controle remoto e interações\n  useEffect(() => {\n    if (!isActive) return;\n\n    const handlePlayerNavigation = (event) => {\n      showControls(); // Exibir controles em qualquer interação\n      const { keyCode } = event.detail;\n\n      switch (keyCode) {\n        case 13: // OK/Enter\n        case 415: // Play\n        case 19: // Pause\n          togglePlayPause();\n          break;\n        case 39: // Seta Direita\n          handleSeek(true);\n          break;\n        case 37: // Seta Esquerda\n          handleSeek(false);\n          break;\n        case 8:\n        case 10009: // Voltar (Tizen)\n          handleBack();\n          break;\n        default:\n          break;\n      }\n    };\n\n    const handleInteraction = () => {\n      showControls();\n    };\n\n    window.addEventListener('playerNavigation', handlePlayerNavigation);\n    document.addEventListener('mousemove', handleInteraction);\n    document.addEventListener('touchstart', handleInteraction);\n    document.addEventListener('click', handleInteraction);\n    \n    return () => {\n      window.removeEventListener('playerNavigation', handlePlayerNavigation);\n      document.removeEventListener('mousemove', handleInteraction);\n      document.removeEventListener('touchstart', handleInteraction);\n      document.removeEventListener('click', handleInteraction);\n    };\n  }, [isActive, handleBack, togglePlayPause, handleSeek, showControls]);\n\n  const retryPlaybackSimple = () => { \n    console.log('🔄 Tentando reproduzir novamente...');\n    \n    // Adicionar limpeza explícita aqui\n    cleanupPlayer();\n\n    setError(null);\n    setIsLoading(true);\n    setLoadingMessage('Tentando novamente...');\n    setLoadingProgress(0);\n    setIsPlaying(false);\n    \n    initializingRef.current = false;\n    if (isActive && streamUrl) {\n        console.log(`🎯 Tentando novamente com a estratégia original`);\n        \n        setLoadingMessage('Carregando...');\n        initializeIfNeeded(); \n    }\n  };\n\n  if (!isActive) return null;\n\n  return (\n    <div className=\"video-player-container\">\n      <div className=\"video-wrapper\">\n        {/* {!useIframe ? ( // Removida lógica de iframe */}\n          <video\n            ref={videoRef}\n            className=\"video-element\"\n            autoPlay\n            playsInline\n            controls={isDevelopment || !isTizenTV} \n            style={{ width: '100%', height: '100%' }}\n          />\n        \n        {/* Renderização Condicional da UI */}\n        {isControlsVisible && streamInfo?.type === 'live' ? (\n          <div className=\"live-info-overlay\">\n            <div className=\"live-info-content\">\n              \n              {/* Bloco da Esquerda: Logo e Info do Canal */}\n              <div className=\"live-info-left\">\n                {streamInfo.logo && (\n                  <img src={streamInfo.logo} alt=\"Logo do Canal\" className=\"channel-logo\" />\n                )}\n                <div className=\"channel-details\">\n                  <h2 className=\"channel-title\">{streamInfo.number} {streamInfo.name}</h2>\n                  <div className=\"program-info\">\n                    <p className=\"program-title\">\n                      <span>Atual:</span> {streamInfo.currentProgram?.title || 'Programa não informado'}\n                    </p>\n                    <p className=\"program-time\">\n                      Início: {streamInfo.currentProgram?.startTime || '--:--'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Bloco da Direita: Informações Adicionais */}\n              <div className=\"live-info-right\">\n                 <div className=\"datetime-display\">\n                    <p>{dateTime.toLocaleDateString('pt-BR')}</p>\n                    <p>{dateTime.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit', second: '2-digit' })}</p>\n                 </div>\n                 <div className=\"program-info next-program\">\n                   <p className=\"program-title\">\n                     <span>Próximo:</span> {streamInfo.nextProgram?.title || 'Programa não informado'}\n                   </p>\n                   <p className=\"program-time\">\n                     Início: {streamInfo.nextProgram?.startTime || '--:--'}\n                   </p>\n                 </div>\n              </div>\n\n            </div>\n          </div>\n        ) : isControlsVisible && (\n          <div className=\"player-controls-overlay\">\n            {/* Ícone de Play/Pause centralizado */}\n            {!isPlaying && (\n              <div className=\"play-pause-indicator\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\" />\n                </svg>\n              </div>\n            )}\n            \n            <div className=\"controls-bottom-bar\">\n              <div className=\"progress-bar-container\">\n                <div className=\"progress-bar-background\" />\n                <div \n                  className=\"progress-bar-current\" \n                  style={{ width: duration > 0 ? `${(currentTime / duration) * 100}%` : '0%' }} \n                />\n              </div>\n              <div className=\"time-indicators\">\n                <span>{formatTime(currentTime)}</span>\n                <span>{formatTime(duration)}</span>\n              </div>\n            </div>\n          </div>\n        )}\n       \n        {/* Loading Overlay - Estilo Netflix */}\n        {isLoading && !isPlaying && (\n          <div className=\"netflix-loading-overlay\">\n            <div className=\"netflix-loading-container\">\n              <div className=\"netflix-loading-ring\">\n                <div className=\"netflix-loading-circle\"></div>\n                <div \n                  className=\"netflix-loading-progress\" \n                  style={{ \n                    background: `conic-gradient(#e50914 ${loadingProgress * 3.6}deg, transparent 0deg)` \n                  }}\n                ></div>\n              </div>\n              <div className=\"netflix-loading-percentage\">{loadingProgress}%</div>\n            </div>\n          </div>\n        )}\n\n        {/* Error Overlay */}\n        {error && !isPlaying && (\n          <div className=\"error-overlay\">\n            <div className=\"error-content\">\n              <h3>Erro na Reprodução</h3>\n              <p>{error}</p>\n              <div className=\"error-actions\">\n                <button onClick={retryPlaybackSimple} className=\"retry-button\">\n                  Tentar Novamente\n                </button>\n                <button onClick={handleBack} className=\"back-button\">\n                  Voltar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport LoginScreen from './components/LoginScreen';\r\nimport Home from './components/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport Channels from './components/Channels';\r\nimport Movies from './components/Movies';\r\nimport Series from './components/Series';\r\nimport SeriesDetailsPage from './components/SeriesDetailsPage';\r\nimport Search from './components/Search';\r\nimport VideoPlayer from './components/VideoPlayer';\r\n\r\n// Estado das seções (migrado do conceito original)\r\nconst SECTIONS = {\r\n  LOGIN: 'login',\r\n  HOME: 'home',\r\n  CHANNELS: 'channels', \r\n  MOVIES: 'movies',\r\n  SERIES: 'series',\r\n  SERIES_DETAILS: 'series_details',\r\n  SEARCH: 'search',\r\n  PLAYER: 'player'\r\n};\r\n\r\n// Menu items (do app antigo)\r\nconst menuItems = [\r\n  { id: 'search', label: 'Pesquisar', icon: 'fa-magnifying-glass' },\r\n  { id: 'home', label: 'Home', icon: 'fa-house' },\r\n  { id: 'channels', label: 'Canais Ao Vivo', icon: 'fa-tv' },\r\n  { id: 'movies', label: 'Filmes', icon: 'fa-film' },\r\n  { id: 'series', label: 'Séries', icon: 'fa-video' },\r\n];\r\n\r\nfunction App() {\r\n  const [currentSection, setCurrentSection] = useState(SECTIONS.LOGIN);\r\n  const [menuFocus, setMenuFocus] = useState(0);\r\n  const [shelfFocus, setShelfFocus] = useState(-1);\r\n  const [itemFocus, setItemFocus] = useState(0);\r\n  const [onMenu, setOnMenu] = useState(false);\r\n  const [playerData, setPlayerData] = useState(null);\r\n  const [selectedSeriesData, setSelectedSeriesData] = useState(null);\r\n  const [sectionHistory, setSectionHistory] = useState([]);\r\n  const [moviePreviewActive, setMoviePreviewActive] = useState(false);\r\n\r\n  // Função para navegar para uma seção e rastrear histórico\r\n  const navigateToSection = useCallback((newSection, addToHistory = true) => {\r\n    if (addToHistory && currentSection !== newSection) {\r\n      setSectionHistory(prev => [...prev, currentSection]);\r\n    }\r\n    setCurrentSection(newSection);\r\n  }, [currentSection]);\r\n\r\n  // Função para voltar usando histórico\r\n  const navigateBack = useCallback(() => {\r\n    if (sectionHistory.length > 0) {\r\n      const previousSection = sectionHistory[sectionHistory.length - 1];\r\n      setSectionHistory(prev => prev.slice(0, -1));\r\n      setCurrentSection(previousSection);\r\n      return true; // Indica que conseguiu voltar\r\n    }\r\n    return false; // Indica que não há histórico\r\n  }, [sectionHistory]);\r\n\r\n  // Registrar teclas do controle remoto Tizen (mantido do template original)\r\n  useEffect(() => {\r\n    if (window.tizen && window.tizen.tvinputdevice) {\r\n      const keys = [\r\n        'MediaPlayPause', 'MediaPlay', 'MediaPause', 'MediaStop',\r\n        'MediaFastForward', 'MediaRewind',\r\n        'ColorF0Red', 'ColorF1Green', 'ColorF2Yellow', 'ColorF3Blue',\r\n      ];\r\n      keys.forEach(k => window.tizen.tvinputdevice.registerKey(k));\r\n    }\r\n  }, []);\r\n\r\n  // Sistema de navegação Tizen melhorado\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      const keyCode = e.keyCode;\r\n      \r\n      // Se estiver na tela de login, apenas permite Enter para continuar\r\n      if (currentSection === SECTIONS.LOGIN) {\r\n        if (keyCode === 13) { // Enter\r\n          handleLogin();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Se estiver no player, delegar navegação específica\r\n      if (currentSection === SECTIONS.PLAYER) {\r\n        const playerEvent = new CustomEvent('playerNavigation', {\r\n          detail: { keyCode }\r\n        });\r\n        window.dispatchEvent(playerEvent);\r\n        return;\r\n      }\r\n\r\n      // Se estiver na página de detalhes da série, delegar navegação específica\r\n      if (currentSection === SECTIONS.SERIES_DETAILS) {\r\n        const seriesDetailsEvent = new CustomEvent('seriesDetailsNavigation', {\r\n          detail: { keyCode }\r\n        });\r\n        window.dispatchEvent(seriesDetailsEvent);\r\n        return;\r\n      }\r\n\r\n      // Se o MoviePreview estiver ativo, delegar navegação específica\r\n      if (moviePreviewActive && currentSection === SECTIONS.MOVIES) {\r\n        const movieDetailsEvent = new CustomEvent('movieDetailsNavigation', {\r\n          detail: { keyCode }\r\n        });\r\n        window.dispatchEvent(movieDetailsEvent);\r\n        return;\r\n      }\r\n\r\n      // Navegação no menu lateral\r\n      if (onMenu) {\r\n        if (keyCode === 38) { // Cima\r\n          setMenuFocus((prev) => (prev > 0 ? prev - 1 : menuItems.length - 1));\r\n        } else if (keyCode === 40) { // Baixo\r\n          setMenuFocus((prev) => (prev < menuItems.length - 1 ? prev + 1 : 0));\r\n        } else if (keyCode === 39) { // Direita - sair do menu\r\n          setOnMenu(false);\r\n        } else if (keyCode === 13) { // OK - selecionar item do menu\r\n          const selectedSection = menuItems[menuFocus].id;\r\n          setCurrentSection(selectedSection);\r\n          setOnMenu(false);\r\n        }\r\n      } else {\r\n        // Navegação no conteúdo principal\r\n        if (currentSection === SECTIONS.HOME) {\r\n          if (keyCode === 38) { // Cima\r\n            if (shelfFocus > -1) {\r\n              setShelfFocus(shelfFocus - 1);\r\n              setItemFocus(0);\r\n            }\r\n          } else if (keyCode === 40) { // Baixo\r\n            if (shelfFocus < 2) {\r\n              setShelfFocus(shelfFocus + 1);\r\n              setItemFocus(0);\r\n            }\r\n          } else if (keyCode === 37) { // Esquerda\r\n            if (shelfFocus === -1) {\r\n              if (itemFocus > 0) {\r\n                setItemFocus(itemFocus - 1);\r\n              } else {\r\n                setOnMenu(true);\r\n              }\r\n            } else {\r\n              if (itemFocus > 0) {\r\n                setItemFocus(itemFocus - 1);\r\n              } else {\r\n                setOnMenu(true);\r\n              }\r\n            }\r\n          } else if (keyCode === 39) { // Direita\r\n            if (shelfFocus === -1) {\r\n              setItemFocus((prev) => Math.min(prev + 1, 1));\r\n            } else {\r\n              setItemFocus((prev) => Math.min(prev + 1, 9));\r\n            }\r\n          } else if (keyCode === 13) { // OK\r\n            if (shelfFocus === -1) {\r\n              const heroButtonEvent = new CustomEvent('heroButtonClick', {\r\n                detail: { buttonIndex: itemFocus }\r\n              });\r\n              window.dispatchEvent(heroButtonEvent);\r\n            } else {\r\n              console.log('Item selecionado:', { shelfFocus, itemFocus });\r\n              // TODO: Implementar seleção de item das prateleiras\r\n            }\r\n          }\r\n        } else if (currentSection === SECTIONS.CHANNELS) {\r\n          // Navegação específica para canais - delegar todas as teclas\r\n          if (keyCode === 38 || keyCode === 40 || keyCode === 37 || keyCode === 39 || keyCode === 13) {\r\n            // Delegar navegação para o componente Channels através de eventos customizados\r\n            const channelsEvent = new CustomEvent('channelsNavigation', {\r\n              detail: { keyCode }\r\n            });\r\n            window.dispatchEvent(channelsEvent);\r\n          }\r\n        } else if (currentSection === SECTIONS.MOVIES) {\r\n          // Navegação específica para filmes - delegar todas as teclas\r\n          if (keyCode === 38 || keyCode === 40 || keyCode === 37 || keyCode === 39 || keyCode === 13 || keyCode === 73) {\r\n            // Delegar navegação para o componente Movies através de eventos customizados\r\n            // keyCode 73 = Tecla 'I' para preview\r\n            const moviesEvent = new CustomEvent('moviesNavigation', {\r\n              detail: { keyCode }\r\n            });\r\n            window.dispatchEvent(moviesEvent);\r\n          }\r\n        } else if (currentSection === SECTIONS.SERIES) {\r\n          // Navegação específica para séries - delegar todas as teclas\r\n          if (keyCode === 38 || keyCode === 40 || keyCode === 37 || keyCode === 39 || keyCode === 13 || keyCode === 73 || keyCode === 80) {\r\n            // Delegar navegação para o componente Series através de eventos customizados\r\n            // keyCode 13 = ENTER para abrir tela de detalhes\r\n            // keyCode 73 = Tecla 'I' para preview/detalhes\r\n            // keyCode 80 = Tecla 'P' para reproduzir diretamente\r\n            const seriesEvent = new CustomEvent('seriesNavigation', {\r\n              detail: { keyCode }\r\n            });\r\n            window.dispatchEvent(seriesEvent);\r\n          }\r\n        } else if (currentSection === SECTIONS.SERIES_DETAILS) {\r\n          // Navegação específica para detalhes da série - delegar todas as teclas\r\n          if (keyCode === 38 || keyCode === 40 || keyCode === 37 || keyCode === 39 || keyCode === 13) {\r\n            // Delegar navegação para o componente SeriesDetailsPage através de eventos customizados\r\n            const seriesDetailsEvent = new CustomEvent('seriesDetailsNavigation', {\r\n              detail: { keyCode }\r\n            });\r\n            window.dispatchEvent(seriesDetailsEvent);\r\n          }\r\n        } else if (currentSection === SECTIONS.SEARCH) {\r\n          // Navegação específica para busca - delegar todas as teclas\r\n          if (keyCode === 38 || keyCode === 40 || keyCode === 37 || keyCode === 39 || keyCode === 13) {\r\n            // Delegar navegação para o componente Search através de eventos customizados\r\n            const searchEvent = new CustomEvent('searchNavigation', {\r\n              detail: { keyCode }\r\n            });\r\n            window.dispatchEvent(searchEvent);\r\n          }\r\n        } else {\r\n          // Para outras seções, apenas navegação básica\r\n          if (keyCode === 37) { // Esquerda - voltar ao menu\r\n            setOnMenu(true);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Botões especiais (mantidos)\r\n      if (keyCode === 10009 || keyCode === 8) { // Return/Back\r\n        if (currentSection === SECTIONS.PLAYER) {\r\n          // Voltar do player para a seção anterior\r\n          handleBackFromPlayer();\r\n        } else if (currentSection === SECTIONS.SERIES_DETAILS) {\r\n          // Usar histórico inteligente para voltar para a tela anterior\r\n          if (!navigateBack()) {\r\n            // Se não há histórico, voltar para SERIES como fallback\r\n            setCurrentSection(SECTIONS.SERIES);\r\n          }\r\n          setSelectedSeriesData(null);\r\n        } else if (currentSection !== SECTIONS.HOME) {\r\n          // Para outras seções, tentar usar histórico ou ir para HOME\r\n          if (!navigateBack()) {\r\n            setCurrentSection(SECTIONS.HOME);\r\n          }\r\n          setOnMenu(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [currentSection, onMenu, menuFocus, shelfFocus, itemFocus, moviePreviewActive, navigateBack]);\r\n\r\n  // Listener para eventos de reprodução de conteúdo\r\n  useEffect(() => {\r\n    const handlePlayContent = (event) => {\r\n      const { streamUrl, streamInfo } = event.detail;\r\n      \r\n      // Detectar ambiente Tizen TV\r\n      const isTizenTV = typeof tizen !== 'undefined' || window.navigator.userAgent.includes('Tizen');\r\n      \r\n      console.log('🎬 Evento playContent recebido:', { streamUrl, streamInfo });\r\n      console.log('📺 Ambiente Tizen TV:', isTizenTV);\r\n      \r\n      // Se for Tizen TV e tiver flags específicas, aplicar configurações especiais\r\n      if (isTizenTV && streamInfo?.forceTizenPlayer) {\r\n        console.log('🔧 Aplicando configurações específicas para Tizen TV');\r\n        \r\n        // Prevenir qualquer redirecionamento para navegador externo\r\n        event.preventDefault && event.preventDefault();\r\n        event.stopPropagation && event.stopPropagation();\r\n        \r\n        // Aplicar configurações específicas para Tizen no streamInfo\r\n        const tizenStreamInfo = {\r\n          ...streamInfo,\r\n          preferredPlayer: 'mpegts',\r\n          useInternalPlayer: true,\r\n          preventRedirect: true,\r\n          environment: 'tizen'\r\n        };\r\n        \r\n        console.log('📺 StreamInfo configurado para Tizen:', tizenStreamInfo);\r\n        \r\n        setPlayerData({ streamUrl, streamInfo: tizenStreamInfo });\r\n        setCurrentSection(SECTIONS.PLAYER);\r\n        \r\n        // Adicionar pequeno delay para garantir que a transição ocorra\r\n        setTimeout(() => {\r\n          console.log('📺 Player Tizen inicializado');\r\n        }, 200);\r\n        \r\n      } else {\r\n        // Comportamento padrão para outros ambientes\r\n        console.log('💻 Usando configuração padrão');\r\n        setPlayerData({ streamUrl, streamInfo });\r\n        setCurrentSection(SECTIONS.PLAYER);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('playContent', handlePlayContent);\r\n    return () => window.removeEventListener('playContent', handlePlayContent);\r\n  }, []);\r\n\r\n  // Listener para navegação para detalhes da série\r\n  useEffect(() => {\r\n    const handleShowSeriesDetails = (event) => {\r\n      const { series } = event.detail;\r\n      setSelectedSeriesData(series);\r\n      navigateToSection(SECTIONS.SERIES_DETAILS); // Usar função que rastreia histórico\r\n    };\r\n\r\n    window.addEventListener('showSeriesDetails', handleShowSeriesDetails);\r\n    return () => window.removeEventListener('showSeriesDetails', handleShowSeriesDetails);\r\n  }, [currentSection, navigateToSection]); // Adicionar navigateToSection como dependência\r\n\r\n  // Listener para evento de volta à sidebar\r\n  useEffect(() => {\r\n    const handleBackToSidebar = () => {\r\n      setOnMenu(true);\r\n    };\r\n\r\n    window.addEventListener('backToSidebar', handleBackToSidebar);\r\n    return () => window.removeEventListener('backToSidebar', handleBackToSidebar);\r\n  }, []);\r\n\r\n  // Listener para controlar estado do MoviePreview\r\n  useEffect(() => {\r\n    const handleMoviePreviewActive = (event) => {\r\n      setMoviePreviewActive(event.detail.active);\r\n    };\r\n\r\n    window.addEventListener('moviePreviewActive', handleMoviePreviewActive);\r\n    return () => window.removeEventListener('moviePreviewActive', handleMoviePreviewActive);\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    setCurrentSection(SECTIONS.HOME);\r\n    setOnMenu(false);\r\n  };\r\n\r\n  const handleSectionChange = (sectionId) => {\r\n    navigateToSection(sectionId); // Usar função que rastreia histórico\r\n    setOnMenu(false);\r\n    setShelfFocus(0);\r\n    setItemFocus(0);\r\n  };\r\n\r\n  const handleBackFromPlayer = () => {\r\n    // Voltar para a última seção que não seja o player\r\n    setCurrentSection(SECTIONS.HOME);\r\n    setPlayerData(null);\r\n  };\r\n\r\n  const handleBackFromSeriesDetails = () => {\r\n    setCurrentSection(SECTIONS.SERIES);\r\n    setSelectedSeriesData(null);\r\n  };\r\n\r\n  const renderCurrentSection = () => {\r\n    switch (currentSection) {\r\n      case SECTIONS.LOGIN:\r\n        return <LoginScreen onLogin={handleLogin} />;\r\n      \r\n      case SECTIONS.HOME:\r\n        return (\r\n          <Home \r\n            onMenu={onMenu}\r\n            menuFocus={menuFocus}\r\n            shelfFocus={shelfFocus}\r\n            itemFocus={itemFocus}\r\n          />\r\n        );\r\n\r\n      case SECTIONS.CHANNELS:\r\n        return <Channels isActive={currentSection === SECTIONS.CHANNELS} />;\r\n\r\n      case SECTIONS.MOVIES:\r\n        return <Movies isActive={currentSection === SECTIONS.MOVIES} />;\r\n\r\n      case SECTIONS.SERIES:\r\n        return <Series isActive={currentSection === SECTIONS.SERIES} />;\r\n\r\n      case SECTIONS.SERIES_DETAILS:\r\n        return (\r\n          <SeriesDetailsPage \r\n            series={selectedSeriesData}\r\n            isActive={currentSection === SECTIONS.SERIES_DETAILS}\r\n            onBack={handleBackFromSeriesDetails}\r\n          />\r\n        );\r\n\r\n      case SECTIONS.SEARCH:\r\n        return <Search isActive={currentSection === SECTIONS.SEARCH} />;\r\n\r\n      case SECTIONS.PLAYER:\r\n        return (\r\n          <VideoPlayer \r\n            isActive={currentSection === SECTIONS.PLAYER}\r\n            streamUrl={playerData?.streamUrl}\r\n            streamInfo={playerData?.streamInfo}\r\n            onBack={handleBackFromPlayer}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <div className=\"main-content\">\r\n            <div className=\"section-placeholder\">\r\n              <div className=\"placeholder-content\">\r\n                <i className=\"fa-solid fa-construction\"></i>\r\n                <h2>Seção: {currentSection.toUpperCase()}</h2>\r\n                <p>Esta seção será implementada em breve.</p>\r\n                <button \r\n                  className=\"back-btn\"\r\n                  onClick={() => setCurrentSection(SECTIONS.HOME)}\r\n                >\r\n                  <i className=\"fa-solid fa-arrow-left\"></i>\r\n                  Voltar ao Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Não mostrar sidebar na tela de login, no player ou na página de detalhes\r\n  const showSidebar = currentSection !== SECTIONS.LOGIN && \r\n                     currentSection !== SECTIONS.PLAYER && \r\n                     currentSection !== SECTIONS.SERIES_DETAILS;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {showSidebar && (\r\n        <Sidebar \r\n          currentSection={currentSection}\r\n          onMenu={onMenu}\r\n          menuFocus={menuFocus}\r\n          onSectionChange={handleSectionChange}\r\n        />\r\n      )}\r\n      <div className={`app-content ${showSidebar ? 'with-sidebar' : ''}`}>\r\n        {renderCurrentSection()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n// Import polyfills first for Tizen TV compatibility\r\nimport './utils/polyfills';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Import FontAwesome CSS\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// Stagewise Toolbar - Only in development mode\r\nif (process.env.NODE_ENV === 'development') {\r\n  import('@stagewise/toolbar-react').then(({ StagewiseToolbar }) => {\r\n    // Create stagewise configuration\r\n    const stagewiseConfig = {\r\n      plugins: []\r\n    };\r\n\r\n    // Create a separate container for the toolbar\r\n    let toolbarContainer = document.getElementById('stagewise-toolbar');\r\n    if (!toolbarContainer) {\r\n      toolbarContainer = document.createElement('div');\r\n      toolbarContainer.id = 'stagewise-toolbar';\r\n      document.body.appendChild(toolbarContainer);\r\n    }\r\n\r\n    // Create separate React root for the toolbar\r\n    const toolbarRoot = ReactDOM.createRoot(toolbarContainer);\r\n    toolbarRoot.render(<StagewiseToolbar config={stagewiseConfig} />);\r\n  }).catch((error) => {\r\n    console.warn('Stagewise toolbar could not be loaded:', error);\r\n  });\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals(); // Temporariamente desabilitado para debug\r\n"],"names":["Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","arguments","length","encodeURIComponent","i","isValidContainer","node","nodeType","getNearestMountedFiber","fiber","nearestMounted","alternate","return","flags","tag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","Error","findCurrentHostFiberImpl","child","sibling","assign","Object","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_ACTIVITY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","isArrayImpl","Array","isArray","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","index","createCursor","defaultValue","current","pop","cursor","push","value","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","prototype","scheduleCallback$3","unstable_scheduleCallback","cancelCallback$1","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority$1","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","Math","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","rootHasPendingCommit","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","currentTime","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$6","getBumpedLaneForHydrationByLane","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","parentNode","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","prefix","suffix","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","call","test","removeAttribute","prefix$8","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","describeBuiltInComponentFrame","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","set","Reflect","control","x$9","x$10","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","getStackByFiberInDevAndProd","workInProgress","info","message","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","this","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","document","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","options","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","a","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","b","flushSyncWork$1","getListener","canUseDOM","createElement","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$282","isSupported$jscomp$inline_417","element$jscomp$inline_418","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","parent","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","FiberNode","pendingProps","mode","elementType","refCleanup","ref","updateQueue","memoizedProps","subtreeFlags","deletions","createFiberImplClass","shouldConstruct","Component","isReactComponent","createWorkInProgress","firstContext","resetWorkInProgress","createFiberFromTypeAndProps","owner","fiberTag","hostContext","itemProp","precedence","rel","onLoad","onError","async","src","isHostHoistableType","createFiberFromFragment","elements","createFiberFromText","content","createFiberFromPortal","portal","pendingChildren","implementation","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldSetTextContent","getNextHydratable","isSingletonScope","previousHydratableOnEnteringScopedSingleton","resetHydrationState","upgradeHydrationErrorsToRecoverable","queuedErrors","workInProgressRootRecoverableErrors","apply","error","valueCursor","currentlyRenderingFiber$1","lastContextDependency","pushProvider","providerFiber","nextValue","popProvider","scheduleContextWorkOnParentPath","propagationRoot","propagateContextChanges","contexts","forcePropagateEntireTree","list","nextFiber","dependency","propagateParentContextChanges","isInsidePropagationBailout","currentParent","checkIfContextChanged","currentDependencies","memoizedValue","prepareToReadContext","readContext","readContextForConsumer","readContextDuringReconciliation","consumer","AbortControllerLocal","AbortController","signal","aborted","listener","abort","forEach","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","status","prevOnStartTransitionFinish","S","then","thenable","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","workInProgressRoot","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","SuspenseException","SuspenseyCommitException","SuspenseActionException","noopSuspenseyCommitThenable","isThenableResolved","noop$3","trackUsedThenable","thenableState","checkIfUseWrappedInAsyncCatch","reason","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","rejectedReason","hasForceUpdate","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","cloneUpdateQueue","createUpdate","payload","callback","enqueueUpdate","executionContext","entangleTransitions","queueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","suspendIfUpdateReadFromEntangledAsyncAction","processUpdateQueue","workInProgress$jscomp$0","instance$jscomp$0","pendingQueue","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","workInProgressRootRenderLanes","workInProgressRootSkippedLanes","callCallback","commitCallbacks","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","currentlyRenderingFiber","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter$1","thenableState$1","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","useMemoCache","size","map","array","basicStateReducer","state","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$32","revertLane","hasEagerState","eagerState","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffectImpl","subscribeToStore","bind","pushSimpleEffect","destroy","resource","updateStoreInstance","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$38","nextState","onActionSuccess","notifyActionListeners","last","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionStateActionEffect","rerenderActionState","create","createDeps","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","mountEffect","updateEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","updateImperativeHandle","concat","mountDebugValue","updateCallback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$41","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useFormState","useActionState","useOptimistic","useCacheRefresh","initialArg","init","identifierPrefix","booleanOrThenable","thenableIndexCounter","unwrapThenable","coerceRef","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","updateElement","updateFragment","updatePortal","fragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","reconcileChildFibers","mountChildFibers","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","isSuspenseInstanceFallback","revealOrder","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","enqueueSetState","_reactInternals","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$73","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","console","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$74","setTimeout","logCaughtError","boundary","onCaughtError","errorBoundary","e$75","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","bailoutOnAlreadyFinishedWork","updateMemoComponent","compare","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","markRef","replayFunctionComponent","updateClassComponent","contextType","updater","refs","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","id","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","primaryChildren","offscreenProps","_pendingMarkers","_retryCache","_transitions","scheduleSuspenseWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","crossOrigin","title","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","markUpdate","preloadResourceAndSuspendIfNeeded","loading","preloadResource","scheduleRetryEffect","retryQueue","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$113","bubbleProperties","completedWork","didBailout","newChildLanes","child$114","completeWork","pendingContext","createElementNS","innerHTML","removeChild","appendChild","autoFocus","createTextNode","cache$127","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","destroy_","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$143","commitHostMount","focus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$205","propKey$221","propKey$226","propKey$231","setPropOnCustomElement","propKey$236","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","_reactRootContainer","insertOrAppendPlacementNode","commitHostSingletonAcquisition","singleton","attributes","removeAttributeNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$142","commitSuspenseHydrationCallbacks","readyState","_reactRetry","registerSuspenseInstanceRetry","retryDehydratedSuspenseBoundary","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","prevHostParent","prevHostParentIsContainer","releaseSingletonInstance","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","property","httpEquiv","charSet","mountHoistable","acquireResource","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","wasHidden","prevOffscreenSubtreeIsHidden","recursivelyTraverseDisappearLayoutEffects","display","hostParentFiber","parent$144","parent$146","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","suspendedState","media","matchMedia","matches","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","pendingEffectsStatus","pendingEffectsRoot","pendingFinishedWork","pendingEffectsLanes","pendingEffectsRemainingLanes","pendingPassiveTransitions","pendingRecoverableErrors","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrentByScheduler","thrownValue$169","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","clearTimeout","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$4","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$2","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$167","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","flushPendingEffects","finishedLanes","remainingLanes","previouslyPendingLanes","index$5","hiddenUpdatesForLane","markRootFinished","callbackNode","callbackPriority","flushPassiveEffects","eventsEnabled","_enabled","selection","rangeCount","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","focusedElem","selectionRange","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","flushMutationEffects","flushLayoutEffects","flushSpawnedWork","rootMutationHasEffect","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","min","win","start$jscomp$0","end$jscomp$0","extend","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","rootHasLayoutEffect","releaseRootPooledCache","onCommitFiberRoot","onRecoverableError","recoverableError","wasDelayedCommit","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","scheduleMicrotask","processRootScheduleInImmediateTask","processRootScheduleInMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$174","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$3","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1528","eventName$jscomp$inline_1529","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$188","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","possiblePreambleContribution","depth","nextNode","nextNode$jscomp$0","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","preloadProps","styles$244","resource$245","integrity","hrefLang","referrerPolicy","rawProps","styleProps","instance$250","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1785","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$0","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2256","bundleType","rendererPackageName","currentDispatcherRef","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2257","isDisabled","supportsFiber","inject","exports","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","module","t","n","l","o","toStringTag","__esModule","default","s","FORCE_GLOBAL_TAG","GLOBAL_TAG","ENABLE_CALLBACK","emitter","ENABLE_ERROR","warn","ENABLE_INFO","w","ENABLE_WARN","ENABLE_DEBUG","debug","v","ENABLE_VERBOSE","IO_ERROR","DEMUX_ERROR","INIT_SEGMENT","MEDIA_SEGMENT","LOADING_COMPLETE","RECOVERED_EARLY_EOF","MEDIA_INFO","METADATA_ARRIVED","SCRIPTDATA_ARRIVED","TIMED_ID3_METADATA_ARRIVED","SCTE35_METADATA_ARRIVED","PES_PRIVATE_DATA_DESCRIPTOR","PES_PRIVATE_DATA_ARRIVED","STATISTICS_INFO","RECOMMEND_SEEKPOINT","kIdle","kConnecting","kBuffering","kError","kComplete","OK","EXCEPTION","HTTP_STATUS_CODE_INVALID","CONNECTING_TIMEOUT","EARLY_EOF","UNRECOVERABLE_EARLY_EOF","_type","_status","_needStash","_onContentLengthKnown","_onURLRedirect","_onDataArrival","_onError","_onComplete","isWorking","open","_message","self","navigator","userAgent","exec","browser","majorVersion","platform","major","parseInt","string","minor","build","chrome","opr","safari","webkit","rv","iemobile","msie","edge","msedge","opera","android","FORMAT_ERROR","FORMAT_UNSUPPORTED","CODEC_UNSUPPORTED","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","Number","once","removeListener","g","on","EventEmitter","_events","_eventsCount","_maxListeners","h","TypeError","_","defaultMaxListeners","u","newListener","warned","fired","wrapFn","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","addListener","prependListener","prependOnceListener","off","removeAllListeners","rawListeners","listenerCount","eventNames","dts","pts","duration","originalDts","isSyncPoint","fileposition","beginDts","endDts","beginPts","endPts","originalBeginDts","originalEndDts","syncPoints","firstSample","lastSample","appendSyncPoint","_list","clear","appendArray","getLastSyncPointBeforeDts","floor","_lastAppendLocation","isEmpty","_searchNearestSegmentBefore","_searchNearestSegmentAfter","append","getLastSegmentBefore","getLastSampleBefore","getLastSyncPointBefore","mimeType","hasAudio","hasVideo","audioCodec","videoCodec","audioDataRate","videoDataRate","audioSampleRate","audioChannelCount","fps","profile","level","refFrames","chromaFormat","sarNum","sarDen","metadata","segments","segmentCount","hasKeyframesIndex","keyframesIndex","isComplete","isSeekable","getNearestKeyframe","_search","times","milliseconds","filepositions","_notifyChange","getConfig","globalTag","forceGlobalTag","enableVerbose","enableDebug","enableInfo","enableWarn","enableError","enableCallback","applyConfig","registerListener","addLogListener","removeLogListener","ArrayBuffer","DataView","setInt16","Int16Array","parseScriptData","parseValue","parseObject","parseString","objectEnd","parseVariable","getUint16","Uint8Array","parseLongString","getUint32","parseDate","getFloat64","getInt16","getUint8","E","TAG","_buffer","_buffer_index","_total_bytes","byteLength","_total_bits","_current_word","_current_word_bits_left","_fillCurrentWord","subarray","buffer","readBits","readBool","readByte","_skipLeadingZero","readUEG","readSEG","_ebsp2rbsp","parseSPS","getProfileString","getLevelString","_skipScalingList","R","k","B","I","O","P","U","N","G","V","F","j","z","ceil","codec_mimetype","profile_idc","level_idc","profile_string","level_string","chroma_format_idc","bit_depth","bit_depth_luma","bit_depth_chroma","ref_frames","chroma_format","chroma_format_string","getChromaFormatString","frame_rate","fixed","fps_den","fps_num","sar_ratio","codec_size","present_size","toFixed","parseVPS","num_temporal_layers","temporal_id_nested","q","K","W","Y","Z","J","Q","$","ee","cpbcnt","te","ie","ne","re","general_level_idc","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility_flags_1","general_profile_compatibility_flags_2","general_profile_compatibility_flags_3","general_profile_compatibility_flags_4","general_constraint_indicator_flags_1","general_constraint_indicator_flags_2","general_constraint_indicator_flags_3","general_constraint_indicator_flags_4","general_constraint_indicator_flags_5","general_constraint_indicator_flags_6","min_spatial_segmentation_idc","constant_frame_rate","bit_depth_luma_minus8","bit_depth_chroma_minus8","parsePPS","parallelismType","_config","_onMediaInfo","_onMetaDataArrived","_onScriptDataArrived","_onTrackMetadata","_onDataAvailable","_dataOffset","dataOffset","_firstParse","_dispatch","_hasAudio","hasAudioTrack","_hasVideo","hasVideoTrack","_hasAudioFlagOverrided","_hasVideoFlagOverrided","_audioInitialMetadataDispatched","_videoInitialMetadataDispatched","_mediaInfo","_metadata","_audioMetadata","_videoMetadata","_naluLengthSize","_timestampBase","_timescale","_duration","_durationOverrided","_referenceFrameRate","_flvSoundRateTable","_mpegSamplingRates","_mpegAudioV10SampleRateTable","_mpegAudioV20SampleRateTable","_mpegAudioV25SampleRateTable","_mpegAudioL1BitRateTable","_mpegAudioL2BitRateTable","_mpegAudioL3BitRateTable","_videoTrack","sequenceNumber","samples","_audioTrack","_littleEndian","probe","consumed","bindDataSource","onDataArrival","parseChunks","resetMediaInfo","_isInitialMetadataDispatched","_parseAudioData","_parseVideoData","_parseScriptData","onMetaData","audiodatarate","videodatarate","framerate","keyframes","_parseKeyframesIndex","timescale","channelCount","_parseAACAudioData","packetType","config","samplingRate","codec","originalCodec","refSampleDuration","unit","_parseMP3AudioData","bitRate","_parseAACAudioSpecificConfig","_parseAVCVideoPacket","_parseHEVCVideoPacket","_parseAVCDecoderConfigurationRecord","_parseAVCVideoData","_parseHEVCDecoderConfigurationRecord","_parseHEVCVideoData","avcc","codecWidth","codecHeight","presentWidth","presentHeight","bitDepth","sarRatio","frameRate","hvcc","units","isKeyframe","cts","onMediaInfo","onMetaDataArrived","onTrackMetadata","onDataAvailable","onTimedID3Metadata","onSCTE35Metadata","onPESPrivateData","onPESPrivateDataDescriptor","program_pmt_pid","kMPEG1Audio","kMPEG2Audio","kPESPrivateData","kADTSAAC","kID3","kSCTE35","kH264","kH265","pid_stream_type","common_pids","h264","h265","adts_aac","pes_private_data_pids","timed_id3_pids","scte_35_pids","slices","total_length","expected_length","file_position","kUnspecified","kSliceNonIDR","kSliceDPA","kSliceDPB","kSliceDPC","kSliceIDR","kSliceSEI","kSliceSPS","kSlicePPS","kSliceAUD","kEndOfSequence","kEndOfStream","kFiller","kSPSExt","kReserved0","setUint32","current_startcode_offset_","eof_flag_","data_","findNextStartCodeOffset","readNextNaluPayload","kNull","kAACMain","kAAC_LC","kAAC_SSR","kAAC_LTP","kAAC_SBR","kAAC_Scalable","kLayer1","kLayer2","kLayer3","k96000Hz","k88200Hz","k64000Hz","k48000Hz","k44100Hz","k32000Hz","k24000Hz","k22050Hz","k16000Hz","k12000Hz","k11025Hz","k8000Hz","k7350Hz","current_syncword_offset_","findNextSyncwordOffset","readNextAACFrame","has_last_incomplete_data","audio_object_type","sampling_freq_index","sampling_frequency","channel_config","hasIncompleteData","getIncompleteData","sampling_rate","channel_count","original_codec_mimetype","kSpliceNull","kSpliceSchedule","kSpliceInsert","kTimeSignal","kBandwidthReservation","kPrivateCommand","time_specified_flag","pts_time","auto_return","component_tag","splice_time","utc_splice_time","splice_event_id","splice_event_cancel_indicator","out_of_network_indicator","program_splice_flag","duration_flag","component_count","components","break_duration","unique_program_id","avail_num","avails_expected","descriptor_tag","descriptor_length","identifier","provider_avail_id","preroll","dtmf_count","DTMF_char","pts_offset","segmentation_event_id","segmentation_event_cancel_indicator","program_segmentation_flag","segmentation_duration_flag","delivery_not_restricted_flag","web_delivery_allowed_flag","no_regional_blackout_flag","archive_allowed_flag","device_restrictions","segmentation_duration","segmentation_upid_type","segmentation_upid_length","segmentation_upid","segmentation_type_id","segment_num","segments_expected","sub_segment_num","sub_segments_expected","TAI_seconds","TAI_ns","UTC_offset","ISO_code","Bit_Stream_Mode","Num_Channels","Full_Srvc_Audio","audio_count","splice_count","splice_immediate_flag","private_data","table_id","section_syntax_indicator","private_indicator","section_length","protocol_version","encrypted_packet","encryption_algorithm","pts_adjustment","cw_index","tier","splice_command_length","splice_command_type","splice_command","descriptor_loop_length","splice_descriptors","E_CRC32","CRC32","pow","duraiton","kSliceIDR_W_RADL","kSliceIDR_N_LP","kSliceVPS","oe","first_parse_","media_info_","timescale_","duration_","current_pmt_pid_","program_pmt_map_","pes_slice_queues_","section_slice_queues_","video_metadata_","vps","sps","pps","details","audio_metadata_","aac_last_sample_pts_","aac_last_incomplete_data_","has_video_","has_audio_","video_init_segment_dispatched_","audio_init_segment_dispatched_","video_metadata_changed_","audio_metadata_changed_","video_track_","audio_track_","ts_packet_size_","ts_packet_size","sync_offset_","sync_offset","config_","ae","parseAdaptationField","pmt_","handleSectionSlice","pid","payload_unit_start_indicator","continuity_conunter","random_access_indicator","handlePESSlice","stream_type","dispatchAudioVideoMediaSegment","discontinuity_indicator","elementary_stream_priority_indicator","emitSectionSlices","clearSlices","emitPESSlices","parseSection","parsePES","parsePAT","parsePMT","parseSCTE35","parsePESPrivateDataPayload","parseAACPayload","parseTimedID3MetadataPayload","parseH264Payload","parseH265Payload","version_number","pat_","network_pid","JSON","stringify","current_program_","program_number","dispatchPESPrivateDataDescriptor","nearest_pts","detectVideoMetadataChange","dispatchVideoMediaSegment","dispatchVideoInitSegment","se","isInitSegmentDispatched","dispatchAudioMediaSegment","abs","dispatchAudioInitSegment","detectAudioMetadataChange","stream_id","len","de","types","avc1","avcC","btrt","dinf","dref","esds","ftyp","hdlr","hvc1","hvcC","mdat","mdhd","mdia","mfhd","minf","moof","moov","mp4a","mvex","mvhd","sdtp","stbl","stco","stsc","stsd","stsz","stts","tfdt","tfhd","traf","trak","trun","trex","tkhd","vmhd","smhd","constants","FTYP","STSD_PREFIX","STTS","STSC","STCO","STSZ","HDLR_VIDEO","HDLR_AUDIO","DREF","SMHD","VMHD","box","generateInitSegment","mp3","startsWith","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","he","_e","getSilentFrame","le","_isLive","isLive","_dtsBase","_dtsBaseInited","_audioDtsBase","_videoDtsBase","_audioNextDts","_videoNextDts","_audioStashedLastSample","_videoStashedLastSample","_audioMeta","_videoMeta","_audioSegmentInfoList","ue","_videoSegmentInfoList","_onInitSegment","_onMediaSegment","_forceFirstIDR","_fillSilentAfterSeek","_mp3UseMpegAudio","firefox","_fillAudioTimestampGap","fixAudioTimestampGap","remux","_onTrackMetadataReceived","insertDiscontinuity","seek","_calculateDtsBase","_remuxVideo","_remuxAudio","mediaDuration","getTimestampBase","flushStashedSamples","round","_mergeBoxes","sampleCount","timestampOffset","pe","_emitter","filesize","cors","withCredentials","_mediaDataSource","_currentSegmentIndex","timestampBase","_demuxer","_remuxer","_ioctl","_pendingSeekTime","_pendingResolveSeekPoint","_statisticsReporter","_disableStatisticsReporter","_loadSegment","_enableStatisticsReporter","ce","_onIOException","onSeeked","_onIOSeeked","onComplete","_onIOComplete","onRedirect","_onIORedirect","onRecoveredEarlyEof","_onIORecoveredEarlyEof","_onInitChunkArrival","stop","_internalAbort","pause","resume","isPaused","_searchSegmentIndexContains","_reportSegmentMediaInfo","_onDemuxException","_onTimedID3Metadata","_onSCTE35Metadata","_onPESPrivateDataDescriptor","_onPESPrivateData","onInitSegment","_onRemuxerInitSegmentArrival","onMediaSegment","_onRemuxerMediaSegmentArrival","overridedDuration","overridedHasAudio","overridedHasVideo","onScriptDataArrived","fe","setPrototypeOf","extraData","redirectedURL","msg","setInterval","_reportStatisticsInfo","statisticsInfoReportInterval","clearInterval","currentURL","hasRedirect","currentRedirectedURL","speed","currentSpeed","loaderType","currentSegmentIndex","totalSegmentCount","_firstCheckpoint","_lastCheckpoint","_intervalBytes","_totalBytes","_lastSecondBytes","performance","_now","addBytes","currentKBps","_seekHandler","_requestAbort","_abortController","_contentLength","_receivedLength","isSupported","fetch","ReadableStream","_dataSource","_range","reuseRedirectedURL","Headers","headers","credentials","cancel","ok","removeURLParameters","_pump","getReader","statusText","read","from","_xhr","XMLHttpRequest","responseType","onreadystatechange","onprogress","onloadend","_requestURL","_onReadyStateChange","_onProgress","_onLoadEnd","_onXhrError","setRequestHeader","send","responseURL","total","response","loaded","_chunkSizeKBList","_currentChunkSizeKB","_currentSpeedNormalized","_zeroSpeedChunkCount","_speedSampler","_waitForTotalLength","_totalLengthReceived","_currentRequestURL","_currentRedirectedURL","_currentRequestRange","_totalLength","_lastTimeLoaded","lastSecondKBps","_openSubRange","_internalOpen","to","_onLoad","_normalizeSpeed","_ws","WebSocket","binaryType","onopen","_onWebSocketOpen","onclose","_onWebSocketClose","onmessage","_onWebSocketMessage","_onWebSocketError","close","_dispatchArrayBuffer","Blob","FileReader","readAsArrayBuffer","_zeroStart","Range","_startName","_endName","substring","_extraData","_stashInitialSize","stashInitialSize","_stashUsed","_stashSize","_bufferSize","_stashBuffer","_stashByteStart","_enableStash","enableStashBuffer","_loader","_loaderClass","_isWebSocketURL","_refTotalLength","_fullRequestFlag","_currentRange","_redirectedURL","_speedNormalized","_speedNormalizeList","_isEarlyEofReconnecting","_paused","_resumeFrom","_onSeeked","_onRedirect","_onRecoveredEarlyEof","_selectSeekHandler","_selectLoader","_createLoader","seekType","rangeLoadZeroStart","seekParamStart","seekParamEnd","customSeekHandler","customLoader","needStashBuffer","onContentLengthKnown","onURLRedirect","_onLoaderChunkArrival","_onLoaderComplete","_onLoaderError","_internalSeek","_flushStashBuffer","updateUrl","_expandBuffer","_adjustStashSize","_dispatchChunks","install","__proto__","polyfill","ENTRY_MODULE","reduce","main","all","filter","bare","URL","webkitURL","mozURL","msURL","createObjectURL","Worker","objectURL","MutationObserver","WebKitMutationObserver","Uint8ClampedArray","importScripts","MessageChannel","_state","_result","nextTick","observe","characterData","port1","port2","postMessage","runOnLoop","runOnContext","_label","_onerror","_subscribers","_instanceConstructor","promise","_remaining","_enumerate","_eachEntry","_settledAt","_willSettleAt","finally","race","_setScheduler","_setAsap","_asap","cast","run","fun","env","argv","versions","binding","cwd","chdir","umask","logcat","cmd","param","enableWorker","liveBufferLatencyChasing","liveBufferLatencyMaxLatency","liveBufferLatencyMinRemain","lazyLoad","lazyLoadMaxDuration","lazyLoadRecoverDuration","deferLoadAfterSourceOpen","autoCleanupMaxBackwardDuration","autoCleanupMinBackwardDuration","accurateSeek","supportMSEH264Playback","MediaSource","isTypeSupported","supportMSEH265Playback","supportNetworkStreamIO","getNetworkLoaderTypeName","supportNativeMediaPlayback","videoElement","canPlayType","getFeatureList","msePlayback","mseLivePlayback","mseH265Playback","networkStreamIO","networkLoaderName","nativeMP4H264Playback","nativeMP4H265Playback","nativeWebmVP8Playback","nativeWebmVP9Playback","ERROR","_worker","_workerDestroying","_onWorkerMessage","onLoggingConfigChanged","_onLoggingConfigChanged","_controller","_onIOError","_onDemuxError","_onLoadingComplete","_onTimedID3MetadataArrived","_onSCTE35MetadataArrived","_onPESPrivateDataArrived","_onStatisticsInfo","_onRecommendSeekpoint","hasWorker","terminate","SOURCE_OPEN","UPDATE_END","BUFFER_FULL","autoCleanupSourceBuffer","onSourceOpen","_onSourceOpen","onSourceEnded","_onSourceEnded","onSourceClose","_onSourceClose","onSourceBufferError","_onSourceBufferError","onSourceBufferUpdateEnd","_onSourceBufferUpdateEnd","_mediaSource","_mediaSourceObjectURL","_mediaElement","_isBufferFull","_hasPendingEos","_requireSetMediaDuration","_pendingMediaDuration","_pendingSourceBufferInit","_mimeTypes","video","audio","_sourceBuffers","_lastInitSegments","_pendingSegments","_pendingRemoveRanges","_idrList","detachMediaElement","attachMediaElement","removeSourceBuffer","endOfStream","revokeObjectURL","appendInitSegment","addSourceBuffer","updating","_doAppendSegments","_updateMediaSourceDuration","appendMediaSegment","_needCleanupSourceBuffer","_doCleanupSourceBuffer","_hasPendingRemoveRanges","buffered","_doRemoveRanges","_hasPendingSegments","remove","appendBuffer","NETWORK_ERROR","MEDIA_ERROR","OTHER_ERROR","NETWORK_EXCEPTION","NETWORK_STATUS_CODE_INVALID","NETWORK_TIMEOUT","NETWORK_UNRECOVERABLE_EARLY_EOF","MEDIA_MSE_ERROR","MEDIA_FORMAT_ERROR","MEDIA_FORMAT_UNSUPPORTED","MEDIA_CODEC_UNSUPPORTED","onvLoadedMetadata","_onvLoadedMetadata","onvSeeking","_onvSeeking","onvCanPlay","_onvCanPlay","onvStalled","_onvStalled","onvProgress","_onvProgress","_requestSetTime","_seekpointRecord","_progressChecker","_msectl","_transmuxer","_mseSourceOpened","_hasPendingLoad","_receivedCanPlay","_statisticsInfo","_alwaysSeekKeyframe","unload","mediaInfo","statisticsInfo","_onmseUpdateEnd","_onmseBufferFull","load","_suspendTransmuxer","_fillStatisticsInfo","play","volume","playerType","HTMLVideoElement","getVideoPlaybackQuality","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","decodedFrames","droppedFrames","paused","_checkProgressAndResume","_isTimepointBuffered","_checkAndApplyUnbufferedSeekpoint","recordTime","_checkAndResumeStuckPlayback","seekPoint","HTMLAudioElement","videoWidth","videoHeight","createPlayer","BaseLoader","LoaderStatus","LoaderErrors","Events","ErrorTypes","ErrorDetails","MSEPlayer","NativePlayer","LoggingControl","ReactNoopUpdateQueue","isMounted","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","ReactElement","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","moduleObject","Children","forEachFunc","forEachContext","toArray","only","Fragment","Profiler","StrictMode","Suspense","__COMPILER_RUNTIME","cloneElement","childArray","createContext","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","checkDCE","aa","defineProperties","ba","global","ca","ea","fa","writable","ha","ia","ka","la","Yb","oa","na","pa","ra","sa","ta","ua","xa","xd","Gd","ya","za","Ca","Da","Ea","Fa","Ja","La","Ma","Na","Ka","Oa","Pa","Qa","Cd","Sa","seal","entries","values","Ra","max","Ua","execScript","Va","ag","og","Wa","exp","Xa","Ya","Za","$a","ab","bb","getBandwidthEstimate","fb","gb","hb","va","ib","xb","jb","kb","lb","mb","rb","decodeURI","decodeURIComponent","encodeURI","sb","nb","charAt","ob","pb","qb","lastIndexOf","substr","yb","maxAttempts","baseDelay","backoffFactor","fuzzFactor","timeout","Ab","severity","category","handled","Jd","Bb","Cb","Db","Fb","Gb","Hb","Ib","Bc","Vb","Jb","Kb","Lb","Nb","item","findIndex","Ob","Pb","ga","$b","sc","tickNow","tickAfter","tickEvery","Severity","RECOVERABLE","CRITICAL","Category","NETWORK","TEXT","MEDIA","MANIFEST","STREAMING","DRM","PLAYER","CAST","STORAGE","Code","UNSUPPORTED_SCHEME","BAD_HTTP_STATUS","HTTP_ERROR","TIMEOUT","MALFORMED_DATA_URI","UNKNOWN_DATA_URI_ENCODING","REQUEST_FILTER_ERROR","RESPONSE_FILTER_ERROR","MALFORMED_TEST_URI","UNEXPECTED_TEST_REQUEST","INVALID_TEXT_HEADER","INVALID_TEXT_CUE","UNABLE_TO_DETECT_ENCODING","BAD_ENCODING","INVALID_XML","INVALID_MP4_TTML","INVALID_MP4_VTT","UNABLE_TO_EXTRACT_CUE_START_TIME","BUFFER_READ_OUT_OF_BOUNDS","JS_INTEGER_OVERFLOW","EBML_OVERFLOW","EBML_BAD_FLOATING_POINT_SIZE","MP4_SIDX_WRONG_BOX_TYPE","MP4_SIDX_INVALID_TIMESCALE","MP4_SIDX_TYPE_NOT_SUPPORTED","WEBM_CUES_ELEMENT_MISSING","WEBM_EBML_HEADER_ELEMENT_MISSING","WEBM_SEGMENT_ELEMENT_MISSING","WEBM_INFO_ELEMENT_MISSING","WEBM_DURATION_ELEMENT_MISSING","WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING","WEBM_CUE_TIME_ELEMENT_MISSING","MEDIA_SOURCE_OPERATION_FAILED","MEDIA_SOURCE_OPERATION_THREW","VIDEO_ERROR","QUOTA_EXCEEDED_ERROR","TRANSMUXING_FAILED","UNABLE_TO_GUESS_MANIFEST_TYPE","DASH_INVALID_XML","DASH_NO_SEGMENT_INFO","DASH_EMPTY_ADAPTATION_SET","DASH_EMPTY_PERIOD","DASH_WEBM_MISSING_INIT","DASH_UNSUPPORTED_CONTAINER","DASH_PSSH_BAD_ENCODING","DASH_NO_COMMON_KEY_SYSTEM","DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED","DASH_CONFLICTING_KEY_IDS","UNPLAYABLE_PERIOD","RESTRICTIONS_CANNOT_BE_MET","NO_PERIODS","HLS_PLAYLIST_HEADER_MISSING","INVALID_HLS_TAG","HLS_INVALID_PLAYLIST_HIERARCHY","DASH_DUPLICATE_REPRESENTATION_ID","HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND","HLS_COULD_NOT_GUESS_MIME_TYPE","HLS_MASTER_PLAYLIST_NOT_PROVIDED","HLS_REQUIRED_ATTRIBUTE_MISSING","HLS_REQUIRED_TAG_MISSING","HLS_COULD_NOT_GUESS_CODECS","HLS_KEYFORMATS_NOT_SUPPORTED","DASH_UNSUPPORTED_XLINK_ACTUATE","DASH_XLINK_DEPTH_LIMIT","HLS_COULD_NOT_PARSE_SEGMENT_START_TIME","CONTENT_UNSUPPORTED_BY_BROWSER","CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM","HLS_AES_128_ENCRYPTION_NOT_SUPPORTED","INVALID_STREAMS_CHOSEN","NO_RECOGNIZED_KEY_SYSTEMS","REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE","FAILED_TO_CREATE_CDM","FAILED_TO_ATTACH_TO_VIDEO","INVALID_SERVER_CERTIFICATE","FAILED_TO_CREATE_SESSION","FAILED_TO_GENERATE_LICENSE_REQUEST","LICENSE_REQUEST_FAILED","LICENSE_RESPONSE_REJECTED","ENCRYPTED_CONTENT_WITHOUT_DRM_INFO","NO_LICENSE_SERVER_GIVEN","OFFLINE_SESSION_REMOVED","EXPIRED","LOAD_INTERRUPTED","OPERATION_ABORTED","NO_VIDEO_ELEMENT","CAST_API_UNAVAILABLE","NO_CAST_RECEIVERS","ALREADY_CASTING","UNEXPECTED_CAST_ERROR","CAST_CANCELED_BY_USER","CAST_CONNECTION_TIMED_OUT","CAST_RECEIVER_APP_UNAVAILABLE","CAST_RECEIVER_APP_ID_MISSING","STORAGE_NOT_SUPPORTED","INDEXED_DB_ERROR","DEPRECATED_OPERATION_ABORTED","REQUESTED_ITEM_NOT_FOUND","MALFORMED_OFFLINE_URI","CANNOT_STORE_LIVE_OFFLINE","STORE_ALREADY_IN_PROGRESS","NO_INIT_DATA_FOR_OFFLINE","LOCAL_PLAYER_INSTANCE_REQUIRED","NEW_KEY_OPERATION_NOT_SUPPORTED","KEY_NOT_FOUND","MISSING_STORAGE_CELL","failed","completed","notAbortable","chain","stopImmediatePropagation","getAll","handleEvent","Qb","SEGMENT","LICENSE","APP","TIMING","RequestType","PluginPriority","FALLBACK","PREFERRED","APPLICATION","Rb","Sb","zf","Tb","uris","allowCrossSiteCredentials","retryParameters","licenseRequestType","Xb","protocol","timeMs","Ze","Ub","registerScheme","unregisterScheme","Bf","registerRequestFilter","cg","unregisterRequestFilter","we","clearAllRequestFilters","Cf","registerResponseFilter","dg","unregisterResponseFilter","xe","clearAllResponseFilters","request","ed","Wb","fromCache","NumBytesRemainingClass","Zb","ac","bc","cc","fc","ec","dc","PendingRequest","release","listen","da","listenOnce","unlisten","removeAll","hc","ic","jc","kc","nc","mc","oc","pc","tc","rc","wc","xc","yc","Uint16Array","zc","Ac","unescape","setUint16","Cc","Dc","btoa","Ec","atob","Fc","Gc","Hc","Ic","Jc","every","Kc","ma","Xc","expiration","onExpirationUpdated","sessionId","Lc","Qc","Pc","some","drmInfos","servers","keySystem","licenseServerUri","distinctiveIdentifierRequired","persistentStateRequired","audioRobustness","videoRobustness","serverCertificate","initData","keyIds","Tc","clearKeys","kty","kid","kids","initDataType","Uc","Vc","advanced","audioCapabilities","videoCapabilities","distinctiveIdentifier","persistentState","sessionTypes","label","codecs","robustness","contentType","Wc","Sc","Yc","setServerCertificate","Zc","cd","bd","$c","dd","gc","requestMediaKeySystemAccess","getConfiguration","keyId","fd","createMediaKeys","createSession","Rd","Pd","gd","generateRequest","errorCode","systemCode","messageType","individualizationServer","DOMParser","parseFromString","hd","parse","ckc","jd","onEvent","kd","md","nd","encrypted","od","__platform__","pd","Nc","setMediaKeys","Mc","configure","delayLicenseRequestUntilPlayed","keyStatuses","ld","qd","muxjs","mp4","CaptionParser","rd","sd","td","ud","vd","videoTrackIds","captions","clearParsedCaptions","resetCaptionStream","ye","Ga","yd","zd","Ad","qa","kg","Bd","Transmuxer","keepOriginalTimestamps","Dd","Ed","startTime","direction","Hd","endTime","region","Id","position","positionAlign","textAlign","Kd","writingMode","Ld","lineInterpretation","Md","line","lineHeight","lineAlign","Nd","displayAlign","Od","fontSize","backgroundImage","backgroundColor","fontWeight","fontStyle","Qd","fontFamily","textDecoration","wrapLine","dispose","initSegment","LEFT","RIGHT","CENTER","AUTO","START","END","Sd","BEFORE","AFTER","HORIZONTAL_LEFT_TO_RIGHT","HORIZONTAL_RIGHT_TO_LEFT","HORIZONTAL_TOP_TO_BOTTOM","VERTICAL_LEFT_TO_RIGHT","VERTICAL_RIGHT_TO_LEFT","LINE_NUMBER","PERCENTAGE","Td","NORMAL","BOLD","Ud","ITALIC","OBLIQUE","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","viewportAnchorUnits","widthUnits","heightUnits","Vd","scroll","Wd","UNDERLINE","LINE_THROUGH","OVERLINE","PX","LINES","Xd","scrollMode","NONE","UP","Yd","Zd","$d","be","stream","parseMedia","periodStart","segmentStart","segmentEnd","qe","appendCues","setSelectedClosedCaptionId","lc","ge","ke","parseInit","flush","Fd","me","language","Tf","ub","Ce","wa","appendWindowStart","appendWindowEnd","Sf","Pf","ve","minWidth","maxWidth","minHeight","maxHeight","minPixels","maxPixels","bandwidth","minBandwidth","maxBandwidth","allowedByApplication","variants","textStreams","ze","kind","roles","active","primary","audioRoles","videoId","audioId","channelsCount","audioBandwidth","videoBandwidth","originalVideoId","originalAudioId","originalTextId","originalId","Ae","Be","__shaka_id","De","Ee","allowedByKeySystem","Ge","He","Ie","Je","Le","sort","Me","Ne","Oe","Pe","Qe","chooseVariant","restrictions","defaultBandwidthEstimate","bandwidthUpgradeTarget","bandwidthDowngradeTarget","enable","disable","segmentDownloaded","switchInterval","setVariants","Re","Se","Te","Ue","Ve","We","getAssetUri","getAudioLanguages","getAudioLanguagesAndRoles","getBufferedInfo","getExpiration","getPlaybackRate","getTextLanguages","getTextLanguagesAndRoles","getTextTracks","getStats","getVariantTracks","isAudioOnly","isBuffering","isInProgress","isTextTrackVisible","seekRange","usingEmbeddedTextTrack","getLoadMode","Xe","getPlayheadTimeAsDate","getPresentationStartTimeAsDate","Ye","$e","af","bf","Event","TimeRanges","__type__","isFinite","cf","NaN","df","ef","kf","player","ff","gf","jf","removeUpdateListener","removeMessageListener","hf","sendMessage","lf","mf","nf","of","pf","ig","yf","hg","jg","qf","playerAfterLoad","manifest","ended","autoplay","rf","sf","receiver","CastReceiverManager","getInstance","onSenderConnected","onSenderDisconnected","onSystemVolumeChanged","getCastMessageBus","onMessage","canDisplayType","uf","tf","vf","wf","getSystemVolume","contentId","streamType","getCastChannel","broadcast","playbackRate","Af","mediaSessionId","playerState","IDLE","je","supportedMediaCommands","requestId","isAvailable","__onGCastApiAvailable","SessionRequest","ApiConfig","initialize","SessionStatus","STOPPED","appData","requestSession","Eb","Ef","targetName","addUpdateListener","addMessageListener","initState","methodName","args","friendlyName","getVideo","getPlayer","canCast","isCasting","receiverName","setAppData","$f","suggestDisconnect","changeReceiverId","forceDisconnect","isConnected","isIdle","getSenders","xf","setSystemVolumeLevel","setSystemVolumeMuted","senderId","resumeState","customData","childNodes","Element","localName","getAttributeNS","hasAttributeNS","Node","TEXT_NODE","CDATA_SECTION_NODE","Ba","vb","parseFloat","Jf","Df","If","pg","Gf","Hf","Kf","RepresentationID","Bandwidth","Time","Lf","Mf","Nf","eg","ja","removeAttributeNS","Of","Qf","Rf","createUris","getStartByte","getEndByte","getPosition","getStartTime","getEndTime","bg","Uf","reader","parser","partialOkay","Vf","Wf","Xf","Yf","Mb","Zf","byteOffset","fg","gg","mg","presentationTimeline","createSegmentIndex","findSegmentPosition","find","getSegmentReference","lg","ng","qg","initSegmentReference","rg","tg","sg","Rc","ug","vg","Endianness","hasMoreData","getLength","readUint8","readUint16","readUint32","getInt32","readInt32","readUint64","readBytes","skip","rewind","ad","readTerminatedString","fullBox","parseNext","sampleDescription","allData","typeToString","merge","evict","getFloat32","wb","wg","xg","zg","Ag","yg","networkingEngine","uri","dash","xlinkFailGracefully","Aa","Ta","cb","ignoreMinBufferTime","defaultPresentationDelay","autoCorrectDrift","uc","Ha","vc","eb","Ia","wd","db","Dg","filterNewPeriod","periods","filterAllPeriods","availabilityWindowOverride","offlineSessionIds","minBufferTime","scheme","clockSyncUri","Lg","Eg","Cg","Bg","Fg","streams","trickModeVideo","Gg","Hg","emsgSchemeIdUris","Kg","Ig","Mg","Ng","Og","Pg","Qg","mpd","m3u8","ism","getExtension","getDuration","setDuration","getPresentationStartTime","setClockOffset","setStatic","setSegmentAvailabilityDuration","setDelay","Fe","getDelay","notifySegments","notifyMinSegmentStartTime","notifyMaxSegmentDuration","getSegmentAvailabilityStart","setUserSeekStart","getSegmentAvailabilityEnd","getSafeSeekRangeStart","getSeekRangeStart","getSeekRangeEnd","usingPresentationStartTime","customScheme","ignoreDrmInfo","Jg","Ff","presentationTimeOffset","closedCaptions","schemeIdUri","eventElement","onTimelineRegionAdded","Rg","Oc","Sg","Tg","Ug","lastIndex","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","dh","eh","ih","hh","fh","jh","kh","vh","xh","th","nh","yh","tb","zh","Eh","Ah","sh","Bh","Nh","Ih","Ch","Dh","Fh","mh","Hh","Jh","Kh","Lh","Gh","Mh","oh","ph","rh","uh","wh","qh","lh","gh","m4s","m4i","m4a","ts","m4v","vtt","ttml","Oh","Ph","Qh","Rh","variant","Sh","Th","Uh","Vh","Wh","Xh","$h","ai","bi","Yh","Zh","ci","di","fi","gi","hi","seeking","smallGapLimit","gapSize","jumpLargeGaps","ii","ji","ki","li","mi","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","stallEnabled","stallSkip","stallThreshold","ei","zi","Ai","getTime","Di","Ci","Bi","durationBackoff","rebufferingGoal","safeSeekOffset","Ei","Gi","Hi","Ii","Ji","Li","Pi","Qi","Ri","Si","Ti","isTextVisible","alwaysStreamText","Ni","Ui","Vi","Wi","Xi","Yi","ignoreTextStreamFailures","Zi","$i","zb","cj","aj","Mi","bj","Oi","forceTransmuxTS","ej","fj","gj","kj","bufferingGoal","oj","nj","bufferBehind","sj","pj","qj","rj","ij","lj","hj","tj","jj","mj","failureCallback","uj","vj","wj","onabort","getAllResponseHeaders","ontimeout","lengthComputable","xj","zj","Aj","yj","Bj","Dj","objectStore","oncomplete","Ej","openCursor","onsuccess","Fj","Gj","Hj","Ij","transaction","Jj","Kj","Oj","getCells","Rj","Lj","presentationTimeDelta","eventDuration","messageData","enqueue","arrayBuffer","store","erase","Sj","Tj","Uj","Vj","Xj","originalManifestUri","Yj","sessionIds","drmInfo","appMetadata","variantIds","Zj","ak","bk","initSegmentKey","ck","dataKey","Wj","dk","ek","fk","gk","hk","jk","kk","lk","nk","pk","qk","rk","sk","tk","uk","vk","licenseUri","wk","xk","handleError","Ck","zk","Bk","Ak","Dk","textTracks","addTextTrack","Fk","VTTCue","align","vertical","snapToLines","Ek","cues","removeCue","Gk","Hk","Ik","Jk","connection","downlink","saveData","startAtSegmentBoundary","trackSelectionCallback","progressCallback","usePersistentLicense","drm","streaming","offline","abrFactory","abr","enabled","preferredAudioLanguage","preferredTextLanguage","preferredVariantRole","preferredTextRole","preferredAudioChannelCount","playRangeStart","playRangeEnd","textDisplayFactory","Kk","Lk","Mk","Nk","timestamp","Ok","Qk","Rk","Sk","Tk","Uk","ll","Vk","Wk","Xk","Yk","Fi","nl","ol","pl","Zk","ql","rl","$k","sl","tl","ul","vl","wl","dj","xl","ni","El","Ki","yl","zl","Al","Bl","Cl","Fl","Dl","Gl","al","bl","audioTracks","Hl","HTMLMediaElement","HAVE_CURRENT_DATA","cl","dl","hasFixedKeySpace","addSegments","removeSegments","getSegments","addManifests","updateManifestExpiration","put","removeManifests","getManifests","getAllManifests","indexedDB","objectStoreNames","onupgradeneeded","createObjectStore","autoIncrement","getEmeSessionCell","deleteDatabase","onblocked","ik","mk","addCue","setTextVisibility","mergeConfigObjects","el","fl","gl","hl","ml","Il","Jl","Kl","fromAdaptation","Pl","Xl","Sl","Tl","Ql","Rl","buffering","Yl","Wl","msExtendedCode","Ke","hasAppRestrictions","missingKeys","restrictedKeyStatuses","Vl","Ul","role","Ll","il","jl","registerSupportPlugin","isBrowserSupported","MediaKeys","MediaKeySystemAccess","probeSupport","attach","detach","webm","aac","flac","vendor","kl","resetConfiguration","getMediaElement","getNetworkingEngine","getManifestUri","videoTracks","seekable","trickPlay","cancelTrickPlay","Ml","Nl","Ol","selectTextTrack","selectEmbeddedTextTrack","selectVariantTrack","selectAudioLanguage","selectTextLanguage","setTextTrackVisibility","getStartDate","streamBandwidth","estimatedBandwidth","loadLatency","playTime","pauseTime","bufferingTime","switchHistory","stateHistory","Pk","setMaxHardwareResolution","retryStreaming","getManifest","getManifestParserFactory","am","$l","offlineUri","tracks","bm","dm","em","im","jm","km","mm","lm","nm","pm","Dm","Bm","Qj","Em","Cm","Fm","Km","Lm","cm","um","sm","qm","Im","Mm","LoadMode","DESTROYED","NOT_LOADED","MEDIA_SOURCE","SRC_EQUALS","support","tm","vm","fm","gm","hm","om","wm","path","Mj","Zl","Jm","zm","Cj","xm","rm","getStoreInProgress","Am","Pj","qc","removeEmeSessions","Nj","deleteAll","Nm","jn","vn","Om","Pm","createEvent","initEvent","Qm","HTMLInputElement","originalAddEventListener","Rm","Um","mediaSource_","sourceBuffers","Vm","Zm","$m","initDataTypes","WebKitMediaKeys","DOMException","NOT_SUPPORTED_ERR","bn","mediaKeys","cn","an","en","webkitSetMediaKeys","dn","closed","hn","gn","kn","ln","mn","MSMediaKeys","pn","nn","rn","msSetMediaKeys","qn","sn","initCustomEvent","un","tn","wn","xn","yn","zn","Document","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","exitFullscreen","mozCancelFullScreen","msExitFullscreen","webkitExitFullscreen","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","mozFullScreenEnabled","msFullscreenEnabled","webkitSupportsFullscreen","webkitFullscreenEnabled","languages","eotf","Ym","appVersion","Wm","Tm","SourceBuffer","Sm","Xm","WebKitMediaKeyError","MEDIA_KEYERR_OUTPUT","MEDIA_KEYERR_HARDWARECHANGE","MSMediaKeyError","MS_MEDIA_KEYERR_OUTPUT","MS_MEDIA_KEYERR_HARDWARECHANGE","Mn","An","Bn","Cn","Dn","En","Fn","Gn","In","Hn","Kn","Ln","Jn","Nn","webkitPresentationMode","pictureInPictureElement","On","webkitSupportsPresentationMode","webkitSetPresentationMode","Pn","Qn","corruptedVideoFrames","creationTime","totalFrameDelay","Rn","TextTrackCue","Sn","Tn","MediaKeyError","webkitGenerateKeyRequest","generateKeyRequest","requestPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","Un","Vn","Wn","Xn","Yn","Zn","$n","ao","bo","co","eo","fo","go","ho","center","right","io","ELEMENT_NODE","jo","ko","lo","no","oo","po","mo","qo","ro","so","uo","vo","wo","xo","yo","sampleSize","exportTo","innerGlobal","shaka","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","nonce","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","heap","parentIndex","peek","first","halfLength","leftIndex","rightIndex","diff","sortIndex","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","localClearTimeout","localSetImmediate","setImmediate","advanceTimers","timer","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","channel","port","ms","unstable_Profiling","task","unstable_forceFrameRate","unstable_next","eventHandler","unstable_runWithPriority","delay","unstable_wrapCallback","parentPriorityLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","definition","globalThis","obj","prop","padStart","targetLength","padString","str","padLength","pad","repeatCount","padEnd","valueToFind","fromIndex","predicate","thisArg","searchString","ownProps","resArray","padNumber","num","formatEpisode","season","episode","scrollTo","customElements","_typeof","toPropertyKey","toPrimitive","_defineProperty","_objectSpread2","getOwnPropertyDescriptors","arrayIncludes","arrayFind","arrayFindIndex","stringIncludes","stringStartsWith","stringEndsWith","objectEntries","objectValues","_ref","onLogin","setEmail","setPassword","handleContinue","handleKeyPress","_jsxs","className","_jsx","alt","onChange","placeholder","onKeyPress","API_BASE_URL","API_CREDENTIALS","API_ENDPOINTS","vodCategories","seriesCategories","liveCategories","lancamentos","telenovelas","classicos","buildApiUrl","categoryId","fetchApiData","json","iptvApi","getVodCategories","getSeriesCategories","getLiveCategories","getVodStreams","getSeries","getLiveStreams","getLancamentos","getTelenovelas","getClassicos","query","safeScrollTo","safeScrollIntoView","scrollIntoView","rect","getBoundingClientRect","pageYOffset","innerHeight","behavior","fallbackError","scrollToElementInCarousel","elementWidth","offsetWidth","containerWidth","offsetLeft","onMenu","menuFocus","shelfFocus","itemFocus","setLancamentos","setTelenovelas","setClassicos","setLoading","setError","featuredContent","setFeaturedContent","previewContent","setPreviewContent","showPreview","setShowPreview","previewTimeoutRef","shelfRefs","itemRefs","heroButtonRefs","lancamentosData","telenovelaData","classicosData","lancamentosFiltered","telenovelaFiltered","classicosFiltered","featured","_objectSpread","loadHomeData","shelves","items","emptyMessage","block","currentShelfRef","currentItemRef","shelfContainer","itemRect","containerRect","shelfRect","windowHeight","bottom","handleItemBlur","handleItemClick","playEvent","CustomEvent","streamUrl","series_id","streamInfo","poster","stream_icon","cover","handleFeaturedPlay","handleFeaturedInfo","seriesDetailsEvent","seriesData","handleHeroButtonClick","buttonIndex","reload","rating","plot","shelf","shelfIndex","itemIndex","isFocused","onMouseEnter","handleItemFocus","onMouseLeave","episode_run_time","menuItems","icon","currentSection","onSectionChange","idx","sectionId","isActive","categories","setCategories","channels","setChannels","selectedCategory","setSelectedCategory","channelsLoading","setChannelsLoading","focusArea","setFocusArea","categoryFocus","setCategoryFocus","channelFocus","setChannelFocus","currentPage","setCurrentPage","ITEMS_PER_PAGE","categoriesRef","channelsRef","containerRef","loadLiveCategories","category_id","loadLiveChannels","getCurrentPageChannels","startIndex","totalPages","currentPageChannels","handleChannelSelect","_categories$find","cat","category_name","description","handleCategoryClick","categoryIndex","classList","handleCategoriesNavigation","backEvent","selectedCat","handleChannelsNavigationInternal","currentPageChannelsCount","newFocus","newFocusAttempt","lastPageStartIndex","previousPageChannelsCount","selectedIndex","currentCol","GRID_COLUMNS","currentRow","handleChannelsNavigation","handleImageError","_Fragment","movie","onBack","focusedElement","setFocusedElement","isFavorite","setIsFavorite","isTizenTV","tizen","isDevelopment","hostname","handleAction","year","releasedate","toggleFavorite","favorites","localStorage","getItem","movieKey","addedAt","toISOString","setItem","handleActionsNavigation","handleMovieDetailsNavigation","movies","setMovies","moviesLoading","setMoviesLoading","movieFocus","setMovieFocus","previewMovie","setPreviewMovie","moviesRef","loadVODCategories","loadVOD","getCurrentPageMovies","currentPageMovies","handleMovieSelect","releaseDate","getFullYear","forceTizenPlayer","preventBrowserRedirect","useInternalPlayer","handleMoviePreview","categoryInfo","movieWithCategory","previewActiveEvent","handleMoviesNavigationInternal","currentPageMoviesCount","previousPageMoviesCount","handleMoviesNavigation","MoviePreview","closePreview","_series$backdrop_path","series","seasons","setSeasons","episodes","setEpisodes","selectedSeason","setSelectedSeason","selectedEpisode","setSelectedEpisode","seasonFocus","setSeasonFocus","episodeFocus","setEpisodeFocus","episodesAreaExpanded","setEpisodesAreaExpanded","actionButtonsRef","seasonElementsRef","episodeElementsRef","scrollEpisodeIntoView","parentElement","loadEpisodes","seasonNumber","selectSeason","seasonIndex","season_number","playEpisode","_episode$info","episode_num","loadFirstEpisode","firstSeason","firstEpisode","seriesKey","loadSeriesInfo","handleSeasonsNavigation","handleEpisodesNavigation","handleSeriesDetailsNavigation","backdrop_path","_episode$info2","movie_image","setSeries","seriesLoading","setSeriesLoading","seriesFocus","setSeriesFocus","seriesRef","loadSeries","loadSeriesCategories","handleSeriesDetails","seriesWithCategory","showDetailsEvent","handleSeriesSelect","_firstEpisode$info","_categories$find2","getCurrentPageSeries","currentPageSeries","handleSeriesNavigationInternal","currentPageSeriesCount","handleSeriesNavigation","searchQuery","setSearchQuery","searchResults","setSearchResults","activeSection","setActiveSection","selectedKey","setSelectedKey","col","resultFocus","setResultFocus","section","keyboardRef","resultsRef","keyboardLayout","handleResultClick","fetchAllChannels","categoriesResponse","channelsPromises","res","acc","val","fetchAllMovies","moviesPromises","fetchAllSeries","seriesPromises","performSearch","channelsData","moviesData","filteredChannels","filteredMovies","filteredSeries","serie","handleKeyboardNavigation","maxRows","maxCols","newRow","newMaxCols","selectedKeyValue","handleResultsNavigation","sections","currentSectionIndex","currentResults","prevSection","prevSectionLength","nextSection","selectedItem","handleSearchNavigation","updateFocusVisual","keyboardKeys","keyIndex","sectionResults","rowIndex","colIndex","installAll","_streamInfo$currentPr","_streamInfo$currentPr2","_streamInfo$nextProgr","_streamInfo$nextProgr2","videoRef","playerRef","initializingRef","errorTimeoutRef","previousStreamUrlRef","blobUrlRef","controlsTimeoutRef","isLoading","setIsLoading","loadingMessage","setLoadingMessage","loadingProgress","setLoadingProgress","isPlaying","setIsPlaying","setPlayerType","isControlsVisible","setIsControlsVisible","setCurrentTime","dateTime","setDateTime","clearTimeouts","initializeIfNeeded","analysis","original","domain","hasToken","needsHttps","suggestions","alternatives","urlObj","searchParams","urlWithoutToken","analyzeAndFixUrl","cleanupPlayer","detectedPlayerType","detectPlayerType","initShakaPlayer","initMpegtsVodPlayer","initMpegtsLivePlayer","urlToTry","initHtml5PlayerDirect","initPlayer","handleLoadStart","handleLoadedData","handleCanPlay","handlePlaying","errorDetails","playError","mediaDataSource","playerConfig","mpegts","errorType","errorDetail","isLoaded","handleBack","preventRedirect","originalWindowOpen","preventWindowOpen","formatTime","timeInSeconds","hours","minutes","seconds","showControls","togglePlayPause","handleSeek","forward","seekTime","newTime","handleTimeUpdate","handleDurationChange","handlePlay","handlePause","handlePlayerNavigation","handleInteraction","autoPlay","playsInline","controls","logo","currentProgram","toLocaleDateString","toLocaleTimeString","hour","minute","second","nextProgram","viewBox","fill","background","retryPlaybackSimple","SECTIONS","setCurrentSection","setMenuFocus","setShelfFocus","setItemFocus","setOnMenu","playerData","setPlayerData","selectedSeriesData","setSelectedSeriesData","sectionHistory","setSectionHistory","moviePreviewActive","setMoviePreviewActive","navigateToSection","newSection","navigateBack","previousSection","tvinputdevice","registerKey","handleKeyDown","movieDetailsEvent","selectedSection","heroButtonEvent","channelsEvent","moviesEvent","seriesEvent","searchEvent","handleBackFromPlayer","playerEvent","handleLogin","handlePlayContent","tizenStreamInfo","preferredPlayer","environment","handleShowSeriesDetails","handleBackToSidebar","handleMoviePreviewActive","handleBackFromSeriesDetails","showSidebar","Sidebar","renderCurrentSection","LoginScreen","Home","Channels","Movies","Series","SeriesDetailsPage","Search","VideoPlayer","Boolean","getElementById","App","serviceWorker","ready","registration","unregister"],"sourceRoot":""}